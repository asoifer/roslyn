// Licensed to the .NET Foundation under one or more agreements.
// The .NET Foundation licenses this file to you under the MIT license.
// See the LICENSE file in the project root for more information.

#nullable disable

using Microsoft.CodeAnalysis.CSharp.Symbols;
using Microsoft.CodeAnalysis.CSharp.Syntax;
using Microsoft.CodeAnalysis.PooledObjects;
using Microsoft.CodeAnalysis.Text;
using Roslyn.Utilities;
using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Diagnostics;
using System.Linq;
using System.Reflection;

namespace Microsoft.CodeAnalysis.CSharp
{
    internal partial class Binder
    {
        internal bool HasThis(bool isExplicit, out bool inStaticContext)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10306, 1297, 2534);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 1409, 1555);

                var
                memberOpt = (DynAbs.Tracing.TraceSender.Conditional_F1(10306, 1425, 1462) || ((f_10306_1425_1454(this) != null && DynAbs.Tracing.TraceSender.Conditional_F2(10306, 1482, 1539)) || DynAbs.Tracing.TraceSender.Conditional_F3(10306, 1542, 1554))) ? f_10306_1482_1539(f_10306_1482_1511(this)) : (Symbol)null
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 1569, 1813) || true) && (f_10306_1573_1592_M(DynAbs.Tracing.TraceSender.TraceConditionalAccessExpression(memberOpt, 10306, 1573, 1592)?.IsStatic) == true)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 1569, 1813);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 1634, 1767);

                    inStaticContext = f_10306_1652_1666(memberOpt) == SymbolKind.Field || (DynAbs.Tracing.TraceSender.Expression_False(10306, 1652, 1725) || f_10306_1690_1704(memberOpt) == SymbolKind.Method) || (DynAbs.Tracing.TraceSender.Expression_False(10306, 1652, 1766) || f_10306_1729_1743(memberOpt) == SymbolKind.Property);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 1785, 1798);

                    return false;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 1569, 1813);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 1829, 1853);

                inStaticContext = false;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 1869, 1982) || true) && (f_10306_1873_1897() || (DynAbs.Tracing.TraceSender.Expression_False(10306, 1873, 1920) || f_10306_1901_1920()))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 1869, 1982);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 1954, 1967);

                    return false;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 1869, 1982);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 1998, 2045);

                var
                containingType = f_10306_2019_2044_M(DynAbs.Tracing.TraceSender.TraceConditionalAccessExpression(memberOpt, 10306, 2019, 2044)?.ContainingType)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 2059, 2152);

                bool
                inTopLevelScriptMember = (object)containingType != null && (DynAbs.Tracing.TraceSender.Expression_True(10306, 2089, 2151) && f_10306_2123_2151(containingType))
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 2273, 2384) || true) && (f_10306_2277_2295() && (DynAbs.Tracing.TraceSender.Expression_True(10306, 2277, 2322) && !inTopLevelScriptMember))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 2273, 2384);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 2356, 2369);

                    return false;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 2273, 2384);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 2477, 2523);

                return !inTopLevelScriptMember || (DynAbs.Tracing.TraceSender.Expression_False(10306, 2484, 2522) || !isExplicit);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10306, 1297, 2534);

                Microsoft.CodeAnalysis.CSharp.Symbol?
                f_10306_1425_1454(Microsoft.CodeAnalysis.CSharp.Binder
                this_param)
                {
                    var return_v = this_param.ContainingMemberOrLambda;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 1425, 1454);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbol
                f_10306_1482_1511(Microsoft.CodeAnalysis.CSharp.Binder
                this_param)
                {
                    var return_v = this_param.ContainingMemberOrLambda;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 1482, 1511);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbol?
                f_10306_1482_1539(Microsoft.CodeAnalysis.CSharp.Symbol
                containingMember)
                {
                    var return_v = containingMember.ContainingNonLambdaMember();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 1482, 1539);
                    return return_v;
                }


                bool?
                f_10306_1573_1592_M(bool?
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 1573, 1592);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SymbolKind
                f_10306_1652_1666(Microsoft.CodeAnalysis.CSharp.Symbol
                this_param)
                {
                    var return_v = this_param.Kind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 1652, 1666);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SymbolKind
                f_10306_1690_1704(Microsoft.CodeAnalysis.CSharp.Symbol
                this_param)
                {
                    var return_v = this_param.Kind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 1690, 1704);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SymbolKind
                f_10306_1729_1743(Microsoft.CodeAnalysis.CSharp.Symbol
                this_param)
                {
                    var return_v = this_param.Kind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 1729, 1743);
                    return return_v;
                }


                bool
                f_10306_1873_1897()
                {
                    var return_v = InConstructorInitializer;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 1873, 1897);
                    return return_v;
                }


                bool
                f_10306_1901_1920()
                {
                    var return_v = InAttributeArgument;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 1901, 1920);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol?
                f_10306_2019_2044_M(Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol?
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 2019, 2044);
                    return return_v;
                }


                bool
                f_10306_2123_2151(Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                this_param)
                {
                    var return_v = this_param.IsScriptClass;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 2123, 2151);
                    return return_v;
                }


                bool
                f_10306_2277_2295()
                {
                    var return_v = InFieldInitializer;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 2277, 2295);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 1297, 2534);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 1297, 2534);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        internal bool InFieldInitializer
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(10306, 2603, 2668);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 2609, 2666);

                    return f_10306_2616_2665(this.Flags, BinderFlags.FieldInitializer);
                    DynAbs.Tracing.TraceSender.TraceExitMethod(10306, 2603, 2668);

                    bool
                    f_10306_2616_2665(Microsoft.CodeAnalysis.CSharp.BinderFlags
                    self, Microsoft.CodeAnalysis.CSharp.BinderFlags
                    other)
                    {
                        var return_v = self.Includes(other);
                        DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 2616, 2665);
                        return return_v;
                    }

                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 2546, 2679);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 2546, 2679);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        internal bool InParameterDefaultValue
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(10306, 2753, 2823);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 2759, 2821);

                    return f_10306_2766_2820(this.Flags, BinderFlags.ParameterDefaultValue);
                    DynAbs.Tracing.TraceSender.TraceExitMethod(10306, 2753, 2823);

                    bool
                    f_10306_2766_2820(Microsoft.CodeAnalysis.CSharp.BinderFlags
                    self, Microsoft.CodeAnalysis.CSharp.BinderFlags
                    other)
                    {
                        var return_v = self.Includes(other);
                        DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 2766, 2820);
                        return return_v;
                    }

                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 2691, 2834);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 2691, 2834);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        protected bool InConstructorInitializer
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(10306, 2910, 2981);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 2916, 2979);

                    return f_10306_2923_2978(this.Flags, BinderFlags.ConstructorInitializer);
                    DynAbs.Tracing.TraceSender.TraceExitMethod(10306, 2910, 2981);

                    bool
                    f_10306_2923_2978(Microsoft.CodeAnalysis.CSharp.BinderFlags
                    self, Microsoft.CodeAnalysis.CSharp.BinderFlags
                    other)
                    {
                        var return_v = self.Includes(other);
                        DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 2923, 2978);
                        return return_v;
                    }

                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 2846, 2992);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 2846, 2992);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        internal bool InAttributeArgument
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(10306, 3062, 3128);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 3068, 3126);

                    return f_10306_3075_3125(this.Flags, BinderFlags.AttributeArgument);
                    DynAbs.Tracing.TraceSender.TraceExitMethod(10306, 3062, 3128);

                    bool
                    f_10306_3075_3125(Microsoft.CodeAnalysis.CSharp.BinderFlags
                    self, Microsoft.CodeAnalysis.CSharp.BinderFlags
                    other)
                    {
                        var return_v = self.Includes(other);
                        DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 3075, 3125);
                        return return_v;
                    }

                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 3004, 3139);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 3004, 3139);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        internal bool InCref
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(10306, 3196, 3249);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 3202, 3247);

                    return f_10306_3209_3246(this.Flags, BinderFlags.Cref);
                    DynAbs.Tracing.TraceSender.TraceExitMethod(10306, 3196, 3249);

                    bool
                    f_10306_3209_3246(Microsoft.CodeAnalysis.CSharp.BinderFlags
                    self, Microsoft.CodeAnalysis.CSharp.BinderFlags
                    other)
                    {
                        var return_v = self.Includes(other);
                        DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 3209, 3246);
                        return return_v;
                    }

                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 3151, 3260);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 3151, 3260);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        protected bool InCrefButNotParameterOrReturnType
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(10306, 3345, 3430);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 3351, 3428);

                    return f_10306_3358_3364() && (DynAbs.Tracing.TraceSender.Expression_True(10306, 3358, 3427) && !f_10306_3369_3427(this.Flags, BinderFlags.CrefParameterOrReturnType));
                    DynAbs.Tracing.TraceSender.TraceExitMethod(10306, 3345, 3430);

                    bool
                    f_10306_3358_3364()
                    {
                        var return_v = InCref;
                        DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 3358, 3364);
                        return return_v;
                    }


                    bool
                    f_10306_3369_3427(Microsoft.CodeAnalysis.CSharp.BinderFlags
                    self, Microsoft.CodeAnalysis.CSharp.BinderFlags
                    other)
                    {
                        var return_v = self.Includes(other);
                        DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 3369, 3427);
                        return return_v;
                    }

                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 3272, 3441);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 3272, 3441);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        protected virtual bool IsUnboundTypeAllowed(GenericNameSyntax syntax)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10306, 3623, 3769);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 3717, 3758);

                return f_10306_3724_3757(f_10306_3724_3728(), syntax);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10306, 3623, 3769);

                Microsoft.CodeAnalysis.CSharp.Binder?
                f_10306_3724_3728()
                {
                    var return_v = Next;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 3724, 3728);
                    return return_v;
                }


                bool
                f_10306_3724_3757(Microsoft.CodeAnalysis.CSharp.Binder?
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.GenericNameSyntax
                syntax)
                {
                    var return_v = this_param.IsUnboundTypeAllowed(syntax);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 3724, 3757);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 3623, 3769);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 3623, 3769);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private BoundBadExpression BadExpression(SyntaxNode syntax)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10306, 3909, 4087);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 3993, 4076);

                return f_10306_4000_4075(this, syntax, LookupResultKind.Empty, ImmutableArray<Symbol>.Empty);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10306, 3909, 4087);

                Microsoft.CodeAnalysis.CSharp.BoundBadExpression
                f_10306_4000_4075(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.CSharp.LookupResultKind
                resultKind, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>
                symbols)
                {
                    var return_v = this_param.BadExpression(syntax, resultKind, symbols);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 4000, 4075);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 3909, 4087);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 3909, 4087);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private BoundBadExpression BadExpression(SyntaxNode syntax, BoundExpression childNode)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10306, 4255, 4471);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 4366, 4460);

                return f_10306_4373_4459(this, syntax, LookupResultKind.Empty, ImmutableArray<Symbol>.Empty, childNode);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10306, 4255, 4471);

                Microsoft.CodeAnalysis.CSharp.BoundBadExpression
                f_10306_4373_4459(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.CSharp.LookupResultKind
                resultKind, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>
                symbols, Microsoft.CodeAnalysis.CSharp.BoundExpression
                childNode)
                {
                    var return_v = this_param.BadExpression(syntax, resultKind, symbols, childNode);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 4373, 4459);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 4255, 4471);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 4255, 4471);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private BoundBadExpression BadExpression(SyntaxNode syntax, ImmutableArray<BoundExpression> childNodes)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10306, 4642, 4876);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 4770, 4865);

                return f_10306_4777_4864(this, syntax, LookupResultKind.Empty, ImmutableArray<Symbol>.Empty, childNodes);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10306, 4642, 4876);

                Microsoft.CodeAnalysis.CSharp.BoundBadExpression
                f_10306_4777_4864(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.CSharp.LookupResultKind
                resultKind, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>
                symbols, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                childNodes)
                {
                    var return_v = this_param.BadExpression(syntax, resultKind, symbols, childNodes);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 4777, 4864);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 4642, 4876);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 4642, 4876);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        protected BoundBadExpression BadExpression(SyntaxNode syntax, LookupResultKind lookupResultKind)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10306, 5042, 5251);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 5163, 5240);

                return f_10306_5170_5239(this, syntax, lookupResultKind, ImmutableArray<Symbol>.Empty);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10306, 5042, 5251);

                Microsoft.CodeAnalysis.CSharp.BoundBadExpression
                f_10306_5170_5239(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.CSharp.LookupResultKind
                resultKind, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>
                symbols)
                {
                    var return_v = this_param.BadExpression(syntax, resultKind, symbols);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 5170, 5239);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 5042, 5251);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 5042, 5251);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        protected BoundBadExpression BadExpression(SyntaxNode syntax, LookupResultKind lookupResultKind, BoundExpression childNode)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10306, 5443, 5690);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 5591, 5679);

                return f_10306_5598_5678(this, syntax, lookupResultKind, ImmutableArray<Symbol>.Empty, childNode);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10306, 5443, 5690);

                Microsoft.CodeAnalysis.CSharp.BoundBadExpression
                f_10306_5598_5678(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.CSharp.LookupResultKind
                resultKind, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>
                symbols, Microsoft.CodeAnalysis.CSharp.BoundExpression
                childNode)
                {
                    var return_v = this_param.BadExpression(syntax, resultKind, symbols, childNode);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 5598, 5678);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 5443, 5690);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 5443, 5690);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private BoundBadExpression BadExpression(SyntaxNode syntax, LookupResultKind resultKind, ImmutableArray<Symbol> symbols)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10306, 5897, 6238);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 6042, 6227);

                return f_10306_6049_6226(syntax, resultKind, symbols, ImmutableArray<BoundExpression>.Empty, f_10306_6208_6225(this));
                DynAbs.Tracing.TraceSender.TraceExitMethod(10306, 5897, 6238);

                Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                f_10306_6208_6225(Microsoft.CodeAnalysis.CSharp.Binder
                this_param)
                {
                    var return_v = this_param.CreateErrorType();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 6208, 6225);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundBadExpression
                f_10306_6049_6226(Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.CSharp.LookupResultKind
                resultKind, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>
                symbols, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                childBoundNodes, Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                type)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.BoundBadExpression(syntax, resultKind, symbols, childBoundNodes, (Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol)type);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 6049, 6226);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 5897, 6238);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 5897, 6238);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private BoundBadExpression BadExpression(SyntaxNode syntax, LookupResultKind resultKind, ImmutableArray<Symbol> symbols, BoundExpression childNode)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10306, 6485, 6876);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 6657, 6865);

                return f_10306_6664_6864(syntax, resultKind, symbols, f_10306_6767_6827(f_10306_6789_6826(this, childNode)), f_10306_6846_6863(this));
                DynAbs.Tracing.TraceSender.TraceExitMethod(10306, 6485, 6876);

                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_6789_6826(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                expression)
                {
                    var return_v = this_param.BindToTypeForErrorRecovery(expression);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 6789, 6826);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                f_10306_6767_6827(Microsoft.CodeAnalysis.CSharp.BoundExpression
                item)
                {
                    var return_v = ImmutableArray.Create(item);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 6767, 6827);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                f_10306_6846_6863(Microsoft.CodeAnalysis.CSharp.Binder
                this_param)
                {
                    var return_v = this_param.CreateErrorType();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 6846, 6863);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundBadExpression
                f_10306_6664_6864(Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.CSharp.LookupResultKind
                resultKind, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>
                symbols, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                childBoundNodes, Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                type)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.BoundBadExpression(syntax, resultKind, symbols, childBoundNodes, (Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol)type);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 6664, 6864);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 6485, 6876);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 6485, 6876);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private BoundBadExpression BadExpression(SyntaxNode syntax, LookupResultKind resultKind, ImmutableArray<Symbol> symbols, ImmutableArray<BoundExpression> childNodes)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10306, 7126, 7553);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 7315, 7542);

                return f_10306_7322_7541(syntax, resultKind, symbols, childNodes.SelectAsArray((e, self) => self.BindToTypeForErrorRecovery(e), this), f_10306_7523_7540(this));
                DynAbs.Tracing.TraceSender.TraceExitMethod(10306, 7126, 7553);

                Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                f_10306_7523_7540(Microsoft.CodeAnalysis.CSharp.Binder
                this_param)
                {
                    var return_v = this_param.CreateErrorType();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 7523, 7540);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundBadExpression
                f_10306_7322_7541(Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.CSharp.LookupResultKind
                resultKind, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>
                symbols, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                childBoundNodes, Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                type)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.BoundBadExpression(syntax, resultKind, symbols, childBoundNodes, (Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol)type);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 7322, 7541);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 7126, 7553);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 7126, 7553);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private BoundExpression ToBadExpression(BoundExpression expr, LookupResultKind resultKind = LookupResultKind.Empty)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10306, 8403, 9736);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 8543, 8570);

                f_10306_8543_8569(expr != null);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 8584, 8636);

                f_10306_8584_8635(resultKind != LookupResultKind.Viable);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 8652, 8686);

                TypeSymbol
                resultType = f_10306_8676_8685(expr)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 8700, 8731);

                BoundKind
                exprKind = f_10306_8721_8730(expr)
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 8747, 8940) || true) && (f_10306_8751_8768(expr) && (DynAbs.Tracing.TraceSender.Expression_True(10306, 8751, 8879) && ((object)resultType != null || (DynAbs.Tracing.TraceSender.Expression_False(10306, 8773, 8838) || exprKind == BoundKind.UnboundLambda) || (DynAbs.Tracing.TraceSender.Expression_False(10306, 8773, 8878) || exprKind == BoundKind.DefaultLiteral))))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 8747, 8940);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 8913, 8925);

                    return expr;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 8747, 8940);
                }

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 8956, 9725) || true) && (exprKind == BoundKind.BadExpression)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 8956, 9725);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 9029, 9074);

                    var
                    badExpression = (BoundBadExpression)expr
                    ;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 9092, 9198);

                    return f_10306_9099_9197(badExpression, resultKind, f_10306_9132_9153(badExpression), f_10306_9155_9184(badExpression), resultType);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 8956, 9725);
                }

                else

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 8956, 9725);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 9264, 9330);

                    ArrayBuilder<Symbol>
                    symbols = f_10306_9295_9329()
                    ;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 9348, 9411);

                    f_10306_9348_9410(expr, symbols, parent: null, binder: this);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 9429, 9710);

                    return f_10306_9436_9709(expr.Syntax, resultKind, f_10306_9548_9576(symbols), f_10306_9599_9654(f_10306_9621_9653(this, expr)), resultType ?? (DynAbs.Tracing.TraceSender.Expression_Null<Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?>(10306, 9677, 9708) ?? f_10306_9691_9708(this)));
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 8956, 9725);
                }
                DynAbs.Tracing.TraceSender.TraceExitMethod(10306, 8403, 9736);

                int
                f_10306_8543_8569(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 8543, 8569);
                    return 0;
                }


                int
                f_10306_8584_8635(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 8584, 8635);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?
                f_10306_8676_8685(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 8676, 8685);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundKind
                f_10306_8721_8730(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.Kind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 8721, 8730);
                    return return_v;
                }


                bool
                f_10306_8751_8768(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.HasAnyErrors;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 8751, 8768);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol?>
                f_10306_9132_9153(Microsoft.CodeAnalysis.CSharp.BoundBadExpression
                this_param)
                {
                    var return_v = this_param.Symbols;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 9132, 9153);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                f_10306_9155_9184(Microsoft.CodeAnalysis.CSharp.BoundBadExpression
                this_param)
                {
                    var return_v = this_param.ChildBoundNodes;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 9155, 9184);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundBadExpression
                f_10306_9099_9197(Microsoft.CodeAnalysis.CSharp.BoundBadExpression
                this_param, Microsoft.CodeAnalysis.CSharp.LookupResultKind
                resultKind, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol?>
                symbols, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                childBoundNodes, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?
                type)
                {
                    var return_v = this_param.Update(resultKind, symbols, childBoundNodes, type);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 9099, 9197);
                    return return_v;
                }


                Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbol>
                f_10306_9295_9329()
                {
                    var return_v = ArrayBuilder<Symbol>.GetInstance();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 9295, 9329);
                    return return_v;
                }


                int
                f_10306_9348_9410(Microsoft.CodeAnalysis.CSharp.BoundExpression
                node, Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbol>
                symbols, Microsoft.CodeAnalysis.CSharp.BoundNode
                parent, Microsoft.CodeAnalysis.CSharp.Binder
                binder)
                {
                    node.GetExpressionSymbols(symbols, parent: parent, binder: binder);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 9348, 9410);
                    return 0;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>
                f_10306_9548_9576(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbol>
                this_param)
                {
                    var return_v = this_param.ToImmutableAndFree();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 9548, 9576);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_9621_9653(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                expression)
                {
                    var return_v = this_param.BindToTypeForErrorRecovery(expression);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 9621, 9653);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                f_10306_9599_9654(Microsoft.CodeAnalysis.CSharp.BoundExpression
                item)
                {
                    var return_v = ImmutableArray.Create(item);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 9599, 9654);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                f_10306_9691_9708(Microsoft.CodeAnalysis.CSharp.Binder
                this_param)
                {
                    var return_v = this_param.CreateErrorType();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 9691, 9708);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundBadExpression
                f_10306_9436_9709(Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.CSharp.LookupResultKind
                resultKind, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>
                symbols, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                childBoundNodes, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                type)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.BoundBadExpression(syntax, resultKind, symbols, childBoundNodes, type);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 9436, 9709);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 8403, 9736);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 8403, 9736);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        internal NamedTypeSymbol CreateErrorType(string name = "")
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10306, 9748, 9947);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 9831, 9936);

                return f_10306_9838_9935(f_10306_9866_9882(this), name, arity: 0, errorInfo: null, unreported: false);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10306, 9748, 9947);

                Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                f_10306_9866_9882(Microsoft.CodeAnalysis.CSharp.Binder
                this_param)
                {
                    var return_v = this_param.Compilation;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 9866, 9882);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.ExtendedErrorTypeSymbol
                f_10306_9838_9935(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                compilation, string
                name, int
                arity, Microsoft.CodeAnalysis.DiagnosticInfo?
                errorInfo, bool
                unreported)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.Symbols.ExtendedErrorTypeSymbol(compilation, name, arity: arity, errorInfo: errorInfo, unreported: unreported);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 9838, 9935);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 9748, 9947);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 9748, 9947);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        internal BoundExpression BindValue(ExpressionSyntax node, DiagnosticBag diagnostics, BindValueKind valueKind)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10306, 10361, 10667);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 10495, 10592);

                var
                result = f_10306_10508_10591(this, node, diagnostics: diagnostics, invoked: false, indexed: false)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 10606, 10656);

                return f_10306_10613_10655(this, result, valueKind, diagnostics);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10306, 10361, 10667);

                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_10508_10591(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                node, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, bool
                invoked, bool
                indexed)
                {
                    var return_v = this_param.BindExpression(node, diagnostics: diagnostics, invoked: invoked, indexed: indexed);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 10508, 10591);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_10613_10655(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                expr, Microsoft.CodeAnalysis.CSharp.Binder.BindValueKind
                valueKind, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.CheckValue(expr, valueKind, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 10613, 10655);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 10361, 10667);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 10361, 10667);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        internal BoundExpression BindRValueWithoutTargetType(ExpressionSyntax node, DiagnosticBag diagnostics, bool reportNoTargetType = true)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10306, 10679, 10959);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 10838, 10948);

                return f_10306_10845_10947(this, f_10306_10863_10913(this, node, diagnostics, BindValueKind.RValue), diagnostics, reportNoTargetType);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10306, 10679, 10959);

                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_10863_10913(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                node, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.Binder.BindValueKind
                valueKind)
                {
                    var return_v = this_param.BindValue(node, diagnostics, valueKind);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 10863, 10913);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_10845_10947(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                expression, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, bool
                reportNoTargetType)
                {
                    var return_v = this_param.BindToNaturalType(expression, diagnostics, reportNoTargetType);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 10845, 10947);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 10679, 10959);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 10679, 10959);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        internal BoundExpression BindTypeOrRValue(ExpressionSyntax node, DiagnosticBag diagnostics)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10306, 11229, 11829);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 11345, 11442);

                var
                valueOrType = f_10306_11363_11441(this, node, diagnostics: diagnostics, invoked: false, indexed: false)
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 11456, 11736) || true) && (f_10306_11460_11476(valueOrType) == BoundKind.TypeExpression)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 11456, 11736);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 11702, 11721);

                    return valueOrType;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 11456, 11736);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 11752, 11818);

                return f_10306_11759_11817(this, valueOrType, BindValueKind.RValue, diagnostics);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10306, 11229, 11829);

                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_11363_11441(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                node, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, bool
                invoked, bool
                indexed)
                {
                    var return_v = this_param.BindExpression(node, diagnostics: diagnostics, invoked: invoked, indexed: indexed);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 11363, 11441);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundKind
                f_10306_11460_11476(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.Kind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 11460, 11476);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_11759_11817(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                expr, Microsoft.CodeAnalysis.CSharp.Binder.BindValueKind
                valueKind, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.CheckValue(expr, valueKind, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 11759, 11817);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 11229, 11829);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 11229, 11829);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        internal BoundExpression BindToTypeForErrorRecovery(BoundExpression expression, TypeSymbol type = null)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10306, 11841, 12466);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 11969, 12022) || true) && (expression is null)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 11969, 12022);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 12010, 12022);

                    return null;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 11969, 12022);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 12036, 12091);

                var
                discardedDiagnostics = f_10306_12063_12090()
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 12105, 12385);

                var
                result =
                (DynAbs.Tracing.TraceSender.Conditional_F1(10306, 12135, 12167) || ((!f_10306_12136_12167(expression) && DynAbs.Tracing.TraceSender.Conditional_F2(10306, 12170, 12180)) || DynAbs.Tracing.TraceSender.Conditional_F3(10306, 12200, 12384))) ? expression : (DynAbs.Tracing.TraceSender.Conditional_F1(10306, 12200, 12212) || ((type is null && DynAbs.Tracing.TraceSender.Conditional_F2(10306, 12215, 12293)) || DynAbs.Tracing.TraceSender.Conditional_F3(10306, 12313, 12384))) ? f_10306_12215_12293(this, expression, discardedDiagnostics, reportNoTargetType: false) : f_10306_12313_12384(this, type, expression, discardedDiagnostics)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 12399, 12427);

                f_10306_12399_12426(discardedDiagnostics);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 12441, 12455);

                return result;
                DynAbs.Tracing.TraceSender.TraceExitMethod(10306, 11841, 12466);

                Microsoft.CodeAnalysis.DiagnosticBag
                f_10306_12063_12090()
                {
                    var return_v = DiagnosticBag.GetInstance();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 12063, 12090);
                    return return_v;
                }


                bool
                f_10306_12136_12167(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.NeedsToBeConverted();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 12136, 12167);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_12215_12293(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                expression, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, bool
                reportNoTargetType)
                {
                    var return_v = this_param.BindToNaturalType(expression, diagnostics, reportNoTargetType: reportNoTargetType);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 12215, 12293);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_12313_12384(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                targetType, Microsoft.CodeAnalysis.CSharp.BoundExpression
                expression, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.GenerateConversionForAssignment(targetType, expression, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 12313, 12384);
                    return return_v;
                }


                int
                f_10306_12399_12426(Microsoft.CodeAnalysis.DiagnosticBag
                this_param)
                {
                    this_param.Free();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 12399, 12426);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 11841, 12466);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 11841, 12466);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        internal BoundExpression BindToNaturalType(BoundExpression expression, DiagnosticBag diagnostics, bool reportNoTargetType = true)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10306, 13061, 18849);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 13215, 13288) || true) && (!f_10306_13220_13251(expression))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 13215, 13288);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 13270, 13288);

                    return expression;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 13215, 13288);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 13304, 13327);

                BoundExpression
                result
                = default(BoundExpression);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 13341, 18788);

                switch (expression)
                {

                    case BoundUnconvertedSwitchExpression expr:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 13341, 18788);
                        {
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 13485, 13512);

                            var
                            commonType = f_10306_13502_13511(expr)
                            ;
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 13538, 13591);

                            var
                            exprSyntax = (SwitchExpressionSyntax)expr.Syntax
                            ;
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 13617, 13655);

                            bool
                            hasErrors = f_10306_13634_13654(expression)
                            ;

                            if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 13681, 13994) || true) && (commonType is null)
                            )

                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 13681, 13994);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 13761, 13859);

                                f_10306_13761_13858(diagnostics, ErrorCode.ERR_SwitchExpressionNoBestType, exprSyntax.SwitchKeyword.GetLocation());
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 13889, 13920);

                                commonType = f_10306_13902_13919(this);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 13950, 13967);

                                hasErrors = true;
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 13681, 13994);
                            }
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 14020, 14126);

                            result = f_10306_14029_14125(this, expr, commonType, conversionIfTargetTyped: null, diagnostics, hasErrors);
                        }
                        DynAbs.Tracing.TraceSender.TraceBreak(10306, 14171, 14177);

                        break;
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 13341, 18788);

                    case BoundUnconvertedConditionalOperator op:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 13341, 18788);
                        {
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 14288, 14314);

                            TypeSymbol
                            type = f_10306_14306_14313(op)
                            ;
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 14340, 14370);

                            bool
                            hasErrors = f_10306_14357_14369(op)
                            ;

                            if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 14396, 15607) || true) && (type is null)
                            )

                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 14396, 15607);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 14470, 14510);

                                f_10306_14470_14509(f_10306_14483_14503(op) != 0);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 14540, 14565);

                                type = f_10306_14547_14564(this);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 14595, 14612);

                                hasErrors = true;
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 14642, 14682);

                                object
                                trueArg = f_10306_14659_14681(f_10306_14659_14673(op))
                                ;
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 14712, 14753);

                                object
                                falseArg = f_10306_14730_14752(f_10306_14730_14744(op))
                                ;

                                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 14783, 15471) || true) && (f_10306_14787_14807(op) == ErrorCode.ERR_InvalidQM && (DynAbs.Tracing.TraceSender.Expression_True(10306, 14787, 14866) && trueArg is Symbol trueSymbol) && (DynAbs.Tracing.TraceSender.Expression_True(10306, 14787, 14900) && falseArg is Symbol falseSymbol))
                                )

                                {
                                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 14783, 15471);
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 15207, 15310);

                                    SymbolDistinguisher
                                    distinguisher = f_10306_15243_15309(f_10306_15267_15283(this), trueSymbol, falseSymbol)
                                    ;
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 15344, 15374);

                                    trueArg = f_10306_15354_15373(distinguisher);
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 15408, 15440);

                                    falseArg = f_10306_15419_15439(distinguisher);
                                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 14783, 15471);
                                }
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 15503, 15580);

                                f_10306_15503_15579(
                                                            diagnostics, f_10306_15519_15539(op), f_10306_15541_15559(op.Syntax), trueArg, falseArg);
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 14396, 15607);
                            }
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 15635, 15738);

                            result = f_10306_15644_15737(this, op, type, conversionIfTargetTyped: null, diagnostics, hasErrors);
                        }
                        DynAbs.Tracing.TraceSender.TraceBreak(10306, 15783, 15789);

                        break;
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 13341, 18788);

                    case BoundTupleLiteral sourceTuple:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 13341, 18788);
                        {
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 15891, 15979);

                            var
                            boundArgs = f_10306_15907_15978(sourceTuple.Arguments.Length)
                            ;
                            try
                            {
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 16005, 16202);
                                foreach (var arg in f_10306_16025_16046_I(f_10306_16025_16046(sourceTuple)))
                                {
                                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 16005, 16202);
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 16104, 16175);

                                    f_10306_16104_16174(boundArgs, f_10306_16118_16173(this, arg, diagnostics, reportNoTargetType));
                                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 16005, 16202);
                                }
                            }
                            catch (System.Exception)
                            {
                                DynAbs.Tracing.TraceSender.TraceExitLoopByException(10306, 1, 198);
                                throw;
                            }
                            finally
                            {
                                DynAbs.Tracing.TraceSender.TraceExitLoop(10306, 1, 198);
                            }
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 16228, 16776);

                            result = f_10306_16237_16775(f_10306_16237_16733(sourceTuple.Syntax, sourceTuple, wasTargetTyped: false, f_10306_16441_16471(boundArgs), f_10306_16502_16530(sourceTuple), f_10306_16561_16589(sourceTuple), f_10306_16620_16636(sourceTuple), f_10306_16711_16732(sourceTuple)), f_10306_16750_16774(sourceTuple));
                        }
                        DynAbs.Tracing.TraceSender.TraceBreak(10306, 16821, 16827);

                        break;
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 13341, 18788);

                    case BoundDefaultLiteral defaultExpr:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 13341, 18788);
                        {

                            if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 16931, 17212) || true) && (reportNoTargetType)
                            )

                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 16931, 17212);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 17093, 17185);

                                f_10306_17093_17184(                            // In some cases, we let the caller report the error
                                                            diagnostics, ErrorCode.ERR_DefaultLiteralNoTargetType, f_10306_17151_17183(defaultExpr.Syntax));
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 16931, 17212);
                            }
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 17240, 17565);

                            result = f_10306_17249_17564(f_10306_17249_17522(defaultExpr.Syntax, targetType: null, f_10306_17402_17427(defaultExpr), f_10306_17458_17475(this), hasErrors: true), f_10306_17539_17563(defaultExpr));
                        }
                        DynAbs.Tracing.TraceSender.TraceBreak(10306, 17610, 17616);

                        break;
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 13341, 18788);

                    case BoundStackAllocArrayCreation { Type: null } boundStackAlloc:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 13341, 18788);
                        {
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 17937, 18027);

                            var
                            type = f_10306_17948_18026(TypeWithAnnotations.Create(f_10306_17997_18024(boundStackAlloc)))
                            ;
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 18053, 18130);

                            result = f_10306_18062_18129(this, type, boundStackAlloc, diagnostics);
                        }
                        DynAbs.Tracing.TraceSender.TraceBreak(10306, 18175, 18181);

                        break;
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 13341, 18788);

                    case BoundUnconvertedObjectCreationExpression expr:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 13341, 18788);
                        {

                            if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 18299, 18535) || true) && (reportNoTargetType && (DynAbs.Tracing.TraceSender.Expression_True(10306, 18303, 18343) && f_10306_18325_18343_M(!expr.HasAnyErrors)))
                            )

                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 18299, 18535);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 18401, 18508);

                                f_10306_18401_18507(diagnostics, ErrorCode.ERR_ImplicitObjectCreationNoTargetType, f_10306_18467_18492(expr.Syntax), f_10306_18494_18506(expr));
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 18299, 18535);
                            }
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 18563, 18626);

                            result = f_10306_18572_18625(this, expr, diagnostics);
                        }
                        DynAbs.Tracing.TraceSender.TraceBreak(10306, 18671, 18677);

                        break;
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 13341, 18788);

                    default:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 13341, 18788);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 18725, 18745);

                        result = expression;
                        DynAbs.Tracing.TraceSender.TraceBreak(10306, 18767, 18773);

                        break;
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 13341, 18788);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 18804, 18838);

                return f_10306_18811_18837_I(DynAbs.Tracing.TraceSender.TraceConditionalAccessExpression(result, 10306, 18811, 18837)?.WithWasConverted());
                DynAbs.Tracing.TraceSender.TraceExitMethod(10306, 13061, 18849);

                bool
                f_10306_13220_13251(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.NeedsToBeConverted();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 13220, 13251);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?
                f_10306_13502_13511(Microsoft.CodeAnalysis.CSharp.BoundUnconvertedSwitchExpression
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 13502, 13511);
                    return return_v;
                }


                bool
                f_10306_13634_13654(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.HasErrors;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 13634, 13654);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo
                f_10306_13761_13858(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, Microsoft.CodeAnalysis.Location
                location)
                {
                    var return_v = diagnostics.Add(code, location);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 13761, 13858);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                f_10306_13902_13919(Microsoft.CodeAnalysis.CSharp.Binder
                this_param)
                {
                    var return_v = this_param.CreateErrorType();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 13902, 13919);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_14029_14125(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.BoundUnconvertedSwitchExpression
                source, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                destination, Microsoft.CodeAnalysis.CSharp.Conversion?
                conversionIfTargetTyped, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, bool
                hasErrors)
                {
                    var return_v = this_param.ConvertSwitchExpression(source, destination, conversionIfTargetTyped: conversionIfTargetTyped, diagnostics, hasErrors);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 14029, 14125);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?
                f_10306_14306_14313(Microsoft.CodeAnalysis.CSharp.BoundUnconvertedConditionalOperator
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 14306, 14313);
                    return return_v;
                }


                bool
                f_10306_14357_14369(Microsoft.CodeAnalysis.CSharp.BoundUnconvertedConditionalOperator
                this_param)
                {
                    var return_v = this_param.HasErrors;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 14357, 14369);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.ErrorCode
                f_10306_14483_14503(Microsoft.CodeAnalysis.CSharp.BoundUnconvertedConditionalOperator
                this_param)
                {
                    var return_v = this_param.NoCommonTypeError;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 14483, 14503);
                    return return_v;
                }


                int
                f_10306_14470_14509(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 14470, 14509);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                f_10306_14547_14564(Microsoft.CodeAnalysis.CSharp.Binder
                this_param)
                {
                    var return_v = this_param.CreateErrorType();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 14547, 14564);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_14659_14673(Microsoft.CodeAnalysis.CSharp.BoundUnconvertedConditionalOperator
                this_param)
                {
                    var return_v = this_param.Consequence;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 14659, 14673);
                    return return_v;
                }


                object
                f_10306_14659_14681(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.Display;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 14659, 14681);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_14730_14744(Microsoft.CodeAnalysis.CSharp.BoundUnconvertedConditionalOperator
                this_param)
                {
                    var return_v = this_param.Alternative;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 14730, 14744);
                    return return_v;
                }


                object
                f_10306_14730_14752(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.Display;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 14730, 14752);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.ErrorCode
                f_10306_14787_14807(Microsoft.CodeAnalysis.CSharp.BoundUnconvertedConditionalOperator
                this_param)
                {
                    var return_v = this_param.NoCommonTypeError;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 14787, 14807);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                f_10306_15267_15283(Microsoft.CodeAnalysis.CSharp.Binder
                this_param)
                {
                    var return_v = this_param.Compilation;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 15267, 15283);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.SymbolDistinguisher
                f_10306_15243_15309(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                compilation, Microsoft.CodeAnalysis.CSharp.Symbol
                symbol0, Microsoft.CodeAnalysis.CSharp.Symbol
                symbol1)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.SymbolDistinguisher(compilation, symbol0, symbol1);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 15243, 15309);
                    return return_v;
                }


                System.IFormattable
                f_10306_15354_15373(Microsoft.CodeAnalysis.CSharp.SymbolDistinguisher
                this_param)
                {
                    var return_v = this_param.First;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 15354, 15373);
                    return return_v;
                }


                System.IFormattable
                f_10306_15419_15439(Microsoft.CodeAnalysis.CSharp.SymbolDistinguisher
                this_param)
                {
                    var return_v = this_param.Second;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 15419, 15439);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.ErrorCode
                f_10306_15519_15539(Microsoft.CodeAnalysis.CSharp.BoundUnconvertedConditionalOperator
                this_param)
                {
                    var return_v = this_param.NoCommonTypeError;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 15519, 15539);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Location
                f_10306_15541_15559(Microsoft.CodeAnalysis.SyntaxNode
                this_param)
                {
                    var return_v = this_param.Location;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 15541, 15559);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo
                f_10306_15503_15579(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, Microsoft.CodeAnalysis.Location
                location, params object[]
                args)
                {
                    var return_v = diagnostics.Add(code, location, args);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 15503, 15579);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_15644_15737(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.BoundUnconvertedConditionalOperator
                source, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                destination, Microsoft.CodeAnalysis.CSharp.Conversion?
                conversionIfTargetTyped, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, bool
                hasErrors)
                {
                    var return_v = this_param.ConvertConditionalExpression(source, destination, conversionIfTargetTyped: conversionIfTargetTyped, diagnostics, hasErrors);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 15644, 15737);
                    return return_v;
                }


                Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                f_10306_15907_15978(int
                capacity)
                {
                    var return_v = ArrayBuilder<BoundExpression>.GetInstance(capacity);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 15907, 15978);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                f_10306_16025_16046(Microsoft.CodeAnalysis.CSharp.BoundTupleLiteral
                this_param)
                {
                    var return_v = this_param.Arguments;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 16025, 16046);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_16118_16173(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                expression, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, bool
                reportNoTargetType)
                {
                    var return_v = this_param.BindToNaturalType(expression, diagnostics, reportNoTargetType);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 16118, 16173);
                    return return_v;
                }


                int
                f_10306_16104_16174(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                item)
                {
                    this_param.Add(item);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 16104, 16174);
                    return 0;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                f_10306_16025_16046_I(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 16025, 16046);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                f_10306_16441_16471(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                this_param)
                {
                    var return_v = this_param.ToImmutableAndFree();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 16441, 16471);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<string?>
                f_10306_16502_16530(Microsoft.CodeAnalysis.CSharp.BoundTupleLiteral
                this_param)
                {
                    var return_v = this_param.ArgumentNamesOpt;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 16502, 16530);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<bool>
                f_10306_16561_16589(Microsoft.CodeAnalysis.CSharp.BoundTupleLiteral
                this_param)
                {
                    var return_v = this_param.InferredNamesOpt;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 16561, 16589);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?
                f_10306_16620_16636(Microsoft.CodeAnalysis.CSharp.BoundTupleLiteral
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 16620, 16636);
                    return return_v;
                }


                bool
                f_10306_16711_16732(Microsoft.CodeAnalysis.CSharp.BoundTupleLiteral
                this_param)
                {
                    var return_v = this_param.HasErrors;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 16711, 16732);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundConvertedTupleLiteral
                f_10306_16237_16733(Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.CSharp.BoundTupleLiteral
                sourceTuple, bool
                wasTargetTyped, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                arguments, System.Collections.Immutable.ImmutableArray<string?>
                argumentNamesOpt, System.Collections.Immutable.ImmutableArray<bool>
                inferredNamesOpt, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?
                type, bool
                hasErrors)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.BoundConvertedTupleLiteral(syntax, sourceTuple, wasTargetTyped: wasTargetTyped, arguments, argumentNamesOpt, inferredNamesOpt, type, hasErrors);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 16237, 16733);
                    return return_v;
                }


                bool
                f_10306_16750_16774(Microsoft.CodeAnalysis.CSharp.BoundTupleLiteral
                this_param)
                {
                    var return_v = this_param.IsSuppressed;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 16750, 16774);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_16237_16775(Microsoft.CodeAnalysis.CSharp.BoundConvertedTupleLiteral
                this_param, bool
                suppress)
                {
                    var return_v = this_param.WithSuppression(suppress);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 16237, 16775);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Location
                f_10306_17151_17183(Microsoft.CodeAnalysis.SyntaxNode
                this_param)
                {
                    var return_v = this_param.GetLocation();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 17151, 17183);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo
                f_10306_17093_17184(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, Microsoft.CodeAnalysis.Location
                location)
                {
                    var return_v = diagnostics.Add(code, location);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 17093, 17184);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ConstantValue?
                f_10306_17402_17427(Microsoft.CodeAnalysis.CSharp.BoundDefaultLiteral
                this_param)
                {
                    var return_v = this_param.ConstantValue;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 17402, 17427);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                f_10306_17458_17475(Microsoft.CodeAnalysis.CSharp.Binder
                this_param)
                {
                    var return_v = this_param.CreateErrorType();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 17458, 17475);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundDefaultExpression
                f_10306_17249_17522(Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.CSharp.BoundTypeExpression?
                targetType, Microsoft.CodeAnalysis.ConstantValue?
                constantValueOpt, Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                type, bool
                hasErrors)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.BoundDefaultExpression(syntax, targetType: targetType, constantValueOpt, (Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol)type, hasErrors: hasErrors);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 17249, 17522);
                    return return_v;
                }


                bool
                f_10306_17539_17563(Microsoft.CodeAnalysis.CSharp.BoundDefaultLiteral
                this_param)
                {
                    var return_v = this_param.IsSuppressed;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 17539, 17563);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_17249_17564(Microsoft.CodeAnalysis.CSharp.BoundDefaultExpression
                this_param, bool
                suppress)
                {
                    var return_v = this_param.WithSuppression(suppress);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 17249, 17564);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                f_10306_17997_18024(Microsoft.CodeAnalysis.CSharp.BoundStackAllocArrayCreation
                this_param)
                {
                    var return_v = this_param.ElementType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 17997, 18024);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.PointerTypeSymbol
                f_10306_17948_18026(Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                pointedAtType)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.Symbols.PointerTypeSymbol(pointedAtType);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 17948, 18026);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_18062_18129(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.PointerTypeSymbol
                targetType, Microsoft.CodeAnalysis.CSharp.BoundStackAllocArrayCreation
                expression, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.GenerateConversionForAssignment((Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol)targetType, (Microsoft.CodeAnalysis.CSharp.BoundExpression)expression, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 18062, 18129);
                    return return_v;
                }


                bool
                f_10306_18325_18343_M(bool
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 18325, 18343);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Location
                f_10306_18467_18492(Microsoft.CodeAnalysis.SyntaxNode
                this_param)
                {
                    var return_v = this_param.GetLocation();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 18467, 18492);
                    return return_v;
                }


                object
                f_10306_18494_18506(Microsoft.CodeAnalysis.CSharp.BoundUnconvertedObjectCreationExpression
                this_param)
                {
                    var return_v = this_param.Display;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 18494, 18506);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo
                f_10306_18401_18507(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, Microsoft.CodeAnalysis.Location
                location, params object[]
                args)
                {
                    var return_v = diagnostics.Add(code, location, args);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 18401, 18507);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_18572_18625(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.BoundUnconvertedObjectCreationExpression
                node, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.BindObjectCreationForErrorRecovery(node, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 18572, 18625);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression?
                f_10306_18811_18837_I(Microsoft.CodeAnalysis.CSharp.BoundExpression?
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 18811, 18837);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 13061, 18849);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 13061, 18849);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        internal BoundExpression BindValueAllowArgList(ExpressionSyntax node, DiagnosticBag diagnostics, BindValueKind valueKind)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10306, 18861, 19159);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 19007, 19084);

                var
                result = f_10306_19020_19083(this, node, diagnostics: diagnostics)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 19098, 19148);

                return f_10306_19105_19147(this, result, valueKind, diagnostics);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10306, 18861, 19159);

                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_19020_19083(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                node, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.BindExpressionAllowArgList(node, diagnostics: diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 19020, 19083);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_19105_19147(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                expr, Microsoft.CodeAnalysis.CSharp.Binder.BindValueKind
                valueKind, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.CheckValue(expr, valueKind, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 19105, 19147);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 18861, 19159);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 18861, 19159);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        internal BoundFieldEqualsValue BindFieldInitializer(
                    FieldSymbol field,
                    EqualsValueClauseSyntax initializerOpt,
                    DiagnosticBag diagnostics)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10306, 19171, 20079);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 19373, 19434);

                f_10306_19373_19433((object)f_10306_19394_19423(this) == field);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 19450, 19537) || true) && (initializerOpt == null)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 19450, 19537);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 19510, 19522);

                    return null;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 19450, 19537);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 19553, 19611);

                Binder
                initializerBinder = f_10306_19580_19610(this, initializerOpt)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 19625, 19665);

                f_10306_19625_19664(initializerBinder != null);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 19681, 19927);

                BoundExpression
                result = f_10306_19706_19926(initializerBinder, initializerOpt, RefKind.None, f_10306_19853_19907(field, f_10306_19872_19906(initializerBinder)).Type, diagnostics)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 19943, 20068);

                return f_10306_19950_20067(initializerOpt, field, f_10306_19999_20058(initializerBinder, initializerOpt), result);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10306, 19171, 20079);

                Microsoft.CodeAnalysis.CSharp.Symbol?
                f_10306_19394_19423(Microsoft.CodeAnalysis.CSharp.Binder
                this_param)
                {
                    var return_v = this_param.ContainingMemberOrLambda;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 19394, 19423);
                    return return_v;
                }


                int
                f_10306_19373_19433(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 19373, 19433);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.Binder?
                f_10306_19580_19610(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.EqualsValueClauseSyntax
                node)
                {
                    var return_v = this_param.GetBinder((Microsoft.CodeAnalysis.SyntaxNode)node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 19580, 19610);
                    return return_v;
                }


                int
                f_10306_19625_19664(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 19625, 19664);
                    return 0;
                }


                Roslyn.Utilities.ConsList<Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol>
                f_10306_19872_19906(Microsoft.CodeAnalysis.CSharp.Binder
                this_param)
                {
                    var return_v = this_param.FieldsBeingBound;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 19872, 19906);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                f_10306_19853_19907(Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol
                this_param, Roslyn.Utilities.ConsList<Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol>
                fieldsBeingBound)
                {
                    var return_v = this_param.GetFieldType(fieldsBeingBound);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 19853, 19907);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_19706_19926(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.EqualsValueClauseSyntax
                initializerOpt, Microsoft.CodeAnalysis.RefKind
                refKind, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                varType, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.BindVariableOrAutoPropInitializerValue(initializerOpt, refKind, varType, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 19706, 19926);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.LocalSymbol>
                f_10306_19999_20058(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.EqualsValueClauseSyntax
                scopeDesignator)
                {
                    var return_v = this_param.GetDeclaredLocalsForScope((Microsoft.CodeAnalysis.SyntaxNode)scopeDesignator);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 19999, 20058);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundFieldEqualsValue
                f_10306_19950_20067(Microsoft.CodeAnalysis.CSharp.Syntax.EqualsValueClauseSyntax
                syntax, Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol
                field, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.LocalSymbol>
                locals, Microsoft.CodeAnalysis.CSharp.BoundExpression
                value)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.BoundFieldEqualsValue((Microsoft.CodeAnalysis.SyntaxNode)syntax, field, locals, value);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 19950, 20067);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 19171, 20079);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 19171, 20079);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        internal BoundExpression BindVariableOrAutoPropInitializerValue(
                    EqualsValueClauseSyntax initializerOpt,
                    RefKind refKind,
                    TypeSymbol varType,
                    DiagnosticBag diagnostics)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10306, 20091, 20872);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 20336, 20423) || true) && (initializerOpt == null)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 20336, 20423);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 20396, 20408);

                    return null;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 20336, 20423);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 20439, 20463);

                BindValueKind
                valueKind
                = default(BindValueKind);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 20477, 20500);

                ExpressionSyntax
                value
                = default(ExpressionSyntax);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 20514, 20620);

                f_10306_20514_20619(initializerOpt, initializerOpt, refKind, diagnostics, out valueKind, out value);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 20634, 20733);

                BoundExpression
                initializer = f_10306_20664_20732(this, value, varType, valueKind, diagnostics)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 20747, 20828);

                initializer = f_10306_20761_20827(this, varType, initializer, diagnostics);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 20842, 20861);

                return initializer;
                DynAbs.Tracing.TraceSender.TraceExitMethod(10306, 20091, 20872);

                bool
                f_10306_20514_20619(Microsoft.CodeAnalysis.CSharp.Syntax.EqualsValueClauseSyntax
                initializer, Microsoft.CodeAnalysis.CSharp.Syntax.EqualsValueClauseSyntax
                node, Microsoft.CodeAnalysis.RefKind
                variableRefKind, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, out Microsoft.CodeAnalysis.CSharp.Binder.BindValueKind
                valueKind, out Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                value)
                {
                    var return_v = IsInitializerRefKindValid(initializer, (Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode)node, variableRefKind, diagnostics, out valueKind, out value);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 20514, 20619);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_20664_20732(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                node, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                destinationType, Microsoft.CodeAnalysis.CSharp.Binder.BindValueKind
                valueKind, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.BindPossibleArrayInitializer(node, destinationType, valueKind, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 20664, 20732);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_20761_20827(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                targetType, Microsoft.CodeAnalysis.CSharp.BoundExpression
                expression, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.GenerateConversionForAssignment(targetType, expression, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 20761, 20827);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 20091, 20872);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 20091, 20872);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        internal Binder CreateBinderForParameterDefaultValue(
                    ParameterSymbol parameter,
                    EqualsValueClauseSyntax defaultValueSyntax)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10306, 20884, 21414);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 21059, 21211);

                var
                binder = f_10306_21072_21210(f_10306_21093_21209(f_10306_21093_21154(this, f_10306_21127_21153(parameter)), BinderFlags.ParameterDefaultValue))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 21225, 21403);

                return f_10306_21232_21402(defaultValueSyntax, f_10306_21322_21348(parameter), binder);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10306, 20884, 21414);

                Microsoft.CodeAnalysis.CSharp.Symbol
                f_10306_21127_21153(Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol
                this_param)
                {
                    var return_v = this_param.ContainingSymbol;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 21127, 21153);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Binder
                f_10306_21093_21154(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Symbol
                containing)
                {
                    var return_v = this_param.WithContainingMemberOrLambda(containing);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 21093, 21154);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Binder
                f_10306_21093_21209(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.BinderFlags
                flags)
                {
                    var return_v = this_param.WithAdditionalFlags(flags);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 21093, 21209);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.LocalScopeBinder
                f_10306_21072_21210(Microsoft.CodeAnalysis.CSharp.Binder
                next)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.LocalScopeBinder(next);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 21072, 21210);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbol
                f_10306_21322_21348(Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol
                this_param)
                {
                    var return_v = this_param.ContainingSymbol;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 21322, 21348);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.ExecutableCodeBinder
                f_10306_21232_21402(Microsoft.CodeAnalysis.CSharp.Syntax.EqualsValueClauseSyntax
                root, Microsoft.CodeAnalysis.CSharp.Symbol
                memberSymbol, Microsoft.CodeAnalysis.CSharp.LocalScopeBinder
                next)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.ExecutableCodeBinder((Microsoft.CodeAnalysis.SyntaxNode)root, memberSymbol, (Microsoft.CodeAnalysis.CSharp.Binder)next);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 21232, 21402);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 20884, 21414);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 20884, 21414);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        internal BoundParameterEqualsValue BindParameterDefaultValue(
                    EqualsValueClauseSyntax defaultValueSyntax,
                    ParameterSymbol parameter,
                    DiagnosticBag diagnostics,
                    out BoundExpression valueBeforeConversion)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10306, 21426, 22742);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 21705, 21748);

                f_10306_21705_21747(f_10306_21718_21746(this));
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 21762, 21893);

                f_10306_21762_21892(f_10306_21775_21809(f_10306_21775_21804(this)) == SymbolKind.Method || (DynAbs.Tracing.TraceSender.Expression_False(10306, 21775, 21891) || f_10306_21834_21868(f_10306_21834_21863(this)) == SymbolKind.Property));
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 22001, 22064);

                Binder
                defaultValueBinder = f_10306_22029_22063(this, defaultValueSyntax)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 22078, 22119);

                f_10306_22078_22118(defaultValueBinder != null);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 22135, 22249);

                valueBeforeConversion = f_10306_22159_22248(defaultValueBinder, f_10306_22188_22212(defaultValueSyntax), diagnostics, BindValueKind.RValue);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 22436, 22731);

                return f_10306_22443_22730(defaultValueSyntax, parameter, f_10306_22504_22568(defaultValueBinder, defaultValueSyntax), f_10306_22601_22729(defaultValueBinder, f_10306_22652_22666(parameter), valueBeforeConversion, diagnostics, isDefaultParameter: true));
                DynAbs.Tracing.TraceSender.TraceExitMethod(10306, 21426, 22742);

                bool
                f_10306_21718_21746(Microsoft.CodeAnalysis.CSharp.Binder
                this_param)
                {
                    var return_v = this_param.InParameterDefaultValue;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 21718, 21746);
                    return return_v;
                }


                int
                f_10306_21705_21747(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 21705, 21747);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.Symbol?
                f_10306_21775_21804(Microsoft.CodeAnalysis.CSharp.Binder
                this_param)
                {
                    var return_v = this_param.ContainingMemberOrLambda;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 21775, 21804);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SymbolKind
                f_10306_21775_21809(Microsoft.CodeAnalysis.CSharp.Symbol?
                this_param)
                {
                    var return_v = this_param.Kind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 21775, 21809);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbol
                f_10306_21834_21863(Microsoft.CodeAnalysis.CSharp.Binder
                this_param)
                {
                    var return_v = this_param.ContainingMemberOrLambda;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 21834, 21863);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SymbolKind
                f_10306_21834_21868(Microsoft.CodeAnalysis.CSharp.Symbol
                this_param)
                {
                    var return_v = this_param.Kind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 21834, 21868);
                    return return_v;
                }


                int
                f_10306_21762_21892(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 21762, 21892);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.Binder?
                f_10306_22029_22063(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.EqualsValueClauseSyntax
                node)
                {
                    var return_v = this_param.GetBinder((Microsoft.CodeAnalysis.SyntaxNode)node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 22029, 22063);
                    return return_v;
                }


                int
                f_10306_22078_22118(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 22078, 22118);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                f_10306_22188_22212(Microsoft.CodeAnalysis.CSharp.Syntax.EqualsValueClauseSyntax
                this_param)
                {
                    var return_v = this_param.Value;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 22188, 22212);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_22159_22248(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                node, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.Binder.BindValueKind
                valueKind)
                {
                    var return_v = this_param.BindValue(node, diagnostics, valueKind);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 22159, 22248);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.LocalSymbol>
                f_10306_22504_22568(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.EqualsValueClauseSyntax
                scopeDesignator)
                {
                    var return_v = this_param.GetDeclaredLocalsForScope((Microsoft.CodeAnalysis.SyntaxNode)scopeDesignator);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 22504, 22568);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                f_10306_22652_22666(Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 22652, 22666);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_22601_22729(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                targetType, Microsoft.CodeAnalysis.CSharp.BoundExpression
                expression, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, bool
                isDefaultParameter)
                {
                    var return_v = this_param.GenerateConversionForAssignment(targetType, expression, diagnostics, isDefaultParameter: isDefaultParameter);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 22601, 22729);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundParameterEqualsValue
                f_10306_22443_22730(Microsoft.CodeAnalysis.CSharp.Syntax.EqualsValueClauseSyntax
                syntax, Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol
                parameter, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.LocalSymbol>
                locals, Microsoft.CodeAnalysis.CSharp.BoundExpression
                value)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.BoundParameterEqualsValue((Microsoft.CodeAnalysis.SyntaxNode)syntax, parameter, locals, value);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 22443, 22730);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 21426, 22742);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 21426, 22742);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        internal BoundFieldEqualsValue BindEnumConstantInitializer(
                    SourceEnumConstantSymbol symbol,
                    EqualsValueClauseSyntax equalsValueSyntax,
                    DiagnosticBag diagnostics)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10306, 22754, 23525);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 22980, 23041);

                Binder
                initializerBinder = f_10306_23007_23040(this, equalsValueSyntax)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 23055, 23095);

                f_10306_23055_23094(initializerBinder != null);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 23111, 23217);

                var
                initializer = f_10306_23129_23216(initializerBinder, f_10306_23157_23180(equalsValueSyntax), diagnostics, BindValueKind.RValue)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 23231, 23363);

                initializer = f_10306_23245_23362(initializerBinder, f_10306_23295_23335(f_10306_23295_23316(symbol)), initializer, diagnostics);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 23377, 23514);

                return f_10306_23384_23513(equalsValueSyntax, symbol, f_10306_23437_23499(initializerBinder, equalsValueSyntax), initializer);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10306, 22754, 23525);

                Microsoft.CodeAnalysis.CSharp.Binder?
                f_10306_23007_23040(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.EqualsValueClauseSyntax
                node)
                {
                    var return_v = this_param.GetBinder((Microsoft.CodeAnalysis.SyntaxNode)node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 23007, 23040);
                    return return_v;
                }


                int
                f_10306_23055_23094(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 23055, 23094);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                f_10306_23157_23180(Microsoft.CodeAnalysis.CSharp.Syntax.EqualsValueClauseSyntax
                this_param)
                {
                    var return_v = this_param.Value;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 23157, 23180);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_23129_23216(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                node, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.Binder.BindValueKind
                valueKind)
                {
                    var return_v = this_param.BindValue(node, diagnostics, valueKind);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 23129, 23216);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                f_10306_23295_23316(Microsoft.CodeAnalysis.CSharp.Symbols.SourceEnumConstantSymbol
                this_param)
                {
                    var return_v = this_param.ContainingType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 23295, 23316);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                f_10306_23295_23335(Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                this_param)
                {
                    var return_v = this_param.EnumUnderlyingType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 23295, 23335);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_23245_23362(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                targetType, Microsoft.CodeAnalysis.CSharp.BoundExpression
                expression, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.GenerateConversionForAssignment((Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol)targetType, expression, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 23245, 23362);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.LocalSymbol>
                f_10306_23437_23499(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.EqualsValueClauseSyntax
                scopeDesignator)
                {
                    var return_v = this_param.GetDeclaredLocalsForScope((Microsoft.CodeAnalysis.SyntaxNode)scopeDesignator);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 23437, 23499);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundFieldEqualsValue
                f_10306_23384_23513(Microsoft.CodeAnalysis.CSharp.Syntax.EqualsValueClauseSyntax
                syntax, Microsoft.CodeAnalysis.CSharp.Symbols.SourceEnumConstantSymbol
                field, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.LocalSymbol>
                locals, Microsoft.CodeAnalysis.CSharp.BoundExpression
                value)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.BoundFieldEqualsValue((Microsoft.CodeAnalysis.SyntaxNode)syntax, (Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol)field, locals, value);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 23384, 23513);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 22754, 23525);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 22754, 23525);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public BoundExpression BindExpression(ExpressionSyntax node, DiagnosticBag diagnostics)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10306, 23537, 23746);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 23649, 23735);

                return f_10306_23656_23734(this, node, diagnostics: diagnostics, invoked: false, indexed: false);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10306, 23537, 23746);

                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_23656_23734(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                node, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, bool
                invoked, bool
                indexed)
                {
                    var return_v = this_param.BindExpression(node, diagnostics: diagnostics, invoked: invoked, indexed: indexed);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 23656, 23734);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 23537, 23746);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 23537, 23746);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        protected BoundExpression BindExpression(ExpressionSyntax node, DiagnosticBag diagnostics, bool invoked, bool indexed)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10306, 23758, 24390);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 23901, 23984);

                BoundExpression
                expr = f_10306_23924_23983(this, node, diagnostics, invoked, indexed)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 23998, 24039);

                f_10306_23998_24038(this, node, diagnostics, expr);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 24055, 24351) || true) && (f_10306_24059_24068(expr) == BoundKind.ArgListOperator)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 24055, 24351);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 24234, 24289);

                    f_10306_24234_24288(diagnostics, ErrorCode.ERR_IllegalArglist, node);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 24307, 24336);

                    expr = f_10306_24314_24335(this, expr);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 24055, 24351);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 24367, 24379);

                return expr;
                DynAbs.Tracing.TraceSender.TraceExitMethod(10306, 23758, 24390);

                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_23924_23983(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                node, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, bool
                invoked, bool
                indexed)
                {
                    var return_v = this_param.BindExpressionInternal(node, diagnostics, invoked, indexed);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 23924, 23983);
                    return return_v;
                }


                int
                f_10306_23998_24038(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                node, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.BoundExpression
                expr)
                {
                    this_param.VerifyUnchecked(node, diagnostics, expr);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 23998, 24038);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.BoundKind
                f_10306_24059_24068(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.Kind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 24059, 24068);
                    return return_v;
                }


                int
                f_10306_24234_24288(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                syntax)
                {
                    Error(diagnostics, code, (Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode)syntax);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 24234, 24288);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_24314_24335(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                expr)
                {
                    var return_v = this_param.ToBadExpression(expr);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 24314, 24335);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 23758, 24390);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 23758, 24390);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        protected BoundExpression BindExpressionAllowArgList(ExpressionSyntax node, DiagnosticBag diagnostics)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10306, 24690, 25006);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 24817, 24914);

                BoundExpression
                expr = f_10306_24840_24913(this, node, diagnostics, invoked: false, indexed: false)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 24928, 24969);

                f_10306_24928_24968(this, node, diagnostics, expr);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 24983, 24995);

                return expr;
                DynAbs.Tracing.TraceSender.TraceExitMethod(10306, 24690, 25006);

                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_24840_24913(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                node, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, bool
                invoked, bool
                indexed)
                {
                    var return_v = this_param.BindExpressionInternal(node, diagnostics, invoked: invoked, indexed: indexed);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 24840, 24913);
                    return return_v;
                }


                int
                f_10306_24928_24968(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                node, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.BoundExpression
                expr)
                {
                    this_param.VerifyUnchecked(node, diagnostics, expr);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 24928, 24968);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 24690, 25006);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 24690, 25006);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private void VerifyUnchecked(ExpressionSyntax node, DiagnosticBag diagnostics, BoundExpression expr)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10306, 25018, 25534);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 25143, 25523) || true) && (f_10306_25147_25165_M(!expr.HasAnyErrors) && (DynAbs.Tracing.TraceSender.Expression_True(10306, 25147, 25184) && f_10306_25169_25184_M(!IsInsideNameof)))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 25143, 25523);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 25218, 25250);

                    TypeSymbol
                    exprType = f_10306_25240_25249(expr)
                    ;

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 25268, 25508) || true) && ((object)exprType != null && (DynAbs.Tracing.TraceSender.Expression_True(10306, 25272, 25319) && f_10306_25300_25319(exprType)))
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 25268, 25508);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 25361, 25405);

                        f_10306_25361_25404(this, node, diagnostics);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 25268, 25508);
                    }
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 25143, 25523);
                }
                DynAbs.Tracing.TraceSender.TraceExitMethod(10306, 25018, 25534);

                bool
                f_10306_25147_25165_M(bool
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 25147, 25165);
                    return return_v;
                }


                bool
                f_10306_25169_25184_M(bool
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 25169, 25184);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?
                f_10306_25240_25249(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 25240, 25249);
                    return return_v;
                }


                bool
                f_10306_25300_25319(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                type)
                {
                    var return_v = type.IsUnsafe();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 25300, 25319);
                    return return_v;
                }


                bool
                f_10306_25361_25404(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                node, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.ReportUnsafeIfNotAllowed((Microsoft.CodeAnalysis.SyntaxNode)node, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 25361, 25404);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 25018, 25534);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 25018, 25534);
            }
        }

        private BoundExpression BindExpressionInternal(ExpressionSyntax node, DiagnosticBag diagnostics, bool invoked, bool indexed)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10306, 25546, 39600);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 25695, 25899) || true) && (f_10306_25699_25721() && (DynAbs.Tracing.TraceSender.Expression_True(10306, 25699, 25795) && !f_10306_25726_25795(node, this)))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 25695, 25899);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 25829, 25884);

                    return f_10306_25836_25883(this, node, LookupResultKind.NotAValue);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 25695, 25899);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 25915, 25942);

                f_10306_25915_25941(node != null);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 25956, 39589);

                switch (f_10306_25964_25975(node))
                {

                    case SyntaxKind.AnonymousMethodExpression:
                    case SyntaxKind.ParenthesizedLambdaExpression:
                    case SyntaxKind.SimpleLambdaExpression:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 25956, 39589);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 26194, 26277);

                        return f_10306_26201_26276(this, node, diagnostics);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 25956, 39589);

                    case SyntaxKind.ThisExpression:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 25956, 39589);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 26348, 26405);

                        return f_10306_26355_26404(this, node, diagnostics);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 25956, 39589);

                    case SyntaxKind.BaseExpression:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 25956, 39589);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 26476, 26533);

                        return f_10306_26483_26532(this, node, diagnostics);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 25956, 39589);

                    case SyntaxKind.InvocationExpression:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 25956, 39589);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 26610, 26689);

                        return f_10306_26617_26688(this, node, diagnostics);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 25956, 39589);

                    case SyntaxKind.ArrayInitializerExpression:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 25956, 39589);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 26772, 26893);

                        return f_10306_26779_26892(this, node, diagnostics, ErrorCode.ERR_ArrayInitInBadPlace);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 25956, 39589);

                    case SyntaxKind.ArrayCreationExpression:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 25956, 39589);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 26973, 27058);

                        return f_10306_26980_27057(this, node, diagnostics);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 25956, 39589);

                    case SyntaxKind.ImplicitArrayCreationExpression:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 25956, 39589);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 27146, 27247);

                        return f_10306_27153_27246(this, node, diagnostics);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 25956, 39589);

                    case SyntaxKind.StackAllocArrayCreationExpression:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 25956, 39589);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 27337, 27442);

                        return f_10306_27344_27441(this, node, diagnostics);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 25956, 39589);

                    case SyntaxKind.ImplicitStackAllocArrayCreationExpression:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 25956, 39589);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 27540, 27661);

                        return f_10306_27547_27660(this, node, diagnostics);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 25956, 39589);

                    case SyntaxKind.ObjectCreationExpression:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 25956, 39589);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 27742, 27829);

                        return f_10306_27749_27828(this, node, diagnostics);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 25956, 39589);

                    case SyntaxKind.ImplicitObjectCreationExpression:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 25956, 39589);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 27918, 28021);

                        return f_10306_27925_28020(this, node, diagnostics);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 25956, 39589);

                    case SyntaxKind.IdentifierName:
                    case SyntaxKind.GenericName:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 25956, 39589);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 28138, 28215);

                        return f_10306_28145_28214(this, node, invoked, indexed, diagnostics);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 25956, 39589);

                    case SyntaxKind.SimpleMemberAccessExpression:
                    case SyntaxKind.PointerMemberAccessExpression:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 25956, 39589);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 28364, 28468);

                        return f_10306_28371_28467(this, node, invoked, indexed, diagnostics: diagnostics);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 25956, 39589);

                    case SyntaxKind.SimpleAssignmentExpression:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 25956, 39589);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 28551, 28620);

                        return f_10306_28558_28619(this, node, diagnostics);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 25956, 39589);

                    case SyntaxKind.CastExpression:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 25956, 39589);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 28691, 28748);

                        return f_10306_28698_28747(this, node, diagnostics);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 25956, 39589);

                    case SyntaxKind.ElementAccessExpression:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 25956, 39589);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 28828, 28903);

                        return f_10306_28835_28902(this, node, diagnostics);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 25956, 39589);

                    case SyntaxKind.AddExpression:
                    case SyntaxKind.MultiplyExpression:
                    case SyntaxKind.SubtractExpression:
                    case SyntaxKind.DivideExpression:
                    case SyntaxKind.ModuloExpression:
                    case SyntaxKind.EqualsExpression:
                    case SyntaxKind.NotEqualsExpression:
                    case SyntaxKind.GreaterThanExpression:
                    case SyntaxKind.LessThanExpression:
                    case SyntaxKind.GreaterThanOrEqualExpression:
                    case SyntaxKind.LessThanOrEqualExpression:
                    case SyntaxKind.BitwiseAndExpression:
                    case SyntaxKind.BitwiseOrExpression:
                    case SyntaxKind.ExclusiveOrExpression:
                    case SyntaxKind.LeftShiftExpression:
                    case SyntaxKind.RightShiftExpression:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 25956, 39589);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 29792, 29867);

                        return f_10306_29799_29866(this, node, diagnostics);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 25956, 39589);

                    case SyntaxKind.LogicalAndExpression:
                    case SyntaxKind.LogicalOrExpression:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 25956, 39589);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 29998, 30079);

                        return f_10306_30005_30078(this, node, diagnostics);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 25956, 39589);

                    case SyntaxKind.CoalesceExpression:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 25956, 39589);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 30154, 30231);

                        return f_10306_30161_30230(this, node, diagnostics);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 25956, 39589);

                    case SyntaxKind.ConditionalAccessExpression:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 25956, 39589);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 30315, 30408);

                        return f_10306_30322_30407(this, node, diagnostics);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 25956, 39589);

                    case SyntaxKind.MemberBindingExpression:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 25956, 39589);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 30490, 30593);

                        return f_10306_30497_30592(this, node, invoked, indexed, diagnostics);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 25956, 39589);

                    case SyntaxKind.ElementBindingExpression:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 25956, 39589);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 30676, 30763);

                        return f_10306_30683_30762(this, node, diagnostics);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 25956, 39589);

                    case SyntaxKind.IsExpression:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 25956, 39589);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 30834, 30899);

                        return f_10306_30841_30898(this, node, diagnostics);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 25956, 39589);

                    case SyntaxKind.AsExpression:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 25956, 39589);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 30970, 31035);

                        return f_10306_30977_31034(this, node, diagnostics);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 25956, 39589);

                    case SyntaxKind.UnaryPlusExpression:
                    case SyntaxKind.UnaryMinusExpression:
                    case SyntaxKind.LogicalNotExpression:
                    case SyntaxKind.BitwiseNotExpression:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 25956, 39589);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 31278, 31351);

                        return f_10306_31285_31350(this, node, diagnostics);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 25956, 39589);

                    case SyntaxKind.IndexExpression:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 25956, 39589);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 31425, 31507);

                        return f_10306_31432_31506(this, node, diagnostics);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 25956, 39589);

                    case SyntaxKind.RangeExpression:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 25956, 39589);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 31581, 31650);

                        return f_10306_31588_31649(this, node, diagnostics);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 25956, 39589);

                    case SyntaxKind.AddressOfExpression:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 25956, 39589);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 31728, 31807);

                        return f_10306_31735_31806(this, node, diagnostics);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 25956, 39589);

                    case SyntaxKind.PointerIndirectionExpression:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 25956, 39589);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 31894, 31982);

                        return f_10306_31901_31981(this, node, diagnostics);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 25956, 39589);

                    case SyntaxKind.PostIncrementExpression:
                    case SyntaxKind.PostDecrementExpression:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 25956, 39589);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 32122, 32268);

                        return f_10306_32129_32267(this, node, f_10306_32157_32201(((PostfixUnaryExpressionSyntax)node)), f_10306_32203_32253(((PostfixUnaryExpressionSyntax)node)), diagnostics);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 25956, 39589);

                    case SyntaxKind.PreIncrementExpression:
                    case SyntaxKind.PreDecrementExpression:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 25956, 39589);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 32406, 32550);

                        return f_10306_32413_32549(this, node, f_10306_32441_32484(((PrefixUnaryExpressionSyntax)node)), f_10306_32486_32535(((PrefixUnaryExpressionSyntax)node)), diagnostics);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 25956, 39589);

                    case SyntaxKind.ConditionalExpression:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 25956, 39589);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 32630, 32709);

                        return f_10306_32637_32708(this, node, diagnostics);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 25956, 39589);

                    case SyntaxKind.SwitchExpression:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 25956, 39589);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 32784, 32855);

                        return f_10306_32791_32854(this, node, diagnostics);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 25956, 39589);

                    case SyntaxKind.NumericLiteralExpression:
                    case SyntaxKind.StringLiteralExpression:
                    case SyntaxKind.CharacterLiteralExpression:
                    case SyntaxKind.TrueLiteralExpression:
                    case SyntaxKind.FalseLiteralExpression:
                    case SyntaxKind.NullLiteralExpression:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 25956, 39589);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 33226, 33297);

                        return f_10306_33233_33296(this, node, diagnostics);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 25956, 39589);

                    case SyntaxKind.DefaultLiteralExpression:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 25956, 39589);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 33380, 33417);

                        return f_10306_33387_33416(node);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 25956, 39589);

                    case SyntaxKind.ParenthesizedExpression:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 25956, 39589);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 33637, 33735);

                        return f_10306_33644_33734(this, f_10306_33672_33720(((ParenthesizedExpressionSyntax)node)), diagnostics);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 25956, 39589);

                    case SyntaxKind.UncheckedExpression:
                    case SyntaxKind.CheckedExpression:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 25956, 39589);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 33865, 33938);

                        return f_10306_33872_33937(this, node, diagnostics);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 25956, 39589);

                    case SyntaxKind.DefaultExpression:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 25956, 39589);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 34014, 34087);

                        return f_10306_34021_34086(this, node, diagnostics);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 25956, 39589);

                    case SyntaxKind.TypeOfExpression:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 25956, 39589);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 34162, 34223);

                        return f_10306_34169_34222(this, node, diagnostics);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 25956, 39589);

                    case SyntaxKind.SizeOfExpression:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 25956, 39589);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 34298, 34359);

                        return f_10306_34305_34358(this, node, diagnostics);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 25956, 39589);

                    case SyntaxKind.AddAssignmentExpression:
                    case SyntaxKind.AndAssignmentExpression:
                    case SyntaxKind.DivideAssignmentExpression:
                    case SyntaxKind.ExclusiveOrAssignmentExpression:
                    case SyntaxKind.LeftShiftAssignmentExpression:
                    case SyntaxKind.ModuloAssignmentExpression:
                    case SyntaxKind.MultiplyAssignmentExpression:
                    case SyntaxKind.OrAssignmentExpression:
                    case SyntaxKind.RightShiftAssignmentExpression:
                    case SyntaxKind.SubtractAssignmentExpression:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 25956, 39589);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 34999, 35076);

                        return f_10306_35006_35075(this, node, diagnostics);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 25956, 39589);

                    case SyntaxKind.CoalesceAssignmentExpression:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 25956, 39589);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 35163, 35254);

                        return f_10306_35170_35253(this, node, diagnostics);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 25956, 39589);

                    case SyntaxKind.AliasQualifiedName:
                    case SyntaxKind.PredefinedType:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 25956, 39589);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 35380, 35431);

                        return f_10306_35387_35430(this, node, diagnostics);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 25956, 39589);

                    case SyntaxKind.QueryExpression:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 25956, 39589);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 35505, 35569);

                        return f_10306_35512_35568(this, node, diagnostics);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 25956, 39589);

                    case SyntaxKind.AnonymousObjectCreationExpression:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 25956, 39589);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 35661, 35756);

                        return f_10306_35668_35755(this, node, diagnostics);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 25956, 39589);

                    case SyntaxKind.QualifiedName:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 25956, 39589);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 35828, 35893);

                        return f_10306_35835_35892(this, node, diagnostics);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 25956, 39589);

                    case SyntaxKind.ComplexElementInitializerExpression:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 25956, 39589);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 35987, 36082);

                        return f_10306_35994_36081(this, node, diagnostics);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 25956, 39589);

                    case SyntaxKind.ArgListExpression:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 25956, 39589);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 36158, 36196);

                        return f_10306_36165_36195(this, node, diagnostics);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 25956, 39589);

                    case SyntaxKind.RefTypeExpression:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 25956, 39589);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 36272, 36335);

                        return f_10306_36279_36334(this, node, diagnostics);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 25956, 39589);

                    case SyntaxKind.MakeRefExpression:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 25956, 39589);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 36411, 36474);

                        return f_10306_36418_36473(this, node, diagnostics);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 25956, 39589);

                    case SyntaxKind.RefValueExpression:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 25956, 39589);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 36551, 36616);

                        return f_10306_36558_36615(this, node, diagnostics);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 25956, 39589);

                    case SyntaxKind.AwaitExpression:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 25956, 39589);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 36690, 36749);

                        return f_10306_36697_36748(this, node, diagnostics);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 25956, 39589);

                    case SyntaxKind.OmittedArraySizeExpression:
                    case SyntaxKind.OmittedTypeArgument:
                    case SyntaxKind.ObjectInitializerExpression:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 25956, 39589);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 37090, 37117);

                        return f_10306_37097_37116(this, node);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 25956, 39589);

                    case SyntaxKind.NullableType:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 25956, 39589);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 37711, 37738);

                        return f_10306_37718_37737(this, node);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 25956, 39589);

                    case SyntaxKind.InterpolatedStringExpression:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 25956, 39589);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 37825, 37910);

                        return f_10306_37832_37909(this, node, diagnostics);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 25956, 39589);

                    case SyntaxKind.IsPatternExpression:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 25956, 39589);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 37988, 38065);

                        return f_10306_37995_38064(this, node, diagnostics);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 25956, 39589);

                    case SyntaxKind.TupleExpression:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 25956, 39589);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 38139, 38208);

                        return f_10306_38146_38207(this, node, diagnostics);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 25956, 39589);

                    case SyntaxKind.ThrowExpression:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 25956, 39589);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 38282, 38351);

                        return f_10306_38289_38350(this, node, diagnostics);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 25956, 39589);

                    case SyntaxKind.RefType:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 25956, 39589);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 38417, 38455);

                        return f_10306_38424_38454(this, node, diagnostics);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 25956, 39589);

                    case SyntaxKind.RefExpression:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 25956, 39589);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 38527, 38571);

                        return f_10306_38534_38570(this, node, diagnostics);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 25956, 39589);

                    case SyntaxKind.DeclarationExpression:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 25956, 39589);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 38651, 38739);

                        return f_10306_38658_38738(this, node, diagnostics);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 25956, 39589);

                    case SyntaxKind.SuppressNullableWarningExpression:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 25956, 39589);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 38831, 38925);

                        return f_10306_38838_38924(this, node, diagnostics);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 25956, 39589);

                    case SyntaxKind.WithExpression:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 25956, 39589);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 38998, 39065);

                        return f_10306_39005_39064(this, node, diagnostics);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 25956, 39589);

                    default:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 25956, 39589);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 39383, 39443);

                        f_10306_39383_39442(false, "Unexpected SyntaxKind " + DynAbs.Tracing.TraceSender.TraceInvocationWrapper(() => (f_10306_39430_39441(node)).ToString(), 10306, 39430, 39441));
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 39465, 39525);

                        f_10306_39465_39524(diagnostics, ErrorCode.ERR_InternalError, f_10306_39510_39523(node));
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 39547, 39574);

                        return f_10306_39554_39573(this, node);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 25956, 39589);
                }
                DynAbs.Tracing.TraceSender.TraceExitMethod(10306, 25546, 39600);

                bool
                f_10306_25699_25721()
                {
                    var return_v = IsEarlyAttributeBinder;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 25699, 25721);
                    return return_v;
                }


                bool
                f_10306_25726_25795(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                node, Microsoft.CodeAnalysis.CSharp.Binder
                typeBinder)
                {
                    var return_v = EarlyWellKnownAttributeBinder.CanBeValidAttributeArgument(node, typeBinder);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 25726, 25795);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundBadExpression
                f_10306_25836_25883(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                syntax, Microsoft.CodeAnalysis.CSharp.LookupResultKind
                lookupResultKind)
                {
                    var return_v = this_param.BadExpression((Microsoft.CodeAnalysis.SyntaxNode)syntax, lookupResultKind);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 25836, 25883);
                    return return_v;
                }


                int
                f_10306_25915_25941(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 25915, 25941);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.SyntaxKind
                f_10306_25964_25975(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                this_param)
                {
                    var return_v = this_param.Kind();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 25964, 25975);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.UnboundLambda
                f_10306_26201_26276(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                syntax, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.BindAnonymousFunction((Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousFunctionExpressionSyntax)syntax, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 26201, 26276);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundThisReference
                f_10306_26355_26404(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                node, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.BindThis((Microsoft.CodeAnalysis.CSharp.Syntax.ThisExpressionSyntax)node, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 26355, 26404);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundBaseReference
                f_10306_26483_26532(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                node, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.BindBase((Microsoft.CodeAnalysis.CSharp.Syntax.BaseExpressionSyntax)node, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 26483, 26532);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_26617_26688(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                node, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.BindInvocationExpression((Microsoft.CodeAnalysis.CSharp.Syntax.InvocationExpressionSyntax)node, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 26617, 26688);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundArrayInitialization
                f_10306_26779_26892(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                node, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                errorCode)
                {
                    var return_v = this_param.BindUnexpectedArrayInitializer((Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax)node, diagnostics, errorCode);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 26779, 26892);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_26980_27057(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                node, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.BindArrayCreationExpression((Microsoft.CodeAnalysis.CSharp.Syntax.ArrayCreationExpressionSyntax)node, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 26980, 27057);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_27153_27246(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                node, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.BindImplicitArrayCreationExpression((Microsoft.CodeAnalysis.CSharp.Syntax.ImplicitArrayCreationExpressionSyntax)node, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 27153, 27246);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_27344_27441(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                node, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.BindStackAllocArrayCreationExpression((Microsoft.CodeAnalysis.CSharp.Syntax.StackAllocArrayCreationExpressionSyntax)node, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 27344, 27441);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_27547_27660(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                node, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.BindImplicitStackAllocArrayCreationExpression((Microsoft.CodeAnalysis.CSharp.Syntax.ImplicitStackAllocArrayCreationExpressionSyntax)node, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 27547, 27660);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_27749_27828(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                node, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.BindObjectCreationExpression((Microsoft.CodeAnalysis.CSharp.Syntax.ObjectCreationExpressionSyntax)node, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 27749, 27828);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_27925_28020(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                node, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.BindImplicitObjectCreationExpression((Microsoft.CodeAnalysis.CSharp.Syntax.ImplicitObjectCreationExpressionSyntax)node, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 27925, 28020);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_28145_28214(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                node, bool
                invoked, bool
                indexed, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.BindIdentifier((Microsoft.CodeAnalysis.CSharp.Syntax.SimpleNameSyntax)node, invoked, indexed, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 28145, 28214);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_28371_28467(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                node, bool
                invoked, bool
                indexed, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.BindMemberAccess((Microsoft.CodeAnalysis.CSharp.Syntax.MemberAccessExpressionSyntax)node, invoked, indexed, diagnostics: diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 28371, 28467);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_28558_28619(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                node, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.BindAssignment((Microsoft.CodeAnalysis.CSharp.Syntax.AssignmentExpressionSyntax)node, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 28558, 28619);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_28698_28747(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                node, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.BindCast((Microsoft.CodeAnalysis.CSharp.Syntax.CastExpressionSyntax)node, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 28698, 28747);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_28835_28902(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                node, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.BindElementAccess((Microsoft.CodeAnalysis.CSharp.Syntax.ElementAccessExpressionSyntax)node, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 28835, 28902);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_29799_29866(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                node, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.BindSimpleBinaryOperator((Microsoft.CodeAnalysis.CSharp.Syntax.BinaryExpressionSyntax)node, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 29799, 29866);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_30005_30078(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                node, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.BindConditionalLogicalOperator((Microsoft.CodeAnalysis.CSharp.Syntax.BinaryExpressionSyntax)node, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 30005, 30078);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_30161_30230(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                node, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.BindNullCoalescingOperator((Microsoft.CodeAnalysis.CSharp.Syntax.BinaryExpressionSyntax)node, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 30161, 30230);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundConditionalAccess
                f_10306_30322_30407(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                node, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.BindConditionalAccessExpression((Microsoft.CodeAnalysis.CSharp.Syntax.ConditionalAccessExpressionSyntax)node, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 30322, 30407);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_30497_30592(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                node, bool
                invoked, bool
                indexed, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.BindMemberBindingExpression((Microsoft.CodeAnalysis.CSharp.Syntax.MemberBindingExpressionSyntax)node, invoked, indexed, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 30497, 30592);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_30683_30762(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                node, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.BindElementBindingExpression((Microsoft.CodeAnalysis.CSharp.Syntax.ElementBindingExpressionSyntax)node, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 30683, 30762);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_30841_30898(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                node, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.BindIsOperator((Microsoft.CodeAnalysis.CSharp.Syntax.BinaryExpressionSyntax)node, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 30841, 30898);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_30977_31034(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                node, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.BindAsOperator((Microsoft.CodeAnalysis.CSharp.Syntax.BinaryExpressionSyntax)node, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 30977, 31034);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_31285_31350(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                node, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.BindUnaryOperator((Microsoft.CodeAnalysis.CSharp.Syntax.PrefixUnaryExpressionSyntax)node, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 31285, 31350);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_31432_31506(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                node, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.BindFromEndIndexExpression((Microsoft.CodeAnalysis.CSharp.Syntax.PrefixUnaryExpressionSyntax)node, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 31432, 31506);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_31588_31649(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                node, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.BindRangeExpression((Microsoft.CodeAnalysis.CSharp.Syntax.RangeExpressionSyntax)node, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 31588, 31649);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_31735_31806(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                node, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.BindAddressOfExpression((Microsoft.CodeAnalysis.CSharp.Syntax.PrefixUnaryExpressionSyntax)node, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 31735, 31806);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_31901_31981(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                node, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.BindPointerIndirectionExpression((Microsoft.CodeAnalysis.CSharp.Syntax.PrefixUnaryExpressionSyntax)node, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 31901, 31981);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                f_10306_32157_32201(Microsoft.CodeAnalysis.CSharp.Syntax.PostfixUnaryExpressionSyntax
                this_param)
                {
                    var return_v = this_param.Operand;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 32157, 32201);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SyntaxToken
                f_10306_32203_32253(Microsoft.CodeAnalysis.CSharp.Syntax.PostfixUnaryExpressionSyntax
                this_param)
                {
                    var return_v = this_param.OperatorToken;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 32203, 32253);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_32129_32267(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                node, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                operandSyntax, Microsoft.CodeAnalysis.SyntaxToken
                operatorToken, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.BindIncrementOperator((Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode)node, operandSyntax, operatorToken, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 32129, 32267);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                f_10306_32441_32484(Microsoft.CodeAnalysis.CSharp.Syntax.PrefixUnaryExpressionSyntax
                this_param)
                {
                    var return_v = this_param.Operand;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 32441, 32484);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SyntaxToken
                f_10306_32486_32535(Microsoft.CodeAnalysis.CSharp.Syntax.PrefixUnaryExpressionSyntax
                this_param)
                {
                    var return_v = this_param.OperatorToken;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 32486, 32535);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_32413_32549(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                node, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                operandSyntax, Microsoft.CodeAnalysis.SyntaxToken
                operatorToken, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.BindIncrementOperator((Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode)node, operandSyntax, operatorToken, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 32413, 32549);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_32637_32708(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                node, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.BindConditionalOperator((Microsoft.CodeAnalysis.CSharp.Syntax.ConditionalExpressionSyntax)node, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 32637, 32708);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_32791_32854(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                node, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.BindSwitchExpression((Microsoft.CodeAnalysis.CSharp.Syntax.SwitchExpressionSyntax)node, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 32791, 32854);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundLiteral
                f_10306_33233_33296(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                node, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.BindLiteralConstant((Microsoft.CodeAnalysis.CSharp.Syntax.LiteralExpressionSyntax)node, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 33233, 33296);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundDefaultLiteral
                f_10306_33387_33416(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                syntax)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.BoundDefaultLiteral((Microsoft.CodeAnalysis.SyntaxNode)syntax);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 33387, 33416);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                f_10306_33672_33720(Microsoft.CodeAnalysis.CSharp.Syntax.ParenthesizedExpressionSyntax
                this_param)
                {
                    var return_v = this_param.Expression;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 33672, 33720);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_33644_33734(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                innerExpression, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.BindParenthesizedExpression(innerExpression, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 33644, 33734);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_33872_33937(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                node, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.BindCheckedExpression((Microsoft.CodeAnalysis.CSharp.Syntax.CheckedExpressionSyntax)node, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 33872, 33937);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_34021_34086(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                node, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.BindDefaultExpression((Microsoft.CodeAnalysis.CSharp.Syntax.DefaultExpressionSyntax)node, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 34021, 34086);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_34169_34222(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                node, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.BindTypeOf((Microsoft.CodeAnalysis.CSharp.Syntax.TypeOfExpressionSyntax)node, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 34169, 34222);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_34305_34358(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                node, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.BindSizeOf((Microsoft.CodeAnalysis.CSharp.Syntax.SizeOfExpressionSyntax)node, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 34305, 34358);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_35006_35075(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                node, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.BindCompoundAssignment((Microsoft.CodeAnalysis.CSharp.Syntax.AssignmentExpressionSyntax)node, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 35006, 35075);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_35170_35253(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                node, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.BindNullCoalescingAssignmentOperator((Microsoft.CodeAnalysis.CSharp.Syntax.AssignmentExpressionSyntax)node, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 35170, 35253);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_35387_35430(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                node, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.BindNamespaceOrType(node, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 35387, 35430);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_35512_35568(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                node, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.BindQuery((Microsoft.CodeAnalysis.CSharp.Syntax.QueryExpressionSyntax)node, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 35512, 35568);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_35668_35755(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                node, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.BindAnonymousObjectCreation((Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousObjectCreationExpressionSyntax)node, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 35668, 35755);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_35835_35892(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                node, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.BindQualifiedName((Microsoft.CodeAnalysis.CSharp.Syntax.QualifiedNameSyntax)node, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 35835, 35892);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_35994_36081(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                node, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.BindUnexpectedComplexElementInitializer((Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax)node, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 35994, 36081);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_36165_36195(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                node, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.BindArgList((Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode)node, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 36165, 36195);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_36279_36334(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                node, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.BindRefType((Microsoft.CodeAnalysis.CSharp.Syntax.RefTypeExpressionSyntax)node, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 36279, 36334);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_36418_36473(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                node, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.BindMakeRef((Microsoft.CodeAnalysis.CSharp.Syntax.MakeRefExpressionSyntax)node, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 36418, 36473);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_36558_36615(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                node, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.BindRefValue((Microsoft.CodeAnalysis.CSharp.Syntax.RefValueExpressionSyntax)node, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 36558, 36615);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_36697_36748(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                node, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.BindAwait((Microsoft.CodeAnalysis.CSharp.Syntax.AwaitExpressionSyntax)node, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 36697, 36748);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundBadExpression
                f_10306_37097_37116(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                syntax)
                {
                    var return_v = this_param.BadExpression((Microsoft.CodeAnalysis.SyntaxNode)syntax);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 37097, 37116);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundBadExpression
                f_10306_37718_37737(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                syntax)
                {
                    var return_v = this_param.BadExpression((Microsoft.CodeAnalysis.SyntaxNode)syntax);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 37718, 37737);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_37832_37909(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                node, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.BindInterpolatedString((Microsoft.CodeAnalysis.CSharp.Syntax.InterpolatedStringExpressionSyntax)node, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 37832, 37909);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_37995_38064(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                node, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.BindIsPatternExpression((Microsoft.CodeAnalysis.CSharp.Syntax.IsPatternExpressionSyntax)node, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 37995, 38064);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_38146_38207(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                node, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.BindTupleExpression((Microsoft.CodeAnalysis.CSharp.Syntax.TupleExpressionSyntax)node, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 38146, 38207);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_38289_38350(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                node, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.BindThrowExpression((Microsoft.CodeAnalysis.CSharp.Syntax.ThrowExpressionSyntax)node, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 38289, 38350);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_38424_38454(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                node, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.BindRefType(node, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 38424, 38454);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_38534_38570(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                node, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.BindRefExpression(node, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 38534, 38570);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_38658_38738(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                node, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.BindDeclarationExpressionAsError((Microsoft.CodeAnalysis.CSharp.Syntax.DeclarationExpressionSyntax)node, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 38658, 38738);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_38838_38924(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                node, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.BindSuppressNullableWarningExpression((Microsoft.CodeAnalysis.CSharp.Syntax.PostfixUnaryExpressionSyntax)node, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 38838, 38924);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_39005_39064(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                syntax, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.BindWithExpression((Microsoft.CodeAnalysis.CSharp.Syntax.WithExpressionSyntax)syntax, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 39005, 39064);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.SyntaxKind
                f_10306_39430_39441(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                this_param)
                {
                    var return_v = this_param.Kind();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 39430, 39441);
                    return return_v;
                }


                int
                f_10306_39383_39442(bool
                condition, string
                message)
                {
                    Debug.Assert(condition, message);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 39383, 39442);
                    return 0;
                }


                Microsoft.CodeAnalysis.Location
                f_10306_39510_39523(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                this_param)
                {
                    var return_v = this_param.Location;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 39510, 39523);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo
                f_10306_39465_39524(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, Microsoft.CodeAnalysis.Location
                location)
                {
                    var return_v = diagnostics.Add(code, location);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 39465, 39524);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundBadExpression
                f_10306_39554_39573(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                syntax)
                {
                    var return_v = this_param.BadExpression((Microsoft.CodeAnalysis.SyntaxNode)syntax);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 39554, 39573);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 25546, 39600);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 25546, 39600);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        internal virtual BoundSwitchExpressionArm BindSwitchExpressionArm(SwitchExpressionArmSyntax node, DiagnosticBag diagnostics)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10306, 39612, 39832);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 39761, 39821);

                return f_10306_39768_39820(f_10306_39768_39777(this), node, diagnostics);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10306, 39612, 39832);

                Microsoft.CodeAnalysis.CSharp.Binder?
                f_10306_39768_39777(Microsoft.CodeAnalysis.CSharp.Binder
                this_param)
                {
                    var return_v = this_param.Next;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 39768, 39777);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundSwitchExpressionArm
                f_10306_39768_39820(Microsoft.CodeAnalysis.CSharp.Binder?
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.SwitchExpressionArmSyntax
                node, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.BindSwitchExpressionArm(node, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 39768, 39820);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 39612, 39832);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 39612, 39832);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private BoundExpression BindRefExpression(ExpressionSyntax node, DiagnosticBag diagnostics)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10306, 39844, 40320);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 39960, 39998);

                var
                firstToken = f_10306_39977_39997(node)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 40012, 40107);

                f_10306_40012_40106(diagnostics, ErrorCode.ERR_UnexpectedToken, firstToken.GetLocation(), firstToken.ValueText);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 40121, 40309);

                return f_10306_40128_40308(node, LookupResultKind.Empty, ImmutableArray<Symbol>.Empty, ImmutableArray<BoundExpression>.Empty, f_10306_40285_40307(this, "ref"));
                DynAbs.Tracing.TraceSender.TraceExitMethod(10306, 39844, 40320);

                Microsoft.CodeAnalysis.SyntaxToken
                f_10306_39977_39997(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                this_param)
                {
                    var return_v = this_param.GetFirstToken();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 39977, 39997);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo
                f_10306_40012_40106(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, Microsoft.CodeAnalysis.Location
                location, params object[]
                args)
                {
                    var return_v = diagnostics.Add(code, location, args);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 40012, 40106);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                f_10306_40285_40307(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, string
                name)
                {
                    var return_v = this_param.CreateErrorType(name);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 40285, 40307);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundBadExpression
                f_10306_40128_40308(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                syntax, Microsoft.CodeAnalysis.CSharp.LookupResultKind
                resultKind, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>
                symbols, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                childBoundNodes, Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                type)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.BoundBadExpression((Microsoft.CodeAnalysis.SyntaxNode)syntax, resultKind, symbols, childBoundNodes, (Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol)type);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 40128, 40308);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 39844, 40320);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 39844, 40320);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private BoundExpression BindRefType(ExpressionSyntax node, DiagnosticBag diagnostics)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10306, 40332, 40681);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 40442, 40480);

                var
                firstToken = f_10306_40459_40479(node)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 40494, 40589);

                f_10306_40494_40588(diagnostics, ErrorCode.ERR_UnexpectedToken, firstToken.GetLocation(), firstToken.ValueText);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 40603, 40670);

                return f_10306_40610_40669(node, null, f_10306_40646_40668(this, "ref"));
                DynAbs.Tracing.TraceSender.TraceExitMethod(10306, 40332, 40681);

                Microsoft.CodeAnalysis.SyntaxToken
                f_10306_40459_40479(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                this_param)
                {
                    var return_v = this_param.GetFirstToken();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 40459, 40479);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo
                f_10306_40494_40588(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, Microsoft.CodeAnalysis.Location
                location, params object[]
                args)
                {
                    var return_v = diagnostics.Add(code, location, args);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 40494, 40588);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                f_10306_40646_40668(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, string
                name)
                {
                    var return_v = this_param.CreateErrorType(name);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 40646, 40668);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundTypeExpression
                f_10306_40610_40669(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                syntax, Microsoft.CodeAnalysis.CSharp.Symbols.AliasSymbol?
                aliasOpt, Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                type)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.BoundTypeExpression((Microsoft.CodeAnalysis.SyntaxNode)syntax, aliasOpt, (Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol)type);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 40610, 40669);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 40332, 40681);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 40332, 40681);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private BoundExpression BindThrowExpression(ThrowExpressionSyntax node, DiagnosticBag diagnostics)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10306, 40693, 41271);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 40816, 40848);

                bool
                hasErrors = f_10306_40833_40847(node)
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 40862, 41068) || true) && (!f_10306_40867_40905(node))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 40862, 41068);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 40939, 41018);

                    f_10306_40939_41017(diagnostics, ErrorCode.ERR_ThrowMisplaced, node.ThrowKeyword.GetLocation());
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 41036, 41053);

                    hasErrors = true;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 40862, 41068);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 41084, 41173);

                var
                thrownExpression = f_10306_41107_41172(this, f_10306_41128_41143(node), diagnostics, ref hasErrors)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 41187, 41260);

                return f_10306_41194_41259(node, thrownExpression, null, hasErrors);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10306, 40693, 41271);

                bool
                f_10306_40833_40847(Microsoft.CodeAnalysis.CSharp.Syntax.ThrowExpressionSyntax
                this_param)
                {
                    var return_v = this_param.HasErrors;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 40833, 40847);
                    return return_v;
                }


                bool
                f_10306_40867_40905(Microsoft.CodeAnalysis.CSharp.Syntax.ThrowExpressionSyntax
                node)
                {
                    var return_v = IsThrowExpressionInProperContext(node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 40867, 40905);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo
                f_10306_40939_41017(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, Microsoft.CodeAnalysis.Location
                location)
                {
                    var return_v = diagnostics.Add(code, location);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 40939, 41017);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                f_10306_41128_41143(Microsoft.CodeAnalysis.CSharp.Syntax.ThrowExpressionSyntax
                this_param)
                {
                    var return_v = this_param.Expression;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 41128, 41143);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_41107_41172(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                exprSyntax, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, ref bool
                hasErrors)
                {
                    var return_v = this_param.BindThrownExpression(exprSyntax, diagnostics, ref hasErrors);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 41107, 41172);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundThrowExpression
                f_10306_41194_41259(Microsoft.CodeAnalysis.CSharp.Syntax.ThrowExpressionSyntax
                syntax, Microsoft.CodeAnalysis.CSharp.BoundExpression
                expression, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?
                type, bool
                hasErrors)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.BoundThrowExpression((Microsoft.CodeAnalysis.SyntaxNode)syntax, expression, type, hasErrors);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 41194, 41259);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 40693, 41271);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 40693, 41271);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private static bool IsThrowExpressionInProperContext(ThrowExpressionSyntax node)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterStaticMethod(10306, 41283, 42775);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 41388, 41413);

                var
                parent = f_10306_41401_41412(node)
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 41427, 41524) || true) && (parent == null || (DynAbs.Tracing.TraceSender.Expression_False(10306, 41431, 41463) || f_10306_41449_41463(node)))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 41427, 41524);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 41497, 41509);

                    return true;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 41427, 41524);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 41540, 42764);

                switch (f_10306_41548_41561(parent))
                {

                    case SyntaxKind.ConditionalExpression: // ?:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 41540, 42764);
                        {
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 41688, 41748);

                            var
                            conditionalParent = (ConditionalExpressionSyntax)parent
                            ;
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 41774, 41855);

                            return node == f_10306_41789_41815(conditionalParent) || (DynAbs.Tracing.TraceSender.Expression_False(10306, 41781, 41854) || node == f_10306_41827_41854(conditionalParent));
                        }
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 41540, 42764);

                    case SyntaxKind.CoalesceExpression: // ??
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 41540, 42764);
                        {
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 41986, 42036);

                            var
                            binaryParent = (BinaryExpressionSyntax)parent
                            ;
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 42062, 42096);

                            return node == f_10306_42077_42095(binaryParent);
                        }
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 41540, 42764);

                    case SyntaxKind.SwitchExpressionArm:
                    case SyntaxKind.ArrowExpressionClause:
                    case SyntaxKind.ParenthesizedLambdaExpression:
                    case SyntaxKind.SimpleLambdaExpression:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 41540, 42764);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 42372, 42384);

                        return true;
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 41540, 42764);

                    default:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 41540, 42764);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 42736, 42749);

                        return false;
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 41540, 42764);
                }
                DynAbs.Tracing.TraceSender.TraceExitStaticMethod(10306, 41283, 42775);

                Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode?
                f_10306_41401_41412(Microsoft.CodeAnalysis.CSharp.Syntax.ThrowExpressionSyntax
                this_param)
                {
                    var return_v = this_param.Parent;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 41401, 41412);
                    return return_v;
                }


                bool
                f_10306_41449_41463(Microsoft.CodeAnalysis.CSharp.Syntax.ThrowExpressionSyntax
                this_param)
                {
                    var return_v = this_param.HasErrors;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 41449, 41463);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.SyntaxKind
                f_10306_41548_41561(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode
                this_param)
                {
                    var return_v = this_param.Kind();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 41548, 41561);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                f_10306_41789_41815(Microsoft.CodeAnalysis.CSharp.Syntax.ConditionalExpressionSyntax
                this_param)
                {
                    var return_v = this_param.WhenTrue;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 41789, 41815);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                f_10306_41827_41854(Microsoft.CodeAnalysis.CSharp.Syntax.ConditionalExpressionSyntax
                this_param)
                {
                    var return_v = this_param.WhenFalse;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 41827, 41854);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                f_10306_42077_42095(Microsoft.CodeAnalysis.CSharp.Syntax.BinaryExpressionSyntax
                this_param)
                {
                    var return_v = this_param.Right;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 42077, 42095);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 41283, 42775);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 41283, 42775);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private BoundExpression BindDeclarationExpressionAsError(DeclarationExpressionSyntax node, DiagnosticBag diagnostics)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10306, 42855, 43697);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 43273, 43284);

                bool
                isVar
                = default(bool);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 43298, 43319);

                bool
                isConst = false
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 43333, 43351);

                AliasSymbol
                alias
                = default(AliasSymbol);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 43365, 43489);

                var
                declType = f_10306_43380_43488(this, f_10306_43412_43428(node), diagnostics, f_10306_43443_43452(node), ref isConst, out isVar, out alias)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 43503, 43577);

                f_10306_43503_43576(diagnostics, ErrorCode.ERR_DeclarationExpressionNotPermitted, node);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 43591, 43686);

                return f_10306_43598_43685(this, declType, f_10306_43649_43665(node), node, diagnostics);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10306, 42855, 43697);

                Microsoft.CodeAnalysis.CSharp.Syntax.VariableDesignationSyntax
                f_10306_43412_43428(Microsoft.CodeAnalysis.CSharp.Syntax.DeclarationExpressionSyntax
                this_param)
                {
                    var return_v = this_param.Designation;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 43412, 43428);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax
                f_10306_43443_43452(Microsoft.CodeAnalysis.CSharp.Syntax.DeclarationExpressionSyntax
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 43443, 43452);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                f_10306_43380_43488(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.VariableDesignationSyntax
                declarationNode, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax
                typeSyntax, ref bool
                isConst, out bool
                isVar, out Microsoft.CodeAnalysis.CSharp.Symbols.AliasSymbol
                alias)
                {
                    var return_v = this_param.BindVariableTypeWithAnnotations((Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode)declarationNode, diagnostics, typeSyntax, ref isConst, out isVar, out alias);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 43380, 43488);
                    return return_v;
                }


                int
                f_10306_43503_43576(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, Microsoft.CodeAnalysis.CSharp.Syntax.DeclarationExpressionSyntax
                syntax)
                {
                    Error(diagnostics, code, (Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode)syntax);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 43503, 43576);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.Syntax.VariableDesignationSyntax
                f_10306_43649_43665(Microsoft.CodeAnalysis.CSharp.Syntax.DeclarationExpressionSyntax
                this_param)
                {
                    var return_v = this_param.Designation;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 43649, 43665);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_43598_43685(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                declTypeWithAnnotations, Microsoft.CodeAnalysis.CSharp.Syntax.VariableDesignationSyntax
                node, Microsoft.CodeAnalysis.CSharp.Syntax.DeclarationExpressionSyntax
                syntax, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.BindDeclarationVariablesForErrorRecovery(declTypeWithAnnotations, node, (Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode)syntax, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 43598, 43685);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 42855, 43697);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 42855, 43697);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private BoundExpression BindDeclarationVariablesForErrorRecovery(TypeWithAnnotations declTypeWithAnnotations, VariableDesignationSyntax node, CSharpSyntaxNode syntax, DiagnosticBag diagnostics)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10306, 43871, 47390);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 44089, 44226);

                declTypeWithAnnotations = (DynAbs.Tracing.TraceSender.Conditional_F1(10306, 44115, 44146) || ((declTypeWithAnnotations.HasType && DynAbs.Tracing.TraceSender.Conditional_F2(10306, 44149, 44172)) || DynAbs.Tracing.TraceSender.Conditional_F3(10306, 44175, 44225))) ? declTypeWithAnnotations : TypeWithAnnotations.Create(f_10306_44202_44224(this, "var"));
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 44240, 47379);

                switch (f_10306_44248_44259(node))
                {

                    case SyntaxKind.SingleVariableDesignation:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 44240, 47379);
                        {
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 44384, 44435);

                            var
                            single = (SingleVariableDesignationSyntax)node
                            ;
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 44461, 44555);

                            var
                            result = f_10306_44474_44554(this, declTypeWithAnnotations, single, syntax, diagnostics)
                            ;
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 44581, 44623);

                            return f_10306_44588_44622(this, result);
                        }
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 44240, 47379);

                    case SyntaxKind.DiscardDesignation:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 44240, 47379);
                        {
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 44748, 44810);

                            return f_10306_44755_44809(syntax, declTypeWithAnnotations);
                        }
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 44240, 47379);

                    case SyntaxKind.ParenthesizedVariableDesignation:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 44240, 47379);
                        {
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 44949, 45006);

                            var
                            tuple = (ParenthesizedVariableDesignationSyntax)node
                            ;
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 45032, 45066);

                            int
                            count = tuple.Variables.Count
                            ;
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 45092, 45155);

                            var
                            builder = f_10306_45106_45154(count)
                            ;
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 45181, 45240);

                            var
                            namesBuilder = f_10306_45200_45239(count)
                            ;
                            try
                            {
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 45268, 45557);
                                foreach (var n in f_10306_45286_45301_I(f_10306_45286_45301(tuple)))
                                {
                                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 45268, 45557);
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 45359, 45457);

                                    f_10306_45359_45456(builder, f_10306_45371_45455(this, declTypeWithAnnotations, n, n, diagnostics));
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 45487, 45530);

                                    f_10306_45487_45529(namesBuilder, f_10306_45504_45528(n));
                                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 45268, 45557);
                                }
                            }
                            catch (System.Exception)
                            {
                                DynAbs.Tracing.TraceSender.TraceExitLoopByException(10306, 1, 290);
                                throw;
                            }
                            finally
                            {
                                DynAbs.Tracing.TraceSender.TraceExitLoop(10306, 1, 290);
                            }
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 45583, 45661);

                            ImmutableArray<BoundExpression>
                            subExpressions = f_10306_45632_45660(builder)
                            ;
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 45689, 45748);

                            var
                            uniqueFieldNames = f_10306_45712_45747()
                            ;
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 45774, 45860);

                            f_10306_45774_45859(ref namesBuilder, uniqueFieldNames);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 45886, 45910);

                            f_10306_45886_45909(uniqueFieldNames);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 45938, 46041);

                            ImmutableArray<string>
                            tupleNames = (DynAbs.Tracing.TraceSender.Conditional_F1(10306, 45974, 45994) || ((namesBuilder is null && DynAbs.Tracing.TraceSender.Conditional_F2(10306, 45997, 46004)) || DynAbs.Tracing.TraceSender.Conditional_F3(10306, 46007, 46040))) ? default : f_10306_46007_46040(namesBuilder)
                            ;
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 46067, 46182);

                            ImmutableArray<bool>
                            inferredPositions = (DynAbs.Tracing.TraceSender.Conditional_F1(10306, 46108, 46128) || ((tupleNames.IsDefault && DynAbs.Tracing.TraceSender.Conditional_F2(10306, 46131, 46138)) || DynAbs.Tracing.TraceSender.Conditional_F3(10306, 46141, 46181))) ? default : tupleNames.SelectAsArray(n => n != null)
                            ;
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 46208, 46306);

                            bool
                            disallowInferredNames = f_10306_46237_46305(f_10306_46237_46269(f_10306_46237_46253(this)))
                            ;
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 46520, 47066);

                            var
                            tupleType = f_10306_46536_47065(locationOpt: null, subExpressions.SelectAsArray(e => TypeWithAnnotations.Create(e.Type)), elementLocations: default, tupleNames, f_10306_46839_46850(), shouldCheckConstraints: false, includeNullability: false, errorPositions: (DynAbs.Tracing.TraceSender.Conditional_F1(10306, 47013, 47034) || ((disallowInferredNames && DynAbs.Tracing.TraceSender.Conditional_F2(10306, 47037, 47054)) || DynAbs.Tracing.TraceSender.Conditional_F3(10306, 47057, 47064))) ? inferredPositions : default)
                            ;
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 47094, 47239);

                            return f_10306_47101_47238(syntax, sourceTuple: null, wasTargetTyped: true, subExpressions, tupleNames, inferredPositions, tupleType);
                        }
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 44240, 47379);

                    default:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 44240, 47379);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 47310, 47364);

                        throw f_10306_47316_47363(f_10306_47351_47362(node));
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 44240, 47379);
                }
                DynAbs.Tracing.TraceSender.TraceExitMethod(10306, 43871, 47390);

                Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                f_10306_44202_44224(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, string
                name)
                {
                    var return_v = this_param.CreateErrorType(name);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 44202, 44224);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.SyntaxKind
                f_10306_44248_44259(Microsoft.CodeAnalysis.CSharp.Syntax.VariableDesignationSyntax
                this_param)
                {
                    var return_v = this_param.Kind();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 44248, 44259);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_44474_44554(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                declTypeWithAnnotations, Microsoft.CodeAnalysis.CSharp.Syntax.SingleVariableDesignationSyntax
                designation, Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode
                syntax, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.BindDeconstructionVariable(declTypeWithAnnotations, designation, syntax, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 44474, 44554);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_44588_44622(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                expression)
                {
                    var return_v = this_param.BindToTypeForErrorRecovery(expression);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 44588, 44622);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundDiscardExpression
                f_10306_44755_44809(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode
                syntax, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                declTypeWithAnnotations)
                {
                    var return_v = BindDiscardExpression((Microsoft.CodeAnalysis.SyntaxNode)syntax, declTypeWithAnnotations);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 44755, 44809);
                    return return_v;
                }


                Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                f_10306_45106_45154(int
                capacity)
                {
                    var return_v = ArrayBuilder<BoundExpression>.GetInstance(capacity);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 45106, 45154);
                    return return_v;
                }


                Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<string>
                f_10306_45200_45239(int
                capacity)
                {
                    var return_v = ArrayBuilder<string>.GetInstance(capacity);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 45200, 45239);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SeparatedSyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.VariableDesignationSyntax>
                f_10306_45286_45301(Microsoft.CodeAnalysis.CSharp.Syntax.ParenthesizedVariableDesignationSyntax
                this_param)
                {
                    var return_v = this_param.Variables;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 45286, 45301);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_45371_45455(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                declTypeWithAnnotations, Microsoft.CodeAnalysis.CSharp.Syntax.VariableDesignationSyntax
                node, Microsoft.CodeAnalysis.CSharp.Syntax.VariableDesignationSyntax
                syntax, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.BindDeclarationVariablesForErrorRecovery(declTypeWithAnnotations, node, (Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode)syntax, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 45371, 45455);
                    return return_v;
                }


                int
                f_10306_45359_45456(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                item)
                {
                    this_param.Add(item);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 45359, 45456);
                    return 0;
                }


                string
                f_10306_45504_45528(Microsoft.CodeAnalysis.CSharp.Syntax.VariableDesignationSyntax
                syntax)
                {
                    var return_v = InferTupleElementName((Microsoft.CodeAnalysis.SyntaxNode)syntax);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 45504, 45528);
                    return return_v;
                }


                int
                f_10306_45487_45529(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<string>
                this_param, string
                item)
                {
                    this_param.Add(item);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 45487, 45529);
                    return 0;
                }


                Microsoft.CodeAnalysis.SeparatedSyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.VariableDesignationSyntax>
                f_10306_45286_45301_I(Microsoft.CodeAnalysis.SeparatedSyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.VariableDesignationSyntax>
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 45286, 45301);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                f_10306_45632_45660(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                this_param)
                {
                    var return_v = this_param.ToImmutableAndFree();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 45632, 45660);
                    return return_v;
                }


                Microsoft.CodeAnalysis.PooledObjects.PooledHashSet<string>
                f_10306_45712_45747()
                {
                    var return_v = PooledHashSet<string>.GetInstance();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 45712, 45747);
                    return return_v;
                }


                int
                f_10306_45774_45859(ref Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<string>
                inferredElementNames, Microsoft.CodeAnalysis.PooledObjects.PooledHashSet<string>
                uniqueFieldNames)
                {
                    RemoveDuplicateInferredTupleNamesAndFreeIfEmptied(ref inferredElementNames, (System.Collections.Generic.HashSet<string>)uniqueFieldNames);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 45774, 45859);
                    return 0;
                }


                int
                f_10306_45886_45909(Microsoft.CodeAnalysis.PooledObjects.PooledHashSet<string>
                this_param)
                {
                    this_param.Free();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 45886, 45909);
                    return 0;
                }


                System.Collections.Immutable.ImmutableArray<string>
                f_10306_46007_46040(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<string>
                this_param)
                {
                    var return_v = this_param.ToImmutableAndFree();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 46007, 46040);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                f_10306_46237_46253(Microsoft.CodeAnalysis.CSharp.Binder
                this_param)
                {
                    var return_v = this_param.Compilation;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 46237, 46253);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.LanguageVersion
                f_10306_46237_46269(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param)
                {
                    var return_v = this_param.LanguageVersion;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 46237, 46269);
                    return return_v;
                }


                bool
                f_10306_46237_46305(Microsoft.CodeAnalysis.CSharp.LanguageVersion
                self)
                {
                    var return_v = self.DisallowInferredTupleElementNames();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 46237, 46305);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                f_10306_46839_46850()
                {
                    var return_v = Compilation;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 46839, 46850);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                f_10306_46536_47065(Microsoft.CodeAnalysis.Location?
                locationOpt, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations>
                elementTypesWithAnnotations, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Location?>
                elementLocations, System.Collections.Immutable.ImmutableArray<string>
                elementNames, Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                compilation, bool
                shouldCheckConstraints, bool
                includeNullability, System.Collections.Immutable.ImmutableArray<bool>
                errorPositions)
                {
                    var return_v = NamedTypeSymbol.CreateTuple(locationOpt: locationOpt, elementTypesWithAnnotations, elementLocations: elementLocations, elementNames, compilation, shouldCheckConstraints: shouldCheckConstraints, includeNullability: includeNullability, errorPositions: errorPositions);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 46536, 47065);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundConvertedTupleLiteral
                f_10306_47101_47238(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode
                syntax, Microsoft.CodeAnalysis.CSharp.BoundTupleLiteral?
                sourceTuple, bool
                wasTargetTyped, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                arguments, System.Collections.Immutable.ImmutableArray<string>
                argumentNamesOpt, System.Collections.Immutable.ImmutableArray<bool>
                inferredNamesOpt, Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                type)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.BoundConvertedTupleLiteral((Microsoft.CodeAnalysis.SyntaxNode)syntax, sourceTuple: sourceTuple, wasTargetTyped: wasTargetTyped, arguments, argumentNamesOpt, inferredNamesOpt, (Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol)type);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 47101, 47238);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.SyntaxKind
                f_10306_47351_47362(Microsoft.CodeAnalysis.CSharp.Syntax.VariableDesignationSyntax
                this_param)
                {
                    var return_v = this_param.Kind();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 47351, 47362);
                    return return_v;
                }


                System.Exception
                f_10306_47316_47363(Microsoft.CodeAnalysis.CSharp.SyntaxKind
                o)
                {
                    var return_v = ExceptionUtilities.UnexpectedValue((object)o);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 47316, 47363);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 43871, 47390);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 43871, 47390);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private BoundExpression BindTupleExpression(TupleExpressionSyntax node, DiagnosticBag diagnostics)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10306, 47402, 51289);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 47525, 47588);

                SeparatedSyntaxList<ArgumentSyntax>
                arguments = f_10306_47573_47587(node)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 47602, 47636);

                int
                numElements = arguments.Count
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 47652, 48036) || true) && (numElements < 2)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 47652, 48036);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 47763, 47968);

                    var
                    args = (DynAbs.Tracing.TraceSender.Conditional_F1(10306, 47774, 47790) || ((numElements == 1 && DynAbs.Tracing.TraceSender.Conditional_F2(10306, 47814, 47906)) || DynAbs.Tracing.TraceSender.Conditional_F3(10306, 47930, 47967))) ? f_10306_47814_47906(f_10306_47836_47905(this, f_10306_47846_47869(arguments[0]), diagnostics, BindValueKind.RValue)) : ImmutableArray<BoundExpression>.Empty
                    ;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 47988, 48021);

                    return f_10306_47995_48020(this, node, args);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 47652, 48036);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 48052, 48079);

                bool
                hasNaturalType = true
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 48095, 48175);

                var
                boundArguments = f_10306_48116_48174(arguments.Count)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 48189, 48286);

                var
                elementTypesWithAnnotations = f_10306_48223_48285(arguments.Count)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 48300, 48375);

                var
                elementLocations = f_10306_48323_48374(arguments.Count)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 48421, 48521);

                var (elementNames, inferredPositions, hasErrors) = f_10306_48472_48520(arguments, diagnostics);
                try
                {
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 48590, 48595);

                    // prepare types and locations
                    for (int
        i = 0
        ; (DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 48581, 50037) || true) && (i < numElements)
        ; DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 48614, 48617)
        , i++, DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 48581, 50037))

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 48581, 50037);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 48651, 48696);

                        ArgumentSyntax
                        argumentSyntax = arguments[i]
                        ;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 48714, 48779);

                        IdentifierNameSyntax
                        nameSyntax = f_10306_48748_48778_M(DynAbs.Tracing.TraceSender.TraceConditionalAccessExpression(f_10306_48748_48772(argumentSyntax), 10306, 48748, 48778)?.Name)
                        ;

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 48799, 49052) || true) && (nameSyntax != null)
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 48799, 49052);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 48863, 48905);

                            f_10306_48863_48904(elementLocations, f_10306_48884_48903(nameSyntax));
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 48799, 49052);
                        }

                        else

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 48799, 49052);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 48987, 49033);

                            f_10306_48987_49032(elementLocations, f_10306_49008_49031(argumentSyntax));
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 48799, 49052);
                        }
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 49072, 49176);

                        BoundExpression
                        boundArgument = f_10306_49104_49175(this, f_10306_49114_49139(argumentSyntax), diagnostics, BindValueKind.RValue)
                        ;

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 49194, 49647) || true) && (f_10306_49198_49229_M(DynAbs.Tracing.TraceSender.TraceConditionalAccessExpression(f_10306_49198_49216(boundArgument), 10306, 49198, 49229)?.SpecialType) == SpecialType.System_Void)
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 49194, 49647);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 49298, 49366);

                            f_10306_49298_49365(diagnostics, ErrorCode.ERR_VoidInTuple, f_10306_49341_49364(argumentSyntax));
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 49388, 49628);

                            boundArgument = f_10306_49404_49627(argumentSyntax, LookupResultKind.Empty, ImmutableArray<Symbol>.Empty, f_10306_49548_49601(boundArgument), f_10306_49603_49626(this, "void"));
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 49194, 49647);
                        }
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 49667, 49701);

                        f_10306_49667_49700(
                                        boundArguments, boundArgument);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 49721, 49801);

                        var
                        elementTypeWithAnnotations = TypeWithAnnotations.Create(f_10306_49781_49799(boundArgument))
                        ;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 49819, 49879);

                        f_10306_49819_49878(elementTypesWithAnnotations, elementTypeWithAnnotations);

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 49899, 50022) || true) && (f_10306_49903_49938_M(!elementTypeWithAnnotations.HasType))
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 49899, 50022);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 49980, 50003);

                            hasNaturalType = false;
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 49899, 50022);
                        }
                    }
                }
                catch (System.Exception)
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoopByException(10306, 1, 1457);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoop(10306, 1, 1457);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 50053, 50089);

                NamedTypeSymbol
                tupleTypeOpt = null
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 50103, 50167);

                var
                elements = f_10306_50118_50166(elementTypesWithAnnotations)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 50181, 50235);

                var
                locations = f_10306_50197_50234(elementLocations)
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 50251, 50936) || true) && (hasNaturalType)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 50251, 50936);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 50303, 50401);

                    bool
                    disallowInferredNames = f_10306_50332_50400(f_10306_50332_50364(f_10306_50332_50348(this)))
                    ;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 50421, 50762);

                    tupleTypeOpt = f_10306_50436_50761(f_10306_50464_50477(node), elements, locations, elementNames, f_10306_50535_50551(this), syntax: node, diagnostics: diagnostics, shouldCheckConstraints: true, includeNullability: false, errorPositions: (DynAbs.Tracing.TraceSender.Conditional_F1(10306, 50687, 50708) || ((disallowInferredNames && DynAbs.Tracing.TraceSender.Conditional_F2(10306, 50711, 50728)) || DynAbs.Tracing.TraceSender.Conditional_F3(10306, 50731, 50760))) ? inferredPositions : default(ImmutableArray<bool>));
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 50251, 50936);
                }

                else

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 50251, 50936);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 50828, 50921);

                    f_10306_50828_50920(elements.Length, node, f_10306_50890_50906(this), diagnostics);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 50251, 50936);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 51148, 51278);

                return f_10306_51155_51277(node, f_10306_51183_51218(boundArguments), elementNames, inferredPositions, tupleTypeOpt, hasErrors);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10306, 47402, 51289);

                Microsoft.CodeAnalysis.SeparatedSyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentSyntax>
                f_10306_47573_47587(Microsoft.CodeAnalysis.CSharp.Syntax.TupleExpressionSyntax
                this_param)
                {
                    var return_v = this_param.Arguments;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 47573, 47587);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                f_10306_47846_47869(Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentSyntax
                this_param)
                {
                    var return_v = this_param.Expression;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 47846, 47869);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_47836_47905(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                node, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.Binder.BindValueKind
                valueKind)
                {
                    var return_v = this_param.BindValue(node, diagnostics, valueKind);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 47836, 47905);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                f_10306_47814_47906(Microsoft.CodeAnalysis.CSharp.BoundExpression
                item)
                {
                    var return_v = ImmutableArray.Create(item);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 47814, 47906);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundBadExpression
                f_10306_47995_48020(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.TupleExpressionSyntax
                syntax, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                childNodes)
                {
                    var return_v = this_param.BadExpression((Microsoft.CodeAnalysis.SyntaxNode)syntax, childNodes);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 47995, 48020);
                    return return_v;
                }


                Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                f_10306_48116_48174(int
                capacity)
                {
                    var return_v = ArrayBuilder<BoundExpression>.GetInstance(capacity);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 48116, 48174);
                    return return_v;
                }


                Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations>
                f_10306_48223_48285(int
                capacity)
                {
                    var return_v = ArrayBuilder<TypeWithAnnotations>.GetInstance(capacity);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 48223, 48285);
                    return return_v;
                }


                Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.Location>
                f_10306_48323_48374(int
                capacity)
                {
                    var return_v = ArrayBuilder<Location>.GetInstance(capacity);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 48323, 48374);
                    return return_v;
                }


                (System.Collections.Immutable.ImmutableArray<string> elementNamesArray, System.Collections.Immutable.ImmutableArray<bool> inferredArray, bool hasErrors)
                f_10306_48472_48520(Microsoft.CodeAnalysis.SeparatedSyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentSyntax>
                arguments, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = ExtractTupleElementNames(arguments, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 48472, 48520);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Syntax.NameColonSyntax?
                f_10306_48748_48772(Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentSyntax
                this_param)
                {
                    var return_v = this_param.NameColon;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 48748, 48772);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Syntax.IdentifierNameSyntax?
                f_10306_48748_48778_M(Microsoft.CodeAnalysis.CSharp.Syntax.IdentifierNameSyntax?
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 48748, 48778);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Location
                f_10306_48884_48903(Microsoft.CodeAnalysis.CSharp.Syntax.IdentifierNameSyntax
                this_param)
                {
                    var return_v = this_param.Location;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 48884, 48903);
                    return return_v;
                }


                int
                f_10306_48863_48904(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.Location>
                this_param, Microsoft.CodeAnalysis.Location
                item)
                {
                    this_param.Add(item);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 48863, 48904);
                    return 0;
                }


                Microsoft.CodeAnalysis.Location
                f_10306_49008_49031(Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentSyntax
                this_param)
                {
                    var return_v = this_param.Location;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 49008, 49031);
                    return return_v;
                }


                int
                f_10306_48987_49032(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.Location>
                this_param, Microsoft.CodeAnalysis.Location
                item)
                {
                    this_param.Add(item);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 48987, 49032);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                f_10306_49114_49139(Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentSyntax
                this_param)
                {
                    var return_v = this_param.Expression;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 49114, 49139);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_49104_49175(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                node, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.Binder.BindValueKind
                valueKind)
                {
                    var return_v = this_param.BindValue(node, diagnostics, valueKind);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 49104, 49175);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?
                f_10306_49198_49216(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 49198, 49216);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SpecialType?
                f_10306_49198_49229_M(Microsoft.CodeAnalysis.SpecialType?
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 49198, 49229);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Location
                f_10306_49341_49364(Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentSyntax
                this_param)
                {
                    var return_v = this_param.Location;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 49341, 49364);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo
                f_10306_49298_49365(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, Microsoft.CodeAnalysis.Location
                location)
                {
                    var return_v = diagnostics.Add(code, location);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 49298, 49365);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                f_10306_49548_49601(Microsoft.CodeAnalysis.CSharp.BoundExpression
                item)
                {
                    var return_v = ImmutableArray.Create<BoundExpression>(item);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 49548, 49601);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                f_10306_49603_49626(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, string
                name)
                {
                    var return_v = this_param.CreateErrorType(name);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 49603, 49626);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundBadExpression
                f_10306_49404_49627(Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentSyntax
                syntax, Microsoft.CodeAnalysis.CSharp.LookupResultKind
                resultKind, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>
                symbols, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                childBoundNodes, Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                type)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.BoundBadExpression((Microsoft.CodeAnalysis.SyntaxNode)syntax, resultKind, symbols, childBoundNodes, (Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol)type);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 49404, 49627);
                    return return_v;
                }


                int
                f_10306_49667_49700(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                item)
                {
                    this_param.Add(item);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 49667, 49700);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?
                f_10306_49781_49799(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 49781, 49799);
                    return return_v;
                }


                int
                f_10306_49819_49878(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations>
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                item)
                {
                    this_param.Add(item);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 49819, 49878);
                    return 0;
                }


                bool
                f_10306_49903_49938_M(bool
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 49903, 49938);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations>
                f_10306_50118_50166(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations>
                this_param)
                {
                    var return_v = this_param.ToImmutableAndFree();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 50118, 50166);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Location>
                f_10306_50197_50234(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.Location>
                this_param)
                {
                    var return_v = this_param.ToImmutableAndFree();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 50197, 50234);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                f_10306_50332_50348(Microsoft.CodeAnalysis.CSharp.Binder
                this_param)
                {
                    var return_v = this_param.Compilation;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 50332, 50348);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.LanguageVersion
                f_10306_50332_50364(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param)
                {
                    var return_v = this_param.LanguageVersion;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 50332, 50364);
                    return return_v;
                }


                bool
                f_10306_50332_50400(Microsoft.CodeAnalysis.CSharp.LanguageVersion
                self)
                {
                    var return_v = self.DisallowInferredTupleElementNames();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 50332, 50400);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Location
                f_10306_50464_50477(Microsoft.CodeAnalysis.CSharp.Syntax.TupleExpressionSyntax
                this_param)
                {
                    var return_v = this_param.Location;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 50464, 50477);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                f_10306_50535_50551(Microsoft.CodeAnalysis.CSharp.Binder
                this_param)
                {
                    var return_v = this_param.Compilation;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 50535, 50551);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                f_10306_50436_50761(Microsoft.CodeAnalysis.Location
                locationOpt, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations>
                elementTypesWithAnnotations, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Location>
                elementLocations, System.Collections.Immutable.ImmutableArray<string>
                elementNames, Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                compilation, Microsoft.CodeAnalysis.CSharp.Syntax.TupleExpressionSyntax
                syntax, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, bool
                shouldCheckConstraints, bool
                includeNullability, System.Collections.Immutable.ImmutableArray<bool>
                errorPositions)
                {
                    var return_v = NamedTypeSymbol.CreateTuple(locationOpt, elementTypesWithAnnotations, elementLocations, elementNames, compilation, syntax: (Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode)syntax, diagnostics: diagnostics, shouldCheckConstraints: shouldCheckConstraints, includeNullability: includeNullability, errorPositions: errorPositions);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 50436, 50761);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                f_10306_50890_50906(Microsoft.CodeAnalysis.CSharp.Binder
                this_param)
                {
                    var return_v = this_param.Compilation;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 50890, 50906);
                    return return_v;
                }


                int
                f_10306_50828_50920(int
                cardinality, Microsoft.CodeAnalysis.CSharp.Syntax.TupleExpressionSyntax
                syntax, Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                compilation, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    NamedTypeSymbol.VerifyTupleTypePresent(cardinality, (Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode)syntax, compilation, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 50828, 50920);
                    return 0;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                f_10306_51183_51218(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                this_param)
                {
                    var return_v = this_param.ToImmutableAndFree();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 51183, 51218);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundTupleLiteral
                f_10306_51155_51277(Microsoft.CodeAnalysis.CSharp.Syntax.TupleExpressionSyntax
                syntax, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                arguments, System.Collections.Immutable.ImmutableArray<string>
                argumentNamesOpt, System.Collections.Immutable.ImmutableArray<bool>
                inferredNamesOpt, Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol?
                type, bool
                hasErrors)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.BoundTupleLiteral((Microsoft.CodeAnalysis.SyntaxNode)syntax, arguments, argumentNamesOpt, inferredNamesOpt, (Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?)type, hasErrors);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 51155, 51277);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 47402, 51289);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 47402, 51289);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private static (ImmutableArray<string> elementNamesArray, ImmutableArray<bool> inferredArray, bool hasErrors) ExtractTupleElementNames(
                    SeparatedSyntaxList<ArgumentSyntax> arguments, DiagnosticBag diagnostics)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterStaticMethod(10306, 51301, 53223);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 51548, 51571);

                bool
                hasErrors = false
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 51585, 51619);

                int
                numElements = arguments.Count
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 51633, 51692);

                var
                uniqueFieldNames = f_10306_51656_51691()
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 51706, 51747);

                ArrayBuilder<string>
                elementNames = null
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 51761, 51810);

                ArrayBuilder<string>
                inferredElementNames = null
                ;
                try
                {
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 51835, 51840);

                    for (int
        i = 0
        ; (DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 51826, 52834) || true) && (i < numElements)
        ; DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 51859, 51862)
        , i++, DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 51826, 52834))

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 51826, 52834);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 51896, 51941);

                        ArgumentSyntax
                        argumentSyntax = arguments[i]
                        ;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 51959, 52024);

                        IdentifierNameSyntax
                        nameSyntax = f_10306_51993_52023_M(DynAbs.Tracing.TraceSender.TraceConditionalAccessExpression(f_10306_51993_52017(argumentSyntax), 10306, 51993, 52023)?.Name)
                        ;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 52044, 52063);

                        string
                        name = null
                        ;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 52081, 52108);

                        string
                        inferredName = null
                        ;

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 52128, 52629) || true) && (nameSyntax != null)
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 52128, 52629);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 52192, 52231);

                            name = nameSyntax.Identifier.ValueText;

                            if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 52255, 52464) || true) && (diagnostics != null && (DynAbs.Tracing.TraceSender.Expression_True(10306, 52259, 52374) && !f_10306_52283_52374(name, i, f_10306_52313_52342(f_10306_52313_52337(argumentSyntax)), diagnostics, uniqueFieldNames)))
                            )

                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 52255, 52464);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 52424, 52441);

                                hasErrors = true;
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 52255, 52464);
                            }
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 52128, 52629);
                        }

                        else

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 52128, 52629);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 52546, 52610);

                            inferredName = f_10306_52561_52609(f_10306_52583_52608(argumentSyntax));
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 52128, 52629);
                        }
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 52649, 52717);

                        f_10306_52649_52716(name, i, numElements, ref elementNames);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 52735, 52819);

                        f_10306_52735_52818(inferredName, i, numElements, ref inferredElementNames);
                    }
                }
                catch (System.Exception)
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoopByException(10306, 1, 1009);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoop(10306, 1, 1009);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 52850, 52944);

                f_10306_52850_52943(ref inferredElementNames, uniqueFieldNames);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 52958, 52982);

                f_10306_52958_52981(uniqueFieldNames);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 52998, 53070);

                var
                result = f_10306_53011_53069(elementNames, inferredElementNames)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 53084, 53105);

                DynAbs.Tracing.TraceSender.TraceInvocationWrapper(() => DynAbs.Tracing.TraceSender.TraceConditionalAccessExpression(elementNames, 10306, 53084, 53104)?.Free(), 10306, 53097, 53104);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 53119, 53148);

                DynAbs.Tracing.TraceSender.TraceInvocationWrapper(() => DynAbs.Tracing.TraceSender.TraceConditionalAccessExpression(inferredElementNames, 10306, 53119, 53147)?.Free(), 10306, 53140, 53147);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 53162, 53212);

                return (result.names, result.inferred, hasErrors);
                DynAbs.Tracing.TraceSender.TraceExitStaticMethod(10306, 51301, 53223);

                Microsoft.CodeAnalysis.PooledObjects.PooledHashSet<string>
                f_10306_51656_51691()
                {
                    var return_v = PooledHashSet<string>.GetInstance();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 51656, 51691);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Syntax.NameColonSyntax?
                f_10306_51993_52017(Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentSyntax
                this_param)
                {
                    var return_v = this_param.NameColon;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 51993, 52017);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Syntax.IdentifierNameSyntax?
                f_10306_51993_52023_M(Microsoft.CodeAnalysis.CSharp.Syntax.IdentifierNameSyntax?
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 51993, 52023);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Syntax.NameColonSyntax?
                f_10306_52313_52337(Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentSyntax
                this_param)
                {
                    var return_v = this_param.NameColon;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 52313, 52337);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Syntax.IdentifierNameSyntax
                f_10306_52313_52342(Microsoft.CodeAnalysis.CSharp.Syntax.NameColonSyntax?
                this_param)
                {
                    var return_v = this_param.Name;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 52313, 52342);
                    return return_v;
                }


                bool
                f_10306_52283_52374(string
                name, int
                index, Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.PooledObjects.PooledHashSet<string>
                uniqueFieldNames)
                {
                    var return_v = CheckTupleMemberName(name, index, (Microsoft.CodeAnalysis.SyntaxNodeOrToken)syntax, diagnostics, uniqueFieldNames);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 52283, 52374);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                f_10306_52583_52608(Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentSyntax
                this_param)
                {
                    var return_v = this_param.Expression;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 52583, 52608);
                    return return_v;
                }


                string
                f_10306_52561_52609(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                syntax)
                {
                    var return_v = InferTupleElementName((Microsoft.CodeAnalysis.SyntaxNode)syntax);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 52561, 52609);
                    return return_v;
                }


                int
                f_10306_52649_52716(string?
                name, int
                elementIndex, int
                tupleSize, ref Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<string>?
                elementNames)
                {
                    CollectTupleFieldMemberName(name, elementIndex, tupleSize, ref elementNames);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 52649, 52716);
                    return 0;
                }


                int
                f_10306_52735_52818(string?
                name, int
                elementIndex, int
                tupleSize, ref Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<string>?
                elementNames)
                {
                    CollectTupleFieldMemberName(name, elementIndex, tupleSize, ref elementNames);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 52735, 52818);
                    return 0;
                }


                int
                f_10306_52850_52943(ref Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<string>?
                inferredElementNames, Microsoft.CodeAnalysis.PooledObjects.PooledHashSet<string>
                uniqueFieldNames)
                {
                    RemoveDuplicateInferredTupleNamesAndFreeIfEmptied(ref inferredElementNames, (System.Collections.Generic.HashSet<string>)uniqueFieldNames);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 52850, 52943);
                    return 0;
                }


                int
                f_10306_52958_52981(Microsoft.CodeAnalysis.PooledObjects.PooledHashSet<string>
                this_param)
                {
                    this_param.Free();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 52958, 52981);
                    return 0;
                }


                (System.Collections.Immutable.ImmutableArray<string> names, System.Collections.Immutable.ImmutableArray<bool> inferred)
                f_10306_53011_53069(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<string>?
                elementNames, Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<string>
                inferredElementNames)
                {
                    var return_v = MergeTupleElementNames(elementNames, inferredElementNames);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 53011, 53069);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 51301, 53223);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 51301, 53223);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private static (ImmutableArray<string> names, ImmutableArray<bool> inferred) MergeTupleElementNames(
                    ArrayBuilder<string> elementNames, ArrayBuilder<string> inferredElementNames)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterStaticMethod(10306, 53235, 54776);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 53451, 53907) || true) && (elementNames == null)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 53451, 53907);

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 53509, 53892) || true) && (inferredElementNames == null)
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 53509, 53892);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 53583, 53655);

                        return (default(ImmutableArray<string>), default(ImmutableArray<bool>));
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 53509, 53892);
                    }

                    else

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 53509, 53892);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 53737, 53789);

                        var
                        finalNames = f_10306_53754_53788(inferredElementNames)
                        ;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 53811, 53873);

                        return (finalNames, finalNames.SelectAsArray(n => n != null));
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 53509, 53892);
                    }
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 53451, 53907);
                }

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 53923, 54071) || true) && (inferredElementNames == null)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 53923, 54071);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 53989, 54056);

                    return (f_10306_53997_54023(elementNames), default(ImmutableArray<bool>));
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 53923, 54071);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 54087, 54150);

                f_10306_54087_54149(f_10306_54100_54118(elementNames) == f_10306_54122_54148(inferredElementNames));
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 54164, 54229);

                var
                builder = f_10306_54178_54228(f_10306_54209_54227(elementNames))
                ;
                try
                {
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 54252, 54257);
                    for (int
        i = 0
        ; (DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 54243, 54683) || true) && (i < f_10306_54263_54281(elementNames))
        ; DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 54283, 54286)
        , i++, DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 54243, 54683))

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 54243, 54683);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 54320, 54366);

                        string
                        inferredName = f_10306_54342_54365(inferredElementNames, i)
                        ;

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 54384, 54668) || true) && (f_10306_54388_54403(elementNames, i) == null && (DynAbs.Tracing.TraceSender.Expression_True(10306, 54388, 54435) && inferredName != null))
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 54384, 54668);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 54477, 54508);

                            elementNames[i] = inferredName;
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 54530, 54548);

                            f_10306_54530_54547(builder, true);
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 54384, 54668);
                        }

                        else

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 54384, 54668);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 54630, 54649);

                            f_10306_54630_54648(builder, false);
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 54384, 54668);
                        }
                    }
                }
                catch (System.Exception)
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoopByException(10306, 1, 441);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoop(10306, 1, 441);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 54699, 54765);

                return (f_10306_54707_54733(elementNames), f_10306_54735_54763(builder));
                DynAbs.Tracing.TraceSender.TraceExitStaticMethod(10306, 53235, 54776);

                System.Collections.Immutable.ImmutableArray<string>
                f_10306_53754_53788(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<string>
                this_param)
                {
                    var return_v = this_param.ToImmutable();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 53754, 53788);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<string>
                f_10306_53997_54023(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<string>
                this_param)
                {
                    var return_v = this_param.ToImmutable();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 53997, 54023);
                    return return_v;
                }


                int
                f_10306_54100_54118(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<string>
                this_param)
                {
                    var return_v = this_param.Count;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 54100, 54118);
                    return return_v;
                }


                int
                f_10306_54122_54148(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<string>
                this_param)
                {
                    var return_v = this_param.Count;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 54122, 54148);
                    return return_v;
                }


                int
                f_10306_54087_54149(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 54087, 54149);
                    return 0;
                }


                int
                f_10306_54209_54227(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<string>
                this_param)
                {
                    var return_v = this_param.Count;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 54209, 54227);
                    return return_v;
                }


                Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<bool>
                f_10306_54178_54228(int
                capacity)
                {
                    var return_v = ArrayBuilder<bool>.GetInstance(capacity);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 54178, 54228);
                    return return_v;
                }


                int
                f_10306_54263_54281(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<string>
                this_param)
                {
                    var return_v = this_param.Count;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 54263, 54281);
                    return return_v;
                }


                string
                f_10306_54342_54365(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<string>
                this_param, int
                i0)
                {
                    var return_v = this_param[i0];
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 54342, 54365);
                    return return_v;
                }


                string
                f_10306_54388_54403(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<string>
                this_param, int
                i0)
                {
                    var return_v = this_param[i0];
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 54388, 54403);
                    return return_v;
                }


                int
                f_10306_54530_54547(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<bool>
                this_param, bool
                item)
                {
                    this_param.Add(item);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 54530, 54547);
                    return 0;
                }


                int
                f_10306_54630_54648(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<bool>
                this_param, bool
                item)
                {
                    this_param.Add(item);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 54630, 54648);
                    return 0;
                }


                System.Collections.Immutable.ImmutableArray<string>
                f_10306_54707_54733(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<string>
                this_param)
                {
                    var return_v = this_param.ToImmutable();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 54707, 54733);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<bool>
                f_10306_54735_54763(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<bool>
                this_param)
                {
                    var return_v = this_param.ToImmutableAndFree();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 54735, 54763);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 53235, 54776);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 53235, 54776);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private static void RemoveDuplicateInferredTupleNamesAndFreeIfEmptied(ref ArrayBuilder<string> inferredElementNames, HashSet<string> uniqueFieldNames)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterStaticMethod(10306, 54952, 56179);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 55127, 55215) || true) && (inferredElementNames == null)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 55127, 55215);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 55193, 55200);

                    return;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 55127, 55215);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 55345, 55396);

                var
                toRemove = f_10306_55360_55395()
                ;
                try
                {
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 55410, 55627);
                    foreach (var name in f_10306_55431_55451_I(inferredElementNames))
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 55410, 55627);

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 55485, 55612) || true) && (name != null && (DynAbs.Tracing.TraceSender.Expression_True(10306, 55489, 55532) && !f_10306_55506_55532(uniqueFieldNames, name)))
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 55485, 55612);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 55574, 55593);

                            f_10306_55574_55592(toRemove, name);
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 55485, 55612);
                        }
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 55410, 55627);
                    }
                }
                catch (System.Exception)
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoopByException(10306, 1, 218);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoop(10306, 1, 218);
                }
                try
                {
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 55652, 55657);

                    for (int
        i = 0
        ; (DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 55643, 55955) || true) && (i < f_10306_55663_55689(inferredElementNames))
        ; DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 55691, 55694)
        , i++, DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 55643, 55955))

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 55643, 55955);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 55728, 55771);

                        var
                        inferredName = f_10306_55747_55770(inferredElementNames, i)
                        ;

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 55789, 55940) || true) && (inferredName != null && (DynAbs.Tracing.TraceSender.Expression_True(10306, 55793, 55848) && f_10306_55817_55848(toRemove, inferredName)))
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 55789, 55940);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 55890, 55921);

                            inferredElementNames[i] = null;
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 55789, 55940);
                        }
                    }
                }
                catch (System.Exception)
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoopByException(10306, 1, 313);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoop(10306, 1, 313);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 55969, 55985);

                f_10306_55969_55984(toRemove);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 56001, 56168) || true) && (f_10306_56005_56045(inferredElementNames, n => n is null))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 56001, 56168);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 56079, 56107);

                    f_10306_56079_56106(inferredElementNames);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 56125, 56153);

                    inferredElementNames = null;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 56001, 56168);
                }
                DynAbs.Tracing.TraceSender.TraceExitStaticMethod(10306, 54952, 56179);

                Microsoft.CodeAnalysis.PooledObjects.PooledHashSet<string>
                f_10306_55360_55395()
                {
                    var return_v = PooledHashSet<string>.GetInstance();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 55360, 55395);
                    return return_v;
                }


                bool
                f_10306_55506_55532(System.Collections.Generic.HashSet<string>
                this_param, string
                item)
                {
                    var return_v = this_param.Add(item);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 55506, 55532);
                    return return_v;
                }


                bool
                f_10306_55574_55592(Microsoft.CodeAnalysis.PooledObjects.PooledHashSet<string>
                this_param, string
                item)
                {
                    var return_v = this_param.Add(item);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 55574, 55592);
                    return return_v;
                }


                Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<string>
                f_10306_55431_55451_I(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<string>
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 55431, 55451);
                    return return_v;
                }


                int
                f_10306_55663_55689(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<string>
                this_param)
                {
                    var return_v = this_param.Count;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 55663, 55689);
                    return return_v;
                }


                string
                f_10306_55747_55770(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<string>
                this_param, int
                i0)
                {
                    var return_v = this_param[i0];
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 55747, 55770);
                    return return_v;
                }


                bool
                f_10306_55817_55848(Microsoft.CodeAnalysis.PooledObjects.PooledHashSet<string>
                this_param, string
                item)
                {
                    var return_v = this_param.Contains(item);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 55817, 55848);
                    return return_v;
                }


                int
                f_10306_55969_55984(Microsoft.CodeAnalysis.PooledObjects.PooledHashSet<string>
                this_param)
                {
                    this_param.Free();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 55969, 55984);
                    return 0;
                }


                bool
                f_10306_56005_56045(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<string>
                builder, System.Func<string, bool>
                predicate)
                {
                    var return_v = builder.All<string>(predicate);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 56005, 56045);
                    return return_v;
                }


                int
                f_10306_56079_56106(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<string>
                this_param)
                {
                    this_param.Free();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 56079, 56106);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 54952, 56179);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 54952, 56179);
            }
        }

        private static string InferTupleElementName(SyntaxNode syntax)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterStaticMethod(10306, 56191, 56606);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 56278, 56326);

                string
                name = f_10306_56292_56325(syntax)
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 56432, 56567) || true) && (name == null || (DynAbs.Tracing.TraceSender.Expression_False(10306, 56436, 56506) || f_10306_56452_56500(name) != -1))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 56432, 56567);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 56540, 56552);

                    return null;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 56432, 56567);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 56583, 56595);

                return name;
                DynAbs.Tracing.TraceSender.TraceExitStaticMethod(10306, 56191, 56606);

                string?
                f_10306_56292_56325(Microsoft.CodeAnalysis.SyntaxNode
                syntax)
                {
                    var return_v = syntax.TryGetInferredMemberName();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 56292, 56325);
                    return return_v;
                }


                int
                f_10306_56452_56500(string
                name)
                {
                    var return_v = NamedTypeSymbol.IsTupleElementNameReserved(name);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 56452, 56500);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 56191, 56606);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 56191, 56606);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private BoundExpression BindRefValue(RefValueExpressionSyntax node, DiagnosticBag diagnostics)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10306, 56618, 57983);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 56881, 56970);

                BoundExpression
                argument = f_10306_56908_56969(this, f_10306_56918_56933(node), diagnostics, BindValueKind.RValue)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 56984, 57023);

                bool
                hasErrors = f_10306_57001_57022(argument)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 57039, 57138);

                TypeSymbol
                typedReferenceType = f_10306_57071_57137(f_10306_57071_57087(this), SpecialType.System_TypedReference)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 57152, 57202);

                HashSet<DiagnosticInfo>
                useSiteDiagnostics = null
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 57216, 57344);

                Conversion
                conversion = f_10306_57240_57343(f_10306_57240_57256(this), argument, typedReferenceType, ref useSiteDiagnostics)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 57358, 57400);

                f_10306_57358_57399(diagnostics, node, useSiteDiagnostics);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 57414, 57640) || true) && (f_10306_57418_57440_M(!conversion.IsImplicit) || (DynAbs.Tracing.TraceSender.Expression_False(10306, 57418, 57463) || f_10306_57444_57463_M(!conversion.IsValid)))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 57414, 57640);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 57497, 57514);

                    hasErrors = true;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 57532, 57625);

                    f_10306_57532_57624(this, diagnostics, node, conversion, argument, typedReferenceType);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 57414, 57640);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 57656, 57739);

                argument = f_10306_57667_57738(this, argument, conversion, typedReferenceType, diagnostics);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 57755, 57830);

                TypeWithAnnotations
                typeWithAnnotations = f_10306_57797_57829(this, f_10306_57806_57815(node), diagnostics)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 57846, 57972);

                return f_10306_57853_57971(node, typeWithAnnotations.NullableAnnotation, argument, typeWithAnnotations.Type, hasErrors);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10306, 56618, 57983);

                Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                f_10306_56918_56933(Microsoft.CodeAnalysis.CSharp.Syntax.RefValueExpressionSyntax
                this_param)
                {
                    var return_v = this_param.Expression;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 56918, 56933);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_56908_56969(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                node, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.Binder.BindValueKind
                valueKind)
                {
                    var return_v = this_param.BindValue(node, diagnostics, valueKind);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 56908, 56969);
                    return return_v;
                }


                bool
                f_10306_57001_57022(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.HasAnyErrors;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 57001, 57022);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                f_10306_57071_57087(Microsoft.CodeAnalysis.CSharp.Binder
                this_param)
                {
                    var return_v = this_param.Compilation;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 57071, 57087);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                f_10306_57071_57137(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param, Microsoft.CodeAnalysis.SpecialType
                specialType)
                {
                    var return_v = this_param.GetSpecialType(specialType);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 57071, 57137);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Conversions
                f_10306_57240_57256(Microsoft.CodeAnalysis.CSharp.Binder
                this_param)
                {
                    var return_v = this_param.Conversions;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 57240, 57256);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Conversion
                f_10306_57240_57343(Microsoft.CodeAnalysis.CSharp.Conversions
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                sourceExpression, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                destination, ref System.Collections.Generic.HashSet<Microsoft.CodeAnalysis.DiagnosticInfo>?
                useSiteDiagnostics)
                {
                    var return_v = this_param.ClassifyConversionFromExpression(sourceExpression, destination, ref useSiteDiagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 57240, 57343);
                    return return_v;
                }


                bool
                f_10306_57358_57399(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.Syntax.RefValueExpressionSyntax
                node, System.Collections.Generic.HashSet<Microsoft.CodeAnalysis.DiagnosticInfo>
                useSiteDiagnostics)
                {
                    var return_v = diagnostics.Add((Microsoft.CodeAnalysis.SyntaxNode)node, useSiteDiagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 57358, 57399);
                    return return_v;
                }


                bool
                f_10306_57418_57440_M(bool
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 57418, 57440);
                    return return_v;
                }


                bool
                f_10306_57444_57463_M(bool
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 57444, 57463);
                    return return_v;
                }


                int
                f_10306_57532_57624(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.Syntax.RefValueExpressionSyntax
                syntax, Microsoft.CodeAnalysis.CSharp.Conversion
                conversion, Microsoft.CodeAnalysis.CSharp.BoundExpression
                operand, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                targetType)
                {
                    this_param.GenerateImplicitConversionError(diagnostics, (Microsoft.CodeAnalysis.SyntaxNode)syntax, conversion, operand, targetType);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 57532, 57624);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_57667_57738(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                source, Microsoft.CodeAnalysis.CSharp.Conversion
                conversion, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                destination, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.CreateConversion(source, conversion, destination, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 57667, 57738);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax
                f_10306_57806_57815(Microsoft.CodeAnalysis.CSharp.Syntax.RefValueExpressionSyntax
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 57806, 57815);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                f_10306_57797_57829(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax
                syntax, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.BindType((Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)syntax, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 57797, 57829);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundRefValueOperator
                f_10306_57853_57971(Microsoft.CodeAnalysis.CSharp.Syntax.RefValueExpressionSyntax
                syntax, Microsoft.CodeAnalysis.CSharp.NullableAnnotation
                nullableAnnotation, Microsoft.CodeAnalysis.CSharp.BoundExpression
                operand, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                type, bool
                hasErrors)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.BoundRefValueOperator((Microsoft.CodeAnalysis.SyntaxNode)syntax, nullableAnnotation, operand, type, hasErrors);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 57853, 57971);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 56618, 57983);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 56618, 57983);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private BoundExpression BindMakeRef(MakeRefExpressionSyntax node, DiagnosticBag diagnostics)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10306, 57995, 59203);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 58205, 58301);

                BoundExpression
                argument = f_10306_58232_58300(this, f_10306_58247_58262(node), diagnostics, BindValueKind.RefOrOut)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 58317, 58356);

                bool
                hasErrors = f_10306_58334_58355(argument)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 58372, 58473);

                TypeSymbol
                typedReferenceType = f_10306_58404_58472(this, SpecialType.System_TypedReference, diagnostics, node)
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 58489, 58795) || true) && ((object)f_10306_58501_58514(argument) != null && (DynAbs.Tracing.TraceSender.Expression_True(10306, 58493, 58558) && f_10306_58526_58558(f_10306_58526_58539(argument))))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 58489, 58795);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 58668, 58745);

                    f_10306_58668_58744(diagnostics, ErrorCode.ERR_MethodArgCantBeRefAny, node, f_10306_58730_58743(argument));
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 58763, 58780);

                    hasErrors = true;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 58489, 58795);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 59113, 59192);

                return f_10306_59120_59191(node, argument, typedReferenceType, hasErrors);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10306, 57995, 59203);

                Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                f_10306_58247_58262(Microsoft.CodeAnalysis.CSharp.Syntax.MakeRefExpressionSyntax
                this_param)
                {
                    var return_v = this_param.Expression;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 58247, 58262);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_58232_58300(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                node, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.Binder.BindValueKind
                valueKind)
                {
                    var return_v = this_param.BindValue(node, diagnostics, valueKind);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 58232, 58300);
                    return return_v;
                }


                bool
                f_10306_58334_58355(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.HasAnyErrors;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 58334, 58355);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                f_10306_58404_58472(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.SpecialType
                typeId, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.Syntax.MakeRefExpressionSyntax
                node)
                {
                    var return_v = this_param.GetSpecialType(typeId, diagnostics, (Microsoft.CodeAnalysis.SyntaxNode)node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 58404, 58472);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?
                f_10306_58501_58514(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 58501, 58514);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                f_10306_58526_58539(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 58526, 58539);
                    return return_v;
                }


                bool
                f_10306_58526_58558(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                type)
                {
                    var return_v = type.IsRestrictedType();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 58526, 58558);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                f_10306_58730_58743(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 58730, 58743);
                    return return_v;
                }


                int
                f_10306_58668_58744(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, Microsoft.CodeAnalysis.CSharp.Syntax.MakeRefExpressionSyntax
                syntax, params object[]
                args)
                {
                    Error(diagnostics, code, (Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode)syntax, args);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 58668, 58744);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.BoundMakeRefOperator
                f_10306_59120_59191(Microsoft.CodeAnalysis.CSharp.Syntax.MakeRefExpressionSyntax
                syntax, Microsoft.CodeAnalysis.CSharp.BoundExpression
                operand, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                type, bool
                hasErrors)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.BoundMakeRefOperator((Microsoft.CodeAnalysis.SyntaxNode)syntax, operand, type, hasErrors);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 59120, 59191);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 57995, 59203);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 57995, 59203);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private BoundExpression BindRefType(RefTypeExpressionSyntax node, DiagnosticBag diagnostics)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10306, 59215, 60479);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 59424, 59513);

                BoundExpression
                argument = f_10306_59451_59512(this, f_10306_59461_59476(node), diagnostics, BindValueKind.RValue)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 59527, 59566);

                bool
                hasErrors = f_10306_59544_59565(argument)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 59582, 59681);

                TypeSymbol
                typedReferenceType = f_10306_59614_59680(f_10306_59614_59630(this), SpecialType.System_TypedReference)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 59695, 59778);

                TypeSymbol
                typeType = f_10306_59717_59777(f_10306_59717_59733(this), WellKnownType.System_Type)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 59792, 59842);

                HashSet<DiagnosticInfo>
                useSiteDiagnostics = null
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 59856, 59984);

                Conversion
                conversion = f_10306_59880_59983(f_10306_59880_59896(this), argument, typedReferenceType, ref useSiteDiagnostics)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 59998, 60040);

                f_10306_59998_60039(diagnostics, node, useSiteDiagnostics);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 60054, 60280) || true) && (f_10306_60058_60080_M(!conversion.IsImplicit) || (DynAbs.Tracing.TraceSender.Expression_False(10306, 60058, 60103) || f_10306_60084_60103_M(!conversion.IsValid)))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 60054, 60280);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 60137, 60154);

                    hasErrors = true;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 60172, 60265);

                    f_10306_60172_60264(this, diagnostics, node, conversion, argument, typedReferenceType);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 60054, 60280);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 60296, 60379);

                argument = f_10306_60307_60378(this, argument, conversion, typedReferenceType, diagnostics);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 60393, 60468);

                return f_10306_60400_60467(node, argument, null, typeType, hasErrors);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10306, 59215, 60479);

                Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                f_10306_59461_59476(Microsoft.CodeAnalysis.CSharp.Syntax.RefTypeExpressionSyntax
                this_param)
                {
                    var return_v = this_param.Expression;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 59461, 59476);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_59451_59512(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                node, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.Binder.BindValueKind
                valueKind)
                {
                    var return_v = this_param.BindValue(node, diagnostics, valueKind);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 59451, 59512);
                    return return_v;
                }


                bool
                f_10306_59544_59565(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.HasAnyErrors;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 59544, 59565);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                f_10306_59614_59630(Microsoft.CodeAnalysis.CSharp.Binder
                this_param)
                {
                    var return_v = this_param.Compilation;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 59614, 59630);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                f_10306_59614_59680(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param, Microsoft.CodeAnalysis.SpecialType
                specialType)
                {
                    var return_v = this_param.GetSpecialType(specialType);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 59614, 59680);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                f_10306_59717_59733(Microsoft.CodeAnalysis.CSharp.Binder
                this_param)
                {
                    var return_v = this_param.Compilation;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 59717, 59733);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                f_10306_59717_59777(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param, Microsoft.CodeAnalysis.WellKnownType
                type)
                {
                    var return_v = this_param.GetWellKnownType(type);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 59717, 59777);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Conversions
                f_10306_59880_59896(Microsoft.CodeAnalysis.CSharp.Binder
                this_param)
                {
                    var return_v = this_param.Conversions;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 59880, 59896);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Conversion
                f_10306_59880_59983(Microsoft.CodeAnalysis.CSharp.Conversions
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                sourceExpression, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                destination, ref System.Collections.Generic.HashSet<Microsoft.CodeAnalysis.DiagnosticInfo>?
                useSiteDiagnostics)
                {
                    var return_v = this_param.ClassifyConversionFromExpression(sourceExpression, destination, ref useSiteDiagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 59880, 59983);
                    return return_v;
                }


                bool
                f_10306_59998_60039(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.Syntax.RefTypeExpressionSyntax
                node, System.Collections.Generic.HashSet<Microsoft.CodeAnalysis.DiagnosticInfo>
                useSiteDiagnostics)
                {
                    var return_v = diagnostics.Add((Microsoft.CodeAnalysis.SyntaxNode)node, useSiteDiagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 59998, 60039);
                    return return_v;
                }


                bool
                f_10306_60058_60080_M(bool
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 60058, 60080);
                    return return_v;
                }


                bool
                f_10306_60084_60103_M(bool
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 60084, 60103);
                    return return_v;
                }


                int
                f_10306_60172_60264(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.Syntax.RefTypeExpressionSyntax
                syntax, Microsoft.CodeAnalysis.CSharp.Conversion
                conversion, Microsoft.CodeAnalysis.CSharp.BoundExpression
                operand, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                targetType)
                {
                    this_param.GenerateImplicitConversionError(diagnostics, (Microsoft.CodeAnalysis.SyntaxNode)syntax, conversion, operand, targetType);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 60172, 60264);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_60307_60378(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                source, Microsoft.CodeAnalysis.CSharp.Conversion
                conversion, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                destination, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.CreateConversion(source, conversion, destination, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 60307, 60378);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundRefTypeOperator
                f_10306_60400_60467(Microsoft.CodeAnalysis.CSharp.Syntax.RefTypeExpressionSyntax
                syntax, Microsoft.CodeAnalysis.CSharp.BoundExpression
                operand, Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol?
                getTypeFromHandle, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                type, bool
                hasErrors)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.BoundRefTypeOperator((Microsoft.CodeAnalysis.SyntaxNode)syntax, operand, getTypeFromHandle, type, hasErrors);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 60400, 60467);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 59215, 60479);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 59215, 60479);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private BoundExpression BindArgList(CSharpSyntaxNode node, DiagnosticBag diagnostics)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10306, 60491, 63418);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 61953, 62068);

                TypeSymbol
                runtimeArgumentHandleType = f_10306_61992_62067(this, SpecialType.System_RuntimeArgumentHandle, diagnostics, node)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 62084, 62146);

                MethodSymbol
                method = f_10306_62106_62129(this) as MethodSymbol
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 62162, 62184);

                bool
                hasError = false
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 62200, 63324) || true) && ((object)method == null || (DynAbs.Tracing.TraceSender.Expression_False(10306, 62204, 62246) || f_10306_62230_62246_M(!method.IsVararg)))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 62200, 63324);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 62380, 62432);

                    f_10306_62380_62431(diagnostics, ErrorCode.ERR_ArgsInvalid, node);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 62450, 62466);

                    hasError = true;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 62200, 63324);
                }

                else

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 62200, 63324);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 62608, 62657);

                    Symbol
                    container = f_10306_62627_62656(this)
                    ;

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 62675, 63309) || true) && (container != method)
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 62675, 63309);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 63162, 63250);

                        f_10306_63162_63249(diagnostics, ErrorCode.ERR_SpecialByRefInLambda, node, runtimeArgumentHandleType);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 63274, 63290);

                        hasError = true;
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 62675, 63309);
                    }
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 62200, 63324);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 63340, 63407);

                return f_10306_63347_63406(node, runtimeArgumentHandleType, hasError);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10306, 60491, 63418);

                Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                f_10306_61992_62067(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.SpecialType
                typeId, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode
                node)
                {
                    var return_v = this_param.GetSpecialType(typeId, diagnostics, (Microsoft.CodeAnalysis.SyntaxNode)node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 61992, 62067);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbol
                f_10306_62106_62129(Microsoft.CodeAnalysis.CSharp.Binder
                this_param)
                {
                    var return_v = this_param.ContainingMember();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 62106, 62129);
                    return return_v;
                }


                bool
                f_10306_62230_62246_M(bool
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 62230, 62246);
                    return return_v;
                }


                int
                f_10306_62380_62431(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode
                syntax)
                {
                    Error(diagnostics, code, syntax);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 62380, 62431);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.Symbol?
                f_10306_62627_62656(Microsoft.CodeAnalysis.CSharp.Binder
                this_param)
                {
                    var return_v = this_param.ContainingMemberOrLambda;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 62627, 62656);
                    return return_v;
                }


                int
                f_10306_63162_63249(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode
                syntax, params object[]
                args)
                {
                    Error(diagnostics, code, syntax, args);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 63162, 63249);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.BoundArgList
                f_10306_63347_63406(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode
                syntax, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                type, bool
                hasErrors)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.BoundArgList((Microsoft.CodeAnalysis.SyntaxNode)syntax, type, hasErrors);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 63347, 63406);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 60491, 63418);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 60491, 63418);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private BoundExpression BindQualifiedName(QualifiedNameSyntax node, DiagnosticBag diagnostics)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10306, 64059, 64389);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 64178, 64378);

                return f_10306_64185_64377(this, node, f_10306_64221_64291(this, f_10306_64268_64277(node), diagnostics), f_10306_64293_64303(node), f_10306_64305_64318(node), invoked: false, indexed: false, diagnostics: diagnostics);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10306, 64059, 64389);

                Microsoft.CodeAnalysis.CSharp.Syntax.NameSyntax
                f_10306_64268_64277(Microsoft.CodeAnalysis.CSharp.Syntax.QualifiedNameSyntax
                this_param)
                {
                    var return_v = this_param.Left;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 64268, 64277);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_64221_64291(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.NameSyntax
                left, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.BindLeftOfPotentialColorColorMemberAccess((Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)left, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 64221, 64291);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Syntax.SimpleNameSyntax
                f_10306_64293_64303(Microsoft.CodeAnalysis.CSharp.Syntax.QualifiedNameSyntax
                this_param)
                {
                    var return_v = this_param.Right;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 64293, 64303);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SyntaxToken
                f_10306_64305_64318(Microsoft.CodeAnalysis.CSharp.Syntax.QualifiedNameSyntax
                this_param)
                {
                    var return_v = this_param.DotToken;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 64305, 64318);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_64185_64377(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.QualifiedNameSyntax
                node, Microsoft.CodeAnalysis.CSharp.BoundExpression
                boundLeft, Microsoft.CodeAnalysis.CSharp.Syntax.SimpleNameSyntax
                right, Microsoft.CodeAnalysis.SyntaxToken
                operatorToken, bool
                invoked, bool
                indexed, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.BindMemberAccessWithBoundLeft((Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)node, boundLeft, right, operatorToken, invoked: invoked, indexed: indexed, diagnostics: diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 64185, 64377);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 64059, 64389);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 64059, 64389);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private BoundExpression BindParenthesizedExpression(ExpressionSyntax innerExpression, DiagnosticBag diagnostics)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10306, 64401, 64941);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 64538, 64596);

                var
                result = f_10306_64551_64595(this, innerExpression, diagnostics)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 64857, 64902);

                f_10306_64857_64901(result, diagnostics);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 64916, 64930);

                return result;
                DynAbs.Tracing.TraceSender.TraceExitMethod(10306, 64401, 64941);

                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_64551_64595(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                node, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.BindExpression(node, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 64551, 64595);
                    return return_v;
                }


                bool
                f_10306_64857_64901(Microsoft.CodeAnalysis.CSharp.BoundExpression
                expr, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = CheckNotNamespaceOrType(expr, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 64857, 64901);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 64401, 64941);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 64401, 64941);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private BoundExpression BindTypeOf(TypeOfExpressionSyntax node, DiagnosticBag diagnostics)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10306, 64971, 66952);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 65086, 65126);

                ExpressionSyntax
                typeSyntax = f_10306_65116_65125(node)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 65142, 65205);

                TypeofBinder
                typeofBinder = f_10306_65170_65204(typeSyntax, this)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 65260, 65278);

                AliasSymbol
                alias
                = default(AliasSymbol);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 65292, 65392);

                TypeWithAnnotations
                typeWithAnnotations = f_10306_65334_65391(typeofBinder, typeSyntax, diagnostics, out alias)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 65406, 65449);

                TypeSymbol
                type = typeWithAnnotations.Type
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 65465, 65487);

                bool
                hasError = false
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 65634, 66662) || true) && (f_10306_65638_65654(type))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 65634, 66662);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 65688, 65751);

                    f_10306_65688_65750(diagnostics, ErrorCode.ERR_BadDynamicTypeof, f_10306_65736_65749(node));
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 65769, 65785);

                    hasError = true;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 65634, 66662);
                }

                else
                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 65634, 66662);

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 65819, 66662) || true) && (f_10306_65823_65875(typeWithAnnotations.NullableAnnotation) && (DynAbs.Tracing.TraceSender.Expression_True(10306, 65823, 65899) && f_10306_65879_65899(type)))
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 65819, 66662);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 66012, 66076);

                        f_10306_66012_66075(                // error: cannot take the `typeof` a nullable reference type.
                                        diagnostics, ErrorCode.ERR_BadNullableTypeof, f_10306_66061_66074(node));
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 66094, 66110);

                        hasError = true;
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 65819, 66662);
                    }

                    else
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 65819, 66662);

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 66144, 66662) || true) && (f_10306_66148_66172(this) && (DynAbs.Tracing.TraceSender.Expression_True(10306, 66148, 66206) && f_10306_66176_66206(type)))
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 66144, 66662);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 66523, 66613);

                            f_10306_66523_66612(                // https://github.com/dotnet/roslyn/issues/48765 tracks removing this error and properly supporting function
                                                                // pointers in attribute types. Until then, we don't know how serialize them, so error instead of crashing
                                                                // during emit.
                                            diagnostics, ErrorCode.ERR_FunctionPointerTypesInAttributeNotSupported, f_10306_66598_66611(node));
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 66631, 66647);

                            hasError = true;
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 66144, 66662);
                        }
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 65819, 66662);
                    }
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 65634, 66662);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 66678, 66794);

                BoundTypeExpression
                boundType = f_10306_66710_66793(typeSyntax, alias, typeWithAnnotations, f_10306_66774_66792(type))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 66808, 66941);

                return f_10306_66815_66940(node, boundType, null, f_10306_66862_66929(this, WellKnownType.System_Type, diagnostics, node), hasError);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10306, 64971, 66952);

                Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax
                f_10306_65116_65125(Microsoft.CodeAnalysis.CSharp.Syntax.TypeOfExpressionSyntax
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 65116, 65125);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.TypeofBinder
                f_10306_65170_65204(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                typeExpression, Microsoft.CodeAnalysis.CSharp.Binder
                next)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.TypeofBinder(typeExpression, next);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 65170, 65204);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                f_10306_65334_65391(Microsoft.CodeAnalysis.CSharp.TypeofBinder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                syntax, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, out Microsoft.CodeAnalysis.CSharp.Symbols.AliasSymbol
                alias)
                {
                    var return_v = this_param.BindType(syntax, diagnostics, out alias);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 65334, 65391);
                    return return_v;
                }


                bool
                f_10306_65638_65654(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                type)
                {
                    var return_v = type.IsDynamic();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 65638, 65654);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Location
                f_10306_65736_65749(Microsoft.CodeAnalysis.CSharp.Syntax.TypeOfExpressionSyntax
                this_param)
                {
                    var return_v = this_param.Location;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 65736, 65749);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo
                f_10306_65688_65750(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, Microsoft.CodeAnalysis.Location
                location)
                {
                    var return_v = diagnostics.Add(code, location);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 65688, 65750);
                    return return_v;
                }


                bool
                f_10306_65823_65875(Microsoft.CodeAnalysis.CSharp.NullableAnnotation
                annotation)
                {
                    var return_v = annotation.IsAnnotated();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 65823, 65875);
                    return return_v;
                }


                bool
                f_10306_65879_65899(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                this_param)
                {
                    var return_v = this_param.IsReferenceType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 65879, 65899);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Location
                f_10306_66061_66074(Microsoft.CodeAnalysis.CSharp.Syntax.TypeOfExpressionSyntax
                this_param)
                {
                    var return_v = this_param.Location;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 66061, 66074);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo
                f_10306_66012_66075(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, Microsoft.CodeAnalysis.Location
                location)
                {
                    var return_v = diagnostics.Add(code, location);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 66012, 66075);
                    return return_v;
                }


                bool
                f_10306_66148_66172(Microsoft.CodeAnalysis.CSharp.Binder
                this_param)
                {
                    var return_v = this_param.InAttributeArgument;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 66148, 66172);
                    return return_v;
                }


                bool
                f_10306_66176_66206(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                type)
                {
                    var return_v = type.ContainsFunctionPointer();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 66176, 66206);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Location
                f_10306_66598_66611(Microsoft.CodeAnalysis.CSharp.Syntax.TypeOfExpressionSyntax
                this_param)
                {
                    var return_v = this_param.Location;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 66598, 66611);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo
                f_10306_66523_66612(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, Microsoft.CodeAnalysis.Location
                location)
                {
                    var return_v = diagnostics.Add(code, location);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 66523, 66612);
                    return return_v;
                }


                bool
                f_10306_66774_66792(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                type)
                {
                    var return_v = type.IsErrorType();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 66774, 66792);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundTypeExpression
                f_10306_66710_66793(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                syntax, Microsoft.CodeAnalysis.CSharp.Symbols.AliasSymbol
                aliasOpt, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                typeWithAnnotations, bool
                hasErrors)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.BoundTypeExpression((Microsoft.CodeAnalysis.SyntaxNode)syntax, aliasOpt, typeWithAnnotations, hasErrors);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 66710, 66793);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                f_10306_66862_66929(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.WellKnownType
                type, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.Syntax.TypeOfExpressionSyntax
                node)
                {
                    var return_v = this_param.GetWellKnownType(type, diagnostics, (Microsoft.CodeAnalysis.SyntaxNode)node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 66862, 66929);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundTypeOfOperator
                f_10306_66815_66940(Microsoft.CodeAnalysis.CSharp.Syntax.TypeOfExpressionSyntax
                syntax, Microsoft.CodeAnalysis.CSharp.BoundTypeExpression
                sourceType, Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol?
                getTypeFromHandle, Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                type, bool
                hasErrors)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.BoundTypeOfOperator((Microsoft.CodeAnalysis.SyntaxNode)syntax, sourceType, getTypeFromHandle, (Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol)type, hasErrors);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 66815, 66940);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 64971, 66952);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 64971, 66952);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private BoundExpression BindSizeOf(SizeOfExpressionSyntax node, DiagnosticBag diagnostics)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10306, 66983, 67939);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 67098, 67138);

                ExpressionSyntax
                typeSyntax = f_10306_67128_67137(node)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 67152, 67170);

                AliasSymbol
                alias
                = default(AliasSymbol);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 67184, 67276);

                TypeWithAnnotations
                typeWithAnnotations = f_10306_67226_67275(this, typeSyntax, diagnostics, out alias)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 67290, 67333);

                TypeSymbol
                type = typeWithAnnotations.Type
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 67349, 67456);

                bool
                typeHasErrors = f_10306_67370_67388(type) || (DynAbs.Tracing.TraceSender.Expression_False(10306, 67370, 67455) || f_10306_67392_67455(f_10306_67409_67420(), type, f_10306_67428_67441(node), diagnostics))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 67472, 67583);

                BoundTypeExpression
                boundType = f_10306_67504_67582(typeSyntax, alias, typeWithAnnotations, typeHasErrors)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 67597, 67651);

                ConstantValue
                constantValue = f_10306_67627_67650(type)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 67665, 67757);

                bool
                hasErrors = constantValue is null && (DynAbs.Tracing.TraceSender.Expression_True(10306, 67682, 67756) && f_10306_67707_67756(this, node, diagnostics, type))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 67771, 67928);

                return f_10306_67778_67927(node, boundType, constantValue, f_10306_67851_67915(this, SpecialType.System_Int32, diagnostics, node), hasErrors);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10306, 66983, 67939);

                Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax
                f_10306_67128_67137(Microsoft.CodeAnalysis.CSharp.Syntax.SizeOfExpressionSyntax
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 67128, 67137);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                f_10306_67226_67275(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                syntax, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, out Microsoft.CodeAnalysis.CSharp.Symbols.AliasSymbol
                alias)
                {
                    var return_v = this_param.BindType(syntax, diagnostics, out alias);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 67226, 67275);
                    return return_v;
                }


                bool
                f_10306_67370_67388(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                type)
                {
                    var return_v = type.IsErrorType();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 67370, 67388);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                f_10306_67409_67420()
                {
                    var return_v = Compilation;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 67409, 67420);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Location
                f_10306_67428_67441(Microsoft.CodeAnalysis.CSharp.Syntax.SizeOfExpressionSyntax
                this_param)
                {
                    var return_v = this_param.Location;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 67428, 67441);
                    return return_v;
                }


                bool
                f_10306_67392_67455(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                compilation, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                type, Microsoft.CodeAnalysis.Location
                location, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = CheckManagedAddr(compilation, type, location, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 67392, 67455);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundTypeExpression
                f_10306_67504_67582(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                syntax, Microsoft.CodeAnalysis.CSharp.Symbols.AliasSymbol
                aliasOpt, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                typeWithAnnotations, bool
                hasErrors)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.BoundTypeExpression((Microsoft.CodeAnalysis.SyntaxNode)syntax, aliasOpt, typeWithAnnotations, hasErrors);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 67504, 67582);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ConstantValue
                f_10306_67627_67650(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                type)
                {
                    var return_v = GetConstantSizeOf(type);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 67627, 67650);
                    return return_v;
                }


                bool
                f_10306_67707_67756(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.SizeOfExpressionSyntax
                node, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                sizeOfTypeOpt)
                {
                    var return_v = this_param.ReportUnsafeIfNotAllowed((Microsoft.CodeAnalysis.SyntaxNode)node, diagnostics, sizeOfTypeOpt);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 67707, 67756);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                f_10306_67851_67915(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.SpecialType
                typeId, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.Syntax.SizeOfExpressionSyntax
                node)
                {
                    var return_v = this_param.GetSpecialType(typeId, diagnostics, (Microsoft.CodeAnalysis.SyntaxNode)node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 67851, 67915);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundSizeOfOperator
                f_10306_67778_67927(Microsoft.CodeAnalysis.CSharp.Syntax.SizeOfExpressionSyntax
                syntax, Microsoft.CodeAnalysis.CSharp.BoundTypeExpression
                sourceType, Microsoft.CodeAnalysis.ConstantValue?
                constantValueOpt, Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                type, bool
                hasErrors)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.BoundSizeOfOperator((Microsoft.CodeAnalysis.SyntaxNode)syntax, sourceType, constantValueOpt, (Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol)type, hasErrors);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 67778, 67927);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 66983, 67939);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 66983, 67939);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        internal static bool CheckManagedAddr(CSharpCompilation compilation, TypeSymbol type, Location location, DiagnosticBag diagnostics)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterStaticMethod(10306, 68066, 68515);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 68222, 68273);

                HashSet<DiagnosticInfo>?
                useSiteDiagnostics = null
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 68287, 68349);

                var
                managedKind = f_10306_68305_68348(type, ref useSiteDiagnostics)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 68363, 68409);

                f_10306_68363_68408(diagnostics, location, useSiteDiagnostics);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 68425, 68504);

                return f_10306_68432_68503(compilation, type, managedKind, location, diagnostics);
                DynAbs.Tracing.TraceSender.TraceExitStaticMethod(10306, 68066, 68515);

                Microsoft.CodeAnalysis.ManagedKind
                f_10306_68305_68348(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                this_param, ref System.Collections.Generic.HashSet<Microsoft.CodeAnalysis.DiagnosticInfo>?
                useSiteDiagnostics)
                {
                    var return_v = this_param.GetManagedKind(ref useSiteDiagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 68305, 68348);
                    return return_v;
                }


                bool
                f_10306_68363_68408(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.Location
                location, System.Collections.Generic.HashSet<Microsoft.CodeAnalysis.DiagnosticInfo>?
                useSiteDiagnostics)
                {
                    var return_v = diagnostics.Add(location, useSiteDiagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 68363, 68408);
                    return return_v;
                }


                bool
                f_10306_68432_68503(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                compilation, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                type, Microsoft.CodeAnalysis.ManagedKind
                managedKind, Microsoft.CodeAnalysis.Location
                location, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = CheckManagedAddr(compilation, type, managedKind, location, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 68432, 68503);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 68066, 68515);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 68066, 68515);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        internal static bool CheckManagedAddr(CSharpCompilation compilation, TypeSymbol type, ManagedKind managedKind, Location location, DiagnosticBag diagnostics)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterStaticMethod(10306, 68624, 69496);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 68805, 69485);

                switch (managedKind)
                {

                    case ManagedKind.Managed:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 68805, 69485);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 68905, 68964);

                        f_10306_68905_68963(diagnostics, ErrorCode.ERR_ManagedAddr, location, type);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 68986, 68998);

                        return true;
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 68805, 69485);

                    case ManagedKind.UnmanagedWithGenerics when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 69055, 69191) || true) && (f_10306_69060_69156(MessageID.IDS_FeatureUnmanagedConstructedTypes, compilation) is CSDiagnosticInfo diagnosticInfo) && (DynAbs.Tracing.TraceSender.Expression_True(10306, 69055, 69191) || true)
                :
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 68805, 69485);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 69214, 69256);

                        f_10306_69214_69255(diagnostics, diagnosticInfo, location);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 69278, 69290);

                        return true;
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 68805, 69485);

                    case ManagedKind.Unknown:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 68805, 69485);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 69355, 69409);

                        throw f_10306_69361_69408(managedKind);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 68805, 69485);

                    default:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 68805, 69485);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 69457, 69470);

                        return false;
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 68805, 69485);
                }
                DynAbs.Tracing.TraceSender.TraceExitStaticMethod(10306, 68624, 69496);

                Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo
                f_10306_68905_68963(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, Microsoft.CodeAnalysis.Location
                location, params object[]
                args)
                {
                    var return_v = diagnostics.Add(code, location, args);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 68905, 68963);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo?
                f_10306_69060_69156(Microsoft.CodeAnalysis.CSharp.MessageID
                feature, Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                compilation)
                {
                    var return_v = feature.GetFeatureAvailabilityDiagnosticInfo(compilation);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 69060, 69156);
                    return return_v;
                }


                int
                f_10306_69214_69255(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo
                info, Microsoft.CodeAnalysis.Location
                location)
                {
                    diagnostics.Add((Microsoft.CodeAnalysis.DiagnosticInfo)info, location);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 69214, 69255);
                    return 0;
                }


                System.Exception
                f_10306_69361_69408(Microsoft.CodeAnalysis.ManagedKind
                o)
                {
                    var return_v = ExceptionUtilities.UnexpectedValue((object)o);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 69361, 69408);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 68624, 69496);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 68624, 69496);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        internal static ConstantValue GetConstantSizeOf(TypeSymbol type)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterStaticMethod(10306, 69527, 69713);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 69616, 69702);

                return f_10306_69623_69701(f_10306_69650_69700((f_10306_69651_69679(type) ?? (DynAbs.Tracing.TraceSender.Expression_Null<Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol?>(10306, 69651, 69687) ?? type))));
                DynAbs.Tracing.TraceSender.TraceExitStaticMethod(10306, 69527, 69713);

                Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol?
                f_10306_69651_69679(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                type)
                {
                    var return_v = type.GetEnumUnderlyingType();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 69651, 69679);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SpecialType
                f_10306_69650_69700(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                this_param)
                {
                    var return_v = this_param.SpecialType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 69650, 69700);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ConstantValue
                f_10306_69623_69701(Microsoft.CodeAnalysis.SpecialType
                st)
                {
                    var return_v = ConstantValue.CreateSizeOf(st);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 69623, 69701);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 69527, 69713);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 69527, 69713);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private BoundExpression BindDefaultExpression(DefaultExpressionSyntax node, DiagnosticBag diagnostics)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10306, 69725, 70249);
                Microsoft.CodeAnalysis.CSharp.Symbols.AliasSymbol alias = default(Microsoft.CodeAnalysis.CSharp.Symbols.AliasSymbol);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 69852, 69955);

                TypeWithAnnotations
                typeWithAnnotations = f_10306_69894_69954(this, f_10306_69908_69917(node), diagnostics, out alias)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 69969, 70063);

                var
                typeExpression = f_10306_69990_70062(f_10306_70014_70023(node), aliasOpt: alias, typeWithAnnotations)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 70077, 70120);

                TypeSymbol
                type = typeWithAnnotations.Type
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 70134, 70238);

                return f_10306_70141_70237(node, typeExpression, constantValueOpt: f_10306_70208_70230(type), type);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10306, 69725, 70249);

                Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax
                f_10306_69908_69917(Microsoft.CodeAnalysis.CSharp.Syntax.DefaultExpressionSyntax
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 69908, 69917);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                f_10306_69894_69954(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax
                syntax, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, out Microsoft.CodeAnalysis.CSharp.Symbols.AliasSymbol
                alias)
                {
                    var return_v = this_param.BindType((Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)syntax, diagnostics, out alias);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 69894, 69954);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax
                f_10306_70014_70023(Microsoft.CodeAnalysis.CSharp.Syntax.DefaultExpressionSyntax
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 70014, 70023);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundTypeExpression
                f_10306_69990_70062(Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax
                syntax, Microsoft.CodeAnalysis.CSharp.Symbols.AliasSymbol
                aliasOpt, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                typeWithAnnotations)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.BoundTypeExpression((Microsoft.CodeAnalysis.SyntaxNode)syntax, aliasOpt: aliasOpt, typeWithAnnotations);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 69990, 70062);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ConstantValue?
                f_10306_70208_70230(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                type)
                {
                    var return_v = type.GetDefaultValue();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 70208, 70230);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundDefaultExpression
                f_10306_70141_70237(Microsoft.CodeAnalysis.CSharp.Syntax.DefaultExpressionSyntax
                syntax, Microsoft.CodeAnalysis.CSharp.BoundTypeExpression
                targetType, Microsoft.CodeAnalysis.ConstantValue?
                constantValueOpt, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                type)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.BoundDefaultExpression((Microsoft.CodeAnalysis.SyntaxNode)syntax, targetType, constantValueOpt: constantValueOpt, type);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 70141, 70237);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 69725, 70249);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 69725, 70249);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private BoundExpression BindIdentifier(
                    SimpleNameSyntax node,
                    bool invoked,
                    bool indexed,
                    DiagnosticBag diagnostics)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10306, 70348, 77739);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 70542, 70569);

                f_10306_70542_70568(node != null);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 70775, 70869) || true) && (f_10306_70779_70793(node))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 70775, 70869);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 70827, 70854);

                    return f_10306_70834_70853(this, node);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 70775, 70869);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 71856, 71883);

                BoundExpression
                expression
                = default(BoundExpression);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 72043, 72066);

                int
                arity = f_10306_72055_72065(node)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 72080, 72114);

                bool
                hasTypeArguments = arity > 0
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 72130, 72351);

                SeparatedSyntaxList<TypeSyntax>
                typeArgumentList = (DynAbs.Tracing.TraceSender.Conditional_F1(10306, 72181, 72218) || ((f_10306_72181_72192(node) == SyntaxKind.GenericName
                && DynAbs.Tracing.TraceSender.Conditional_F2(10306, 72238, 72290)) || DynAbs.Tracing.TraceSender.Conditional_F3(10306, 72310, 72350))) ? f_10306_72238_72290(f_10306_72238_72280(((GenericNameSyntax)node))) : default(SeparatedSyntaxList<TypeSyntax>)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 72367, 72413);

                f_10306_72367_72412(arity == typeArgumentList.Count);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 72429, 72613);

                var
                typeArgumentsWithAnnotations = (DynAbs.Tracing.TraceSender.Conditional_F1(10306, 72464, 72480) || ((hasTypeArguments && DynAbs.Tracing.TraceSender.Conditional_F2(10306, 72500, 72548)) || DynAbs.Tracing.TraceSender.Conditional_F3(10306, 72568, 72612))) ? f_10306_72500_72548(this, typeArgumentList, diagnostics) : default(ImmutableArray<TypeWithAnnotations>)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 72629, 72675);

                var
                lookupResult = f_10306_72648_72674()
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 72689, 72749);

                LookupOptions
                options = LookupOptions.AllMethodsOnArityZero
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 72763, 72872) || true) && (invoked)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 72763, 72872);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 72808, 72857);

                    options |= LookupOptions.MustBeInvocableIfMember;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 72763, 72872);
                }

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 72888, 73114) || true) && (f_10306_72892_72907_M(!IsInMethodBody) && (DynAbs.Tracing.TraceSender.Expression_True(10306, 72892, 72926) && f_10306_72911_72926_M(!IsInsideNameof)))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 72888, 73114);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 72960, 73027);

                    f_10306_72960_73026((options & LookupOptions.NamespacesOrTypesOnly) == 0);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 73045, 73099);

                    options |= LookupOptions.MustNotBeMethodTypeParameter;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 72888, 73114);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 73130, 73167);

                var
                name = node.Identifier.ValueText
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 73181, 73231);

                HashSet<DiagnosticInfo>
                useSiteDiagnostics = null
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 73245, 73372);

                f_10306_73245_73371(this, lookupResult, name, arity: arity, useSiteDiagnostics: ref useSiteDiagnostics, options: options);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 73386, 73428);

                f_10306_73386_73427(diagnostics, node, useSiteDiagnostics);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 73444, 77660) || true) && (f_10306_73448_73465(lookupResult) != LookupResultKind.Empty)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 73444, 77660);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 73594, 73607);

                    bool
                    isError
                    = default(bool);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 73625, 73674);

                    var
                    members = f_10306_73639_73673()
                    ;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 73692, 73814);

                    Symbol
                    symbol = f_10306_73708_73813(this, lookupResult, node, name, f_10306_73767_73777(node), members, diagnostics, out isError)
                    ;

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 73869, 76026) || true) && ((object)symbol == null)
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 73869, 76026);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 73937, 73969);

                        f_10306_73937_73968(f_10306_73950_73963(members) > 0);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 73993, 74053);

                        var
                        receiver = f_10306_74008_74052(this, node, members)
                        ;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 74075, 74600);

                        expression = f_10306_74088_74599(node, typeArgumentList, typeArgumentsWithAnnotations, receiver, name, members, lookupResult, (DynAbs.Tracing.TraceSender.Conditional_F1(10306, 74437, 74453) || ((receiver != null && DynAbs.Tracing.TraceSender.Conditional_F2(10306, 74456, 74497)) || DynAbs.Tracing.TraceSender.Conditional_F3(10306, 74500, 74526))) ? BoundMethodGroupFlags.HasImplicitReceiver : BoundMethodGroupFlags.None, isError, diagnostics);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 74624, 74716);

                        f_10306_74624_74715(node, f_10306_74691_74701(members, 0), diagnostics);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 73869, 76026);
                    }

                    else

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 73869, 76026);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 74798, 74896);

                        bool
                        isNamedType = (f_10306_74818_74829(symbol) == SymbolKind.NamedType) || (DynAbs.Tracing.TraceSender.Expression_False(10306, 74817, 74895) || (f_10306_74859_74870(symbol) == SymbolKind.ErrorType))
                        ;

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 74920, 75173) || true) && (hasTypeArguments && (DynAbs.Tracing.TraceSender.Expression_True(10306, 74924, 74955) && isNamedType))
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 74920, 75173);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 75005, 75150);

                            symbol = f_10306_75014_75149(this, node, symbol, typeArgumentList, typeArgumentsWithAnnotations, diagnostics);
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 74920, 75173);
                        }
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 75197, 75288);

                        expression = f_10306_75210_75287(this, node, symbol, diagnostics, f_10306_75251_75268(lookupResult), indexed, isError);

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 75312, 76007) || true) && (!isNamedType && (DynAbs.Tracing.TraceSender.Expression_True(10306, 75316, 75391) && (hasTypeArguments || (DynAbs.Tracing.TraceSender.Expression_False(10306, 75333, 75390) || f_10306_75353_75364(node) == SyntaxKind.GenericName))))
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 75312, 76007);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 75441, 75463);

                            f_10306_75441_75462(isError);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 75555, 75984);

                            expression = f_10306_75568_75983(syntax: node, resultKind: LookupResultKind.WrongArity, symbols: f_10306_75743_75772(symbol), childBoundNodes: f_10306_75820_75881(f_10306_75842_75880(this, expression)), type: f_10306_75918_75933(expression), hasErrors: isError);
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 75312, 76007);
                        }
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 73869, 76026);
                    }
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 76046, 76061);

                    f_10306_76046_76060(
                                    members);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 73444, 77660);
                }

                else

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 73444, 77660);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 76127, 76145);

                    expression = null;

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 76163, 76701) || true) && (node is IdentifierNameSyntax identifier)
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 76163, 76701);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 76248, 76313);

                        var
                        type = f_10306_76259_76312(this, identifier, diagnostics)
                        ;

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 76335, 76682) || true) && (type is { })
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 76335, 76682);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 76400, 76455);

                            expression = f_10306_76413_76454(node, null, type);
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 76335, 76682);
                        }

                        else
                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 76335, 76682);

                            if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 76505, 76682) || true) && (f_10306_76509_76551(identifier, diagnostics))
                            )

                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 76505, 76682);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 76601, 76659);

                                expression = f_10306_76614_76658(node, type: null);
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 76505, 76682);
                            }
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 76335, 76682);
                        }
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 76163, 76701);
                    }

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 76814, 77645) || true) && (expression is null)
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 76814, 77645);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 76878, 76911);

                        expression = f_10306_76891_76910(this, node);

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 76933, 77626) || true) && (f_10306_76937_76955(lookupResult) != null)
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 76933, 77626);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 77013, 77058);

                            f_10306_77013_77057(diagnostics, f_10306_77032_77050(lookupResult), node);
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 76933, 77626);
                        }

                        else
                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 76933, 77626);

                            if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 77108, 77626) || true) && (f_10306_77112_77146(node))
                            )

                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 77108, 77626);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 77196, 77256);

                                f_10306_77196_77255(diagnostics, ErrorCode.ERR_QueryOuterKey, node, name);
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 77108, 77626);
                            }

                            else
                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 77108, 77626);

                                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 77306, 77626) || true) && (f_10306_77310_77332(node))
                                )

                                {
                                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 77306, 77626);
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 77382, 77442);

                                    f_10306_77382_77441(diagnostics, ErrorCode.ERR_QueryInnerKey, node, name);
                                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 77306, 77626);
                                }

                                else

                                {
                                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 77306, 77626);
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 77540, 77603);

                                    f_10306_77540_77602(diagnostics, ErrorCode.ERR_NameNotInContext, node, name);
                                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 77306, 77626);
                                }
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 77108, 77626);
                            }
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 76933, 77626);
                        }
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 76814, 77645);
                    }
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 73444, 77660);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 77676, 77696);

                f_10306_77676_77695(
                            lookupResult);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 77710, 77728);

                return expression;
                DynAbs.Tracing.TraceSender.TraceExitMethod(10306, 70348, 77739);

                int
                f_10306_70542_70568(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 70542, 70568);
                    return 0;
                }


                bool
                f_10306_70779_70793(Microsoft.CodeAnalysis.CSharp.Syntax.SimpleNameSyntax
                this_param)
                {
                    var return_v = this_param.IsMissing;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 70779, 70793);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundBadExpression
                f_10306_70834_70853(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.SimpleNameSyntax
                syntax)
                {
                    var return_v = this_param.BadExpression((Microsoft.CodeAnalysis.SyntaxNode)syntax);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 70834, 70853);
                    return return_v;
                }


                int
                f_10306_72055_72065(Microsoft.CodeAnalysis.CSharp.Syntax.SimpleNameSyntax
                this_param)
                {
                    var return_v = this_param.Arity;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 72055, 72065);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.SyntaxKind
                f_10306_72181_72192(Microsoft.CodeAnalysis.CSharp.Syntax.SimpleNameSyntax
                this_param)
                {
                    var return_v = this_param.Kind();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 72181, 72192);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Syntax.TypeArgumentListSyntax
                f_10306_72238_72280(Microsoft.CodeAnalysis.CSharp.Syntax.GenericNameSyntax
                this_param)
                {
                    var return_v = this_param.TypeArgumentList;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 72238, 72280);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SeparatedSyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax>
                f_10306_72238_72290(Microsoft.CodeAnalysis.CSharp.Syntax.TypeArgumentListSyntax
                this_param)
                {
                    var return_v = this_param.Arguments
                    ;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 72238, 72290);
                    return return_v;
                }


                int
                f_10306_72367_72412(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 72367, 72412);
                    return 0;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations>
                f_10306_72500_72548(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.SeparatedSyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax>
                typeArguments, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.BindTypeArguments(typeArguments, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 72500, 72548);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.LookupResult
                f_10306_72648_72674()
                {
                    var return_v = LookupResult.GetInstance();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 72648, 72674);
                    return return_v;
                }


                bool
                f_10306_72892_72907_M(bool
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 72892, 72907);
                    return return_v;
                }


                bool
                f_10306_72911_72926_M(bool
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 72911, 72926);
                    return return_v;
                }


                int
                f_10306_72960_73026(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 72960, 73026);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.Binder
                f_10306_73245_73371(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.LookupResult
                result, string
                name, int
                arity, ref System.Collections.Generic.HashSet<Microsoft.CodeAnalysis.DiagnosticInfo>?
                useSiteDiagnostics, Microsoft.CodeAnalysis.CSharp.LookupOptions
                options)
                {
                    var return_v = this_param.LookupSymbolsWithFallback(result, name, arity: arity, useSiteDiagnostics: ref useSiteDiagnostics, options: options);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 73245, 73371);
                    return return_v;
                }


                bool
                f_10306_73386_73427(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.Syntax.SimpleNameSyntax
                node, System.Collections.Generic.HashSet<Microsoft.CodeAnalysis.DiagnosticInfo>
                useSiteDiagnostics)
                {
                    var return_v = diagnostics.Add((Microsoft.CodeAnalysis.SyntaxNode)node, useSiteDiagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 73386, 73427);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.LookupResultKind
                f_10306_73448_73465(Microsoft.CodeAnalysis.CSharp.LookupResult
                this_param)
                {
                    var return_v = this_param.Kind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 73448, 73465);
                    return return_v;
                }


                Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbol>
                f_10306_73639_73673()
                {
                    var return_v = ArrayBuilder<Symbol>.GetInstance();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 73639, 73673);
                    return return_v;
                }


                int
                f_10306_73767_73777(Microsoft.CodeAnalysis.CSharp.Syntax.SimpleNameSyntax
                this_param)
                {
                    var return_v = this_param.Arity;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 73767, 73777);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbol
                f_10306_73708_73813(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.LookupResult
                result, Microsoft.CodeAnalysis.CSharp.Syntax.SimpleNameSyntax
                node, string
                plainName, int
                arity, Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbol>
                methodOrPropertyGroup, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, out bool
                wasError)
                {
                    var return_v = this_param.GetSymbolOrMethodOrPropertyGroup(result, (Microsoft.CodeAnalysis.SyntaxNode)node, plainName, arity, methodOrPropertyGroup, diagnostics, out wasError);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 73708, 73813);
                    return return_v;
                }


                int
                f_10306_73950_73963(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbol>
                this_param)
                {
                    var return_v = this_param.Count;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 73950, 73963);
                    return return_v;
                }


                int
                f_10306_73937_73968(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 73937, 73968);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_74008_74052(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.SimpleNameSyntax
                syntax, Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbol>
                members)
                {
                    var return_v = this_param.SynthesizeMethodGroupReceiver((Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode)syntax, members);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 74008, 74052);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundMethodOrPropertyGroup
                f_10306_74088_74599(Microsoft.CodeAnalysis.CSharp.Syntax.SimpleNameSyntax
                syntax, Microsoft.CodeAnalysis.SeparatedSyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax>
                typeArgumentsSyntax, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations>
                typeArguments, Microsoft.CodeAnalysis.CSharp.BoundExpression
                receiver, string
                plainName, Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbol>
                members, Microsoft.CodeAnalysis.CSharp.LookupResult
                lookupResult, Microsoft.CodeAnalysis.CSharp.BoundMethodGroupFlags
                methodGroupFlags, bool
                hasErrors, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = ConstructBoundMemberGroupAndReportOmittedTypeArguments((Microsoft.CodeAnalysis.SyntaxNode)syntax, typeArgumentsSyntax, typeArguments, receiver, plainName, members, lookupResult, methodGroupFlags, hasErrors, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 74088, 74599);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbol
                f_10306_74691_74701(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbol>
                this_param, int
                i0)
                {
                    var return_v = this_param[i0];
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 74691, 74701);
                    return return_v;
                }


                bool
                f_10306_74624_74715(Microsoft.CodeAnalysis.CSharp.Syntax.SimpleNameSyntax
                node, Microsoft.CodeAnalysis.CSharp.Symbol
                symbol, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = ReportSimpleProgramLocalReferencedOutsideOfTopLevelStatement(node, symbol, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 74624, 74715);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SymbolKind
                f_10306_74818_74829(Microsoft.CodeAnalysis.CSharp.Symbol
                this_param)
                {
                    var return_v = this_param.Kind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 74818, 74829);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SymbolKind
                f_10306_74859_74870(Microsoft.CodeAnalysis.CSharp.Symbol
                this_param)
                {
                    var return_v = this_param.Kind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 74859, 74870);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                f_10306_75014_75149(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.SimpleNameSyntax
                typeSyntax, Microsoft.CodeAnalysis.CSharp.Symbol
                type, Microsoft.CodeAnalysis.SeparatedSyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax>
                typeArgumentsSyntax, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations>
                typeArguments, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.ConstructNamedTypeUnlessTypeArgumentOmitted((Microsoft.CodeAnalysis.SyntaxNode)typeSyntax, (Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol)type, typeArgumentsSyntax, typeArguments, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 75014, 75149);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.LookupResultKind
                f_10306_75251_75268(Microsoft.CodeAnalysis.CSharp.LookupResult
                this_param)
                {
                    var return_v = this_param.Kind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 75251, 75268);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_75210_75287(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.SimpleNameSyntax
                node, Microsoft.CodeAnalysis.CSharp.Symbol
                symbol, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.LookupResultKind
                resultKind, bool
                indexed, bool
                isError)
                {
                    var return_v = this_param.BindNonMethod(node, symbol, diagnostics, resultKind, indexed, isError);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 75210, 75287);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.SyntaxKind
                f_10306_75353_75364(Microsoft.CodeAnalysis.CSharp.Syntax.SimpleNameSyntax
                this_param)
                {
                    var return_v = this_param.Kind();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 75353, 75364);
                    return return_v;
                }


                int
                f_10306_75441_75462(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 75441, 75462);
                    return 0;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>
                f_10306_75743_75772(Microsoft.CodeAnalysis.CSharp.Symbol
                item)
                {
                    var return_v = ImmutableArray.Create(item);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 75743, 75772);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_75842_75880(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                expression)
                {
                    var return_v = this_param.BindToTypeForErrorRecovery(expression);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 75842, 75880);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                f_10306_75820_75881(Microsoft.CodeAnalysis.CSharp.BoundExpression
                item)
                {
                    var return_v = ImmutableArray.Create(item);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 75820, 75881);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?
                f_10306_75918_75933(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 75918, 75933);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundBadExpression
                f_10306_75568_75983(Microsoft.CodeAnalysis.CSharp.Syntax.SimpleNameSyntax
                syntax, Microsoft.CodeAnalysis.CSharp.LookupResultKind
                resultKind, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>
                symbols, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                childBoundNodes, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?
                type, bool
                hasErrors)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.BoundBadExpression(syntax: (Microsoft.CodeAnalysis.SyntaxNode)syntax, resultKind: resultKind, symbols: symbols, childBoundNodes: childBoundNodes, type: type, hasErrors: hasErrors);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 75568, 75983);
                    return return_v;
                }


                int
                f_10306_76046_76060(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbol>
                this_param)
                {
                    this_param.Free();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 76046, 76060);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                f_10306_76259_76312(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.IdentifierNameSyntax
                node, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.BindNativeIntegerSymbolIfAny(node, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 76259, 76312);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundTypeExpression
                f_10306_76413_76454(Microsoft.CodeAnalysis.CSharp.Syntax.SimpleNameSyntax
                syntax, Microsoft.CodeAnalysis.CSharp.Symbols.AliasSymbol?
                aliasOpt, Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                type)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.BoundTypeExpression((Microsoft.CodeAnalysis.SyntaxNode)syntax, aliasOpt, (Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol)type);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 76413, 76454);
                    return return_v;
                }


                bool
                f_10306_76509_76551(Microsoft.CodeAnalysis.CSharp.Syntax.IdentifierNameSyntax
                node, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = FallBackOnDiscard(node, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 76509, 76551);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundDiscardExpression
                f_10306_76614_76658(Microsoft.CodeAnalysis.CSharp.Syntax.SimpleNameSyntax
                syntax, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?
                type)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.BoundDiscardExpression((Microsoft.CodeAnalysis.SyntaxNode)syntax, type: type);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 76614, 76658);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundBadExpression
                f_10306_76891_76910(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.SimpleNameSyntax
                syntax)
                {
                    var return_v = this_param.BadExpression((Microsoft.CodeAnalysis.SyntaxNode)syntax);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 76891, 76910);
                    return return_v;
                }


                Microsoft.CodeAnalysis.DiagnosticInfo
                f_10306_76937_76955(Microsoft.CodeAnalysis.CSharp.LookupResult
                this_param)
                {
                    var return_v = this_param.Error;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 76937, 76955);
                    return return_v;
                }


                Microsoft.CodeAnalysis.DiagnosticInfo
                f_10306_77032_77050(Microsoft.CodeAnalysis.CSharp.LookupResult
                this_param)
                {
                    var return_v = this_param.Error;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 77032, 77050);
                    return return_v;
                }


                int
                f_10306_77013_77057(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.DiagnosticInfo
                info, Microsoft.CodeAnalysis.CSharp.Syntax.SimpleNameSyntax
                syntax)
                {
                    Error(diagnostics, info, (Microsoft.CodeAnalysis.SyntaxNode)syntax);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 77013, 77057);
                    return 0;
                }


                bool
                f_10306_77112_77146(Microsoft.CodeAnalysis.CSharp.Syntax.SimpleNameSyntax
                node)
                {
                    var return_v = IsJoinRangeVariableInLeftKey(node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 77112, 77146);
                    return return_v;
                }


                int
                f_10306_77196_77255(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, Microsoft.CodeAnalysis.CSharp.Syntax.SimpleNameSyntax
                syntax, params object[]
                args)
                {
                    Error(diagnostics, code, (Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode)syntax, args);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 77196, 77255);
                    return 0;
                }


                bool
                f_10306_77310_77332(Microsoft.CodeAnalysis.CSharp.Syntax.SimpleNameSyntax
                node)
                {
                    var return_v = IsInJoinRightKey(node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 77310, 77332);
                    return return_v;
                }


                int
                f_10306_77382_77441(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, Microsoft.CodeAnalysis.CSharp.Syntax.SimpleNameSyntax
                syntax, params object[]
                args)
                {
                    Error(diagnostics, code, (Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode)syntax, args);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 77382, 77441);
                    return 0;
                }


                int
                f_10306_77540_77602(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, Microsoft.CodeAnalysis.CSharp.Syntax.SimpleNameSyntax
                syntax, params object[]
                args)
                {
                    Error(diagnostics, code, (Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode)syntax, args);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 77540, 77602);
                    return 0;
                }


                int
                f_10306_77676_77695(Microsoft.CodeAnalysis.CSharp.LookupResult
                this_param)
                {
                    this_param.Free();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 77676, 77695);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 70348, 77739);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 70348, 77739);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private static bool FallBackOnDiscard(IdentifierNameSyntax node, DiagnosticBag diagnostics)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterStaticMethod(10306, 77879, 78486);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 77995, 78097) || true) && (!node.Identifier.IsUnderscoreToken())
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 77995, 78097);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 78069, 78082);

                    return false;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 77995, 78097);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 78113, 78192);

                CSharpSyntaxNode
                containingDeconstruction = f_10306_78157_78191(node)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 78206, 78291);

                bool
                isDiscard = containingDeconstruction != null || (DynAbs.Tracing.TraceSender.Expression_False(10306, 78223, 78290) || f_10306_78259_78290(node))
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 78305, 78442) || true) && (isDiscard)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 78305, 78442);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 78352, 78427);

                    f_10306_78352_78426(node, MessageID.IDS_FeatureDiscards, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 78305, 78442);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 78458, 78475);

                return isDiscard;
                DynAbs.Tracing.TraceSender.TraceExitStaticMethod(10306, 77879, 78486);

                Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode?
                f_10306_78157_78191(Microsoft.CodeAnalysis.CSharp.Syntax.IdentifierNameSyntax
                expr)
                {
                    var return_v = expr.GetContainingDeconstruction();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 78157, 78191);
                    return return_v;
                }


                bool
                f_10306_78259_78290(Microsoft.CodeAnalysis.CSharp.Syntax.IdentifierNameSyntax
                node)
                {
                    var return_v = IsOutVarDiscardIdentifier((Microsoft.CodeAnalysis.CSharp.Syntax.SimpleNameSyntax)node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 78259, 78290);
                    return return_v;
                }


                bool
                f_10306_78352_78426(Microsoft.CodeAnalysis.CSharp.Syntax.IdentifierNameSyntax
                syntax, Microsoft.CodeAnalysis.CSharp.MessageID
                feature, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = CheckFeatureAvailability((Microsoft.CodeAnalysis.SyntaxNode)syntax, feature, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 78352, 78426);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 77879, 78486);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 77879, 78486);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private static bool IsOutVarDiscardIdentifier(SimpleNameSyntax node)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterStaticMethod(10306, 78498, 78860);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 78591, 78641);

                f_10306_78591_78640(node.Identifier.IsUnderscoreToken());
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 78657, 78695);

                CSharpSyntaxNode
                parent = f_10306_78683_78694(node)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 78709, 78849);

                return (f_10306_78717_78731_I(DynAbs.Tracing.TraceSender.TraceConditionalAccessExpression(parent, 10306, 78717, 78731)?.Kind()) == SyntaxKind.Argument && (DynAbs.Tracing.TraceSender.Expression_True(10306, 78717, 78847) && ((ArgumentSyntax)parent).RefOrOutKeyword.Kind() == SyntaxKind.OutKeyword));
                DynAbs.Tracing.TraceSender.TraceExitStaticMethod(10306, 78498, 78860);

                int
                f_10306_78591_78640(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 78591, 78640);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode?
                f_10306_78683_78694(Microsoft.CodeAnalysis.CSharp.Syntax.SimpleNameSyntax
                this_param)
                {
                    var return_v = this_param.Parent;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 78683, 78694);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.SyntaxKind?
                f_10306_78717_78731_I(Microsoft.CodeAnalysis.CSharp.SyntaxKind?
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 78717, 78731);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 78498, 78860);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 78498, 78860);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private BoundExpression SynthesizeMethodGroupReceiver(CSharpSyntaxNode syntax, ArrayBuilder<Symbol> members)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10306, 78872, 83462);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 81617, 81649);

                f_10306_81617_81648(f_10306_81630_81643(members) > 0);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 82507, 82545);

                var
                currentType = f_10306_82525_82544(this)
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 82559, 82805) || true) && ((object)currentType == null)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 82559, 82805);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 82778, 82790);

                    return null;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 82559, 82805);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 82821, 82867);

                var
                declaringType = f_10306_82841_82866(f_10306_82841_82851(members, 0))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 82883, 82921);

                HashSet<DiagnosticInfo>
                unused = null
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 82935, 83451) || true) && (f_10306_82939_83056(currentType, declaringType, TypeCompareKind.ConsiderEverything, useSiteDiagnostics: ref unused) || (DynAbs.Tracing.TraceSender.Expression_False(10306, 82939, 83209) || (f_10306_83078_83101(currentType) && (DynAbs.Tracing.TraceSender.Expression_True(10306, 83078, 83208) && (f_10306_83106_83134(declaringType) || (DynAbs.Tracing.TraceSender.Expression_False(10306, 83106, 83207) || currentType.AllInterfacesNoUseSiteDiagnostics.Contains(declaringType)))))))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 82935, 83451);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 83243, 83313);

                    return f_10306_83250_83312(this, syntax, currentType, wasCompilerGenerated: true);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 82935, 83451);
                }

                else

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 82935, 83451);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 83379, 83436);

                    return f_10306_83386_83435(this, syntax, declaringType);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 82935, 83451);
                }
                DynAbs.Tracing.TraceSender.TraceExitMethod(10306, 78872, 83462);

                int
                f_10306_81630_81643(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbol>
                this_param)
                {
                    var return_v = this_param.Count;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 81630, 81643);
                    return return_v;
                }


                int
                f_10306_81617_81648(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 81617, 81648);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol?
                f_10306_82525_82544(Microsoft.CodeAnalysis.CSharp.Binder
                this_param)
                {
                    var return_v = this_param.ContainingType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 82525, 82544);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbol
                f_10306_82841_82851(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbol>
                this_param, int
                i0)
                {
                    var return_v = this_param[i0];
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 82841, 82851);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                f_10306_82841_82866(Microsoft.CodeAnalysis.CSharp.Symbol
                this_param)
                {
                    var return_v = this_param.ContainingType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 82841, 82866);
                    return return_v;
                }


                bool
                f_10306_82939_83056(Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                type, Microsoft.CodeAnalysis.TypeCompareKind
                comparison, ref System.Collections.Generic.HashSet<Microsoft.CodeAnalysis.DiagnosticInfo>?
                useSiteDiagnostics)
                {
                    var return_v = this_param.IsEqualToOrDerivedFrom((Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol)type, comparison, useSiteDiagnostics: ref useSiteDiagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 82939, 83056);
                    return return_v;
                }


                bool
                f_10306_83078_83101(Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                this_param)
                {
                    var return_v = this_param.IsInterface;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 83078, 83101);
                    return return_v;
                }


                bool
                f_10306_83106_83134(Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                type)
                {
                    var return_v = type.IsObjectType();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 83106, 83134);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundThisReference
                f_10306_83250_83312(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode
                node, Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                thisTypeOpt, bool
                wasCompilerGenerated)
                {
                    var return_v = this_param.ThisReference((Microsoft.CodeAnalysis.SyntaxNode)node, thisTypeOpt, wasCompilerGenerated: wasCompilerGenerated);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 83250, 83312);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_83386_83435(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode
                syntax, Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                memberDeclaringType)
                {
                    var return_v = this_param.TryBindInteractiveReceiver((Microsoft.CodeAnalysis.SyntaxNode)syntax, memberDeclaringType);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 83386, 83435);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 78872, 83462);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 78872, 83462);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private bool IsBadLocalOrParameterCapture(Symbol symbol, TypeSymbol type, RefKind refKind)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10306, 83474, 84356);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 83589, 84318) || true) && (refKind != RefKind.None || (DynAbs.Tracing.TraceSender.Expression_False(10306, 83593, 83638) || f_10306_83620_83638(type)))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 83589, 84318);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 83672, 83741);

                    var
                    containingMethod = f_10306_83695_83724(this) as MethodSymbol
                    ;

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 83759, 84303) || true) && ((object)containingMethod != null && (DynAbs.Tracing.TraceSender.Expression_True(10306, 83763, 83858) && (object)f_10306_83807_83830(symbol) != (object)containingMethod))
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 83759, 84303);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 83970, 84034);

                        f_10306_83970_84033(!f_10306_83984_84032(f_10306_83984_84007(symbol), containingMethod));
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 84104, 84251);

                        return (f_10306_84112_84139(containingMethod) == MethodKind.AnonymousFunction || (DynAbs.Tracing.TraceSender.Expression_False(10306, 84112, 84230) || f_10306_84175_84202(containingMethod) == MethodKind.LocalFunction)) && (DynAbs.Tracing.TraceSender.Expression_True(10306, 84111, 84250) && f_10306_84235_84250_M(!IsInsideNameof));
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 83759, 84303);
                    }
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 83589, 84318);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 84332, 84345);

                return false;
                DynAbs.Tracing.TraceSender.TraceExitMethod(10306, 83474, 84356);

                bool
                f_10306_83620_83638(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                this_param)
                {
                    var return_v = this_param.IsRefLikeType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 83620, 83638);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbol?
                f_10306_83695_83724(Microsoft.CodeAnalysis.CSharp.Binder
                this_param)
                {
                    var return_v = this_param.ContainingMemberOrLambda;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 83695, 83724);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbol
                f_10306_83807_83830(Microsoft.CodeAnalysis.CSharp.Symbol
                this_param)
                {
                    var return_v = this_param.ContainingSymbol;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 83807, 83830);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbol
                f_10306_83984_84007(Microsoft.CodeAnalysis.CSharp.Symbol
                this_param)
                {
                    var return_v = this_param.ContainingSymbol;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 83984, 84007);
                    return return_v;
                }


                bool
                f_10306_83984_84032(Microsoft.CodeAnalysis.CSharp.Symbol
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                obj)
                {
                    var return_v = this_param.Equals((object)obj);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 83984, 84032);
                    return return_v;
                }


                int
                f_10306_83970_84033(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 83970, 84033);
                    return 0;
                }


                Microsoft.CodeAnalysis.MethodKind
                f_10306_84112_84139(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                this_param)
                {
                    var return_v = this_param.MethodKind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 84112, 84139);
                    return return_v;
                }


                Microsoft.CodeAnalysis.MethodKind
                f_10306_84175_84202(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                this_param)
                {
                    var return_v = this_param.MethodKind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 84175, 84202);
                    return return_v;
                }


                bool
                f_10306_84235_84250_M(bool
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 84235, 84250);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 83474, 84356);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 83474, 84356);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private BoundExpression BindNonMethod(SimpleNameSyntax node, Symbol symbol, DiagnosticBag diagnostics, LookupResultKind resultKind, bool indexed, bool isError)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10306, 84368, 95532);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 84668, 84831) || true) && (f_10306_84672_84683(symbol) != SymbolKind.Event)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 84668, 84831);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 84737, 84816);

                    f_10306_84737_84815(this, diagnostics, symbol, node, hasBaseReceiver: false);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 84668, 84831);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 84847, 95097);

                switch (f_10306_84855_84866(symbol))
                {

                    case SymbolKind.Local:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 84847, 95097);
                        {
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 84971, 85009);

                            var
                            localSymbol = (LocalSymbol)symbol
                            ;
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 85035, 85051);

                            TypeSymbol
                            type
                            = default(TypeSymbol);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 85077, 85100);

                            bool
                            isNullableUnknown
                            = default(bool);

                            if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 85128, 91423) || true) && (f_10306_85132_85224(node, localSymbol, diagnostics))
                            )

                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 85128, 91423);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 85282, 85446);

                                type = f_10306_85289_85445(f_10306_85351_85367(this), name: "var", arity: 0, errorInfo: null, variableUsedBeforeDeclaration: true);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 85476, 85501);

                                isNullableUnknown = true;
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 85128, 91423);
                            }

                            else
                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 85128, 91423);

                                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 85559, 91423) || true) && (f_10306_85563_85605(node, localSymbol))
                                )

                                {
                                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 85559, 91423);
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 87677, 87710);

                                    FieldSymbol
                                    possibleField = null
                                    ;
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 87740, 87786);

                                    var
                                    lookupResult = f_10306_87759_87785()
                                    ;
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 87816, 87866);

                                    HashSet<DiagnosticInfo>
                                    useSiteDiagnostics = null
                                    ;
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 87896, 88418);

                                    f_10306_87896_88417(this, lookupResult, f_10306_88002_88016(), f_10306_88051_88067(localSymbol), arity: 0, basesBeingResolved: null, options: LookupOptions.Default, originalBinder: this, diagnose: false, useSiteDiagnostics: ref useSiteDiagnostics);
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 88448, 88490);

                                    f_10306_88448_88489(diagnostics, node, useSiteDiagnostics);
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 88520, 88586);

                                    possibleField = f_10306_88536_88570(lookupResult) as FieldSymbol;
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 88616, 88636);

                                    f_10306_88616_88635(lookupResult);

                                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 88666, 89106) || true) && ((object)possibleField != null)
                                    )

                                    {
                                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 88666, 89106);
                                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 88765, 88869);

                                        f_10306_88765_88868(diagnostics, ErrorCode.ERR_VariableUsedBeforeDeclarationAndHidesField, node, node, possibleField);
                                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 88666, 89106);
                                    }

                                    else

                                    {
                                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 88666, 89106);
                                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 88999, 89075);

                                        f_10306_88999_89074(diagnostics, ErrorCode.ERR_VariableUsedBeforeDeclaration, node, node);
                                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 88666, 89106);
                                    }
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 89138, 89302);

                                    type = f_10306_89145_89301(f_10306_89207_89223(this), name: "var", arity: 0, errorInfo: null, variableUsedBeforeDeclaration: true);
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 89332, 89357);

                                    isNullableUnknown = true;
                                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 85559, 91423);
                                }

                                else
                                {
                                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 85559, 91423);

                                    if (
                                    (DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 89415, 91423) || true) && ((localSymbol is SourceLocalSymbol) && (DynAbs.Tracing.TraceSender.Expression_True(10306, 89573, 89678) && f_10306_89640_89678(((SourceLocalSymbol)localSymbol))) && (DynAbs.Tracing.TraceSender.Expression_True(10306, 89573, 89826) && f_10306_89793_89818(localSymbol) != null) && (DynAbs.Tracing.TraceSender.Expression_True(10306, 89573, 89899) && f_10306_89859_89899(f_10306_89859_89884(localSymbol), node)))
                                    )

                                    {
                                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 89415, 91423);
                                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 90557, 90627);

                                        f_10306_90557_90626(                            // A var (type-inferred) local variable has been used in its own initialization (the "forbidden zone").
                                                                                        // There are many cases where this occurs, including:
                                                                                        //
                                                                                        // 1. var x = M(out x);
                                                                                        // 2. M(out var x, out x);
                                                                                        // 3. var (x, y) = (y, x);
                                                                                        //
                                                                                        // localSymbol.ForbiddenDiagnostic provides a suitable diagnostic for whichever case applies.
                                                                                        //
                                                                    diagnostics, f_10306_90573_90604(localSymbol), f_10306_90606_90619(node), node);
                                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 90657, 90821);

                                        type = f_10306_90664_90820(f_10306_90726_90742(this), name: "var", arity: 0, errorInfo: null, variableUsedBeforeDeclaration: true);
                                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 90851, 90876);

                                        isNullableUnknown = true;
                                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 89415, 91423);
                                    }

                                    else

                                    {
                                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 89415, 91423);
                                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 90990, 91014);

                                        type = f_10306_90997_91013(localSymbol);
                                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 91044, 91070);

                                        isNullableUnknown = false;

                                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 91100, 91396) || true) && (f_10306_91104_91172(this, localSymbol, type, f_10306_91152_91171(localSymbol)))
                                        )

                                        {
                                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 91100, 91396);
                                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 91238, 91253);

                                            isError = true;
                                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 91287, 91365);

                                            f_10306_91287_91364(diagnostics, ErrorCode.ERR_AnonDelegateCantUseLocal, node, localSymbol);
                                            DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 91100, 91396);
                                        }
                                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 89415, 91423);
                                    }
                                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 85559, 91423);
                                }
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 85128, 91423);
                            }
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 91451, 91644);

                            var
                            constantValueOpt = (DynAbs.Tracing.TraceSender.Conditional_F1(10306, 91474, 91535) || ((f_10306_91474_91493(localSymbol) && (DynAbs.Tracing.TraceSender.Expression_True(10306, 91474, 91512) && f_10306_91497_91512_M(!IsInsideNameof)) && (DynAbs.Tracing.TraceSender.Expression_True(10306, 91474, 91535) && !f_10306_91517_91535(type)) && DynAbs.Tracing.TraceSender.Conditional_F2(10306, 91567, 91636)) || DynAbs.Tracing.TraceSender.Conditional_F3(10306, 91639, 91643))) ? f_10306_91567_91636(localSymbol, node, f_10306_91602_91622(this), diagnostics) : null
                            ;
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 91670, 91849);

                            return f_10306_91677_91848(node, localSymbol, BoundLocalDeclarationKind.None, constantValueOpt: constantValueOpt, isNullableUnknown: isNullableUnknown, type: type, hasErrors: isError);
                        }
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 84847, 95097);

                    case SymbolKind.Parameter:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 84847, 95097);
                        {
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 91967, 92007);

                            var
                            parameter = (ParameterSymbol)symbol
                            ;

                            if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 92033, 92317) || true) && (f_10306_92037_92111(this, parameter, f_10306_92077_92091(parameter), f_10306_92093_92110(parameter)))
                            )

                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 92033, 92317);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 92169, 92184);

                                isError = true;
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 92214, 92290);

                                f_10306_92214_92289(diagnostics, ErrorCode.ERR_AnonDelegateCantUse, node, f_10306_92274_92288(parameter));
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 92033, 92317);
                            }
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 92343, 92406);

                            return f_10306_92350_92405(node, parameter, hasErrors: isError);
                        }
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 84847, 95097);

                    case SymbolKind.NamedType:
                    case SymbolKind.ErrorType:
                    case SymbolKind.TypeParameter:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 84847, 95097);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 92784, 92867);

                        return f_10306_92791_92866(node, null, (TypeSymbol)symbol, hasErrors: isError);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 84847, 95097);

                    case SymbolKind.Property:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 84847, 95097);
                        {
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 92961, 93034);

                            BoundExpression
                            receiver = f_10306_92988_93033(this, node, symbol, diagnostics)
                            ;
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 93060, 93171);

                            return f_10306_93067_93170(this, node, receiver, symbol, diagnostics, resultKind, hasErrors: isError);
                        }
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 84847, 95097);

                    case SymbolKind.Event:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 84847, 95097);
                        {
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 93285, 93358);

                            BoundExpression
                            receiver = f_10306_93312_93357(this, node, symbol, diagnostics)
                            ;
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 93384, 93489);

                            return f_10306_93391_93488(this, node, receiver, symbol, diagnostics, resultKind, hasErrors: isError);
                        }
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 84847, 95097);

                    case SymbolKind.Field:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 84847, 95097);
                        {
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 93603, 93676);

                            BoundExpression
                            receiver = f_10306_93630_93675(this, node, symbol, diagnostics)
                            ;
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 93702, 93816);

                            return f_10306_93709_93815(this, node, receiver, symbol, diagnostics, resultKind, indexed, hasErrors: isError);
                        }
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 84847, 95097);

                    case SymbolKind.Namespace:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 84847, 95097);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 93907, 93994);

                        return f_10306_93914_93993(node, (NamespaceSymbol)symbol, hasErrors: isError);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 84847, 95097);

                    case SymbolKind.Alias:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 84847, 95097);
                        {
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 94085, 94117);

                            var
                            alias = (AliasSymbol)symbol
                            ;
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 94143, 94165);

                            symbol = f_10306_94152_94164(alias);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 94191, 94810);

                            switch (f_10306_94199_94210(symbol))
                            {

                                case SymbolKind.NamedType:
                                case SymbolKind.ErrorType:
                                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 94191, 94810);
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 94384, 94473);

                                    return f_10306_94391_94472(node, alias, (NamedTypeSymbol)symbol, hasErrors: isError);
                                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 94191, 94810);

                                case SymbolKind.Namespace:
                                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 94191, 94810);
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 94563, 94657);

                                    return f_10306_94570_94656(node, (NamespaceSymbol)symbol, alias, hasErrors: isError);
                                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 94191, 94810);

                                default:
                                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 94191, 94810);
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 94729, 94783);

                                    throw f_10306_94735_94782(f_10306_94770_94781(symbol));
                                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 94191, 94810);
                            }
                        }
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 84847, 95097);

                    case SymbolKind.RangeVariable:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 84847, 95097);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 94905, 94978);

                        return f_10306_94912_94977(this, node, symbol, diagnostics);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 84847, 95097);

                    default:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 84847, 95097);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 95028, 95082);

                        throw f_10306_95034_95081(f_10306_95069_95080(symbol));
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 84847, 95097);
                }

                bool isUsedBeforeDeclaration(SimpleNameSyntax node, LocalSymbol localSymbol)
                {
                    try
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterMethod(10306, 95113, 95521);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 95222, 95278);

                        Location
                        localSymbolLocation = f_10306_95253_95274(localSymbol)[0]
                        ;

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 95298, 95473) || true) && (f_10306_95302_95317(node) == f_10306_95321_95351(localSymbolLocation))
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 95298, 95473);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 95393, 95454);

                            return f_10306_95400_95414(node) < localSymbolLocation.SourceSpan.Start;
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 95298, 95473);
                        }
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 95493, 95506);

                        return false;
                        DynAbs.Tracing.TraceSender.TraceExitMethod(10306, 95113, 95521);

                        System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Location>
                        f_10306_95253_95274(Microsoft.CodeAnalysis.CSharp.Symbols.LocalSymbol
                        this_param)
                        {
                            var return_v = this_param.Locations;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 95253, 95274);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.SyntaxTree
                        f_10306_95302_95317(Microsoft.CodeAnalysis.CSharp.Syntax.SimpleNameSyntax
                        this_param)
                        {
                            var return_v = this_param.SyntaxTree;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 95302, 95317);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.SyntaxTree?
                        f_10306_95321_95351(Microsoft.CodeAnalysis.Location
                        this_param)
                        {
                            var return_v = this_param.SourceTree;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 95321, 95351);
                            return return_v;
                        }


                        int
                        f_10306_95400_95414(Microsoft.CodeAnalysis.CSharp.Syntax.SimpleNameSyntax
                        this_param)
                        {
                            var return_v = this_param.SpanStart;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 95400, 95414);
                            return return_v;
                        }

                    }
                    catch
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 95113, 95521);
                        throw;
                    }
                    finally
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 95113, 95521);
                    }
                    throw new System.Exception("Slicer error: unreachable code");
                }
                DynAbs.Tracing.TraceSender.TraceExitMethod(10306, 84368, 95532);

                Microsoft.CodeAnalysis.SymbolKind
                f_10306_84672_84683(Microsoft.CodeAnalysis.CSharp.Symbol
                this_param)
                {
                    var return_v = this_param.Kind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 84672, 84683);
                    return return_v;
                }


                int
                f_10306_84737_84815(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.Symbol
                symbol, Microsoft.CodeAnalysis.CSharp.Syntax.SimpleNameSyntax
                node, bool
                hasBaseReceiver)
                {
                    this_param.ReportDiagnosticsIfObsolete(diagnostics, symbol, (Microsoft.CodeAnalysis.SyntaxNode)node, hasBaseReceiver: hasBaseReceiver);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 84737, 84815);
                    return 0;
                }


                Microsoft.CodeAnalysis.SymbolKind
                f_10306_84855_84866(Microsoft.CodeAnalysis.CSharp.Symbol
                this_param)
                {
                    var return_v = this_param.Kind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 84855, 84866);
                    return return_v;
                }


                bool
                f_10306_85132_85224(Microsoft.CodeAnalysis.CSharp.Syntax.SimpleNameSyntax
                node, Microsoft.CodeAnalysis.CSharp.Symbols.LocalSymbol
                symbol, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = ReportSimpleProgramLocalReferencedOutsideOfTopLevelStatement(node, (Microsoft.CodeAnalysis.CSharp.Symbol)symbol, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 85132, 85224);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                f_10306_85351_85367(Microsoft.CodeAnalysis.CSharp.Binder
                this_param)
                {
                    var return_v = this_param.Compilation;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 85351, 85367);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.ExtendedErrorTypeSymbol
                f_10306_85289_85445(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                compilation, string
                name, int
                arity, Microsoft.CodeAnalysis.DiagnosticInfo?
                errorInfo, bool
                variableUsedBeforeDeclaration)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.Symbols.ExtendedErrorTypeSymbol(compilation, name: name, arity: arity, errorInfo: errorInfo, variableUsedBeforeDeclaration: variableUsedBeforeDeclaration);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 85289, 85445);
                    return return_v;
                }


                bool
                f_10306_85563_85605(Microsoft.CodeAnalysis.CSharp.Syntax.SimpleNameSyntax
                node, Microsoft.CodeAnalysis.CSharp.Symbols.LocalSymbol
                localSymbol)
                {
                    var return_v = isUsedBeforeDeclaration(node, localSymbol);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 85563, 85605);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.LookupResult
                f_10306_87759_87785()
                {
                    var return_v = LookupResult.GetInstance();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 87759, 87785);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol?
                f_10306_88002_88016()
                {
                    var return_v = ContainingType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 88002, 88016);
                    return return_v;
                }


                string
                f_10306_88051_88067(Microsoft.CodeAnalysis.CSharp.Symbols.LocalSymbol
                this_param)
                {
                    var return_v = this_param.Name;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 88051, 88067);
                    return return_v;
                }


                int
                f_10306_87896_88417(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.LookupResult
                result, Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol?
                type, string
                name, int
                arity, Roslyn.Utilities.ConsList<Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol>
                basesBeingResolved, Microsoft.CodeAnalysis.CSharp.LookupOptions
                options, Microsoft.CodeAnalysis.CSharp.Binder
                originalBinder, bool
                diagnose, ref System.Collections.Generic.HashSet<Microsoft.CodeAnalysis.DiagnosticInfo>?
                useSiteDiagnostics)
                {
                    this_param.LookupMembersInType(result, (Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?)type, name, arity: arity, basesBeingResolved: basesBeingResolved, options: options, originalBinder: originalBinder, diagnose: diagnose, useSiteDiagnostics: ref useSiteDiagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 87896, 88417);
                    return 0;
                }


                bool
                f_10306_88448_88489(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.Syntax.SimpleNameSyntax
                node, System.Collections.Generic.HashSet<Microsoft.CodeAnalysis.DiagnosticInfo>
                useSiteDiagnostics)
                {
                    var return_v = diagnostics.Add((Microsoft.CodeAnalysis.SyntaxNode)node, useSiteDiagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 88448, 88489);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbol
                f_10306_88536_88570(Microsoft.CodeAnalysis.CSharp.LookupResult
                this_param)
                {
                    var return_v = this_param.SingleSymbolOrDefault;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 88536, 88570);
                    return return_v;
                }


                int
                f_10306_88616_88635(Microsoft.CodeAnalysis.CSharp.LookupResult
                this_param)
                {
                    this_param.Free();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 88616, 88635);
                    return 0;
                }


                int
                f_10306_88765_88868(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, Microsoft.CodeAnalysis.CSharp.Syntax.SimpleNameSyntax
                syntax, params object[]
                args)
                {
                    Error(diagnostics, code, (Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode)syntax, args);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 88765, 88868);
                    return 0;
                }


                int
                f_10306_88999_89074(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, Microsoft.CodeAnalysis.CSharp.Syntax.SimpleNameSyntax
                syntax, params object[]
                args)
                {
                    Error(diagnostics, code, (Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode)syntax, args);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 88999, 89074);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                f_10306_89207_89223(Microsoft.CodeAnalysis.CSharp.Binder
                this_param)
                {
                    var return_v = this_param.Compilation;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 89207, 89223);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.ExtendedErrorTypeSymbol
                f_10306_89145_89301(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                compilation, string
                name, int
                arity, Microsoft.CodeAnalysis.DiagnosticInfo?
                errorInfo, bool
                variableUsedBeforeDeclaration)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.Symbols.ExtendedErrorTypeSymbol(compilation, name: name, arity: arity, errorInfo: errorInfo, variableUsedBeforeDeclaration: variableUsedBeforeDeclaration);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 89145, 89301);
                    return return_v;
                }


                bool
                f_10306_89640_89678(Microsoft.CodeAnalysis.CSharp.Symbols.SourceLocalSymbol
                this_param)
                {
                    var return_v = this_param.IsVar;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 89640, 89678);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SyntaxNode
                f_10306_89793_89818(Microsoft.CodeAnalysis.CSharp.Symbols.LocalSymbol
                this_param)
                {
                    var return_v = this_param.ForbiddenZone;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 89793, 89818);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SyntaxNode
                f_10306_89859_89884(Microsoft.CodeAnalysis.CSharp.Symbols.LocalSymbol
                this_param)
                {
                    var return_v = this_param.ForbiddenZone;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 89859, 89884);
                    return return_v;
                }


                bool
                f_10306_89859_89899(Microsoft.CodeAnalysis.SyntaxNode
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.SimpleNameSyntax
                node)
                {
                    var return_v = this_param.Contains((Microsoft.CodeAnalysis.SyntaxNode)node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 89859, 89899);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.ErrorCode
                f_10306_90573_90604(Microsoft.CodeAnalysis.CSharp.Symbols.LocalSymbol
                this_param)
                {
                    var return_v = this_param.ForbiddenDiagnostic;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 90573, 90604);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Location
                f_10306_90606_90619(Microsoft.CodeAnalysis.CSharp.Syntax.SimpleNameSyntax
                this_param)
                {
                    var return_v = this_param.Location;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 90606, 90619);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo
                f_10306_90557_90626(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, Microsoft.CodeAnalysis.Location
                location, params object[]
                args)
                {
                    var return_v = diagnostics.Add(code, location, args);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 90557, 90626);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                f_10306_90726_90742(Microsoft.CodeAnalysis.CSharp.Binder
                this_param)
                {
                    var return_v = this_param.Compilation;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 90726, 90742);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.ExtendedErrorTypeSymbol
                f_10306_90664_90820(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                compilation, string
                name, int
                arity, Microsoft.CodeAnalysis.DiagnosticInfo?
                errorInfo, bool
                variableUsedBeforeDeclaration)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.Symbols.ExtendedErrorTypeSymbol(compilation, name: name, arity: arity, errorInfo: errorInfo, variableUsedBeforeDeclaration: variableUsedBeforeDeclaration);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 90664, 90820);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                f_10306_90997_91013(Microsoft.CodeAnalysis.CSharp.Symbols.LocalSymbol
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 90997, 91013);
                    return return_v;
                }


                Microsoft.CodeAnalysis.RefKind
                f_10306_91152_91171(Microsoft.CodeAnalysis.CSharp.Symbols.LocalSymbol
                this_param)
                {
                    var return_v = this_param.RefKind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 91152, 91171);
                    return return_v;
                }


                bool
                f_10306_91104_91172(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.LocalSymbol
                symbol, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                type, Microsoft.CodeAnalysis.RefKind
                refKind)
                {
                    var return_v = this_param.IsBadLocalOrParameterCapture((Microsoft.CodeAnalysis.CSharp.Symbol)symbol, type, refKind);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 91104, 91172);
                    return return_v;
                }


                int
                f_10306_91287_91364(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, Microsoft.CodeAnalysis.CSharp.Syntax.SimpleNameSyntax
                syntax, params object[]
                args)
                {
                    Error(diagnostics, code, (Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode)syntax, args);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 91287, 91364);
                    return 0;
                }


                bool
                f_10306_91474_91493(Microsoft.CodeAnalysis.CSharp.Symbols.LocalSymbol
                this_param)
                {
                    var return_v = this_param.IsConst;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 91474, 91493);
                    return return_v;
                }


                bool
                f_10306_91497_91512_M(bool
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 91497, 91512);
                    return return_v;
                }


                bool
                f_10306_91517_91535(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                type)
                {
                    var return_v = type.IsErrorType();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 91517, 91535);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.LocalSymbol?
                f_10306_91602_91622(Microsoft.CodeAnalysis.CSharp.Binder
                this_param)
                {
                    var return_v = this_param.LocalInProgress;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 91602, 91622);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ConstantValue
                f_10306_91567_91636(Microsoft.CodeAnalysis.CSharp.Symbols.LocalSymbol
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.SimpleNameSyntax
                node, Microsoft.CodeAnalysis.CSharp.Symbols.LocalSymbol?
                inProgress, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.GetConstantValue((Microsoft.CodeAnalysis.SyntaxNode)node, inProgress, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 91567, 91636);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundLocal
                f_10306_91677_91848(Microsoft.CodeAnalysis.CSharp.Syntax.SimpleNameSyntax
                syntax, Microsoft.CodeAnalysis.CSharp.Symbols.LocalSymbol
                localSymbol, Microsoft.CodeAnalysis.CSharp.BoundLocalDeclarationKind
                declarationKind, Microsoft.CodeAnalysis.ConstantValue?
                constantValueOpt, bool
                isNullableUnknown, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                type, bool
                hasErrors)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.BoundLocal((Microsoft.CodeAnalysis.SyntaxNode)syntax, localSymbol, declarationKind, constantValueOpt: constantValueOpt, isNullableUnknown: isNullableUnknown, type: type, hasErrors: hasErrors);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 91677, 91848);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                f_10306_92077_92091(Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 92077, 92091);
                    return return_v;
                }


                Microsoft.CodeAnalysis.RefKind
                f_10306_92093_92110(Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol
                this_param)
                {
                    var return_v = this_param.RefKind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 92093, 92110);
                    return return_v;
                }


                bool
                f_10306_92037_92111(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol
                symbol, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                type, Microsoft.CodeAnalysis.RefKind
                refKind)
                {
                    var return_v = this_param.IsBadLocalOrParameterCapture((Microsoft.CodeAnalysis.CSharp.Symbol)symbol, type, refKind);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 92037, 92111);
                    return return_v;
                }


                string
                f_10306_92274_92288(Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol
                this_param)
                {
                    var return_v = this_param.Name;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 92274, 92288);
                    return return_v;
                }


                int
                f_10306_92214_92289(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, Microsoft.CodeAnalysis.CSharp.Syntax.SimpleNameSyntax
                syntax, params object[]
                args)
                {
                    Error(diagnostics, code, (Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode)syntax, args);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 92214, 92289);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.BoundParameter
                f_10306_92350_92405(Microsoft.CodeAnalysis.CSharp.Syntax.SimpleNameSyntax
                syntax, Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol
                parameterSymbol, bool
                hasErrors)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.BoundParameter((Microsoft.CodeAnalysis.SyntaxNode)syntax, parameterSymbol, hasErrors: hasErrors);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 92350, 92405);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundTypeExpression
                f_10306_92791_92866(Microsoft.CodeAnalysis.CSharp.Syntax.SimpleNameSyntax
                syntax, Microsoft.CodeAnalysis.CSharp.Symbols.AliasSymbol?
                aliasOpt, Microsoft.CodeAnalysis.CSharp.Symbol
                type, bool
                hasErrors)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.BoundTypeExpression((Microsoft.CodeAnalysis.SyntaxNode)syntax, aliasOpt, (Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol)type, hasErrors: hasErrors);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 92791, 92866);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_92988_93033(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.SimpleNameSyntax
                node, Microsoft.CodeAnalysis.CSharp.Symbol
                member, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.SynthesizeReceiver((Microsoft.CodeAnalysis.SyntaxNode)node, member, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 92988, 93033);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_93067_93170(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.SimpleNameSyntax
                node, Microsoft.CodeAnalysis.CSharp.BoundExpression
                receiver, Microsoft.CodeAnalysis.CSharp.Symbol
                propertySymbol, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.LookupResultKind
                lookupResult, bool
                hasErrors)
                {
                    var return_v = this_param.BindPropertyAccess((Microsoft.CodeAnalysis.SyntaxNode)node, receiver, (Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol)propertySymbol, diagnostics, lookupResult, hasErrors: hasErrors);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 93067, 93170);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_93312_93357(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.SimpleNameSyntax
                node, Microsoft.CodeAnalysis.CSharp.Symbol
                member, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.SynthesizeReceiver((Microsoft.CodeAnalysis.SyntaxNode)node, member, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 93312, 93357);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_93391_93488(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.SimpleNameSyntax
                node, Microsoft.CodeAnalysis.CSharp.BoundExpression
                receiver, Microsoft.CodeAnalysis.CSharp.Symbol
                eventSymbol, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.LookupResultKind
                lookupResult, bool
                hasErrors)
                {
                    var return_v = this_param.BindEventAccess((Microsoft.CodeAnalysis.SyntaxNode)node, receiver, (Microsoft.CodeAnalysis.CSharp.Symbols.EventSymbol)eventSymbol, diagnostics, lookupResult, hasErrors: hasErrors);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 93391, 93488);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_93630_93675(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.SimpleNameSyntax
                node, Microsoft.CodeAnalysis.CSharp.Symbol
                member, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.SynthesizeReceiver((Microsoft.CodeAnalysis.SyntaxNode)node, member, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 93630, 93675);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_93709_93815(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.SimpleNameSyntax
                node, Microsoft.CodeAnalysis.CSharp.BoundExpression
                receiver, Microsoft.CodeAnalysis.CSharp.Symbol
                fieldSymbol, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.LookupResultKind
                resultKind, bool
                indexed, bool
                hasErrors)
                {
                    var return_v = this_param.BindFieldAccess((Microsoft.CodeAnalysis.SyntaxNode)node, receiver, (Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol)fieldSymbol, diagnostics, resultKind, indexed, hasErrors: hasErrors);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 93709, 93815);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundNamespaceExpression
                f_10306_93914_93993(Microsoft.CodeAnalysis.CSharp.Syntax.SimpleNameSyntax
                syntax, Microsoft.CodeAnalysis.CSharp.Symbol
                namespaceSymbol, bool
                hasErrors)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.BoundNamespaceExpression((Microsoft.CodeAnalysis.SyntaxNode)syntax, (Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceSymbol)namespaceSymbol, hasErrors: hasErrors);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 93914, 93993);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceOrTypeSymbol
                f_10306_94152_94164(Microsoft.CodeAnalysis.CSharp.Symbols.AliasSymbol
                this_param)
                {
                    var return_v = this_param.Target;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 94152, 94164);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SymbolKind
                f_10306_94199_94210(Microsoft.CodeAnalysis.CSharp.Symbol
                this_param)
                {
                    var return_v = this_param.Kind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 94199, 94210);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundTypeExpression
                f_10306_94391_94472(Microsoft.CodeAnalysis.CSharp.Syntax.SimpleNameSyntax
                syntax, Microsoft.CodeAnalysis.CSharp.Symbols.AliasSymbol
                aliasOpt, Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                type, bool
                hasErrors)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.BoundTypeExpression((Microsoft.CodeAnalysis.SyntaxNode)syntax, aliasOpt, (Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol)type, hasErrors: hasErrors);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 94391, 94472);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundNamespaceExpression
                f_10306_94570_94656(Microsoft.CodeAnalysis.CSharp.Syntax.SimpleNameSyntax
                syntax, Microsoft.CodeAnalysis.CSharp.Symbol
                namespaceSymbol, Microsoft.CodeAnalysis.CSharp.Symbols.AliasSymbol
                aliasOpt, bool
                hasErrors)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.BoundNamespaceExpression((Microsoft.CodeAnalysis.SyntaxNode)syntax, (Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceSymbol)namespaceSymbol, aliasOpt, hasErrors: hasErrors);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 94570, 94656);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SymbolKind
                f_10306_94770_94781(Microsoft.CodeAnalysis.CSharp.Symbol
                this_param)
                {
                    var return_v = this_param.Kind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 94770, 94781);
                    return return_v;
                }


                System.Exception
                f_10306_94735_94782(Microsoft.CodeAnalysis.SymbolKind
                o)
                {
                    var return_v = ExceptionUtilities.UnexpectedValue((object)o);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 94735, 94782);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_94912_94977(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.SimpleNameSyntax
                node, Microsoft.CodeAnalysis.CSharp.Symbol
                qv, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.BindRangeVariable(node, (Microsoft.CodeAnalysis.CSharp.Symbols.RangeVariableSymbol)qv, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 94912, 94977);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SymbolKind
                f_10306_95069_95080(Microsoft.CodeAnalysis.CSharp.Symbol
                this_param)
                {
                    var return_v = this_param.Kind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 95069, 95080);
                    return return_v;
                }


                System.Exception
                f_10306_95034_95081(Microsoft.CodeAnalysis.SymbolKind
                o)
                {
                    var return_v = ExceptionUtilities.UnexpectedValue((object)o);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 95034, 95081);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 84368, 95532);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 84368, 95532);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private static bool ReportSimpleProgramLocalReferencedOutsideOfTopLevelStatement(SimpleNameSyntax node, Symbol symbol, DiagnosticBag diagnostics)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterStaticMethod(10306, 95544, 96199);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 95714, 96159) || true) && (f_10306_95718_95741(symbol) is SynthesizedSimpleProgramEntryPointSymbol)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 95714, 96159);

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 95819, 96144) || true) && (!f_10306_95824_95946(f_10306_95856_95945(f_10306_95856_95928(f_10306_95856_95896(node, ascendOutOfTrivia: false)))))
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 95819, 96144);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 95988, 96091);

                        f_10306_95988_96090(diagnostics, ErrorCode.ERR_SimpleProgramLocalIsReferencedOutsideOfTopLevelStatement, node, node);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 96113, 96125);

                        return true;
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 95819, 96144);
                    }
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 95714, 96159);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 96175, 96188);

                return false;
                DynAbs.Tracing.TraceSender.TraceExitStaticMethod(10306, 95544, 96199);

                Microsoft.CodeAnalysis.CSharp.Symbol
                f_10306_95718_95741(Microsoft.CodeAnalysis.CSharp.Symbol
                this_param)
                {
                    var return_v = this_param.ContainingSymbol;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 95718, 95741);
                    return return_v;
                }


                System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.SyntaxNode>
                f_10306_95856_95896(Microsoft.CodeAnalysis.CSharp.Syntax.SimpleNameSyntax
                this_param, bool
                ascendOutOfTrivia)
                {
                    var return_v = this_param.Ancestors(ascendOutOfTrivia: ascendOutOfTrivia);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 95856, 95896);
                    return return_v;
                }


                System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.CSharp.Syntax.GlobalStatementSyntax>
                f_10306_95856_95928(System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.SyntaxNode>
                source)
                {
                    var return_v = source.OfType<Microsoft.CodeAnalysis.CSharp.Syntax.GlobalStatementSyntax>();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 95856, 95928);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Syntax.GlobalStatementSyntax
                f_10306_95856_95945(System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.CSharp.Syntax.GlobalStatementSyntax>
                source)
                {
                    var return_v = source.FirstOrDefault<Microsoft.CodeAnalysis.CSharp.Syntax.GlobalStatementSyntax>();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 95856, 95945);
                    return return_v;
                }


                bool
                f_10306_95824_95946(Microsoft.CodeAnalysis.CSharp.Syntax.GlobalStatementSyntax
                syntax)
                {
                    var return_v = SyntaxFacts.IsTopLevelStatement(syntax);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 95824, 95946);
                    return return_v;
                }


                int
                f_10306_95988_96090(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, Microsoft.CodeAnalysis.CSharp.Syntax.SimpleNameSyntax
                syntax, params object[]
                args)
                {
                    Error(diagnostics, code, (Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode)syntax, args);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 95988, 96090);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 95544, 96199);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 95544, 96199);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        protected virtual BoundExpression BindRangeVariable(SimpleNameSyntax node, RangeVariableSymbol qv, DiagnosticBag diagnostics)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10306, 96211, 96425);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 96361, 96414);

                return f_10306_96368_96413(f_10306_96368_96372(), node, qv, diagnostics);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10306, 96211, 96425);

                Microsoft.CodeAnalysis.CSharp.Binder?
                f_10306_96368_96372()
                {
                    var return_v = Next;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 96368, 96372);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_96368_96413(Microsoft.CodeAnalysis.CSharp.Binder?
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.SimpleNameSyntax
                node, Microsoft.CodeAnalysis.CSharp.Symbols.RangeVariableSymbol
                qv, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.BindRangeVariable(node, qv, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 96368, 96413);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 96211, 96425);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 96211, 96425);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private BoundExpression SynthesizeReceiver(SyntaxNode node, Symbol member, DiagnosticBag diagnostics)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10306, 96437, 99604);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 97001, 97100) || true) && (!f_10306_97006_97039(member))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 97001, 97100);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 97073, 97085);

                    return null;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 97001, 97100);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 97116, 97154);

                var
                currentType = f_10306_97134_97153(this)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 97168, 97218);

                HashSet<DiagnosticInfo>
                useSiteDiagnostics = null
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 97232, 97286);

                NamedTypeSymbol
                declaringType = f_10306_97264_97285(member)
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 97300, 99593) || true) && (f_10306_97304_97433(currentType, declaringType, TypeCompareKind.ConsiderEverything, useSiteDiagnostics: ref useSiteDiagnostics) || (DynAbs.Tracing.TraceSender.Expression_False(10306, 97304, 97586) || (f_10306_97455_97478(currentType) && (DynAbs.Tracing.TraceSender.Expression_True(10306, 97455, 97585) && (f_10306_97483_97511(declaringType) || (DynAbs.Tracing.TraceSender.Expression_False(10306, 97483, 97584) || currentType.AllInterfacesNoUseSiteDiagnostics.Contains(declaringType)))))))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 97300, 99593);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 97620, 97643);

                    bool
                    hasErrors = false
                    ;

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 97661, 99358) || true) && (f_10306_97665_97688() != node)
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 97661, 99358);

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 97738, 99239) || true) && (f_10306_97742_97760() && (DynAbs.Tracing.TraceSender.Expression_True(10306, 97742, 97790) && f_10306_97764_97790_M(!currentType.IsScriptClass)))
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 97738, 99239);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 97909, 97979);

                            f_10306_97909_97978(diagnostics, ErrorCode.ERR_FieldInitRefNonstatic, node, member);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 98005, 98022);

                            hasErrors = true;
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 97738, 99239);
                        }

                        else
                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 97738, 99239);

                            if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 98072, 99239) || true) && (f_10306_98076_98100() || (DynAbs.Tracing.TraceSender.Expression_False(10306, 98076, 98123) || f_10306_98104_98123()))
                            )

                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 98072, 99239);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 98271, 98334);

                                f_10306_98271_98333(diagnostics, ErrorCode.ERR_ObjectRequired, node, member);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 98360, 98377);

                                hasErrors = true;
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 98072, 99239);
                            }

                            else

                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 98072, 99239);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 98598, 98640);

                                var
                                containingMember = f_10306_98621_98639(this)
                                ;
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 98666, 98834);

                                bool
                                locationIsInstanceMember = f_10306_98698_98724_M(!containingMember.IsStatic) && (DynAbs.Tracing.TraceSender.Expression_True(10306, 98698, 98833) && (f_10306_98758_98779(containingMember) != SymbolKind.NamedType || (DynAbs.Tracing.TraceSender.Expression_False(10306, 98758, 98832) || f_10306_98807_98832(currentType))))
                                ;

                                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 98862, 99216) || true) && (!locationIsInstanceMember)
                                )

                                {
                                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 98862, 99216);
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 99079, 99142);

                                    f_10306_99079_99141(diagnostics, ErrorCode.ERR_ObjectRequired, node, member);
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 99172, 99189);

                                    hasErrors = true;
                                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 98862, 99216);
                                }
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 98072, 99239);
                            }
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 97738, 99239);
                        }
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 99263, 99339);

                        hasErrors = hasErrors || (DynAbs.Tracing.TraceSender.Expression_False(10306, 99275, 99338) || f_10306_99288_99338(this, node, diagnostics));
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 97661, 99358);
                    }
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 99378, 99457);

                    return f_10306_99385_99456(this, node, currentType, hasErrors, wasCompilerGenerated: true);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 97300, 99593);
                }

                else

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 97300, 99593);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 99523, 99578);

                    return f_10306_99530_99577(this, node, declaringType);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 97300, 99593);
                }
                DynAbs.Tracing.TraceSender.TraceExitMethod(10306, 96437, 99604);

                bool
                f_10306_97006_97039(Microsoft.CodeAnalysis.CSharp.Symbol
                symbol)
                {
                    var return_v = symbol.RequiresInstanceReceiver();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 97006, 97039);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol?
                f_10306_97134_97153(Microsoft.CodeAnalysis.CSharp.Binder
                this_param)
                {
                    var return_v = this_param.ContainingType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 97134, 97153);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                f_10306_97264_97285(Microsoft.CodeAnalysis.CSharp.Symbol
                this_param)
                {
                    var return_v = this_param.ContainingType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 97264, 97285);
                    return return_v;
                }


                bool
                f_10306_97304_97433(Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol?
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                type, Microsoft.CodeAnalysis.TypeCompareKind
                comparison, ref System.Collections.Generic.HashSet<Microsoft.CodeAnalysis.DiagnosticInfo>?
                useSiteDiagnostics)
                {
                    var return_v = this_param.IsEqualToOrDerivedFrom((Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol)type, comparison, useSiteDiagnostics: ref useSiteDiagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 97304, 97433);
                    return return_v;
                }


                bool
                f_10306_97455_97478(Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                this_param)
                {
                    var return_v = this_param.IsInterface;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 97455, 97478);
                    return return_v;
                }


                bool
                f_10306_97483_97511(Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                type)
                {
                    var return_v = type.IsObjectType();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 97483, 97511);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SyntaxNode?
                f_10306_97665_97688()
                {
                    var return_v = EnclosingNameofArgument;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 97665, 97688);
                    return return_v;
                }


                bool
                f_10306_97742_97760()
                {
                    var return_v = InFieldInitializer;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 97742, 97760);
                    return return_v;
                }


                bool
                f_10306_97764_97790_M(bool
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 97764, 97790);
                    return return_v;
                }


                int
                f_10306_97909_97978(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, Microsoft.CodeAnalysis.SyntaxNode
                syntax, params object[]
                args)
                {
                    Error(diagnostics, code, (Microsoft.CodeAnalysis.SyntaxNodeOrToken)syntax, args);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 97909, 97978);
                    return 0;
                }


                bool
                f_10306_98076_98100()
                {
                    var return_v = InConstructorInitializer;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 98076, 98100);
                    return return_v;
                }


                bool
                f_10306_98104_98123()
                {
                    var return_v = InAttributeArgument;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 98104, 98123);
                    return return_v;
                }


                int
                f_10306_98271_98333(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, Microsoft.CodeAnalysis.SyntaxNode
                syntax, params object[]
                args)
                {
                    Error(diagnostics, code, (Microsoft.CodeAnalysis.SyntaxNodeOrToken)syntax, args);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 98271, 98333);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.Symbol
                f_10306_98621_98639(Microsoft.CodeAnalysis.CSharp.Binder
                this_param)
                {
                    var return_v = this_param.ContainingMember();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 98621, 98639);
                    return return_v;
                }


                bool
                f_10306_98698_98724_M(bool
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 98698, 98724);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SymbolKind
                f_10306_98758_98779(Microsoft.CodeAnalysis.CSharp.Symbol
                this_param)
                {
                    var return_v = this_param.Kind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 98758, 98779);
                    return return_v;
                }


                bool
                f_10306_98807_98832(Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                this_param)
                {
                    var return_v = this_param.IsScriptClass;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 98807, 98832);
                    return return_v;
                }


                int
                f_10306_99079_99141(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, Microsoft.CodeAnalysis.SyntaxNode
                syntax, params object[]
                args)
                {
                    Error(diagnostics, code, (Microsoft.CodeAnalysis.SyntaxNodeOrToken)syntax, args);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 99079, 99141);
                    return 0;
                }


                bool
                f_10306_99288_99338(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.SyntaxNode
                thisOrBaseToken, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.IsRefOrOutThisParameterCaptured((Microsoft.CodeAnalysis.SyntaxNodeOrToken)thisOrBaseToken, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 99288, 99338);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundThisReference
                f_10306_99385_99456(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.SyntaxNode
                node, Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                thisTypeOpt, bool
                hasErrors, bool
                wasCompilerGenerated)
                {
                    var return_v = this_param.ThisReference(node, thisTypeOpt, hasErrors, wasCompilerGenerated: wasCompilerGenerated);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 99385, 99456);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_99530_99577(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                memberDeclaringType)
                {
                    var return_v = this_param.TryBindInteractiveReceiver(syntax, memberDeclaringType);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 99530, 99577);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 96437, 99604);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 96437, 99604);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        internal Symbol ContainingMember()
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10306, 99616, 99751);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 99675, 99740);

                return f_10306_99682_99739(f_10306_99682_99711(this));
                DynAbs.Tracing.TraceSender.TraceExitMethod(10306, 99616, 99751);

                Microsoft.CodeAnalysis.CSharp.Symbol?
                f_10306_99682_99711(Microsoft.CodeAnalysis.CSharp.Binder
                this_param)
                {
                    var return_v = this_param.ContainingMemberOrLambda;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 99682, 99711);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbol?
                f_10306_99682_99739(Microsoft.CodeAnalysis.CSharp.Symbol?
                containingMember)
                {
                    var return_v = containingMember.ContainingNonLambdaMember();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 99682, 99739);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 99616, 99751);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 99616, 99751);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private BoundExpression TryBindInteractiveReceiver(SyntaxNode syntax, NamedTypeSymbol memberDeclaringType)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10306, 99763, 101571);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 99894, 100899) || true) && (f_10306_99898_99926(f_10306_99898_99917(this)) == TypeKind.Submission
                && (DynAbs.Tracing.TraceSender.Expression_True(10306, 99898, 100040) && f_10306_100021_100040()))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 99894, 100899);

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 100074, 100884) || true) && (f_10306_100078_100106(memberDeclaringType) == TypeKind.Submission)
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 100074, 100884);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 100171, 100276);

                        return new BoundPreviousSubmissionReference(syntax, memberDeclaringType) { WasCompilerGenerated = DynAbs.Tracing.TraceSender.TraceInitializationWrapper(() => true, 10306, 100178, 100275) };
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 100074, 100884);
                    }

                    else

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 100074, 100884);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 100358, 100424);

                        TypeSymbol
                        hostObjectType = f_10306_100386_100423(f_10306_100386_100397())
                        ;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 100446, 100496);

                        HashSet<DiagnosticInfo>
                        useSiteDiagnostics = null
                        ;

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 100518, 100865) || true) && ((object)hostObjectType != null && (DynAbs.Tracing.TraceSender.Expression_True(10306, 100522, 100694) && f_10306_100556_100694(hostObjectType, memberDeclaringType, TypeCompareKind.ConsiderEverything, useSiteDiagnostics: ref useSiteDiagnostics)))
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 100518, 100865);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 100744, 100842);

                            return new BoundHostObjectMemberReference(syntax, hostObjectType) { WasCompilerGenerated = DynAbs.Tracing.TraceSender.TraceInitializationWrapper(() => true, 10306, 100751, 100841) };
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 100518, 100865);
                        }
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 100074, 100884);
                    }
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 99894, 100899);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 100915, 100927);

                return null;

                bool isInstanceContext()
                {
                    try
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterMethod(10306, 100943, 101560);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 101000, 101053);

                        var
                        containingMember = f_10306_101023_101052(this)
                        ;
                        {
                            try
                            {
                                do

                                {
                                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 101071, 101515);

                                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 101114, 101229) || true) && (f_10306_101118_101143(containingMember))
                                    )

                                    {
                                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 101114, 101229);
                                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 101193, 101206);

                                        return false;
                                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 101114, 101229);
                                    }

                                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 101251, 101379) || true) && (f_10306_101255_101276(containingMember) == SymbolKind.NamedType)
                                    )

                                    {
                                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 101251, 101379);
                                        DynAbs.Tracing.TraceSender.TraceBreak(10306, 101350, 101356);

                                        break;
                                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 101251, 101379);
                                    }
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 101401, 101454);

                                    containingMember = f_10306_101420_101453(containingMember);
                                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 101071, 101515);
                                }
                                while ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 101071, 101515) || true) && ((object)containingMember != null)
                                );
                            }
                            catch (System.Exception)
                            {
                                DynAbs.Tracing.TraceSender.TraceExitLoopByException(10306, 101071, 101515);
                                throw;
                            }
                            finally
                            {
                                DynAbs.Tracing.TraceSender.TraceExitLoop(10306, 101071, 101515);
                            }
                        }
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 101533, 101545);

                        return true;
                        DynAbs.Tracing.TraceSender.TraceExitMethod(10306, 100943, 101560);

                        Microsoft.CodeAnalysis.CSharp.Symbol?
                        f_10306_101023_101052(Microsoft.CodeAnalysis.CSharp.Binder
                        this_param)
                        {
                            var return_v = this_param.ContainingMemberOrLambda;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 101023, 101052);
                            return return_v;
                        }


                        bool
                        f_10306_101118_101143(Microsoft.CodeAnalysis.CSharp.Symbol?
                        this_param)
                        {
                            var return_v = this_param.IsStatic;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 101118, 101143);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.SymbolKind
                        f_10306_101255_101276(Microsoft.CodeAnalysis.CSharp.Symbol
                        this_param)
                        {
                            var return_v = this_param.Kind;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 101255, 101276);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.CSharp.Symbol
                        f_10306_101420_101453(Microsoft.CodeAnalysis.CSharp.Symbol
                        this_param)
                        {
                            var return_v = this_param.ContainingSymbol;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 101420, 101453);
                            return return_v;
                        }

                    }
                    catch
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 100943, 101560);
                        throw;
                    }
                    finally
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 100943, 101560);
                    }
                    throw new System.Exception("Slicer error: unreachable code");
                }
                DynAbs.Tracing.TraceSender.TraceExitMethod(10306, 99763, 101571);

                Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol?
                f_10306_99898_99917(Microsoft.CodeAnalysis.CSharp.Binder
                this_param)
                {
                    var return_v = this_param.ContainingType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 99898, 99917);
                    return return_v;
                }


                Microsoft.CodeAnalysis.TypeKind
                f_10306_99898_99926(Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol?
                this_param)
                {
                    var return_v = this_param.TypeKind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 99898, 99926);
                    return return_v;
                }


                bool
                f_10306_100021_100040()
                {
                    var return_v = isInstanceContext();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 100021, 100040);
                    return return_v;
                }


                Microsoft.CodeAnalysis.TypeKind
                f_10306_100078_100106(Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                this_param)
                {
                    var return_v = this_param.TypeKind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 100078, 100106);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                f_10306_100386_100397()
                {
                    var return_v = Compilation;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 100386, 100397);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?
                f_10306_100386_100423(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param)
                {
                    var return_v = this_param.GetHostObjectTypeSymbol();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 100386, 100423);
                    return return_v;
                }


                bool
                f_10306_100556_100694(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                type, Microsoft.CodeAnalysis.TypeCompareKind
                comparison, ref System.Collections.Generic.HashSet<Microsoft.CodeAnalysis.DiagnosticInfo>?
                useSiteDiagnostics)
                {
                    var return_v = this_param.IsEqualToOrDerivedFrom((Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol)type, comparison, useSiteDiagnostics: ref useSiteDiagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 100556, 100694);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 99763, 101571);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 99763, 101571);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public BoundExpression BindNamespaceOrTypeOrExpression(ExpressionSyntax node, DiagnosticBag diagnostics)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10306, 101583, 102610);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 101712, 101856) || true) && (f_10306_101716_101727(node) == SyntaxKind.PredefinedType)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 101712, 101856);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 101790, 101841);

                    return f_10306_101797_101840(this, node, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 101712, 101856);
                }

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 101872, 102479) || true) && (f_10306_101876_101907(f_10306_101895_101906(node)))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 101872, 102479);

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 101941, 102304) || true) && (f_10306_101945_101988(node))
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 101941, 102304);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 102030, 102102);

                        return f_10306_102037_102101(this, node, diagnostics);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 101941, 102304);
                    }

                    else
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 101941, 102304);

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 102144, 102304) || true) && (f_10306_102148_102192(node))
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 102144, 102304);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 102234, 102285);

                            return f_10306_102241_102284(this, node, diagnostics);
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 102144, 102304);
                        }
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 101941, 102304);
                    }
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 101872, 102479);
                }

                else
                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 101872, 102479);

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 102338, 102479) || true) && (f_10306_102342_102379(f_10306_102367_102378(node)))
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 102338, 102479);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 102413, 102464);

                        return f_10306_102420_102463(this, node, diagnostics);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 102338, 102479);
                    }
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 101872, 102479);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 102495, 102599);

                return f_10306_102502_102598(this, node, diagnostics, f_10306_102541_102568(node), f_10306_102570_102597(node));
                DynAbs.Tracing.TraceSender.TraceExitMethod(10306, 101583, 102610);

                Microsoft.CodeAnalysis.CSharp.SyntaxKind
                f_10306_101716_101727(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                this_param)
                {
                    var return_v = this_param.Kind();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 101716, 101727);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_101797_101840(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                node, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.BindNamespaceOrType(node, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 101797, 101840);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.SyntaxKind
                f_10306_101895_101906(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                this_param)
                {
                    var return_v = this_param.Kind();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 101895, 101906);
                    return return_v;
                }


                bool
                f_10306_101876_101907(Microsoft.CodeAnalysis.CSharp.SyntaxKind
                kind)
                {
                    var return_v = SyntaxFacts.IsName(kind);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 101876, 101907);
                    return return_v;
                }


                bool
                f_10306_101945_101988(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                node)
                {
                    var return_v = SyntaxFacts.IsNamespaceAliasQualifier(node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 101945, 101988);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_102037_102101(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                node, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.BindNamespaceAlias((Microsoft.CodeAnalysis.CSharp.Syntax.IdentifierNameSyntax)node, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 102037, 102101);
                    return return_v;
                }


                bool
                f_10306_102148_102192(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                node)
                {
                    var return_v = SyntaxFacts.IsInNamespaceOrTypeContext(node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 102148, 102192);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_102241_102284(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                node, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.BindNamespaceOrType(node, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 102241, 102284);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.SyntaxKind
                f_10306_102367_102378(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                this_param)
                {
                    var return_v = this_param.Kind();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 102367, 102378);
                    return return_v;
                }


                bool
                f_10306_102342_102379(Microsoft.CodeAnalysis.CSharp.SyntaxKind
                kind)
                {
                    var return_v = SyntaxFacts.IsTypeSyntax(kind);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 102342, 102379);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_102420_102463(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                node, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.BindNamespaceOrType(node, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 102420, 102463);
                    return return_v;
                }


                bool
                f_10306_102541_102568(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                node)
                {
                    var return_v = SyntaxFacts.IsInvoked(node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 102541, 102568);
                    return return_v;
                }


                bool
                f_10306_102570_102597(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                node)
                {
                    var return_v = SyntaxFacts.IsIndexed(node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 102570, 102597);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_102502_102598(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                node, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, bool
                invoked, bool
                indexed)
                {
                    var return_v = this_param.BindExpression(node, diagnostics, invoked, indexed);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 102502, 102598);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 101583, 102610);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 101583, 102610);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public BoundExpression BindLabel(ExpressionSyntax node, DiagnosticBag diagnostics)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10306, 102622, 103871);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 102729, 102769);

                var
                name = node as IdentifierNameSyntax
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 102783, 102959) || true) && (name == null)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 102783, 102959);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 102833, 102872);

                    f_10306_102833_102871(f_10306_102846_102870(node));
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 102890, 102944);

                    return f_10306_102897_102943(this, node, LookupResultKind.NotLabel);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 102783, 102959);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 102975, 103015);

                var
                result = f_10306_102988_103014()
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 103029, 103074);

                string
                labelName = name.Identifier.ValueText
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 103088, 103138);

                HashSet<DiagnosticInfo>
                useSiteDiagnostics = null
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 103152, 103291);

                f_10306_103152_103290(this, result, labelName, arity: 0, useSiteDiagnostics: ref useSiteDiagnostics, options: LookupOptions.LabelsOnly);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 103305, 103347);

                f_10306_103305_103346(diagnostics, node, useSiteDiagnostics);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 103363, 103592) || true) && (f_10306_103367_103388_M(!result.IsMultiViable))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 103363, 103592);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 103422, 103487);

                    f_10306_103422_103486(diagnostics, ErrorCode.ERR_LabelNotFound, node, labelName);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 103505, 103519);

                    f_10306_103505_103518(result);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 103537, 103577);

                    return f_10306_103544_103576(this, node, f_10306_103564_103575(result));
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 103363, 103592);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 103608, 103713);

                f_10306_103608_103712(f_10306_103621_103642(result), "If this happens, we need to deal with multiple label definitions.");
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 103727, 103776);

                var
                symbol = (LabelSymbol)f_10306_103753_103775(f_10306_103753_103767(result))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 103790, 103804);

                f_10306_103790_103803(result);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 103818, 103860);

                return f_10306_103825_103859(node, symbol, null);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10306, 102622, 103871);

                bool
                f_10306_102846_102870(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                this_param)
                {
                    var return_v = this_param.ContainsDiagnostics;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 102846, 102870);
                    return return_v;
                }


                int
                f_10306_102833_102871(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 102833, 102871);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.BoundBadExpression
                f_10306_102897_102943(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                syntax, Microsoft.CodeAnalysis.CSharp.LookupResultKind
                lookupResultKind)
                {
                    var return_v = this_param.BadExpression((Microsoft.CodeAnalysis.SyntaxNode)syntax, lookupResultKind);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 102897, 102943);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.LookupResult
                f_10306_102988_103014()
                {
                    var return_v = LookupResult.GetInstance();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 102988, 103014);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Binder
                f_10306_103152_103290(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.LookupResult
                result, string
                name, int
                arity, ref System.Collections.Generic.HashSet<Microsoft.CodeAnalysis.DiagnosticInfo>?
                useSiteDiagnostics, Microsoft.CodeAnalysis.CSharp.LookupOptions
                options)
                {
                    var return_v = this_param.LookupSymbolsWithFallback(result, name, arity: arity, useSiteDiagnostics: ref useSiteDiagnostics, options: options);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 103152, 103290);
                    return return_v;
                }


                bool
                f_10306_103305_103346(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                node, System.Collections.Generic.HashSet<Microsoft.CodeAnalysis.DiagnosticInfo>
                useSiteDiagnostics)
                {
                    var return_v = diagnostics.Add((Microsoft.CodeAnalysis.SyntaxNode)node, useSiteDiagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 103305, 103346);
                    return return_v;
                }


                bool
                f_10306_103367_103388_M(bool
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 103367, 103388);
                    return return_v;
                }


                int
                f_10306_103422_103486(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                syntax, params object[]
                args)
                {
                    Error(diagnostics, code, (Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode)syntax, args);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 103422, 103486);
                    return 0;
                }


                int
                f_10306_103505_103518(Microsoft.CodeAnalysis.CSharp.LookupResult
                this_param)
                {
                    this_param.Free();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 103505, 103518);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.LookupResultKind
                f_10306_103564_103575(Microsoft.CodeAnalysis.CSharp.LookupResult
                this_param)
                {
                    var return_v = this_param.Kind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 103564, 103575);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundBadExpression
                f_10306_103544_103576(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                syntax, Microsoft.CodeAnalysis.CSharp.LookupResultKind
                lookupResultKind)
                {
                    var return_v = this_param.BadExpression((Microsoft.CodeAnalysis.SyntaxNode)syntax, lookupResultKind);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 103544, 103576);
                    return return_v;
                }


                bool
                f_10306_103621_103642(Microsoft.CodeAnalysis.CSharp.LookupResult
                this_param)
                {
                    var return_v = this_param.IsSingleViable;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 103621, 103642);
                    return return_v;
                }


                int
                f_10306_103608_103712(bool
                condition, string
                message)
                {
                    Debug.Assert(condition, message);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 103608, 103712);
                    return 0;
                }


                Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbol>
                f_10306_103753_103767(Microsoft.CodeAnalysis.CSharp.LookupResult
                this_param)
                {
                    var return_v = this_param.Symbols;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 103753, 103767);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbol
                f_10306_103753_103775(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbol>
                this_param)
                {
                    var return_v = this_param.First();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 103753, 103775);
                    return return_v;
                }


                int
                f_10306_103790_103803(Microsoft.CodeAnalysis.CSharp.LookupResult
                this_param)
                {
                    this_param.Free();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 103790, 103803);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.BoundLabel
                f_10306_103825_103859(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                syntax, Microsoft.CodeAnalysis.CSharp.Symbols.LabelSymbol
                label, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?
                type)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.BoundLabel((Microsoft.CodeAnalysis.SyntaxNode)syntax, label, type);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 103825, 103859);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 102622, 103871);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 102622, 103871);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public BoundExpression BindNamespaceOrType(ExpressionSyntax node, DiagnosticBag diagnostics)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10306, 103883, 104173);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 104000, 104083);

                var
                symbol = f_10306_104013_104082(this, node, diagnostics, null, false)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 104097, 104162);

                return f_10306_104104_104161(node, symbol.Symbol);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10306, 103883, 104173);

                Microsoft.CodeAnalysis.CSharp.Binder.NamespaceOrTypeOrAliasSymbolWithAnnotations
                f_10306_104013_104082(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                syntax, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Roslyn.Utilities.ConsList<Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol>
                basesBeingResolved, bool
                suppressUseSiteDiagnostics)
                {
                    var return_v = this_param.BindNamespaceOrTypeOrAliasSymbol(syntax, diagnostics, basesBeingResolved, suppressUseSiteDiagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 104013, 104082);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_104104_104161(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                node, Microsoft.CodeAnalysis.CSharp.Symbol
                symbol)
                {
                    var return_v = CreateBoundNamespaceOrTypeExpression(node, symbol);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 104104, 104161);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 103883, 104173);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 103883, 104173);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public BoundExpression BindNamespaceAlias(IdentifierNameSyntax node, DiagnosticBag diagnostics)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10306, 104185, 104450);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 104305, 104367);

                var
                symbol = f_10306_104318_104366(this, node, diagnostics)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 104381, 104439);

                return f_10306_104388_104438(node, symbol);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10306, 104185, 104450);

                Microsoft.CodeAnalysis.CSharp.Symbol
                f_10306_104318_104366(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.IdentifierNameSyntax
                node, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.BindNamespaceAliasSymbol(node, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 104318, 104366);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_104388_104438(Microsoft.CodeAnalysis.CSharp.Syntax.IdentifierNameSyntax
                node, Microsoft.CodeAnalysis.CSharp.Symbol
                symbol)
                {
                    var return_v = CreateBoundNamespaceOrTypeExpression((Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)node, symbol);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 104388, 104438);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 104185, 104450);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 104185, 104450);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private static BoundExpression CreateBoundNamespaceOrTypeExpression(ExpressionSyntax node, Symbol symbol)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterStaticMethod(10306, 104462, 105227);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 104592, 104626);

                var
                alias = symbol as AliasSymbol
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 104642, 104738) || true) && ((object)alias != null)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 104642, 104738);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 104701, 104723);

                    symbol = f_10306_104710_104722(alias);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 104642, 104738);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 104754, 104786);

                var
                type = symbol as TypeSymbol
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 104800, 104923) || true) && ((object)type != null)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 104800, 104923);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 104858, 104908);

                    return f_10306_104865_104907(node, alias, type);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 104800, 104923);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 104939, 104987);

                var
                namespaceSymbol = symbol as NamespaceSymbol
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 105001, 105151) || true) && ((object)namespaceSymbol != null)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 105001, 105151);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 105070, 105136);

                    return f_10306_105077_105135(node, namespaceSymbol, alias);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 105001, 105151);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 105167, 105216);

                throw f_10306_105173_105215(symbol);
                DynAbs.Tracing.TraceSender.TraceExitStaticMethod(10306, 104462, 105227);

                Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceOrTypeSymbol
                f_10306_104710_104722(Microsoft.CodeAnalysis.CSharp.Symbols.AliasSymbol
                this_param)
                {
                    var return_v = this_param.Target;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 104710, 104722);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundTypeExpression
                f_10306_104865_104907(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                syntax, Microsoft.CodeAnalysis.CSharp.Symbols.AliasSymbol?
                aliasOpt, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                type)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.BoundTypeExpression((Microsoft.CodeAnalysis.SyntaxNode)syntax, aliasOpt, type);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 104865, 104907);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundNamespaceExpression
                f_10306_105077_105135(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                syntax, Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceSymbol
                namespaceSymbol, Microsoft.CodeAnalysis.CSharp.Symbols.AliasSymbol?
                aliasOpt)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.BoundNamespaceExpression((Microsoft.CodeAnalysis.SyntaxNode)syntax, namespaceSymbol, aliasOpt);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 105077, 105135);
                    return return_v;
                }


                System.Exception
                f_10306_105173_105215(Microsoft.CodeAnalysis.CSharp.Symbol
                o)
                {
                    var return_v = ExceptionUtilities.UnexpectedValue((object)o);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 105173, 105215);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 104462, 105227);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 104462, 105227);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private BoundThisReference BindThis(ThisExpressionSyntax node, DiagnosticBag diagnostics)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10306, 105239, 105985);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 105353, 105380);

                f_10306_105353_105379(node != null);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 105394, 105416);

                bool
                hasErrors = true
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 105432, 105453);

                bool
                inStaticContext
                = default(bool);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 105467, 105899) || true) && (!f_10306_105472_105535(this, isExplicit: true, inStaticContext: out inStaticContext))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 105467, 105899);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 105641, 105749);

                    f_10306_105641_105748(diagnostics, (DynAbs.Tracing.TraceSender.Conditional_F1(10306, 105660, 105675) || ((inStaticContext && DynAbs.Tracing.TraceSender.Conditional_F2(10306, 105678, 105708)) || DynAbs.Tracing.TraceSender.Conditional_F3(10306, 105711, 105741))) ? ErrorCode.ERR_ThisInStaticMeth : ErrorCode.ERR_ThisInBadContext, node);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 105467, 105899);
                }

                else

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 105467, 105899);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 105815, 105884);

                    hasErrors = f_10306_105827_105883(this, f_10306_105859_105869(node), diagnostics);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 105467, 105899);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 105915, 105974);

                return f_10306_105922_105973(this, node, f_10306_105942_105961(this), hasErrors);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10306, 105239, 105985);

                int
                f_10306_105353_105379(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 105353, 105379);
                    return 0;
                }


                bool
                f_10306_105472_105535(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, bool
                isExplicit, out bool
                inStaticContext)
                {
                    var return_v = this_param.HasThis(isExplicit: isExplicit, out inStaticContext);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 105472, 105535);
                    return return_v;
                }


                int
                f_10306_105641_105748(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, Microsoft.CodeAnalysis.CSharp.Syntax.ThisExpressionSyntax
                syntax)
                {
                    Error(diagnostics, code, (Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode)syntax);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 105641, 105748);
                    return 0;
                }


                Microsoft.CodeAnalysis.SyntaxToken
                f_10306_105859_105869(Microsoft.CodeAnalysis.CSharp.Syntax.ThisExpressionSyntax
                this_param)
                {
                    var return_v = this_param.Token;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 105859, 105869);
                    return return_v;
                }


                bool
                f_10306_105827_105883(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.SyntaxToken
                thisOrBaseToken, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.IsRefOrOutThisParameterCaptured((Microsoft.CodeAnalysis.SyntaxNodeOrToken)thisOrBaseToken, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 105827, 105883);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol?
                f_10306_105942_105961(Microsoft.CodeAnalysis.CSharp.Binder
                this_param)
                {
                    var return_v = this_param.ContainingType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 105942, 105961);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundThisReference
                f_10306_105922_105973(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.ThisExpressionSyntax
                node, Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol?
                thisTypeOpt, bool
                hasErrors)
                {
                    var return_v = this_param.ThisReference((Microsoft.CodeAnalysis.SyntaxNode)node, thisTypeOpt, hasErrors);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 105922, 105973);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 105239, 105985);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 105239, 105985);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private BoundThisReference ThisReference(SyntaxNode node, NamedTypeSymbol thisTypeOpt, bool hasErrors = false, bool wasCompilerGenerated = false)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10306, 105997, 106307);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 106167, 106296);

                return new BoundThisReference(node, thisTypeOpt ?? (DynAbs.Tracing.TraceSender.Expression_Null<Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol>(10306, 106203, 106235) ?? f_10306_106218_106235(this)), hasErrors) { WasCompilerGenerated = DynAbs.Tracing.TraceSender.TraceInitializationWrapper(() => wasCompilerGenerated, 10306, 106174, 106295) };
                DynAbs.Tracing.TraceSender.TraceExitMethod(10306, 105997, 106307);

                Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                f_10306_106218_106235(Microsoft.CodeAnalysis.CSharp.Binder
                this_param)
                {
                    var return_v = this_param.CreateErrorType();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 106218, 106235);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 105997, 106307);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 105997, 106307);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private bool IsRefOrOutThisParameterCaptured(SyntaxNodeOrToken thisOrBaseToken, DiagnosticBag diagnostics)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10306, 106319, 107004);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 106450, 106531);

                ParameterSymbol
                thisSymbol = f_10306_106479_106530(f_10306_106479_106508(this))
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 106683, 106964) || true) && ((object)thisSymbol != null && (DynAbs.Tracing.TraceSender.Expression_True(10306, 106687, 106772) && f_10306_106717_106744(thisSymbol) != f_10306_106748_106772()) && (DynAbs.Tracing.TraceSender.Expression_True(10306, 106687, 106810) && f_10306_106776_106794(thisSymbol) != RefKind.None))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 106683, 106964);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 106844, 106919);

                    f_10306_106844_106918(diagnostics, ErrorCode.ERR_ThisStructNotInAnonMeth, thisOrBaseToken);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 106937, 106949);

                    return true;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 106683, 106964);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 106980, 106993);

                return false;
                DynAbs.Tracing.TraceSender.TraceExitMethod(10306, 106319, 107004);

                Microsoft.CodeAnalysis.CSharp.Symbol?
                f_10306_106479_106508(Microsoft.CodeAnalysis.CSharp.Binder
                this_param)
                {
                    var return_v = this_param.ContainingMemberOrLambda;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 106479, 106508);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol?
                f_10306_106479_106530(Microsoft.CodeAnalysis.CSharp.Symbol?
                containingMember)
                {
                    var return_v = containingMember.EnclosingThisSymbol();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 106479, 106530);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbol
                f_10306_106717_106744(Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol
                this_param)
                {
                    var return_v = this_param.ContainingSymbol;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 106717, 106744);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbol
                f_10306_106748_106772()
                {
                    var return_v = ContainingMemberOrLambda;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 106748, 106772);
                    return return_v;
                }


                Microsoft.CodeAnalysis.RefKind
                f_10306_106776_106794(Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol
                this_param)
                {
                    var return_v = this_param.RefKind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 106776, 106794);
                    return return_v;
                }


                int
                f_10306_106844_106918(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, Microsoft.CodeAnalysis.SyntaxNodeOrToken
                syntax)
                {
                    Error(diagnostics, code, syntax);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 106844, 106918);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 106319, 107004);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 106319, 107004);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private BoundBaseReference BindBase(BaseExpressionSyntax node, DiagnosticBag diagnostics)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10306, 107016, 108522);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 107130, 107153);

                bool
                hasErrors = false
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 107167, 107275);

                TypeSymbol
                baseType = (DynAbs.Tracing.TraceSender.Conditional_F1(10306, 107189, 107216) || ((f_10306_107189_107208(this) is null && DynAbs.Tracing.TraceSender.Conditional_F2(10306, 107219, 107223)) || DynAbs.Tracing.TraceSender.Conditional_F3(10306, 107226, 107274))) ? null : f_10306_107226_107274(f_10306_107226_107245(this))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 107289, 107310);

                bool
                inStaticContext
                = default(bool);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 107326, 108438) || true) && (!f_10306_107331_107394(this, isExplicit: true, inStaticContext: out inStaticContext))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 107326, 108438);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 107500, 107614);

                    f_10306_107500_107613(diagnostics, (DynAbs.Tracing.TraceSender.Conditional_F1(10306, 107519, 107534) || ((inStaticContext && DynAbs.Tracing.TraceSender.Conditional_F2(10306, 107537, 107567)) || DynAbs.Tracing.TraceSender.Conditional_F3(10306, 107570, 107600))) ? ErrorCode.ERR_BaseInStaticMeth : ErrorCode.ERR_BaseInBadContext, f_10306_107602_107612(node));
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 107632, 107649);

                    hasErrors = true;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 107326, 108438);
                }

                else
                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 107326, 108438);

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 107683, 108438) || true) && ((object)baseType == null)
                    ) // e.g. in System.Object

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 107683, 108438);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 107770, 107822);

                        f_10306_107770_107821(diagnostics, ErrorCode.ERR_NoBaseClass, node);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 107840, 107857);

                        hasErrors = true;
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 107683, 108438);
                    }

                    else
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 107683, 108438);

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 107891, 108438) || true) && (f_10306_107895_107914(this) is null || (DynAbs.Tracing.TraceSender.Expression_False(10306, 107895, 107945) || f_10306_107926_107937(node) is null) || (DynAbs.Tracing.TraceSender.Expression_False(10306, 107895, 108072) || (f_10306_107950_107968(f_10306_107950_107961(node)) != SyntaxKind.SimpleMemberAccessExpression && (DynAbs.Tracing.TraceSender.Expression_True(10306, 107950, 108071) && f_10306_108015_108033(f_10306_108015_108026(node)) != SyntaxKind.ElementAccessExpression))))
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 107891, 108438);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 108106, 108164);

                            f_10306_108106_108163(diagnostics, ErrorCode.ERR_BaseIllegal, f_10306_108152_108162(node));
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 108182, 108199);

                            hasErrors = true;
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 107891, 108438);
                        }

                        else
                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 107891, 108438);

                            if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 108233, 108438) || true) && (f_10306_108237_108293(this, f_10306_108269_108279(node), diagnostics))
                            )

                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 108233, 108438);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 108406, 108423);

                                hasErrors = true;
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 108233, 108438);
                            }
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 107891, 108438);
                        }
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 107683, 108438);
                    }
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 107326, 108438);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 108454, 108511);

                return f_10306_108461_108510(node, baseType, hasErrors);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10306, 107016, 108522);

                Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol?
                f_10306_107189_107208(Microsoft.CodeAnalysis.CSharp.Binder
                this_param)
                {
                    var return_v = this_param.ContainingType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 107189, 107208);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                f_10306_107226_107245(Microsoft.CodeAnalysis.CSharp.Binder
                this_param)
                {
                    var return_v = this_param.ContainingType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 107226, 107245);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                f_10306_107226_107274(Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                this_param)
                {
                    var return_v = this_param.BaseTypeNoUseSiteDiagnostics;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 107226, 107274);
                    return return_v;
                }


                bool
                f_10306_107331_107394(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, bool
                isExplicit, out bool
                inStaticContext)
                {
                    var return_v = this_param.HasThis(isExplicit: isExplicit, out inStaticContext);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 107331, 107394);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SyntaxToken
                f_10306_107602_107612(Microsoft.CodeAnalysis.CSharp.Syntax.BaseExpressionSyntax
                this_param)
                {
                    var return_v = this_param.Token;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 107602, 107612);
                    return return_v;
                }


                int
                f_10306_107500_107613(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, Microsoft.CodeAnalysis.SyntaxToken
                token)
                {
                    Error(diagnostics, code, token);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 107500, 107613);
                    return 0;
                }


                int
                f_10306_107770_107821(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, Microsoft.CodeAnalysis.CSharp.Syntax.BaseExpressionSyntax
                syntax)
                {
                    Error(diagnostics, code, (Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode)syntax);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 107770, 107821);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol?
                f_10306_107895_107914(Microsoft.CodeAnalysis.CSharp.Binder
                this_param)
                {
                    var return_v = this_param.ContainingType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 107895, 107914);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode?
                f_10306_107926_107937(Microsoft.CodeAnalysis.CSharp.Syntax.BaseExpressionSyntax
                this_param)
                {
                    var return_v = this_param.Parent;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 107926, 107937);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode
                f_10306_107950_107961(Microsoft.CodeAnalysis.CSharp.Syntax.BaseExpressionSyntax
                this_param)
                {
                    var return_v = this_param.Parent;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 107950, 107961);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.SyntaxKind
                f_10306_107950_107968(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode
                this_param)
                {
                    var return_v = this_param.Kind();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 107950, 107968);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode
                f_10306_108015_108026(Microsoft.CodeAnalysis.CSharp.Syntax.BaseExpressionSyntax
                this_param)
                {
                    var return_v = this_param.Parent;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 108015, 108026);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.SyntaxKind
                f_10306_108015_108033(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode
                this_param)
                {
                    var return_v = this_param.Kind();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 108015, 108033);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SyntaxToken
                f_10306_108152_108162(Microsoft.CodeAnalysis.CSharp.Syntax.BaseExpressionSyntax
                this_param)
                {
                    var return_v = this_param.Token;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 108152, 108162);
                    return return_v;
                }


                int
                f_10306_108106_108163(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, Microsoft.CodeAnalysis.SyntaxToken
                token)
                {
                    Error(diagnostics, code, token);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 108106, 108163);
                    return 0;
                }


                Microsoft.CodeAnalysis.SyntaxToken
                f_10306_108269_108279(Microsoft.CodeAnalysis.CSharp.Syntax.BaseExpressionSyntax
                this_param)
                {
                    var return_v = this_param.Token;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 108269, 108279);
                    return return_v;
                }


                bool
                f_10306_108237_108293(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.SyntaxToken
                thisOrBaseToken, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.IsRefOrOutThisParameterCaptured((Microsoft.CodeAnalysis.SyntaxNodeOrToken)thisOrBaseToken, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 108237, 108293);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundBaseReference
                f_10306_108461_108510(Microsoft.CodeAnalysis.CSharp.Syntax.BaseExpressionSyntax
                syntax, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?
                type, bool
                hasErrors)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.BoundBaseReference((Microsoft.CodeAnalysis.SyntaxNode)syntax, type, hasErrors);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 108461, 108510);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 107016, 108522);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 107016, 108522);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private BoundExpression BindCast(CastExpressionSyntax node, DiagnosticBag diagnostics)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10306, 108534, 109544);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 108645, 108738);

                BoundExpression
                operand = f_10306_108671_108737(this, f_10306_108686_108701(node), diagnostics, BindValueKind.RValue)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 108752, 108838);

                TypeWithAnnotations
                targetTypeWithAnnotations = f_10306_108800_108837(this, f_10306_108814_108823(node), diagnostics)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 108852, 108907);

                TypeSymbol
                targetType = targetTypeWithAnnotations.Type
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 108923, 109377) || true) && (f_10306_108927_108954(targetType) && (DynAbs.Tracing.TraceSender.Expression_True(10306, 108927, 108996) && f_10306_108975_108996_M(!operand.HasAnyErrors)) && (DynAbs.Tracing.TraceSender.Expression_True(10306, 108927, 109045) && (object)f_10306_109025_109037(operand) != null) && (DynAbs.Tracing.TraceSender.Expression_True(10306, 108927, 109096) && !f_10306_109067_109096(f_10306_109067_109079(operand))) && (DynAbs.Tracing.TraceSender.Expression_True(10306, 108927, 109226) && !f_10306_109118_109226(f_10306_109136_109174(targetType), f_10306_109176_109188(operand), TypeCompareKind.ConsiderEverything2)))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 108923, 109377);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 109260, 109362);

                    return f_10306_109267_109361(this, node, operand, targetTypeWithAnnotations, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 108923, 109377);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 109393, 109533);

                return f_10306_109400_109532(this, node, operand, targetTypeWithAnnotations, wasCompilerGenerated: f_10306_109477_109505(operand), diagnostics: diagnostics);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10306, 108534, 109544);

                Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                f_10306_108686_108701(Microsoft.CodeAnalysis.CSharp.Syntax.CastExpressionSyntax
                this_param)
                {
                    var return_v = this_param.Expression;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 108686, 108701);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_108671_108737(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                node, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.Binder.BindValueKind
                valueKind)
                {
                    var return_v = this_param.BindValue(node, diagnostics, valueKind);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 108671, 108737);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax
                f_10306_108814_108823(Microsoft.CodeAnalysis.CSharp.Syntax.CastExpressionSyntax
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 108814, 108823);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                f_10306_108800_108837(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax
                syntax, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.BindType((Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)syntax, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 108800, 108837);
                    return return_v;
                }


                bool
                f_10306_108927_108954(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                type)
                {
                    var return_v = type.IsNullableType();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 108927, 108954);
                    return return_v;
                }


                bool
                f_10306_108975_108996_M(bool
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 108975, 108996);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?
                f_10306_109025_109037(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 109025, 109037);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                f_10306_109067_109079(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 109067, 109079);
                    return return_v;
                }


                bool
                f_10306_109067_109096(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                type)
                {
                    var return_v = type.IsNullableType();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 109067, 109096);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                f_10306_109136_109174(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                type)
                {
                    var return_v = type.GetNullableUnderlyingType();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 109136, 109174);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                f_10306_109176_109188(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 109176, 109188);
                    return return_v;
                }


                bool
                f_10306_109118_109226(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                left, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                right, Microsoft.CodeAnalysis.TypeCompareKind
                comparison)
                {
                    var return_v = TypeSymbol.Equals(left, right, comparison);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 109118, 109226);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_109267_109361(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.CastExpressionSyntax
                node, Microsoft.CodeAnalysis.CSharp.BoundExpression
                operand, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                targetTypeWithAnnotations, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.BindExplicitNullableCastFromNonNullable((Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)node, operand, targetTypeWithAnnotations, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 109267, 109361);
                    return return_v;
                }


                bool
                f_10306_109477_109505(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.WasCompilerGenerated;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 109477, 109505);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_109400_109532(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.CastExpressionSyntax
                node, Microsoft.CodeAnalysis.CSharp.BoundExpression
                operand, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                targetTypeWithAnnotations, bool
                wasCompilerGenerated, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.BindCastCore((Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)node, operand, targetTypeWithAnnotations, wasCompilerGenerated: wasCompilerGenerated, diagnostics: diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 109400, 109532);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 108534, 109544);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 108534, 109544);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private BoundExpression BindFromEndIndexExpression(PrefixUnaryExpressionSyntax node, DiagnosticBag diagnostics)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10306, 109556, 111938);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 109692, 109755);

                f_10306_109692_109754(node.OperatorToken.IsKind(SyntaxKind.CaretToken));
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 109771, 109851);

                f_10306_109771_109850(node, MessageID.IDS_FeatureIndexOperator, diagnostics);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 109984, 110046);

                f_10306_109984_110045(this, SpecialType.System_Boolean, diagnostics, node);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 110062, 110152);

                BoundExpression
                boundOperand = f_10306_110093_110151(this, f_10306_110103_110115(node), diagnostics, BindValueKind.RValue)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 110166, 110247);

                TypeSymbol
                intType = f_10306_110187_110246(this, SpecialType.System_Int32, diagnostics, node)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 110261, 110348);

                TypeSymbol
                indexType = f_10306_110284_110347(this, WellKnownType.System_Index, diagnostics, node)
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 110364, 111119) || true) && ((object)f_10306_110376_110393(boundOperand) != null && (DynAbs.Tracing.TraceSender.Expression_True(10306, 110368, 110439) && f_10306_110405_110439(f_10306_110405_110422(boundOperand))))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 110364, 111119);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 110536, 110615);

                    f_10306_110536_110614(this, SpecialMember.System_Nullable_T__ctor, diagnostics, node);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 110633, 110729);

                    NamedTypeSymbol
                    nullableType = f_10306_110664_110728(this, SpecialType.System_Nullable_T, diagnostics, node)
                    ;

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 110749, 110978) || true) && (!f_10306_110754_110788(indexType))
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 110749, 110978);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 110830, 110959);

                        f_10306_110830_110958(diagnostics, ErrorCode.ERR_ValConstraintNotSatisfied, node, nullableType, nullableType.TypeParameters.Single(), indexType);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 110749, 110978);
                    }
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 110998, 111040);

                    intType = f_10306_111008_111039(nullableType, intType);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 111058, 111104);

                    indexType = f_10306_111070_111103(nullableType, indexType);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 110364, 111119);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 111135, 111185);

                HashSet<DiagnosticInfo>
                useSiteDiagnostics = null
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 111199, 111328);

                Conversion
                conversion = f_10306_111223_111327(f_10306_111223_111239(this), boundOperand, intType, ref useSiteDiagnostics)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 111342, 111384);

                f_10306_111342_111383(diagnostics, node, useSiteDiagnostics);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 111400, 111558) || true) && (f_10306_111404_111423_M(!conversion.IsValid))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 111400, 111558);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 111457, 111543);

                    f_10306_111457_111542(this, diagnostics, node, conversion, boundOperand, intType);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 111400, 111558);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 111574, 111673);

                BoundExpression
                boundConversion = f_10306_111608_111672(this, boundOperand, conversion, intType, diagnostics)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 111687, 111827);

                MethodSymbol
                symbolOpt = f_10306_111712_111810(f_10306_111735_111746(), WellKnownMember.System_Index__ctor, diagnostics, syntax: node) as MethodSymbol
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 111843, 111927);

                return f_10306_111850_111926(node, boundConversion, symbolOpt, indexType);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10306, 109556, 111938);

                int
                f_10306_109692_109754(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 109692, 109754);
                    return 0;
                }


                bool
                f_10306_109771_109850(Microsoft.CodeAnalysis.CSharp.Syntax.PrefixUnaryExpressionSyntax
                syntax, Microsoft.CodeAnalysis.CSharp.MessageID
                feature, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = CheckFeatureAvailability((Microsoft.CodeAnalysis.SyntaxNode)syntax, feature, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 109771, 109850);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                f_10306_109984_110045(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.SpecialType
                typeId, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.Syntax.PrefixUnaryExpressionSyntax
                node)
                {
                    var return_v = this_param.GetSpecialType(typeId, diagnostics, (Microsoft.CodeAnalysis.SyntaxNode)node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 109984, 110045);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                f_10306_110103_110115(Microsoft.CodeAnalysis.CSharp.Syntax.PrefixUnaryExpressionSyntax
                this_param)
                {
                    var return_v = this_param.Operand;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 110103, 110115);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_110093_110151(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                node, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.Binder.BindValueKind
                valueKind)
                {
                    var return_v = this_param.BindValue(node, diagnostics, valueKind);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 110093, 110151);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                f_10306_110187_110246(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.SpecialType
                typeId, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.Syntax.PrefixUnaryExpressionSyntax
                node)
                {
                    var return_v = this_param.GetSpecialType(typeId, diagnostics, (Microsoft.CodeAnalysis.SyntaxNode)node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 110187, 110246);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                f_10306_110284_110347(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.WellKnownType
                type, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.Syntax.PrefixUnaryExpressionSyntax
                node)
                {
                    var return_v = this_param.GetWellKnownType(type, diagnostics, (Microsoft.CodeAnalysis.SyntaxNode)node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 110284, 110347);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?
                f_10306_110376_110393(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 110376, 110393);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                f_10306_110405_110422(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 110405, 110422);
                    return return_v;
                }


                bool
                f_10306_110405_110439(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                type)
                {
                    var return_v = type.IsNullableType();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 110405, 110439);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbol
                f_10306_110536_110614(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.SpecialMember
                member, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.Syntax.PrefixUnaryExpressionSyntax
                syntax)
                {
                    var return_v = this_param.GetSpecialTypeMember(member, diagnostics, (Microsoft.CodeAnalysis.SyntaxNode)syntax);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 110536, 110614);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                f_10306_110664_110728(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.SpecialType
                typeId, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.Syntax.PrefixUnaryExpressionSyntax
                node)
                {
                    var return_v = this_param.GetSpecialType(typeId, diagnostics, (Microsoft.CodeAnalysis.SyntaxNode)node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 110664, 110728);
                    return return_v;
                }


                bool
                f_10306_110754_110788(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                typeArgument)
                {
                    var return_v = typeArgument.IsNonNullableValueType();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 110754, 110788);
                    return return_v;
                }


                int
                f_10306_110830_110958(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, Microsoft.CodeAnalysis.CSharp.Syntax.PrefixUnaryExpressionSyntax
                syntax, params object[]
                args)
                {
                    Error(diagnostics, code, (Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode)syntax, args);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 110830, 110958);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                f_10306_111008_111039(Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                this_param, params Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol[]
                typeArguments)
                {
                    var return_v = this_param.Construct(typeArguments);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 111008, 111039);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                f_10306_111070_111103(Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                this_param, params Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol[]
                typeArguments)
                {
                    var return_v = this_param.Construct(typeArguments);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 111070, 111103);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Conversions
                f_10306_111223_111239(Microsoft.CodeAnalysis.CSharp.Binder
                this_param)
                {
                    var return_v = this_param.Conversions;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 111223, 111239);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Conversion
                f_10306_111223_111327(Microsoft.CodeAnalysis.CSharp.Conversions
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                sourceExpression, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                destination, ref System.Collections.Generic.HashSet<Microsoft.CodeAnalysis.DiagnosticInfo>?
                useSiteDiagnostics)
                {
                    var return_v = this_param.ClassifyImplicitConversionFromExpression(sourceExpression, destination, ref useSiteDiagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 111223, 111327);
                    return return_v;
                }


                bool
                f_10306_111342_111383(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.Syntax.PrefixUnaryExpressionSyntax
                node, System.Collections.Generic.HashSet<Microsoft.CodeAnalysis.DiagnosticInfo>
                useSiteDiagnostics)
                {
                    var return_v = diagnostics.Add((Microsoft.CodeAnalysis.SyntaxNode)node, useSiteDiagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 111342, 111383);
                    return return_v;
                }


                bool
                f_10306_111404_111423_M(bool
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 111404, 111423);
                    return return_v;
                }


                int
                f_10306_111457_111542(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.Syntax.PrefixUnaryExpressionSyntax
                syntax, Microsoft.CodeAnalysis.CSharp.Conversion
                conversion, Microsoft.CodeAnalysis.CSharp.BoundExpression
                operand, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                targetType)
                {
                    this_param.GenerateImplicitConversionError(diagnostics, (Microsoft.CodeAnalysis.SyntaxNode)syntax, conversion, operand, targetType);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 111457, 111542);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_111608_111672(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                source, Microsoft.CodeAnalysis.CSharp.Conversion
                conversion, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                destination, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.CreateConversion(source, conversion, destination, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 111608, 111672);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                f_10306_111735_111746()
                {
                    var return_v = Compilation;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 111735, 111746);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbol
                f_10306_111712_111810(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                compilation, Microsoft.CodeAnalysis.WellKnownMember
                member, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.Syntax.PrefixUnaryExpressionSyntax
                syntax)
                {
                    var return_v = GetWellKnownTypeMember(compilation, member, diagnostics, syntax: (Microsoft.CodeAnalysis.SyntaxNode)syntax);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 111712, 111810);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundFromEndIndexExpression
                f_10306_111850_111926(Microsoft.CodeAnalysis.CSharp.Syntax.PrefixUnaryExpressionSyntax
                syntax, Microsoft.CodeAnalysis.CSharp.BoundExpression
                operand, Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol?
                methodOpt, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                type)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.BoundFromEndIndexExpression((Microsoft.CodeAnalysis.SyntaxNode)syntax, operand, methodOpt, type);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 111850, 111926);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 109556, 111938);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 109556, 111938);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private BoundExpression BindRangeExpression(RangeExpressionSyntax node, DiagnosticBag diagnostics)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10306, 111950, 115184);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 112073, 112153);

                f_10306_112073_112152(node, MessageID.IDS_FeatureRangeOperator, diagnostics);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 112169, 112256);

                TypeSymbol
                rangeType = f_10306_112192_112255(this, WellKnownType.System_Range, diagnostics, node)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 112270, 112300);

                MethodSymbol
                symbolOpt = null
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 112316, 113997) || true) && (!f_10306_112321_112344(rangeType))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 112316, 113997);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 112743, 112777);

                    WellKnownMember?
                    memberOpt = null
                    ;

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 112795, 113286) || true) && (f_10306_112799_112815(node) is null && (DynAbs.Tracing.TraceSender.Expression_True(10306, 112799, 112852) && f_10306_112827_112844(node) is null))
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 112795, 113286);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 112894, 112944);

                        memberOpt = WellKnownMember.System_Range__get_All;
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 112795, 113286);
                    }

                    else
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 112795, 113286);

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 112986, 113286) || true) && (f_10306_112990_113006(node) is null)
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 112986, 113286);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 113056, 113104);

                            memberOpt = WellKnownMember.System_Range__EndAt;
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 112986, 113286);
                        }

                        else
                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 112986, 113286);

                            if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 113146, 113286) || true) && (f_10306_113150_113167(node) is null)
                            )

                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 113146, 113286);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 113217, 113267);

                                memberOpt = WellKnownMember.System_Range__StartAt;
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 113146, 113286);
                            }
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 112986, 113286);
                        }
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 112795, 113286);
                    }

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 113306, 113654) || true) && (memberOpt is object)
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 113306, 113654);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 113371, 113635);

                        symbolOpt = (MethodSymbol)f_10306_113397_113634(f_10306_113446_113457(), f_10306_113484_113513(memberOpt), diagnostics, syntax: node, isOptional: true);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 113306, 113654);
                    }

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 113674, 113982) || true) && (symbolOpt is null)
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 113674, 113982);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 113737, 113963);

                        symbolOpt = (MethodSymbol)f_10306_113763_113962(f_10306_113812_113823(), WellKnownMember.System_Range__ctor, diagnostics, syntax: node);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 113674, 113982);
                    }
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 112316, 113997);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 114013, 114094);

                BoundExpression
                left = f_10306_114036_114093(this, f_10306_114063_114079(node), diagnostics)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 114108, 114191);

                BoundExpression
                right = f_10306_114132_114190(this, f_10306_114159_114176(node), diagnostics)
                ;

                if (
                (DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 114207, 115084) || true) && ((left != null && (DynAbs.Tracing.TraceSender.Expression_True(10306, 114257, 114307) && f_10306_114273_114299(f_10306_114273_114282(left)) == true)) || (DynAbs.Tracing.TraceSender.Expression_False(10306, 114256, 114384) || (right != null && (DynAbs.Tracing.TraceSender.Expression_True(10306, 114331, 114383) && f_10306_114348_114375(f_10306_114348_114358(right)) == true))))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 114207, 115084);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 114481, 114543);

                    f_10306_114481_114542(this, SpecialType.System_Boolean, diagnostics, node);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 114561, 114640);

                    f_10306_114561_114639(this, SpecialMember.System_Nullable_T__ctor, diagnostics, node);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 114658, 114754);

                    NamedTypeSymbol
                    nullableType = f_10306_114689_114753(this, SpecialType.System_Nullable_T, diagnostics, node)
                    ;

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 114774, 115003) || true) && (!f_10306_114779_114813(rangeType))
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 114774, 115003);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 114855, 114984);

                        f_10306_114855_114983(diagnostics, ErrorCode.ERR_ValConstraintNotSatisfied, node, nullableType, nullableType.TypeParameters.Single(), rangeType);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 114774, 115003);
                    }
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 115023, 115069);

                    rangeType = f_10306_115035_115068(nullableType, rangeType);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 114207, 115084);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 115100, 115173);

                return f_10306_115107_115172(node, left, right, symbolOpt, rangeType);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10306, 111950, 115184);

                bool
                f_10306_112073_112152(Microsoft.CodeAnalysis.CSharp.Syntax.RangeExpressionSyntax
                syntax, Microsoft.CodeAnalysis.CSharp.MessageID
                feature, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = CheckFeatureAvailability((Microsoft.CodeAnalysis.SyntaxNode)syntax, feature, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 112073, 112152);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                f_10306_112192_112255(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.WellKnownType
                type, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.Syntax.RangeExpressionSyntax
                node)
                {
                    var return_v = this_param.GetWellKnownType(type, diagnostics, (Microsoft.CodeAnalysis.SyntaxNode)node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 112192, 112255);
                    return return_v;
                }


                bool
                f_10306_112321_112344(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                type)
                {
                    var return_v = type.IsErrorType();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 112321, 112344);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax?
                f_10306_112799_112815(Microsoft.CodeAnalysis.CSharp.Syntax.RangeExpressionSyntax
                this_param)
                {
                    var return_v = this_param.LeftOperand;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 112799, 112815);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax?
                f_10306_112827_112844(Microsoft.CodeAnalysis.CSharp.Syntax.RangeExpressionSyntax
                this_param)
                {
                    var return_v = this_param.RightOperand;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 112827, 112844);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax?
                f_10306_112990_113006(Microsoft.CodeAnalysis.CSharp.Syntax.RangeExpressionSyntax
                this_param)
                {
                    var return_v = this_param.LeftOperand;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 112990, 113006);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax?
                f_10306_113150_113167(Microsoft.CodeAnalysis.CSharp.Syntax.RangeExpressionSyntax
                this_param)
                {
                    var return_v = this_param.RightOperand;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 113150, 113167);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                f_10306_113446_113457()
                {
                    var return_v = Compilation;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 113446, 113457);
                    return return_v;
                }


                Microsoft.CodeAnalysis.WellKnownMember
                f_10306_113484_113513(Microsoft.CodeAnalysis.WellKnownMember?
                this_param)
                {
                    var return_v = this_param.GetValueOrDefault();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 113484, 113513);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbol
                f_10306_113397_113634(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                compilation, Microsoft.CodeAnalysis.WellKnownMember
                member, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.Syntax.RangeExpressionSyntax
                syntax, bool
                isOptional)
                {
                    var return_v = GetWellKnownTypeMember(compilation, member, diagnostics, syntax: (Microsoft.CodeAnalysis.SyntaxNode)syntax, isOptional: isOptional);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 113397, 113634);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                f_10306_113812_113823()
                {
                    var return_v = Compilation;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 113812, 113823);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbol
                f_10306_113763_113962(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                compilation, Microsoft.CodeAnalysis.WellKnownMember
                member, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.Syntax.RangeExpressionSyntax
                syntax)
                {
                    var return_v = GetWellKnownTypeMember(compilation, member, diagnostics, syntax: (Microsoft.CodeAnalysis.SyntaxNode)syntax);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 113763, 113962);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax?
                f_10306_114063_114079(Microsoft.CodeAnalysis.CSharp.Syntax.RangeExpressionSyntax
                this_param)
                {
                    var return_v = this_param.LeftOperand;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 114063, 114079);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_114036_114093(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax?
                operand, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.BindRangeExpressionOperand(operand, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 114036, 114093);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax?
                f_10306_114159_114176(Microsoft.CodeAnalysis.CSharp.Syntax.RangeExpressionSyntax
                this_param)
                {
                    var return_v = this_param.RightOperand;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 114159, 114176);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_114132_114190(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax?
                operand, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.BindRangeExpressionOperand(operand, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 114132, 114190);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?
                f_10306_114273_114282(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 114273, 114282);
                    return return_v;
                }


                bool
                f_10306_114273_114299(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?
                type)
                {
                    var return_v = type.IsNullableType();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 114273, 114299);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?
                f_10306_114348_114358(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 114348, 114358);
                    return return_v;
                }


                bool
                f_10306_114348_114375(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?
                type)
                {
                    var return_v = type.IsNullableType();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 114348, 114375);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                f_10306_114481_114542(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.SpecialType
                typeId, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.Syntax.RangeExpressionSyntax
                node)
                {
                    var return_v = this_param.GetSpecialType(typeId, diagnostics, (Microsoft.CodeAnalysis.SyntaxNode)node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 114481, 114542);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbol
                f_10306_114561_114639(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.SpecialMember
                member, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.Syntax.RangeExpressionSyntax
                syntax)
                {
                    var return_v = this_param.GetSpecialTypeMember(member, diagnostics, (Microsoft.CodeAnalysis.SyntaxNode)syntax);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 114561, 114639);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                f_10306_114689_114753(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.SpecialType
                typeId, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.Syntax.RangeExpressionSyntax
                node)
                {
                    var return_v = this_param.GetSpecialType(typeId, diagnostics, (Microsoft.CodeAnalysis.SyntaxNode)node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 114689, 114753);
                    return return_v;
                }


                bool
                f_10306_114779_114813(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                typeArgument)
                {
                    var return_v = typeArgument.IsNonNullableValueType();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 114779, 114813);
                    return return_v;
                }


                int
                f_10306_114855_114983(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, Microsoft.CodeAnalysis.CSharp.Syntax.RangeExpressionSyntax
                syntax, params object[]
                args)
                {
                    Error(diagnostics, code, (Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode)syntax, args);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 114855, 114983);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                f_10306_115035_115068(Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                this_param, params Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol[]
                typeArguments)
                {
                    var return_v = this_param.Construct(typeArguments);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 115035, 115068);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundRangeExpression
                f_10306_115107_115172(Microsoft.CodeAnalysis.CSharp.Syntax.RangeExpressionSyntax
                syntax, Microsoft.CodeAnalysis.CSharp.BoundExpression?
                leftOperandOpt, Microsoft.CodeAnalysis.CSharp.BoundExpression?
                rightOperandOpt, Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol?
                methodOpt, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                type)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.BoundRangeExpression((Microsoft.CodeAnalysis.SyntaxNode)syntax, leftOperandOpt, rightOperandOpt, methodOpt, type);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 115107, 115172);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 111950, 115184);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 111950, 115184);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private BoundExpression BindRangeExpressionOperand(ExpressionSyntax operand, DiagnosticBag diagnostics)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10306, 115196, 116908);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 115324, 115404) || true) && (operand is null)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 115324, 115404);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 115377, 115389);

                    return null;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 115324, 115404);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 115420, 115505);

                BoundExpression
                boundOperand = f_10306_115451_115504(this, operand, diagnostics, BindValueKind.RValue)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 115519, 115609);

                TypeSymbol
                indexType = f_10306_115542_115608(this, WellKnownType.System_Index, diagnostics, operand)
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 115648, 116358) || true) && (!f_10306_115653_115683(f_10306_115653_115670(boundOperand), null) && (DynAbs.Tracing.TraceSender.Expression_True(10306, 115652, 115729) && f_10306_115687_115721(f_10306_115687_115704(boundOperand)) == true))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 115648, 116358);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 115826, 115908);

                    f_10306_115826_115907(this, SpecialMember.System_Nullable_T__ctor, diagnostics, operand);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 115926, 116025);

                    NamedTypeSymbol
                    nullableType = f_10306_115957_116024(this, SpecialType.System_Nullable_T, diagnostics, operand)
                    ;

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 116045, 116277) || true) && (!f_10306_116050_116084(indexType))
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 116045, 116277);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 116126, 116258);

                        f_10306_116126_116257(diagnostics, ErrorCode.ERR_ValConstraintNotSatisfied, operand, nullableType, nullableType.TypeParameters.Single(), indexType);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 116045, 116277);
                    }
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 116297, 116343);

                    indexType = f_10306_116309_116342(nullableType, indexType);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 115648, 116358);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 116374, 116424);

                HashSet<DiagnosticInfo>
                useSiteDiagnostics = null
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 116438, 116569);

                Conversion
                conversion = f_10306_116462_116568(f_10306_116462_116478(this), boundOperand, indexType, ref useSiteDiagnostics)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 116583, 116628);

                f_10306_116583_116627(diagnostics, operand, useSiteDiagnostics);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 116644, 116807) || true) && (f_10306_116648_116667_M(!conversion.IsValid))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 116644, 116807);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 116701, 116792);

                    f_10306_116701_116791(this, diagnostics, operand, conversion, boundOperand, indexType);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 116644, 116807);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 116823, 116897);

                return f_10306_116830_116896(this, boundOperand, conversion, indexType, diagnostics);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10306, 115196, 116908);

                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_115451_115504(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                node, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.Binder.BindValueKind
                valueKind)
                {
                    var return_v = this_param.BindValue(node, diagnostics, valueKind);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 115451, 115504);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                f_10306_115542_115608(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.WellKnownType
                type, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                node)
                {
                    var return_v = this_param.GetWellKnownType(type, diagnostics, (Microsoft.CodeAnalysis.SyntaxNode)node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 115542, 115608);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?
                f_10306_115653_115670(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 115653, 115670);
                    return return_v;
                }


                bool
                f_10306_115653_115683(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?
                this_param, object
                obj)
                {
                    var return_v = this_param.Equals(obj);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 115653, 115683);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                f_10306_115687_115704(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 115687, 115704);
                    return return_v;
                }


                bool
                f_10306_115687_115721(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                type)
                {
                    var return_v = type.IsNullableType();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 115687, 115721);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbol
                f_10306_115826_115907(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.SpecialMember
                member, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                syntax)
                {
                    var return_v = this_param.GetSpecialTypeMember(member, diagnostics, (Microsoft.CodeAnalysis.SyntaxNode)syntax);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 115826, 115907);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                f_10306_115957_116024(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.SpecialType
                typeId, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                node)
                {
                    var return_v = this_param.GetSpecialType(typeId, diagnostics, (Microsoft.CodeAnalysis.SyntaxNode)node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 115957, 116024);
                    return return_v;
                }


                bool
                f_10306_116050_116084(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                typeArgument)
                {
                    var return_v = typeArgument.IsNonNullableValueType();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 116050, 116084);
                    return return_v;
                }


                int
                f_10306_116126_116257(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                syntax, params object[]
                args)
                {
                    Error(diagnostics, code, (Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode)syntax, args);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 116126, 116257);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                f_10306_116309_116342(Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                this_param, params Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol[]
                typeArguments)
                {
                    var return_v = this_param.Construct(typeArguments);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 116309, 116342);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Conversions
                f_10306_116462_116478(Microsoft.CodeAnalysis.CSharp.Binder
                this_param)
                {
                    var return_v = this_param.Conversions;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 116462, 116478);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Conversion
                f_10306_116462_116568(Microsoft.CodeAnalysis.CSharp.Conversions
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                sourceExpression, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                destination, ref System.Collections.Generic.HashSet<Microsoft.CodeAnalysis.DiagnosticInfo>?
                useSiteDiagnostics)
                {
                    var return_v = this_param.ClassifyImplicitConversionFromExpression(sourceExpression, destination, ref useSiteDiagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 116462, 116568);
                    return return_v;
                }


                bool
                f_10306_116583_116627(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                node, System.Collections.Generic.HashSet<Microsoft.CodeAnalysis.DiagnosticInfo>
                useSiteDiagnostics)
                {
                    var return_v = diagnostics.Add((Microsoft.CodeAnalysis.SyntaxNode)node, useSiteDiagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 116583, 116627);
                    return return_v;
                }


                bool
                f_10306_116648_116667_M(bool
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 116648, 116667);
                    return return_v;
                }


                int
                f_10306_116701_116791(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                syntax, Microsoft.CodeAnalysis.CSharp.Conversion
                conversion, Microsoft.CodeAnalysis.CSharp.BoundExpression
                operand, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                targetType)
                {
                    this_param.GenerateImplicitConversionError(diagnostics, (Microsoft.CodeAnalysis.SyntaxNode)syntax, conversion, operand, targetType);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 116701, 116791);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_116830_116896(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                source, Microsoft.CodeAnalysis.CSharp.Conversion
                conversion, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                destination, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.CreateConversion(source, conversion, destination, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 116830, 116896);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 115196, 116908);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 115196, 116908);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private BoundExpression BindCastCore(ExpressionSyntax node, BoundExpression operand, TypeWithAnnotations targetTypeWithAnnotations, bool wasCompilerGenerated, DiagnosticBag diagnostics)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10306, 116920, 118152);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 117130, 117185);

                TypeSymbol
                targetType = targetTypeWithAnnotations.Type
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 117199, 117249);

                HashSet<DiagnosticInfo>
                useSiteDiagnostics = null
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 117263, 117397);

                Conversion
                conversion = f_10306_117287_117396(f_10306_117287_117303(this), operand, targetType, ref useSiteDiagnostics, forCast: true)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 117411, 117453);

                f_10306_117411_117452(diagnostics, node, useSiteDiagnostics);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 117469, 117550);

                var
                conversionGroup = f_10306_117491_117549(conversion, targetTypeWithAnnotations)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 117564, 117635);

                bool
                suppressErrors = f_10306_117586_117606(operand) || (DynAbs.Tracing.TraceSender.Expression_False(10306, 117586, 117634) || f_10306_117610_117634(targetType))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 117649, 117709);

                bool
                hasErrors = f_10306_117666_117685_M(!conversion.IsValid) || (DynAbs.Tracing.TraceSender.Expression_False(10306, 117666, 117708) || f_10306_117689_117708(targetType))
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 117723, 117889) || true) && (hasErrors && (DynAbs.Tracing.TraceSender.Expression_True(10306, 117727, 117755) && !suppressErrors))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 117723, 117889);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 117789, 117874);

                    f_10306_117789_117873(this, diagnostics, node, conversion, operand, targetType);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 117723, 117889);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 117905, 118141);

                return f_10306_117912_118140(this, node, operand, conversion, isCast: true, conversionGroupOpt: conversionGroup, wasCompilerGenerated: wasCompilerGenerated, destination: targetType, diagnostics: diagnostics, hasErrors: hasErrors | suppressErrors);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10306, 116920, 118152);

                Microsoft.CodeAnalysis.CSharp.Conversions
                f_10306_117287_117303(Microsoft.CodeAnalysis.CSharp.Binder
                this_param)
                {
                    var return_v = this_param.Conversions;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 117287, 117303);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Conversion
                f_10306_117287_117396(Microsoft.CodeAnalysis.CSharp.Conversions
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                sourceExpression, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                destination, ref System.Collections.Generic.HashSet<Microsoft.CodeAnalysis.DiagnosticInfo>?
                useSiteDiagnostics, bool
                forCast)
                {
                    var return_v = this_param.ClassifyConversionFromExpression(sourceExpression, destination, ref useSiteDiagnostics, forCast: forCast);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 117287, 117396);
                    return return_v;
                }


                bool
                f_10306_117411_117452(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                node, System.Collections.Generic.HashSet<Microsoft.CodeAnalysis.DiagnosticInfo>
                useSiteDiagnostics)
                {
                    var return_v = diagnostics.Add((Microsoft.CodeAnalysis.SyntaxNode)node, useSiteDiagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 117411, 117452);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.ConversionGroup
                f_10306_117491_117549(Microsoft.CodeAnalysis.CSharp.Conversion
                conversion, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                explicitType)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.ConversionGroup(conversion, explicitType);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 117491, 117549);
                    return return_v;
                }


                bool
                f_10306_117586_117606(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.HasAnyErrors;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 117586, 117606);
                    return return_v;
                }


                bool
                f_10306_117610_117634(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                type)
                {
                    var return_v = type.IsErrorType();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 117610, 117634);
                    return return_v;
                }


                bool
                f_10306_117666_117685_M(bool
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 117666, 117685);
                    return return_v;
                }


                bool
                f_10306_117689_117708(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                this_param)
                {
                    var return_v = this_param.IsStatic;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 117689, 117708);
                    return return_v;
                }


                int
                f_10306_117789_117873(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                syntax, Microsoft.CodeAnalysis.CSharp.Conversion
                conversion, Microsoft.CodeAnalysis.CSharp.BoundExpression
                operand, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                targetType)
                {
                    this_param.GenerateExplicitConversionErrors(diagnostics, (Microsoft.CodeAnalysis.SyntaxNode)syntax, conversion, operand, targetType);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 117789, 117873);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_117912_118140(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                syntax, Microsoft.CodeAnalysis.CSharp.BoundExpression
                source, Microsoft.CodeAnalysis.CSharp.Conversion
                conversion, bool
                isCast, Microsoft.CodeAnalysis.CSharp.ConversionGroup
                conversionGroupOpt, bool
                wasCompilerGenerated, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                destination, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, bool
                hasErrors)
                {
                    var return_v = this_param.CreateConversion((Microsoft.CodeAnalysis.SyntaxNode)syntax, source, conversion, isCast: isCast, conversionGroupOpt: conversionGroupOpt, wasCompilerGenerated: wasCompilerGenerated, destination: destination, diagnostics: diagnostics, hasErrors: hasErrors);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 117912, 118140);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 116920, 118152);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 116920, 118152);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private void GenerateExplicitConversionErrors(
                    DiagnosticBag diagnostics,
                    SyntaxNode syntax,
                    Conversion conversion,
                    BoundExpression operand,
                    TypeSymbol targetType)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10306, 118164, 124524);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 118497, 118720) || true) && (f_10306_118501_118513(operand) == BoundKind.UnboundLambda)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 118497, 118720);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 118574, 118680);

                    f_10306_118574_118679(this, diagnostics, operand.Syntax, operand, targetType);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 118698, 118705);

                    return;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 118497, 118720);
                }

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 118736, 118909) || true) && (f_10306_118740_118760(operand) || (DynAbs.Tracing.TraceSender.Expression_False(10306, 118740, 118788) || f_10306_118764_118788(targetType)))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 118736, 118909);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 118887, 118894);

                    return;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 118736, 118909);
                }

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 118925, 119312) || true) && (f_10306_118929_118948(targetType))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 118925, 119312);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 119191, 119272);

                    f_10306_119191_119271(                // The specification states in the section titled "Referencing Static
                                                          // Class Types" that it is always illegal to have a static class in a
                                                          // cast operator.
                                    diagnostics, ErrorCode.ERR_ConvertToStaticClass, f_10306_119243_119258(syntax), targetType);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 119290, 119297);

                    return;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 118925, 119312);
                }

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 119328, 119568) || true) && (f_10306_119332_119359_M(!targetType.IsReferenceType) && (DynAbs.Tracing.TraceSender.Expression_True(10306, 119332, 119391) && !f_10306_119364_119391(targetType)) && (DynAbs.Tracing.TraceSender.Expression_True(10306, 119332, 119418) && f_10306_119395_119418(operand)))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 119328, 119568);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 119452, 119528);

                    f_10306_119452_119527(diagnostics, ErrorCode.ERR_ValueCantBeNull, f_10306_119499_119514(syntax), targetType);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 119546, 119553);

                    return;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 119328, 119568);
                }

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 119584, 120698) || true) && (conversion.ResultKind == LookupResultKind.OverloadResolutionFailure)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 119584, 120698);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 119689, 119728);

                    f_10306_119689_119727(conversion.IsUserDefined);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 119748, 119852);

                    ImmutableArray<MethodSymbol>
                    originalUserDefinedConversions = conversion.OriginalUserDefinedConversions
                    ;

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 119870, 120656) || true) && (originalUserDefinedConversions.Length > 1)
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 119870, 120656);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 119957, 120116);

                        f_10306_119957_120115(diagnostics, ErrorCode.ERR_AmbigUDConv, f_10306_120000_120015(syntax), originalUserDefinedConversions[0], originalUserDefinedConversions[1], f_10306_120087_120102(operand), targetType);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 119870, 120656);
                    }

                    else

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 119870, 120656);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 120198, 120380);

                        f_10306_120198_120379(originalUserDefinedConversions.Length == 0, "How can there be exactly one applicable user-defined conversion if the conversion doesn't exist?");
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 120402, 120507);

                        SymbolDistinguisher
                        distinguisher1 = f_10306_120439_120506(f_10306_120463_120479(this), f_10306_120481_120493(operand), targetType)
                        ;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 120529, 120637);

                        f_10306_120529_120636(diagnostics, ErrorCode.ERR_NoExplicitConv, f_10306_120575_120590(syntax), f_10306_120592_120612(distinguisher1), f_10306_120614_120635(distinguisher1));
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 119870, 120656);
                    }
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 120676, 120683);

                    return;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 119584, 120698);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 120714, 124216);

                switch (f_10306_120722_120734(operand))
                {

                    case BoundKind.MethodGroup:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 120714, 124216);
                        {

                            if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 120844, 121255) || true) && (f_10306_120848_120867(targetType) != TypeKind.Delegate || (DynAbs.Tracing.TraceSender.Expression_False(10306, 120848, 121059) || !f_10306_120922_121059(this, operand, targetType, f_10306_121023_121038(syntax), diagnostics, out _)))
                            )

                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 120844, 121255);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 121117, 121228);

                                f_10306_121117_121227(diagnostics, ErrorCode.ERR_NoExplicitConv, f_10306_121163_121178(syntax), f_10306_121180_121214(MessageID.IDS_SK_METHOD), targetType);
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 120844, 121255);
                            }
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 121283, 121290);

                            return;
                        }
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 120714, 124216);

                    case BoundKind.TupleLiteral:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 120714, 124216);
                        {
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 121408, 121447);

                            var
                            tuple = (BoundTupleLiteral)operand
                            ;
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 121473, 121558);

                            var
                            targetElementTypesWithAnnotations = default(ImmutableArray<TypeWithAnnotations>)
                            ;

                            if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 121802, 122243) || true) && (targetType.TryGetElementTypesWithAnnotationsIfTupleType(out targetElementTypesWithAnnotations) && (DynAbs.Tracing.TraceSender.Expression_True(10306, 121806, 121999) && targetElementTypesWithAnnotations.Length == tuple.Arguments.Length))
                            )

                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 121802, 122243);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 122057, 122179);

                                f_10306_122057_122178(this, diagnostics, f_10306_122127_122142(tuple), targetElementTypesWithAnnotations);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 122209, 122216);

                                return;
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 121802, 122243);
                            }

                            if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 122368, 122627) || true) && ((object)f_10306_122380_122390(tuple) == null)
                            )

                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 122368, 122627);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 122456, 122563);

                                f_10306_122456_122562(diagnostics, ErrorCode.ERR_ConversionNotTupleCompatible, syntax, tuple.Arguments.Length, targetType);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 122593, 122600);

                                return;
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 122368, 122627);
                            }
                            DynAbs.Tracing.TraceSender.TraceBreak(10306, 122748, 122754);

                            break;
                        }
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 120714, 124216);

                    case BoundKind.StackAllocArrayCreation:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 120714, 124216);
                        {
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 122883, 122948);

                            var
                            stackAllocExpression = (BoundStackAllocArrayCreation)operand
                            ;
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 122974, 123094);

                            f_10306_122974_123093(diagnostics, ErrorCode.ERR_StackAllocConversionNotPossible, syntax, f_10306_123048_123080(stackAllocExpression), targetType);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 123120, 123127);

                            return;
                        }
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 120714, 124216);

                    case BoundKind.UnconvertedConditionalOperator when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 123214, 123239) || true) && (f_10306_123219_123231(operand) is null) && (DynAbs.Tracing.TraceSender.Expression_True(10306, 123214, 123239) || true)
                    :
                    case BoundKind.UnconvertedSwitchExpression when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 123301, 123326) || true) && (f_10306_123306_123318(operand) is null) && (DynAbs.Tracing.TraceSender.Expression_True(10306, 123301, 123326) || true)
                    :
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 120714, 124216);
                        {
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 123376, 123470);

                            f_10306_123376_123469(this, diagnostics, operand.Syntax, conversion, operand, targetType);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 123496, 123503);

                            return;
                        }
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 120714, 124216);

                    case BoundKind.UnconvertedAddressOfOperator:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 120714, 124216);
                        {
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 123637, 124002);

                            var
                            errorCode = f_10306_123653_123672(targetType) switch
                            {
                                TypeKind.FunctionPointer when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 123736, 123797) && DynAbs.Tracing.TraceSender.Expression_True(10306, 123736, 123797))
=> ErrorCode.ERR_MethFuncPtrMismatch,
                                TypeKind.Delegate when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 123828, 123895) && DynAbs.Tracing.TraceSender.Expression_True(10306, 123828, 123895))
=> ErrorCode.ERR_CannotConvertAddressOfToDelegate,
                                _ when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 123926, 123974) && DynAbs.Tracing.TraceSender.Expression_True(10306, 123926, 123974))
=> ErrorCode.ERR_AddressOfToNonFunctionPointer
                            }
                            ;
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 124030, 124145);

                            f_10306_124030_124144(
                                                    diagnostics, errorCode, f_10306_124057_124072(syntax), f_10306_124074_124131(f_10306_124074_124126(((BoundUnconvertedAddressOfOperator)operand))), targetType);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 124171, 124178);

                            return;
                        }
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 120714, 124216);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 124232, 124275);

                f_10306_124232_124274((object)f_10306_124253_124265(operand) != null);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 124289, 124393);

                SymbolDistinguisher
                distinguisher = f_10306_124325_124392(f_10306_124349_124365(this), f_10306_124367_124379(operand), targetType)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 124407, 124513);

                f_10306_124407_124512(diagnostics, ErrorCode.ERR_NoExplicitConv, f_10306_124453_124468(syntax), f_10306_124470_124489(distinguisher), f_10306_124491_124511(distinguisher));
                DynAbs.Tracing.TraceSender.TraceExitMethod(10306, 118164, 124524);

                Microsoft.CodeAnalysis.CSharp.BoundKind
                f_10306_118501_118513(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.Kind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 118501, 118513);
                    return return_v;
                }


                int
                f_10306_118574_118679(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.CSharp.BoundExpression
                anonymousFunction, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                targetType)
                {
                    this_param.GenerateAnonymousFunctionConversionError(diagnostics, syntax, (Microsoft.CodeAnalysis.CSharp.UnboundLambda)anonymousFunction, targetType);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 118574, 118679);
                    return 0;
                }


                bool
                f_10306_118740_118760(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.HasAnyErrors;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 118740, 118760);
                    return return_v;
                }


                bool
                f_10306_118764_118788(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                type)
                {
                    var return_v = type.IsErrorType();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 118764, 118788);
                    return return_v;
                }


                bool
                f_10306_118929_118948(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                this_param)
                {
                    var return_v = this_param.IsStatic;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 118929, 118948);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Location
                f_10306_119243_119258(Microsoft.CodeAnalysis.SyntaxNode
                this_param)
                {
                    var return_v = this_param.Location;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 119243, 119258);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo
                f_10306_119191_119271(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, Microsoft.CodeAnalysis.Location
                location, params object[]
                args)
                {
                    var return_v = diagnostics.Add(code, location, args);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 119191, 119271);
                    return return_v;
                }


                bool
                f_10306_119332_119359_M(bool
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 119332, 119359);
                    return return_v;
                }


                bool
                f_10306_119364_119391(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                type)
                {
                    var return_v = type.IsNullableType();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 119364, 119391);
                    return return_v;
                }


                bool
                f_10306_119395_119418(Microsoft.CodeAnalysis.CSharp.BoundExpression
                node)
                {
                    var return_v = node.IsLiteralNull();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 119395, 119418);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Location
                f_10306_119499_119514(Microsoft.CodeAnalysis.SyntaxNode
                this_param)
                {
                    var return_v = this_param.Location;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 119499, 119514);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo
                f_10306_119452_119527(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, Microsoft.CodeAnalysis.Location
                location, params object[]
                args)
                {
                    var return_v = diagnostics.Add(code, location, args);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 119452, 119527);
                    return return_v;
                }


                int
                f_10306_119689_119727(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 119689, 119727);
                    return 0;
                }


                Microsoft.CodeAnalysis.Location
                f_10306_120000_120015(Microsoft.CodeAnalysis.SyntaxNode
                this_param)
                {
                    var return_v = this_param.Location;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 120000, 120015);
                    return return_v;
                }


                object
                f_10306_120087_120102(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.Display;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 120087, 120102);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo
                f_10306_119957_120115(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, Microsoft.CodeAnalysis.Location
                location, params object[]
                args)
                {
                    var return_v = diagnostics.Add(code, location, args);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 119957, 120115);
                    return return_v;
                }


                int
                f_10306_120198_120379(bool
                condition, string
                message)
                {
                    Debug.Assert(condition, message);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 120198, 120379);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                f_10306_120463_120479(Microsoft.CodeAnalysis.CSharp.Binder
                this_param)
                {
                    var return_v = this_param.Compilation;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 120463, 120479);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?
                f_10306_120481_120493(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 120481, 120493);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.SymbolDistinguisher
                f_10306_120439_120506(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                compilation, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?
                symbol0, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                symbol1)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.SymbolDistinguisher(compilation, (Microsoft.CodeAnalysis.CSharp.Symbol?)symbol0, (Microsoft.CodeAnalysis.CSharp.Symbol)symbol1);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 120439, 120506);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Location
                f_10306_120575_120590(Microsoft.CodeAnalysis.SyntaxNode
                this_param)
                {
                    var return_v = this_param.Location;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 120575, 120590);
                    return return_v;
                }


                System.IFormattable
                f_10306_120592_120612(Microsoft.CodeAnalysis.CSharp.SymbolDistinguisher
                this_param)
                {
                    var return_v = this_param.First;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 120592, 120612);
                    return return_v;
                }


                System.IFormattable
                f_10306_120614_120635(Microsoft.CodeAnalysis.CSharp.SymbolDistinguisher
                this_param)
                {
                    var return_v = this_param.Second;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 120614, 120635);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo
                f_10306_120529_120636(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, Microsoft.CodeAnalysis.Location
                location, params object[]
                args)
                {
                    var return_v = diagnostics.Add(code, location, args);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 120529, 120636);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundKind
                f_10306_120722_120734(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.Kind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 120722, 120734);
                    return return_v;
                }


                Microsoft.CodeAnalysis.TypeKind
                f_10306_120848_120867(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                this_param)
                {
                    var return_v = this_param.TypeKind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 120848, 120867);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Location
                f_10306_121023_121038(Microsoft.CodeAnalysis.SyntaxNode
                this_param)
                {
                    var return_v = this_param.Location;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 121023, 121038);
                    return return_v;
                }


                bool
                f_10306_120922_121059(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                boundMethodGroup, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                delegateType, Microsoft.CodeAnalysis.Location
                delegateMismatchLocation, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, out Microsoft.CodeAnalysis.CSharp.Conversion
                conversion)
                {
                    var return_v = this_param.MethodGroupConversionDoesNotExistOrHasErrors((Microsoft.CodeAnalysis.CSharp.BoundMethodGroup)boundMethodGroup, (Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol)delegateType, delegateMismatchLocation, diagnostics, out conversion);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 120922, 121059);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Location
                f_10306_121163_121178(Microsoft.CodeAnalysis.SyntaxNode
                this_param)
                {
                    var return_v = this_param.Location;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 121163, 121178);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.LocalizableErrorArgument
                f_10306_121180_121214(Microsoft.CodeAnalysis.CSharp.MessageID
                id)
                {
                    var return_v = id.Localize();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 121180, 121214);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo
                f_10306_121117_121227(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, Microsoft.CodeAnalysis.Location
                location, params object[]
                args)
                {
                    var return_v = diagnostics.Add(code, location, args);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 121117, 121227);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                f_10306_122127_122142(Microsoft.CodeAnalysis.CSharp.BoundTupleLiteral
                this_param)
                {
                    var return_v = this_param.Arguments;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 122127, 122142);
                    return return_v;
                }


                int
                f_10306_122057_122178(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                tupleArguments, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations>
                targetElementTypesWithAnnotations)
                {
                    this_param.GenerateExplicitConversionErrorsForTupleLiteralArguments(diagnostics, tupleArguments, targetElementTypesWithAnnotations);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 122057, 122178);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?
                f_10306_122380_122390(Microsoft.CodeAnalysis.CSharp.BoundTupleLiteral
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 122380, 122390);
                    return return_v;
                }


                int
                f_10306_122456_122562(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, Microsoft.CodeAnalysis.SyntaxNode
                syntax, params object[]
                args)
                {
                    Error(diagnostics, code, (Microsoft.CodeAnalysis.SyntaxNodeOrToken)syntax, args);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 122456, 122562);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                f_10306_123048_123080(Microsoft.CodeAnalysis.CSharp.BoundStackAllocArrayCreation
                this_param)
                {
                    var return_v = this_param.ElementType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 123048, 123080);
                    return return_v;
                }


                int
                f_10306_122974_123093(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, Microsoft.CodeAnalysis.SyntaxNode
                syntax, params object[]
                args)
                {
                    Error(diagnostics, code, (Microsoft.CodeAnalysis.SyntaxNodeOrToken)syntax, args);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 122974, 123093);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?
                f_10306_123219_123231(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 123219, 123231);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?
                f_10306_123306_123318(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 123306, 123318);
                    return return_v;
                }


                int
                f_10306_123376_123469(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.CSharp.Conversion
                conversion, Microsoft.CodeAnalysis.CSharp.BoundExpression
                operand, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                targetType)
                {
                    this_param.GenerateImplicitConversionError(diagnostics, syntax, conversion, operand, targetType);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 123376, 123469);
                    return 0;
                }


                Microsoft.CodeAnalysis.TypeKind
                f_10306_123653_123672(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                this_param)
                {
                    var return_v = this_param.TypeKind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 123653, 123672);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Location
                f_10306_124057_124072(Microsoft.CodeAnalysis.SyntaxNode
                this_param)
                {
                    var return_v = this_param.Location;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 124057, 124072);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundMethodGroup
                f_10306_124074_124126(Microsoft.CodeAnalysis.CSharp.BoundUnconvertedAddressOfOperator
                this_param)
                {
                    var return_v = this_param.Operand;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 124074, 124126);
                    return return_v;
                }


                string
                f_10306_124074_124131(Microsoft.CodeAnalysis.CSharp.BoundMethodGroup
                this_param)
                {
                    var return_v = this_param.Name;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 124074, 124131);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo
                f_10306_124030_124144(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, Microsoft.CodeAnalysis.Location
                location, params object[]
                args)
                {
                    var return_v = diagnostics.Add(code, location, args);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 124030, 124144);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?
                f_10306_124253_124265(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 124253, 124265);
                    return return_v;
                }


                int
                f_10306_124232_124274(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 124232, 124274);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                f_10306_124349_124365(Microsoft.CodeAnalysis.CSharp.Binder
                this_param)
                {
                    var return_v = this_param.Compilation;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 124349, 124365);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                f_10306_124367_124379(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 124367, 124379);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.SymbolDistinguisher
                f_10306_124325_124392(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                compilation, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                symbol0, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                symbol1)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.SymbolDistinguisher(compilation, (Microsoft.CodeAnalysis.CSharp.Symbol)symbol0, (Microsoft.CodeAnalysis.CSharp.Symbol)symbol1);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 124325, 124392);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Location
                f_10306_124453_124468(Microsoft.CodeAnalysis.SyntaxNode
                this_param)
                {
                    var return_v = this_param.Location;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 124453, 124468);
                    return return_v;
                }


                System.IFormattable
                f_10306_124470_124489(Microsoft.CodeAnalysis.CSharp.SymbolDistinguisher
                this_param)
                {
                    var return_v = this_param.First;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 124470, 124489);
                    return return_v;
                }


                System.IFormattable
                f_10306_124491_124511(Microsoft.CodeAnalysis.CSharp.SymbolDistinguisher
                this_param)
                {
                    var return_v = this_param.Second;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 124491, 124511);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo
                f_10306_124407_124512(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, Microsoft.CodeAnalysis.Location
                location, params object[]
                args)
                {
                    var return_v = diagnostics.Add(code, location, args);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 124407, 124512);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 118164, 124524);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 118164, 124524);
            }
        }

        private void GenerateExplicitConversionErrorsForTupleLiteralArguments(
                    DiagnosticBag diagnostics,
                    ImmutableArray<BoundExpression> tupleArguments,
                    ImmutableArray<TypeWithAnnotations> targetElementTypesWithAnnotations)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10306, 124536, 126122);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 125462, 125507);

                HashSet<DiagnosticInfo>
                usDiagsUnused = null
                ;
                try
                {
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 125532, 125537);

                    for (int
        i = 0
        ; (DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 125523, 126111) || true) && (i < targetElementTypesWithAnnotations.Length)
        ; DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 125585, 125588)
        , i++, DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 125523, 126111))

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 125523, 126111);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 125622, 125655);

                        var
                        argument = tupleArguments[i]
                        ;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 125673, 125739);

                        var
                        targetElementType = targetElementTypesWithAnnotations[i].Type
                        ;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 125759, 125876);

                        var
                        elementConversion = f_10306_125783_125875(f_10306_125783_125794(), argument, targetElementType, ref usDiagsUnused)
                        ;

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 125894, 126096) || true) && (f_10306_125898_125924_M(!elementConversion.IsValid))
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 125894, 126096);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 125966, 126077);

                            f_10306_125966_126076(this, diagnostics, argument.Syntax, elementConversion, argument, targetElementType);
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 125894, 126096);
                        }
                    }
                }
                catch (System.Exception)
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoopByException(10306, 1, 589);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoop(10306, 1, 589);
                }
                DynAbs.Tracing.TraceSender.TraceExitMethod(10306, 124536, 126122);

                Microsoft.CodeAnalysis.CSharp.Conversions
                f_10306_125783_125794()
                {
                    var return_v = Conversions;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 125783, 125794);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Conversion
                f_10306_125783_125875(Microsoft.CodeAnalysis.CSharp.Conversions
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                sourceExpression, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                destination, ref System.Collections.Generic.HashSet<Microsoft.CodeAnalysis.DiagnosticInfo>?
                useSiteDiagnostics)
                {
                    var return_v = this_param.ClassifyConversionFromExpression(sourceExpression, destination, ref useSiteDiagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 125783, 125875);
                    return return_v;
                }


                bool
                f_10306_125898_125924_M(bool
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 125898, 125924);
                    return return_v;
                }


                int
                f_10306_125966_126076(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.CSharp.Conversion
                conversion, Microsoft.CodeAnalysis.CSharp.BoundExpression
                operand, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                targetType)
                {
                    this_param.GenerateExplicitConversionErrors(diagnostics, syntax, conversion, operand, targetType);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 125966, 126076);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 124536, 126122);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 124536, 126122);
            }
        }

        private BoundExpression BindExplicitNullableCastFromNonNullable(ExpressionSyntax node, BoundExpression operand, TypeWithAnnotations targetTypeWithAnnotations, DiagnosticBag diagnostics)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10306, 126681, 129780);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 126891, 126985);

                f_10306_126891_126984(targetTypeWithAnnotations.HasType && (DynAbs.Tracing.TraceSender.Expression_True(10306, 126904, 126983) && targetTypeWithAnnotations.IsNullableType()));
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 126999, 127076);

                f_10306_126999_127075((object)f_10306_127020_127032(operand) != null && (DynAbs.Tracing.TraceSender.Expression_True(10306, 127012, 127074) && !f_10306_127045_127074(f_10306_127045_127057(operand))));
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 127239, 127277);

                HashSet<DiagnosticInfo>
                unused = null
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 127291, 127423);

                TypeWithAnnotations
                underlyingTargetTypeWithAnnotations = f_10306_127349_127422(targetTypeWithAnnotations.Type)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 127437, 127570);

                var
                underlyingConversion = f_10306_127464_127569(f_10306_127464_127475(), f_10306_127502_127514(operand), underlyingTargetTypeWithAnnotations.Type, ref unused)
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 127584, 127805) || true) && (f_10306_127588_127616_M(!underlyingConversion.Exists))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 127584, 127805);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 127650, 127790);

                    return f_10306_127657_127789(this, node, operand, targetTypeWithAnnotations, wasCompilerGenerated: f_10306_127734_127762(operand), diagnostics: diagnostics);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 127584, 127805);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 127821, 127859);

                var
                bag = f_10306_127831_127858()
                ;
                try
                {
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 127909, 128042);

                    var
                    underlyingExpr = f_10306_127930_128041(this, node, operand, underlyingTargetTypeWithAnnotations, wasCompilerGenerated: false, diagnostics: bag)
                    ;

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 128060, 128857) || true) && (f_10306_128064_128088(underlyingExpr) || (DynAbs.Tracing.TraceSender.Expression_False(10306, 128064, 128110) || f_10306_128092_128110(bag)))
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 128060, 128857);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 128152, 128253);

                        f_10306_128152_128252(diagnostics, ErrorCode.ERR_NoExplicitConv, node, f_10306_128207_128219(operand), targetTypeWithAnnotations.Type);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 128277, 128838);

                        return f_10306_128284_128837(node, operand, Conversion.NoConversion, @checked: f_10306_128455_128477(), explicitCastInCode: true, conversionGroupOpt: f_10306_128575_128660(Conversion.NoConversion, explicitType: targetTypeWithAnnotations), constantValueOpt: ConstantValue.NotAvailable, type: targetTypeWithAnnotations.Type, hasErrors: true);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 128060, 128857);
                    }

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 129201, 129514) || true) && (f_10306_129205_129233(underlyingExpr) != null)
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 129201, 129514);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 129283, 129326);

                        underlyingExpr.WasCompilerGenerated = true;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 129348, 129495);

                        return f_10306_129355_129494(this, node, underlyingExpr, targetTypeWithAnnotations, wasCompilerGenerated: f_10306_129439_129467(operand), diagnostics: diagnostics);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 129201, 129514);
                    }
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 129534, 129674);

                    return f_10306_129541_129673(this, node, operand, targetTypeWithAnnotations, wasCompilerGenerated: f_10306_129618_129646(operand), diagnostics: diagnostics);
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinally(10306, 129703, 129769);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 129743, 129754);

                    f_10306_129743_129753(bag);
                    DynAbs.Tracing.TraceSender.TraceExitFinally(10306, 129703, 129769);
                }
                DynAbs.Tracing.TraceSender.TraceExitMethod(10306, 126681, 129780);

                int
                f_10306_126891_126984(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 126891, 126984);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?
                f_10306_127020_127032(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 127020, 127032);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                f_10306_127045_127057(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 127045, 127057);
                    return return_v;
                }


                bool
                f_10306_127045_127074(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                type)
                {
                    var return_v = type.IsNullableType();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 127045, 127074);
                    return return_v;
                }


                int
                f_10306_126999_127075(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 126999, 127075);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                f_10306_127349_127422(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                type)
                {
                    var return_v = type.GetNullableUnderlyingTypeWithAnnotations();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 127349, 127422);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Conversions
                f_10306_127464_127475()
                {
                    var return_v = Conversions;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 127464, 127475);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                f_10306_127502_127514(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 127502, 127514);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Conversion
                f_10306_127464_127569(Microsoft.CodeAnalysis.CSharp.Conversions
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                source, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                destination, ref System.Collections.Generic.HashSet<Microsoft.CodeAnalysis.DiagnosticInfo>?
                useSiteDiagnostics)
                {
                    var return_v = this_param.ClassifyBuiltInConversion(source, destination, ref useSiteDiagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 127464, 127569);
                    return return_v;
                }


                bool
                f_10306_127588_127616_M(bool
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 127588, 127616);
                    return return_v;
                }


                bool
                f_10306_127734_127762(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.WasCompilerGenerated;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 127734, 127762);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_127657_127789(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                node, Microsoft.CodeAnalysis.CSharp.BoundExpression
                operand, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                targetTypeWithAnnotations, bool
                wasCompilerGenerated, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.BindCastCore(node, operand, targetTypeWithAnnotations, wasCompilerGenerated: wasCompilerGenerated, diagnostics: diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 127657, 127789);
                    return return_v;
                }


                Microsoft.CodeAnalysis.DiagnosticBag
                f_10306_127831_127858()
                {
                    var return_v = DiagnosticBag.GetInstance();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 127831, 127858);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_127930_128041(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                node, Microsoft.CodeAnalysis.CSharp.BoundExpression
                operand, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                targetTypeWithAnnotations, bool
                wasCompilerGenerated, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.BindCastCore(node, operand, targetTypeWithAnnotations, wasCompilerGenerated: wasCompilerGenerated, diagnostics: diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 127930, 128041);
                    return return_v;
                }


                bool
                f_10306_128064_128088(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.HasErrors;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 128064, 128088);
                    return return_v;
                }


                bool
                f_10306_128092_128110(Microsoft.CodeAnalysis.DiagnosticBag
                this_param)
                {
                    var return_v = this_param.HasAnyErrors();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 128092, 128110);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                f_10306_128207_128219(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 128207, 128219);
                    return return_v;
                }


                int
                f_10306_128152_128252(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                syntax, params object[]
                args)
                {
                    Error(diagnostics, code, (Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode)syntax, args);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 128152, 128252);
                    return 0;
                }


                bool
                f_10306_128455_128477()
                {
                    var return_v = CheckOverflowAtRuntime;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 128455, 128477);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.ConversionGroup
                f_10306_128575_128660(Microsoft.CodeAnalysis.CSharp.Conversion
                conversion, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                explicitType)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.ConversionGroup(conversion, explicitType: explicitType);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 128575, 128660);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundConversion
                f_10306_128284_128837(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                syntax, Microsoft.CodeAnalysis.CSharp.BoundExpression
                operand, Microsoft.CodeAnalysis.CSharp.Conversion
                conversion, bool
                @checked, bool
                explicitCastInCode, Microsoft.CodeAnalysis.CSharp.ConversionGroup
                conversionGroupOpt, Microsoft.CodeAnalysis.ConstantValue
                constantValueOpt, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                type, bool
                hasErrors)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.BoundConversion((Microsoft.CodeAnalysis.SyntaxNode)syntax, operand, conversion, @checked: @checked, explicitCastInCode: explicitCastInCode, conversionGroupOpt: conversionGroupOpt, constantValueOpt: constantValueOpt, type: type, hasErrors: hasErrors);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 128284, 128837);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ConstantValue?
                f_10306_129205_129233(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.ConstantValue;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 129205, 129233);
                    return return_v;
                }


                bool
                f_10306_129439_129467(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.WasCompilerGenerated;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 129439, 129467);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_129355_129494(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                node, Microsoft.CodeAnalysis.CSharp.BoundExpression
                operand, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                targetTypeWithAnnotations, bool
                wasCompilerGenerated, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.BindCastCore(node, operand, targetTypeWithAnnotations, wasCompilerGenerated: wasCompilerGenerated, diagnostics: diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 129355, 129494);
                    return return_v;
                }


                bool
                f_10306_129618_129646(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.WasCompilerGenerated;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 129618, 129646);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_129541_129673(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                node, Microsoft.CodeAnalysis.CSharp.BoundExpression
                operand, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                targetTypeWithAnnotations, bool
                wasCompilerGenerated, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.BindCastCore(node, operand, targetTypeWithAnnotations, wasCompilerGenerated: wasCompilerGenerated, diagnostics: diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 129541, 129673);
                    return return_v;
                }


                int
                f_10306_129743_129753(Microsoft.CodeAnalysis.DiagnosticBag
                this_param)
                {
                    this_param.Free();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 129743, 129753);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 126681, 129780);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 126681, 129780);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private static NameSyntax GetNameSyntax(SyntaxNode syntax)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterStaticMethod(10306, 129792, 129963);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 129875, 129893);

                string
                nameString
                = default(string);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 129907, 129952);

                return f_10306_129914_129951(syntax, out nameString);
                DynAbs.Tracing.TraceSender.TraceExitStaticMethod(10306, 129792, 129963);

                Microsoft.CodeAnalysis.CSharp.Syntax.NameSyntax
                f_10306_129914_129951(Microsoft.CodeAnalysis.SyntaxNode
                syntax, out string
                nameString)
                {
                    var return_v = GetNameSyntax(syntax, out nameString);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 129914, 129951);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 129792, 129963);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 129792, 129963);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        internal static NameSyntax GetNameSyntax(SyntaxNode syntax, out string nameString)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterStaticMethod(10306, 130326, 131748);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 130433, 130459);

                nameString = string.Empty;
                try
                {
                    while ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 130473, 131737) || true) && (true)
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 130473, 131737);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 130518, 131722);

                        switch (f_10306_130526_130539(syntax))
                        {

                            case SyntaxKind.PredefinedType:
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 130518, 131722);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 130638, 130700);

                                nameString = ((PredefinedTypeSyntax)syntax).Keyword.ValueText;
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 130726, 130738);

                                return null;
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 130518, 131722);

                            case SyntaxKind.SimpleLambdaExpression:
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 130518, 131722);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 130825, 130881);

                                nameString = f_10306_130838_130869(MessageID.IDS_Lambda).ToString();
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 130907, 130919);

                                return null;
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 130518, 131722);

                            case SyntaxKind.ParenthesizedExpression:
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 130518, 131722);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 131007, 131067);

                                syntax = f_10306_131016_131066(((ParenthesizedExpressionSyntax)syntax));
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 131093, 131102);

                                continue;
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 130518, 131722);

                            case SyntaxKind.CastExpression:
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 130518, 131722);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 131181, 131232);

                                syntax = f_10306_131190_131231(((CastExpressionSyntax)syntax));
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 131258, 131267);

                                continue;
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 130518, 131722);

                            case SyntaxKind.SimpleMemberAccessExpression:
                            case SyntaxKind.PointerMemberAccessExpression:
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 130518, 131722);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 131428, 131479);

                                return f_10306_131435_131478(((MemberAccessExpressionSyntax)syntax));
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 130518, 131722);

                            case SyntaxKind.MemberBindingExpression:
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 130518, 131722);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 131567, 131619);

                                return f_10306_131574_131618(((MemberBindingExpressionSyntax)syntax));
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 130518, 131722);

                            default:
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 130518, 131722);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 131675, 131703);

                                return syntax as NameSyntax;
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 130518, 131722);
                        }
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 130473, 131737);
                    }
                }
                catch (System.Exception)
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoopByException(10306, 130473, 131737);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoop(10306, 130473, 131737);
                }
                DynAbs.Tracing.TraceSender.TraceExitStaticMethod(10306, 130326, 131748);

                Microsoft.CodeAnalysis.CSharp.SyntaxKind
                f_10306_130526_130539(Microsoft.CodeAnalysis.SyntaxNode
                node)
                {
                    var return_v = node.Kind();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 130526, 130539);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.LocalizableErrorArgument
                f_10306_130838_130869(Microsoft.CodeAnalysis.CSharp.MessageID
                id)
                {
                    var return_v = id.Localize();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 130838, 130869);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                f_10306_131016_131066(Microsoft.CodeAnalysis.CSharp.Syntax.ParenthesizedExpressionSyntax
                this_param)
                {
                    var return_v = this_param.Expression;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 131016, 131066);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                f_10306_131190_131231(Microsoft.CodeAnalysis.CSharp.Syntax.CastExpressionSyntax
                this_param)
                {
                    var return_v = this_param.Expression;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 131190, 131231);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Syntax.SimpleNameSyntax
                f_10306_131435_131478(Microsoft.CodeAnalysis.CSharp.Syntax.MemberAccessExpressionSyntax
                this_param)
                {
                    var return_v = this_param.Name;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 131435, 131478);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Syntax.SimpleNameSyntax
                f_10306_131574_131618(Microsoft.CodeAnalysis.CSharp.Syntax.MemberBindingExpressionSyntax
                this_param)
                {
                    var return_v = this_param.Name;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 131574, 131618);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 130326, 131748);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 130326, 131748);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private static string GetName(ExpressionSyntax syntax)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterStaticMethod(10306, 132001, 132355);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 132080, 132098);

                string
                nameString
                = default(string);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 132112, 132167);

                var
                nameSyntax = f_10306_132129_132166(syntax, out nameString)
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 132181, 132312) || true) && (nameSyntax != null)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 132181, 132312);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 132237, 132297);

                    return f_10306_132244_132275(nameSyntax).Identifier.ValueText;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 132181, 132312);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 132326, 132344);

                return nameString;
                DynAbs.Tracing.TraceSender.TraceExitStaticMethod(10306, 132001, 132355);

                Microsoft.CodeAnalysis.CSharp.Syntax.NameSyntax
                f_10306_132129_132166(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                syntax, out string
                nameString)
                {
                    var return_v = GetNameSyntax((Microsoft.CodeAnalysis.SyntaxNode)syntax, out nameString);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 132129, 132166);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Syntax.SimpleNameSyntax
                f_10306_132244_132275(Microsoft.CodeAnalysis.CSharp.Syntax.NameSyntax
                this_param)
                {
                    var return_v = this_param.GetUnqualifiedName();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 132244, 132275);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 132001, 132355);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 132001, 132355);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private void BindArgumentsAndNames(ArgumentListSyntax argumentListOpt, DiagnosticBag diagnostics, AnalyzedArguments result, bool allowArglist = false, bool isDelegateCreation = false)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10306, 132489, 132908);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 132697, 132897) || true) && (argumentListOpt != null)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 132697, 132897);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 132758, 132882);

                    f_10306_132758_132881(this, f_10306_132780_132805(argumentListOpt), diagnostics, result, allowArglist, isDelegateCreation: isDelegateCreation);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 132697, 132897);
                }
                DynAbs.Tracing.TraceSender.TraceExitMethod(10306, 132489, 132908);

                Microsoft.CodeAnalysis.SeparatedSyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentSyntax>
                f_10306_132780_132805(Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentListSyntax
                this_param)
                {
                    var return_v = this_param.Arguments;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 132780, 132805);
                    return return_v;
                }


                int
                f_10306_132758_132881(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.SeparatedSyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentSyntax>
                arguments, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.AnalyzedArguments
                result, bool
                allowArglist, bool
                isDelegateCreation)
                {
                    this_param.BindArgumentsAndNames(arguments, diagnostics, result, allowArglist, isDelegateCreation: isDelegateCreation);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 132758, 132881);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 132489, 132908);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 132489, 132908);
            }
        }

        private void BindArgumentsAndNames(BracketedArgumentListSyntax argumentListOpt, DiagnosticBag diagnostics, AnalyzedArguments result)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10306, 132920, 133255);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 133077, 133244) || true) && (argumentListOpt != null)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 133077, 133244);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 133138, 133229);

                    f_10306_133138_133228(this, f_10306_133160_133185(argumentListOpt), diagnostics, result, allowArglist: false);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 133077, 133244);
                }
                DynAbs.Tracing.TraceSender.TraceExitMethod(10306, 132920, 133255);

                Microsoft.CodeAnalysis.SeparatedSyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentSyntax>
                f_10306_133160_133185(Microsoft.CodeAnalysis.CSharp.Syntax.BracketedArgumentListSyntax
                this_param)
                {
                    var return_v = this_param.Arguments;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 133160, 133185);
                    return return_v;
                }


                int
                f_10306_133138_133228(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.SeparatedSyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentSyntax>
                arguments, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.AnalyzedArguments
                result, bool
                allowArglist)
                {
                    this_param.BindArgumentsAndNames(arguments, diagnostics, result, allowArglist: allowArglist);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 133138, 133228);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 132920, 133255);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 132920, 133255);
            }
        }

        private void BindArgumentsAndNames(
                    SeparatedSyntaxList<ArgumentSyntax> arguments,
                    DiagnosticBag diagnostics,
                    AnalyzedArguments result,
                    bool allowArglist,
                    bool isDelegateCreation = false)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10306, 133267, 134182);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 133686, 133708);

                bool
                hadError = false
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 133862, 133895);

                bool
                hadLangVersionError = false
                ;
                try
                {
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 133911, 134171);
                    foreach (var argumentSyntax in f_10306_133942_133951_I(arguments))
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 133911, 134171);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 133985, 134156);

                        f_10306_133985_134155(this, result, diagnostics, ref hadError, ref hadLangVersionError, argumentSyntax, allowArglist, isDelegateCreation: isDelegateCreation);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 133911, 134171);
                    }
                }
                catch (System.Exception)
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoopByException(10306, 1, 261);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoop(10306, 1, 261);
                }
                DynAbs.Tracing.TraceSender.TraceExitMethod(10306, 133267, 134182);

                int
                f_10306_133985_134155(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.AnalyzedArguments
                result, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, ref bool
                hadError, ref bool
                hadLangVersionError, Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentSyntax
                argumentSyntax, bool
                allowArglist, bool
                isDelegateCreation)
                {
                    this_param.BindArgumentAndName(result, diagnostics, ref hadError, ref hadLangVersionError, argumentSyntax, allowArglist, isDelegateCreation: isDelegateCreation);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 133985, 134155);
                    return 0;
                }


                Microsoft.CodeAnalysis.SeparatedSyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentSyntax>
                f_10306_133942_133951_I(Microsoft.CodeAnalysis.SeparatedSyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentSyntax>
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 133942, 133951);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 133267, 134182);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 133267, 134182);
            }
        }

        private bool RefMustBeObeyed(bool isDelegateCreation, ArgumentSyntax argumentSyntax)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10306, 134194, 135725);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 134303, 134423) || true) && (f_10306_134307_134339(f_10306_134307_134318()) || (DynAbs.Tracing.TraceSender.Expression_False(10306, 134307, 134362) || !isDelegateCreation))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 134303, 134423);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 134396, 134408);

                    return true;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 134303, 134423);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 134439, 135714);

                switch (f_10306_134447_134479(f_10306_134447_134472(argumentSyntax)))
                {

                    case SyntaxKind.ParenthesizedLambdaExpression:
                    case SyntaxKind.SimpleLambdaExpression:
                    case SyntaxKind.AnonymousMethodExpression:
                    case SyntaxKind.InvocationExpression:
                    case SyntaxKind.ObjectCreationExpression:
                    case SyntaxKind.ImplicitObjectCreationExpression:
                    case SyntaxKind.ParenthesizedExpression: // this is never allowed in legacy compiler
                    case SyntaxKind.DeclarationExpression:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 134439, 135714);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 135307, 135319);

                        return true;
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 134439, 135714);

                    default:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 134439, 135714);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 135686, 135699);

                        return false;
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 134439, 135714);
                }
                DynAbs.Tracing.TraceSender.TraceExitMethod(10306, 134194, 135725);

                Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                f_10306_134307_134318()
                {
                    var return_v = Compilation;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 134307, 134318);
                    return return_v;
                }


                bool
                f_10306_134307_134339(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param)
                {
                    var return_v = this_param.FeatureStrictEnabled;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 134307, 134339);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                f_10306_134447_134472(Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentSyntax
                this_param)
                {
                    var return_v = this_param.Expression;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 134447, 134472);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.SyntaxKind
                f_10306_134447_134479(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                this_param)
                {
                    var return_v = this_param.Kind();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 134447, 134479);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 134194, 135725);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 134194, 135725);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private void BindArgumentAndName(
                    AnalyzedArguments result,
                    DiagnosticBag diagnostics,
                    ref bool hadError,
                    ref bool hadLangVersionError,
                    ArgumentSyntax argumentSyntax,
                    bool allowArglist,
                    bool isDelegateCreation = false)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10306, 135737, 137893);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 136071, 136144);

                RefKind
                origRefKind = f_10306_136093_136143(argumentSyntax.RefOrOutKeyword.Kind())
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 136434, 136564);

                RefKind
                refKind = (DynAbs.Tracing.TraceSender.Conditional_F1(10306, 136452, 136534) || (((origRefKind == RefKind.None || (DynAbs.Tracing.TraceSender.Expression_False(10306, 136452, 136534) || f_10306_136483_136534(this, isDelegateCreation, argumentSyntax))) && DynAbs.Tracing.TraceSender.Conditional_F2(10306, 136537, 136548)) || DynAbs.Tracing.TraceSender.Conditional_F3(10306, 136551, 136563))) ? origRefKind : RefKind.None
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 136580, 136682);

                BoundExpression
                boundArgument = f_10306_136612_136681(this, diagnostics, argumentSyntax, allowArglist, refKind)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 136698, 136950);

                f_10306_136698_136949(this, result, diagnostics, ref hadLangVersionError, argumentSyntax, boundArgument, f_10306_136898_136922(argumentSyntax), refKind);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 137054, 137680) || true) && (!hadError && (DynAbs.Tracing.TraceSender.Expression_True(10306, 137058, 137089) && isDelegateCreation) && (DynAbs.Tracing.TraceSender.Expression_True(10306, 137058, 137120) && origRefKind != RefKind.None) && (DynAbs.Tracing.TraceSender.Expression_True(10306, 137058, 137151) && f_10306_137124_137146(result.Arguments) == 1))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 137054, 137680);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 137185, 137214);

                    var
                    arg = f_10306_137195_137213(result, 0)
                    ;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 137232, 137665);

                    switch (f_10306_137240_137248(arg))
                    {

                        case BoundKind.PropertyAccess:
                        case BoundKind.IndexerAccess:
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 137232, 137665);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 137397, 137500);

                            var
                            requiredValueKind = (DynAbs.Tracing.TraceSender.Conditional_F1(10306, 137421, 137446) || ((origRefKind == RefKind.In && DynAbs.Tracing.TraceSender.Conditional_F2(10306, 137449, 137474)) || DynAbs.Tracing.TraceSender.Conditional_F3(10306, 137477, 137499))) ? BindValueKind.ReadonlyRef : BindValueKind.RefOrOut
                            ;
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 137526, 137613);

                            hadError = !f_10306_137538_137612(this, argumentSyntax, arg, requiredValueKind, false, diagnostics);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 137639, 137646);

                            return;
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 137232, 137665);
                    }
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 137054, 137680);
                }

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 137696, 137882) || true) && (argumentSyntax.RefOrOutKeyword.Kind() != SyntaxKind.None)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 137696, 137882);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 137790, 137867);

                    f_10306_137790_137866(f_10306_137790_137815(argumentSyntax), diagnostics);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 137696, 137882);
                }
                DynAbs.Tracing.TraceSender.TraceExitMethod(10306, 135737, 137893);

                Microsoft.CodeAnalysis.RefKind
                f_10306_136093_136143(Microsoft.CodeAnalysis.CSharp.SyntaxKind
                syntaxKind)
                {
                    var return_v = syntaxKind.GetRefKind();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 136093, 136143);
                    return return_v;
                }


                bool
                f_10306_136483_136534(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, bool
                isDelegateCreation, Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentSyntax
                argumentSyntax)
                {
                    var return_v = this_param.RefMustBeObeyed(isDelegateCreation, argumentSyntax);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 136483, 136534);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_136612_136681(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentSyntax
                argumentSyntax, bool
                allowArglist, Microsoft.CodeAnalysis.RefKind
                refKind)
                {
                    var return_v = this_param.BindArgumentValue(diagnostics, argumentSyntax, allowArglist, refKind);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 136612, 136681);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Syntax.NameColonSyntax?
                f_10306_136898_136922(Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentSyntax
                this_param)
                {
                    var return_v = this_param.NameColon;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 136898, 136922);
                    return return_v;
                }


                int
                f_10306_136698_136949(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.AnalyzedArguments
                result, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, ref bool
                hadLangVersionError, Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentSyntax
                argumentSyntax, Microsoft.CodeAnalysis.CSharp.BoundExpression
                boundArgumentExpression, Microsoft.CodeAnalysis.CSharp.Syntax.NameColonSyntax?
                nameColonSyntax, Microsoft.CodeAnalysis.RefKind
                refKind)
                {
                    this_param.BindArgumentAndName(result, diagnostics, ref hadLangVersionError, (Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode)argumentSyntax, boundArgumentExpression, nameColonSyntax, refKind);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 136698, 136949);
                    return 0;
                }


                int
                f_10306_137124_137146(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                this_param)
                {
                    var return_v = this_param.Count;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 137124, 137146);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_137195_137213(Microsoft.CodeAnalysis.CSharp.AnalyzedArguments
                this_param, int
                i)
                {
                    var return_v = this_param.Argument(i);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 137195, 137213);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundKind
                f_10306_137240_137248(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.Kind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 137240, 137248);
                    return return_v;
                }


                bool
                f_10306_137538_137612(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentSyntax
                node, Microsoft.CodeAnalysis.CSharp.BoundExpression
                expr, Microsoft.CodeAnalysis.CSharp.Binder.BindValueKind
                valueKind, bool
                checkingReceiver, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.CheckValueKind((Microsoft.CodeAnalysis.SyntaxNode)node, expr, valueKind, checkingReceiver, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 137538, 137612);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                f_10306_137790_137815(Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentSyntax
                this_param)
                {
                    var return_v = this_param.Expression;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 137790, 137815);
                    return return_v;
                }


                int
                f_10306_137790_137866(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                expression, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    expression.CheckDeconstructionCompatibleArgument(diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 137790, 137866);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 135737, 137893);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 135737, 137893);
            }
        }

        private BoundExpression BindArgumentValue(DiagnosticBag diagnostics, ArgumentSyntax argumentSyntax, bool allowArglist, RefKind refKind)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10306, 137905, 138582);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 138065, 138462) || true) && (f_10306_138069_138101(f_10306_138069_138094(argumentSyntax)) == SyntaxKind.DeclarationExpression)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 138065, 138462);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 138171, 138254);

                    var
                    declarationExpression = (DeclarationExpressionSyntax)f_10306_138228_138253(argumentSyntax)
                    ;

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 138272, 138447) || true) && (f_10306_138276_138316(declarationExpression))
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 138272, 138447);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 138358, 138428);

                        return f_10306_138365_138427(this, declarationExpression, diagnostics);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 138272, 138447);
                    }
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 138065, 138462);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 138478, 138571);

                return f_10306_138485_138570(this, diagnostics, f_10306_138521_138546(argumentSyntax), refKind, allowArglist);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10306, 137905, 138582);

                Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                f_10306_138069_138094(Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentSyntax
                this_param)
                {
                    var return_v = this_param.Expression;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 138069, 138094);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.SyntaxKind
                f_10306_138069_138101(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                this_param)
                {
                    var return_v = this_param.Kind();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 138069, 138101);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                f_10306_138228_138253(Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentSyntax
                this_param)
                {
                    var return_v = this_param.Expression;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 138228, 138253);
                    return return_v;
                }


                bool
                f_10306_138276_138316(Microsoft.CodeAnalysis.CSharp.Syntax.DeclarationExpressionSyntax
                p)
                {
                    var return_v = p.IsOutDeclaration();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 138276, 138316);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_138365_138427(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.DeclarationExpressionSyntax
                declarationExpression, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.BindOutDeclarationArgument(declarationExpression, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 138365, 138427);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                f_10306_138521_138546(Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentSyntax
                this_param)
                {
                    var return_v = this_param.Expression;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 138521, 138546);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_138485_138570(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                argumentExpression, Microsoft.CodeAnalysis.RefKind
                refKind, bool
                allowArglist)
                {
                    var return_v = this_param.BindArgumentExpression(diagnostics, argumentExpression, refKind, allowArglist);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 138485, 138570);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 137905, 138582);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 137905, 138582);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private BoundExpression BindOutDeclarationArgument(DeclarationExpressionSyntax declarationExpression, DiagnosticBag diagnostics)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10306, 138594, 139979);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 138747, 138798);

                TypeSyntax
                typeSyntax = f_10306_138771_138797(declarationExpression)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 138812, 138886);

                VariableDesignationSyntax
                designation = f_10306_138852_138885(declarationExpression)
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 138902, 139087) || true) && (f_10306_138906_138929(typeSyntax) != RefKind.None)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 138902, 139087);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 138979, 139072);

                    f_10306_138979_139071(diagnostics, ErrorCode.ERR_OutVariableCannotBeByRef, f_10306_139035_139070(f_10306_139035_139061(declarationExpression)));
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 138902, 139087);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 139103, 139968);

                switch (f_10306_139111_139129(designation))
                {

                    case SyntaxKind.DiscardDesignation:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 139103, 139968);
                        {
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 139247, 139258);

                            bool
                            isVar
                            = default(bool);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 139284, 139305);

                            bool
                            isConst = false
                            ;
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 139331, 139349);

                            AliasSymbol
                            alias
                            = default(AliasSymbol);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 139375, 139495);

                            var
                            declType = f_10306_139390_139494(this, designation, diagnostics, typeSyntax, ref isConst, out isVar, out alias)
                            ;
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 139521, 139561);

                            f_10306_139521_139560(isVar != declType.HasType);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 139589, 139661);

                            return f_10306_139596_139660(declarationExpression, declType.Type);
                        }
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 139103, 139968);

                    case SyntaxKind.SingleVariableDesignation:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 139103, 139968);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 139766, 139844);

                        return f_10306_139773_139843(this, declarationExpression, diagnostics);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 139103, 139968);

                    default:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 139103, 139968);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 139892, 139953);

                        throw f_10306_139898_139952(f_10306_139933_139951(designation));
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 139103, 139968);
                }
                DynAbs.Tracing.TraceSender.TraceExitMethod(10306, 138594, 139979);

                Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax
                f_10306_138771_138797(Microsoft.CodeAnalysis.CSharp.Syntax.DeclarationExpressionSyntax
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 138771, 138797);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Syntax.VariableDesignationSyntax
                f_10306_138852_138885(Microsoft.CodeAnalysis.CSharp.Syntax.DeclarationExpressionSyntax
                this_param)
                {
                    var return_v = this_param.Designation;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 138852, 138885);
                    return return_v;
                }


                Microsoft.CodeAnalysis.RefKind
                f_10306_138906_138929(Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax
                syntax)
                {
                    var return_v = syntax.GetRefKind();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 138906, 138929);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax
                f_10306_139035_139061(Microsoft.CodeAnalysis.CSharp.Syntax.DeclarationExpressionSyntax
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 139035, 139061);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Location
                f_10306_139035_139070(Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax
                this_param)
                {
                    var return_v = this_param.Location;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 139035, 139070);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo
                f_10306_138979_139071(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, Microsoft.CodeAnalysis.Location
                location)
                {
                    var return_v = diagnostics.Add(code, location);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 138979, 139071);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.SyntaxKind
                f_10306_139111_139129(Microsoft.CodeAnalysis.CSharp.Syntax.VariableDesignationSyntax
                this_param)
                {
                    var return_v = this_param.Kind();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 139111, 139129);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                f_10306_139390_139494(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.VariableDesignationSyntax
                declarationNode, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax
                typeSyntax, ref bool
                isConst, out bool
                isVar, out Microsoft.CodeAnalysis.CSharp.Symbols.AliasSymbol
                alias)
                {
                    var return_v = this_param.BindVariableTypeWithAnnotations((Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode)declarationNode, diagnostics, typeSyntax, ref isConst, out isVar, out alias);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 139390, 139494);
                    return return_v;
                }


                int
                f_10306_139521_139560(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 139521, 139560);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.BoundDiscardExpression
                f_10306_139596_139660(Microsoft.CodeAnalysis.CSharp.Syntax.DeclarationExpressionSyntax
                syntax, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                type)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.BoundDiscardExpression((Microsoft.CodeAnalysis.SyntaxNode)syntax, type);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 139596, 139660);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_139773_139843(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.DeclarationExpressionSyntax
                declarationExpression, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.BindOutVariableDeclarationArgument(declarationExpression, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 139773, 139843);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.SyntaxKind
                f_10306_139933_139951(Microsoft.CodeAnalysis.CSharp.Syntax.VariableDesignationSyntax
                this_param)
                {
                    var return_v = this_param.Kind();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 139933, 139951);
                    return return_v;
                }


                System.Exception
                f_10306_139898_139952(Microsoft.CodeAnalysis.CSharp.SyntaxKind
                o)
                {
                    var return_v = ExceptionUtilities.UnexpectedValue((object)o);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 139898, 139952);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 138594, 139979);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 138594, 139979);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private BoundExpression BindOutVariableDeclarationArgument(
                     DeclarationExpressionSyntax declarationExpression,
                     DiagnosticBag diagnostics)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10306, 139991, 143316);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 140181, 140239);

                f_10306_140181_140238(f_10306_140194_140237(declarationExpression));
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 140253, 140264);

                bool
                isVar
                = default(bool);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 140278, 140363);

                var
                designation = (SingleVariableDesignationSyntax)f_10306_140329_140362(declarationExpression)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 140377, 140428);

                TypeSyntax
                typeSyntax = f_10306_140401_140427(declarationExpression)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 140477, 140550);

                SourceLocalSymbol
                localSymbol = f_10306_140509_140549(this, f_10306_140526_140548(designation))
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 140564, 141877) || true) && ((object)localSymbol != null)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 140564, 141877);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 140629, 140707);

                    f_10306_140629_140706(f_10306_140642_140669(localSymbol) == LocalDeclarationKind.OutVariable);

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 140725, 141039) || true) && ((f_10306_140730_140754() || (DynAbs.Tracing.TraceSender.Expression_False(10306, 140730, 140776) || f_10306_140758_140776())) && (DynAbs.Tracing.TraceSender.Expression_True(10306, 140729, 140851) && f_10306_140781_140827(f_10306_140781_140822(f_10306_140781_140805())) == SymbolKind.NamedType))
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 140725, 141039);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 140893, 141020);

                        f_10306_140893_141019(declarationExpression, MessageID.IDS_FeatureExpressionVariablesInQueriesAndInitializers, diagnostics);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 140725, 141039);
                    }
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 141059, 141080);

                    bool
                    isConst = false
                    ;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 141098, 141116);

                    AliasSymbol
                    alias
                    = default(AliasSymbol);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 141134, 141264);

                    var
                    declType = f_10306_141149_141263(this, declarationExpression, diagnostics, typeSyntax, ref isConst, out isVar, out alias)
                    ;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 141284, 141374);

                    f_10306_141284_141373(f_10306_141284_141307(localSymbol), localSymbol, diagnostics);

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 141394, 141545) || true) && (isVar)
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 141394, 141545);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 141445, 141526);

                        return f_10306_141452_141525(declarationExpression, localSymbol, null);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 141394, 141545);
                    }
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 141565, 141669);

                    f_10306_141565_141668(f_10306_141598_141627(this), declType.Type, diagnostics, typeSyntax);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 141689, 141862);

                    return f_10306_141696_141861(declarationExpression, localSymbol, BoundLocalDeclarationKind.WithExplicitType, constantValueOpt: null, isNullableUnknown: false, type: declType.Type);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 140564, 141877);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 141926, 142010);

                GlobalExpressionVariable
                expressionVariableField = f_10306_141977_142009(this, designation)
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 142026, 142248) || true) && ((object)expressionVariableField == null)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 142026, 142248);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 142196, 142233);

                    throw f_10306_142202_142232();
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 142026, 142248);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 142264, 142361);

                BoundExpression
                receiver = f_10306_142291_142360(this, designation, expressionVariableField, diagnostics)
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 142377, 142786) || true) && (f_10306_142381_142397(typeSyntax))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 142377, 142786);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 142431, 142473);

                    var
                    ignored = f_10306_142445_142472()
                    ;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 142491, 142551);

                    f_10306_142491_142550(this, typeSyntax, ignored, out isVar);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 142569, 142584);

                    f_10306_142569_142583(ignored);

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 142604, 142771) || true) && (isVar)
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 142604, 142771);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 142655, 142752);

                        return f_10306_142662_142751(declarationExpression, expressionVariableField, receiver);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 142604, 142771);
                    }
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 142377, 142786);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 142802, 142890);

                TypeSymbol
                fieldType = f_10306_142825_142884(expressionVariableField, f_10306_142862_142883(this)).Type
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 142904, 143305);

                return f_10306_142911_143304(declarationExpression, receiver, expressionVariableField, null, LookupResultKind.Viable, isDeclaration: true, type: fieldType);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10306, 139991, 143316);

                bool
                f_10306_140194_140237(Microsoft.CodeAnalysis.CSharp.Syntax.DeclarationExpressionSyntax
                p)
                {
                    var return_v = p.IsOutVarDeclaration();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 140194, 140237);
                    return return_v;
                }


                int
                f_10306_140181_140238(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 140181, 140238);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.Syntax.VariableDesignationSyntax
                f_10306_140329_140362(Microsoft.CodeAnalysis.CSharp.Syntax.DeclarationExpressionSyntax
                this_param)
                {
                    var return_v = this_param.Designation;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 140329, 140362);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax
                f_10306_140401_140427(Microsoft.CodeAnalysis.CSharp.Syntax.DeclarationExpressionSyntax
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 140401, 140427);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SyntaxToken
                f_10306_140526_140548(Microsoft.CodeAnalysis.CSharp.Syntax.SingleVariableDesignationSyntax
                this_param)
                {
                    var return_v = this_param.Identifier;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 140526, 140548);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.SourceLocalSymbol
                f_10306_140509_140549(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.SyntaxToken
                nameToken)
                {
                    var return_v = this_param.LookupLocal(nameToken);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 140509, 140549);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.LocalDeclarationKind
                f_10306_140642_140669(Microsoft.CodeAnalysis.CSharp.Symbols.SourceLocalSymbol
                this_param)
                {
                    var return_v = this_param.DeclarationKind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 140642, 140669);
                    return return_v;
                }


                int
                f_10306_140629_140706(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 140629, 140706);
                    return 0;
                }


                bool
                f_10306_140730_140754()
                {
                    var return_v = InConstructorInitializer;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 140730, 140754);
                    return return_v;
                }


                bool
                f_10306_140758_140776()
                {
                    var return_v = InFieldInitializer;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 140758, 140776);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbol?
                f_10306_140781_140805()
                {
                    var return_v = ContainingMemberOrLambda;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 140781, 140805);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbol
                f_10306_140781_140822(Microsoft.CodeAnalysis.CSharp.Symbol?
                this_param)
                {
                    var return_v = this_param.ContainingSymbol;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 140781, 140822);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SymbolKind
                f_10306_140781_140827(Microsoft.CodeAnalysis.CSharp.Symbol
                this_param)
                {
                    var return_v = this_param.Kind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 140781, 140827);
                    return return_v;
                }


                bool
                f_10306_140893_141019(Microsoft.CodeAnalysis.CSharp.Syntax.DeclarationExpressionSyntax
                syntax, Microsoft.CodeAnalysis.CSharp.MessageID
                feature, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = CheckFeatureAvailability((Microsoft.CodeAnalysis.SyntaxNode)syntax, feature, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 140893, 141019);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                f_10306_141149_141263(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.DeclarationExpressionSyntax
                declarationNode, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax
                typeSyntax, ref bool
                isConst, out bool
                isVar, out Microsoft.CodeAnalysis.CSharp.Symbols.AliasSymbol
                alias)
                {
                    var return_v = this_param.BindVariableTypeWithAnnotations((Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode)declarationNode, diagnostics, typeSyntax, ref isConst, out isVar, out alias);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 141149, 141263);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Binder
                f_10306_141284_141307(Microsoft.CodeAnalysis.CSharp.Symbols.SourceLocalSymbol
                this_param)
                {
                    var return_v = this_param.ScopeBinder;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 141284, 141307);
                    return return_v;
                }


                bool
                f_10306_141284_141373(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.SourceLocalSymbol
                symbol, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.ValidateDeclarationNameConflictsInScope((Microsoft.CodeAnalysis.CSharp.Symbol)symbol, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 141284, 141373);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.OutVariablePendingInference
                f_10306_141452_141525(Microsoft.CodeAnalysis.CSharp.Syntax.DeclarationExpressionSyntax
                syntax, Microsoft.CodeAnalysis.CSharp.Symbols.SourceLocalSymbol
                variableSymbol, Microsoft.CodeAnalysis.CSharp.BoundExpression?
                receiverOpt)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.OutVariablePendingInference((Microsoft.CodeAnalysis.SyntaxNode)syntax, (Microsoft.CodeAnalysis.CSharp.Symbol)variableSymbol, receiverOpt);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 141452, 141525);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbol?
                f_10306_141598_141627(Microsoft.CodeAnalysis.CSharp.Binder
                this_param)
                {
                    var return_v = this_param.ContainingMemberOrLambda;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 141598, 141627);
                    return return_v;
                }


                bool
                f_10306_141565_141668(Microsoft.CodeAnalysis.CSharp.Symbol?
                containingSymbol, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                type, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax
                syntax)
                {
                    var return_v = CheckRestrictedTypeInAsyncMethod(containingSymbol, type, diagnostics, (Microsoft.CodeAnalysis.SyntaxNode)syntax);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 141565, 141668);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundLocal
                f_10306_141696_141861(Microsoft.CodeAnalysis.CSharp.Syntax.DeclarationExpressionSyntax
                syntax, Microsoft.CodeAnalysis.CSharp.Symbols.SourceLocalSymbol
                localSymbol, Microsoft.CodeAnalysis.CSharp.BoundLocalDeclarationKind
                declarationKind, Microsoft.CodeAnalysis.ConstantValue?
                constantValueOpt, bool
                isNullableUnknown, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                type)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.BoundLocal((Microsoft.CodeAnalysis.SyntaxNode)syntax, (Microsoft.CodeAnalysis.CSharp.Symbols.LocalSymbol)localSymbol, declarationKind, constantValueOpt: constantValueOpt, isNullableUnknown: isNullableUnknown, type: type);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 141696, 141861);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.GlobalExpressionVariable
                f_10306_141977_142009(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.SingleVariableDesignationSyntax
                variableDesignator)
                {
                    var return_v = this_param.LookupDeclaredField(variableDesignator);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 141977, 142009);
                    return return_v;
                }


                System.Exception
                f_10306_142202_142232()
                {
                    var return_v = ExceptionUtilities.Unreachable;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 142202, 142232);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_142291_142360(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.SingleVariableDesignationSyntax
                node, Microsoft.CodeAnalysis.CSharp.Symbols.GlobalExpressionVariable
                member, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.SynthesizeReceiver((Microsoft.CodeAnalysis.SyntaxNode)node, (Microsoft.CodeAnalysis.CSharp.Symbol)member, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 142291, 142360);
                    return return_v;
                }


                bool
                f_10306_142381_142397(Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax
                this_param)
                {
                    var return_v = this_param.IsVar;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 142381, 142397);
                    return return_v;
                }


                Microsoft.CodeAnalysis.DiagnosticBag
                f_10306_142445_142472()
                {
                    var return_v = DiagnosticBag.GetInstance();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 142445, 142472);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Binder.NamespaceOrTypeOrAliasSymbolWithAnnotations
                f_10306_142491_142550(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax
                syntax, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, out bool
                isVar)
                {
                    var return_v = this_param.BindTypeOrAliasOrVarKeyword(syntax, diagnostics, out isVar);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 142491, 142550);
                    return return_v;
                }


                int
                f_10306_142569_142583(Microsoft.CodeAnalysis.DiagnosticBag
                this_param)
                {
                    this_param.Free();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 142569, 142583);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.OutVariablePendingInference
                f_10306_142662_142751(Microsoft.CodeAnalysis.CSharp.Syntax.DeclarationExpressionSyntax
                syntax, Microsoft.CodeAnalysis.CSharp.Symbols.GlobalExpressionVariable
                variableSymbol, Microsoft.CodeAnalysis.CSharp.BoundExpression
                receiverOpt)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.OutVariablePendingInference((Microsoft.CodeAnalysis.SyntaxNode)syntax, (Microsoft.CodeAnalysis.CSharp.Symbol)variableSymbol, receiverOpt);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 142662, 142751);
                    return return_v;
                }


                Roslyn.Utilities.ConsList<Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol>
                f_10306_142862_142883(Microsoft.CodeAnalysis.CSharp.Binder
                this_param)
                {
                    var return_v = this_param.FieldsBeingBound;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 142862, 142883);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                f_10306_142825_142884(Microsoft.CodeAnalysis.CSharp.Symbols.GlobalExpressionVariable
                this_param, Roslyn.Utilities.ConsList<Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol>
                fieldsBeingBound)
                {
                    var return_v = this_param.GetFieldType(fieldsBeingBound);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 142825, 142884);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundFieldAccess
                f_10306_142911_143304(Microsoft.CodeAnalysis.CSharp.Syntax.DeclarationExpressionSyntax
                syntax, Microsoft.CodeAnalysis.CSharp.BoundExpression
                receiver, Microsoft.CodeAnalysis.CSharp.Symbols.GlobalExpressionVariable
                fieldSymbol, Microsoft.CodeAnalysis.ConstantValue?
                constantValueOpt, Microsoft.CodeAnalysis.CSharp.LookupResultKind
                resultKind, bool
                isDeclaration, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                type)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.BoundFieldAccess((Microsoft.CodeAnalysis.SyntaxNode)syntax, receiver, (Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol)fieldSymbol, constantValueOpt, resultKind, isDeclaration: isDeclaration, type: type);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 142911, 143304);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 139991, 143316);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 139991, 143316);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        internal static bool CheckRestrictedTypeInAsyncMethod(Symbol containingSymbol, TypeSymbol type, DiagnosticBag diagnostics, SyntaxNode syntax)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterStaticMethod(10306, 143442, 143945);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 143608, 143907) || true) && (f_10306_143612_143633(containingSymbol) == SymbolKind.Method
                && (DynAbs.Tracing.TraceSender.Expression_True(10306, 143612, 143715) && f_10306_143675_143715(((MethodSymbol)containingSymbol))) && (DynAbs.Tracing.TraceSender.Expression_True(10306, 143612, 143759) && f_10306_143736_143759(type)))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 143608, 143907);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 143793, 143862);

                    f_10306_143793_143861(diagnostics, ErrorCode.ERR_BadSpecialByRefLocal, syntax, type);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 143880, 143892);

                    return true;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 143608, 143907);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 143921, 143934);

                return false;
                DynAbs.Tracing.TraceSender.TraceExitStaticMethod(10306, 143442, 143945);

                Microsoft.CodeAnalysis.SymbolKind
                f_10306_143612_143633(Microsoft.CodeAnalysis.CSharp.Symbol
                this_param)
                {
                    var return_v = this_param.Kind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 143612, 143633);
                    return return_v;
                }


                bool
                f_10306_143675_143715(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                this_param)
                {
                    var return_v = this_param.IsAsync
                    ;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 143675, 143715);
                    return return_v;
                }


                bool
                f_10306_143736_143759(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                type)
                {
                    var return_v = type.IsRestrictedType();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 143736, 143759);
                    return return_v;
                }


                int
                f_10306_143793_143861(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, Microsoft.CodeAnalysis.SyntaxNode
                syntax, params object[]
                args)
                {
                    Error(diagnostics, code, (Microsoft.CodeAnalysis.SyntaxNodeOrToken)syntax, args);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 143793, 143861);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 143442, 143945);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 143442, 143945);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        internal GlobalExpressionVariable LookupDeclaredField(SingleVariableDesignationSyntax variableDesignator)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10306, 143957, 144186);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 144087, 144175);

                return f_10306_144094_144174(this, variableDesignator, variableDesignator.Identifier.ValueText);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10306, 143957, 144186);

                Microsoft.CodeAnalysis.CSharp.Symbols.GlobalExpressionVariable
                f_10306_144094_144174(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.SingleVariableDesignationSyntax
                node, string
                identifier)
                {
                    var return_v = this_param.LookupDeclaredField((Microsoft.CodeAnalysis.SyntaxNode)node, identifier);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 144094, 144174);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 143957, 144186);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 143957, 144186);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        internal GlobalExpressionVariable LookupDeclaredField(SyntaxNode node, string identifier)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10306, 144198, 144803);
                try
                {
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 144312, 144764);
                    foreach (Symbol member in f_10306_144338_144408_I(f_10306_144338_144376_I(DynAbs.Tracing.TraceSender.TraceConditionalAccessExpression(f_10306_144338_144352(), 10306, 144338, 144376)?.GetMembers(identifier)) ?? (DynAbs.Tracing.TraceSender.Expression_Null<System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>?>(10306, 144338, 144408) ?? ImmutableArray<Symbol>.Empty)))
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 144312, 144764);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 144442, 144473);

                        GlobalExpressionVariable
                        field
                        = default(GlobalExpressionVariable);

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 144491, 144749) || true) && (f_10306_144495_144506(member) == SymbolKind.Field && (DynAbs.Tracing.TraceSender.Expression_True(10306, 144495, 144626) && f_10306_144551_144607_M(DynAbs.Tracing.TraceSender.TraceConditionalAccessExpression((field = member as GlobalExpressionVariable), 10306, 144551, 144607)?.SyntaxTree) == f_10306_144611_144626(node)) && (DynAbs.Tracing.TraceSender.Expression_True(10306, 144495, 144675) && f_10306_144651_144667(field) == node))
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 144491, 144749);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 144717, 144730);

                            return field;
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 144491, 144749);
                        }
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 144312, 144764);
                    }
                }
                catch (System.Exception)
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoopByException(10306, 1, 453);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoop(10306, 1, 453);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 144780, 144792);

                return null;
                DynAbs.Tracing.TraceSender.TraceExitMethod(10306, 144198, 144803);

                Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol?
                f_10306_144338_144352()
                {
                    var return_v = ContainingType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 144338, 144352);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>?
                f_10306_144338_144376_I(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>?
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 144338, 144376);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SymbolKind
                f_10306_144495_144506(Microsoft.CodeAnalysis.CSharp.Symbol
                this_param)
                {
                    var return_v = this_param.Kind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 144495, 144506);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SyntaxTree?
                f_10306_144551_144607_M(Microsoft.CodeAnalysis.SyntaxTree?
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 144551, 144607);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SyntaxTree
                f_10306_144611_144626(Microsoft.CodeAnalysis.SyntaxNode
                this_param)
                {
                    var return_v = this_param.SyntaxTree;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 144611, 144626);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode
                f_10306_144651_144667(Microsoft.CodeAnalysis.CSharp.Symbols.GlobalExpressionVariable
                this_param)
                {
                    var return_v = this_param.SyntaxNode;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 144651, 144667);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>
                f_10306_144338_144408_I(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 144338, 144408);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 144198, 144803);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 144198, 144803);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private void BindArgumentAndName(
                    AnalyzedArguments result,
                    DiagnosticBag diagnostics,
                    ref bool hadLangVersionError,
                    CSharpSyntaxNode argumentSyntax,
                    BoundExpression boundArgumentExpression,
                    NameColonSyntax nameColonSyntax,
                    RefKind refKind)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10306, 144993, 147575);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 145349, 145441);

                f_10306_145349_145440(argumentSyntax is ArgumentSyntax || (DynAbs.Tracing.TraceSender.Expression_False(10306, 145362, 145439) || argumentSyntax is AttributeArgumentSyntax));
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 145457, 145498);

                bool
                hasRefKinds = f_10306_145476_145497(result.RefKinds)
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 145512, 146022) || true) && (refKind != RefKind.None)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 145512, 146022);

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 145687, 146007) || true) && (!hasRefKinds)
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 145687, 146007);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 145745, 145764);

                        hasRefKinds = true;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 145788, 145826);

                        int
                        argCount = f_10306_145803_145825(result.Arguments)
                        ;
                        try
                        {
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 145857, 145862);
                            for (int
        i = 0
        ; (DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 145848, 145988) || true) && (i < argCount)
        ; DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 145878, 145881)
        , ++i, DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 145848, 145988))

                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 145848, 145988);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 145931, 145965);

                                f_10306_145931_145964(result.RefKinds, RefKind.None);
                            }
                        }
                        catch (System.Exception)
                        {
                            DynAbs.Tracing.TraceSender.TraceExitLoopByException(10306, 1, 141);
                            throw;
                        }
                        finally
                        {
                            DynAbs.Tracing.TraceSender.TraceExitLoop(10306, 1, 141);
                        }
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 145687, 146007);
                    }
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 145512, 146022);
                }

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 146038, 146131) || true) && (hasRefKinds)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 146038, 146131);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 146087, 146116);

                    f_10306_146087_146115(result.RefKinds, refKind);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 146038, 146131);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 146147, 146182);

                bool
                hasNames = f_10306_146163_146181(result.Names)
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 146196, 147502) || true) && (nameColonSyntax != null)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 146196, 147502);

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 146377, 146680) || true) && (!hasNames)
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 146377, 146680);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 146432, 146448);

                        hasNames = true;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 146472, 146510);

                        int
                        argCount = f_10306_146487_146509(result.Arguments)
                        ;
                        try
                        {
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 146541, 146546);
                            for (int
        i = 0
        ; (DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 146532, 146661) || true) && (i < argCount)
        ; DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 146562, 146565)
        , ++i, DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 146532, 146661))

                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 146532, 146661);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 146615, 146638);

                                f_10306_146615_146637(result.Names, null);
                            }
                        }
                        catch (System.Exception)
                        {
                            DynAbs.Tracing.TraceSender.TraceExitLoopByException(10306, 1, 130);
                            throw;
                        }
                        finally
                        {
                            DynAbs.Tracing.TraceSender.TraceExitLoop(10306, 1, 130);
                        }
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 146377, 146680);
                    }
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 146700, 146739);

                    f_10306_146700_146738(
                                    result.Names, f_10306_146717_146737(nameColonSyntax));
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 146196, 147502);
                }

                else
                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 146196, 147502);

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 146773, 147502) || true) && (hasNames)
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 146773, 147502);

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 146901, 147444) || true) && (!hadLangVersionError && (DynAbs.Tracing.TraceSender.Expression_True(10306, 146905, 146990) && !f_10306_146930_146990(f_10306_146930_146957(f_10306_146930_146941()))))
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 146901, 147444);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 147152, 147374);

                            f_10306_147152_147373(diagnostics, ErrorCode.ERR_NamedArgumentSpecificationBeforeFixedArgument, argumentSyntax, f_10306_147273_147372(f_10306_147307_147371(MessageID.IDS_FeatureNonTrailingNamedArguments)));
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 147398, 147425);

                            hadLangVersionError = true;
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 146901, 147444);
                        }
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 147464, 147487);

                        f_10306_147464_147486(
                                        result.Names, null);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 146773, 147502);
                    }
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 146196, 147502);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 147518, 147564);

                f_10306_147518_147563(
                            result.Arguments, boundArgumentExpression);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10306, 144993, 147575);

                int
                f_10306_145349_145440(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 145349, 145440);
                    return 0;
                }


                bool
                f_10306_145476_145497(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.RefKind>
                this_param)
                {
                    var return_v = this_param.Any();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 145476, 145497);
                    return return_v;
                }


                int
                f_10306_145803_145825(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                this_param)
                {
                    var return_v = this_param.Count;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 145803, 145825);
                    return return_v;
                }


                int
                f_10306_145931_145964(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.RefKind>
                this_param, Microsoft.CodeAnalysis.RefKind
                item)
                {
                    this_param.Add(item);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 145931, 145964);
                    return 0;
                }


                int
                f_10306_146087_146115(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.RefKind>
                this_param, Microsoft.CodeAnalysis.RefKind
                item)
                {
                    this_param.Add(item);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 146087, 146115);
                    return 0;
                }


                bool
                f_10306_146163_146181(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Syntax.IdentifierNameSyntax>
                this_param)
                {
                    var return_v = this_param.Any();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 146163, 146181);
                    return return_v;
                }


                int
                f_10306_146487_146509(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                this_param)
                {
                    var return_v = this_param.Count;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 146487, 146509);
                    return return_v;
                }


                int
                f_10306_146615_146637(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Syntax.IdentifierNameSyntax>
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.IdentifierNameSyntax
                item)
                {
                    this_param.Add(item);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 146615, 146637);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.Syntax.IdentifierNameSyntax
                f_10306_146717_146737(Microsoft.CodeAnalysis.CSharp.Syntax.NameColonSyntax
                this_param)
                {
                    var return_v = this_param.Name;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 146717, 146737);
                    return return_v;
                }


                int
                f_10306_146700_146738(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Syntax.IdentifierNameSyntax>
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.IdentifierNameSyntax
                item)
                {
                    this_param.Add(item);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 146700, 146738);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                f_10306_146930_146941()
                {
                    var return_v = Compilation;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 146930, 146941);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.LanguageVersion
                f_10306_146930_146957(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param)
                {
                    var return_v = this_param.LanguageVersion;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 146930, 146957);
                    return return_v;
                }


                bool
                f_10306_146930_146990(Microsoft.CodeAnalysis.CSharp.LanguageVersion
                self)
                {
                    var return_v = self.AllowNonTrailingNamedArguments();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 146930, 146990);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.LanguageVersion
                f_10306_147307_147371(Microsoft.CodeAnalysis.CSharp.MessageID
                feature)
                {
                    var return_v = feature.RequiredVersion();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 147307, 147371);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSharpRequiredLanguageVersion
                f_10306_147273_147372(Microsoft.CodeAnalysis.CSharp.LanguageVersion
                version)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.CSharpRequiredLanguageVersion(version);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 147273, 147372);
                    return return_v;
                }


                int
                f_10306_147152_147373(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode
                syntax, params object[]
                args)
                {
                    Error(diagnostics, code, syntax, args);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 147152, 147373);
                    return 0;
                }


                int
                f_10306_147464_147486(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Syntax.IdentifierNameSyntax>
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.IdentifierNameSyntax
                item)
                {
                    this_param.Add(item);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 147464, 147486);
                    return 0;
                }


                int
                f_10306_147518_147563(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                item)
                {
                    this_param.Add(item);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 147518, 147563);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 144993, 147575);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 144993, 147575);
            }
        }

        private BoundExpression BindArgumentExpression(DiagnosticBag diagnostics, ExpressionSyntax argumentExpression, RefKind refKind, bool allowArglist)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10306, 147723, 148550);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 147894, 148169);

                BindValueKind
                valueKind =
                (DynAbs.Tracing.TraceSender.Conditional_F1(10306, 147937, 147960) || ((refKind == RefKind.None && DynAbs.Tracing.TraceSender.Conditional_F2(10306, 147988, 148008)) || DynAbs.Tracing.TraceSender.Conditional_F3(10306, 148036, 148168))) ? BindValueKind.RValue : (DynAbs.Tracing.TraceSender.Conditional_F1(10306, 148036, 148057) || ((refKind == RefKind.In && DynAbs.Tracing.TraceSender.Conditional_F2(10306, 148089, 148114)) || DynAbs.Tracing.TraceSender.Conditional_F3(10306, 148146, 148168))) ? BindValueKind.ReadonlyRef : BindValueKind.RefOrOut
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 148185, 148210);

                BoundExpression
                argument
                = default(BoundExpression);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 148224, 148507) || true) && (allowArglist)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 148224, 148507);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 148274, 148356);

                    argument = f_10306_148285_148355(this, argumentExpression, diagnostics, valueKind);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 148224, 148507);
                }

                else

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 148224, 148507);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 148422, 148492);

                    argument = f_10306_148433_148491(this, argumentExpression, diagnostics, valueKind);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 148224, 148507);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 148523, 148539);

                return argument;
                DynAbs.Tracing.TraceSender.TraceExitMethod(10306, 147723, 148550);

                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_148285_148355(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                node, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.Binder.BindValueKind
                valueKind)
                {
                    var return_v = this_param.BindValueAllowArgList(node, diagnostics, valueKind);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 148285, 148355);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_148433_148491(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                node, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.Binder.BindValueKind
                valueKind)
                {
                    var return_v = this_param.BindValue(node, diagnostics, valueKind);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 148433, 148491);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 147723, 148550);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 147723, 148550);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private void CoerceArguments<TMember>(
                    MemberResolutionResult<TMember> methodResult,
                    ArrayBuilder<BoundExpression> arguments,
                    DiagnosticBag diagnostics)
                    where TMember : Symbol
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10306, 148562, 152578);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 148814, 148847);

                var
                result = methodResult.Result
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 148945, 149013);

                var
                parameters = f_10306_148962_149012<TMember>(methodResult.LeastOverriddenMember)
                ;
                try
                {
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 149038, 149045);

                    for (int
        arg = 0
        ; (DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 149029, 152567) || true) && (arg < f_10306_149053_149068<TMember>(arguments))
        ; DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 149070, 149075)
        , ++arg, DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 149029, 152567))

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 149029, 152567);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 149109, 149149);

                        var
                        kind = result.ConversionForArg(arg)
                        ;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 149167, 149209);

                        BoundExpression
                        argument = f_10306_149194_149208<TMember>(arguments, arg)
                        ;

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 149387, 152552) || true) && (f_10306_149391_149407_M(!kind.IsIdentity))
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 149387, 152552);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 149449, 149574);

                            TypeWithAnnotations
                            parameterTypeWithAnnotations = f_10306_149500_149573<TMember>(this, ref result, parameters, arg)
                            ;

                            if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 149693, 150109) || true) && (!f_10306_149698_149729<TMember>(methodResult.Member) && (DynAbs.Tracing.TraceSender.Expression_True(10306, 149697, 149755) && f_10306_149733_149755_M(!argument.HasAnyErrors)) && (DynAbs.Tracing.TraceSender.Expression_True(10306, 149697, 149803) && f_10306_149759_149803<TMember>(parameterTypeWithAnnotations.Type)))
                            )

                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 149693, 150109);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 149943, 149998);

                                f_10306_149943_149997<TMember>(this, argument.Syntax, diagnostics);
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 149693, 150109);
                            }
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 150133, 150289);

                            arguments[arg] = f_10306_150150_150288<TMember>(this, argument.Syntax, argument, kind, isCast: false, conversionGroupOpt: null, parameterTypeWithAnnotations.Type, diagnostics);
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 149387, 152552);
                        }

                        else
                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 149387, 152552);

                            if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 150331, 152552) || true) && (f_10306_150335_150348<TMember>(argument) == BoundKind.OutVariablePendingInference)
                            )

                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 150331, 152552);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 150431, 150556);

                                TypeWithAnnotations
                                parameterTypeWithAnnotations = f_10306_150482_150555<TMember>(this, ref result, parameters, arg)
                                ;
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 150578, 150709);

                                arguments[arg] = f_10306_150595_150708<TMember>(((OutVariablePendingInference)argument), parameterTypeWithAnnotations, diagnostics);
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 150331, 152552);
                            }

                            else
                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 150331, 152552);

                                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 150751, 152552) || true) && (f_10306_150755_150768<TMember>(argument) == BoundKind.OutDeconstructVarPendingInference)
                                )

                                {
                                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 150751, 152552);
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 150857, 150982);

                                    TypeWithAnnotations
                                    parameterTypeWithAnnotations = f_10306_150908_150981<TMember>(this, ref result, parameters, arg)
                                    ;
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 151004, 151149);

                                    arguments[arg] = f_10306_151021_151148<TMember>(((OutDeconstructVarPendingInference)argument), parameterTypeWithAnnotations, this, success: true);
                                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 150751, 152552);
                                }

                                else
                                {
                                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 150751, 152552);

                                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 151191, 152552) || true) && (f_10306_151195_151208<TMember>(argument) == BoundKind.DiscardExpression && (DynAbs.Tracing.TraceSender.Expression_True(10306, 151195, 151272) && !f_10306_151244_151272<TMember>(argument)))
                                    )

                                    {
                                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 151191, 152552);
                                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 151314, 151439);

                                        TypeWithAnnotations
                                        parameterTypeWithAnnotations = f_10306_151365_151438<TMember>(this, ref result, parameters, arg)
                                        ;
                                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 151461, 151512);

                                        f_10306_151461_151511<TMember>(parameterTypeWithAnnotations.HasType);
                                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 151534, 151647);

                                        arguments[arg] = f_10306_151551_151646<TMember>(((BoundDiscardExpression)argument), parameterTypeWithAnnotations);
                                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 151191, 152552);
                                    }

                                    else
                                    {
                                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 151191, 152552);

                                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 151689, 152552) || true) && (f_10306_151693_151722<TMember>(argument))
                                        )

                                        {
                                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 151689, 152552);
                                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 151764, 151794);

                                            f_10306_151764_151793<TMember>(kind.IsIdentity);

                                            if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 151816, 152533) || true) && (argument is BoundTupleLiteral sourceTuple)
                                            )

                                            {
                                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 151816, 152533);
                                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 151911, 152036);

                                                TypeWithAnnotations
                                                parameterTypeWithAnnotations = f_10306_151962_152035<TMember>(this, ref result, parameters, arg)
                                                ;
                                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 152198, 152354);

                                                arguments[arg] = f_10306_152215_152353<TMember>(this, argument.Syntax, argument, kind, isCast: false, conversionGroupOpt: null, parameterTypeWithAnnotations.Type, diagnostics);
                                                DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 151816, 152533);
                                            }

                                            else

                                            {
                                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 151816, 152533);
                                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 152452, 152510);

                                                arguments[arg] = f_10306_152469_152509<TMember>(this, argument, diagnostics);
                                                DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 151816, 152533);
                                            }
                                            DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 151689, 152552);
                                        }
                                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 151191, 152552);
                                    }
                                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 150751, 152552);
                                }
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 150331, 152552);
                            }
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 149387, 152552);
                        }
                    }
                }
                catch (System.Exception)
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoopByException(10306, 1, 3539);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoop(10306, 1, 3539);
                }
                DynAbs.Tracing.TraceSender.TraceExitMethod(10306, 148562, 152578);

                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol>
                f_10306_148962_149012<TMember>(TMember
                member) where TMember : Symbol

                {
                    var return_v = member.GetParameters();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 148962, 149012);
                    return return_v;
                }


                int
                f_10306_149053_149068<TMember>(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                this_param) where TMember : Symbol

                {
                    var return_v = this_param.Count;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 149053, 149068);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_149194_149208<TMember>(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                this_param, int
                i0) where TMember : Symbol

                {
                    var return_v = this_param[i0];
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 149194, 149208);
                    return return_v;
                }


                bool
                f_10306_149391_149407_M(bool
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 149391, 149407);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                f_10306_149500_149573<TMember>(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, ref Microsoft.CodeAnalysis.CSharp.MemberAnalysisResult
                result, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol>
                parameters, int
                arg) where TMember : Symbol

                {
                    var return_v = this_param.GetCorrespondingParameterTypeWithAnnotations(ref result, parameters, arg);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 149500, 149573);
                    return return_v;
                }


                bool
                f_10306_149698_149729<TMember>(TMember
                symbol) where TMember : Symbol

                {
                    var return_v = symbol.IsIndexer();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 149698, 149729);
                    return return_v;
                }


                bool
                f_10306_149733_149755_M(bool
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 149733, 149755);
                    return return_v;
                }


                bool
                f_10306_149759_149803<TMember>(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                type) where TMember : Symbol

                {
                    var return_v = type.IsUnsafe();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 149759, 149803);
                    return return_v;
                }


                bool
                f_10306_149943_149997<TMember>(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.SyntaxNode
                node, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics) where TMember : Symbol

                {
                    var return_v = this_param.ReportUnsafeIfNotAllowed(node, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 149943, 149997);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_150150_150288<TMember>(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.CSharp.BoundExpression
                source, Microsoft.CodeAnalysis.CSharp.Conversion
                conversion, bool
                isCast, Microsoft.CodeAnalysis.CSharp.ConversionGroup?
                conversionGroupOpt, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                destination, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics) where TMember : Symbol

                {
                    var return_v = this_param.CreateConversion(syntax, source, conversion, isCast: isCast, conversionGroupOpt: conversionGroupOpt, destination, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 150150, 150288);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundKind
                f_10306_150335_150348<TMember>(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param) where TMember : Symbol

                {
                    var return_v = this_param.Kind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 150335, 150348);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                f_10306_150482_150555<TMember>(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, ref Microsoft.CodeAnalysis.CSharp.MemberAnalysisResult
                result, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol>
                parameters, int
                arg) where TMember : Symbol

                {
                    var return_v = this_param.GetCorrespondingParameterTypeWithAnnotations(ref result, parameters, arg);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 150482, 150555);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_150595_150708<TMember>(Microsoft.CodeAnalysis.CSharp.OutVariablePendingInference
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                type, Microsoft.CodeAnalysis.DiagnosticBag
                diagnosticsOpt) where TMember : Symbol

                {
                    var return_v = this_param.SetInferredTypeWithAnnotations(type, diagnosticsOpt);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 150595, 150708);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundKind
                f_10306_150755_150768<TMember>(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param) where TMember : Symbol

                {
                    var return_v = this_param.Kind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 150755, 150768);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                f_10306_150908_150981<TMember>(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, ref Microsoft.CodeAnalysis.CSharp.MemberAnalysisResult
                result, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol>
                parameters, int
                arg) where TMember : Symbol

                {
                    var return_v = this_param.GetCorrespondingParameterTypeWithAnnotations(ref result, parameters, arg);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 150908, 150981);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundDeconstructValuePlaceholder
                f_10306_151021_151148<TMember>(Microsoft.CodeAnalysis.CSharp.OutDeconstructVarPendingInference
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                type, Microsoft.CodeAnalysis.CSharp.Binder
                binder, bool
                success) where TMember : Symbol

                {
                    var return_v = this_param.SetInferredTypeWithAnnotations(type, binder, success: success);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 151021, 151148);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundKind
                f_10306_151195_151208<TMember>(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param) where TMember : Symbol

                {
                    var return_v = this_param.Kind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 151195, 151208);
                    return return_v;
                }


                bool
                f_10306_151244_151272<TMember>(Microsoft.CodeAnalysis.CSharp.BoundExpression
                node) where TMember : Symbol

                {
                    var return_v = node.HasExpressionType();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 151244, 151272);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                f_10306_151365_151438<TMember>(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, ref Microsoft.CodeAnalysis.CSharp.MemberAnalysisResult
                result, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol>
                parameters, int
                arg) where TMember : Symbol

                {
                    var return_v = this_param.GetCorrespondingParameterTypeWithAnnotations(ref result, parameters, arg);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 151365, 151438);
                    return return_v;
                }


                int
                f_10306_151461_151511<TMember>(bool
                condition) where TMember : Symbol

                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 151461, 151511);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_151551_151646<TMember>(Microsoft.CodeAnalysis.CSharp.BoundDiscardExpression
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                type) where TMember : Symbol

                {
                    var return_v = this_param.SetInferredTypeWithAnnotations(type);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 151551, 151646);
                    return return_v;
                }


                bool
                f_10306_151693_151722<TMember>(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param) where TMember : Symbol

                {
                    var return_v = this_param.NeedsToBeConverted();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 151693, 151722);
                    return return_v;
                }


                int
                f_10306_151764_151793<TMember>(bool
                condition) where TMember : Symbol

                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 151764, 151793);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                f_10306_151962_152035<TMember>(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, ref Microsoft.CodeAnalysis.CSharp.MemberAnalysisResult
                result, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol>
                parameters, int
                arg) where TMember : Symbol

                {
                    var return_v = this_param.GetCorrespondingParameterTypeWithAnnotations(ref result, parameters, arg);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 151962, 152035);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_152215_152353<TMember>(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.CSharp.BoundExpression
                source, Microsoft.CodeAnalysis.CSharp.Conversion
                conversion, bool
                isCast, Microsoft.CodeAnalysis.CSharp.ConversionGroup?
                conversionGroupOpt, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                destination, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics) where TMember : Symbol

                {
                    var return_v = this_param.CreateConversion(syntax, source, conversion, isCast: isCast, conversionGroupOpt: conversionGroupOpt, destination, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 152215, 152353);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_152469_152509<TMember>(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                expression, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics) where TMember : Symbol

                {
                    var return_v = this_param.BindToNaturalType(expression, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 152469, 152509);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 148562, 152578);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 148562, 152578);
            }
        }

        private TypeWithAnnotations GetCorrespondingParameterTypeWithAnnotations(ref MemberAnalysisResult result, ImmutableArray<ParameterSymbol> parameters, int arg)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10306, 152590, 153156);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 152773, 152822);

                int
                paramNum = result.ParameterFromArgument(arg)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 152836, 152888);

                var
                type = f_10306_152847_152887(parameters[paramNum])
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 152904, 153117) || true) && (paramNum == parameters.Length - 1 && (DynAbs.Tracing.TraceSender.Expression_True(10306, 152908, 153005) && result.Kind == MemberResolutionKind.ApplicableInExpandedForm))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 152904, 153117);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 153039, 153102);

                    type = f_10306_153046_153101(((ArrayTypeSymbol)type.Type));
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 152904, 153117);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 153133, 153145);

                return type;
                DynAbs.Tracing.TraceSender.TraceExitMethod(10306, 152590, 153156);

                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                f_10306_152847_152887(Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol
                this_param)
                {
                    var return_v = this_param.TypeWithAnnotations;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 152847, 152887);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                f_10306_153046_153101(Microsoft.CodeAnalysis.CSharp.Symbols.ArrayTypeSymbol
                this_param)
                {
                    var return_v = this_param.ElementTypeWithAnnotations;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 153046, 153101);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 152590, 153156);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 152590, 153156);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private BoundExpression BindArrayCreationExpression(ArrayCreationExpressionSyntax node, DiagnosticBag diagnostics)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10306, 153168, 160728);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 157843, 157995);

                var
                type = (ArrayTypeSymbol)f_10306_157871_157989(this, f_10306_157885_157894(node), diagnostics, permitDimensions: true, basesBeingResolved: null, disallowRestrictedTypes: true).Type
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 158733, 158815);

                ArrayBuilder<BoundExpression>
                sizes = f_10306_158771_158814()
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 158829, 158903);

                ArrayRankSpecifierSyntax
                firstRankSpecifier = f_10306_158875_158899(f_10306_158875_158884(node))[0]
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 158917, 158940);

                bool
                hasErrors = false
                ;
                try
                {
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 158954, 159481);
                    foreach (var arg in f_10306_158974_158998_I(f_10306_158974_158998(firstRankSpecifier)))
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 158954, 159481);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 159032, 159095);

                        var
                        size = f_10306_159043_159094(this, arg, diagnostics, ref hasErrors)
                        ;

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 159113, 159466) || true) && (size != null)
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 159113, 159466);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 159171, 159187);

                            f_10306_159171_159186(sizes, size);
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 159113, 159466);
                        }

                        else
                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 159113, 159466);

                            if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 159229, 159466) || true) && (f_10306_159233_159249(node) is null && (DynAbs.Tracing.TraceSender.Expression_True(10306, 159233, 159295) && arg == f_10306_159268_159292(firstRankSpecifier)[0]))
                            )

                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 159229, 159466);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 159337, 159408);

                                f_10306_159337_159407(diagnostics, ErrorCode.ERR_MissingArraySize, firstRankSpecifier);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 159430, 159447);

                                hasErrors = true;
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 159229, 159466);
                            }
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 159113, 159466);
                        }
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 158954, 159481);
                    }
                }
                catch (System.Exception)
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoopByException(10306, 1, 528);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoop(10306, 1, 528);
                }
                try
                {
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 159571, 159594);

                    // produce errors for additional sizes in the ranks
                    for (int
        additionalRankIndex = 1
        ; (DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 159562, 160369) || true) && (additionalRankIndex < f_10306_159618_159627(node).RankSpecifiers.Count)
        ; DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 159650, 159671)
        , additionalRankIndex++, DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 159562, 160369))

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 159562, 160369);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 159705, 159762);

                        var
                        rank = f_10306_159716_159740(f_10306_159716_159725(node))[additionalRankIndex]
                        ;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 159780, 159807);

                        var
                        dimension = f_10306_159796_159806(rank)
                        ;
                        try
                        {
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 159825, 160354);
                            foreach (var arg in f_10306_159845_159854_I(dimension))
                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 159825, 160354);

                                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 159896, 160335) || true) && (f_10306_159900_159910(arg) != SyntaxKind.OmittedArraySizeExpression)
                                )

                                {
                                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 159896, 160335);
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 160001, 160058);

                                    var
                                    size = f_10306_160012_160057(this, arg, diagnostics)
                                    ;
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 160084, 160136);

                                    f_10306_160084_160135(diagnostics, ErrorCode.ERR_InvalidArray, arg);
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 160162, 160179);

                                    hasErrors = true;
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 160296, 160312);

                                    f_10306_160296_160311(                        // Capture the invalid sizes for `SemanticModel` and `IOperation`
                                                            sizes, size);
                                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 159896, 160335);
                                }
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 159825, 160354);
                            }
                        }
                        catch (System.Exception)
                        {
                            DynAbs.Tracing.TraceSender.TraceExitLoopByException(10306, 1, 530);
                            throw;
                        }
                        finally
                        {
                            DynAbs.Tracing.TraceSender.TraceExitLoop(10306, 1, 530);
                        }
                    }
                }
                catch (System.Exception)
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoopByException(10306, 1, 808);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoop(10306, 1, 808);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 160385, 160457);

                ImmutableArray<BoundExpression>
                arraySizes = f_10306_160430_160456(sizes)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 160473, 160717);

                return (DynAbs.Tracing.TraceSender.Conditional_F1(10306, 160480, 160504) || ((f_10306_160480_160496(node) == null
                && DynAbs.Tracing.TraceSender.Conditional_F2(10306, 160524, 160587)) || DynAbs.Tracing.TraceSender.Conditional_F3(10306, 160607, 160716))) ? f_10306_160524_160587(node, arraySizes, null, type, hasErrors) : f_10306_160607_160716(this, diagnostics, node, f_10306_160659_160675(node), type, arraySizes, hasErrors: hasErrors);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10306, 153168, 160728);

                Microsoft.CodeAnalysis.CSharp.Syntax.ArrayTypeSyntax
                f_10306_157885_157894(Microsoft.CodeAnalysis.CSharp.Syntax.ArrayCreationExpressionSyntax
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 157885, 157894);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                f_10306_157871_157989(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.ArrayTypeSyntax
                node, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, bool
                permitDimensions, Roslyn.Utilities.ConsList<Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol>
                basesBeingResolved, bool
                disallowRestrictedTypes)
                {
                    var return_v = this_param.BindArrayType(node, diagnostics, permitDimensions: permitDimensions, basesBeingResolved: basesBeingResolved, disallowRestrictedTypes: disallowRestrictedTypes);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 157871, 157989);
                    return return_v;
                }


                Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                f_10306_158771_158814()
                {
                    var return_v = ArrayBuilder<BoundExpression>.GetInstance();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 158771, 158814);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Syntax.ArrayTypeSyntax
                f_10306_158875_158884(Microsoft.CodeAnalysis.CSharp.Syntax.ArrayCreationExpressionSyntax
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 158875, 158884);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.ArrayRankSpecifierSyntax>
                f_10306_158875_158899(Microsoft.CodeAnalysis.CSharp.Syntax.ArrayTypeSyntax
                this_param)
                {
                    var return_v = this_param.RankSpecifiers;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 158875, 158899);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SeparatedSyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax>
                f_10306_158974_158998(Microsoft.CodeAnalysis.CSharp.Syntax.ArrayRankSpecifierSyntax
                this_param)
                {
                    var return_v = this_param.Sizes;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 158974, 158998);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_159043_159094(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                dimension, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, ref bool
                hasErrors)
                {
                    var return_v = this_param.BindArrayDimension(dimension, diagnostics, ref hasErrors);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 159043, 159094);
                    return return_v;
                }


                int
                f_10306_159171_159186(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                item)
                {
                    this_param.Add(item);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 159171, 159186);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax?
                f_10306_159233_159249(Microsoft.CodeAnalysis.CSharp.Syntax.ArrayCreationExpressionSyntax
                this_param)
                {
                    var return_v = this_param.Initializer;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 159233, 159249);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SeparatedSyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax>
                f_10306_159268_159292(Microsoft.CodeAnalysis.CSharp.Syntax.ArrayRankSpecifierSyntax
                this_param)
                {
                    var return_v = this_param.Sizes;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 159268, 159292);
                    return return_v;
                }


                int
                f_10306_159337_159407(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, Microsoft.CodeAnalysis.CSharp.Syntax.ArrayRankSpecifierSyntax
                syntax)
                {
                    Error(diagnostics, code, (Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode)syntax);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 159337, 159407);
                    return 0;
                }


                Microsoft.CodeAnalysis.SeparatedSyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax>
                f_10306_158974_158998_I(Microsoft.CodeAnalysis.SeparatedSyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax>
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 158974, 158998);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Syntax.ArrayTypeSyntax
                f_10306_159618_159627(Microsoft.CodeAnalysis.CSharp.Syntax.ArrayCreationExpressionSyntax
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 159618, 159627);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Syntax.ArrayTypeSyntax
                f_10306_159716_159725(Microsoft.CodeAnalysis.CSharp.Syntax.ArrayCreationExpressionSyntax
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 159716, 159725);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.ArrayRankSpecifierSyntax>
                f_10306_159716_159740(Microsoft.CodeAnalysis.CSharp.Syntax.ArrayTypeSyntax
                this_param)
                {
                    var return_v = this_param.RankSpecifiers;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 159716, 159740);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SeparatedSyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax>
                f_10306_159796_159806(Microsoft.CodeAnalysis.CSharp.Syntax.ArrayRankSpecifierSyntax
                this_param)
                {
                    var return_v = this_param.Sizes;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 159796, 159806);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.SyntaxKind
                f_10306_159900_159910(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                this_param)
                {
                    var return_v = this_param.Kind();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 159900, 159910);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_160012_160057(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                node, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.BindRValueWithoutTargetType(node, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 160012, 160057);
                    return return_v;
                }


                int
                f_10306_160084_160135(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                syntax)
                {
                    Error(diagnostics, code, (Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode)syntax);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 160084, 160135);
                    return 0;
                }


                int
                f_10306_160296_160311(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                item)
                {
                    this_param.Add(item);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 160296, 160311);
                    return 0;
                }


                Microsoft.CodeAnalysis.SeparatedSyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax>
                f_10306_159845_159854_I(Microsoft.CodeAnalysis.SeparatedSyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax>
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 159845, 159854);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                f_10306_160430_160456(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                this_param)
                {
                    var return_v = this_param.ToImmutableAndFree();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 160430, 160456);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax?
                f_10306_160480_160496(Microsoft.CodeAnalysis.CSharp.Syntax.ArrayCreationExpressionSyntax
                this_param)
                {
                    var return_v = this_param.Initializer;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 160480, 160496);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundArrayCreation
                f_10306_160524_160587(Microsoft.CodeAnalysis.CSharp.Syntax.ArrayCreationExpressionSyntax
                syntax, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                bounds, Microsoft.CodeAnalysis.CSharp.BoundArrayInitialization?
                initializerOpt, Microsoft.CodeAnalysis.CSharp.Symbols.ArrayTypeSymbol
                type, bool
                hasErrors)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.BoundArrayCreation((Microsoft.CodeAnalysis.SyntaxNode)syntax, bounds, initializerOpt, (Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol)type, hasErrors);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 160524, 160587);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax
                f_10306_160659_160675(Microsoft.CodeAnalysis.CSharp.Syntax.ArrayCreationExpressionSyntax
                this_param)
                {
                    var return_v = this_param.Initializer;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 160659, 160675);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundArrayCreation
                f_10306_160607_160716(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.Syntax.ArrayCreationExpressionSyntax
                creationSyntax, Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax
                initSyntax, Microsoft.CodeAnalysis.CSharp.Symbols.ArrayTypeSymbol
                type, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                sizes, bool
                hasErrors)
                {
                    var return_v = this_param.BindArrayCreationWithInitializer(diagnostics, (Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)creationSyntax, initSyntax, type, sizes, hasErrors: hasErrors);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 160607, 160716);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 153168, 160728);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 153168, 160728);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private BoundExpression BindArrayDimension(ExpressionSyntax dimension, DiagnosticBag diagnostics, ref bool hasErrors)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10306, 160740, 161779);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 160985, 161742) || true) && (f_10306_160989_161005(dimension) != SyntaxKind.OmittedArraySizeExpression)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 160985, 161742);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 161080, 161147);

                    var
                    size = f_10306_161091_161146(this, dimension, diagnostics, BindValueKind.RValue)
                    ;

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 161165, 161695) || true) && (f_10306_161169_161187_M(!size.HasAnyErrors))
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 161165, 161695);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 161229, 161313);

                        size = f_10306_161236_161312(this, size, dimension, diagnostics, allowIndexAndRange: false);

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 161335, 161554) || true) && (f_10306_161339_161375(size))
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 161335, 161554);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 161425, 161488);

                            f_10306_161425_161487(diagnostics, ErrorCode.ERR_NegativeArraySize, dimension);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 161514, 161531);

                            hasErrors = true;
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 161335, 161554);
                        }
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 161165, 161695);
                    }

                    else

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 161165, 161695);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 161636, 161676);

                        size = f_10306_161643_161675(this, size);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 161165, 161695);
                    }
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 161715, 161727);

                    return size;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 160985, 161742);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 161756, 161768);

                return null;
                DynAbs.Tracing.TraceSender.TraceExitMethod(10306, 160740, 161779);

                Microsoft.CodeAnalysis.CSharp.SyntaxKind
                f_10306_160989_161005(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                this_param)
                {
                    var return_v = this_param.Kind();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 160989, 161005);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_161091_161146(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                node, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.Binder.BindValueKind
                valueKind)
                {
                    var return_v = this_param.BindValue(node, diagnostics, valueKind);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 161091, 161146);
                    return return_v;
                }


                bool
                f_10306_161169_161187_M(bool
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 161169, 161187);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_161236_161312(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                index, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                node, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, bool
                allowIndexAndRange)
                {
                    var return_v = this_param.ConvertToArrayIndex(index, (Microsoft.CodeAnalysis.SyntaxNode)node, diagnostics, allowIndexAndRange: allowIndexAndRange);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 161236, 161312);
                    return return_v;
                }


                bool
                f_10306_161339_161375(Microsoft.CodeAnalysis.CSharp.BoundExpression
                expression)
                {
                    var return_v = IsNegativeConstantForArraySize(expression);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 161339, 161375);
                    return return_v;
                }


                int
                f_10306_161425_161487(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                syntax)
                {
                    Error(diagnostics, code, (Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode)syntax);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 161425, 161487);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_161643_161675(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                expression)
                {
                    var return_v = this_param.BindToTypeForErrorRecovery(expression);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 161643, 161675);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 160740, 161779);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 160740, 161779);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private BoundExpression BindImplicitArrayCreationExpression(ImplicitArrayCreationExpressionSyntax node, DiagnosticBag diagnostics)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10306, 161791, 163579);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 162051, 162110);

                InitializerExpressionSyntax
                initializer = f_10306_162093_162109(node)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 162124, 162157);

                int
                rank = node.Commas.Count + 1
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 162173, 162319);

                ImmutableArray<BoundExpression>
                boundInitializerExpressions = f_10306_162235_162318(this, initializer, diagnostics, dimension: 1, rank: rank)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 162335, 162385);

                HashSet<DiagnosticInfo>
                useSiteDiagnostics = null
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 162399, 162523);

                TypeSymbol
                bestType = f_10306_162421_162522(boundInitializerExpressions, f_10306_162481_162497(this), ref useSiteDiagnostics)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 162537, 162579);

                f_10306_162537_162578(diagnostics, node, useSiteDiagnostics);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 162595, 162882) || true) && ((object)bestType == null || (DynAbs.Tracing.TraceSender.Expression_False(10306, 162599, 162648) || f_10306_162627_162648(bestType)))
                ) // Dev10 also reports ERR_ImplicitlyTypedArrayNoBestType for void.

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 162595, 162882);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 162749, 162820);

                    f_10306_162749_162819(diagnostics, ErrorCode.ERR_ImplicitlyTypedArrayNoBestType, node);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 162838, 162867);

                    bestType = f_10306_162849_162866(this);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 162595, 162882);
                }

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 162898, 163120) || true) && (f_10306_162902_162929(bestType))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 162898, 163120);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 163030, 163105);

                    f_10306_163030_163104(diagnostics, ErrorCode.ERR_ArrayElementCantBeRefAny, node, bestType);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 162898, 163120);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 163245, 163361);

                var
                arrayType = f_10306_163261_163360(f_10306_163295_163315(f_10306_163295_163306()), TypeWithAnnotations.Create(bestType), rank)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 163375, 163568);

                return f_10306_163382_163567(this, diagnostics, node, initializer, arrayType, sizes: ImmutableArray<BoundExpression>.Empty, boundInitExprOpt: boundInitializerExpressions);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10306, 161791, 163579);

                Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax
                f_10306_162093_162109(Microsoft.CodeAnalysis.CSharp.Syntax.ImplicitArrayCreationExpressionSyntax
                this_param)
                {
                    var return_v = this_param.Initializer;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 162093, 162109);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                f_10306_162235_162318(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax
                initializer, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, int
                dimension, int
                rank)
                {
                    var return_v = this_param.BindArrayInitializerExpressions(initializer, diagnostics, dimension: dimension, rank: rank);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 162235, 162318);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Conversions
                f_10306_162481_162497(Microsoft.CodeAnalysis.CSharp.Binder
                this_param)
                {
                    var return_v = this_param.Conversions;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 162481, 162497);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                f_10306_162421_162522(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                exprs, Microsoft.CodeAnalysis.CSharp.Conversions
                conversions, ref System.Collections.Generic.HashSet<Microsoft.CodeAnalysis.DiagnosticInfo>?
                useSiteDiagnostics)
                {
                    var return_v = BestTypeInferrer.InferBestType(exprs, (Microsoft.CodeAnalysis.CSharp.ConversionsBase)conversions, ref useSiteDiagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 162421, 162522);
                    return return_v;
                }


                bool
                f_10306_162537_162578(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.Syntax.ImplicitArrayCreationExpressionSyntax
                node, System.Collections.Generic.HashSet<Microsoft.CodeAnalysis.DiagnosticInfo>
                useSiteDiagnostics)
                {
                    var return_v = diagnostics.Add((Microsoft.CodeAnalysis.SyntaxNode)node, useSiteDiagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 162537, 162578);
                    return return_v;
                }


                bool
                f_10306_162627_162648(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                type)
                {
                    var return_v = type.IsVoidType();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 162627, 162648);
                    return return_v;
                }


                int
                f_10306_162749_162819(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, Microsoft.CodeAnalysis.CSharp.Syntax.ImplicitArrayCreationExpressionSyntax
                syntax)
                {
                    Error(diagnostics, code, (Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode)syntax);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 162749, 162819);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                f_10306_162849_162866(Microsoft.CodeAnalysis.CSharp.Binder
                this_param)
                {
                    var return_v = this_param.CreateErrorType();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 162849, 162866);
                    return return_v;
                }


                bool
                f_10306_162902_162929(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                type)
                {
                    var return_v = type.IsRestrictedType();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 162902, 162929);
                    return return_v;
                }


                int
                f_10306_163030_163104(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, Microsoft.CodeAnalysis.CSharp.Syntax.ImplicitArrayCreationExpressionSyntax
                syntax, params object[]
                args)
                {
                    Error(diagnostics, code, (Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode)syntax, args);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 163030, 163104);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                f_10306_163295_163306()
                {
                    var return_v = Compilation;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 163295, 163306);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.AssemblySymbol
                f_10306_163295_163315(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param)
                {
                    var return_v = this_param.Assembly;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 163295, 163315);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.ArrayTypeSymbol
                f_10306_163261_163360(Microsoft.CodeAnalysis.CSharp.Symbols.AssemblySymbol
                declaringAssembly, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                elementTypeWithAnnotations, int
                rank)
                {
                    var return_v = ArrayTypeSymbol.CreateCSharpArray(declaringAssembly, elementTypeWithAnnotations, rank);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 163261, 163360);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundArrayCreation
                f_10306_163382_163567(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.Syntax.ImplicitArrayCreationExpressionSyntax
                creationSyntax, Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax
                initSyntax, Microsoft.CodeAnalysis.CSharp.Symbols.ArrayTypeSymbol
                type, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                sizes, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                boundInitExprOpt)
                {
                    var return_v = this_param.BindArrayCreationWithInitializer(diagnostics, (Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)creationSyntax, initSyntax, type, sizes: sizes, boundInitExprOpt: boundInitExprOpt);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 163382, 163567);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 161791, 163579);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 161791, 163579);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private BoundExpression BindImplicitStackAllocArrayCreationExpression(ImplicitStackAllocArrayCreationExpressionSyntax node, DiagnosticBag diagnostics)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10306, 163591, 165062);
                bool hasErrors = default(bool);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 163766, 163825);

                InitializerExpressionSyntax
                initializer = f_10306_163808_163824(node)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 163839, 163982);

                ImmutableArray<BoundExpression>
                boundInitializerExpressions = f_10306_163901_163981(this, initializer, diagnostics, dimension: 1, rank: 1)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 163998, 164048);

                HashSet<DiagnosticInfo>
                useSiteDiagnostics = null
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 164062, 164186);

                TypeSymbol
                bestType = f_10306_164084_164185(boundInitializerExpressions, f_10306_164144_164160(this), ref useSiteDiagnostics)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 164200, 164242);

                f_10306_164200_164241(diagnostics, node, useSiteDiagnostics);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 164258, 164478) || true) && ((object)bestType == null || (DynAbs.Tracing.TraceSender.Expression_False(10306, 164262, 164311) || f_10306_164290_164311(bestType)))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 164258, 164478);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 164345, 164416);

                    f_10306_164345_164415(diagnostics, ErrorCode.ERR_ImplicitlyTypedArrayNoBestType, node);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 164434, 164463);

                    bestType = f_10306_164445_164462(this);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 164258, 164478);
                }

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 164494, 164638) || true) && (!f_10306_164499_164521(bestType))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 164494, 164638);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 164555, 164623);

                    f_10306_164555_164622(f_10306_164572_164583(), bestType, f_10306_164595_164608(node), diagnostics);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 164494, 164638);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 164654, 165051);

                return f_10306_164661_165050(this, node, initializer, type: f_10306_164768_164862(this, node, TypeWithAnnotations.Create(bestType), diagnostics, out hasErrors), elementType: bestType, sizeOpt: null, diagnostics, hasErrors: hasErrors, boundInitializerExpressions);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10306, 163591, 165062);

                Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax
                f_10306_163808_163824(Microsoft.CodeAnalysis.CSharp.Syntax.ImplicitStackAllocArrayCreationExpressionSyntax
                this_param)
                {
                    var return_v = this_param.Initializer;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 163808, 163824);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                f_10306_163901_163981(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax
                initializer, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, int
                dimension, int
                rank)
                {
                    var return_v = this_param.BindArrayInitializerExpressions(initializer, diagnostics, dimension: dimension, rank: rank);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 163901, 163981);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Conversions
                f_10306_164144_164160(Microsoft.CodeAnalysis.CSharp.Binder
                this_param)
                {
                    var return_v = this_param.Conversions;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 164144, 164160);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                f_10306_164084_164185(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                exprs, Microsoft.CodeAnalysis.CSharp.Conversions
                conversions, ref System.Collections.Generic.HashSet<Microsoft.CodeAnalysis.DiagnosticInfo>?
                useSiteDiagnostics)
                {
                    var return_v = BestTypeInferrer.InferBestType(exprs, (Microsoft.CodeAnalysis.CSharp.ConversionsBase)conversions, ref useSiteDiagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 164084, 164185);
                    return return_v;
                }


                bool
                f_10306_164200_164241(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.Syntax.ImplicitStackAllocArrayCreationExpressionSyntax
                node, System.Collections.Generic.HashSet<Microsoft.CodeAnalysis.DiagnosticInfo>
                useSiteDiagnostics)
                {
                    var return_v = diagnostics.Add((Microsoft.CodeAnalysis.SyntaxNode)node, useSiteDiagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 164200, 164241);
                    return return_v;
                }


                bool
                f_10306_164290_164311(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                type)
                {
                    var return_v = type.IsVoidType();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 164290, 164311);
                    return return_v;
                }


                int
                f_10306_164345_164415(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, Microsoft.CodeAnalysis.CSharp.Syntax.ImplicitStackAllocArrayCreationExpressionSyntax
                syntax)
                {
                    Error(diagnostics, code, (Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode)syntax);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 164345, 164415);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                f_10306_164445_164462(Microsoft.CodeAnalysis.CSharp.Binder
                this_param)
                {
                    var return_v = this_param.CreateErrorType();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 164445, 164462);
                    return return_v;
                }


                bool
                f_10306_164499_164521(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                type)
                {
                    var return_v = type.IsErrorType();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 164499, 164521);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                f_10306_164572_164583()
                {
                    var return_v = Compilation;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 164572, 164583);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Location
                f_10306_164595_164608(Microsoft.CodeAnalysis.CSharp.Syntax.ImplicitStackAllocArrayCreationExpressionSyntax
                this_param)
                {
                    var return_v = this_param.Location;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 164595, 164608);
                    return return_v;
                }


                bool
                f_10306_164555_164622(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                compilation, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                type, Microsoft.CodeAnalysis.Location
                location, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = CheckManagedAddr(compilation, type, location, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 164555, 164622);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                f_10306_164768_164862(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.ImplicitStackAllocArrayCreationExpressionSyntax
                node, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                elementTypeWithAnnotations, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, out bool
                hasErrors)
                {
                    var return_v = this_param.GetStackAllocType((Microsoft.CodeAnalysis.SyntaxNode)node, elementTypeWithAnnotations, diagnostics, out hasErrors);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 164768, 164862);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_164661_165050(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.ImplicitStackAllocArrayCreationExpressionSyntax
                node, Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax
                initSyntax, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                type, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                elementType, Microsoft.CodeAnalysis.CSharp.BoundExpression
                sizeOpt, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, bool
                hasErrors, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                boundInitExprOpt)
                {
                    var return_v = this_param.BindStackAllocWithInitializer((Microsoft.CodeAnalysis.SyntaxNode)node, initSyntax, type: type, elementType: elementType, sizeOpt: sizeOpt, diagnostics, hasErrors: hasErrors, boundInitExprOpt);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 164661, 165050);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 163591, 165062);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 163591, 165062);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private ImmutableArray<BoundExpression> BindArrayInitializerExpressions(InitializerExpressionSyntax initializer, DiagnosticBag diagnostics, int dimension, int rank)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10306, 165332, 165750);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 165521, 165583);

                var
                exprBuilder = f_10306_165539_165582()
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 165597, 165685);

                f_10306_165597_165684(this, initializer, exprBuilder, diagnostics, dimension, rank);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 165699, 165739);

                return f_10306_165706_165738(exprBuilder);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10306, 165332, 165750);

                Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                f_10306_165539_165582()
                {
                    var return_v = ArrayBuilder<BoundExpression>.GetInstance();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 165539, 165582);
                    return return_v;
                }


                int
                f_10306_165597_165684(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax
                initializer, Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                exprBuilder, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, int
                dimension, int
                rank)
                {
                    this_param.BindArrayInitializerExpressions(initializer, exprBuilder, diagnostics, dimension, rank);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 165597, 165684);
                    return 0;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                f_10306_165706_165738(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                this_param)
                {
                    var return_v = this_param.ToImmutableAndFree();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 165706, 165738);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 165332, 165750);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 165332, 165750);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private void BindArrayInitializerExpressions(InitializerExpressionSyntax initializer, ArrayBuilder<BoundExpression> exprBuilder, DiagnosticBag diagnostics, int dimension, int rank)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10306, 166484, 169014);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 166689, 166712);

                f_10306_166689_166711(rank > 0);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 166726, 166775);

                f_10306_166726_166774(dimension > 0 && (DynAbs.Tracing.TraceSender.Expression_True(10306, 166739, 166773) && dimension <= rank));
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 166789, 166823);

                f_10306_166789_166822(exprBuilder != null);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 166839, 169003) || true) && (dimension == rank)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 166839, 169003);
                    try
                    {
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 167055, 167300);
                        foreach (var expression in f_10306_167082_167105_I(f_10306_167082_167105(initializer)))
                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 167055, 167300);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 167147, 167226);

                            var
                            boundExpression = f_10306_167169_167225(this, expression, diagnostics, BindValueKind.RValue)
                            ;
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 167248, 167281);

                            f_10306_167248_167280(exprBuilder, boundExpression);
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 167055, 167300);
                        }
                    }
                    catch (System.Exception)
                    {
                        DynAbs.Tracing.TraceSender.TraceExitLoopByException(10306, 1, 246);
                        throw;
                    }
                    finally
                    {
                        DynAbs.Tracing.TraceSender.TraceExitLoop(10306, 1, 246);
                    }
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 166839, 169003);
                }

                else

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 166839, 169003);
                    try
                    {
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 167445, 168988);
                        foreach (var expression in f_10306_167472_167495_I(f_10306_167472_167495(initializer)))
                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 167445, 168988);

                            if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 167537, 168969) || true) && (f_10306_167541_167558(expression) == SyntaxKind.ArrayInitializerExpression)
                            )

                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 167537, 168969);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 167649, 167769);

                                f_10306_167649_167768(this, expression, exprBuilder, diagnostics, dimension + 1, rank);
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 167537, 168969);
                            }

                            else

                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 167537, 168969);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 167988, 168067);

                                var
                                boundExpression = f_10306_168010_168066(this, expression, diagnostics, BindValueKind.RValue)
                                ;

                                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 168093, 168885) || true) && ((object)f_10306_168105_168125(boundExpression) == null || (DynAbs.Tracing.TraceSender.Expression_False(10306, 168097, 168172) || !f_10306_168138_168172(f_10306_168138_168158(boundExpression))))
                                )

                                {
                                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 168093, 168885);

                                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 168230, 168431) || true) && (f_10306_168234_168263_M(!boundExpression.HasAnyErrors))
                                    )

                                    {
                                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 168230, 168431);
                                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 168329, 168400);

                                        f_10306_168329_168399(diagnostics, ErrorCode.ERR_ArrayInitializerExpected, expression);
                                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 168230, 168431);
                                    }
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 168560, 168858);

                                    boundExpression = f_10306_168578_168857(this, expression, LookupResultKind.Empty, f_10306_168728_168783(f_10306_168750_168782(boundExpression)), f_10306_168818_168856(boundExpression));
                                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 168093, 168885);
                                }
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 168913, 168946);

                                f_10306_168913_168945(
                                                        exprBuilder, boundExpression);
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 167537, 168969);
                            }
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 167445, 168988);
                        }
                    }
                    catch (System.Exception)
                    {
                        DynAbs.Tracing.TraceSender.TraceExitLoopByException(10306, 1, 1544);
                        throw;
                    }
                    finally
                    {
                        DynAbs.Tracing.TraceSender.TraceExitLoop(10306, 1, 1544);
                    }
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 166839, 169003);
                }
                DynAbs.Tracing.TraceSender.TraceExitMethod(10306, 166484, 169014);

                int
                f_10306_166689_166711(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 166689, 166711);
                    return 0;
                }


                int
                f_10306_166726_166774(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 166726, 166774);
                    return 0;
                }


                int
                f_10306_166789_166822(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 166789, 166822);
                    return 0;
                }


                Microsoft.CodeAnalysis.SeparatedSyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax>
                f_10306_167082_167105(Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax
                this_param)
                {
                    var return_v = this_param.Expressions;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 167082, 167105);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_167169_167225(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                node, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.Binder.BindValueKind
                valueKind)
                {
                    var return_v = this_param.BindValue(node, diagnostics, valueKind);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 167169, 167225);
                    return return_v;
                }


                int
                f_10306_167248_167280(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                item)
                {
                    this_param.Add(item);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 167248, 167280);
                    return 0;
                }


                Microsoft.CodeAnalysis.SeparatedSyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax>
                f_10306_167082_167105_I(Microsoft.CodeAnalysis.SeparatedSyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax>
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 167082, 167105);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SeparatedSyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax>
                f_10306_167472_167495(Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax
                this_param)
                {
                    var return_v = this_param.Expressions;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 167472, 167495);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.SyntaxKind
                f_10306_167541_167558(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                this_param)
                {
                    var return_v = this_param.Kind();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 167541, 167558);
                    return return_v;
                }


                int
                f_10306_167649_167768(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                initializer, Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                exprBuilder, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, int
                dimension, int
                rank)
                {
                    this_param.BindArrayInitializerExpressions((Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax)initializer, exprBuilder, diagnostics, dimension, rank);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 167649, 167768);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_168010_168066(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                node, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.Binder.BindValueKind
                valueKind)
                {
                    var return_v = this_param.BindValue(node, diagnostics, valueKind);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 168010, 168066);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?
                f_10306_168105_168125(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 168105, 168125);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                f_10306_168138_168158(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 168138, 168158);
                    return return_v;
                }


                bool
                f_10306_168138_168172(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                type)
                {
                    var return_v = type.IsErrorType();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 168138, 168172);
                    return return_v;
                }


                bool
                f_10306_168234_168263_M(bool
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 168234, 168263);
                    return return_v;
                }


                int
                f_10306_168329_168399(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                syntax)
                {
                    Error(diagnostics, code, (Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode)syntax);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 168329, 168399);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.Symbol?
                f_10306_168750_168782(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.ExpressionSymbol;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 168750, 168782);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol?>
                f_10306_168728_168783(Microsoft.CodeAnalysis.CSharp.Symbol?
                item)
                {
                    var return_v = ImmutableArray.Create(item);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 168728, 168783);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                f_10306_168818_168856(Microsoft.CodeAnalysis.CSharp.BoundExpression
                item)
                {
                    var return_v = ImmutableArray.Create(item);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 168818, 168856);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundBadExpression
                f_10306_168578_168857(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                syntax, Microsoft.CodeAnalysis.CSharp.LookupResultKind
                resultKind, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol?>
                symbols, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                childNodes)
                {
                    var return_v = this_param.BadExpression((Microsoft.CodeAnalysis.SyntaxNode)syntax, resultKind, symbols, childNodes);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 168578, 168857);
                    return return_v;
                }


                int
                f_10306_168913_168945(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                item)
                {
                    this_param.Add(item);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 168913, 168945);
                    return 0;
                }


                Microsoft.CodeAnalysis.SeparatedSyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax>
                f_10306_167472_167495_I(Microsoft.CodeAnalysis.SeparatedSyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax>
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 167472, 167495);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 166484, 169014);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 166484, 169014);
            }
        }

        private BoundArrayInitialization ConvertAndBindArrayInitialization(
                    DiagnosticBag diagnostics,
                    InitializerExpressionSyntax node,
                    ArrayTypeSymbol type,
                    int?[] knownSizes,
                    int dimension,
                    ImmutableArray<BoundExpression> boundInitExpr,
                    ref int boundInitExprIndex)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10306, 169909, 173484);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 170284, 170323);

                f_10306_170284_170322(f_10306_170297_170321_M(!boundInitExpr.IsDefault));
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 170339, 170428);

                ArrayBuilder<BoundExpression>
                initializers = f_10306_170384_170427()
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 170442, 172581) || true) && (dimension == f_10306_170459_170468(type))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 170442, 172581);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 170663, 170702);

                    TypeSymbol
                    elemType = f_10306_170685_170701(type)
                    ;
                    try
                    {
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 170720, 171242);
                        foreach (var expressionSyntax in f_10306_170753_170769_I(f_10306_170753_170769(node)))
                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 170720, 171242);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 170811, 170894);

                            f_10306_170811_170893(boundInitExprIndex >= 0 && (DynAbs.Tracing.TraceSender.Expression_True(10306, 170824, 170892) && boundInitExprIndex < boundInitExpr.Length));
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 170918, 170986);

                            BoundExpression
                            boundExpression = boundInitExpr[boundInitExprIndex]
                            ;
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 171008, 171029);

                            boundInitExprIndex++;
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 171053, 171163);

                            BoundExpression
                            convertedExpression = f_10306_171091_171162(this, elemType, boundExpression, diagnostics)
                            ;
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 171185, 171223);

                            f_10306_171185_171222(initializers, convertedExpression);
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 170720, 171242);
                        }
                    }
                    catch (System.Exception)
                    {
                        DynAbs.Tracing.TraceSender.TraceExitLoopByException(10306, 1, 523);
                        throw;
                    }
                    finally
                    {
                        DynAbs.Tracing.TraceSender.TraceExitLoop(10306, 1, 523);
                    }
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 170442, 172581);
                }

                else

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 170442, 172581);
                    try
                    {
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 171387, 172566);
                        foreach (var expr in f_10306_171408_171424_I(f_10306_171408_171424(node)))
                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 171387, 172566);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 171466, 171494);

                            BoundExpression
                            init = null
                            ;

                            if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 171516, 172500) || true) && (f_10306_171520_171531(expr) == SyntaxKind.ArrayInitializerExpression)
                            )

                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 171516, 172500);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 171622, 171813);

                                init = f_10306_171629_171812(this, diagnostics, expr, type, knownSizes, dimension + 1, boundInitExpr, ref boundInitExprIndex);
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 171516, 172500);
                            }

                            else

                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 171516, 172500);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 172154, 172237);

                                f_10306_172154_172236(boundInitExprIndex >= 0 && (DynAbs.Tracing.TraceSender.Expression_True(10306, 172167, 172235) && boundInitExprIndex < boundInitExpr.Length));
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 172265, 172306);

                                init = boundInitExpr[boundInitExprIndex];
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 172332, 172364);

                                f_10306_172332_172363(f_10306_172345_172362(init));
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 172390, 172428);

                                f_10306_172390_172427(f_10306_172403_172426(f_10306_172403_172412(init)));
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 172456, 172477);

                                boundInitExprIndex++;
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 171516, 172500);
                            }
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 172524, 172547);

                            f_10306_172524_172546(
                                                initializers, init);
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 171387, 172566);
                        }
                    }
                    catch (System.Exception)
                    {
                        DynAbs.Tracing.TraceSender.TraceExitLoopByException(10306, 1, 1180);
                        throw;
                    }
                    finally
                    {
                        DynAbs.Tracing.TraceSender.TraceExitLoop(10306, 1, 1180);
                    }
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 170442, 172581);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 172597, 172620);

                bool
                hasErrors = false
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 172634, 172679);

                var
                knownSizeOpt = knownSizes[dimension - 1]
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 172695, 173358) || true) && (knownSizeOpt == null)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 172695, 173358);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 172753, 172800);

                    knownSizes[dimension - 1] = f_10306_172781_172799(initializers);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 172695, 173358);
                }

                else
                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 172695, 173358);

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 172834, 173358) || true) && (knownSizeOpt != f_10306_172854_172872(initializers))
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 172834, 173358);

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 173130, 173343) || true) && (knownSizeOpt >= 0)
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 173130, 173343);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 173193, 173285);

                            f_10306_173193_173284(diagnostics, ErrorCode.ERR_ArrayInitializerIncorrectLength, node, f_10306_173265_173283(knownSizeOpt));
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 173307, 173324);

                            hasErrors = true;
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 173130, 173343);
                        }
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 172834, 173358);
                    }
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 172695, 173358);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 173374, 173473);

                return f_10306_173381_173472(node, f_10306_173416_173449(initializers), hasErrors: hasErrors);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10306, 169909, 173484);

                bool
                f_10306_170297_170321_M(bool
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 170297, 170321);
                    return return_v;
                }


                int
                f_10306_170284_170322(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 170284, 170322);
                    return 0;
                }


                Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                f_10306_170384_170427()
                {
                    var return_v = ArrayBuilder<BoundExpression>.GetInstance();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 170384, 170427);
                    return return_v;
                }


                int
                f_10306_170459_170468(Microsoft.CodeAnalysis.CSharp.Symbols.ArrayTypeSymbol
                this_param)
                {
                    var return_v = this_param.Rank;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 170459, 170468);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                f_10306_170685_170701(Microsoft.CodeAnalysis.CSharp.Symbols.ArrayTypeSymbol
                this_param)
                {
                    var return_v = this_param.ElementType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 170685, 170701);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SeparatedSyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax>
                f_10306_170753_170769(Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax
                this_param)
                {
                    var return_v = this_param.Expressions;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 170753, 170769);
                    return return_v;
                }


                int
                f_10306_170811_170893(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 170811, 170893);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_171091_171162(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                targetType, Microsoft.CodeAnalysis.CSharp.BoundExpression
                expression, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.GenerateConversionForAssignment(targetType, expression, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 171091, 171162);
                    return return_v;
                }


                int
                f_10306_171185_171222(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                item)
                {
                    this_param.Add(item);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 171185, 171222);
                    return 0;
                }


                Microsoft.CodeAnalysis.SeparatedSyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax>
                f_10306_170753_170769_I(Microsoft.CodeAnalysis.SeparatedSyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax>
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 170753, 170769);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SeparatedSyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax>
                f_10306_171408_171424(Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax
                this_param)
                {
                    var return_v = this_param.Expressions;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 171408, 171424);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.SyntaxKind
                f_10306_171520_171531(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                this_param)
                {
                    var return_v = this_param.Kind();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 171520, 171531);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundArrayInitialization
                f_10306_171629_171812(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                node, Microsoft.CodeAnalysis.CSharp.Symbols.ArrayTypeSymbol
                type, int?[]
                knownSizes, int
                dimension, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                boundInitExpr, ref int
                boundInitExprIndex)
                {
                    var return_v = this_param.ConvertAndBindArrayInitialization(diagnostics, (Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax)node, type, knownSizes, dimension, boundInitExpr, ref boundInitExprIndex);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 171629, 171812);
                    return return_v;
                }


                int
                f_10306_172154_172236(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 172154, 172236);
                    return 0;
                }


                bool
                f_10306_172345_172362(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.HasAnyErrors;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 172345, 172362);
                    return return_v;
                }


                int
                f_10306_172332_172363(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 172332, 172363);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?
                f_10306_172403_172412(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 172403, 172412);
                    return return_v;
                }


                bool
                f_10306_172403_172426(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?
                type)
                {
                    var return_v = type.IsErrorType();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 172403, 172426);
                    return return_v;
                }


                int
                f_10306_172390_172427(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 172390, 172427);
                    return 0;
                }


                int
                f_10306_172524_172546(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                item)
                {
                    this_param.Add(item);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 172524, 172546);
                    return 0;
                }


                Microsoft.CodeAnalysis.SeparatedSyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax>
                f_10306_171408_171424_I(Microsoft.CodeAnalysis.SeparatedSyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax>
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 171408, 171424);
                    return return_v;
                }


                int
                f_10306_172781_172799(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                this_param)
                {
                    var return_v = this_param.Count;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 172781, 172799);
                    return return_v;
                }


                int
                f_10306_172854_172872(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                this_param)
                {
                    var return_v = this_param.Count;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 172854, 172872);
                    return return_v;
                }


                int
                f_10306_173265_173283(int?
                this_param)
                {
                    var return_v = this_param.Value;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 173265, 173283);
                    return return_v;
                }


                int
                f_10306_173193_173284(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax
                syntax, params object[]
                args)
                {
                    Error(diagnostics, code, (Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode)syntax, args);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 173193, 173284);
                    return 0;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                f_10306_173416_173449(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                this_param)
                {
                    var return_v = this_param.ToImmutableAndFree();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 173416, 173449);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundArrayInitialization
                f_10306_173381_173472(Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax
                syntax, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                initializers, bool
                hasErrors)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.BoundArrayInitialization((Microsoft.CodeAnalysis.SyntaxNode)syntax, initializers, hasErrors: hasErrors);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 173381, 173472);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 169909, 173484);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 169909, 173484);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private BoundArrayInitialization BindArrayInitializerList(
                   DiagnosticBag diagnostics,
                   InitializerExpressionSyntax node,
                   ArrayTypeSymbol type,
                   int?[] knownSizes,
                   int dimension,
                   ImmutableArray<BoundExpression> boundInitExprOpt = default(ImmutableArray<BoundExpression>))
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10306, 173496, 174649);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 174104, 174275) || true) && (boundInitExprOpt.IsDefault)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 174104, 174275);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 174168, 174260);

                    boundInitExprOpt = f_10306_174187_174259(this, node, diagnostics, dimension, f_10306_174249_174258(type));
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 174104, 174275);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 174466, 174493);

                int
                boundInitExprIndex = 0
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 174507, 174638);

                return f_10306_174514_174637(this, diagnostics, node, type, knownSizes, dimension, boundInitExprOpt, ref boundInitExprIndex);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10306, 173496, 174649);

                int
                f_10306_174249_174258(Microsoft.CodeAnalysis.CSharp.Symbols.ArrayTypeSymbol
                this_param)
                {
                    var return_v = this_param.Rank;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 174249, 174258);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                f_10306_174187_174259(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax
                initializer, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, int
                dimension, int
                rank)
                {
                    var return_v = this_param.BindArrayInitializerExpressions(initializer, diagnostics, dimension, rank);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 174187, 174259);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundArrayInitialization
                f_10306_174514_174637(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax
                node, Microsoft.CodeAnalysis.CSharp.Symbols.ArrayTypeSymbol
                type, int?[]
                knownSizes, int
                dimension, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                boundInitExpr, ref int
                boundInitExprIndex)
                {
                    var return_v = this_param.ConvertAndBindArrayInitialization(diagnostics, node, type, knownSizes, dimension, boundInitExpr, ref boundInitExprIndex);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 174514, 174637);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 173496, 174649);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 173496, 174649);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private BoundArrayInitialization BindUnexpectedArrayInitializer(
                    InitializerExpressionSyntax node,
                    DiagnosticBag diagnostics,
                    ErrorCode errorCode,
                    CSharpSyntaxNode errorNode = null)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10306, 174661, 175466);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 174919, 175191);

                var
                result = f_10306_174932_175190(this, diagnostics, node, f_10306_175028_175128(f_10306_175028_175044(this), f_10306_175067_175127(this, SpecialType.System_Object, diagnostics, node)), new int?[1], dimension: 1)
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 175207, 175362) || true) && (f_10306_175211_175231_M(!result.HasAnyErrors))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 175207, 175362);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 175265, 175347);

                    result = f_10306_175274_175346(node, f_10306_175309_175328(result), hasErrors: true);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 175207, 175362);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 175378, 175427);

                f_10306_175378_175426(diagnostics, errorCode, errorNode ?? (DynAbs.Tracing.TraceSender.Expression_Null<Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode?>(10306, 175408, 175425) ?? node));
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 175441, 175455);

                return result;
                DynAbs.Tracing.TraceSender.TraceExitMethod(10306, 174661, 175466);

                Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                f_10306_175028_175044(Microsoft.CodeAnalysis.CSharp.Binder
                this_param)
                {
                    var return_v = this_param.Compilation;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 175028, 175044);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                f_10306_175067_175127(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.SpecialType
                typeId, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax
                node)
                {
                    var return_v = this_param.GetSpecialType(typeId, diagnostics, (Microsoft.CodeAnalysis.SyntaxNode)node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 175067, 175127);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.ArrayTypeSymbol
                f_10306_175028_175128(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                elementType)
                {
                    var return_v = this_param.CreateArrayTypeSymbol((Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol)elementType);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 175028, 175128);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundArrayInitialization
                f_10306_174932_175190(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax
                node, Microsoft.CodeAnalysis.CSharp.Symbols.ArrayTypeSymbol
                type, int?[]
                knownSizes, int
                dimension)
                {
                    var return_v = this_param.BindArrayInitializerList(diagnostics, node, type, knownSizes, dimension: dimension);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 174932, 175190);
                    return return_v;
                }


                bool
                f_10306_175211_175231_M(bool
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 175211, 175231);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                f_10306_175309_175328(Microsoft.CodeAnalysis.CSharp.BoundArrayInitialization
                this_param)
                {
                    var return_v = this_param.Initializers;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 175309, 175328);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundArrayInitialization
                f_10306_175274_175346(Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax
                syntax, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                initializers, bool
                hasErrors)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.BoundArrayInitialization((Microsoft.CodeAnalysis.SyntaxNode)syntax, initializers, hasErrors: hasErrors);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 175274, 175346);
                    return return_v;
                }


                int
                f_10306_175378_175426(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode
                syntax)
                {
                    Error(diagnostics, code, syntax);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 175378, 175426);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 174661, 175466);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 174661, 175466);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private BoundArrayCreation BindArrayCreationWithInitializer(
                    DiagnosticBag diagnostics,
                    ExpressionSyntax creationSyntax,
                    InitializerExpressionSyntax initSyntax,
                    ArrayTypeSymbol type,
                    ImmutableArray<BoundExpression> sizes,
                    ImmutableArray<BoundExpression> boundInitExprOpt = default(ImmutableArray<BoundExpression>),
                    bool hasErrors = false)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10306, 176497, 180924);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 176951, 177156);

                f_10306_176951_177155(creationSyntax == null || (DynAbs.Tracing.TraceSender.Expression_False(10306, 176964, 177066) || f_10306_177007_177028(creationSyntax) == SyntaxKind.ArrayCreationExpression) || (DynAbs.Tracing.TraceSender.Expression_False(10306, 176964, 177154) || f_10306_177087_177108(creationSyntax) == SyntaxKind.ImplicitArrayCreationExpression));
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 177170, 177203);

                f_10306_177170_177202(initSyntax != null);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 177217, 177252);

                f_10306_177217_177251((object)type != null);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 177266, 177378);

                f_10306_177266_177377(boundInitExprOpt.IsDefault || (DynAbs.Tracing.TraceSender.Expression_False(10306, 177279, 177376) || f_10306_177309_177330(creationSyntax) == SyntaxKind.ImplicitArrayCreationExpression));
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 177574, 177595);

                int
                rank = f_10306_177585_177594(type)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 177609, 177637);

                int
                numSizes = sizes.Length
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 177651, 177706);

                int?[]
                knownSizes = new int?[f_10306_177680_177704(rank, numSizes)]
                ;
                try
                {
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 177895, 177900);

                    // If there are sizes given and there is an array initializer, then every size must be a
                    // constant. (We'll check later that it matches)
                    for (int
        i = 0
        ; (DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 177886, 178950) || true) && (i < numSizes)
        ; DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 177916, 177919)
        , ++i, DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 177886, 178950))

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 177886, 178950);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 178615, 178635);

                        var
                        size = sizes[i]
                        ;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 178653, 178706);

                        knownSizes[i] = f_10306_178669_178705(size);

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 178724, 178935) || true) && (f_10306_178728_178746_M(!size.HasAnyErrors) && (DynAbs.Tracing.TraceSender.Expression_True(10306, 178728, 178771) && knownSizes[i] == null))
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 178724, 178935);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 178813, 178877);

                            f_10306_178813_178876(diagnostics, ErrorCode.ERR_ConstantExpected, size.Syntax);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 178899, 178916);

                            hasErrors = true;
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 178724, 178935);
                        }
                    }
                }
                catch (System.Exception)
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoopByException(10306, 1, 1065);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoop(10306, 1, 1065);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 179106, 179234);

                BoundArrayInitialization
                initializer = f_10306_179145_179233(this, diagnostics, initSyntax, type, knownSizes, 1, boundInitExprOpt)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 179250, 179300);

                hasErrors = hasErrors || (DynAbs.Tracing.TraceSender.Expression_False(10306, 179262, 179299) || f_10306_179275_179299(initializer));
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 179316, 179364);

                bool
                hasCreationSyntax = creationSyntax != null
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 179378, 179458);

                CSharpSyntaxNode
                nonNullSyntax = (CSharpSyntaxNode)creationSyntax ?? (DynAbs.Tracing.TraceSender.Expression_Null<Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode?>(10306, 179411, 179457) ?? initSyntax)
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 179708, 180493) || true) && (numSizes == 0)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 179708, 180493);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 179759, 179815);

                    BoundExpression[]
                    sizeArray = new BoundExpression[rank]
                    ;
                    try
                    {
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 179842, 179847);
                        for (int
        i = 0
        ; (DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 179833, 180211) || true) && (i < rank)
        ; DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 179859, 179862)
        , i++, DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 179833, 180211))

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 179833, 180211);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 179904, 180192);

                            sizeArray[i] = new BoundLiteral(
                                                    nonNullSyntax,
                            f_10306_180002_180042(knownSizes[i] ?? (DynAbs.Tracing.TraceSender.Expression_Null<int?>(10306, 180023, 180041) ?? 0)),
                            f_10306_180069_180137(this, SpecialType.System_Int32, diagnostics, nonNullSyntax))
                            { WasCompilerGenerated = DynAbs.Tracing.TraceSender.TraceInitializationWrapper(() => true, 10306, 179919, 180191) };
                        }
                    }
                    catch (System.Exception)
                    {
                        DynAbs.Tracing.TraceSender.TraceExitLoopByException(10306, 1, 379);
                        throw;
                    }
                    finally
                    {
                        DynAbs.Tracing.TraceSender.TraceExitLoop(10306, 1, 379);
                    }
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 180229, 180267);

                    sizes = f_10306_180237_180266(sizeArray);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 179708, 180493);
                }

                else
                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 179708, 180493);

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 180301, 180493) || true) && (!hasErrors && (DynAbs.Tracing.TraceSender.Expression_True(10306, 180305, 180335) && rank != numSizes))
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 180301, 180493);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 180369, 180443);

                        f_10306_180369_180442(diagnostics, ErrorCode.ERR_BadIndexCount, nonNullSyntax, f_10306_180432_180441(type));
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 180461, 180478);

                        hasErrors = true;
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 180301, 180493);
                    }
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 179708, 180493);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 180509, 180913);

                return new BoundArrayCreation(nonNullSyntax, sizes, initializer, type, hasErrors: hasErrors)
                {
                    WasCompilerGenerated = DynAbs.Tracing.TraceSender.TraceInitializationWrapper(() => !hasCreationSyntax && (DynAbs.Tracing.TraceSender.Expression_True(10306, 180657, 180897) && (f_10306_180701_180718(initSyntax) == null || (DynAbs.Tracing.TraceSender.Expression_False(10306, 180701, 180807) || f_10306_180751_180775(f_10306_180751_180768(initSyntax)) != SyntaxKind.EqualsValueClause) || (DynAbs.Tracing.TraceSender.Expression_False(10306, 180701, 180896) || f_10306_180832_180882(((EqualsValueClauseSyntax)f_10306_180858_180875(initSyntax))) != initSyntax))
    ), 10306, 180516, 180912)
                };
                DynAbs.Tracing.TraceSender.TraceExitMethod(10306, 176497, 180924);

                Microsoft.CodeAnalysis.CSharp.SyntaxKind
                f_10306_177007_177028(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                this_param)
                {
                    var return_v = this_param.Kind();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 177007, 177028);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.SyntaxKind
                f_10306_177087_177108(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                this_param)
                {
                    var return_v = this_param.Kind();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 177087, 177108);
                    return return_v;
                }


                int
                f_10306_176951_177155(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 176951, 177155);
                    return 0;
                }


                int
                f_10306_177170_177202(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 177170, 177202);
                    return 0;
                }


                int
                f_10306_177217_177251(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 177217, 177251);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.SyntaxKind
                f_10306_177309_177330(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax?
                this_param)
                {
                    var return_v = this_param.Kind();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 177309, 177330);
                    return return_v;
                }


                int
                f_10306_177266_177377(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 177266, 177377);
                    return 0;
                }


                int
                f_10306_177585_177594(Microsoft.CodeAnalysis.CSharp.Symbols.ArrayTypeSymbol
                this_param)
                {
                    var return_v = this_param.Rank;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 177585, 177594);
                    return return_v;
                }


                int
                f_10306_177680_177704(int
                val1, int
                val2)
                {
                    var return_v = Math.Max(val1, val2);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 177680, 177704);
                    return return_v;
                }


                int?
                f_10306_178669_178705(Microsoft.CodeAnalysis.CSharp.BoundExpression
                expression)
                {
                    var return_v = GetIntegerConstantForArraySize(expression);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 178669, 178705);
                    return return_v;
                }


                bool
                f_10306_178728_178746_M(bool
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 178728, 178746);
                    return return_v;
                }


                int
                f_10306_178813_178876(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, Microsoft.CodeAnalysis.SyntaxNode
                syntax)
                {
                    Error(diagnostics, code, (Microsoft.CodeAnalysis.SyntaxNodeOrToken)syntax);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 178813, 178876);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.BoundArrayInitialization
                f_10306_179145_179233(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax
                node, Microsoft.CodeAnalysis.CSharp.Symbols.ArrayTypeSymbol
                type, int?[]
                knownSizes, int
                dimension, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                boundInitExprOpt)
                {
                    var return_v = this_param.BindArrayInitializerList(diagnostics, node, type, knownSizes, dimension, boundInitExprOpt);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 179145, 179233);
                    return return_v;
                }


                bool
                f_10306_179275_179299(Microsoft.CodeAnalysis.CSharp.BoundArrayInitialization
                this_param)
                {
                    var return_v = this_param.HasAnyErrors;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 179275, 179299);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ConstantValue
                f_10306_180002_180042(int
                value)
                {
                    var return_v = ConstantValue.Create(value);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 180002, 180042);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                f_10306_180069_180137(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.SpecialType
                typeId, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode
                node)
                {
                    var return_v = this_param.GetSpecialType(typeId, diagnostics, (Microsoft.CodeAnalysis.SyntaxNode)node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 180069, 180137);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                f_10306_180237_180266(Microsoft.CodeAnalysis.CSharp.BoundExpression[]
                items)
                {
                    var return_v = items.AsImmutableOrNull<Microsoft.CodeAnalysis.CSharp.BoundExpression>();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 180237, 180266);
                    return return_v;
                }


                int
                f_10306_180432_180441(Microsoft.CodeAnalysis.CSharp.Symbols.ArrayTypeSymbol
                this_param)
                {
                    var return_v = this_param.Rank;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 180432, 180441);
                    return return_v;
                }


                int
                f_10306_180369_180442(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode
                syntax, params object[]
                args)
                {
                    Error(diagnostics, code, syntax, args);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 180369, 180442);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode?
                f_10306_180701_180718(Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax
                this_param)
                {
                    var return_v = this_param.Parent;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 180701, 180718);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode
                f_10306_180751_180768(Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax
                this_param)
                {
                    var return_v = this_param.Parent;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 180751, 180768);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.SyntaxKind
                f_10306_180751_180775(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode
                this_param)
                {
                    var return_v = this_param.Kind();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 180751, 180775);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode
                f_10306_180858_180875(Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax
                this_param)
                {
                    var return_v = this_param.Parent;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 180858, 180875);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                f_10306_180832_180882(Microsoft.CodeAnalysis.CSharp.Syntax.EqualsValueClauseSyntax
                this_param)
                {
                    var return_v = this_param.Value;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 180832, 180882);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 176497, 180924);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 176497, 180924);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private BoundExpression BindStackAllocArrayCreationExpression(
                    StackAllocArrayCreationExpressionSyntax node, DiagnosticBag diagnostics)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10306, 180936, 184951);
                bool hasErrors = default(bool);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 181109, 181143);

                TypeSyntax
                typeSyntax = f_10306_181133_181142(node)
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 181159, 181663) || true) && (f_10306_181163_181180(typeSyntax) != SyntaxKind.ArrayType)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 181159, 181663);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 181238, 181302);

                    f_10306_181238_181301(diagnostics, ErrorCode.ERR_BadStackAllocExpr, typeSyntax);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 181322, 181648);

                    return f_10306_181329_181647(node, LookupResultKind.NotCreatable, ImmutableArray<Symbol>.Empty, ImmutableArray<BoundExpression>.Empty, f_10306_181590_181646(f_10306_181612_181645(this, typeSyntax, diagnostics)));
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 181159, 181663);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 181679, 181741);

                ArrayTypeSyntax
                arrayTypeSyntax = (ArrayTypeSyntax)typeSyntax
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 181755, 181807);

                var
                elementTypeSyntax = f_10306_181779_181806(arrayTypeSyntax)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 181821, 181985);

                var
                arrayType = (ArrayTypeSymbol)f_10306_181854_181979(this, arrayTypeSyntax, diagnostics, permitDimensions: true, basesBeingResolved: null, disallowRestrictedTypes: false).Type
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 181999, 182054);

                var
                elementType = f_10306_182017_182053(arrayType)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 182070, 182158);

                TypeSymbol
                type = f_10306_182088_182157(this, node, elementType, diagnostics, out hasErrors)
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 182172, 182370) || true) && (!f_10306_182177_182207(elementType.Type))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 182172, 182370);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 182241, 182355);

                    hasErrors = hasErrors || (DynAbs.Tracing.TraceSender.Expression_False(10306, 182253, 182354) || f_10306_182266_182354(f_10306_182283_182294(), elementType.Type, f_10306_182314_182340(elementTypeSyntax), diagnostics));
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 182172, 182370);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 182386, 182471);

                SyntaxList<ArrayRankSpecifierSyntax>
                rankSpecifiers = f_10306_182440_182470(arrayTypeSyntax)
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 182487, 183700) || true) && (rankSpecifiers.Count != 1 || (DynAbs.Tracing.TraceSender.Expression_False(10306, 182491, 182571) || rankSpecifiers[0].Sizes.Count != 1))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 182487, 183700);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 182673, 182737);

                    f_10306_182673_182736(diagnostics, ErrorCode.ERR_BadStackAllocExpr, typeSyntax);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 182757, 182815);

                    var
                    builder = f_10306_182771_182814()
                    ;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 182833, 182888);

                    var
                    discardedDiagnostics = f_10306_182860_182887()
                    ;
                    try
                    {
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 182906, 183355);
                        foreach (ArrayRankSpecifierSyntax rankSpecifier in f_10306_182957_182971_I(rankSpecifiers))
                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 182906, 183355);
                            try
                            {
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 183013, 183336);
                                foreach (ExpressionSyntax size in f_10306_183047_183066_I(f_10306_183047_183066(rankSpecifier)))
                                {
                                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 183013, 183336);

                                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 183116, 183313) || true) && (f_10306_183120_183131(size) != SyntaxKind.OmittedArraySizeExpression)
                                    )

                                    {
                                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 183116, 183313);
                                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 183230, 183286);

                                        f_10306_183230_183285(builder, f_10306_183242_183284(this, size, discardedDiagnostics));
                                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 183116, 183313);
                                    }
                                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 183013, 183336);
                                }
                            }
                            catch (System.Exception)
                            {
                                DynAbs.Tracing.TraceSender.TraceExitLoopByException(10306, 1, 324);
                                throw;
                            }
                            finally
                            {
                                DynAbs.Tracing.TraceSender.TraceExitLoop(10306, 1, 324);
                            }
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 182906, 183355);
                        }
                    }
                    catch (System.Exception)
                    {
                        DynAbs.Tracing.TraceSender.TraceExitLoopByException(10306, 1, 450);
                        throw;
                    }
                    finally
                    {
                        DynAbs.Tracing.TraceSender.TraceExitLoop(10306, 1, 450);
                    }
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 183375, 183403);

                    f_10306_183375_183402(
                                    discardedDiagnostics);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 183423, 183685);

                    return f_10306_183430_183684(node, LookupResultKind.Empty, ImmutableArray<Symbol>.Empty, f_10306_183598_183626(builder), f_10306_183649_183683(elementType));
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 182487, 183700);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 183716, 183774);

                ExpressionSyntax
                countSyntax = f_10306_183747_183770(rankSpecifiers[0])[0]
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 183788, 183817);

                BoundExpression
                count = null
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 183831, 184631) || true) && (f_10306_183835_183853(countSyntax) != SyntaxKind.OmittedArraySizeExpression)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 183831, 184631);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 183928, 183994);

                    count = f_10306_183936_183993(this, countSyntax, diagnostics, BindValueKind.RValue);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 184012, 184133);

                    count = f_10306_184020_184132(this, f_10306_184052_184111(this, SpecialType.System_Int32, diagnostics, node), count, diagnostics);

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 184151, 184362) || true) && (f_10306_184155_184192(count))
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 184151, 184362);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 184234, 184304);

                        f_10306_184234_184303(diagnostics, ErrorCode.ERR_NegativeStackAllocSize, countSyntax);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 184326, 184343);

                        hasErrors = true;
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 184151, 184362);
                    }
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 183831, 184631);
                }

                else
                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 183831, 184631);

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 184396, 184631) || true) && (f_10306_184400_184416(node) == null)
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 184396, 184631);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 184458, 184528);

                        f_10306_184458_184527(diagnostics, ErrorCode.ERR_MissingArraySize, rankSpecifiers[0]);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 184546, 184581);

                        count = f_10306_184554_184580(this, countSyntax);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 184599, 184616);

                        hasErrors = true;
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 184396, 184631);
                    }
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 183831, 184631);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 184647, 184940);

                return (DynAbs.Tracing.TraceSender.Conditional_F1(10306, 184654, 184678) || ((f_10306_184654_184670(node) == null
                && DynAbs.Tracing.TraceSender.Conditional_F2(10306, 184698, 184811)) || DynAbs.Tracing.TraceSender.Conditional_F3(10306, 184831, 184939))) ? f_10306_184698_184811(node, elementType.Type, count, initializerOpt: null, type, hasErrors: hasErrors) : f_10306_184831_184939(this, node, f_10306_184867_184883(node), type, elementType.Type, count, diagnostics, hasErrors);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10306, 180936, 184951);

                Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax
                f_10306_181133_181142(Microsoft.CodeAnalysis.CSharp.Syntax.StackAllocArrayCreationExpressionSyntax
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 181133, 181142);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.SyntaxKind
                f_10306_181163_181180(Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax
                this_param)
                {
                    var return_v = this_param.Kind();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 181163, 181180);
                    return return_v;
                }


                int
                f_10306_181238_181301(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax
                syntax)
                {
                    Error(diagnostics, code, (Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode)syntax);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 181238, 181301);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                f_10306_181612_181645(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax
                syntax, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.BindType((Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)syntax, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 181612, 181645);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.PointerTypeSymbol
                f_10306_181590_181646(Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                pointedAtType)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.Symbols.PointerTypeSymbol(pointedAtType);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 181590, 181646);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundBadExpression
                f_10306_181329_181647(Microsoft.CodeAnalysis.CSharp.Syntax.StackAllocArrayCreationExpressionSyntax
                syntax, Microsoft.CodeAnalysis.CSharp.LookupResultKind
                resultKind, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>
                symbols, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                childBoundNodes, Microsoft.CodeAnalysis.CSharp.Symbols.PointerTypeSymbol
                type)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.BoundBadExpression((Microsoft.CodeAnalysis.SyntaxNode)syntax, resultKind, symbols, childBoundNodes, (Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol)type);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 181329, 181647);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax
                f_10306_181779_181806(Microsoft.CodeAnalysis.CSharp.Syntax.ArrayTypeSyntax
                this_param)
                {
                    var return_v = this_param.ElementType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 181779, 181806);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                f_10306_181854_181979(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.ArrayTypeSyntax
                node, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, bool
                permitDimensions, Roslyn.Utilities.ConsList<Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol>
                basesBeingResolved, bool
                disallowRestrictedTypes)
                {
                    var return_v = this_param.BindArrayType(node, diagnostics, permitDimensions: permitDimensions, basesBeingResolved: basesBeingResolved, disallowRestrictedTypes: disallowRestrictedTypes);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 181854, 181979);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                f_10306_182017_182053(Microsoft.CodeAnalysis.CSharp.Symbols.ArrayTypeSymbol
                this_param)
                {
                    var return_v = this_param.ElementTypeWithAnnotations;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 182017, 182053);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                f_10306_182088_182157(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.StackAllocArrayCreationExpressionSyntax
                node, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                elementTypeWithAnnotations, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, out bool
                hasErrors)
                {
                    var return_v = this_param.GetStackAllocType((Microsoft.CodeAnalysis.SyntaxNode)node, elementTypeWithAnnotations, diagnostics, out hasErrors);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 182088, 182157);
                    return return_v;
                }


                bool
                f_10306_182177_182207(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                type)
                {
                    var return_v = type.IsErrorType();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 182177, 182207);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                f_10306_182283_182294()
                {
                    var return_v = Compilation;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 182283, 182294);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Location
                f_10306_182314_182340(Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax
                this_param)
                {
                    var return_v = this_param.Location;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 182314, 182340);
                    return return_v;
                }


                bool
                f_10306_182266_182354(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                compilation, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                type, Microsoft.CodeAnalysis.Location
                location, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = CheckManagedAddr(compilation, type, location, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 182266, 182354);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.ArrayRankSpecifierSyntax>
                f_10306_182440_182470(Microsoft.CodeAnalysis.CSharp.Syntax.ArrayTypeSyntax
                this_param)
                {
                    var return_v = this_param.RankSpecifiers;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 182440, 182470);
                    return return_v;
                }


                int
                f_10306_182673_182736(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax
                syntax)
                {
                    Error(diagnostics, code, (Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode)syntax);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 182673, 182736);
                    return 0;
                }


                Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                f_10306_182771_182814()
                {
                    var return_v = ArrayBuilder<BoundExpression>.GetInstance();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 182771, 182814);
                    return return_v;
                }


                Microsoft.CodeAnalysis.DiagnosticBag
                f_10306_182860_182887()
                {
                    var return_v = DiagnosticBag.GetInstance();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 182860, 182887);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SeparatedSyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax>
                f_10306_183047_183066(Microsoft.CodeAnalysis.CSharp.Syntax.ArrayRankSpecifierSyntax
                this_param)
                {
                    var return_v = this_param.Sizes;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 183047, 183066);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.SyntaxKind
                f_10306_183120_183131(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                this_param)
                {
                    var return_v = this_param.Kind();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 183120, 183131);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_183242_183284(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                node, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.BindExpression(node, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 183242, 183284);
                    return return_v;
                }


                int
                f_10306_183230_183285(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                item)
                {
                    this_param.Add(item);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 183230, 183285);
                    return 0;
                }


                Microsoft.CodeAnalysis.SeparatedSyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax>
                f_10306_183047_183066_I(Microsoft.CodeAnalysis.SeparatedSyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax>
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 183047, 183066);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.ArrayRankSpecifierSyntax>
                f_10306_182957_182971_I(Microsoft.CodeAnalysis.SyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.ArrayRankSpecifierSyntax>
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 182957, 182971);
                    return return_v;
                }


                int
                f_10306_183375_183402(Microsoft.CodeAnalysis.DiagnosticBag
                this_param)
                {
                    this_param.Free();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 183375, 183402);
                    return 0;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                f_10306_183598_183626(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                this_param)
                {
                    var return_v = this_param.ToImmutableAndFree();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 183598, 183626);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.PointerTypeSymbol
                f_10306_183649_183683(Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                pointedAtType)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.Symbols.PointerTypeSymbol(pointedAtType);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 183649, 183683);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundBadExpression
                f_10306_183430_183684(Microsoft.CodeAnalysis.CSharp.Syntax.StackAllocArrayCreationExpressionSyntax
                syntax, Microsoft.CodeAnalysis.CSharp.LookupResultKind
                resultKind, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>
                symbols, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                childBoundNodes, Microsoft.CodeAnalysis.CSharp.Symbols.PointerTypeSymbol
                type)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.BoundBadExpression((Microsoft.CodeAnalysis.SyntaxNode)syntax, resultKind, symbols, childBoundNodes, (Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol)type);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 183430, 183684);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SeparatedSyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax>
                f_10306_183747_183770(Microsoft.CodeAnalysis.CSharp.Syntax.ArrayRankSpecifierSyntax
                this_param)
                {
                    var return_v = this_param.Sizes;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 183747, 183770);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.SyntaxKind
                f_10306_183835_183853(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                this_param)
                {
                    var return_v = this_param.Kind();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 183835, 183853);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_183936_183993(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                node, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.Binder.BindValueKind
                valueKind)
                {
                    var return_v = this_param.BindValue(node, diagnostics, valueKind);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 183936, 183993);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                f_10306_184052_184111(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.SpecialType
                typeId, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.Syntax.StackAllocArrayCreationExpressionSyntax
                node)
                {
                    var return_v = this_param.GetSpecialType(typeId, diagnostics, (Microsoft.CodeAnalysis.SyntaxNode)node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 184052, 184111);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_184020_184132(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                targetType, Microsoft.CodeAnalysis.CSharp.BoundExpression
                expression, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.GenerateConversionForAssignment((Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol)targetType, expression, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 184020, 184132);
                    return return_v;
                }


                bool
                f_10306_184155_184192(Microsoft.CodeAnalysis.CSharp.BoundExpression
                expression)
                {
                    var return_v = IsNegativeConstantForArraySize(expression);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 184155, 184192);
                    return return_v;
                }


                int
                f_10306_184234_184303(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                syntax)
                {
                    Error(diagnostics, code, (Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode)syntax);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 184234, 184303);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax?
                f_10306_184400_184416(Microsoft.CodeAnalysis.CSharp.Syntax.StackAllocArrayCreationExpressionSyntax
                this_param)
                {
                    var return_v = this_param.Initializer;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 184400, 184416);
                    return return_v;
                }


                int
                f_10306_184458_184527(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, Microsoft.CodeAnalysis.CSharp.Syntax.ArrayRankSpecifierSyntax
                syntax)
                {
                    Error(diagnostics, code, (Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode)syntax);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 184458, 184527);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.BoundBadExpression
                f_10306_184554_184580(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                syntax)
                {
                    var return_v = this_param.BadExpression((Microsoft.CodeAnalysis.SyntaxNode)syntax);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 184554, 184580);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax?
                f_10306_184654_184670(Microsoft.CodeAnalysis.CSharp.Syntax.StackAllocArrayCreationExpressionSyntax
                this_param)
                {
                    var return_v = this_param.Initializer;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 184654, 184670);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundStackAllocArrayCreation
                f_10306_184698_184811(Microsoft.CodeAnalysis.CSharp.Syntax.StackAllocArrayCreationExpressionSyntax
                syntax, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                elementType, Microsoft.CodeAnalysis.CSharp.BoundExpression?
                count, Microsoft.CodeAnalysis.CSharp.BoundArrayInitialization?
                initializerOpt, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                type, bool
                hasErrors)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.BoundStackAllocArrayCreation((Microsoft.CodeAnalysis.SyntaxNode)syntax, elementType, count, initializerOpt: initializerOpt, type, hasErrors: hasErrors);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 184698, 184811);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax
                f_10306_184867_184883(Microsoft.CodeAnalysis.CSharp.Syntax.StackAllocArrayCreationExpressionSyntax
                this_param)
                {
                    var return_v = this_param.Initializer;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 184867, 184883);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_184831_184939(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.StackAllocArrayCreationExpressionSyntax
                node, Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax
                initSyntax, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                type, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                elementType, Microsoft.CodeAnalysis.CSharp.BoundExpression?
                sizeOpt, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, bool
                hasErrors)
                {
                    var return_v = this_param.BindStackAllocWithInitializer((Microsoft.CodeAnalysis.SyntaxNode)node, initSyntax, type, elementType, sizeOpt, diagnostics, hasErrors);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 184831, 184939);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 180936, 184951);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 180936, 184951);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private bool ReportBadStackAllocPosition(SyntaxNode node, DiagnosticBag diagnostics)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10306, 184963, 186283);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 185072, 185193);

                f_10306_185072_185192(node is StackAllocArrayCreationExpressionSyntax || (DynAbs.Tracing.TraceSender.Expression_False(10306, 185085, 185191) || node is ImplicitStackAllocArrayCreationExpressionSyntax));
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 185207, 185235);

                bool
                inLegalPosition = true
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 185382, 185472);

                LanguageVersion
                requiredVersion = f_10306_185416_185471(MessageID.IDS_FeatureNestedStackalloc)
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 185486, 185915) || true) && (requiredVersion > f_10306_185508_185535(f_10306_185508_185519()))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 185486, 185915);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 185569, 185683);

                    inLegalPosition = (f_10306_185588_185602() || (DynAbs.Tracing.TraceSender.Expression_False(10306, 185588, 185633) || f_10306_185606_185633())) && (DynAbs.Tracing.TraceSender.Expression_True(10306, 185587, 185682) && f_10306_185638_185682(node));

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 185701, 185900) || true) && (!inLegalPosition)
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 185701, 185900);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 185763, 185881);

                        f_10306_185763_185880(MessageID.IDS_FeatureNestedStackalloc, diagnostics, node, f_10306_185845_185865(node).GetLocation());
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 185701, 185900);
                    }
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 185486, 185915);
                }

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 186010, 186233) || true) && (f_10306_186014_186119(this.Flags, BinderFlags.InCatchBlock | BinderFlags.InCatchFilter | BinderFlags.InFinallyBlock))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 186010, 186233);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 186153, 186218);

                    f_10306_186153_186217(diagnostics, ErrorCode.ERR_StackallocInCatchFinally, node);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 186010, 186233);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 186249, 186272);

                return inLegalPosition;
                DynAbs.Tracing.TraceSender.TraceExitMethod(10306, 184963, 186283);

                int
                f_10306_185072_185192(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 185072, 185192);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.LanguageVersion
                f_10306_185416_185471(Microsoft.CodeAnalysis.CSharp.MessageID
                feature)
                {
                    var return_v = feature.RequiredVersion();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 185416, 185471);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                f_10306_185508_185519()
                {
                    var return_v = Compilation;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 185508, 185519);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.LanguageVersion
                f_10306_185508_185535(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param)
                {
                    var return_v = this_param.LanguageVersion;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 185508, 185535);
                    return return_v;
                }


                bool
                f_10306_185588_185602()
                {
                    var return_v = IsInMethodBody;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 185588, 185602);
                    return return_v;
                }


                bool
                f_10306_185606_185633()
                {
                    var return_v = IsLocalFunctionsScopeBinder;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 185606, 185633);
                    return return_v;
                }


                bool
                f_10306_185638_185682(Microsoft.CodeAnalysis.SyntaxNode
                node)
                {
                    var return_v = node.IsLegalCSharp73SpanStackAllocPosition();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 185638, 185682);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SyntaxToken
                f_10306_185845_185865(Microsoft.CodeAnalysis.SyntaxNode
                this_param)
                {
                    var return_v = this_param.GetFirstToken();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 185845, 185865);
                    return return_v;
                }


                bool
                f_10306_185763_185880(Microsoft.CodeAnalysis.CSharp.MessageID
                feature, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.Location
                location)
                {
                    var return_v = feature.CheckFeatureAvailability(diagnostics, syntax, location);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 185763, 185880);
                    return return_v;
                }


                bool
                f_10306_186014_186119(Microsoft.CodeAnalysis.CSharp.BinderFlags
                self, Microsoft.CodeAnalysis.CSharp.BinderFlags
                other)
                {
                    var return_v = self.IncludesAny(other);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 186014, 186119);
                    return return_v;
                }


                int
                f_10306_186153_186217(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, Microsoft.CodeAnalysis.SyntaxNode
                syntax)
                {
                    Error(diagnostics, code, (Microsoft.CodeAnalysis.SyntaxNodeOrToken)syntax);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 186153, 186217);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 184963, 186283);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 184963, 186283);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private TypeSymbol GetStackAllocType(SyntaxNode node, TypeWithAnnotations elementTypeWithAnnotations, DiagnosticBag diagnostics, out bool hasErrors)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10306, 186295, 188874);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 186468, 186537);

                var
                inLegalPosition = f_10306_186490_186536(this, node, diagnostics)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 186551, 186580);

                hasErrors = !inLegalPosition;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 186594, 187393) || true) && (inLegalPosition && (DynAbs.Tracing.TraceSender.Expression_True(10306, 186598, 186647) && !f_10306_186618_186647(node)))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 186594, 187393);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 186681, 186758);

                    f_10306_186681_186757(node, MessageID.IDS_FeatureRefStructs, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 186778, 186858);

                    var
                    spanType = f_10306_186793_186857(this, WellKnownType.System_Span_T, diagnostics, node)
                    ;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 186876, 187378);

                    return f_10306_186883_187377(this, type: spanType, typeSyntax: (DynAbs.Tracing.TraceSender.Conditional_F1(10306, 186973, 187032) || ((f_10306_186973_186984(node) == SyntaxKind.StackAllocArrayCreationExpression
                    && DynAbs.Tracing.TraceSender.Conditional_F2(10306, 187060, 187112)) || DynAbs.Tracing.TraceSender.Conditional_F3(10306, 187140, 187144))) ? f_10306_187060_187112(((StackAllocArrayCreationExpressionSyntax)node)) : node, typeArgumentsSyntax: default, typeArguments: f_10306_187233_187282(elementTypeWithAnnotations), basesBeingResolved: null, diagnostics: diagnostics);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 186594, 187393);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 187501, 187513);

                return null;

                static bool isStackallocTargetTyped(SyntaxNode node)
                {
                    try
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterStaticMethod(10306, 187851, 188863);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 187936, 187963);

                        f_10306_187936_187962(node != null);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 187983, 188026);

                        SyntaxNode
                        equalsValueClause = f_10306_188014_188025(node)
                        ;

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 188046, 188179) || true) && (!f_10306_188051_188105(equalsValueClause, SyntaxKind.EqualsValueClause))
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 188046, 188179);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 188147, 188160);

                            return false;
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 188046, 188179);
                        }
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 188199, 188256);

                        SyntaxNode
                        variableDeclarator = f_10306_188231_188255(equalsValueClause)
                        ;

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 188276, 188411) || true) && (!f_10306_188281_188337(variableDeclarator, SyntaxKind.VariableDeclarator))
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 188276, 188411);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 188379, 188392);

                            return false;
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 188276, 188411);
                        }
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 188431, 188490);

                        SyntaxNode
                        variableDeclaration = f_10306_188464_188489(variableDeclarator)
                        ;

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 188508, 188645) || true) && (!f_10306_188513_188571(variableDeclaration, SyntaxKind.VariableDeclaration))
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 188508, 188645);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 188613, 188626);

                            return false;
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 188508, 188645);
                        }
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 188665, 188848);

                        return
                        f_10306_188693_188764(f_10306_188693_188719(variableDeclaration), SyntaxKind.LocalDeclarationStatement) || (DynAbs.Tracing.TraceSender.Expression_False(10306, 188693, 188847) || f_10306_188789_188847(f_10306_188789_188815(variableDeclaration), SyntaxKind.ForStatement));
                        DynAbs.Tracing.TraceSender.TraceExitStaticMethod(10306, 187851, 188863);

                        int
                        f_10306_187936_187962(bool
                        condition)
                        {
                            Debug.Assert(condition);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 187936, 187962);
                            return 0;
                        }


                        Microsoft.CodeAnalysis.SyntaxNode?
                        f_10306_188014_188025(Microsoft.CodeAnalysis.SyntaxNode
                        this_param)
                        {
                            var return_v = this_param.Parent;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 188014, 188025);
                            return return_v;
                        }


                        bool
                        f_10306_188051_188105(Microsoft.CodeAnalysis.SyntaxNode?
                        node, Microsoft.CodeAnalysis.CSharp.SyntaxKind
                        kind)
                        {
                            var return_v = node.IsKind(kind);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 188051, 188105);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.SyntaxNode?
                        f_10306_188231_188255(Microsoft.CodeAnalysis.SyntaxNode
                        this_param)
                        {
                            var return_v = this_param.Parent;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 188231, 188255);
                            return return_v;
                        }


                        bool
                        f_10306_188281_188337(Microsoft.CodeAnalysis.SyntaxNode?
                        node, Microsoft.CodeAnalysis.CSharp.SyntaxKind
                        kind)
                        {
                            var return_v = node.IsKind(kind);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 188281, 188337);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.SyntaxNode?
                        f_10306_188464_188489(Microsoft.CodeAnalysis.SyntaxNode
                        this_param)
                        {
                            var return_v = this_param.Parent;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 188464, 188489);
                            return return_v;
                        }


                        bool
                        f_10306_188513_188571(Microsoft.CodeAnalysis.SyntaxNode?
                        node, Microsoft.CodeAnalysis.CSharp.SyntaxKind
                        kind)
                        {
                            var return_v = node.IsKind(kind);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 188513, 188571);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.SyntaxNode?
                        f_10306_188693_188719(Microsoft.CodeAnalysis.SyntaxNode
                        this_param)
                        {
                            var return_v = this_param.Parent;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 188693, 188719);
                            return return_v;
                        }


                        bool
                        f_10306_188693_188764(Microsoft.CodeAnalysis.SyntaxNode?
                        node, Microsoft.CodeAnalysis.CSharp.SyntaxKind
                        kind)
                        {
                            var return_v = node.IsKind(kind);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 188693, 188764);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.SyntaxNode?
                        f_10306_188789_188815(Microsoft.CodeAnalysis.SyntaxNode
                        this_param)
                        {
                            var return_v = this_param.Parent;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 188789, 188815);
                            return return_v;
                        }


                        bool
                        f_10306_188789_188847(Microsoft.CodeAnalysis.SyntaxNode?
                        node, Microsoft.CodeAnalysis.CSharp.SyntaxKind
                        kind)
                        {
                            var return_v = node.IsKind(kind);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 188789, 188847);
                            return return_v;
                        }

                    }
                    catch
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 187851, 188863);
                        throw;
                    }
                    finally
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 187851, 188863);
                    }
                    throw new System.Exception("Slicer error: unreachable code");
                }
                DynAbs.Tracing.TraceSender.TraceExitMethod(10306, 186295, 188874);

                bool
                f_10306_186490_186536(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.SyntaxNode
                node, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.ReportBadStackAllocPosition(node, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 186490, 186536);
                    return return_v;
                }


                bool
                f_10306_186618_186647(Microsoft.CodeAnalysis.SyntaxNode
                node)
                {
                    var return_v = isStackallocTargetTyped(node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 186618, 186647);
                    return return_v;
                }


                bool
                f_10306_186681_186757(Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.CSharp.MessageID
                feature, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = CheckFeatureAvailability(syntax, feature, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 186681, 186757);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                f_10306_186793_186857(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.WellKnownType
                type, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.SyntaxNode
                node)
                {
                    var return_v = this_param.GetWellKnownType(type, diagnostics, node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 186793, 186857);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.SyntaxKind
                f_10306_186973_186984(Microsoft.CodeAnalysis.SyntaxNode
                node)
                {
                    var return_v = node.Kind();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 186973, 186984);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax
                f_10306_187060_187112(Microsoft.CodeAnalysis.CSharp.Syntax.StackAllocArrayCreationExpressionSyntax
                this_param)
                {
                    var return_v = this_param.Type
                    ;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 187060, 187112);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations>
                f_10306_187233_187282(Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                item)
                {
                    var return_v = ImmutableArray.Create(item);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 187233, 187282);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                f_10306_186883_187377(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                type, Microsoft.CodeAnalysis.SyntaxNode
                typeSyntax, Microsoft.CodeAnalysis.SeparatedSyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax>
                typeArgumentsSyntax, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations>
                typeArguments, Roslyn.Utilities.ConsList<Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol>
                basesBeingResolved, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.ConstructNamedType(type: type, typeSyntax: typeSyntax, typeArgumentsSyntax: typeArgumentsSyntax, typeArguments: typeArguments, basesBeingResolved: basesBeingResolved, diagnostics: diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 186883, 187377);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 186295, 188874);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 186295, 188874);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private BoundExpression BindStackAllocWithInitializer(
                    SyntaxNode node,
                    InitializerExpressionSyntax initSyntax,
                    TypeSymbol type,
                    TypeSymbol elementType,
                    BoundExpression sizeOpt,
                    DiagnosticBag diagnostics,
                    bool hasErrors,
                    ImmutableArray<BoundExpression> boundInitExprOpt = default)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10306, 188886, 191059);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 189295, 189436);

                f_10306_189295_189435(f_10306_189308_189373(node, SyntaxKind.ImplicitStackAllocArrayCreationExpression) || (DynAbs.Tracing.TraceSender.Expression_False(10306, 189308, 189434) || f_10306_189377_189434(node, SyntaxKind.StackAllocArrayCreationExpression)));

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 189452, 189630) || true) && (boundInitExprOpt.IsDefault)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 189452, 189630);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 189516, 189615);

                    boundInitExprOpt = f_10306_189535_189614(this, initSyntax, diagnostics, dimension: 1, rank: 1);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 189452, 189630);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 189646, 189806);

                boundInitExprOpt = boundInitExprOpt.SelectAsArray((expr, t) => GenerateConversionForAssignment(t.elementType, expr, t.diagnostics), (elementType, diagnostics));

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 189822, 190887) || true) && (sizeOpt != null)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 189822, 190887);

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 189875, 190540) || true) && (f_10306_189879_189900_M(!sizeOpt.HasAnyErrors))
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 189875, 190540);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 189942, 190005);

                        int?
                        constantSizeOpt = f_10306_189965_190004(sizeOpt)
                        ;

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 190027, 190521) || true) && (constantSizeOpt == null)
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 190027, 190521);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 190104, 190171);

                            f_10306_190104_190170(diagnostics, ErrorCode.ERR_ConstantExpected, sizeOpt.Syntax);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 190197, 190214);

                            hasErrors = true;
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 190027, 190521);
                        }

                        else
                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 190027, 190521);

                            if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 190264, 190521) || true) && (boundInitExprOpt.Length != constantSizeOpt)
                            )

                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 190264, 190521);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 190360, 190455);

                                f_10306_190360_190454(diagnostics, ErrorCode.ERR_ArrayInitializerIncorrectLength, node, f_10306_190432_190453(constantSizeOpt));
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 190481, 190498);

                                hasErrors = true;
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 190264, 190521);
                            }
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 190027, 190521);
                        }
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 189875, 190540);
                    }
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 189822, 190887);
                }

                else

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 189822, 190887);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 190606, 190872);

                    sizeOpt = new BoundLiteral(
                                            node,
                    f_10306_190690_190735(boundInitExprOpt.Length),
                    f_10306_190762_190821(this, SpecialType.System_Int32, diagnostics, node))
                    { WasCompilerGenerated = DynAbs.Tracing.TraceSender.TraceInitializationWrapper(() => true, 10306, 190616, 190871) };
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 189822, 190887);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 190903, 191048);

                return f_10306_190910_191047(node, elementType, sizeOpt, f_10306_190971_191029(initSyntax, boundInitExprOpt), type, hasErrors);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10306, 188886, 191059);

                bool
                f_10306_189308_189373(Microsoft.CodeAnalysis.SyntaxNode
                node, Microsoft.CodeAnalysis.CSharp.SyntaxKind
                kind)
                {
                    var return_v = node.IsKind(kind);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 189308, 189373);
                    return return_v;
                }


                bool
                f_10306_189377_189434(Microsoft.CodeAnalysis.SyntaxNode
                node, Microsoft.CodeAnalysis.CSharp.SyntaxKind
                kind)
                {
                    var return_v = node.IsKind(kind);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 189377, 189434);
                    return return_v;
                }


                int
                f_10306_189295_189435(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 189295, 189435);
                    return 0;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                f_10306_189535_189614(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax
                initializer, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, int
                dimension, int
                rank)
                {
                    var return_v = this_param.BindArrayInitializerExpressions(initializer, diagnostics, dimension: dimension, rank: rank);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 189535, 189614);
                    return return_v;
                }


                bool
                f_10306_189879_189900_M(bool
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 189879, 189900);
                    return return_v;
                }


                int?
                f_10306_189965_190004(Microsoft.CodeAnalysis.CSharp.BoundExpression
                expression)
                {
                    var return_v = GetIntegerConstantForArraySize(expression);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 189965, 190004);
                    return return_v;
                }


                int
                f_10306_190104_190170(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, Microsoft.CodeAnalysis.SyntaxNode
                syntax)
                {
                    Error(diagnostics, code, (Microsoft.CodeAnalysis.SyntaxNodeOrToken)syntax);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 190104, 190170);
                    return 0;
                }


                int
                f_10306_190432_190453(int?
                this_param)
                {
                    var return_v = this_param.Value;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 190432, 190453);
                    return return_v;
                }


                int
                f_10306_190360_190454(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, Microsoft.CodeAnalysis.SyntaxNode
                syntax, params object[]
                args)
                {
                    Error(diagnostics, code, (Microsoft.CodeAnalysis.SyntaxNodeOrToken)syntax, args);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 190360, 190454);
                    return 0;
                }


                Microsoft.CodeAnalysis.ConstantValue
                f_10306_190690_190735(int
                value)
                {
                    var return_v = ConstantValue.Create(value);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 190690, 190735);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                f_10306_190762_190821(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.SpecialType
                typeId, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.SyntaxNode
                node)
                {
                    var return_v = this_param.GetSpecialType(typeId, diagnostics, node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 190762, 190821);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundArrayInitialization
                f_10306_190971_191029(Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax
                syntax, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                initializers)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.BoundArrayInitialization((Microsoft.CodeAnalysis.SyntaxNode)syntax, initializers);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 190971, 191029);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundStackAllocArrayCreation
                f_10306_190910_191047(Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                elementType, Microsoft.CodeAnalysis.CSharp.BoundExpression
                count, Microsoft.CodeAnalysis.CSharp.BoundArrayInitialization
                initializerOpt, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                type, bool
                hasErrors)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.BoundStackAllocArrayCreation(syntax, elementType, count, initializerOpt, type, hasErrors);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 190910, 191047);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 188886, 191059);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 188886, 191059);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private static int? GetIntegerConstantForArraySize(BoundExpression expression)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterStaticMethod(10306, 191071, 191801);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 191362, 191395);

                f_10306_191362_191394(expression != null);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 191409, 191497) || true) && (f_10306_191413_191436(expression))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 191409, 191497);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 191470, 191482);

                    return null;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 191409, 191497);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 191513, 191558);

                var
                constantValue = f_10306_191533_191557(expression)
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 191574, 191742) || true) && (constantValue == null || (DynAbs.Tracing.TraceSender.Expression_False(10306, 191578, 191622) || f_10306_191603_191622(constantValue)) || (DynAbs.Tracing.TraceSender.Expression_False(10306, 191578, 191681) || f_10306_191626_191653(f_10306_191626_191641(expression)) != SpecialType.System_Int32))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 191574, 191742);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 191715, 191727);

                    return null;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 191574, 191742);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 191758, 191790);

                return f_10306_191765_191789(constantValue);
                DynAbs.Tracing.TraceSender.TraceExitStaticMethod(10306, 191071, 191801);

                int
                f_10306_191362_191394(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 191362, 191394);
                    return 0;
                }


                bool
                f_10306_191413_191436(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.HasAnyErrors;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 191413, 191436);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ConstantValue?
                f_10306_191533_191557(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.ConstantValue;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 191533, 191557);
                    return return_v;
                }


                bool
                f_10306_191603_191622(Microsoft.CodeAnalysis.ConstantValue
                this_param)
                {
                    var return_v = this_param.IsBad;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 191603, 191622);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?
                f_10306_191626_191641(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 191626, 191641);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SpecialType
                f_10306_191626_191653(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?
                this_param)
                {
                    var return_v = this_param.SpecialType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 191626, 191653);
                    return return_v;
                }


                int
                f_10306_191765_191789(Microsoft.CodeAnalysis.ConstantValue
                this_param)
                {
                    var return_v = this_param.Int32Value;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 191765, 191789);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 191071, 191801);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 191071, 191801);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private static bool IsNegativeConstantForArraySize(BoundExpression expression)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterStaticMethod(10306, 191813, 192854);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 191916, 191949);

                f_10306_191916_191948(expression != null);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 191965, 192054) || true) && (f_10306_191969_191992(expression))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 191965, 192054);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 192026, 192039);

                    return false;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 191965, 192054);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 192070, 192115);

                var
                constantValue = f_10306_192090_192114(expression)
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 192129, 192239) || true) && (constantValue == null || (DynAbs.Tracing.TraceSender.Expression_False(10306, 192133, 192177) || f_10306_192158_192177(constantValue)))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 192129, 192239);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 192211, 192224);

                    return false;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 192129, 192239);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 192255, 192294);

                var
                type = f_10306_192266_192293(f_10306_192266_192281(expression))
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 192308, 192429) || true) && (type == SpecialType.System_Int32)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 192308, 192429);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 192378, 192414);

                    return f_10306_192385_192409(constantValue) < 0;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 192308, 192429);
                }

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 192445, 192566) || true) && (type == SpecialType.System_Int64)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 192445, 192566);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 192515, 192551);

                    return f_10306_192522_192546(constantValue) < 0;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 192445, 192566);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 192729, 192814);

                f_10306_192729_192813(type == SpecialType.System_UInt32 || (DynAbs.Tracing.TraceSender.Expression_False(10306, 192742, 192812) || type == SpecialType.System_UInt64));
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 192830, 192843);

                return false;
                DynAbs.Tracing.TraceSender.TraceExitStaticMethod(10306, 191813, 192854);

                int
                f_10306_191916_191948(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 191916, 191948);
                    return 0;
                }


                bool
                f_10306_191969_191992(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.HasAnyErrors;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 191969, 191992);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ConstantValue?
                f_10306_192090_192114(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.ConstantValue;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 192090, 192114);
                    return return_v;
                }


                bool
                f_10306_192158_192177(Microsoft.CodeAnalysis.ConstantValue
                this_param)
                {
                    var return_v = this_param.IsBad;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 192158, 192177);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?
                f_10306_192266_192281(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 192266, 192281);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SpecialType
                f_10306_192266_192293(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?
                this_param)
                {
                    var return_v = this_param.SpecialType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 192266, 192293);
                    return return_v;
                }


                int
                f_10306_192385_192409(Microsoft.CodeAnalysis.ConstantValue
                this_param)
                {
                    var return_v = this_param.Int32Value;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 192385, 192409);
                    return return_v;
                }


                long
                f_10306_192522_192546(Microsoft.CodeAnalysis.ConstantValue
                this_param)
                {
                    var return_v = this_param.Int64Value;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 192522, 192546);
                    return return_v;
                }


                int
                f_10306_192729_192813(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 192729, 192813);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 191813, 192854);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 191813, 192854);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        internal BoundExpression BindConstructorInitializer(
                    ArgumentListSyntax initializerArgumentListOpt,
                    MethodSymbol constructor,
                    DiagnosticBag diagnostics)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10306, 193727, 194661);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 193943, 193976);

                Binder
                argumentListBinder = null
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 193992, 194143) || true) && (initializerArgumentListOpt != null)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 193992, 194143);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 194064, 194128);

                    argumentListBinder = f_10306_194085_194127(this, initializerArgumentListOpt);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 193992, 194143);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 194159, 194286);

                var
                result = f_10306_194172_194285((argumentListBinder ?? (DynAbs.Tracing.TraceSender.Expression_Null<Microsoft.CodeAnalysis.CSharp.Binder?>(10306, 194173, 194199) ?? this)), initializerArgumentListOpt, constructor, diagnostics)
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 194302, 194620) || true) && (argumentListBinder != null)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 194302, 194620);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 194445, 194500);

                    f_10306_194445_194499(f_10306_194458_194498(argumentListBinder));
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 194518, 194605);

                    result = f_10306_194527_194604(argumentListBinder, initializerArgumentListOpt, result);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 194302, 194620);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 194636, 194650);

                return result;
                DynAbs.Tracing.TraceSender.TraceExitMethod(10306, 193727, 194661);

                Microsoft.CodeAnalysis.CSharp.Binder?
                f_10306_194085_194127(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentListSyntax
                node)
                {
                    var return_v = this_param.GetBinder((Microsoft.CodeAnalysis.SyntaxNode)node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 194085, 194127);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_194172_194285(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentListSyntax?
                initializerArgumentListOpt, Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                constructor, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.BindConstructorInitializerCore(initializerArgumentListOpt, constructor, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 194172, 194285);
                    return return_v;
                }


                bool
                f_10306_194458_194498(Microsoft.CodeAnalysis.CSharp.Binder
                this_param)
                {
                    var return_v = this_param.IsSemanticModelBinder;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 194458, 194498);
                    return return_v;
                }


                int
                f_10306_194445_194499(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 194445, 194499);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_194527_194604(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentListSyntax?
                scopeDesignator, Microsoft.CodeAnalysis.CSharp.BoundExpression
                expression)
                {
                    var return_v = this_param.WrapWithVariablesIfAny((Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode?)scopeDesignator, expression);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 194527, 194604);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 193727, 194661);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 193727, 194661);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private BoundExpression BindConstructorInitializerCore(
                    ArgumentListSyntax initializerArgumentListOpt,
                    MethodSymbol constructor,
                    DiagnosticBag diagnostics)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10306, 194673, 209721);
                Microsoft.CodeAnalysis.BitVector defaultArguments = default(Microsoft.CodeAnalysis.BitVector);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 196466, 196508);

                f_10306_196466_196507((object)constructor != null);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 196522, 196660);

                f_10306_196522_196659(f_10306_196535_196557(constructor) == MethodKind.Constructor || (DynAbs.Tracing.TraceSender.Expression_False(10306, 196535, 196658) || f_10306_196604_196626(constructor) == MethodKind.StaticConstructor));
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 196739, 196773);

                f_10306_196739_196772(diagnostics != null);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 196789, 196849);

                NamedTypeSymbol
                containingType = f_10306_196822_196848(constructor)
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 196946, 197137) || true) && ((f_10306_196951_196974(containingType) == TypeKind.Enum || (DynAbs.Tracing.TraceSender.Expression_False(10306, 196951, 197037) || f_10306_196995_197018(containingType) == TypeKind.Struct)) && (DynAbs.Tracing.TraceSender.Expression_True(10306, 196950, 197076) && initializerArgumentListOpt == null))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 196946, 197137);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 197110, 197122);

                    return null;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 196946, 197137);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 197153, 197223);

                AnalyzedArguments
                analyzedArguments = f_10306_197191_197222()
                ;
                try
                {
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 197273, 197331);

                    TypeSymbol
                    constructorReturnType = f_10306_197308_197330(constructor)
                    ;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 197349, 197398);

                    f_10306_197349_197397(f_10306_197362_197396(constructorReturnType));
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 197443, 197514);

                    NamedTypeSymbol
                    baseType = f_10306_197470_197513(containingType)
                    ;

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 197651, 197857) || true) && (initializerArgumentListOpt != null)
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 197651, 197857);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 197731, 197838);

                        f_10306_197731_197837(this, initializerArgumentListOpt, diagnostics, analyzedArguments, allowArglist: true);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 197651, 197857);
                    }
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 197877, 197926);

                    NamedTypeSymbol
                    initializerType = containingType
                    ;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 197946, 198155);

                    bool
                    isBaseConstructorInitializer = initializerArgumentListOpt == null || (DynAbs.Tracing.TraceSender.Expression_False(10306, 197982, 198154) || f_10306_198073_198113(f_10306_198073_198106(initializerArgumentListOpt)) != SyntaxKind.ThisConstructorInitializer)
                    ;

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 198175, 200870) || true) && (isBaseConstructorInitializer)
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 198175, 200870);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 198249, 198312);

                        initializerType = f_10306_198267_198311(initializerType);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 198469, 198650);

                        f_10306_198469_198649((object)initializerType != null || (DynAbs.Tracing.TraceSender.Expression_False(10306, 198482, 198593) || f_10306_198538_198564(containingType) == SpecialType.System_Object) || (DynAbs.Tracing.TraceSender.Expression_False(10306, 198482, 198648) || f_10306_198622_198648(containingType)));

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 198674, 200673) || true) && ((object)initializerType == null || (DynAbs.Tracing.TraceSender.Expression_False(10306, 198678, 198768) || f_10306_198713_198739(containingType) == SpecialType.System_Object))
                        ) //e.g. when defining System.Object in source

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 198674, 200673);

                            if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 199081, 199873) || true) && (initializerArgumentListOpt == null)
                            )

                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 199081, 199873);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 199177, 199189);

                                return null;
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 199081, 199873);
                            }

                            else

                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 199081, 199873);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 199303, 199405);

                                f_10306_199303_199404(diagnostics, ErrorCode.ERR_ObjectCallingBaseConstructor, f_10306_199363_199384(constructor)[0], containingType);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 199435, 199846);

                                return f_10306_199442_199845(syntax: f_10306_199507_199540(initializerArgumentListOpt), resultKind: LookupResultKind.Empty, symbols: ImmutableArray<Symbol>.Empty, childBoundNodes: f_10306_199733_199782(this, analyzedArguments), type: constructorReturnType);
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 199081, 199873);
                            }
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 198674, 200673);
                        }

                        else
                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 198674, 200673);

                            if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 199923, 200673) || true) && (initializerArgumentListOpt != null && (DynAbs.Tracing.TraceSender.Expression_True(10306, 199927, 200007) && f_10306_199965_199988(containingType) == TypeKind.Struct))
                            )

                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 199923, 200673);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 200057, 200160);

                                f_10306_200057_200159(diagnostics, ErrorCode.ERR_StructWithBaseConstructorCall, f_10306_200118_200139(constructor)[0], containingType);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 200186, 200650);

                                return f_10306_200193_200649(syntax: f_10306_200254_200287(initializerArgumentListOpt), resultKind: LookupResultKind.Empty, symbols: ImmutableArray<Symbol>.Empty, childBoundNodes: f_10306_200541_200590(this, analyzedArguments), type: constructorReturnType);
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 199923, 200673);
                            }
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 198674, 200673);
                        }
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 198175, 200870);
                    }

                    else

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 198175, 200870);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 200755, 200851);

                        f_10306_200755_200850(f_10306_200768_200808(f_10306_200768_200801(initializerArgumentListOpt)) == SyntaxKind.ThisConstructorInitializer);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 198175, 200870);
                    }
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 200890, 200921);

                    CSharpSyntaxNode
                    nonNullSyntax
                    = default(CSharpSyntaxNode);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 200939, 200962);

                    Location
                    errorLocation
                    = default(Location);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 200980, 201002);

                    bool
                    enableCallerInfo
                    = default(bool);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 201022, 202128);

                    switch (f_10306_201030_201064_M(DynAbs.Tracing.TraceSender.TraceConditionalAccessExpression(initializerArgumentListOpt, 10306, 201030, 201064)?.Parent))
                    {

                        case ConstructorInitializerSyntax initializerSyntax:
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 201022, 202128);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 201184, 201218);

                            nonNullSyntax = initializerSyntax;
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 201244, 201310);

                            errorLocation = initializerSyntax.ThisOrBaseKeyword.GetLocation();
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 201336, 201360);

                            enableCallerInfo = true;
                            DynAbs.Tracing.TraceSender.TraceBreak(10306, 201386, 201392);

                            break;
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 201022, 202128);

                        case PrimaryConstructorBaseTypeSyntax baseWithArguments:
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 201022, 202128);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 201498, 201532);

                            nonNullSyntax = baseWithArguments;
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 201558, 201615);

                            errorLocation = f_10306_201574_201614(initializerArgumentListOpt);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 201641, 201665);

                            enableCallerInfo = true;
                            DynAbs.Tracing.TraceSender.TraceBreak(10306, 201691, 201697);

                            break;
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 201022, 202128);

                        default:
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 201022, 202128);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 201908, 201959);

                            nonNullSyntax = f_10306_201924_201958(constructor);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 201985, 202026);

                            errorLocation = f_10306_202001_202022(constructor)[0];
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 202052, 202077);

                            enableCallerInfo = false;
                            DynAbs.Tracing.TraceSender.TraceBreak(10306, 202103, 202109);

                            break;
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 201022, 202128);
                    }

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 202148, 202848) || true) && (initializerArgumentListOpt != null && (DynAbs.Tracing.TraceSender.Expression_True(10306, 202152, 202226) && f_10306_202190_202226(analyzedArguments)))
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 202148, 202848);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 202268, 202341);

                        f_10306_202268_202340(diagnostics, ErrorCode.ERR_NoDynamicPhantomOnBaseCtor, errorLocation);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 202365, 202829);

                        return f_10306_202372_202828(syntax: f_10306_202433_202466(initializerArgumentListOpt), resultKind: LookupResultKind.Empty, symbols: ImmutableArray<Symbol>.Empty, childBoundNodes: f_10306_202720_202769(this, analyzedArguments), type: constructorReturnType);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 202148, 202848);
                    }
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 202868, 202969);

                    BoundExpression
                    receiver = f_10306_202895_202968(this, nonNullSyntax, initializerType, wasCompilerGenerated: true)
                    ;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 202989, 203049);

                    MemberResolutionResult<MethodSymbol>
                    memberResolutionResult
                    = default(MemberResolutionResult<MethodSymbol>);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 203067, 203118);

                    ImmutableArray<MethodSymbol>
                    candidateConstructors
                    = default(ImmutableArray<MethodSymbol>);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 203136, 203776);

                    bool
                    found = f_10306_203149_203775(this, initializerType, analyzedArguments, WellKnownMemberNames.InstanceConstructorName, errorLocation, false, diagnostics, out memberResolutionResult, out candidateConstructors, allowProtectedConstructorsOfBaseType: true)
                    ;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 203794, 203852);

                    MethodSymbol
                    resultMember = memberResolutionResult.Member
                    ;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 203872, 203967);

                    f_10306_203872_203966(constructor, baseType, resultMember, errorLocation, diagnostics);

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 203987, 208328) || true) && (found)
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 203987, 208328);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 204038, 204061);

                        bool
                        hasErrors = false
                        ;

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 204085, 205459) || true) && (resultMember == constructor)
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 204085, 205459);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 204166, 204364);

                            f_10306_204166_204363(f_10306_204179_204208(initializerType) || (DynAbs.Tracing.TraceSender.Expression_False(10306, 204179, 204362) || (initializerArgumentListOpt != null && (DynAbs.Tracing.TraceSender.Expression_True(10306, 204242, 204361) && f_10306_204280_204320(f_10306_204280_204313(initializerArgumentListOpt)) == SyntaxKind.ThisConstructorInitializer))));
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 204390, 204556);

                            f_10306_204390_204555(diagnostics, ErrorCode.ERR_RecursiveConstructorCall, errorLocation, constructor);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 204584, 204601);

                            hasErrors = true;
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 204085, 205459);
                        }

                        else
                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 204085, 205459);

                            if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 204703, 205459) || true) && (f_10306_204707_204740(resultMember))
                            )

                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 204703, 205459);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 205371, 205436);

                                hasErrors = f_10306_205383_205435(this, errorLocation, diagnostics);
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 204703, 205459);
                            }
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 204085, 205459);
                        }
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 205483, 205600);

                        f_10306_205483_205599(this, diagnostics, resultMember, nonNullSyntax, hasBaseReceiver: isBaseConstructorInitializer);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 205624, 205723);

                        var
                        expanded = memberResolutionResult.Result.Kind == MemberResolutionKind.ApplicableInExpandedForm
                        ;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 205745, 205813);

                        var
                        argsToParamsOpt = memberResolutionResult.Result.ArgsToParamsOpt
                        ;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 205835, 206041);

                        f_10306_205835_206040(this, nonNullSyntax, f_10306_205871_205894(resultMember), analyzedArguments.Arguments, analyzedArguments.RefKinds, ref argsToParamsOpt, out defaultArguments, expanded, enableCallerInfo, diagnostics);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 206065, 206123);

                        var
                        arguments = f_10306_206081_206122(analyzedArguments.Arguments)
                        ;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 206145, 206207);

                        var
                        refKinds = f_10306_206160_206206(analyzedArguments.RefKinds)
                        ;

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 206229, 206714) || true) && (!hasErrors)
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 206229, 206714);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 206293, 206691);

                            hasErrors = !f_10306_206306_206690(nonNullSyntax, resultMember, receiver, f_10306_206487_206510(resultMember), arguments, argsToParamsOpt, f_10306_206627_206647(this), diagnostics);
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 206229, 206714);
                        }
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 206738, 207507);

                        return new BoundCall(
                                                nonNullSyntax,
                                                receiver,
                                                resultMember,
                                                arguments,
                        f_10306_206935_206963(analyzedArguments),
                                                refKinds,
                                                isDelegateCall: false,
                                                expanded,
                                                invokedAsExtensionMethod: false,
                                                argsToParamsOpt: argsToParamsOpt,
                                                defaultArguments: defaultArguments,
                                                resultKind: LookupResultKind.Viable,
                                                type: constructorReturnType,
                                                hasErrors: hasErrors)
                        { WasCompilerGenerated = DynAbs.Tracing.TraceSender.TraceInitializationWrapper(() => initializerArgumentListOpt == null, 10306, 206745, 207506) };
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 203987, 208328);
                    }

                    else

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 203987, 208328);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 207589, 208186);

                        var
                        result = f_10306_207602_208185(this, node: nonNullSyntax, name: WellKnownMemberNames.InstanceConstructorName, receiver: receiver, methods: candidateConstructors, resultKind: LookupResultKind.OverloadResolutionFailure, typeArgumentsWithAnnotations: ImmutableArray<TypeWithAnnotations>.Empty, analyzedArguments: analyzedArguments, invokedAsExtensionMethod: false, isDelegate: false)
                        ;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 208208, 208273);

                        result.WasCompilerGenerated = initializerArgumentListOpt == null;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 208295, 208309);

                        return result;
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 203987, 208328);
                    }
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinally(10306, 208357, 208437);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 208397, 208422);

                    f_10306_208397_208421(analyzedArguments);
                    DynAbs.Tracing.TraceSender.TraceExitFinally(10306, 208357, 208437);
                }

                static void validateRecordCopyConstructor(MethodSymbol constructor, NamedTypeSymbol baseType, MethodSymbol resultMember, Location errorLocation, DiagnosticBag diagnostics)
                {
                    try
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterStaticMethod(10306, 208453, 209710);

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 208657, 209695) || true) && (f_10306_208661_208708(constructor))
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 208657, 209695);

                            if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 208750, 209275) || true) && (f_10306_208754_208774(baseType) == SpecialType.System_Object)
                            )

                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 208750, 209275);

                                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 208853, 209217) || true) && (resultMember is null || (DynAbs.Tracing.TraceSender.Expression_False(10306, 208857, 208949) || f_10306_208881_208920(f_10306_208881_208908(resultMember)) != SpecialType.System_Object))
                                )

                                {
                                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 208853, 209217);
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 209099, 209190);

                                    f_10306_209099_209189(                            // Record deriving from object must use `base()`, not `this()`
                                                                diagnostics, ErrorCode.ERR_CopyConstructorMustInvokeBaseCopyConstructor, errorLocation);
                                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 208853, 209217);
                                }
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 209245, 209252);

                                return;
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 208750, 209275);
                            }

                            if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 209416, 209676) || true) && (resultMember is null || (DynAbs.Tracing.TraceSender.Expression_False(10306, 209420, 209512) || !f_10306_209445_209512(resultMember)))
                            )

                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 209416, 209676);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 209562, 209653);

                                f_10306_209562_209652(diagnostics, ErrorCode.ERR_CopyConstructorMustInvokeBaseCopyConstructor, errorLocation);
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 209416, 209676);
                            }
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 208657, 209695);
                        }
                        DynAbs.Tracing.TraceSender.TraceExitStaticMethod(10306, 208453, 209710);

                        bool
                        f_10306_208661_208708(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                        constructor)
                        {
                            var return_v = IsUserDefinedRecordCopyConstructor(constructor);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 208661, 208708);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.SpecialType
                        f_10306_208754_208774(Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                        this_param)
                        {
                            var return_v = this_param.SpecialType;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 208754, 208774);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                        f_10306_208881_208908(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                        this_param)
                        {
                            var return_v = this_param.ContainingType;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 208881, 208908);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.SpecialType
                        f_10306_208881_208920(Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                        this_param)
                        {
                            var return_v = this_param.SpecialType;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 208881, 208920);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo
                        f_10306_209099_209189(Microsoft.CodeAnalysis.DiagnosticBag
                        diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                        code, Microsoft.CodeAnalysis.Location
                        location)
                        {
                            var return_v = diagnostics.Add(code, location);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 209099, 209189);
                            return return_v;
                        }


                        bool
                        f_10306_209445_209512(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                        member)
                        {
                            var return_v = SynthesizedRecordCopyCtor.HasCopyConstructorSignature(member);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 209445, 209512);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo
                        f_10306_209562_209652(Microsoft.CodeAnalysis.DiagnosticBag
                        diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                        code, Microsoft.CodeAnalysis.Location
                        location)
                        {
                            var return_v = diagnostics.Add(code, location);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 209562, 209652);
                            return return_v;
                        }

                    }
                    catch
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 208453, 209710);
                        throw;
                    }
                    finally
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 208453, 209710);
                    }
                }
                DynAbs.Tracing.TraceSender.TraceExitMethod(10306, 194673, 209721);

                int
                f_10306_196466_196507(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 196466, 196507);
                    return 0;
                }


                Microsoft.CodeAnalysis.MethodKind
                f_10306_196535_196557(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                this_param)
                {
                    var return_v = this_param.MethodKind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 196535, 196557);
                    return return_v;
                }


                Microsoft.CodeAnalysis.MethodKind
                f_10306_196604_196626(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                this_param)
                {
                    var return_v = this_param.MethodKind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 196604, 196626);
                    return return_v;
                }


                int
                f_10306_196522_196659(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 196522, 196659);
                    return 0;
                }


                int
                f_10306_196739_196772(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 196739, 196772);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                f_10306_196822_196848(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                this_param)
                {
                    var return_v = this_param.ContainingType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 196822, 196848);
                    return return_v;
                }


                Microsoft.CodeAnalysis.TypeKind
                f_10306_196951_196974(Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                this_param)
                {
                    var return_v = this_param.TypeKind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 196951, 196974);
                    return return_v;
                }


                Microsoft.CodeAnalysis.TypeKind
                f_10306_196995_197018(Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                this_param)
                {
                    var return_v = this_param.TypeKind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 196995, 197018);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.AnalyzedArguments
                f_10306_197191_197222()
                {
                    var return_v = AnalyzedArguments.GetInstance();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 197191, 197222);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                f_10306_197308_197330(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                this_param)
                {
                    var return_v = this_param.ReturnType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 197308, 197330);
                    return return_v;
                }


                bool
                f_10306_197362_197396(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                type)
                {
                    var return_v = type.IsVoidType();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 197362, 197396);
                    return return_v;
                }


                int
                f_10306_197349_197397(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 197349, 197397);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                f_10306_197470_197513(Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                this_param)
                {
                    var return_v = this_param.BaseTypeNoUseSiteDiagnostics;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 197470, 197513);
                    return return_v;
                }


                int
                f_10306_197731_197837(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentListSyntax
                argumentListOpt, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.AnalyzedArguments
                result, bool
                allowArglist)
                {
                    this_param.BindArgumentsAndNames(argumentListOpt, diagnostics, result, allowArglist: allowArglist);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 197731, 197837);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode?
                f_10306_198073_198106(Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentListSyntax
                this_param)
                {
                    var return_v = this_param.Parent;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 198073, 198106);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.SyntaxKind
                f_10306_198073_198113(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode?
                this_param)
                {
                    var return_v = this_param.Kind();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 198073, 198113);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                f_10306_198267_198311(Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                this_param)
                {
                    var return_v = this_param.BaseTypeNoUseSiteDiagnostics;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 198267, 198311);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SpecialType
                f_10306_198538_198564(Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                this_param)
                {
                    var return_v = this_param.SpecialType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 198538, 198564);
                    return return_v;
                }


                bool
                f_10306_198622_198648(Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                this_param)
                {
                    var return_v = this_param.IsInterface;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 198622, 198648);
                    return return_v;
                }


                int
                f_10306_198469_198649(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 198469, 198649);
                    return 0;
                }


                Microsoft.CodeAnalysis.SpecialType
                f_10306_198713_198739(Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                this_param)
                {
                    var return_v = this_param.SpecialType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 198713, 198739);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Location>
                f_10306_199363_199384(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                this_param)
                {
                    var return_v = this_param.Locations;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 199363, 199384);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo
                f_10306_199303_199404(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, Microsoft.CodeAnalysis.Location
                location, params object[]
                args)
                {
                    var return_v = diagnostics.Add(code, location, args);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 199303, 199404);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode?
                f_10306_199507_199540(Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentListSyntax
                this_param)
                {
                    var return_v = this_param.Parent;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 199507, 199540);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                f_10306_199733_199782(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.AnalyzedArguments
                analyzedArguments)
                {
                    var return_v = this_param.BuildArgumentsForErrorRecovery(analyzedArguments);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 199733, 199782);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundBadExpression
                f_10306_199442_199845(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode?
                syntax, Microsoft.CodeAnalysis.CSharp.LookupResultKind
                resultKind, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>
                symbols, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                childBoundNodes, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                type)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.BoundBadExpression(syntax: (Microsoft.CodeAnalysis.SyntaxNode?)syntax, resultKind: resultKind, symbols: symbols, childBoundNodes: childBoundNodes, type: type);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 199442, 199845);
                    return return_v;
                }


                Microsoft.CodeAnalysis.TypeKind
                f_10306_199965_199988(Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                this_param)
                {
                    var return_v = this_param.TypeKind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 199965, 199988);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Location>
                f_10306_200118_200139(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                this_param)
                {
                    var return_v = this_param.Locations;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 200118, 200139);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo
                f_10306_200057_200159(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, Microsoft.CodeAnalysis.Location
                location, params object[]
                args)
                {
                    var return_v = diagnostics.Add(code, location, args);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 200057, 200159);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode?
                f_10306_200254_200287(Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentListSyntax
                this_param)
                {
                    var return_v = this_param.Parent;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 200254, 200287);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                f_10306_200541_200590(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.AnalyzedArguments
                analyzedArguments)
                {
                    var return_v = this_param.BuildArgumentsForErrorRecovery(analyzedArguments);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 200541, 200590);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundBadExpression
                f_10306_200193_200649(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode?
                syntax, Microsoft.CodeAnalysis.CSharp.LookupResultKind
                resultKind, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>
                symbols, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                childBoundNodes, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                type)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.BoundBadExpression(syntax: (Microsoft.CodeAnalysis.SyntaxNode?)syntax, resultKind: resultKind, symbols: symbols, childBoundNodes: childBoundNodes, type: type);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 200193, 200649);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode?
                f_10306_200768_200801(Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentListSyntax?
                this_param)
                {
                    var return_v = this_param.Parent;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 200768, 200801);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.SyntaxKind
                f_10306_200768_200808(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode?
                this_param)
                {
                    var return_v = this_param.Kind();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 200768, 200808);
                    return return_v;
                }


                int
                f_10306_200755_200850(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 200755, 200850);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode?
                f_10306_201030_201064_M(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode?
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 201030, 201064);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Location
                f_10306_201574_201614(Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentListSyntax
                this_param)
                {
                    var return_v = this_param.GetLocation();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 201574, 201614);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode
                f_10306_201924_201958(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                symbol)
                {
                    var return_v = symbol.GetNonNullSyntaxNode();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 201924, 201958);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Location>
                f_10306_202001_202022(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                this_param)
                {
                    var return_v = this_param.Locations;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 202001, 202022);
                    return return_v;
                }


                bool
                f_10306_202190_202226(Microsoft.CodeAnalysis.CSharp.AnalyzedArguments
                this_param)
                {
                    var return_v = this_param.HasDynamicArgument;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 202190, 202226);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo
                f_10306_202268_202340(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, Microsoft.CodeAnalysis.Location
                location)
                {
                    var return_v = diagnostics.Add(code, location);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 202268, 202340);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode?
                f_10306_202433_202466(Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentListSyntax
                this_param)
                {
                    var return_v = this_param.Parent;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 202433, 202466);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                f_10306_202720_202769(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.AnalyzedArguments
                analyzedArguments)
                {
                    var return_v = this_param.BuildArgumentsForErrorRecovery(analyzedArguments);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 202720, 202769);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundBadExpression
                f_10306_202372_202828(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode?
                syntax, Microsoft.CodeAnalysis.CSharp.LookupResultKind
                resultKind, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>
                symbols, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                childBoundNodes, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                type)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.BoundBadExpression(syntax: (Microsoft.CodeAnalysis.SyntaxNode?)syntax, resultKind: resultKind, symbols: symbols, childBoundNodes: childBoundNodes, type: type);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 202372, 202828);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundThisReference
                f_10306_202895_202968(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode
                node, Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                thisTypeOpt, bool
                wasCompilerGenerated)
                {
                    var return_v = this_param.ThisReference((Microsoft.CodeAnalysis.SyntaxNode)node, thisTypeOpt, wasCompilerGenerated: wasCompilerGenerated);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 202895, 202968);
                    return return_v;
                }


                bool
                f_10306_203149_203775(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                typeContainingConstructors, Microsoft.CodeAnalysis.CSharp.AnalyzedArguments
                analyzedArguments, string
                errorName, Microsoft.CodeAnalysis.Location
                errorLocation, bool
                suppressResultDiagnostics, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, out Microsoft.CodeAnalysis.CSharp.MemberResolutionResult<Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol>
                memberResolutionResult, out System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol>
                candidateConstructors, bool
                allowProtectedConstructorsOfBaseType)
                {
                    var return_v = this_param.TryPerformConstructorOverloadResolution(typeContainingConstructors, analyzedArguments, errorName, errorLocation, suppressResultDiagnostics, diagnostics, out memberResolutionResult, out candidateConstructors, allowProtectedConstructorsOfBaseType: allowProtectedConstructorsOfBaseType);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 203149, 203775);
                    return return_v;
                }


                int
                f_10306_203872_203966(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                constructor, Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                baseType, Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                resultMember, Microsoft.CodeAnalysis.Location
                errorLocation, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    validateRecordCopyConstructor(constructor, baseType, resultMember, errorLocation, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 203872, 203966);
                    return 0;
                }


                bool
                f_10306_204179_204208(Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                type)
                {
                    var return_v = type.IsErrorType();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 204179, 204208);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode?
                f_10306_204280_204313(Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentListSyntax
                this_param)
                {
                    var return_v = this_param.Parent;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 204280, 204313);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.SyntaxKind
                f_10306_204280_204320(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode?
                this_param)
                {
                    var return_v = this_param.Kind();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 204280, 204320);
                    return return_v;
                }


                int
                f_10306_204166_204363(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 204166, 204363);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo
                f_10306_204390_204555(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, Microsoft.CodeAnalysis.Location
                location, params object[]
                args)
                {
                    var return_v = diagnostics.Add(code, location, args);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 204390, 204555);
                    return return_v;
                }


                bool
                f_10306_204707_204740(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                member)
                {
                    var return_v = member.HasUnsafeParameter();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 204707, 204740);
                    return return_v;
                }


                bool
                f_10306_205383_205435(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.Location
                location, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.ReportUnsafeIfNotAllowed(location, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 205383, 205435);
                    return return_v;
                }


                int
                f_10306_205483_205599(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                symbol, Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode
                node, bool
                hasBaseReceiver)
                {
                    this_param.ReportDiagnosticsIfObsolete(diagnostics, (Microsoft.CodeAnalysis.CSharp.Symbol)symbol, (Microsoft.CodeAnalysis.SyntaxNode)node, hasBaseReceiver: hasBaseReceiver);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 205483, 205599);
                    return 0;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol>
                f_10306_205871_205894(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                this_param)
                {
                    var return_v = this_param.Parameters;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 205871, 205894);
                    return return_v;
                }


                int
                f_10306_205835_206040(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode
                node, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol>
                parameters, Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                argumentsBuilder, Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.RefKind>
                argumentRefKindsBuilder, ref System.Collections.Immutable.ImmutableArray<int>
                argsToParamsOpt, out Microsoft.CodeAnalysis.BitVector
                defaultArguments, bool
                expanded, bool
                enableCallerInfo, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    this_param.BindDefaultArguments((Microsoft.CodeAnalysis.SyntaxNode)node, parameters, argumentsBuilder, argumentRefKindsBuilder, ref argsToParamsOpt, out defaultArguments, expanded, enableCallerInfo, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 205835, 206040);
                    return 0;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                f_10306_206081_206122(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                this_param)
                {
                    var return_v = this_param.ToImmutable();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 206081, 206122);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.RefKind>
                f_10306_206160_206206(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.RefKind>
                this_param)
                {
                    var return_v = this_param.ToImmutableOrNull();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 206160, 206206);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol>
                f_10306_206487_206510(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                this_param)
                {
                    var return_v = this_param.Parameters;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 206487, 206510);
                    return return_v;
                }


                uint
                f_10306_206627_206647(Microsoft.CodeAnalysis.CSharp.Binder
                this_param)
                {
                    var return_v = this_param.LocalScopeDepth;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 206627, 206647);
                    return return_v;
                }


                bool
                f_10306_206306_206690(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode
                syntax, Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                symbol, Microsoft.CodeAnalysis.CSharp.BoundExpression
                receiverOpt, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol>
                parameters, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                argsOpt, System.Collections.Immutable.ImmutableArray<int>
                argsToParamsOpt, uint
                scopeOfTheContainingExpression, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = CheckInvocationArgMixing((Microsoft.CodeAnalysis.SyntaxNode)syntax, (Microsoft.CodeAnalysis.CSharp.Symbol)symbol, receiverOpt, parameters, argsOpt, argsToParamsOpt, scopeOfTheContainingExpression, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 206306, 206690);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<string>
                f_10306_206935_206963(Microsoft.CodeAnalysis.CSharp.AnalyzedArguments
                this_param)
                {
                    var return_v = this_param.GetNames();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 206935, 206963);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundCall
                f_10306_207602_208185(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode
                node, string
                name, Microsoft.CodeAnalysis.CSharp.BoundExpression
                receiver, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol>
                methods, Microsoft.CodeAnalysis.CSharp.LookupResultKind
                resultKind, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations>
                typeArgumentsWithAnnotations, Microsoft.CodeAnalysis.CSharp.AnalyzedArguments
                analyzedArguments, bool
                invokedAsExtensionMethod, bool
                isDelegate)
                {
                    var return_v = this_param.CreateBadCall(node: (Microsoft.CodeAnalysis.SyntaxNode)node, name: name, receiver: receiver, methods: methods, resultKind: resultKind, typeArgumentsWithAnnotations: typeArgumentsWithAnnotations, analyzedArguments: analyzedArguments, invokedAsExtensionMethod: invokedAsExtensionMethod, isDelegate: isDelegate);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 207602, 208185);
                    return return_v;
                }


                int
                f_10306_208397_208421(Microsoft.CodeAnalysis.CSharp.AnalyzedArguments
                this_param)
                {
                    this_param.Free();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 208397, 208421);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 194673, 209721);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 194673, 209721);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        internal static bool IsUserDefinedRecordCopyConstructor(MethodSymbol constructor)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterStaticMethod(10306, 209733, 210115);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 209839, 210104);

                return f_10306_209846_209872(constructor) is SourceNamedTypeSymbol sourceType && (DynAbs.Tracing.TraceSender.Expression_True(10306, 209846, 209948) && f_10306_209929_209948(sourceType)) && (DynAbs.Tracing.TraceSender.Expression_True(10306, 209846, 210016) && constructor is not SynthesizedRecordConstructor) && (DynAbs.Tracing.TraceSender.Expression_True(10306, 209846, 210103) && f_10306_210037_210103(constructor));
                DynAbs.Tracing.TraceSender.TraceExitStaticMethod(10306, 209733, 210115);

                Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                f_10306_209846_209872(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                this_param)
                {
                    var return_v = this_param.ContainingType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 209846, 209872);
                    return return_v;
                }


                bool
                f_10306_209929_209948(Microsoft.CodeAnalysis.CSharp.Symbols.SourceNamedTypeSymbol
                this_param)
                {
                    var return_v = this_param.IsRecord;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 209929, 209948);
                    return return_v;
                }


                bool
                f_10306_210037_210103(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                member)
                {
                    var return_v = SynthesizedRecordCopyCtor.HasCopyConstructorSignature(member);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 210037, 210103);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 209733, 210115);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 209733, 210115);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private BoundExpression BindImplicitObjectCreationExpression(ImplicitObjectCreationExpressionSyntax node, DiagnosticBag diagnostics)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10306, 210127, 210795);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 210284, 210332);

                var
                arguments = f_10306_210300_210331()
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 210346, 210431);

                f_10306_210346_210430(this, f_10306_210368_210385(node), diagnostics, arguments, allowArglist: true);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 210445, 210725);

                var
                result = f_10306_210458_210724(node, f_10306_210544_210577(arguments.Arguments), f_10306_210596_210631(arguments.Names), f_10306_210650_210688(arguments.RefKinds), f_10306_210707_210723(node))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 210739, 210756);

                f_10306_210739_210755(arguments);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 210770, 210784);

                return result;
                DynAbs.Tracing.TraceSender.TraceExitMethod(10306, 210127, 210795);

                Microsoft.CodeAnalysis.CSharp.AnalyzedArguments
                f_10306_210300_210331()
                {
                    var return_v = AnalyzedArguments.GetInstance();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 210300, 210331);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentListSyntax
                f_10306_210368_210385(Microsoft.CodeAnalysis.CSharp.Syntax.ImplicitObjectCreationExpressionSyntax
                this_param)
                {
                    var return_v = this_param.ArgumentList;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 210368, 210385);
                    return return_v;
                }


                int
                f_10306_210346_210430(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentListSyntax
                argumentListOpt, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.AnalyzedArguments
                result, bool
                allowArglist)
                {
                    this_param.BindArgumentsAndNames(argumentListOpt, diagnostics, result, allowArglist: allowArglist);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 210346, 210430);
                    return 0;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                f_10306_210544_210577(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                this_param)
                {
                    var return_v = this_param.ToImmutable();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 210544, 210577);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Syntax.IdentifierNameSyntax>
                f_10306_210596_210631(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Syntax.IdentifierNameSyntax>
                this_param)
                {
                    var return_v = this_param.ToImmutableOrNull();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 210596, 210631);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.RefKind>
                f_10306_210650_210688(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.RefKind>
                this_param)
                {
                    var return_v = this_param.ToImmutableOrNull();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 210650, 210688);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax?
                f_10306_210707_210723(Microsoft.CodeAnalysis.CSharp.Syntax.ImplicitObjectCreationExpressionSyntax
                this_param)
                {
                    var return_v = this_param.Initializer;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 210707, 210723);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundUnconvertedObjectCreationExpression
                f_10306_210458_210724(Microsoft.CodeAnalysis.CSharp.Syntax.ImplicitObjectCreationExpressionSyntax
                syntax, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                arguments, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Syntax.IdentifierNameSyntax>
                argumentNamesOpt, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.RefKind>
                argumentRefKindsOpt, Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax?
                initializerOpt)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.BoundUnconvertedObjectCreationExpression((Microsoft.CodeAnalysis.SyntaxNode)syntax, arguments, argumentNamesOpt, argumentRefKindsOpt, initializerOpt);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 210458, 210724);
                    return return_v;
                }


                int
                f_10306_210739_210755(Microsoft.CodeAnalysis.CSharp.AnalyzedArguments
                this_param)
                {
                    this_param.Free();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 210739, 210755);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 210127, 210795);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 210127, 210795);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        protected BoundExpression BindObjectCreationExpression(ObjectCreationExpressionSyntax node, DiagnosticBag diagnostics)
        {
            var typeWithAnnotations = BindType(node.Type, diagnostics);
            var type = typeWithAnnotations.Type;
            var originalType = type;

            if (typeWithAnnotations.NullableAnnotation.IsAnnotated() && !type.IsNullableType())
            {
                diagnostics.Add(ErrorCode.ERR_AnnotationDisallowedInObjectCreation, node.Location, type);
            }

            switch (type.TypeKind)
            {
                case TypeKind.Struct:
                case TypeKind.Class:
                case TypeKind.Enum:
                case TypeKind.Error:
                    return BindClassCreationExpression(node, (NamedTypeSymbol)type, GetName(node.Type), diagnostics, originalType);

                case TypeKind.Delegate:
                    return BindDelegateCreationExpression(node, (NamedTypeSymbol)type, diagnostics);

                case TypeKind.Interface:
                    return BindInterfaceCreationExpression(node, (NamedTypeSymbol)type, diagnostics);

                case TypeKind.TypeParameter:
                    return BindTypeParameterCreationExpression(node, (TypeParameterSymbol)type, diagnostics);

                case TypeKind.Submission:
                    // script class is synthesized and should not be used as a type of a new expression:
                    throw ExceptionUtilities.UnexpectedValue(type.TypeKind);

                case TypeKind.Pointer:
                case TypeKind.FunctionPointer:
                    type = new ExtendedErrorTypeSymbol(type, LookupResultKind.NotCreatable,
                        diagnostics.Add(ErrorCode.ERR_UnsafeTypeInObjectCreation, node.Location, type));
                    goto case TypeKind.Class;

                case TypeKind.Dynamic:
                // we didn't find any type called "dynamic" so we are using the builtin dynamic type, which has no constructors:
                case TypeKind.Array:
                    // ex: new ref[]
                    type = new ExtendedErrorTypeSymbol(type, LookupResultKind.NotCreatable,
                        diagnostics.Add(ErrorCode.ERR_InvalidObjectCreation, node.Type.Location, type));
                    goto case TypeKind.Class;

                default:
                    throw ExceptionUtilities.UnexpectedValue(type.TypeKind);
            }
        }

        private BoundExpression BindDelegateCreationExpression(ObjectCreationExpressionSyntax node, NamedTypeSymbol type, DiagnosticBag diagnostics)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10306, 213325, 213871);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 213490, 213560);

                AnalyzedArguments
                analyzedArguments = f_10306_213528_213559()
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 213574, 213673);

                f_10306_213574_213672(this, f_10306_213596_213613(node), diagnostics, analyzedArguments, isDelegateCreation: true);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 213687, 213793);

                var
                result = f_10306_213700_213792(this, node, type, analyzedArguments, f_10306_213762_213778(node), diagnostics)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 213807, 213832);

                f_10306_213807_213831(analyzedArguments);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 213846, 213860);

                return result;
                DynAbs.Tracing.TraceSender.TraceExitMethod(10306, 213325, 213871);

                Microsoft.CodeAnalysis.CSharp.AnalyzedArguments
                f_10306_213528_213559()
                {
                    var return_v = AnalyzedArguments.GetInstance();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 213528, 213559);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentListSyntax?
                f_10306_213596_213613(Microsoft.CodeAnalysis.CSharp.Syntax.ObjectCreationExpressionSyntax
                this_param)
                {
                    var return_v = this_param.ArgumentList;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 213596, 213613);
                    return return_v;
                }


                int
                f_10306_213574_213672(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentListSyntax?
                argumentListOpt, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.AnalyzedArguments
                result, bool
                isDelegateCreation)
                {
                    this_param.BindArgumentsAndNames(argumentListOpt, diagnostics, result, isDelegateCreation: isDelegateCreation);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 213574, 213672);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax?
                f_10306_213762_213778(Microsoft.CodeAnalysis.CSharp.Syntax.ObjectCreationExpressionSyntax
                this_param)
                {
                    var return_v = this_param.Initializer;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 213762, 213778);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_213700_213792(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.ObjectCreationExpressionSyntax
                node, Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                type, Microsoft.CodeAnalysis.CSharp.AnalyzedArguments
                analyzedArguments, Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax?
                initializerOpt, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.BindDelegateCreationExpression((Microsoft.CodeAnalysis.SyntaxNode)node, type, analyzedArguments, initializerOpt, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 213700, 213792);
                    return return_v;
                }


                int
                f_10306_213807_213831(Microsoft.CodeAnalysis.CSharp.AnalyzedArguments
                this_param)
                {
                    this_param.Free();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 213807, 213831);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 213325, 213871);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 213325, 213871);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private BoundExpression BindDelegateCreationExpression(SyntaxNode node, NamedTypeSymbol type, AnalyzedArguments analyzedArguments, InitializerExpressionSyntax initializerOpt, DiagnosticBag diagnostics)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10306, 213883, 222863);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 214109, 214132);

                bool
                hasErrors = false
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 214146, 215465) || true) && (f_10306_214150_214177(analyzedArguments))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 214146, 215465);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 214146, 215465);
                }

                else
                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 214146, 215465);

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 214540, 215465) || true) && (f_10306_214544_214577(analyzedArguments.Arguments) == 0)
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 214540, 215465);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 214616, 214687);

                        f_10306_214616_214686(diagnostics, ErrorCode.ERR_BadCtorArgCount, f_10306_214663_214676(node), type, 0);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 214705, 214722);

                        hasErrors = true;
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 214540, 215465);
                    }

                    else
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 214540, 215465);

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 214756, 215465) || true) && (f_10306_214760_214789(analyzedArguments.Names) != 0 || (DynAbs.Tracing.TraceSender.Expression_False(10306, 214760, 214835) || f_10306_214798_214830(analyzedArguments.RefKinds) != 0) || (DynAbs.Tracing.TraceSender.Expression_False(10306, 214760, 214877) || f_10306_214839_214872(analyzedArguments.Arguments) != 1))
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 214756, 215465);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 214976, 215030);

                            var
                            argSyntax = f_10306_214992_215022(analyzedArguments.Arguments, 0).Syntax
                            ;
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 215048, 215080);

                            var
                            start = f_10306_215060_215079(argSyntax)
                            ;
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 215098, 215191);

                            var
                            end = f_10306_215108_215174(analyzedArguments.Arguments, f_10306_215136_215169(analyzedArguments.Arguments) - 1).Syntax.Span.End
                            ;
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 215209, 215258);

                            var
                            errorSpan = f_10306_215225_215257(start, end - start)
                            ;
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 215278, 215340);

                            var
                            loc = f_10306_215288_215339(f_10306_215307_215327(argSyntax), errorSpan)
                            ;
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 215360, 215415);

                            f_10306_215360_215414(
                                            diagnostics, ErrorCode.ERR_MethodNameExpected, loc);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 215433, 215450);

                            hasErrors = true;
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 214756, 215465);
                        }
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 214540, 215465);
                    }
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 214146, 215465);
                }

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 215481, 215681) || true) && (initializerOpt != null)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 215481, 215681);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 215541, 215631);

                    f_10306_215541_215630(diagnostics, ErrorCode.ERR_ObjectOrCollectionInitializerWithDelegateCreation, node);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 215649, 215666);

                    hasErrors = true;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 215481, 215681);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 215697, 215835);

                BoundExpression
                argument = (DynAbs.Tracing.TraceSender.Conditional_F1(10306, 215724, 215762) || ((f_10306_215724_215757(analyzedArguments.Arguments) >= 1 && DynAbs.Tracing.TraceSender.Conditional_F2(10306, 215765, 215827)) || DynAbs.Tracing.TraceSender.Conditional_F3(10306, 215830, 215834))) ? f_10306_215765_215827(this, f_10306_215783_215813(analyzedArguments.Arguments, 0), diagnostics) : null
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 215851, 222505) || true) && (hasErrors)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 215851, 222505);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 215851, 222505);
                }

                else
                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 215851, 222505);

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 216168, 222505) || true) && (argument is UnboundLambda unboundLambda)
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 216168, 222505);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 216538, 216588);

                        HashSet<DiagnosticInfo>
                        useSiteDiagnostics = null
                        ;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 216606, 216718);

                        var
                        conversion = f_10306_216623_216717(f_10306_216623_216639(this), unboundLambda, type, ref useSiteDiagnostics)
                        ;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 216736, 216778);

                        f_10306_216736_216777(diagnostics, node, useSiteDiagnostics);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 216973, 217024);

                        BoundLambda
                        boundLambda = f_10306_216999_217023(unboundLambda, type)
                        ;

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 217044, 217676) || true) && (f_10306_217048_217070_M(!conversion.IsImplicit) || (DynAbs.Tracing.TraceSender.Expression_False(10306, 217048, 217093) || f_10306_217074_217093_M(!conversion.IsValid)))
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 217044, 217676);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 217135, 217235);

                            f_10306_217135_217234(this, diagnostics, unboundLambda.Syntax, conversion, unboundLambda, type);
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 217044, 217676);
                        }

                        else

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 217044, 217676);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 217611, 217657);

                            f_10306_217611_217656(                    // We're not going to produce an error, but it is possible that the conversion from
                                                                      // the lambda to the delegate type produced a warning, which we have not reported.
                                                                      // Instead, we've cached it in the bound lambda. Report it now.
                                                diagnostics, f_10306_217632_217655(boundLambda));
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 217044, 217676);
                        }
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 217905, 218057);

                        return f_10306_217912_218056(node, boundLambda, methodOpt: null, isExtensionMethod: false, type: type, hasErrors: f_10306_218033_218055_M(!conversion.IsImplicit));
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 216168, 222505);
                    }

                    else
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 216168, 222505);

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 218093, 222505) || true) && (f_10306_218097_218124(analyzedArguments))
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 218093, 222505);
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 218093, 222505);
                        }

                        else
                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 218093, 222505);

                            if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 218254, 222505) || true) && (f_10306_218258_218271(argument) == BoundKind.MethodGroup)
                            )

                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 218254, 222505);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 218330, 218352);

                                Conversion
                                conversion
                                = default(Conversion);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 218370, 218428);

                                BoundMethodGroup
                                methodGroup = (BoundMethodGroup)argument
                                ;
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 218446, 218566);

                                hasErrors = f_10306_218458_218565(this, methodGroup, type, f_10306_218522_218535(node), diagnostics, out conversion);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 218584, 218666);

                                methodGroup = f_10306_218598_218665(this, methodGroup, conversion, diagnostics);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 218684, 218812);

                                return f_10306_218691_218811(node, methodGroup, conversion.Method, conversion.IsExtensionMethod, type, hasErrors);
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 218254, 222505);
                            }

                            else
                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 218254, 222505);

                                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 218848, 222505) || true) && ((object)f_10306_218860_218873(argument) == null)
                                )

                                {
                                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 218848, 222505);
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 218915, 218991);

                                    f_10306_218915_218990(diagnostics, ErrorCode.ERR_MethodNameExpected, f_10306_218965_218989(argument.Syntax));
                                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 218848, 222505);
                                }

                                else
                                {
                                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 218848, 222505);

                                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 219121, 222505) || true) && (f_10306_219125_219150(argument))
                                    )

                                    {
                                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 219121, 222505);
                                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 219184, 219298);

                                        return f_10306_219191_219297(node, argument, methodOpt: null, isExtensionMethod: false, type: type);
                                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 219121, 222505);
                                    }

                                    else
                                    {
                                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 219121, 222505);

                                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 219370, 222505) || true) && (f_10306_219374_219396(f_10306_219374_219387(argument)) == TypeKind.Delegate)
                                        )

                                        {
                                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 219370, 222505);
                                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 219451, 219503);

                                            var
                                            sourceDelegate = (NamedTypeSymbol)f_10306_219489_219502(argument)
                                            ;
                                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 219521, 219573);

                                            MethodGroup
                                            methodGroup = f_10306_219547_219572()
                                            ;
                                            try
                                            {

                                                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 219635, 220049) || true) && (f_10306_219639_219716(diagnostics, f_10306_219690_219703(argument), node: node))
                                                )

                                                {
                                                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 219635, 220049);
                                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 219868, 220026);

                                                    return f_10306_219875_220025(node, LookupResultKind.NotInvocable, f_10306_219935_219985(f_10306_219959_219984(type)), f_10306_219987_220018(argument), type);
                                                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 219635, 220049);
                                                }
                                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 220073, 220157);

                                                f_10306_220073_220156(
                                                                    methodGroup, argument, f_10306_220120_220155(sourceDelegate));
                                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 220179, 220229);

                                                HashSet<DiagnosticInfo>
                                                useSiteDiagnostics = null
                                                ;
                                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 220251, 220363);

                                                Conversion
                                                conv = f_10306_220269_220362(f_10306_220269_220280(), argument.Syntax, methodGroup, type, ref useSiteDiagnostics)
                                                ;
                                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 220385, 220427);

                                                f_10306_220385_220426(diagnostics, node, useSiteDiagnostics);

                                                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 220449, 222166) || true) && (f_10306_220453_220465_M(!conv.Exists))
                                                )

                                                {
                                                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 220449, 222166);
                                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 220515, 220851);

                                                    var
                                                    boundMethodGroup = f_10306_220538_220850(argument.Syntax, default, WellKnownMemberNames.DelegateInvokeName, f_10306_220656_220714(f_10306_220678_220713(sourceDelegate)), f_10306_220745_220780(sourceDelegate), null, BoundMethodGroupFlags.None, argument, LookupResultKind.Viable)
                                                    ;

                                                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 220877, 221425) || true) && (!f_10306_220882_220990(this, boundMethodGroup, type, diagnostics))
                                                    )

                                                    {
                                                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 220877, 221425);
                                                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 221222, 221398);

                                                        f_10306_221222_221397(                            // If we could not produce a more specialized diagnostic, we report
                                                                                                          // No overload for '{0}' matches delegate '{1}'
                                                                                    diagnostics, ErrorCode.ERR_MethDelegateMismatch, f_10306_221274_221287(node), f_10306_221322_221357(sourceDelegate), type);
                                                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 220877, 221425);
                                                    }
                                                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 220449, 222166);
                                                }

                                                else

                                                {
                                                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 220449, 222166);
                                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 221523, 221561);

                                                    f_10306_221523_221560(f_10306_221536_221559_M(!conv.IsExtensionMethod));
                                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 221587, 221614);

                                                    f_10306_221587_221613(conv.IsValid);

                                                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 221682, 222143) || true) && (!f_10306_221687_221818(this, argument.Syntax, conv, argument, conv.IsExtensionMethod, isAddressOf: false, type, diagnostics))
                                                    )

                                                    {
                                                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 221682, 222143);
                                                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 222002, 222116);

                                                        return f_10306_222009_222115(node, argument, methodOpt: null, isExtensionMethod: false, type: type);
                                                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 221682, 222143);
                                                    }
                                                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 220449, 222166);
                                                }
                                            }
                                            finally
                                            {
                                                DynAbs.Tracing.TraceSender.TraceEnterFinally(10306, 222203, 222289);
                                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 222251, 222270);

                                                f_10306_222251_222269(methodGroup);
                                                DynAbs.Tracing.TraceSender.TraceExitFinally(10306, 222203, 222289);
                                            }
                                            DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 219370, 222505);
                                        }

                                        else

                                        {
                                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 219370, 222505);
                                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 222414, 222490);

                                            f_10306_222414_222489(diagnostics, ErrorCode.ERR_MethodNameExpected, f_10306_222464_222488(argument.Syntax));
                                            DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 219370, 222505);
                                        }
                                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 219121, 222505);
                                    }
                                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 218848, 222505);
                                }
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 218254, 222505);
                            }
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 218093, 222505);
                        }
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 216168, 222505);
                    }
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 215851, 222505);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 222621, 222688);

                var
                childNodes = f_10306_222638_222687(this, analyzedArguments)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 222702, 222852);

                return f_10306_222709_222851(node, LookupResultKind.OverloadResolutionFailure, f_10306_222782_222832(f_10306_222806_222831(type)), childNodes, type);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10306, 213883, 222863);

                bool
                f_10306_214150_214177(Microsoft.CodeAnalysis.CSharp.AnalyzedArguments
                this_param)
                {
                    var return_v = this_param.HasErrors;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 214150, 214177);
                    return return_v;
                }


                int
                f_10306_214544_214577(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                this_param)
                {
                    var return_v = this_param.Count;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 214544, 214577);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Location
                f_10306_214663_214676(Microsoft.CodeAnalysis.SyntaxNode
                this_param)
                {
                    var return_v = this_param.Location;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 214663, 214676);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo
                f_10306_214616_214686(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, Microsoft.CodeAnalysis.Location
                location, params object[]
                args)
                {
                    var return_v = diagnostics.Add(code, location, args);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 214616, 214686);
                    return return_v;
                }


                int
                f_10306_214760_214789(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Syntax.IdentifierNameSyntax>
                this_param)
                {
                    var return_v = this_param.Count;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 214760, 214789);
                    return return_v;
                }


                int
                f_10306_214798_214830(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.RefKind>
                this_param)
                {
                    var return_v = this_param.Count;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 214798, 214830);
                    return return_v;
                }


                int
                f_10306_214839_214872(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                this_param)
                {
                    var return_v = this_param.Count;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 214839, 214872);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_214992_215022(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                this_param, int
                i0)
                {
                    var return_v = this_param[i0];
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 214992, 215022);
                    return return_v;
                }


                int
                f_10306_215060_215079(Microsoft.CodeAnalysis.SyntaxNode
                this_param)
                {
                    var return_v = this_param.SpanStart;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 215060, 215079);
                    return return_v;
                }


                int
                f_10306_215136_215169(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                this_param)
                {
                    var return_v = this_param.Count;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 215136, 215169);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_215108_215174(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                this_param, int
                i0)
                {
                    var return_v = this_param[i0];
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 215108, 215174);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Text.TextSpan
                f_10306_215225_215257(int
                start, int
                length)
                {
                    var return_v = new Microsoft.CodeAnalysis.Text.TextSpan(start, length);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 215225, 215257);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SyntaxTree
                f_10306_215307_215327(Microsoft.CodeAnalysis.SyntaxNode
                this_param)
                {
                    var return_v = this_param.SyntaxTree;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 215307, 215327);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SourceLocation
                f_10306_215288_215339(Microsoft.CodeAnalysis.SyntaxTree
                syntaxTree, Microsoft.CodeAnalysis.Text.TextSpan
                span)
                {
                    var return_v = new Microsoft.CodeAnalysis.SourceLocation(syntaxTree, span);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 215288, 215339);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo
                f_10306_215360_215414(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, Microsoft.CodeAnalysis.SourceLocation
                location)
                {
                    var return_v = diagnostics.Add(code, (Microsoft.CodeAnalysis.Location)location);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 215360, 215414);
                    return return_v;
                }


                int
                f_10306_215541_215630(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, Microsoft.CodeAnalysis.SyntaxNode
                syntax)
                {
                    Error(diagnostics, code, (Microsoft.CodeAnalysis.SyntaxNodeOrToken)syntax);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 215541, 215630);
                    return 0;
                }


                int
                f_10306_215724_215757(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                this_param)
                {
                    var return_v = this_param.Count;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 215724, 215757);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_215783_215813(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                this_param, int
                i0)
                {
                    var return_v = this_param[i0];
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 215783, 215813);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_215765_215827(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                expression, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.BindToNaturalType(expression, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 215765, 215827);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Conversions
                f_10306_216623_216639(Microsoft.CodeAnalysis.CSharp.Binder
                this_param)
                {
                    var return_v = this_param.Conversions;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 216623, 216639);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Conversion
                f_10306_216623_216717(Microsoft.CodeAnalysis.CSharp.Conversions
                this_param, Microsoft.CodeAnalysis.CSharp.UnboundLambda
                sourceExpression, Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                destination, ref System.Collections.Generic.HashSet<Microsoft.CodeAnalysis.DiagnosticInfo>?
                useSiteDiagnostics)
                {
                    var return_v = this_param.ClassifyConversionFromExpression((Microsoft.CodeAnalysis.CSharp.BoundExpression)sourceExpression, (Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol)destination, ref useSiteDiagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 216623, 216717);
                    return return_v;
                }


                bool
                f_10306_216736_216777(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.SyntaxNode
                node, System.Collections.Generic.HashSet<Microsoft.CodeAnalysis.DiagnosticInfo>
                useSiteDiagnostics)
                {
                    var return_v = diagnostics.Add(node, useSiteDiagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 216736, 216777);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundLambda
                f_10306_216999_217023(Microsoft.CodeAnalysis.CSharp.UnboundLambda
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                delegateType)
                {
                    var return_v = this_param.Bind(delegateType);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 216999, 217023);
                    return return_v;
                }


                bool
                f_10306_217048_217070_M(bool
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 217048, 217070);
                    return return_v;
                }


                bool
                f_10306_217074_217093_M(bool
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 217074, 217093);
                    return return_v;
                }


                int
                f_10306_217135_217234(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.CSharp.Conversion
                conversion, Microsoft.CodeAnalysis.CSharp.UnboundLambda
                operand, Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                targetType)
                {
                    this_param.GenerateImplicitConversionError(diagnostics, syntax, conversion, (Microsoft.CodeAnalysis.CSharp.BoundExpression)operand, (Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol)targetType);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 217135, 217234);
                    return 0;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Diagnostic>
                f_10306_217632_217655(Microsoft.CodeAnalysis.CSharp.BoundLambda
                this_param)
                {
                    var return_v = this_param.Diagnostics;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 217632, 217655);
                    return return_v;
                }


                int
                f_10306_217611_217656(Microsoft.CodeAnalysis.DiagnosticBag
                this_param, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Diagnostic>
                diagnostics)
                {
                    this_param.AddRange<Microsoft.CodeAnalysis.Diagnostic>(diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 217611, 217656);
                    return 0;
                }


                bool
                f_10306_218033_218055_M(bool
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 218033, 218055);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundDelegateCreationExpression
                f_10306_217912_218056(Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.CSharp.BoundLambda
                argument, Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol?
                methodOpt, bool
                isExtensionMethod, Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                type, bool
                hasErrors)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.BoundDelegateCreationExpression(syntax, (Microsoft.CodeAnalysis.CSharp.BoundExpression)argument, methodOpt: methodOpt, isExtensionMethod: isExtensionMethod, type: (Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol)type, hasErrors: hasErrors);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 217912, 218056);
                    return return_v;
                }


                bool
                f_10306_218097_218124(Microsoft.CodeAnalysis.CSharp.AnalyzedArguments
                this_param)
                {
                    var return_v = this_param.HasErrors;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 218097, 218124);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundKind
                f_10306_218258_218271(Microsoft.CodeAnalysis.CSharp.BoundExpression?
                this_param)
                {
                    var return_v = this_param.Kind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 218258, 218271);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Location
                f_10306_218522_218535(Microsoft.CodeAnalysis.SyntaxNode
                this_param)
                {
                    var return_v = this_param.Location;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 218522, 218535);
                    return return_v;
                }


                bool
                f_10306_218458_218565(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.BoundMethodGroup
                boundMethodGroup, Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                delegateType, Microsoft.CodeAnalysis.Location
                delegateMismatchLocation, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, out Microsoft.CodeAnalysis.CSharp.Conversion
                conversion)
                {
                    var return_v = this_param.MethodGroupConversionDoesNotExistOrHasErrors(boundMethodGroup, delegateType, delegateMismatchLocation, diagnostics, out conversion);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 218458, 218565);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundMethodGroup
                f_10306_218598_218665(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.BoundMethodGroup
                group, Microsoft.CodeAnalysis.CSharp.Conversion
                conversion, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.FixMethodGroupWithTypeOrValue(group, conversion, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 218598, 218665);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundDelegateCreationExpression
                f_10306_218691_218811(Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.CSharp.BoundMethodGroup
                argument, Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol?
                methodOpt, bool
                isExtensionMethod, Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                type, bool
                hasErrors)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.BoundDelegateCreationExpression(syntax, (Microsoft.CodeAnalysis.CSharp.BoundExpression)argument, methodOpt, isExtensionMethod, (Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol)type, hasErrors);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 218691, 218811);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?
                f_10306_218860_218873(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 218860, 218873);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Location
                f_10306_218965_218989(Microsoft.CodeAnalysis.SyntaxNode
                this_param)
                {
                    var return_v = this_param.Location;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 218965, 218989);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo
                f_10306_218915_218990(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, Microsoft.CodeAnalysis.Location
                location)
                {
                    var return_v = diagnostics.Add(code, location);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 218915, 218990);
                    return return_v;
                }


                bool
                f_10306_219125_219150(Microsoft.CodeAnalysis.CSharp.BoundExpression
                node)
                {
                    var return_v = node.HasDynamicType();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 219125, 219150);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundDelegateCreationExpression
                f_10306_219191_219297(Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.CSharp.BoundExpression
                argument, Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol?
                methodOpt, bool
                isExtensionMethod, Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                type)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.BoundDelegateCreationExpression(syntax, argument, methodOpt: methodOpt, isExtensionMethod: isExtensionMethod, type: (Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol)type);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 219191, 219297);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                f_10306_219374_219387(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 219374, 219387);
                    return return_v;
                }


                Microsoft.CodeAnalysis.TypeKind
                f_10306_219374_219396(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                this_param)
                {
                    var return_v = this_param.TypeKind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 219374, 219396);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                f_10306_219489_219502(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 219489, 219502);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.MethodGroup
                f_10306_219547_219572()
                {
                    var return_v = MethodGroup.GetInstance();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 219547, 219572);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                f_10306_219690_219703(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 219690, 219703);
                    return return_v;
                }


                bool
                f_10306_219639_219716(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                possibleDelegateType, Microsoft.CodeAnalysis.SyntaxNode
                node)
                {
                    var return_v = ReportDelegateInvokeUseSiteDiagnostic(diagnostics, possibleDelegateType, node: node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 219639, 219716);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol>
                f_10306_219959_219984(Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                this_param)
                {
                    var return_v = this_param.InstanceConstructors;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 219959, 219984);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>
                f_10306_219935_219985(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol>
                from)
                {
                    var return_v = StaticCast<Symbol>.From(from);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 219935, 219985);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                f_10306_219987_220018(Microsoft.CodeAnalysis.CSharp.BoundExpression
                item)
                {
                    var return_v = ImmutableArray.Create(item);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 219987, 220018);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundBadExpression
                f_10306_219875_220025(Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.CSharp.LookupResultKind
                resultKind, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>
                symbols, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                childBoundNodes, Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                type)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.BoundBadExpression(syntax, resultKind, symbols, childBoundNodes, (Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol)type);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 219875, 220025);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                f_10306_220120_220155(Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                this_param)
                {
                    var return_v = this_param.DelegateInvokeMethod;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 220120, 220155);
                    return return_v;
                }


                int
                f_10306_220073_220156(Microsoft.CodeAnalysis.CSharp.MethodGroup
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                receiverOpt, Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                method)
                {
                    this_param.PopulateWithSingleMethod(receiverOpt, method);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 220073, 220156);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.Conversions
                f_10306_220269_220280()
                {
                    var return_v = Conversions;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 220269, 220280);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Conversion
                f_10306_220269_220362(Microsoft.CodeAnalysis.CSharp.Conversions
                this_param, Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.CSharp.MethodGroup
                methodGroup, Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                delegateType, ref System.Collections.Generic.HashSet<Microsoft.CodeAnalysis.DiagnosticInfo>?
                useSiteDiagnostics)
                {
                    var return_v = this_param.MethodGroupConversion(syntax, methodGroup, delegateType, ref useSiteDiagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 220269, 220362);
                    return return_v;
                }


                bool
                f_10306_220385_220426(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.SyntaxNode
                node, System.Collections.Generic.HashSet<Microsoft.CodeAnalysis.DiagnosticInfo>
                useSiteDiagnostics)
                {
                    var return_v = diagnostics.Add(node, useSiteDiagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 220385, 220426);
                    return return_v;
                }


                bool
                f_10306_220453_220465_M(bool
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 220453, 220465);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                f_10306_220678_220713(Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                this_param)
                {
                    var return_v = this_param.DelegateInvokeMethod;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 220678, 220713);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol>
                f_10306_220656_220714(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                item)
                {
                    var return_v = ImmutableArray.Create(item);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 220656, 220714);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                f_10306_220745_220780(Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                this_param)
                {
                    var return_v = this_param.DelegateInvokeMethod;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 220745, 220780);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundMethodGroup
                f_10306_220538_220850(Microsoft.CodeAnalysis.SyntaxNode
                syntax, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations>
                typeArgumentsOpt, string
                name, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol>
                methods, Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                lookupSymbolOpt, Microsoft.CodeAnalysis.DiagnosticInfo?
                lookupError, Microsoft.CodeAnalysis.CSharp.BoundMethodGroupFlags
                flags, Microsoft.CodeAnalysis.CSharp.BoundExpression
                receiverOpt, Microsoft.CodeAnalysis.CSharp.LookupResultKind
                resultKind)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.BoundMethodGroup(syntax, typeArgumentsOpt, name, methods, (Microsoft.CodeAnalysis.CSharp.Symbol)lookupSymbolOpt, lookupError, (Microsoft.CodeAnalysis.CSharp.BoundMethodGroupFlags?)flags, receiverOpt, resultKind);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 220538, 220850);
                    return return_v;
                }


                bool
                f_10306_220882_220990(Microsoft.CodeAnalysis.CSharp.Binder
                binder, Microsoft.CodeAnalysis.CSharp.BoundMethodGroup
                expr, Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                targetType, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = Conversions.ReportDelegateOrFunctionPointerMethodGroupDiagnostics(binder, expr, (Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol)targetType, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 220882, 220990);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Location
                f_10306_221274_221287(Microsoft.CodeAnalysis.SyntaxNode
                this_param)
                {
                    var return_v = this_param.Location;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 221274, 221287);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                f_10306_221322_221357(Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                this_param)
                {
                    var return_v = this_param.DelegateInvokeMethod;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 221322, 221357);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo
                f_10306_221222_221397(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, Microsoft.CodeAnalysis.Location
                location, params object[]
                args)
                {
                    var return_v = diagnostics.Add(code, location, args);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 221222, 221397);
                    return return_v;
                }


                bool
                f_10306_221536_221559_M(bool
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 221536, 221559);
                    return return_v;
                }


                int
                f_10306_221523_221560(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 221523, 221560);
                    return 0;
                }


                int
                f_10306_221587_221613(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 221587, 221613);
                    return 0;
                }


                bool
                f_10306_221687_221818(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.CSharp.Conversion
                conversion, Microsoft.CodeAnalysis.CSharp.BoundExpression
                receiverOpt, bool
                isExtensionMethod, bool
                isAddressOf, Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                delegateOrFuncPtrType, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.MethodGroupConversionHasErrors(syntax, conversion, receiverOpt, isExtensionMethod, isAddressOf: isAddressOf, (Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol)delegateOrFuncPtrType, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 221687, 221818);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundDelegateCreationExpression
                f_10306_222009_222115(Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.CSharp.BoundExpression
                argument, Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol?
                methodOpt, bool
                isExtensionMethod, Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                type)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.BoundDelegateCreationExpression(syntax, argument, methodOpt: methodOpt, isExtensionMethod: isExtensionMethod, type: (Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol)type);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 222009, 222115);
                    return return_v;
                }


                int
                f_10306_222251_222269(Microsoft.CodeAnalysis.CSharp.MethodGroup
                this_param)
                {
                    this_param.Free();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 222251, 222269);
                    return 0;
                }


                Microsoft.CodeAnalysis.Location
                f_10306_222464_222488(Microsoft.CodeAnalysis.SyntaxNode
                this_param)
                {
                    var return_v = this_param.Location;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 222464, 222488);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo
                f_10306_222414_222489(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, Microsoft.CodeAnalysis.Location
                location)
                {
                    var return_v = diagnostics.Add(code, location);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 222414, 222489);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                f_10306_222638_222687(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.AnalyzedArguments
                analyzedArguments)
                {
                    var return_v = this_param.BuildArgumentsForErrorRecovery(analyzedArguments);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 222638, 222687);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol>
                f_10306_222806_222831(Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                this_param)
                {
                    var return_v = this_param.InstanceConstructors;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 222806, 222831);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>
                f_10306_222782_222832(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol>
                from)
                {
                    var return_v = StaticCast<Symbol>.From(from);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 222782, 222832);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundBadExpression
                f_10306_222709_222851(Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.CSharp.LookupResultKind
                resultKind, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>
                symbols, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                childBoundNodes, Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                type)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.BoundBadExpression(syntax, resultKind, symbols, childBoundNodes, (Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol)type);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 222709, 222851);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 213883, 222863);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 213883, 222863);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private BoundExpression BindClassCreationExpression(ObjectCreationExpressionSyntax node, NamedTypeSymbol type, string typeName, DiagnosticBag diagnostics, TypeSymbol initializerType = null)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10306, 222875, 224469);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 223153, 223223);

                AnalyzedArguments
                analyzedArguments = f_10306_223191_223222()
                ;
                try
                {
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 223321, 223414);

                    f_10306_223321_223413(this, f_10306_223343_223360(node), diagnostics, analyzedArguments, allowArglist: true);

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 223616, 224194) || true) && (f_10306_223620_223633(type))
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 223616, 224194);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 223675, 223752);

                        f_10306_223675_223751(diagnostics, ErrorCode.ERR_InstantiatingStaticClass, f_10306_223731_223744(node), type);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 223774, 223860);

                        return f_10306_223781_223859(this, node, type, analyzedArguments, diagnostics);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 223616, 224194);
                    }

                    else
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 223616, 224194);

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 223902, 224194) || true) && (f_10306_223906_223922(f_10306_223906_223915(node)) == SyntaxKind.TupleType)
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 223902, 224194);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 223988, 224067);

                            f_10306_223988_224066(diagnostics, ErrorCode.ERR_NewWithTupleTypeSyntax, f_10306_224042_224065(f_10306_224042_224051(node)));
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 224089, 224175);

                            return f_10306_224096_224174(this, node, type, analyzedArguments, diagnostics);
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 223902, 224194);
                        }
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 223616, 224194);
                    }
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 224214, 224349);

                    return f_10306_224221_224348(this, node, typeName, f_10306_224265_224274(node), type, analyzedArguments, diagnostics, f_10306_224314_224330(node), initializerType);
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinally(10306, 224378, 224458);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 224418, 224443);

                    f_10306_224418_224442(analyzedArguments);
                    DynAbs.Tracing.TraceSender.TraceExitFinally(10306, 224378, 224458);
                }
                DynAbs.Tracing.TraceSender.TraceExitMethod(10306, 222875, 224469);

                Microsoft.CodeAnalysis.CSharp.AnalyzedArguments
                f_10306_223191_223222()
                {
                    var return_v = AnalyzedArguments.GetInstance();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 223191, 223222);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentListSyntax?
                f_10306_223343_223360(Microsoft.CodeAnalysis.CSharp.Syntax.ObjectCreationExpressionSyntax
                this_param)
                {
                    var return_v = this_param.ArgumentList;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 223343, 223360);
                    return return_v;
                }


                int
                f_10306_223321_223413(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentListSyntax?
                argumentListOpt, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.AnalyzedArguments
                result, bool
                allowArglist)
                {
                    this_param.BindArgumentsAndNames(argumentListOpt, diagnostics, result, allowArglist: allowArglist);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 223321, 223413);
                    return 0;
                }


                bool
                f_10306_223620_223633(Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                this_param)
                {
                    var return_v = this_param.IsStatic;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 223620, 223633);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Location
                f_10306_223731_223744(Microsoft.CodeAnalysis.CSharp.Syntax.ObjectCreationExpressionSyntax
                this_param)
                {
                    var return_v = this_param.Location;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 223731, 223744);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo
                f_10306_223675_223751(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, Microsoft.CodeAnalysis.Location
                location, params object[]
                args)
                {
                    var return_v = diagnostics.Add(code, location, args);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 223675, 223751);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_223781_223859(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.ObjectCreationExpressionSyntax
                node, Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                type, Microsoft.CodeAnalysis.CSharp.AnalyzedArguments
                analyzedArguments, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.MakeBadExpressionForObjectCreation(node, (Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol)type, analyzedArguments, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 223781, 223859);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax
                f_10306_223906_223915(Microsoft.CodeAnalysis.CSharp.Syntax.ObjectCreationExpressionSyntax
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 223906, 223915);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.SyntaxKind
                f_10306_223906_223922(Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax
                this_param)
                {
                    var return_v = this_param.Kind();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 223906, 223922);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax
                f_10306_224042_224051(Microsoft.CodeAnalysis.CSharp.Syntax.ObjectCreationExpressionSyntax
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 224042, 224051);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Location
                f_10306_224042_224065(Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax
                this_param)
                {
                    var return_v = this_param.GetLocation();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 224042, 224065);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo
                f_10306_223988_224066(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, Microsoft.CodeAnalysis.Location
                location)
                {
                    var return_v = diagnostics.Add(code, location);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 223988, 224066);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_224096_224174(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.ObjectCreationExpressionSyntax
                node, Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                type, Microsoft.CodeAnalysis.CSharp.AnalyzedArguments
                analyzedArguments, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.MakeBadExpressionForObjectCreation(node, (Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol)type, analyzedArguments, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 224096, 224174);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax
                f_10306_224265_224274(Microsoft.CodeAnalysis.CSharp.Syntax.ObjectCreationExpressionSyntax
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 224265, 224274);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax?
                f_10306_224314_224330(Microsoft.CodeAnalysis.CSharp.Syntax.ObjectCreationExpressionSyntax
                this_param)
                {
                    var return_v = this_param.Initializer;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 224314, 224330);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_224221_224348(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.ObjectCreationExpressionSyntax
                node, string
                typeName, Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax
                typeNode, Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                type, Microsoft.CodeAnalysis.CSharp.AnalyzedArguments
                analyzedArguments, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax?
                initializerSyntaxOpt, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?
                initializerTypeOpt)
                {
                    var return_v = this_param.BindClassCreationExpression((Microsoft.CodeAnalysis.SyntaxNode)node, typeName, (Microsoft.CodeAnalysis.SyntaxNode)typeNode, type, analyzedArguments, diagnostics, initializerSyntaxOpt, initializerTypeOpt);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 224221, 224348);
                    return return_v;
                }


                int
                f_10306_224418_224442(Microsoft.CodeAnalysis.CSharp.AnalyzedArguments
                this_param)
                {
                    this_param.Free();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 224418, 224442);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 222875, 224469);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 222875, 224469);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        internal BoundExpression BindObjectCreationForErrorRecovery(BoundUnconvertedObjectCreationExpression node, DiagnosticBag diagnostics)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10306, 224481, 224984);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 224639, 224750);

                var
                arguments = f_10306_224655_224749(f_10306_224685_224699(node), f_10306_224701_224725(node), f_10306_224727_224748(node))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 224764, 224914);

                var
                result = f_10306_224777_224913(this, node.Syntax, f_10306_224825_224842(this), arguments, f_10306_224855_224874(node), typeSyntax: node.Syntax, diagnostics)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 224928, 224945);

                f_10306_224928_224944(arguments);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 224959, 224973);

                return result;
                DynAbs.Tracing.TraceSender.TraceExitMethod(10306, 224481, 224984);

                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                f_10306_224685_224699(Microsoft.CodeAnalysis.CSharp.BoundUnconvertedObjectCreationExpression
                this_param)
                {
                    var return_v = this_param.Arguments;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 224685, 224699);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.RefKind>
                f_10306_224701_224725(Microsoft.CodeAnalysis.CSharp.BoundUnconvertedObjectCreationExpression
                this_param)
                {
                    var return_v = this_param.ArgumentRefKindsOpt;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 224701, 224725);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Syntax.IdentifierNameSyntax>
                f_10306_224727_224748(Microsoft.CodeAnalysis.CSharp.BoundUnconvertedObjectCreationExpression
                this_param)
                {
                    var return_v = this_param.ArgumentNamesOpt;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 224727, 224748);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.AnalyzedArguments
                f_10306_224655_224749(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                arguments, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.RefKind>
                argumentRefKindsOpt, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Syntax.IdentifierNameSyntax>
                argumentNamesOpt)
                {
                    var return_v = AnalyzedArguments.GetInstance(arguments, argumentRefKindsOpt, argumentNamesOpt);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 224655, 224749);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                f_10306_224825_224842(Microsoft.CodeAnalysis.CSharp.Binder
                this_param)
                {
                    var return_v = this_param.CreateErrorType();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 224825, 224842);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax?
                f_10306_224855_224874(Microsoft.CodeAnalysis.CSharp.BoundUnconvertedObjectCreationExpression
                this_param)
                {
                    var return_v = this_param.InitializerOpt;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 224855, 224874);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_224777_224913(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.SyntaxNode
                node, Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                type, Microsoft.CodeAnalysis.CSharp.AnalyzedArguments
                analyzedArguments, Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax?
                initializerOpt, Microsoft.CodeAnalysis.SyntaxNode
                typeSyntax, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.MakeBadExpressionForObjectCreation(node, (Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol)type, analyzedArguments, initializerOpt, typeSyntax: typeSyntax, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 224777, 224913);
                    return return_v;
                }


                int
                f_10306_224928_224944(Microsoft.CodeAnalysis.CSharp.AnalyzedArguments
                this_param)
                {
                    this_param.Free();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 224928, 224944);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 224481, 224984);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 224481, 224984);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private BoundExpression MakeBadExpressionForObjectCreation(ObjectCreationExpressionSyntax node, TypeSymbol type, AnalyzedArguments analyzedArguments, DiagnosticBag diagnostics)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10306, 224996, 225323);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 225197, 225312);

                return f_10306_225204_225311(this, node, type, analyzedArguments, f_10306_225270_225286(node), f_10306_225288_225297(node), diagnostics);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10306, 224996, 225323);

                Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax?
                f_10306_225270_225286(Microsoft.CodeAnalysis.CSharp.Syntax.ObjectCreationExpressionSyntax
                this_param)
                {
                    var return_v = this_param.Initializer;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 225270, 225286);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax
                f_10306_225288_225297(Microsoft.CodeAnalysis.CSharp.Syntax.ObjectCreationExpressionSyntax
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 225288, 225297);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_225204_225311(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.ObjectCreationExpressionSyntax
                node, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                type, Microsoft.CodeAnalysis.CSharp.AnalyzedArguments
                analyzedArguments, Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax?
                initializerOpt, Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax
                typeSyntax, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.MakeBadExpressionForObjectCreation((Microsoft.CodeAnalysis.SyntaxNode)node, type, analyzedArguments, initializerOpt, (Microsoft.CodeAnalysis.SyntaxNode)typeSyntax, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 225204, 225311);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 224996, 225323);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 224996, 225323);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private BoundExpression MakeBadExpressionForObjectCreation(SyntaxNode node, TypeSymbol type, AnalyzedArguments analyzedArguments, InitializerExpressionSyntax initializerOpt, SyntaxNode typeSyntax, DiagnosticBag diagnostics)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10306, 225335, 226454);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 225583, 225642);

                var
                children = f_10306_225598_225641()
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 225656, 225725);

                f_10306_225656_225724(children, f_10306_225674_225723(this, analyzedArguments));

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 225739, 226286) || true) && (initializerOpt != null)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 225739, 226286);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 225799, 226222);

                    var
                    boundInitializer = f_10306_225822_226221(this, syntax: initializerOpt, type: type, typeSyntax: typeSyntax, isForNewInstance: true, diagnostics: diagnostics)
                    ;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 226240, 226271);

                    f_10306_226240_226270(children, boundInitializer);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 225739, 226286);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 226302, 226443);

                return f_10306_226309_226442(node, LookupResultKind.NotCreatable, f_10306_226369_226404(type), f_10306_226406_226435(children), type);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10306, 225335, 226454);

                Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                f_10306_225598_225641()
                {
                    var return_v = ArrayBuilder<BoundExpression>.GetInstance();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 225598, 225641);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                f_10306_225674_225723(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.AnalyzedArguments
                analyzedArguments)
                {
                    var return_v = this_param.BuildArgumentsForErrorRecovery(analyzedArguments);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 225674, 225723);
                    return return_v;
                }


                int
                f_10306_225656_225724(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                this_param, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                items)
                {
                    this_param.AddRange(items);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 225656, 225724);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.BoundObjectInitializerExpressionBase
                f_10306_225822_226221(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax
                syntax, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                type, Microsoft.CodeAnalysis.SyntaxNode
                typeSyntax, bool
                isForNewInstance, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.BindInitializerExpression(syntax: syntax, type: type, typeSyntax: typeSyntax, isForNewInstance: isForNewInstance, diagnostics: diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 225822, 226221);
                    return return_v;
                }


                int
                f_10306_226240_226270(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                this_param, Microsoft.CodeAnalysis.CSharp.BoundObjectInitializerExpressionBase
                item)
                {
                    this_param.Add((Microsoft.CodeAnalysis.CSharp.BoundExpression)item);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 226240, 226270);
                    return 0;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>
                f_10306_226369_226404(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                item)
                {
                    var return_v = ImmutableArray.Create<Symbol>((Microsoft.CodeAnalysis.CSharp.Symbol)item);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 226369, 226404);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                f_10306_226406_226435(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                this_param)
                {
                    var return_v = this_param.ToImmutableAndFree();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 226406, 226435);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundBadExpression
                f_10306_226309_226442(Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.CSharp.LookupResultKind
                resultKind, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>
                symbols, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                childBoundNodes, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                type)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.BoundBadExpression(syntax, resultKind, symbols, childBoundNodes, type);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 226309, 226442);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 225335, 226454);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 225335, 226454);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private BoundObjectInitializerExpressionBase BindInitializerExpression(
                    InitializerExpressionSyntax syntax,
                    TypeSymbol type,
                    SyntaxNode typeSyntax,
                    bool isForNewInstance,
                    DiagnosticBag diagnostics)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10306, 226466, 227886);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 226753, 226782);

                f_10306_226753_226781(syntax != null);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 226796, 226831);

                f_10306_226796_226830((object)type != null);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 226847, 226982);

                var
                implicitReceiver = new BoundObjectOrCollectionValuePlaceholder(typeSyntax, isForNewInstance, type) { WasCompilerGenerated = DynAbs.Tracing.TraceSender.TraceInitializationWrapper(() => true, 10306, 226870, 226981) }
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 226998, 227875);

                switch (f_10306_227006_227019(syntax))
                {

                    case SyntaxKind.ObjectInitializerExpression:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 226998, 227875);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 227226, 227368);

                        return f_10306_227233_227367(this, syntax, type, diagnostics, implicitReceiver, useObjectInitDiagnostics: true);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 226998, 227875);

                    case SyntaxKind.WithInitializerExpression:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 226998, 227875);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 227452, 227595);

                        return f_10306_227459_227594(this, syntax, type, diagnostics, implicitReceiver, useObjectInitDiagnostics: false);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 226998, 227875);

                    case SyntaxKind.CollectionInitializerExpression:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 226998, 227875);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 227685, 227773);

                        return f_10306_227692_227772(this, syntax, type, diagnostics, implicitReceiver);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 226998, 227875);

                    default:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 226998, 227875);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 227823, 227860);

                        throw f_10306_227829_227859();
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 226998, 227875);
                }
                DynAbs.Tracing.TraceSender.TraceExitMethod(10306, 226466, 227886);

                int
                f_10306_226753_226781(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 226753, 226781);
                    return 0;
                }


                int
                f_10306_226796_226830(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 226796, 226830);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.SyntaxKind
                f_10306_227006_227019(Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax
                this_param)
                {
                    var return_v = this_param.Kind();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 227006, 227019);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundObjectInitializerExpression
                f_10306_227233_227367(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax
                initializerSyntax, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                initializerType, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.BoundObjectOrCollectionValuePlaceholder
                implicitReceiver, bool
                useObjectInitDiagnostics)
                {
                    var return_v = this_param.BindObjectInitializerExpression(initializerSyntax, initializerType, diagnostics, implicitReceiver, useObjectInitDiagnostics: useObjectInitDiagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 227233, 227367);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundObjectInitializerExpression
                f_10306_227459_227594(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax
                initializerSyntax, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                initializerType, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.BoundObjectOrCollectionValuePlaceholder
                implicitReceiver, bool
                useObjectInitDiagnostics)
                {
                    var return_v = this_param.BindObjectInitializerExpression(initializerSyntax, initializerType, diagnostics, implicitReceiver, useObjectInitDiagnostics: useObjectInitDiagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 227459, 227594);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundCollectionInitializerExpression
                f_10306_227692_227772(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax
                initializerSyntax, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                initializerType, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.BoundObjectOrCollectionValuePlaceholder
                implicitReceiver)
                {
                    var return_v = this_param.BindCollectionInitializerExpression(initializerSyntax, initializerType, diagnostics, implicitReceiver);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 227692, 227772);
                    return return_v;
                }


                System.Exception
                f_10306_227829_227859()
                {
                    var return_v = ExceptionUtilities.Unreachable;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 227829, 227859);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 226466, 227886);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 226466, 227886);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private BoundExpression BindInitializerExpressionOrValue(
                    ExpressionSyntax syntax,
                    TypeSymbol type,
                    SyntaxNode typeSyntax,
                    DiagnosticBag diagnostics)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10306, 227898, 228769);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 228124, 228153);

                f_10306_228124_228152(syntax != null);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 228167, 228202);

                f_10306_228167_228201((object)type != null);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 228218, 228758);

                switch (f_10306_228226_228239(syntax))
                {

                    case SyntaxKind.ObjectInitializerExpression:
                    case SyntaxKind.CollectionInitializerExpression:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 228218, 228758);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 228405, 228487);

                        f_10306_228405_228486(f_10306_228418_228445(f_10306_228418_228438(f_10306_228418_228431(syntax))) != SyntaxKind.WithInitializerExpression);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 228509, 228635);

                        return f_10306_228516_228634(this, syntax, type, typeSyntax, isForNewInstance: false, diagnostics);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 228218, 228758);

                    default:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 228218, 228758);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 228683, 228743);

                        return f_10306_228690_228742(this, syntax, diagnostics, BindValueKind.RValue);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 228218, 228758);
                }
                DynAbs.Tracing.TraceSender.TraceExitMethod(10306, 227898, 228769);

                int
                f_10306_228124_228152(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 228124, 228152);
                    return 0;
                }


                int
                f_10306_228167_228201(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 228167, 228201);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.SyntaxKind
                f_10306_228226_228239(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                this_param)
                {
                    var return_v = this_param.Kind();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 228226, 228239);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode?
                f_10306_228418_228431(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                this_param)
                {
                    var return_v = this_param.Parent;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 228418, 228431);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode?
                f_10306_228418_228438(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode?
                this_param)
                {
                    var return_v = this_param.Parent;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 228418, 228438);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.SyntaxKind
                f_10306_228418_228445(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode?
                this_param)
                {
                    var return_v = this_param.Kind();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 228418, 228445);
                    return return_v;
                }


                int
                f_10306_228405_228486(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 228405, 228486);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.BoundObjectInitializerExpressionBase
                f_10306_228516_228634(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                syntax, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                type, Microsoft.CodeAnalysis.SyntaxNode
                typeSyntax, bool
                isForNewInstance, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.BindInitializerExpression((Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax)syntax, type, typeSyntax, isForNewInstance: isForNewInstance, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 228516, 228634);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_228690_228742(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                node, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.Binder.BindValueKind
                valueKind)
                {
                    var return_v = this_param.BindValue(node, diagnostics, valueKind);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 228690, 228742);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 227898, 228769);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 227898, 228769);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private BoundObjectInitializerExpression BindObjectInitializerExpression(
                    InitializerExpressionSyntax initializerSyntax,
                    TypeSymbol initializerType,
                    DiagnosticBag diagnostics,
                    BoundObjectOrCollectionValuePlaceholder implicitReceiver,
                    bool useObjectInitDiagnostics)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10306, 228781, 231591);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 229599, 229774);

                f_10306_229599_229773(f_10306_229612_229636(initializerSyntax) == SyntaxKind.ObjectInitializerExpression || (DynAbs.Tracing.TraceSender.Expression_False(10306, 229612, 229772) || f_10306_229708_229732(initializerSyntax) == SyntaxKind.WithInitializerExpression));
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 229788, 229834);

                f_10306_229788_229833((object)initializerType != null);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 230433, 230599);

                var
                objectInitializerMemberBinder = (DynAbs.Tracing.TraceSender.Conditional_F1(10306, 230469, 230493) || ((useObjectInitDiagnostics
                && DynAbs.Tracing.TraceSender.Conditional_F2(10306, 230513, 230574)) || DynAbs.Tracing.TraceSender.Conditional_F3(10306, 230594, 230598))) ? f_10306_230513_230574(this, BinderFlags.ObjectInitializerMember) : this
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 230615, 230713);

                var
                initializers = f_10306_230634_230712(initializerSyntax.Expressions.Count)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 230814, 230870);

                var
                memberNameMap = f_10306_230834_230869()
                ;
                try
                {
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 230884, 231362);
                    foreach (var memberInitializer in f_10306_230918_230947_I(f_10306_230918_230947(initializerSyntax)))
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 230884, 231362);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 230981, 231174);

                        BoundExpression
                        boundMemberInitializer = f_10306_231022_231173(this, memberInitializer, initializerType, objectInitializerMemberBinder, diagnostics, implicitReceiver)
                        ;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 231194, 231235);

                        f_10306_231194_231234(
                                        initializers, boundMemberInitializer);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 231255, 231347);

                        f_10306_231255_231346(boundMemberInitializer, memberNameMap, diagnostics);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 230884, 231362);
                    }
                }
                catch (System.Exception)
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoopByException(10306, 1, 479);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoop(10306, 1, 479);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 231378, 231580);

                return f_10306_231385_231579(initializerSyntax, implicitReceiver, f_10306_231511_231544(initializers), initializerType);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10306, 228781, 231591);

                Microsoft.CodeAnalysis.CSharp.SyntaxKind
                f_10306_229612_229636(Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax
                this_param)
                {
                    var return_v = this_param.Kind();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 229612, 229636);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.SyntaxKind
                f_10306_229708_229732(Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax
                this_param)
                {
                    var return_v = this_param.Kind();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 229708, 229732);
                    return return_v;
                }


                int
                f_10306_229599_229773(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 229599, 229773);
                    return 0;
                }


                int
                f_10306_229788_229833(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 229788, 229833);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.Binder
                f_10306_230513_230574(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.BinderFlags
                flags)
                {
                    var return_v = this_param.WithAdditionalFlags(flags);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 230513, 230574);
                    return return_v;
                }


                Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                f_10306_230634_230712(int
                capacity)
                {
                    var return_v = ArrayBuilder<BoundExpression>.GetInstance(capacity);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 230634, 230712);
                    return return_v;
                }


                Microsoft.CodeAnalysis.PooledObjects.PooledHashSet<string>
                f_10306_230834_230869()
                {
                    var return_v = PooledHashSet<string>.GetInstance();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 230834, 230869);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SeparatedSyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax>
                f_10306_230918_230947(Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax
                this_param)
                {
                    var return_v = this_param.Expressions;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 230918, 230947);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_231022_231173(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                memberInitializer, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                initializerType, Microsoft.CodeAnalysis.CSharp.Binder
                objectInitializerMemberBinder, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.BoundObjectOrCollectionValuePlaceholder
                implicitReceiver)
                {
                    var return_v = this_param.BindInitializerMemberAssignment(memberInitializer, initializerType, objectInitializerMemberBinder, diagnostics, implicitReceiver);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 231022, 231173);
                    return return_v;
                }


                int
                f_10306_231194_231234(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                item)
                {
                    this_param.Add(item);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 231194, 231234);
                    return 0;
                }


                int
                f_10306_231255_231346(Microsoft.CodeAnalysis.CSharp.BoundExpression
                boundMemberInitializer, Microsoft.CodeAnalysis.PooledObjects.PooledHashSet<string>
                memberNameMap, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    ReportDuplicateObjectMemberInitializers(boundMemberInitializer, (System.Collections.Generic.HashSet<string>)memberNameMap, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 231255, 231346);
                    return 0;
                }


                Microsoft.CodeAnalysis.SeparatedSyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax>
                f_10306_230918_230947_I(Microsoft.CodeAnalysis.SeparatedSyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax>
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 230918, 230947);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                f_10306_231511_231544(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                this_param)
                {
                    var return_v = this_param.ToImmutableAndFree();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 231511, 231544);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundObjectInitializerExpression
                f_10306_231385_231579(Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax
                syntax, Microsoft.CodeAnalysis.CSharp.BoundObjectOrCollectionValuePlaceholder
                placeholder, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                initializers, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                type)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.BoundObjectInitializerExpression((Microsoft.CodeAnalysis.SyntaxNode)syntax, placeholder, initializers, type);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 231385, 231579);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 228781, 231591);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 228781, 231591);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private BoundExpression BindInitializerMemberAssignment(
                    ExpressionSyntax memberInitializer,
                    TypeSymbol initializerType,
                    Binder objectInitializerMemberBinder,
                    DiagnosticBag diagnostics,
                    BoundObjectOrCollectionValuePlaceholder implicitReceiver)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10306, 231603, 234779);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 232121, 234480) || true) && (f_10306_232125_232149(memberInitializer) == SyntaxKind.SimpleAssignmentExpression)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 232121, 234480);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 232224, 232288);

                    var
                    initializer = (AssignmentExpressionSyntax)memberInitializer
                    ;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 232393, 232426);

                    BoundExpression
                    boundLeft = null
                    ;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 232444, 232478);

                    var
                    leftSyntax = f_10306_232461_232477(initializer)
                    ;

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 232498, 233762) || true) && (f_10306_232502_232529(initializerType) && (DynAbs.Tracing.TraceSender.Expression_True(10306, 232502, 232579) && f_10306_232533_232550(leftSyntax) == SyntaxKind.IdentifierName))
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 232498, 233762);
                        {
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 232735, 232803);

                            var
                            memberName = ((IdentifierNameSyntax)leftSyntax).Identifier.Text
                            ;
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 232829, 232963);

                            boundLeft = f_10306_232841_232962(leftSyntax, memberName, f_10306_232905_232926(implicitReceiver), initializerType, hasErrors: false);
                        }
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 232498, 233762);
                    }

                    else

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 232498, 233762);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 233553, 233605);

                        f_10306_233553_233604(objectInitializerMemberBinder != null);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 233629, 233743);

                        boundLeft = f_10306_233641_233742(objectInitializerMemberBinder, initializer, implicitReceiver, diagnostics);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 232498, 233762);
                    }

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 233782, 234465) || true) && (boundLeft != null)
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 233782, 234465);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 233845, 233890);

                        f_10306_233845_233889((object)f_10306_233866_233880(boundLeft) != null);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 233999, 234267);

                        BoundExpression
                        boundRight = f_10306_234028_234266(this, syntax: f_10306_234095_234112(initializer), type: f_10306_234145_234159(boundLeft), typeSyntax: boundLeft.Syntax, diagnostics: diagnostics)
                        ;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 234361, 234446);

                        return f_10306_234368_234445(this, initializer, boundLeft, boundRight, isRef: false, diagnostics);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 233782, 234465);
                    }
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 232121, 234480);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 234496, 234582);

                var
                boundExpression = f_10306_234518_234581(this, memberInitializer, diagnostics, BindValueKind.RValue)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 234596, 234686);

                f_10306_234596_234685(diagnostics, ErrorCode.ERR_InvalidInitializerElementInitializer, memberInitializer);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 234700, 234768);

                return f_10306_234707_234767(this, boundExpression, LookupResultKind.NotAValue);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10306, 231603, 234779);

                Microsoft.CodeAnalysis.CSharp.SyntaxKind
                f_10306_232125_232149(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                this_param)
                {
                    var return_v = this_param.Kind();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 232125, 232149);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                f_10306_232461_232477(Microsoft.CodeAnalysis.CSharp.Syntax.AssignmentExpressionSyntax
                this_param)
                {
                    var return_v = this_param.Left;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 232461, 232477);
                    return return_v;
                }


                bool
                f_10306_232502_232529(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                type)
                {
                    var return_v = type.IsDynamic();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 232502, 232529);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.SyntaxKind
                f_10306_232533_232550(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                this_param)
                {
                    var return_v = this_param.Kind();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 232533, 232550);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                f_10306_232905_232926(Microsoft.CodeAnalysis.CSharp.BoundObjectOrCollectionValuePlaceholder
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 232905, 232926);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundDynamicObjectInitializerMember
                f_10306_232841_232962(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                syntax, string
                memberName, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                receiverType, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                type, bool
                hasErrors)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.BoundDynamicObjectInitializerMember((Microsoft.CodeAnalysis.SyntaxNode)syntax, memberName, receiverType, type, hasErrors: hasErrors);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 232841, 232962);
                    return return_v;
                }


                int
                f_10306_233553_233604(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 233553, 233604);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_233641_233742(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.AssignmentExpressionSyntax
                namedAssignment, Microsoft.CodeAnalysis.CSharp.BoundObjectOrCollectionValuePlaceholder
                implicitReceiver, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.BindObjectInitializerMember(namedAssignment, implicitReceiver, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 233641, 233742);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?
                f_10306_233866_233880(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 233866, 233880);
                    return return_v;
                }


                int
                f_10306_233845_233889(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 233845, 233889);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                f_10306_234095_234112(Microsoft.CodeAnalysis.CSharp.Syntax.AssignmentExpressionSyntax
                this_param)
                {
                    var return_v = this_param.Right;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 234095, 234112);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                f_10306_234145_234159(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 234145, 234159);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_234028_234266(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                syntax, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                type, Microsoft.CodeAnalysis.SyntaxNode
                typeSyntax, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.BindInitializerExpressionOrValue(syntax: syntax, type: type, typeSyntax: typeSyntax, diagnostics: diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 234028, 234266);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundAssignmentOperator
                f_10306_234368_234445(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.AssignmentExpressionSyntax
                node, Microsoft.CodeAnalysis.CSharp.BoundExpression
                op1, Microsoft.CodeAnalysis.CSharp.BoundExpression
                op2, bool
                isRef, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.BindAssignment((Microsoft.CodeAnalysis.SyntaxNode)node, op1, op2, isRef: isRef, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 234368, 234445);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_234518_234581(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                node, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.Binder.BindValueKind
                valueKind)
                {
                    var return_v = this_param.BindValue(node, diagnostics, valueKind);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 234518, 234581);
                    return return_v;
                }


                int
                f_10306_234596_234685(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                syntax)
                {
                    Error(diagnostics, code, (Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode)syntax);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 234596, 234685);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_234707_234767(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                expr, Microsoft.CodeAnalysis.CSharp.LookupResultKind
                resultKind)
                {
                    var return_v = this_param.ToBadExpression(expr, resultKind);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 234707, 234767);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 231603, 234779);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 231603, 234779);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private BoundExpression BindObjectInitializerMember(
                    AssignmentExpressionSyntax namedAssignment,
                    BoundObjectOrCollectionValuePlaceholder implicitReceiver,
                    DiagnosticBag diagnostics)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10306, 234862, 244043);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 235107, 235135);

                BoundExpression
                boundMember
                = default(BoundExpression);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 235149, 235177);

                LookupResultKind
                resultKind
                = default(LookupResultKind);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 235191, 235206);

                bool
                hasErrors
                = default(bool);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 235222, 237680) || true) && (f_10306_235226_235253(f_10306_235226_235246(namedAssignment)) == SyntaxKind.IdentifierName)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 235222, 237680);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 235316, 235376);

                    var
                    memberName = (IdentifierNameSyntax)f_10306_235355_235375(namedAssignment)
                    ;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 235985, 236557);

                    boundMember = f_10306_235999_236556(this, node: memberName, right: memberName, boundLeft: implicitReceiver, rightName: memberName.Identifier.ValueText, rightArity: 0, typeArgumentsSyntax: default(SeparatedSyntaxList<TypeSyntax>), typeArgumentsWithAnnotations: default(ImmutableArray<TypeWithAnnotations>), invoked: false, indexed: false, diagnostics: diagnostics);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 236577, 236613);

                    resultKind = f_10306_236590_236612(boundMember);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 236631, 236701);

                    hasErrors = f_10306_236643_236667(boundMember) || (DynAbs.Tracing.TraceSender.Expression_False(10306, 236643, 236700) || f_10306_236671_236700(implicitReceiver));

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 236721, 237105) || true) && (f_10306_236725_236741(boundMember) == BoundKind.PropertyGroup)
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 236721, 237105);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 236810, 236946);

                        boundMember = f_10306_236824_236945(this, boundMember, mustHaveAllOptionalParameters: true, diagnostics: diagnostics);

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 236968, 237086) || true) && (f_10306_236972_236996(boundMember))
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 236968, 237086);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 237046, 237063);

                            hasErrors = true;
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 236968, 237086);
                        }
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 236721, 237105);
                    }
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 235222, 237680);
                }

                else
                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 235222, 237680);

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 237139, 237680) || true) && (f_10306_237143_237170(f_10306_237143_237163(namedAssignment)) == SyntaxKind.ImplicitElementAccess)
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 237139, 237680);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 237240, 237313);

                        var
                        implicitIndexing = (ImplicitElementAccessSyntax)f_10306_237292_237312(namedAssignment)
                        ;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 237331, 237443);

                        boundMember = f_10306_237345_237442(this, implicitIndexing, implicitReceiver, f_10306_237399_237428(implicitIndexing), diagnostics);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 237463, 237499);

                        resultKind = f_10306_237476_237498(boundMember);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 237517, 237587);

                        hasErrors = f_10306_237529_237553(boundMember) || (DynAbs.Tracing.TraceSender.Expression_False(10306, 237529, 237586) || f_10306_237557_237586(implicitReceiver));
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 237139, 237680);
                    }

                    else

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 237139, 237680);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 237653, 237665);

                        return null;
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 237139, 237680);
                    }
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 235222, 237680);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 239140, 239185);

                BoundKind
                boundMemberKind = f_10306_239168_239184(boundMember)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 239199, 239249);

                SyntaxKind
                rhsKind = f_10306_239220_239248(f_10306_239220_239241(namedAssignment))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 239263, 239400);

                bool
                isRhsNestedInitializer = rhsKind == SyntaxKind.ObjectInitializerExpression || (DynAbs.Tracing.TraceSender.Expression_False(10306, 239293, 239399) || rhsKind == SyntaxKind.CollectionInitializerExpression)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 239414, 239513);

                BindValueKind
                valueKind = (DynAbs.Tracing.TraceSender.Conditional_F1(10306, 239440, 239462) || ((isRhsNestedInitializer && DynAbs.Tracing.TraceSender.Conditional_F2(10306, 239465, 239485)) || DynAbs.Tracing.TraceSender.Conditional_F3(10306, 239488, 239512))) ? BindValueKind.RValue : BindValueKind.Assignable
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 239529, 239611);

                ImmutableArray<BoundExpression>
                arguments = ImmutableArray<BoundExpression>.Empty
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 239625, 239699);

                ImmutableArray<string>
                argumentNamesOpt = default(ImmutableArray<string>)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 239713, 239780);

                ImmutableArray<int>
                argsToParamsOpt = default(ImmutableArray<int>)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 239794, 239873);

                ImmutableArray<RefKind>
                argumentRefKindsOpt = default(ImmutableArray<RefKind>)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 239887, 239935);

                BitVector
                defaultArguments = default(BitVector)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 239949, 239971);

                bool
                expanded = false
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 239987, 242911);

                switch (boundMemberKind)
                {

                    case BoundKind.FieldAccess:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 239987, 242911);
                        {
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 240120, 240182);

                            var
                            fieldSymbol = f_10306_240138_240181(((BoundFieldAccess)boundMember))
                            ;

                            if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 240208, 240853) || true) && (isRhsNestedInitializer && (DynAbs.Tracing.TraceSender.Expression_True(10306, 240212, 240260) && f_10306_240238_240260(fieldSymbol)) && (DynAbs.Tracing.TraceSender.Expression_True(10306, 240212, 240292) && f_10306_240264_240292(f_10306_240264_240280(fieldSymbol))))
                            )

                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 240208, 240853);

                                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 240350, 240754) || true) && (!hasErrors)
                                )

                                {
                                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 240350, 240754);
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 240548, 240672);

                                    f_10306_240548_240671(diagnostics, ErrorCode.ERR_ReadonlyValueTypeInObjectInitializer, f_10306_240619_240639(namedAssignment), fieldSymbol, f_10306_240654_240670(fieldSymbol));
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 240706, 240723);

                                    hasErrors = true;
                                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 240350, 240754);
                                }
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 240786, 240826);

                                resultKind = LookupResultKind.NotAValue;
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 240208, 240853);
                            }
                            DynAbs.Tracing.TraceSender.TraceBreak(10306, 240879, 240885);

                            break;
                        }
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 239987, 242911);

                    case BoundKind.EventAccess:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 239987, 242911);
                        DynAbs.Tracing.TraceSender.TraceBreak(10306, 240977, 240983);

                        break;
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 239987, 242911);

                    case BoundKind.PropertyAccess:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 239987, 242911);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 241055, 241251);

                        hasErrors |= isRhsNestedInitializer && (DynAbs.Tracing.TraceSender.Expression_True(10306, 241068, 241250) && !f_10306_241095_241250(f_10306_241138_241187(((BoundPropertyAccess)boundMember)), f_10306_241189_241209(namedAssignment), diagnostics, hasErrors, ref resultKind));
                        DynAbs.Tracing.TraceSender.TraceBreak(10306, 241273, 241279);

                        break;
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 239987, 242911);

                    case BoundKind.IndexerAccess:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 239987, 242911);
                        {
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 241377, 241476);

                            var
                            indexer = f_10306_241391_241475(this, boundMember, valueKind, diagnostics)
                            ;
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 241502, 241524);

                            boundMember = indexer;
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 241550, 241712);

                            hasErrors |= isRhsNestedInitializer && (DynAbs.Tracing.TraceSender.Expression_True(10306, 241563, 241711) && !f_10306_241590_241711(f_10306_241633_241648(indexer), f_10306_241650_241670(namedAssignment), diagnostics, hasErrors, ref resultKind));
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 241738, 241768);

                            arguments = f_10306_241750_241767(indexer);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 241794, 241838);

                            argumentNamesOpt = f_10306_241813_241837(indexer);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 241864, 241906);

                            argsToParamsOpt = f_10306_241882_241905(indexer);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 241932, 241982);

                            argumentRefKindsOpt = f_10306_241954_241981(indexer);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 242008, 242052);

                            defaultArguments = f_10306_242027_242051(indexer);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 242078, 242106);

                            expanded = f_10306_242089_242105(indexer);
                            DynAbs.Tracing.TraceSender.TraceBreak(10306, 242134, 242140);

                            break;
                        }
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 239987, 242911);

                    case BoundKind.DynamicIndexerAccess:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 239987, 242911);
                        {
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 242268, 242321);

                            var
                            indexer = (BoundDynamicIndexerAccess)boundMember
                            ;
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 242347, 242377);

                            arguments = f_10306_242359_242376(indexer);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 242403, 242447);

                            argumentNamesOpt = f_10306_242422_242446(indexer);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 242473, 242523);

                            argumentRefKindsOpt = f_10306_242495_242522(indexer);
                        }
                        DynAbs.Tracing.TraceSender.TraceBreak(10306, 242570, 242576);

                        break;
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 239987, 242911);

                    case BoundKind.ArrayAccess:
                    case BoundKind.PointerElementAccess:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 239987, 242911);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 242699, 242718);

                        return boundMember;
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 239987, 242911);

                    default:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 239987, 242911);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 242768, 242896);

                        return f_10306_242775_242895(this, boundMember, implicitReceiver, f_10306_242839_242859(namedAssignment), diagnostics, valueKind, hasErrors);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 239987, 242911);
                }

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 242927, 243543) || true) && (!hasErrors)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 242927, 243543);

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 243217, 243528) || true) && (!f_10306_243222_243331(this, boundMember.Syntax, boundMember, valueKind, checkingReceiver: false, diagnostics: diagnostics))
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 243217, 243528);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 243373, 243390);

                        hasErrors = true;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 243412, 243509);

                        resultKind = (DynAbs.Tracing.TraceSender.Conditional_F1(10306, 243425, 243447) || ((isRhsNestedInitializer && DynAbs.Tracing.TraceSender.Conditional_F2(10306, 243450, 243476)) || DynAbs.Tracing.TraceSender.Conditional_F3(10306, 243479, 243508))) ? LookupResultKind.NotAValue : LookupResultKind.NotAVariable;
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 243217, 243528);
                    }
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 242927, 243543);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 243559, 244032);

                return f_10306_243566_244031(f_10306_243617_243637(namedAssignment), f_10306_243656_243684(boundMember), arguments, argumentNamesOpt, argumentRefKindsOpt, expanded, argsToParamsOpt, defaultArguments, resultKind, f_10306_243929_243950(implicitReceiver), type: f_10306_243975_243991(boundMember), hasErrors: hasErrors);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10306, 234862, 244043);

                Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                f_10306_235226_235246(Microsoft.CodeAnalysis.CSharp.Syntax.AssignmentExpressionSyntax
                this_param)
                {
                    var return_v = this_param.Left;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 235226, 235246);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.SyntaxKind
                f_10306_235226_235253(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                this_param)
                {
                    var return_v = this_param.Kind();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 235226, 235253);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                f_10306_235355_235375(Microsoft.CodeAnalysis.CSharp.Syntax.AssignmentExpressionSyntax
                this_param)
                {
                    var return_v = this_param.Left;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 235355, 235375);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_235999_236556(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.IdentifierNameSyntax
                node, Microsoft.CodeAnalysis.CSharp.Syntax.IdentifierNameSyntax
                right, Microsoft.CodeAnalysis.CSharp.BoundObjectOrCollectionValuePlaceholder
                boundLeft, string
                rightName, int
                rightArity, Microsoft.CodeAnalysis.SeparatedSyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax>
                typeArgumentsSyntax, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations>
                typeArgumentsWithAnnotations, bool
                invoked, bool
                indexed, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.BindInstanceMemberAccess(node: (Microsoft.CodeAnalysis.SyntaxNode)node, right: (Microsoft.CodeAnalysis.SyntaxNode)right, boundLeft: (Microsoft.CodeAnalysis.CSharp.BoundExpression)boundLeft, rightName: rightName, rightArity: rightArity, typeArgumentsSyntax: typeArgumentsSyntax, typeArgumentsWithAnnotations: typeArgumentsWithAnnotations, invoked: invoked, indexed: indexed, diagnostics: diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 235999, 236556);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.LookupResultKind
                f_10306_236590_236612(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.ResultKind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 236590, 236612);
                    return return_v;
                }


                bool
                f_10306_236643_236667(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.HasAnyErrors;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 236643, 236667);
                    return return_v;
                }


                bool
                f_10306_236671_236700(Microsoft.CodeAnalysis.CSharp.BoundObjectOrCollectionValuePlaceholder
                this_param)
                {
                    var return_v = this_param.HasAnyErrors;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 236671, 236700);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundKind
                f_10306_236725_236741(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.Kind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 236725, 236741);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_236824_236945(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                propertyGroup, bool
                mustHaveAllOptionalParameters, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.BindIndexedPropertyAccess((Microsoft.CodeAnalysis.CSharp.BoundPropertyGroup)propertyGroup, mustHaveAllOptionalParameters: mustHaveAllOptionalParameters, diagnostics: diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 236824, 236945);
                    return return_v;
                }


                bool
                f_10306_236972_236996(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.HasAnyErrors;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 236972, 236996);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                f_10306_237143_237163(Microsoft.CodeAnalysis.CSharp.Syntax.AssignmentExpressionSyntax
                this_param)
                {
                    var return_v = this_param.Left;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 237143, 237163);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.SyntaxKind
                f_10306_237143_237170(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                this_param)
                {
                    var return_v = this_param.Kind();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 237143, 237170);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                f_10306_237292_237312(Microsoft.CodeAnalysis.CSharp.Syntax.AssignmentExpressionSyntax
                this_param)
                {
                    var return_v = this_param.Left;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 237292, 237312);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Syntax.BracketedArgumentListSyntax
                f_10306_237399_237428(Microsoft.CodeAnalysis.CSharp.Syntax.ImplicitElementAccessSyntax
                this_param)
                {
                    var return_v = this_param.ArgumentList;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 237399, 237428);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_237345_237442(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.ImplicitElementAccessSyntax
                node, Microsoft.CodeAnalysis.CSharp.BoundObjectOrCollectionValuePlaceholder
                receiver, Microsoft.CodeAnalysis.CSharp.Syntax.BracketedArgumentListSyntax
                argumentList, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.BindElementAccess((Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)node, (Microsoft.CodeAnalysis.CSharp.BoundExpression)receiver, argumentList, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 237345, 237442);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.LookupResultKind
                f_10306_237476_237498(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.ResultKind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 237476, 237498);
                    return return_v;
                }


                bool
                f_10306_237529_237553(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.HasAnyErrors;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 237529, 237553);
                    return return_v;
                }


                bool
                f_10306_237557_237586(Microsoft.CodeAnalysis.CSharp.BoundObjectOrCollectionValuePlaceholder
                this_param)
                {
                    var return_v = this_param.HasAnyErrors;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 237557, 237586);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundKind
                f_10306_239168_239184(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.Kind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 239168, 239184);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                f_10306_239220_239241(Microsoft.CodeAnalysis.CSharp.Syntax.AssignmentExpressionSyntax
                this_param)
                {
                    var return_v = this_param.Right;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 239220, 239241);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.SyntaxKind
                f_10306_239220_239248(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                this_param)
                {
                    var return_v = this_param.Kind();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 239220, 239248);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol
                f_10306_240138_240181(Microsoft.CodeAnalysis.CSharp.BoundFieldAccess
                this_param)
                {
                    var return_v = this_param.FieldSymbol;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 240138, 240181);
                    return return_v;
                }


                bool
                f_10306_240238_240260(Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol
                this_param)
                {
                    var return_v = this_param.IsReadOnly;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 240238, 240260);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                f_10306_240264_240280(Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 240264, 240280);
                    return return_v;
                }


                bool
                f_10306_240264_240292(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                this_param)
                {
                    var return_v = this_param.IsValueType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 240264, 240292);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                f_10306_240619_240639(Microsoft.CodeAnalysis.CSharp.Syntax.AssignmentExpressionSyntax
                this_param)
                {
                    var return_v = this_param.Left;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 240619, 240639);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                f_10306_240654_240670(Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 240654, 240670);
                    return return_v;
                }


                int
                f_10306_240548_240671(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                syntax, params object[]
                args)
                {
                    Error(diagnostics, code, (Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode)syntax, args);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 240548, 240671);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol
                f_10306_241138_241187(Microsoft.CodeAnalysis.CSharp.BoundPropertyAccess
                this_param)
                {
                    var return_v = this_param.PropertySymbol;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 241138, 241187);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                f_10306_241189_241209(Microsoft.CodeAnalysis.CSharp.Syntax.AssignmentExpressionSyntax
                this_param)
                {
                    var return_v = this_param.Left;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 241189, 241209);
                    return return_v;
                }


                bool
                f_10306_241095_241250(Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol
                propertySymbol, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                memberNameSyntax, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, bool
                suppressErrors, ref Microsoft.CodeAnalysis.CSharp.LookupResultKind
                resultKind)
                {
                    var return_v = CheckNestedObjectInitializerPropertySymbol(propertySymbol, memberNameSyntax, diagnostics, suppressErrors, ref resultKind);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 241095, 241250);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundIndexerAccess
                f_10306_241391_241475(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                indexerAccess, Microsoft.CodeAnalysis.CSharp.Binder.BindValueKind
                valueKind, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.BindIndexerDefaultArguments((Microsoft.CodeAnalysis.CSharp.BoundIndexerAccess)indexerAccess, valueKind, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 241391, 241475);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol
                f_10306_241633_241648(Microsoft.CodeAnalysis.CSharp.BoundIndexerAccess
                this_param)
                {
                    var return_v = this_param.Indexer;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 241633, 241648);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                f_10306_241650_241670(Microsoft.CodeAnalysis.CSharp.Syntax.AssignmentExpressionSyntax
                this_param)
                {
                    var return_v = this_param.Left;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 241650, 241670);
                    return return_v;
                }


                bool
                f_10306_241590_241711(Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol
                propertySymbol, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                memberNameSyntax, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, bool
                suppressErrors, ref Microsoft.CodeAnalysis.CSharp.LookupResultKind
                resultKind)
                {
                    var return_v = CheckNestedObjectInitializerPropertySymbol(propertySymbol, memberNameSyntax, diagnostics, suppressErrors, ref resultKind);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 241590, 241711);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                f_10306_241750_241767(Microsoft.CodeAnalysis.CSharp.BoundIndexerAccess
                this_param)
                {
                    var return_v = this_param.Arguments;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 241750, 241767);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<string>
                f_10306_241813_241837(Microsoft.CodeAnalysis.CSharp.BoundIndexerAccess
                this_param)
                {
                    var return_v = this_param.ArgumentNamesOpt;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 241813, 241837);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<int>
                f_10306_241882_241905(Microsoft.CodeAnalysis.CSharp.BoundIndexerAccess
                this_param)
                {
                    var return_v = this_param.ArgsToParamsOpt;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 241882, 241905);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.RefKind>
                f_10306_241954_241981(Microsoft.CodeAnalysis.CSharp.BoundIndexerAccess
                this_param)
                {
                    var return_v = this_param.ArgumentRefKindsOpt;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 241954, 241981);
                    return return_v;
                }


                Microsoft.CodeAnalysis.BitVector
                f_10306_242027_242051(Microsoft.CodeAnalysis.CSharp.BoundIndexerAccess
                this_param)
                {
                    var return_v = this_param.DefaultArguments;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 242027, 242051);
                    return return_v;
                }


                bool
                f_10306_242089_242105(Microsoft.CodeAnalysis.CSharp.BoundIndexerAccess
                this_param)
                {
                    var return_v = this_param.Expanded;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 242089, 242105);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                f_10306_242359_242376(Microsoft.CodeAnalysis.CSharp.BoundDynamicIndexerAccess
                this_param)
                {
                    var return_v = this_param.Arguments;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 242359, 242376);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<string>
                f_10306_242422_242446(Microsoft.CodeAnalysis.CSharp.BoundDynamicIndexerAccess
                this_param)
                {
                    var return_v = this_param.ArgumentNamesOpt;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 242422, 242446);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.RefKind>
                f_10306_242495_242522(Microsoft.CodeAnalysis.CSharp.BoundDynamicIndexerAccess
                this_param)
                {
                    var return_v = this_param.ArgumentRefKindsOpt;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 242495, 242522);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                f_10306_242839_242859(Microsoft.CodeAnalysis.CSharp.Syntax.AssignmentExpressionSyntax
                this_param)
                {
                    var return_v = this_param.Left;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 242839, 242859);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_242775_242895(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                boundMember, Microsoft.CodeAnalysis.CSharp.BoundObjectOrCollectionValuePlaceholder
                implicitReceiver, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                memberNameSyntax, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.Binder.BindValueKind
                valueKind, bool
                suppressErrors)
                {
                    var return_v = this_param.BadObjectInitializerMemberAccess(boundMember, implicitReceiver, memberNameSyntax, diagnostics, valueKind, suppressErrors);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 242775, 242895);
                    return return_v;
                }


                bool
                f_10306_243222_243331(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.SyntaxNode
                node, Microsoft.CodeAnalysis.CSharp.BoundExpression
                expr, Microsoft.CodeAnalysis.CSharp.Binder.BindValueKind
                valueKind, bool
                checkingReceiver, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.CheckValueKind(node, expr, valueKind, checkingReceiver: checkingReceiver, diagnostics: diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 243222, 243331);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                f_10306_243617_243637(Microsoft.CodeAnalysis.CSharp.Syntax.AssignmentExpressionSyntax
                this_param)
                {
                    var return_v = this_param.Left;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 243617, 243637);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbol?
                f_10306_243656_243684(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.ExpressionSymbol;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 243656, 243684);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                f_10306_243929_243950(Microsoft.CodeAnalysis.CSharp.BoundObjectOrCollectionValuePlaceholder
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 243929, 243950);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?
                f_10306_243975_243991(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 243975, 243991);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundObjectInitializerMember
                f_10306_243566_244031(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                syntax, Microsoft.CodeAnalysis.CSharp.Symbol?
                memberSymbol, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                arguments, System.Collections.Immutable.ImmutableArray<string>
                argumentNamesOpt, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.RefKind>
                argumentRefKindsOpt, bool
                expanded, System.Collections.Immutable.ImmutableArray<int>
                argsToParamsOpt, Microsoft.CodeAnalysis.BitVector
                defaultArguments, Microsoft.CodeAnalysis.CSharp.LookupResultKind
                resultKind, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                receiverType, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?
                type, bool
                hasErrors)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.BoundObjectInitializerMember((Microsoft.CodeAnalysis.SyntaxNode)syntax, memberSymbol, arguments, argumentNamesOpt, argumentRefKindsOpt, expanded, argsToParamsOpt, defaultArguments, resultKind, receiverType, type: type, hasErrors: hasErrors);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 243566, 244031);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 234862, 244043);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 234862, 244043);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private static bool CheckNestedObjectInitializerPropertySymbol(
                    PropertySymbol propertySymbol,
                    ExpressionSyntax memberNameSyntax,
                    DiagnosticBag diagnostics,
                    bool suppressErrors,
                    ref LookupResultKind resultKind)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterStaticMethod(10306, 244055, 244932);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 244355, 244378);

                bool
                hasErrors = false
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 244392, 244887) || true) && (f_10306_244396_244427(f_10306_244396_244415(propertySymbol)))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 244392, 244887);

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 244461, 244812) || true) && (!suppressErrors)
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 244461, 244812);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 244628, 244754);

                        f_10306_244628_244753(diagnostics, ErrorCode.ERR_ValueTypePropertyInObjectInitializer, memberNameSyntax, propertySymbol, f_10306_244733_244752(propertySymbol));
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 244776, 244793);

                        hasErrors = true;
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 244461, 244812);
                    }
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 244832, 244872);

                    resultKind = LookupResultKind.NotAValue;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 244392, 244887);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 244903, 244921);

                return !hasErrors;
                DynAbs.Tracing.TraceSender.TraceExitStaticMethod(10306, 244055, 244932);

                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                f_10306_244396_244415(Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 244396, 244415);
                    return return_v;
                }


                bool
                f_10306_244396_244427(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                this_param)
                {
                    var return_v = this_param.IsValueType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 244396, 244427);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                f_10306_244733_244752(Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 244733, 244752);
                    return return_v;
                }


                int
                f_10306_244628_244753(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                syntax, params object[]
                args)
                {
                    Error(diagnostics, code, (Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode)syntax, args);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 244628, 244753);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 244055, 244932);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 244055, 244932);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private BoundExpression BadObjectInitializerMemberAccess(
                    BoundExpression boundMember,
                    BoundObjectOrCollectionValuePlaceholder implicitReceiver,
                    ExpressionSyntax memberNameSyntax,
                    DiagnosticBag diagnostics,
                    BindValueKind valueKind,
                    bool suppressErrors)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10306, 244944, 246589);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 245299, 246428) || true) && (!suppressErrors)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 245299, 246428);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 245352, 245366);

                    string
                    member
                    = default(string);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 245384, 245441);

                    var
                    identName = memberNameSyntax as IdentifierNameSyntax
                    ;

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 245459, 245700) || true) && (identName != null)
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 245459, 245700);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 245522, 245562);

                        member = identName.Identifier.ValueText;
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 245459, 245700);
                    }

                    else

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 245459, 245700);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 245644, 245681);

                        member = f_10306_245653_245680(memberNameSyntax);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 245459, 245700);
                    }
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 245720, 246413);

                    switch (f_10306_245728_245750(boundMember))
                    {

                        case LookupResultKind.Empty:
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 245720, 246413);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 245846, 245942);

                            f_10306_245846_245941(diagnostics, ErrorCode.ERR_NoSuchMember, memberNameSyntax, f_10306_245911_245932(implicitReceiver), member);
                            DynAbs.Tracing.TraceSender.TraceBreak(10306, 245968, 245974);

                            break;
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 245720, 246413);

                        case LookupResultKind.Inaccessible:
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 245720, 246413);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 246059, 246121);

                            boundMember = f_10306_246073_246120(this, boundMember, valueKind, diagnostics);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 246147, 246186);

                            f_10306_246147_246185(f_10306_246160_246184(boundMember));
                            DynAbs.Tracing.TraceSender.TraceBreak(10306, 246212, 246218);

                            break;
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 245720, 246413);

                        default:
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 245720, 246413);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 246276, 246362);

                            f_10306_246276_246361(diagnostics, ErrorCode.ERR_MemberCannotBeInitialized, memberNameSyntax, member);
                            DynAbs.Tracing.TraceSender.TraceBreak(10306, 246388, 246394);

                            break;
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 245720, 246413);
                    }
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 245299, 246428);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 246444, 246578);

                return f_10306_246451_246577(this, boundMember, (DynAbs.Tracing.TraceSender.Conditional_F1(10306, 246480, 246515) || (((valueKind == BindValueKind.RValue) && DynAbs.Tracing.TraceSender.Conditional_F2(10306, 246518, 246544)) || DynAbs.Tracing.TraceSender.Conditional_F3(10306, 246547, 246576))) ? LookupResultKind.NotAValue : LookupResultKind.NotAVariable);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10306, 244944, 246589);

                string
                f_10306_245653_245680(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                this_param)
                {
                    var return_v = this_param.ToString();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 245653, 245680);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.LookupResultKind
                f_10306_245728_245750(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.ResultKind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 245728, 245750);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                f_10306_245911_245932(Microsoft.CodeAnalysis.CSharp.BoundObjectOrCollectionValuePlaceholder
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 245911, 245932);
                    return return_v;
                }


                int
                f_10306_245846_245941(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                syntax, params object[]
                args)
                {
                    Error(diagnostics, code, (Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode)syntax, args);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 245846, 245941);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_246073_246120(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                expr, Microsoft.CodeAnalysis.CSharp.Binder.BindValueKind
                valueKind, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.CheckValue(expr, valueKind, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 246073, 246120);
                    return return_v;
                }


                bool
                f_10306_246160_246184(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.HasAnyErrors;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 246160, 246184);
                    return return_v;
                }


                int
                f_10306_246147_246185(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 246147, 246185);
                    return 0;
                }


                int
                f_10306_246276_246361(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                syntax, params object[]
                args)
                {
                    Error(diagnostics, code, (Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode)syntax, args);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 246276, 246361);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_246451_246577(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                expr, Microsoft.CodeAnalysis.CSharp.LookupResultKind
                resultKind)
                {
                    var return_v = this_param.ToBadExpression(expr, resultKind);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 246451, 246577);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 244944, 246589);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 244944, 246589);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private static void ReportDuplicateObjectMemberInitializers(BoundExpression boundMemberInitializer, HashSet<string> memberNameMap, DiagnosticBag diagnostics)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterStaticMethod(10306, 246601, 247991);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 246783, 246819);

                f_10306_246783_246818(memberNameMap != null);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 246979, 247980) || true) && (f_10306_246983_247019_M(!boundMemberInitializer.HasAnyErrors))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 246979, 247980);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 247237, 247297);

                    var
                    memberInitializerSyntax = boundMemberInitializer.Syntax
                    ;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 247317, 247403);

                    f_10306_247317_247402(f_10306_247330_247360(memberInitializerSyntax) == SyntaxKind.SimpleAssignmentExpression);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 247421, 247495);

                    var
                    namedAssignment = (AssignmentExpressionSyntax)memberInitializerSyntax
                    ;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 247515, 247583);

                    var
                    memberNameSyntax = f_10306_247538_247558(namedAssignment) as IdentifierNameSyntax
                    ;

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 247601, 247965) || true) && (memberNameSyntax != null)
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 247601, 247965);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 247671, 247726);

                        var
                        memberName = memberNameSyntax.Identifier.ValueText
                        ;

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 247750, 247946) || true) && (!f_10306_247755_247784(memberNameMap, memberName))
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 247750, 247946);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 247834, 247923);

                            f_10306_247834_247922(diagnostics, ErrorCode.ERR_MemberAlreadyInitialized, memberNameSyntax, memberName);
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 247750, 247946);
                        }
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 247601, 247965);
                    }
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 246979, 247980);
                }
                DynAbs.Tracing.TraceSender.TraceExitStaticMethod(10306, 246601, 247991);

                int
                f_10306_246783_246818(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 246783, 246818);
                    return 0;
                }


                bool
                f_10306_246983_247019_M(bool
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 246983, 247019);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.SyntaxKind
                f_10306_247330_247360(Microsoft.CodeAnalysis.SyntaxNode
                node)
                {
                    var return_v = node.Kind();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 247330, 247360);
                    return return_v;
                }


                int
                f_10306_247317_247402(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 247317, 247402);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                f_10306_247538_247558(Microsoft.CodeAnalysis.CSharp.Syntax.AssignmentExpressionSyntax
                this_param)
                {
                    var return_v = this_param.Left;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 247538, 247558);
                    return return_v;
                }


                bool
                f_10306_247755_247784(System.Collections.Generic.HashSet<string>
                this_param, string
                item)
                {
                    var return_v = this_param.Add(item);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 247755, 247784);
                    return return_v;
                }


                int
                f_10306_247834_247922(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, Microsoft.CodeAnalysis.CSharp.Syntax.IdentifierNameSyntax
                syntax, params object[]
                args)
                {
                    Error(diagnostics, code, (Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode)syntax, args);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 247834, 247922);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 246601, 247991);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 246601, 247991);
            }
        }

        private BoundCollectionInitializerExpression BindCollectionInitializerExpression(
                    InitializerExpressionSyntax initializerSyntax,
                    TypeSymbol initializerType,
                    DiagnosticBag diagnostics,
                    BoundObjectOrCollectionValuePlaceholder implicitReceiver)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10306, 248003, 252087);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 249363, 249448);

                f_10306_249363_249447(f_10306_249376_249400(initializerSyntax) == SyntaxKind.CollectionInitializerExpression);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 249462, 249512);

                f_10306_249462_249511(initializerSyntax.Expressions.Any());
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 249526, 249572);

                f_10306_249526_249571((object)initializerType != null);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 249588, 249657);

                var
                initializerBuilder = f_10306_249613_249656()
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 249889, 250021);

                bool
                hasEnumerableInitializerType = f_10306_249925_250020(this, initializerType, initializerSyntax, diagnostics)
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 250035, 250287) || true) && (!hasEnumerableInitializerType && (DynAbs.Tracing.TraceSender.Expression_True(10306, 250039, 250100) && f_10306_250072_250100_M(!initializerSyntax.HasErrors)) && (DynAbs.Tracing.TraceSender.Expression_True(10306, 250039, 250134) && !f_10306_250105_250134(initializerType)))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 250035, 250287);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 250168, 250272);

                    f_10306_250168_250271(diagnostics, ErrorCode.ERR_CollectionInitRequiresIEnumerable, initializerSyntax, initializerType);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 250035, 250287);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 250644, 250756);

                var
                collectionInitializerAddMethodBinder = f_10306_250687_250755(this, BinderFlags.CollectionInitializerAddMethod)
                ;
                try
                {
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 250772, 251917);
                    foreach (var elementInitializer in f_10306_250807_250836_I(f_10306_250807_250836(initializerSyntax)))
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 250772, 251917);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 251602, 251834);

                        BoundExpression
                        boundElementInitializer = f_10306_251644_251833(this, elementInitializer, initializerType, hasEnumerableInitializerType, collectionInitializerAddMethodBinder, diagnostics, implicitReceiver)
                        ;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 251854, 251902);

                        f_10306_251854_251901(
                                        initializerBuilder, boundElementInitializer);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 250772, 251917);
                    }
                }
                catch (System.Exception)
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoopByException(10306, 1, 1146);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoop(10306, 1, 1146);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 251933, 252076);

                return f_10306_251940_252075(initializerSyntax, implicitReceiver, f_10306_252018_252057(initializerBuilder), initializerType);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10306, 248003, 252087);

                Microsoft.CodeAnalysis.CSharp.SyntaxKind
                f_10306_249376_249400(Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax
                this_param)
                {
                    var return_v = this_param.Kind();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 249376, 249400);
                    return return_v;
                }


                int
                f_10306_249363_249447(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 249363, 249447);
                    return 0;
                }


                int
                f_10306_249462_249511(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 249462, 249511);
                    return 0;
                }


                int
                f_10306_249526_249571(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 249526, 249571);
                    return 0;
                }


                Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                f_10306_249613_249656()
                {
                    var return_v = ArrayBuilder<BoundExpression>.GetInstance();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 249613, 249656);
                    return return_v;
                }


                bool
                f_10306_249925_250020(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                initializerType, Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax
                node, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.CollectionInitializerTypeImplementsIEnumerable(initializerType, (Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode)node, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 249925, 250020);
                    return return_v;
                }


                bool
                f_10306_250072_250100_M(bool
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 250072, 250100);
                    return return_v;
                }


                bool
                f_10306_250105_250134(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                type)
                {
                    var return_v = type.IsErrorType();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 250105, 250134);
                    return return_v;
                }


                int
                f_10306_250168_250271(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax
                syntax, params object[]
                args)
                {
                    Error(diagnostics, code, (Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode)syntax, args);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 250168, 250271);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.Binder
                f_10306_250687_250755(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.BinderFlags
                flags)
                {
                    var return_v = this_param.WithAdditionalFlags(flags);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 250687, 250755);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SeparatedSyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax>
                f_10306_250807_250836(Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax
                this_param)
                {
                    var return_v = this_param.Expressions;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 250807, 250836);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_251644_251833(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                elementInitializer, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                initializerType, bool
                hasEnumerableInitializerType, Microsoft.CodeAnalysis.CSharp.Binder
                collectionInitializerAddMethodBinder, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.BoundObjectOrCollectionValuePlaceholder
                implicitReceiver)
                {
                    var return_v = this_param.BindCollectionInitializerElement(elementInitializer, initializerType, hasEnumerableInitializerType, collectionInitializerAddMethodBinder, diagnostics, implicitReceiver);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 251644, 251833);
                    return return_v;
                }


                int
                f_10306_251854_251901(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                item)
                {
                    this_param.Add(item);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 251854, 251901);
                    return 0;
                }


                Microsoft.CodeAnalysis.SeparatedSyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax>
                f_10306_250807_250836_I(Microsoft.CodeAnalysis.SeparatedSyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax>
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 250807, 250836);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                f_10306_252018_252057(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                this_param)
                {
                    var return_v = this_param.ToImmutableAndFree();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 252018, 252057);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundCollectionInitializerExpression
                f_10306_251940_252075(Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax
                syntax, Microsoft.CodeAnalysis.CSharp.BoundObjectOrCollectionValuePlaceholder
                placeholder, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                initializers, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                type)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.BoundCollectionInitializerExpression((Microsoft.CodeAnalysis.SyntaxNode)syntax, placeholder, initializers, type);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 251940, 252075);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 248003, 252087);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 248003, 252087);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private bool CollectionInitializerTypeImplementsIEnumerable(TypeSymbol initializerType, CSharpSyntaxNode node, DiagnosticBag diagnostics)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10306, 252099, 253730);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 252477, 253719) || true) && (f_10306_252481_252508(initializerType))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 252477, 253719);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 252689, 252701);

                    return true;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 252477, 253719);
                }

                else
                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 252477, 253719);

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 252735, 253719) || true) && (!f_10306_252740_252769(initializerType))
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 252735, 253719);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 252803, 252926);

                        TypeSymbol
                        collectionsIEnumerableType = f_10306_252843_252925(this, SpecialType.System_Collections_IEnumerable, diagnostics, node)
                        ;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 253328, 253378);

                        HashSet<DiagnosticInfo>
                        useSiteDiagnostics = null
                        ;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 253396, 253533);

                        var
                        result = f_10306_253409_253524(f_10306_253409_253420(), initializerType, collectionsIEnumerableType, ref useSiteDiagnostics).IsValid
                        ;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 253551, 253593);

                        f_10306_253551_253592(diagnostics, node, useSiteDiagnostics);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 253611, 253625);

                        return result;
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 252735, 253719);
                    }

                    else

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 252735, 253719);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 253691, 253704);

                        return false;
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 252735, 253719);
                    }
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 252477, 253719);
                }
                DynAbs.Tracing.TraceSender.TraceExitMethod(10306, 252099, 253730);

                bool
                f_10306_252481_252508(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                type)
                {
                    var return_v = type.IsDynamic();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 252481, 252508);
                    return return_v;
                }


                bool
                f_10306_252740_252769(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                type)
                {
                    var return_v = type.IsErrorType();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 252740, 252769);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                f_10306_252843_252925(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.SpecialType
                typeId, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode
                node)
                {
                    var return_v = this_param.GetSpecialType(typeId, diagnostics, (Microsoft.CodeAnalysis.SyntaxNode)node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 252843, 252925);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Conversions
                f_10306_253409_253420()
                {
                    var return_v = Conversions;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 253409, 253420);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Conversion
                f_10306_253409_253524(Microsoft.CodeAnalysis.CSharp.Conversions
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                source, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                destination, ref System.Collections.Generic.HashSet<Microsoft.CodeAnalysis.DiagnosticInfo>?
                useSiteDiagnostics)
                {
                    var return_v = this_param.ClassifyImplicitConversionFromType(source, destination, ref useSiteDiagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 253409, 253524);
                    return return_v;
                }


                bool
                f_10306_253551_253592(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode
                node, System.Collections.Generic.HashSet<Microsoft.CodeAnalysis.DiagnosticInfo>
                useSiteDiagnostics)
                {
                    var return_v = diagnostics.Add((Microsoft.CodeAnalysis.SyntaxNode)node, useSiteDiagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 253551, 253592);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 252099, 253730);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 252099, 253730);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private BoundExpression BindCollectionInitializerElement(
                    ExpressionSyntax elementInitializer,
                    TypeSymbol initializerType,
                    bool hasEnumerableInitializerType,
                    Binder collectionInitializerAddMethodBinder,
                    DiagnosticBag diagnostics,
                    BoundObjectOrCollectionValuePlaceholder implicitReceiver)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10306, 253742, 256054);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 254648, 256043) || true) && (f_10306_254652_254677(elementInitializer) == SyntaxKind.ComplexElementInitializerExpression)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 254648, 256043);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 254761, 255062);

                    return f_10306_254768_255061(this, elementInitializer, diagnostics, hasEnumerableInitializerType, collectionInitializerAddMethodBinder, implicitReceiver);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 254648, 256043);
                }

                else

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 254648, 256043);

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 255185, 255402) || true) && (f_10306_255189_255250(f_10306_255224_255249(elementInitializer)))
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 255185, 255402);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 255292, 255383);

                        f_10306_255292_255382(diagnostics, ErrorCode.ERR_InvalidInitializerElementInitializer, elementInitializer);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 255185, 255402);
                    }
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 255422, 255560);

                    var
                    boundElementInitializer = f_10306_255452_255559(this, elementInitializer, initializerType, implicitReceiver.Syntax, diagnostics)
                    ;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 255580, 255941);

                    BoundExpression
                    result = f_10306_255605_255940(this, elementInitializer, f_10306_255710_255756(boundElementInitializer), hasEnumerableInitializerType, collectionInitializerAddMethodBinder, diagnostics, implicitReceiver)
                    ;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 255961, 255996);

                    result.WasCompilerGenerated = true;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 256014, 256028);

                    return result;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 254648, 256043);
                }
                DynAbs.Tracing.TraceSender.TraceExitMethod(10306, 253742, 256054);

                Microsoft.CodeAnalysis.CSharp.SyntaxKind
                f_10306_254652_254677(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                this_param)
                {
                    var return_v = this_param.Kind();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 254652, 254677);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_254768_255061(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                elementInitializer, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, bool
                hasEnumerableInitializerType, Microsoft.CodeAnalysis.CSharp.Binder
                collectionInitializerAddMethodBinder, Microsoft.CodeAnalysis.CSharp.BoundObjectOrCollectionValuePlaceholder
                implicitReceiver)
                {
                    var return_v = this_param.BindComplexElementInitializerExpression((Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax)elementInitializer, diagnostics, hasEnumerableInitializerType, collectionInitializerAddMethodBinder, implicitReceiver);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 254768, 255061);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.SyntaxKind
                f_10306_255224_255249(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                this_param)
                {
                    var return_v = this_param.Kind();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 255224, 255249);
                    return return_v;
                }


                bool
                f_10306_255189_255250(Microsoft.CodeAnalysis.CSharp.SyntaxKind
                kind)
                {
                    var return_v = SyntaxFacts.IsAssignmentExpression(kind);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 255189, 255250);
                    return return_v;
                }


                int
                f_10306_255292_255382(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                syntax)
                {
                    Error(diagnostics, code, (Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode)syntax);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 255292, 255382);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_255452_255559(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                syntax, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                type, Microsoft.CodeAnalysis.SyntaxNode
                typeSyntax, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.BindInitializerExpressionOrValue(syntax, type, typeSyntax, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 255452, 255559);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                f_10306_255710_255756(Microsoft.CodeAnalysis.CSharp.BoundExpression
                item)
                {
                    var return_v = ImmutableArray.Create(item);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 255710, 255756);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_255605_255940(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                elementInitializer, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                boundElementInitializerExpressions, bool
                hasEnumerableInitializerType, Microsoft.CodeAnalysis.CSharp.Binder
                collectionInitializerAddMethodBinder, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.BoundObjectOrCollectionValuePlaceholder
                implicitReceiver)
                {
                    var return_v = this_param.BindCollectionInitializerElementAddMethod(elementInitializer, boundElementInitializerExpressions, hasEnumerableInitializerType, collectionInitializerAddMethodBinder, diagnostics, implicitReceiver);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 255605, 255940);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 253742, 256054);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 253742, 256054);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private BoundExpression BindComplexElementInitializerExpression(
                    InitializerExpressionSyntax elementInitializer,
                    DiagnosticBag diagnostics,
                    bool hasEnumerableInitializerType,
                    Binder collectionInitializerAddMethodBinder = null,
                    BoundObjectOrCollectionValuePlaceholder implicitReceiver = null)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10306, 256066, 257509);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 256447, 256514);

                var
                elementInitializerExpressions = f_10306_256483_256513(elementInitializer)
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 256530, 257498) || true) && (elementInitializerExpressions.Any())
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 256530, 257498);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 256603, 256665);

                    var
                    exprBuilder = f_10306_256621_256664()
                    ;
                    try
                    {
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 256683, 256900);
                        foreach (var childElementInitializer in f_10306_256723_256752_I(elementInitializerExpressions))
                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 256683, 256900);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 256794, 256881);

                            f_10306_256794_256880(exprBuilder, f_10306_256810_256879(this, childElementInitializer, diagnostics, BindValueKind.RValue));
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 256683, 256900);
                        }
                    }
                    catch (System.Exception)
                    {
                        DynAbs.Tracing.TraceSender.TraceExitLoopByException(10306, 1, 218);
                        throw;
                    }
                    finally
                    {
                        DynAbs.Tracing.TraceSender.TraceExitLoop(10306, 1, 218);
                    }
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 256920, 257249);

                    return f_10306_256927_257248(this, elementInitializer, f_10306_257032_257064(exprBuilder), hasEnumerableInitializerType, collectionInitializerAddMethodBinder, diagnostics, implicitReceiver);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 256530, 257498);
                }

                else

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 256530, 257498);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 257315, 257393);

                    f_10306_257315_257392(diagnostics, ErrorCode.ERR_EmptyElementInitializer, elementInitializer);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 257411, 257483);

                    return f_10306_257418_257482(this, elementInitializer, LookupResultKind.NotInvocable);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 256530, 257498);
                }
                DynAbs.Tracing.TraceSender.TraceExitMethod(10306, 256066, 257509);

                Microsoft.CodeAnalysis.SeparatedSyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax>
                f_10306_256483_256513(Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax
                this_param)
                {
                    var return_v = this_param.Expressions;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 256483, 256513);
                    return return_v;
                }


                Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                f_10306_256621_256664()
                {
                    var return_v = ArrayBuilder<BoundExpression>.GetInstance();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 256621, 256664);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_256810_256879(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                node, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.Binder.BindValueKind
                valueKind)
                {
                    var return_v = this_param.BindValue(node, diagnostics, valueKind);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 256810, 256879);
                    return return_v;
                }


                int
                f_10306_256794_256880(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                item)
                {
                    this_param.Add(item);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 256794, 256880);
                    return 0;
                }


                Microsoft.CodeAnalysis.SeparatedSyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax>
                f_10306_256723_256752_I(Microsoft.CodeAnalysis.SeparatedSyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax>
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 256723, 256752);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                f_10306_257032_257064(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                this_param)
                {
                    var return_v = this_param.ToImmutableAndFree();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 257032, 257064);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_256927_257248(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax
                elementInitializer, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                boundElementInitializerExpressions, bool
                hasEnumerableInitializerType, Microsoft.CodeAnalysis.CSharp.Binder?
                collectionInitializerAddMethodBinder, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.BoundObjectOrCollectionValuePlaceholder?
                implicitReceiver)
                {
                    var return_v = this_param.BindCollectionInitializerElementAddMethod((Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)elementInitializer, boundElementInitializerExpressions, hasEnumerableInitializerType, collectionInitializerAddMethodBinder, diagnostics, implicitReceiver);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 256927, 257248);
                    return return_v;
                }


                int
                f_10306_257315_257392(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax
                syntax)
                {
                    Error(diagnostics, code, (Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode)syntax);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 257315, 257392);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.BoundBadExpression
                f_10306_257418_257482(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax
                syntax, Microsoft.CodeAnalysis.CSharp.LookupResultKind
                lookupResultKind)
                {
                    var return_v = this_param.BadExpression((Microsoft.CodeAnalysis.SyntaxNode)syntax, lookupResultKind);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 257418, 257482);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 256066, 257509);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 256066, 257509);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private BoundExpression BindUnexpectedComplexElementInitializer(InitializerExpressionSyntax node, DiagnosticBag diagnostics)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10306, 257521, 257876);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 257670, 257746);

                f_10306_257670_257745(f_10306_257683_257694(node) == SyntaxKind.ComplexElementInitializerExpression);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 257762, 257865);

                return f_10306_257769_257864(this, node, diagnostics, hasEnumerableInitializerType: false);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10306, 257521, 257876);

                Microsoft.CodeAnalysis.CSharp.SyntaxKind
                f_10306_257683_257694(Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax
                this_param)
                {
                    var return_v = this_param.Kind();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 257683, 257694);
                    return return_v;
                }


                int
                f_10306_257670_257745(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 257670, 257745);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_257769_257864(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax
                elementInitializer, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, bool
                hasEnumerableInitializerType)
                {
                    var return_v = this_param.BindComplexElementInitializerExpression(elementInitializer, diagnostics, hasEnumerableInitializerType: hasEnumerableInitializerType);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 257769, 257864);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 257521, 257876);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 257521, 257876);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private BoundExpression BindCollectionInitializerElementAddMethod(
                    ExpressionSyntax elementInitializer,
                    ImmutableArray<BoundExpression> boundElementInitializerExpressions,
                    bool hasEnumerableInitializerType,
                    Binder collectionInitializerAddMethodBinder,
                    DiagnosticBag diagnostics,
                    BoundObjectOrCollectionValuePlaceholder implicitReceiver)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10306, 257888, 263024);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 259163, 259221);

                f_10306_259163_259220(f_10306_259176_259219_M(!boundElementInitializerExpressions.IsEmpty));

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 259237, 259457) || true) && (!hasEnumerableInitializerType)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 259237, 259457);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 259304, 259442);

                    return f_10306_259311_259441(this, elementInitializer, LookupResultKind.NotInvocable, ImmutableArray<Symbol>.Empty, boundElementInitializerExpressions);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 259237, 259457);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 259473, 259532);

                f_10306_259473_259531(collectionInitializerAddMethodBinder != null);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 259546, 259656);

                f_10306_259546_259655(f_10306_259559_259654(collectionInitializerAddMethodBinder.Flags, BinderFlags.CollectionInitializerAddMethod));
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 259670, 259709);

                f_10306_259670_259708(implicitReceiver != null);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 259723, 259775);

                f_10306_259723_259774((object)f_10306_259744_259765(implicitReceiver) != null);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 259791, 260521) || true) && (f_10306_259795_259828(f_10306_259795_259816(implicitReceiver)))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 259791, 260521);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 259862, 260011);

                    var
                    hasErrors = f_10306_259878_260010(elementInitializer, boundElementInitializerExpressions, refKinds: default, diagnostics, queryClause: null)
                    ;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 260031, 260506);

                    return f_10306_260038_260505(elementInitializer, applicableMethods: ImmutableArray<MethodSymbol>.Empty, implicitReceiver, arguments: boundElementInitializerExpressions.SelectAsArray(e => BindToNaturalType(e, diagnostics)), type: f_10306_260389_260461(this, SpecialType.System_Void, diagnostics, elementInitializer), hasErrors: hasErrors);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 259791, 260521);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 260647, 260996);

                var
                addMethodInvocation = f_10306_260673_260995(collectionInitializerAddMethodBinder, elementInitializer, implicitReceiver, methodName: WellKnownMemberNames.CollectionInitializerAddMethodName, args: boundElementInitializerExpressions, diagnostics: diagnostics)
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 261012, 263013) || true) && (f_10306_261016_261040(addMethodInvocation) == BoundKind.DynamicInvocation)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 261012, 263013);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 261105, 261173);

                    var
                    dynamicInvocation = (BoundDynamicInvocation)addMethodInvocation
                    ;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 261191, 261541);

                    return f_10306_261198_261540(elementInitializer, f_10306_261306_261341(dynamicInvocation), implicitReceiver, f_10306_261403_261430(dynamicInvocation), f_10306_261453_261475(dynamicInvocation), hasErrors: f_10306_261509_261539(dynamicInvocation));
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 261012, 263013);
                }

                else
                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 261012, 263013);

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 261575, 263013) || true) && (f_10306_261579_261603(addMethodInvocation) == BoundKind.Call)
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 261575, 263013);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 261655, 261702);

                        var
                        boundCall = (BoundCall)addMethodInvocation
                        ;

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 262076, 262220) || true) && (f_10306_262080_262099(boundCall) && (DynAbs.Tracing.TraceSender.Expression_True(10306, 262080, 262142) && f_10306_262103_262142_M(!boundCall.OriginalMethodsOpt.IsDefault)))
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 262076, 262220);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 262184, 262201);

                            return boundCall;
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 262076, 262220);
                        }
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 262240, 262821);

                        return new BoundCollectionElementInitializer(
                                            elementInitializer,
                        f_10306_262348_262364(boundCall),
                        f_10306_262387_262406(boundCall),
                        f_10306_262429_262450(boundCall),
                        f_10306_262473_262491(boundCall),
                        f_10306_262514_262539(boundCall),
                        f_10306_262562_262588(boundCall),
                        f_10306_262611_262645(boundCall),
                        f_10306_262668_262688(boundCall),
                        f_10306_262711_262725(boundCall),
                        f_10306_262748_262770(boundCall))
                        { WasCompilerGenerated = DynAbs.Tracing.TraceSender.TraceInitializationWrapper(() => true, 10306, 262247, 262820) };
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 261575, 263013);
                    }

                    else

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 261575, 263013);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 262887, 262953);

                        f_10306_262887_262952(f_10306_262900_262924(addMethodInvocation) == BoundKind.BadExpression);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 262971, 262998);

                        return addMethodInvocation;
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 261575, 263013);
                    }
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 261012, 263013);
                }
                DynAbs.Tracing.TraceSender.TraceExitMethod(10306, 257888, 263024);

                bool
                f_10306_259176_259219_M(bool
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 259176, 259219);
                    return return_v;
                }


                int
                f_10306_259163_259220(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 259163, 259220);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.BoundBadExpression
                f_10306_259311_259441(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                syntax, Microsoft.CodeAnalysis.CSharp.LookupResultKind
                resultKind, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>
                symbols, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                childNodes)
                {
                    var return_v = this_param.BadExpression((Microsoft.CodeAnalysis.SyntaxNode)syntax, resultKind, symbols, childNodes);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 259311, 259441);
                    return return_v;
                }


                int
                f_10306_259473_259531(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 259473, 259531);
                    return 0;
                }


                bool
                f_10306_259559_259654(Microsoft.CodeAnalysis.CSharp.BinderFlags
                self, Microsoft.CodeAnalysis.CSharp.BinderFlags
                other)
                {
                    var return_v = self.Includes(other);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 259559, 259654);
                    return return_v;
                }


                int
                f_10306_259546_259655(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 259546, 259655);
                    return 0;
                }


                int
                f_10306_259670_259708(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 259670, 259708);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                f_10306_259744_259765(Microsoft.CodeAnalysis.CSharp.BoundObjectOrCollectionValuePlaceholder
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 259744, 259765);
                    return return_v;
                }


                int
                f_10306_259723_259774(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 259723, 259774);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                f_10306_259795_259816(Microsoft.CodeAnalysis.CSharp.BoundObjectOrCollectionValuePlaceholder
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 259795, 259816);
                    return return_v;
                }


                bool
                f_10306_259795_259828(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                type)
                {
                    var return_v = type.IsDynamic();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 259795, 259828);
                    return return_v;
                }


                bool
                f_10306_259878_260010(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                node, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                arguments, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.RefKind>
                refKinds, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode
                queryClause)
                {
                    var return_v = ReportBadDynamicArguments((Microsoft.CodeAnalysis.SyntaxNode)node, arguments, refKinds: refKinds, diagnostics, queryClause: queryClause);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 259878, 260010);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                f_10306_260389_260461(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.SpecialType
                typeId, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                node)
                {
                    var return_v = this_param.GetSpecialType(typeId, diagnostics, (Microsoft.CodeAnalysis.SyntaxNode)node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 260389, 260461);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundDynamicCollectionElementInitializer
                f_10306_260038_260505(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                syntax, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol>
                applicableMethods, Microsoft.CodeAnalysis.CSharp.BoundObjectOrCollectionValuePlaceholder
                expression, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                arguments, Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                type, bool
                hasErrors)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.BoundDynamicCollectionElementInitializer((Microsoft.CodeAnalysis.SyntaxNode)syntax, applicableMethods: applicableMethods, (Microsoft.CodeAnalysis.CSharp.BoundExpression)expression, arguments: arguments, type: (Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol)type, hasErrors: hasErrors);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 260038, 260505);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_260673_260995(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                node, Microsoft.CodeAnalysis.CSharp.BoundObjectOrCollectionValuePlaceholder
                receiver, string
                methodName, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                args, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.MakeInvocationExpression((Microsoft.CodeAnalysis.SyntaxNode)node, (Microsoft.CodeAnalysis.CSharp.BoundExpression)receiver, methodName: methodName, args: args, diagnostics: diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 260673, 260995);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundKind
                f_10306_261016_261040(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.Kind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 261016, 261040);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol>
                f_10306_261306_261341(Microsoft.CodeAnalysis.CSharp.BoundDynamicInvocation
                this_param)
                {
                    var return_v = this_param.ApplicableMethods;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 261306, 261341);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                f_10306_261403_261430(Microsoft.CodeAnalysis.CSharp.BoundDynamicInvocation
                this_param)
                {
                    var return_v = this_param.Arguments;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 261403, 261430);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                f_10306_261453_261475(Microsoft.CodeAnalysis.CSharp.BoundDynamicInvocation
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 261453, 261475);
                    return return_v;
                }


                bool
                f_10306_261509_261539(Microsoft.CodeAnalysis.CSharp.BoundDynamicInvocation
                this_param)
                {
                    var return_v = this_param.HasAnyErrors;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 261509, 261539);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundDynamicCollectionElementInitializer
                f_10306_261198_261540(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                syntax, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol>
                applicableMethods, Microsoft.CodeAnalysis.CSharp.BoundObjectOrCollectionValuePlaceholder
                expression, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                arguments, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                type, bool
                hasErrors)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.BoundDynamicCollectionElementInitializer((Microsoft.CodeAnalysis.SyntaxNode)syntax, applicableMethods, (Microsoft.CodeAnalysis.CSharp.BoundExpression)expression, arguments, type, hasErrors: hasErrors);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 261198, 261540);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundKind
                f_10306_261579_261603(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.Kind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 261579, 261603);
                    return return_v;
                }


                bool
                f_10306_262080_262099(Microsoft.CodeAnalysis.CSharp.BoundCall
                this_param)
                {
                    var return_v = this_param.HasErrors;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 262080, 262099);
                    return return_v;
                }


                bool
                f_10306_262103_262142_M(bool
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 262103, 262142);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                f_10306_262348_262364(Microsoft.CodeAnalysis.CSharp.BoundCall
                this_param)
                {
                    var return_v = this_param.Method;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 262348, 262364);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                f_10306_262387_262406(Microsoft.CodeAnalysis.CSharp.BoundCall
                this_param)
                {
                    var return_v = this_param.Arguments;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 262387, 262406);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression?
                f_10306_262429_262450(Microsoft.CodeAnalysis.CSharp.BoundCall
                this_param)
                {
                    var return_v = this_param.ReceiverOpt;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 262429, 262450);
                    return return_v;
                }


                bool
                f_10306_262473_262491(Microsoft.CodeAnalysis.CSharp.BoundCall
                this_param)
                {
                    var return_v = this_param.Expanded;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 262473, 262491);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<int>
                f_10306_262514_262539(Microsoft.CodeAnalysis.CSharp.BoundCall
                this_param)
                {
                    var return_v = this_param.ArgsToParamsOpt;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 262514, 262539);
                    return return_v;
                }


                Microsoft.CodeAnalysis.BitVector
                f_10306_262562_262588(Microsoft.CodeAnalysis.CSharp.BoundCall
                this_param)
                {
                    var return_v = this_param.DefaultArguments;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 262562, 262588);
                    return return_v;
                }


                bool
                f_10306_262611_262645(Microsoft.CodeAnalysis.CSharp.BoundCall
                this_param)
                {
                    var return_v = this_param.InvokedAsExtensionMethod;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 262611, 262645);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.LookupResultKind
                f_10306_262668_262688(Microsoft.CodeAnalysis.CSharp.BoundCall
                this_param)
                {
                    var return_v = this_param.ResultKind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 262668, 262688);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                f_10306_262711_262725(Microsoft.CodeAnalysis.CSharp.BoundCall
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 262711, 262725);
                    return return_v;
                }


                bool
                f_10306_262748_262770(Microsoft.CodeAnalysis.CSharp.BoundCall
                this_param)
                {
                    var return_v = this_param.HasAnyErrors;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 262748, 262770);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundKind
                f_10306_262900_262924(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.Kind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 262900, 262924);
                    return return_v;
                }


                int
                f_10306_262887_262952(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 262887, 262952);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 257888, 263024);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 257888, 263024);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        internal ImmutableArray<MethodSymbol> FilterInaccessibleConstructors(ImmutableArray<MethodSymbol> constructors, bool allowProtectedConstructorsOfBaseType, ref HashSet<DiagnosticInfo> useSiteDiagnostics)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10306, 263036, 264048);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 263263, 263305);

                ArrayBuilder<MethodSymbol>
                builder = null
                ;
                try
                {
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 263330, 263335);

                    for (int
        i = 0
        ; (DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 263321, 263952) || true) && (i < constructors.Length)
        ; DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 263362, 263365)
        , i++, DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 263321, 263952))

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 263321, 263952);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 263399, 263442);

                        MethodSymbol
                        constructor = constructors[i]
                        ;

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 263462, 263937) || true) && (!f_10306_263467_263565(this, constructor, ref useSiteDiagnostics, allowProtectedConstructorsOfBaseType))
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 263462, 263937);

                            if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 263607, 263810) || true) && (builder == null)
                            )

                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 263607, 263810);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 263676, 263727);

                                builder = f_10306_263686_263726();
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 263753, 263787);

                                f_10306_263753_263786(builder, constructors, i);
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 263607, 263810);
                            }
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 263462, 263937);
                        }

                        else

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 263462, 263937);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 263892, 263918);

                            DynAbs.Tracing.TraceSender.TraceInvocationWrapper(() => DynAbs.Tracing.TraceSender.TraceConditionalAccessExpression(builder, 10306, 263892, 263917)?.Add(constructor), 10306, 263900, 263917);
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 263462, 263937);
                        }
                    }
                }
                catch (System.Exception)
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoopByException(10306, 1, 632);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoop(10306, 1, 632);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 263968, 264037);

                return (DynAbs.Tracing.TraceSender.Conditional_F1(10306, 263975, 263990) || ((builder == null && DynAbs.Tracing.TraceSender.Conditional_F2(10306, 263993, 264005)) || DynAbs.Tracing.TraceSender.Conditional_F3(10306, 264008, 264036))) ? constructors : f_10306_264008_264036(builder);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10306, 263036, 264048);

                bool
                f_10306_263467_263565(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                constructor, ref System.Collections.Generic.HashSet<Microsoft.CodeAnalysis.DiagnosticInfo>
                useSiteDiagnostics, bool
                allowProtectedConstructorsOfBaseType)
                {
                    var return_v = this_param.IsConstructorAccessible(constructor, ref useSiteDiagnostics, allowProtectedConstructorsOfBaseType);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 263467, 263565);
                    return return_v;
                }


                Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol>
                f_10306_263686_263726()
                {
                    var return_v = ArrayBuilder<MethodSymbol>.GetInstance();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 263686, 263726);
                    return return_v;
                }


                int
                f_10306_263753_263786(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol>
                this_param, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol>
                items, int
                length)
                {
                    this_param.AddRange(items, length);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 263753, 263786);
                    return 0;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol>
                f_10306_264008_264036(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol>
                this_param)
                {
                    var return_v = this_param.ToImmutableAndFree();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 264008, 264036);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 263036, 264048);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 263036, 264048);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private bool IsConstructorAccessible(MethodSymbol constructor, ref HashSet<DiagnosticInfo> useSiteDiagnostics, bool allowProtectedConstructorsOfBaseType = false)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10306, 264060, 266381);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 264246, 264288);

                f_10306_264246_264287((object)constructor != null);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 264302, 264423);

                f_10306_264302_264422(f_10306_264315_264337(constructor) == MethodKind.Constructor || (DynAbs.Tracing.TraceSender.Expression_False(10306, 264315, 264421) || f_10306_264367_264389(constructor) == MethodKind.StaticConstructor));
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 264439, 264492);

                NamedTypeSymbol
                containingType = f_10306_264472_264491(this)
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 264506, 266370) || true) && ((object)containingType != null)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 264506, 266370);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 265847, 266114);

                    return (DynAbs.Tracing.TraceSender.Conditional_F1(10306, 265854, 265890) || ((allowProtectedConstructorsOfBaseType && DynAbs.Tracing.TraceSender.Conditional_F2(10306, 265914, 265974)) || DynAbs.Tracing.TraceSender.Conditional_F3(10306, 265998, 266113))) ? f_10306_265914_265974(this, constructor, ref useSiteDiagnostics, null) : f_10306_265998_266113(this, constructor, containingType, ref useSiteDiagnostics, f_10306_266086_266112(constructor));
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 264506, 266370);
                }

                else

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 264506, 266370);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 266180, 266236);

                    f_10306_266180_266235((object)f_10306_266201_266226(f_10306_266201_266217(this)) != null);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 266254, 266355);

                    return f_10306_266261_266354(constructor, f_10306_266304_266329(f_10306_266304_266320(this)), ref useSiteDiagnostics);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 264506, 266370);
                }
                DynAbs.Tracing.TraceSender.TraceExitMethod(10306, 264060, 266381);

                int
                f_10306_264246_264287(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 264246, 264287);
                    return 0;
                }


                Microsoft.CodeAnalysis.MethodKind
                f_10306_264315_264337(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                this_param)
                {
                    var return_v = this_param.MethodKind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 264315, 264337);
                    return return_v;
                }


                Microsoft.CodeAnalysis.MethodKind
                f_10306_264367_264389(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                this_param)
                {
                    var return_v = this_param.MethodKind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 264367, 264389);
                    return return_v;
                }


                int
                f_10306_264302_264422(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 264302, 264422);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol?
                f_10306_264472_264491(Microsoft.CodeAnalysis.CSharp.Binder
                this_param)
                {
                    var return_v = this_param.ContainingType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 264472, 264491);
                    return return_v;
                }


                bool
                f_10306_265914_265974(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                symbol, ref System.Collections.Generic.HashSet<Microsoft.CodeAnalysis.DiagnosticInfo>
                useSiteDiagnostics, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                accessThroughType)
                {
                    var return_v = this_param.IsAccessible((Microsoft.CodeAnalysis.CSharp.Symbol)symbol, ref useSiteDiagnostics, accessThroughType);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 265914, 265974);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                f_10306_266086_266112(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                this_param)
                {
                    var return_v = this_param.ContainingType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 266086, 266112);
                    return return_v;
                }


                bool
                f_10306_265998_266113(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                symbol, Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                within, ref System.Collections.Generic.HashSet<Microsoft.CodeAnalysis.DiagnosticInfo>
                useSiteDiagnostics, Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                throughTypeOpt)
                {
                    var return_v = this_param.IsSymbolAccessibleConditional((Microsoft.CodeAnalysis.CSharp.Symbol)symbol, within, ref useSiteDiagnostics, (Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol)throughTypeOpt);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 265998, 266113);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                f_10306_266201_266217(Microsoft.CodeAnalysis.CSharp.Binder
                this_param)
                {
                    var return_v = this_param.Compilation;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 266201, 266217);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.AssemblySymbol
                f_10306_266201_266226(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param)
                {
                    var return_v = this_param.Assembly;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 266201, 266226);
                    return return_v;
                }


                int
                f_10306_266180_266235(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 266180, 266235);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                f_10306_266304_266320(Microsoft.CodeAnalysis.CSharp.Binder
                this_param)
                {
                    var return_v = this_param.Compilation;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 266304, 266320);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.AssemblySymbol
                f_10306_266304_266329(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param)
                {
                    var return_v = this_param.Assembly;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 266304, 266329);
                    return return_v;
                }


                bool
                f_10306_266261_266354(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                symbol, Microsoft.CodeAnalysis.CSharp.Symbols.AssemblySymbol
                within, ref System.Collections.Generic.HashSet<Microsoft.CodeAnalysis.DiagnosticInfo>
                useSiteDiagnostics)
                {
                    var return_v = IsSymbolAccessibleConditional((Microsoft.CodeAnalysis.CSharp.Symbol)symbol, within, ref useSiteDiagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 266261, 266354);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 264060, 266381);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 264060, 266381);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        protected BoundExpression BindClassCreationExpression(
                    SyntaxNode node,
                    string typeName,
                    SyntaxNode typeNode,
                    NamedTypeSymbol type,
                    AnalyzedArguments analyzedArguments,
                    DiagnosticBag diagnostics,
                    InitializerExpressionSyntax initializerSyntaxOpt = null,
                    TypeSymbol initializerTypeOpt = null,
                    bool wasTargetTyped = false)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10306, 266393, 275554);
                Microsoft.CodeAnalysis.BitVector defaultArguments = default(Microsoft.CodeAnalysis.BitVector);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 266856, 266886);

                BoundExpression
                result = null
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 266900, 266936);

                bool
                hasErrors = f_10306_266917_266935(type)
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 266950, 267178) || true) && (f_10306_266954_266969(type))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 266950, 267178);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 267062, 267128);

                    f_10306_267062_267127(                // Report error for new of abstract type.
                                    diagnostics, ErrorCode.ERR_NoNewAbstract, f_10306_267107_267120(node), type);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 267146, 267163);

                    hasErrors = true;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 266950, 267178);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 267194, 267244);

                HashSet<DiagnosticInfo>
                useSiteDiagnostics = null
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 267258, 267322);

                BoundObjectInitializerExpressionBase
                boundInitializerOpt = null
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 267736, 269462) || true) && (f_10306_267740_267776(analyzedArguments))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 267736, 269462);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 267810, 267929);

                    OverloadResolutionResult<MethodSymbol>
                    overloadResolutionResult = f_10306_267876_267928()
                    ;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 267947, 268151);

                    f_10306_267947_268150(f_10306_267947_267970(this), f_10306_268004_268080(this, type, ref useSiteDiagnostics), analyzedArguments, overloadResolutionResult, ref useSiteDiagnostics);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 268169, 268211);

                    f_10306_268169_268210(diagnostics, node, useSiteDiagnostics);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 268229, 268255);

                    useSiteDiagnostics = null;

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 268275, 269284) || true) && (f_10306_268279_268326(overloadResolutionResult))
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 268275, 269284);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 268368, 268450);

                        var
                        argArray = f_10306_268383_268449(this, analyzedArguments, diagnostics)
                        ;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 268472, 268539);

                        var
                        refKindsArray = f_10306_268492_268538(analyzedArguments.RefKinds)
                        ;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 268563, 268665);

                        hasErrors &= f_10306_268576_268664(node, argArray, refKindsArray, diagnostics, queryClause: null);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 268689, 268806);

                        boundInitializerOpt = f_10306_268711_268805(initializerSyntaxOpt, initializerTypeOpt, typeNode, type, diagnostics);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 268828, 269265);

                        result = f_10306_268837_269264(node, typeName, argArray, f_10306_269005_269033(analyzedArguments), refKindsArray, boundInitializerOpt, f_10306_269146_269196(overloadResolutionResult), type, hasErrors);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 268275, 269284);
                    }
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 269304, 269336);

                    f_10306_269304_269335(
                                    overloadResolutionResult);

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 269354, 269447) || true) && (result != null)
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 269354, 269447);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 269414, 269428);

                        return result;
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 269354, 269447);
                    }
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 267736, 269462);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 269478, 269538);

                MemberResolutionResult<MethodSymbol>
                memberResolutionResult
                = default(MemberResolutionResult<MethodSymbol>);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 269552, 269603);

                ImmutableArray<MethodSymbol>
                candidateConstructors
                = default(ImmutableArray<MethodSymbol>);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 269619, 273315) || true) && (f_10306_269623_270025(this, type, analyzedArguments, typeName, f_10306_269767_269784(typeNode), hasErrors, diagnostics, out memberResolutionResult, out candidateConstructors, allowProtectedConstructorsOfBaseType: false))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 269619, 273315);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 270059, 270102);

                    var
                    method = memberResolutionResult.Member
                    ;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 270122, 270144);

                    bool
                    hasError = false
                    ;

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 270488, 270862) || true) && (f_10306_270492_270519(method))
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 270488, 270862);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 270776, 270843);

                        hasError = f_10306_270787_270830(this, node, diagnostics) || (DynAbs.Tracing.TraceSender.Expression_False(10306, 270787, 270842) || hasError);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 270488, 270862);
                    }
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 270882, 270961);

                    f_10306_270882_270960(this, diagnostics, method, node, hasBaseReceiver: false);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 271070, 271271);

                    ConstantValue
                    constantValueOpt = (DynAbs.Tracing.TraceSender.Conditional_F1(10306, 271103, 271175) || (((initializerSyntaxOpt == null && (DynAbs.Tracing.TraceSender.Expression_True(10306, 271104, 271174) && f_10306_271136_271174(method))) && DynAbs.Tracing.TraceSender.Conditional_F2(10306, 271199, 271242)) || DynAbs.Tracing.TraceSender.Conditional_F3(10306, 271266, 271270))) ? f_10306_271199_271242(type) : null
                    ;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 271291, 271390);

                    var
                    expanded = memberResolutionResult.Result.Kind == MemberResolutionKind.ApplicableInExpandedForm
                    ;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 271408, 271472);

                    var
                    argToParams = memberResolutionResult.Result.ArgsToParamsOpt
                    ;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 271490, 271683);

                    f_10306_271490_271682(this, node, f_10306_271517_271534(method), analyzedArguments.Arguments, analyzedArguments.RefKinds, ref argToParams, out defaultArguments, expanded, enableCallerInfo: true, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 271703, 271761);

                    var
                    arguments = f_10306_271719_271760(analyzedArguments.Arguments)
                    ;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 271779, 271841);

                    var
                    refKinds = f_10306_271794_271840(analyzedArguments.RefKinds)
                    ;

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 271861, 272271) || true) && (!hasError)
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 271861, 272271);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 271916, 272252);

                        hasError = !f_10306_271928_272251(node, method, null, f_10306_272074_272091(method), arguments, argToParams, f_10306_272192_272212(this), diagnostics);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 271861, 272271);
                    }
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 272291, 272408);

                    boundInitializerOpt = f_10306_272313_272407(initializerSyntaxOpt, initializerTypeOpt, typeNode, type, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 272426, 272964);

                    result = f_10306_272435_272963(node, method, candidateConstructors, arguments, f_10306_272623_272651(analyzedArguments), refKinds, expanded, argToParams, defaultArguments, constantValueOpt, boundInitializerOpt, wasTargetTyped, type, hasError);

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 273118, 273266) || true) && (f_10306_273122_273137(type))
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 273118, 273266);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 273179, 273247);

                        result = f_10306_273188_273246(this, node, LookupResultKind.NotCreatable, result);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 273118, 273266);
                    }
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 273286, 273300);

                    return result;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 269619, 273315);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 273331, 273359);

                LookupResultKind
                resultKind
                = default(LookupResultKind);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 273375, 273836) || true) && (f_10306_273379_273394(type))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 273375, 273836);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 273428, 273471);

                    resultKind = LookupResultKind.NotCreatable;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 273375, 273836);
                }

                else
                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 273375, 273836);

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 273505, 273836) || true) && (memberResolutionResult.IsValid && (DynAbs.Tracing.TraceSender.Expression_True(10306, 273509, 273622) && !f_10306_273544_273622(this, memberResolutionResult.Member, ref useSiteDiagnostics)))
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 273505, 273836);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 273656, 273699);

                        resultKind = LookupResultKind.Inaccessible;
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 273505, 273836);
                    }

                    else

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 273505, 273836);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 273765, 273821);

                        resultKind = LookupResultKind.OverloadResolutionFailure;
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 273505, 273836);
                    }
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 273375, 273836);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 273852, 273894);

                f_10306_273852_273893(
                            diagnostics, node, useSiteDiagnostics);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 273910, 273976);

                ArrayBuilder<Symbol>
                symbols = f_10306_273941_273975()
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 273990, 274030);

                f_10306_273990_274029(symbols, candidateConstructors);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 274195, 274256);

                var
                childNodes = f_10306_274212_274255()
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 274270, 274364);

                f_10306_274270_274363(childNodes, f_10306_274290_274362(this, analyzedArguments, candidateConstructors));

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 274378, 274593) || true) && (initializerSyntaxOpt != null)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 274378, 274593);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 274444, 274578);

                    f_10306_274444_274577(childNodes, boundInitializerOpt ?? (DynAbs.Tracing.TraceSender.Expression_Null<Microsoft.CodeAnalysis.CSharp.BoundObjectInitializerExpressionBase?>(10306, 274459, 274576) ?? f_10306_274482_274576(initializerSyntaxOpt, initializerTypeOpt, typeNode, type, diagnostics)));
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 274378, 274593);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 274609, 274726);

                return f_10306_274616_274725(node, resultKind, f_10306_274657_274685(symbols), f_10306_274687_274718(childNodes), type);

                BoundObjectInitializerExpressionBase makeBoundInitializerOpt(InitializerExpressionSyntax initializerSyntaxOpt2, TypeSymbol initializerTypeOpt2, SyntaxNode typeNode2, NamedTypeSymbol type2, DiagnosticBag diagnostics2)
                {
                    try
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterMethod(10306, 274765, 275543);

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 275014, 275498) || true) && (initializerSyntaxOpt2 != null)
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 275014, 275498);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 275089, 275479);

                            return f_10306_275096_275478(this, syntax: initializerSyntaxOpt2, type: initializerTypeOpt2 ?? (DynAbs.Tracing.TraceSender.Expression_Null<Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol>(10306, 275213, 275241) ?? type2), typeSyntax: typeNode2, isForNewInstance: true, diagnostics: diagnostics2);
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 275014, 275498);
                        }
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 275516, 275528);

                        return null;
                        DynAbs.Tracing.TraceSender.TraceExitMethod(10306, 274765, 275543);

                        Microsoft.CodeAnalysis.CSharp.BoundObjectInitializerExpressionBase
                        f_10306_275096_275478(Microsoft.CodeAnalysis.CSharp.Binder
                        this_param, Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax
                        syntax, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                        type, Microsoft.CodeAnalysis.SyntaxNode
                        typeSyntax, bool
                        isForNewInstance, Microsoft.CodeAnalysis.DiagnosticBag
                        diagnostics)
                        {
                            var return_v = this_param.BindInitializerExpression(syntax: syntax, type: type, typeSyntax: typeSyntax, isForNewInstance: isForNewInstance, diagnostics: diagnostics);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 275096, 275478);
                            return return_v;
                        }

                    }
                    catch
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 274765, 275543);
                        throw;
                    }
                    finally
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 274765, 275543);
                    }
                    throw new System.Exception("Slicer error: unreachable code");
                }
                DynAbs.Tracing.TraceSender.TraceExitMethod(10306, 266393, 275554);

                bool
                f_10306_266917_266935(Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                type)
                {
                    var return_v = type.IsErrorType();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 266917, 266935);
                    return return_v;
                }


                bool
                f_10306_266954_266969(Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                this_param)
                {
                    var return_v = this_param.IsAbstract;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 266954, 266969);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Location
                f_10306_267107_267120(Microsoft.CodeAnalysis.SyntaxNode
                this_param)
                {
                    var return_v = this_param.Location;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 267107, 267120);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo
                f_10306_267062_267127(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, Microsoft.CodeAnalysis.Location
                location, params object[]
                args)
                {
                    var return_v = diagnostics.Add(code, location, args);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 267062, 267127);
                    return return_v;
                }


                bool
                f_10306_267740_267776(Microsoft.CodeAnalysis.CSharp.AnalyzedArguments
                this_param)
                {
                    var return_v = this_param.HasDynamicArgument;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 267740, 267776);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.OverloadResolutionResult<Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol>
                f_10306_267876_267928()
                {
                    var return_v = OverloadResolutionResult<MethodSymbol>.GetInstance();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 267876, 267928);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.OverloadResolution
                f_10306_267947_267970(Microsoft.CodeAnalysis.CSharp.Binder
                this_param)
                {
                    var return_v = this_param.OverloadResolution;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 267947, 267970);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol>
                f_10306_268004_268080(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                type, ref System.Collections.Generic.HashSet<Microsoft.CodeAnalysis.DiagnosticInfo>?
                useSiteDiagnostics)
                {
                    var return_v = this_param.GetAccessibleConstructorsForOverloadResolution(type, ref useSiteDiagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 268004, 268080);
                    return return_v;
                }


                int
                f_10306_267947_268150(Microsoft.CodeAnalysis.CSharp.OverloadResolution
                this_param, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol>
                constructors, Microsoft.CodeAnalysis.CSharp.AnalyzedArguments
                arguments, Microsoft.CodeAnalysis.CSharp.OverloadResolutionResult<Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol>
                result, ref System.Collections.Generic.HashSet<Microsoft.CodeAnalysis.DiagnosticInfo>
                useSiteDiagnostics)
                {
                    this_param.ObjectCreationOverloadResolution(constructors, arguments, result, ref useSiteDiagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 267947, 268150);
                    return 0;
                }


                bool
                f_10306_268169_268210(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.SyntaxNode
                node, System.Collections.Generic.HashSet<Microsoft.CodeAnalysis.DiagnosticInfo>
                useSiteDiagnostics)
                {
                    var return_v = diagnostics.Add(node, useSiteDiagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 268169, 268210);
                    return return_v;
                }


                bool
                f_10306_268279_268326(Microsoft.CodeAnalysis.CSharp.OverloadResolutionResult<Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol>
                this_param)
                {
                    var return_v = this_param.HasAnyApplicableMember;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 268279, 268326);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                f_10306_268383_268449(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.AnalyzedArguments
                arguments, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.BuildArgumentsForDynamicInvocation(arguments, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 268383, 268449);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.RefKind>
                f_10306_268492_268538(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.RefKind>
                this_param)
                {
                    var return_v = this_param.ToImmutableOrNull();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 268492, 268538);
                    return return_v;
                }


                bool
                f_10306_268576_268664(Microsoft.CodeAnalysis.SyntaxNode
                node, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                arguments, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.RefKind>
                refKinds, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode
                queryClause)
                {
                    var return_v = ReportBadDynamicArguments(node, arguments, refKinds, diagnostics, queryClause: queryClause);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 268576, 268664);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundObjectInitializerExpressionBase
                f_10306_268711_268805(Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax?
                initializerSyntaxOpt2, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?
                initializerTypeOpt2, Microsoft.CodeAnalysis.SyntaxNode
                typeNode2, Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                type2, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics2)
                {
                    var return_v = makeBoundInitializerOpt(initializerSyntaxOpt2, initializerTypeOpt2, typeNode2, type2, diagnostics2);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 268711, 268805);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<string>
                f_10306_269005_269033(Microsoft.CodeAnalysis.CSharp.AnalyzedArguments
                this_param)
                {
                    var return_v = this_param.GetNames();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 269005, 269033);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol>
                f_10306_269146_269196(Microsoft.CodeAnalysis.CSharp.OverloadResolutionResult<Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol>
                this_param)
                {
                    var return_v = this_param.GetAllApplicableMembers();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 269146, 269196);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundDynamicObjectCreationExpression
                f_10306_268837_269264(Microsoft.CodeAnalysis.SyntaxNode
                syntax, string
                name, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                arguments, System.Collections.Immutable.ImmutableArray<string>
                argumentNamesOpt, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.RefKind>
                argumentRefKindsOpt, Microsoft.CodeAnalysis.CSharp.BoundObjectInitializerExpressionBase
                initializerExpressionOpt, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol>
                applicableMethods, Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                type, bool
                hasErrors)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.BoundDynamicObjectCreationExpression(syntax, name, arguments, argumentNamesOpt, argumentRefKindsOpt, initializerExpressionOpt, applicableMethods, (Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol)type, hasErrors);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 268837, 269264);
                    return return_v;
                }


                int
                f_10306_269304_269335(Microsoft.CodeAnalysis.CSharp.OverloadResolutionResult<Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol>
                this_param)
                {
                    this_param.Free();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 269304, 269335);
                    return 0;
                }


                Microsoft.CodeAnalysis.Location
                f_10306_269767_269784(Microsoft.CodeAnalysis.SyntaxNode
                this_param)
                {
                    var return_v = this_param.Location;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 269767, 269784);
                    return return_v;
                }


                bool
                f_10306_269623_270025(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                typeContainingConstructors, Microsoft.CodeAnalysis.CSharp.AnalyzedArguments
                analyzedArguments, string
                errorName, Microsoft.CodeAnalysis.Location
                errorLocation, bool
                suppressResultDiagnostics, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, out Microsoft.CodeAnalysis.CSharp.MemberResolutionResult<Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol>
                memberResolutionResult, out System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol>
                candidateConstructors, bool
                allowProtectedConstructorsOfBaseType)
                {
                    var return_v = this_param.TryPerformConstructorOverloadResolution(typeContainingConstructors, analyzedArguments, errorName, errorLocation, suppressResultDiagnostics, diagnostics, out memberResolutionResult, out candidateConstructors, allowProtectedConstructorsOfBaseType: allowProtectedConstructorsOfBaseType);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 269623, 270025);
                    return return_v;
                }


                bool
                f_10306_270492_270519(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                member)
                {
                    var return_v = member.HasUnsafeParameter();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 270492, 270519);
                    return return_v;
                }


                bool
                f_10306_270787_270830(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.SyntaxNode
                node, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.ReportUnsafeIfNotAllowed(node, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 270787, 270830);
                    return return_v;
                }


                int
                f_10306_270882_270960(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                symbol, Microsoft.CodeAnalysis.SyntaxNode
                node, bool
                hasBaseReceiver)
                {
                    this_param.ReportDiagnosticsIfObsolete(diagnostics, (Microsoft.CodeAnalysis.CSharp.Symbol)symbol, node, hasBaseReceiver: hasBaseReceiver);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 270882, 270960);
                    return 0;
                }


                bool
                f_10306_271136_271174(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                method)
                {
                    var return_v = method.IsDefaultValueTypeConstructor();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 271136, 271174);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ConstantValue
                f_10306_271199_271242(Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                type)
                {
                    var return_v = FoldParameterlessValueTypeConstructor(type);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 271199, 271242);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol>
                f_10306_271517_271534(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                this_param)
                {
                    var return_v = this_param.Parameters;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 271517, 271534);
                    return return_v;
                }


                int
                f_10306_271490_271682(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.SyntaxNode
                node, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol>
                parameters, Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                argumentsBuilder, Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.RefKind>
                argumentRefKindsBuilder, ref System.Collections.Immutable.ImmutableArray<int>
                argsToParamsOpt, out Microsoft.CodeAnalysis.BitVector
                defaultArguments, bool
                expanded, bool
                enableCallerInfo, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    this_param.BindDefaultArguments(node, parameters, argumentsBuilder, argumentRefKindsBuilder, ref argsToParamsOpt, out defaultArguments, expanded, enableCallerInfo: enableCallerInfo, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 271490, 271682);
                    return 0;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                f_10306_271719_271760(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                this_param)
                {
                    var return_v = this_param.ToImmutable();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 271719, 271760);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.RefKind>
                f_10306_271794_271840(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.RefKind>
                this_param)
                {
                    var return_v = this_param.ToImmutableOrNull();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 271794, 271840);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol>
                f_10306_272074_272091(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                this_param)
                {
                    var return_v = this_param.Parameters;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 272074, 272091);
                    return return_v;
                }


                uint
                f_10306_272192_272212(Microsoft.CodeAnalysis.CSharp.Binder
                this_param)
                {
                    var return_v = this_param.LocalScopeDepth;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 272192, 272212);
                    return return_v;
                }


                bool
                f_10306_271928_272251(Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                symbol, Microsoft.CodeAnalysis.CSharp.BoundExpression
                receiverOpt, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol>
                parameters, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                argsOpt, System.Collections.Immutable.ImmutableArray<int>
                argsToParamsOpt, uint
                scopeOfTheContainingExpression, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = CheckInvocationArgMixing(syntax, (Microsoft.CodeAnalysis.CSharp.Symbol)symbol, receiverOpt, parameters, argsOpt, argsToParamsOpt, scopeOfTheContainingExpression, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 271928, 272251);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundObjectInitializerExpressionBase
                f_10306_272313_272407(Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax?
                initializerSyntaxOpt2, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?
                initializerTypeOpt2, Microsoft.CodeAnalysis.SyntaxNode
                typeNode2, Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                type2, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics2)
                {
                    var return_v = makeBoundInitializerOpt(initializerSyntaxOpt2, initializerTypeOpt2, typeNode2, type2, diagnostics2);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 272313, 272407);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<string>
                f_10306_272623_272651(Microsoft.CodeAnalysis.CSharp.AnalyzedArguments
                this_param)
                {
                    var return_v = this_param.GetNames();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 272623, 272651);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundObjectCreationExpression
                f_10306_272435_272963(Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                constructor, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol>
                constructorsGroup, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                arguments, System.Collections.Immutable.ImmutableArray<string>
                argumentNamesOpt, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.RefKind>
                argumentRefKindsOpt, bool
                expanded, System.Collections.Immutable.ImmutableArray<int>
                argsToParamsOpt, Microsoft.CodeAnalysis.BitVector
                defaultArguments, Microsoft.CodeAnalysis.ConstantValue?
                constantValueOpt, Microsoft.CodeAnalysis.CSharp.BoundObjectInitializerExpressionBase
                initializerExpressionOpt, bool
                wasTargetTyped, Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                type, bool
                hasErrors)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.BoundObjectCreationExpression(syntax, constructor, constructorsGroup, arguments, argumentNamesOpt, argumentRefKindsOpt, expanded, argsToParamsOpt, defaultArguments, constantValueOpt, initializerExpressionOpt, wasTargetTyped, (Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol)type, hasErrors);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 272435, 272963);
                    return return_v;
                }


                bool
                f_10306_273122_273137(Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                this_param)
                {
                    var return_v = this_param.IsAbstract;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 273122, 273137);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundBadExpression
                f_10306_273188_273246(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.CSharp.LookupResultKind
                lookupResultKind, Microsoft.CodeAnalysis.CSharp.BoundExpression
                childNode)
                {
                    var return_v = this_param.BadExpression(syntax, lookupResultKind, childNode);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 273188, 273246);
                    return return_v;
                }


                bool
                f_10306_273379_273394(Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                this_param)
                {
                    var return_v = this_param.IsAbstract;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 273379, 273394);
                    return return_v;
                }


                bool
                f_10306_273544_273622(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                constructor, ref System.Collections.Generic.HashSet<Microsoft.CodeAnalysis.DiagnosticInfo>?
                useSiteDiagnostics)
                {
                    var return_v = this_param.IsConstructorAccessible(constructor, ref useSiteDiagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 273544, 273622);
                    return return_v;
                }


                bool
                f_10306_273852_273893(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.SyntaxNode
                node, System.Collections.Generic.HashSet<Microsoft.CodeAnalysis.DiagnosticInfo>?
                useSiteDiagnostics)
                {
                    var return_v = diagnostics.Add(node, useSiteDiagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 273852, 273893);
                    return return_v;
                }


                Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbol>
                f_10306_273941_273975()
                {
                    var return_v = ArrayBuilder<Symbol>.GetInstance();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 273941, 273975);
                    return return_v;
                }


                int
                f_10306_273990_274029(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbol>
                this_param, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol>
                items)
                {
                    this_param.AddRange<Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol>(items);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 273990, 274029);
                    return 0;
                }


                Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                f_10306_274212_274255()
                {
                    var return_v = ArrayBuilder<BoundExpression>.GetInstance();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 274212, 274255);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                f_10306_274290_274362(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.AnalyzedArguments
                analyzedArguments, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol>
                methods)
                {
                    var return_v = this_param.BuildArgumentsForErrorRecovery(analyzedArguments, methods);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 274290, 274362);
                    return return_v;
                }


                int
                f_10306_274270_274363(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                this_param, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                items)
                {
                    this_param.AddRange(items);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 274270, 274363);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.BoundObjectInitializerExpressionBase
                f_10306_274482_274576(Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax
                initializerSyntaxOpt2, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?
                initializerTypeOpt2, Microsoft.CodeAnalysis.SyntaxNode
                typeNode2, Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                type2, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics2)
                {
                    var return_v = makeBoundInitializerOpt(initializerSyntaxOpt2, initializerTypeOpt2, typeNode2, type2, diagnostics2);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 274482, 274576);
                    return return_v;
                }


                int
                f_10306_274444_274577(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                this_param, Microsoft.CodeAnalysis.CSharp.BoundObjectInitializerExpressionBase
                item)
                {
                    this_param.Add((Microsoft.CodeAnalysis.CSharp.BoundExpression)item);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 274444, 274577);
                    return 0;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>
                f_10306_274657_274685(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbol>
                this_param)
                {
                    var return_v = this_param.ToImmutableAndFree();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 274657, 274685);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                f_10306_274687_274718(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                this_param)
                {
                    var return_v = this_param.ToImmutableAndFree();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 274687, 274718);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundBadExpression
                f_10306_274616_274725(Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.CSharp.LookupResultKind
                resultKind, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>
                symbols, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                childBoundNodes, Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                type)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.BoundBadExpression(syntax, resultKind, symbols, childBoundNodes, (Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol)type);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 274616, 274725);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 266393, 275554);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 266393, 275554);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private BoundExpression BindInterfaceCreationExpression(ObjectCreationExpressionSyntax node, NamedTypeSymbol type, DiagnosticBag diagnostics)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10306, 275566, 276122);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 275732, 275802);

                AnalyzedArguments
                analyzedArguments = f_10306_275770_275801()
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 275816, 275889);

                f_10306_275816_275888(this, f_10306_275838_275855(node), diagnostics, analyzedArguments);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 275903, 276044);

                var
                result = f_10306_275916_276043(this, node, type, diagnostics, f_10306_275973_275982(node), analyzedArguments, f_10306_276003_276019(node), wasTargetTyped: false)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 276058, 276083);

                f_10306_276058_276082(analyzedArguments);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 276097, 276111);

                return result;
                DynAbs.Tracing.TraceSender.TraceExitMethod(10306, 275566, 276122);

                Microsoft.CodeAnalysis.CSharp.AnalyzedArguments
                f_10306_275770_275801()
                {
                    var return_v = AnalyzedArguments.GetInstance();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 275770, 275801);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentListSyntax?
                f_10306_275838_275855(Microsoft.CodeAnalysis.CSharp.Syntax.ObjectCreationExpressionSyntax
                this_param)
                {
                    var return_v = this_param.ArgumentList;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 275838, 275855);
                    return return_v;
                }


                int
                f_10306_275816_275888(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentListSyntax?
                argumentListOpt, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.AnalyzedArguments
                result)
                {
                    this_param.BindArgumentsAndNames(argumentListOpt, diagnostics, result);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 275816, 275888);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax
                f_10306_275973_275982(Microsoft.CodeAnalysis.CSharp.Syntax.ObjectCreationExpressionSyntax
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 275973, 275982);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax?
                f_10306_276003_276019(Microsoft.CodeAnalysis.CSharp.Syntax.ObjectCreationExpressionSyntax
                this_param)
                {
                    var return_v = this_param.Initializer;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 276003, 276019);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_275916_276043(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.ObjectCreationExpressionSyntax
                node, Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                type, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax
                typeNode, Microsoft.CodeAnalysis.CSharp.AnalyzedArguments
                analyzedArguments, Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax?
                initializerOpt, bool
                wasTargetTyped)
                {
                    var return_v = this_param.BindInterfaceCreationExpression((Microsoft.CodeAnalysis.SyntaxNode)node, type, diagnostics, (Microsoft.CodeAnalysis.SyntaxNode)typeNode, analyzedArguments, initializerOpt, wasTargetTyped: wasTargetTyped);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 275916, 276043);
                    return return_v;
                }


                int
                f_10306_276058_276082(Microsoft.CodeAnalysis.CSharp.AnalyzedArguments
                this_param)
                {
                    this_param.Free();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 276058, 276082);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 275566, 276122);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 275566, 276122);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private BoundExpression BindInterfaceCreationExpression(SyntaxNode node, NamedTypeSymbol type, DiagnosticBag diagnostics, SyntaxNode typeNode, AnalyzedArguments analyzedArguments, InitializerExpressionSyntax initializerOpt, bool wasTargetTyped)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10306, 276134, 278051);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 276403, 276438);

                f_10306_276403_276437((object)type != null);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 277372, 277777) || true) && (f_10306_277376_277401_M(!this.InAttributeArgument) && (DynAbs.Tracing.TraceSender.Expression_True(10306, 277376, 277421) && f_10306_277405_277421(type)))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 277372, 277777);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 277455, 277507);

                    NamedTypeSymbol
                    coClassType = f_10306_277485_277506(type)
                    ;

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 277525, 277762) || true) && ((object)coClassType != null)
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 277525, 277762);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 277598, 277743);

                        return f_10306_277605_277742(this, node, type, coClassType, diagnostics, typeNode, analyzedArguments, initializerOpt, wasTargetTyped);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 277525, 277762);
                    }
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 277372, 277777);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 277848, 277914);

                f_10306_277848_277913(
                            // interfaces can't be instantiated in C#
                            diagnostics, ErrorCode.ERR_NoNewAbstract, f_10306_277893_277906(node), type);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 277928, 278040);

                return f_10306_277935_278039(this, node, type, analyzedArguments, initializerOpt, typeNode, diagnostics);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10306, 276134, 278051);

                int
                f_10306_276403_276437(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 276403, 276437);
                    return 0;
                }


                bool
                f_10306_277376_277401_M(bool
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 277376, 277401);
                    return return_v;
                }


                bool
                f_10306_277405_277421(Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                this_param)
                {
                    var return_v = this_param.IsComImport;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 277405, 277421);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                f_10306_277485_277506(Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                this_param)
                {
                    var return_v = this_param.ComImportCoClass;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 277485, 277506);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_277605_277742(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.SyntaxNode
                node, Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                interfaceType, Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                coClassType, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.SyntaxNode
                typeNode, Microsoft.CodeAnalysis.CSharp.AnalyzedArguments
                analyzedArguments, Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax
                initializerOpt, bool
                wasTargetTyped)
                {
                    var return_v = this_param.BindComImportCoClassCreationExpression(node, interfaceType, coClassType, diagnostics, typeNode, analyzedArguments, initializerOpt, wasTargetTyped);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 277605, 277742);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Location
                f_10306_277893_277906(Microsoft.CodeAnalysis.SyntaxNode
                this_param)
                {
                    var return_v = this_param.Location;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 277893, 277906);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo
                f_10306_277848_277913(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, Microsoft.CodeAnalysis.Location
                location, params object[]
                args)
                {
                    var return_v = diagnostics.Add(code, location, args);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 277848, 277913);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_277935_278039(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.SyntaxNode
                node, Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                type, Microsoft.CodeAnalysis.CSharp.AnalyzedArguments
                analyzedArguments, Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax
                initializerOpt, Microsoft.CodeAnalysis.SyntaxNode
                typeSyntax, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.MakeBadExpressionForObjectCreation(node, (Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol)type, analyzedArguments, initializerOpt, typeSyntax, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 277935, 278039);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 276134, 278051);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 276134, 278051);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private BoundExpression BindComImportCoClassCreationExpression(SyntaxNode node, NamedTypeSymbol interfaceType, NamedTypeSymbol coClassType, DiagnosticBag diagnostics, SyntaxNode typeNode, AnalyzedArguments analyzedArguments, InitializerExpressionSyntax initializerOpt, bool wasTargetTyped)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10306, 278063, 282711);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 278377, 278421);

                f_10306_278377_278420((object)interfaceType != null);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 278435, 278481);

                f_10306_278435_278480(f_10306_278448_278479(interfaceType));
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 278495, 278537);

                f_10306_278495_278536((object)coClassType != null);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 278551, 278665);

                f_10306_278551_278664(f_10306_278564_278663(f_10306_278582_278612(interfaceType), coClassType, TypeCompareKind.ConsiderEverything2));
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 278679, 278774);

                f_10306_278679_278773(f_10306_278692_278712(coClassType) == TypeKind.Class || (DynAbs.Tracing.TraceSender.Expression_False(10306, 278692, 278772) || f_10306_278734_278754(coClassType) == TypeKind.Error));

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 278790, 282563) || true) && (f_10306_278794_278819(coClassType))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 278790, 282563);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 278853, 278936);

                    f_10306_278853_278935(diagnostics, ErrorCode.ERR_MissingCoClass, node, coClassType, interfaceType);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 278790, 282563);
                }

                else
                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 278790, 282563);

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 278970, 282563) || true) && (f_10306_278974_279006(coClassType))
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 278970, 282563);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 279891, 279973);

                        f_10306_279891_279972(diagnostics, ErrorCode.ERR_BadCoClassSig, node, coClassType, interfaceType);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 278970, 282563);
                    }

                    else

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 278970, 282563);

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 280073, 280312) || true) && (f_10306_280077_280118(f_10306_280077_280109(interfaceType)))
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 280073, 280312);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 280160, 280293);

                            return f_10306_280167_280292(this, node, interfaceType, coClassType, diagnostics, typeNode, analyzedArguments, initializerOpt);
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 280073, 280312);
                        }
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 280332, 280696);

                        var
                        classCreation = f_10306_280352_280695(this, node, f_10306_280429_280445(coClassType), typeNode, coClassType, analyzedArguments, diagnostics, initializerOpt, interfaceType, wasTargetTyped)
                        ;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 280714, 280764);

                        HashSet<DiagnosticInfo>
                        useSiteDiagnostics = null
                        ;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 280782, 280925);

                        Conversion
                        conversion = f_10306_280806_280924(f_10306_280806_280822(this), classCreation, interfaceType, ref useSiteDiagnostics, forCast: true)
                        ;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 280943, 280985);

                        f_10306_280943_280984(diagnostics, node, useSiteDiagnostics);

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 281003, 281313) || true) && (f_10306_281007_281026_M(!conversion.IsValid))
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 281003, 281313);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 281068, 281174);

                            SymbolDistinguisher
                            distinguisher = f_10306_281104_281173(f_10306_281128_281144(this), coClassType, interfaceType)
                            ;
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 281196, 281294);

                            f_10306_281196_281293(diagnostics, ErrorCode.ERR_NoExplicitConv, node, f_10306_281251_281270(distinguisher), f_10306_281272_281292(distinguisher));
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 281003, 281313);
                        }
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 281404, 281476);

                        f_10306_281404_281475(this, classCreation, conversion, interfaceType, diagnostics);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 281563, 282548);

                        switch (f_10306_281571_281589(classCreation))
                        {

                            case BoundKind.ObjectCreationExpression:
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 281563, 282548);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 281697, 281757);

                                var
                                creation = (BoundObjectCreationExpression)classCreation
                                ;
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 281783, 282178);

                                return f_10306_281790_282177(creation, f_10306_281806_281826(creation), f_10306_281828_281854(creation), f_10306_281856_281874(creation), f_10306_281876_281901(creation), f_10306_281951_281979(creation), f_10306_281981_281998(creation), f_10306_282000_282024(creation), f_10306_282026_282051(creation), f_10306_282053_282078(creation), f_10306_282128_282161(creation), interfaceType);
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 281563, 282548);

                            case BoundKind.BadExpression:
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 281563, 282548);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 282257, 282301);

                                var
                                bad = (BoundBadExpression)classCreation
                                ;
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 282327, 282410);

                                return f_10306_282334_282409(bad, f_10306_282345_282359(bad), f_10306_282361_282372(bad), f_10306_282374_282393(bad), interfaceType);
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 281563, 282548);

                            default:
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 281563, 282548);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 282468, 282529);

                                throw f_10306_282474_282528(f_10306_282509_282527(classCreation));
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 281563, 282548);
                        }
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 278970, 282563);
                    }
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 278790, 282563);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 282579, 282700);

                return f_10306_282586_282699(this, node, interfaceType, analyzedArguments, initializerOpt, typeNode, diagnostics);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10306, 278063, 282711);

                int
                f_10306_278377_278420(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 278377, 278420);
                    return 0;
                }


                bool
                f_10306_278448_278479(Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                type)
                {
                    var return_v = type.IsInterfaceType();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 278448, 278479);
                    return return_v;
                }


                int
                f_10306_278435_278480(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 278435, 278480);
                    return 0;
                }


                int
                f_10306_278495_278536(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 278495, 278536);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                f_10306_278582_278612(Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                this_param)
                {
                    var return_v = this_param.ComImportCoClass;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 278582, 278612);
                    return return_v;
                }


                bool
                f_10306_278564_278663(Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                left, Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                right, Microsoft.CodeAnalysis.TypeCompareKind
                comparison)
                {
                    var return_v = TypeSymbol.Equals((Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol)left, (Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol)right, comparison);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 278564, 278663);
                    return return_v;
                }


                int
                f_10306_278551_278664(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 278551, 278664);
                    return 0;
                }


                Microsoft.CodeAnalysis.TypeKind
                f_10306_278692_278712(Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                this_param)
                {
                    var return_v = this_param.TypeKind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 278692, 278712);
                    return return_v;
                }


                Microsoft.CodeAnalysis.TypeKind
                f_10306_278734_278754(Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                this_param)
                {
                    var return_v = this_param.TypeKind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 278734, 278754);
                    return return_v;
                }


                int
                f_10306_278679_278773(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 278679, 278773);
                    return 0;
                }


                bool
                f_10306_278794_278819(Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                type)
                {
                    var return_v = type.IsErrorType();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 278794, 278819);
                    return return_v;
                }


                int
                f_10306_278853_278935(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, Microsoft.CodeAnalysis.SyntaxNode
                syntax, params object[]
                args)
                {
                    Error(diagnostics, code, (Microsoft.CodeAnalysis.SyntaxNodeOrToken)syntax, args);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 278853, 278935);
                    return 0;
                }


                bool
                f_10306_278974_279006(Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                this_param)
                {
                    var return_v = this_param.IsUnboundGenericType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 278974, 279006);
                    return return_v;
                }


                int
                f_10306_279891_279972(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, Microsoft.CodeAnalysis.SyntaxNode
                syntax, params object[]
                args)
                {
                    Error(diagnostics, code, (Microsoft.CodeAnalysis.SyntaxNodeOrToken)syntax, args);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 279891, 279972);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.AssemblySymbol
                f_10306_280077_280109(Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                this_param)
                {
                    var return_v = this_param.ContainingAssembly;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 280077, 280109);
                    return return_v;
                }


                bool
                f_10306_280077_280118(Microsoft.CodeAnalysis.CSharp.Symbols.AssemblySymbol
                this_param)
                {
                    var return_v = this_param.IsLinked;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 280077, 280118);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_280167_280292(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.SyntaxNode
                node, Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                interfaceType, Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                coClassType, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.SyntaxNode
                typeNode, Microsoft.CodeAnalysis.CSharp.AnalyzedArguments
                analyzedArguments, Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax
                initializerOpt)
                {
                    var return_v = this_param.BindNoPiaObjectCreationExpression(node, interfaceType, coClassType, diagnostics, typeNode, analyzedArguments, initializerOpt);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 280167, 280292);
                    return return_v;
                }


                string
                f_10306_280429_280445(Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                this_param)
                {
                    var return_v = this_param.Name;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 280429, 280445);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_280352_280695(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.SyntaxNode
                node, string
                typeName, Microsoft.CodeAnalysis.SyntaxNode
                typeNode, Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                type, Microsoft.CodeAnalysis.CSharp.AnalyzedArguments
                analyzedArguments, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax
                initializerSyntaxOpt, Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                initializerTypeOpt, bool
                wasTargetTyped)
                {
                    var return_v = this_param.BindClassCreationExpression(node, typeName, typeNode, type, analyzedArguments, diagnostics, initializerSyntaxOpt, (Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol)initializerTypeOpt, wasTargetTyped);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 280352, 280695);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Conversions
                f_10306_280806_280822(Microsoft.CodeAnalysis.CSharp.Binder
                this_param)
                {
                    var return_v = this_param.Conversions;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 280806, 280822);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Conversion
                f_10306_280806_280924(Microsoft.CodeAnalysis.CSharp.Conversions
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                sourceExpression, Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                destination, ref System.Collections.Generic.HashSet<Microsoft.CodeAnalysis.DiagnosticInfo>?
                useSiteDiagnostics, bool
                forCast)
                {
                    var return_v = this_param.ClassifyConversionFromExpression(sourceExpression, (Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol)destination, ref useSiteDiagnostics, forCast: forCast);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 280806, 280924);
                    return return_v;
                }


                bool
                f_10306_280943_280984(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.SyntaxNode
                node, System.Collections.Generic.HashSet<Microsoft.CodeAnalysis.DiagnosticInfo>
                useSiteDiagnostics)
                {
                    var return_v = diagnostics.Add(node, useSiteDiagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 280943, 280984);
                    return return_v;
                }


                bool
                f_10306_281007_281026_M(bool
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 281007, 281026);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                f_10306_281128_281144(Microsoft.CodeAnalysis.CSharp.Binder
                this_param)
                {
                    var return_v = this_param.Compilation;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 281128, 281144);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.SymbolDistinguisher
                f_10306_281104_281173(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                compilation, Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                symbol0, Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                symbol1)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.SymbolDistinguisher(compilation, (Microsoft.CodeAnalysis.CSharp.Symbol)symbol0, (Microsoft.CodeAnalysis.CSharp.Symbol)symbol1);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 281104, 281173);
                    return return_v;
                }


                System.IFormattable
                f_10306_281251_281270(Microsoft.CodeAnalysis.CSharp.SymbolDistinguisher
                this_param)
                {
                    var return_v = this_param.First;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 281251, 281270);
                    return return_v;
                }


                System.IFormattable
                f_10306_281272_281292(Microsoft.CodeAnalysis.CSharp.SymbolDistinguisher
                this_param)
                {
                    var return_v = this_param.Second;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 281272, 281292);
                    return return_v;
                }


                int
                f_10306_281196_281293(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, Microsoft.CodeAnalysis.SyntaxNode
                syntax, params object[]
                args)
                {
                    Error(diagnostics, code, (Microsoft.CodeAnalysis.SyntaxNodeOrToken)syntax, args);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 281196, 281293);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_281404_281475(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                source, Microsoft.CodeAnalysis.CSharp.Conversion
                conversion, Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                destination, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.CreateConversion(source, conversion, (Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol)destination, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 281404, 281475);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundKind
                f_10306_281571_281589(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.Kind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 281571, 281589);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                f_10306_281806_281826(Microsoft.CodeAnalysis.CSharp.BoundObjectCreationExpression
                this_param)
                {
                    var return_v = this_param.Constructor;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 281806, 281826);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol>
                f_10306_281828_281854(Microsoft.CodeAnalysis.CSharp.BoundObjectCreationExpression
                this_param)
                {
                    var return_v = this_param.ConstructorsGroup;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 281828, 281854);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                f_10306_281856_281874(Microsoft.CodeAnalysis.CSharp.BoundObjectCreationExpression
                this_param)
                {
                    var return_v = this_param.Arguments;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 281856, 281874);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<string>
                f_10306_281876_281901(Microsoft.CodeAnalysis.CSharp.BoundObjectCreationExpression
                this_param)
                {
                    var return_v = this_param.ArgumentNamesOpt;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 281876, 281901);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.RefKind>
                f_10306_281951_281979(Microsoft.CodeAnalysis.CSharp.BoundObjectCreationExpression
                this_param)
                {
                    var return_v = this_param.ArgumentRefKindsOpt;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 281951, 281979);
                    return return_v;
                }


                bool
                f_10306_281981_281998(Microsoft.CodeAnalysis.CSharp.BoundObjectCreationExpression
                this_param)
                {
                    var return_v = this_param.Expanded;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 281981, 281998);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<int>
                f_10306_282000_282024(Microsoft.CodeAnalysis.CSharp.BoundObjectCreationExpression
                this_param)
                {
                    var return_v = this_param.ArgsToParamsOpt;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 282000, 282024);
                    return return_v;
                }


                Microsoft.CodeAnalysis.BitVector
                f_10306_282026_282051(Microsoft.CodeAnalysis.CSharp.BoundObjectCreationExpression
                this_param)
                {
                    var return_v = this_param.DefaultArguments;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 282026, 282051);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ConstantValue?
                f_10306_282053_282078(Microsoft.CodeAnalysis.CSharp.BoundObjectCreationExpression
                this_param)
                {
                    var return_v = this_param.ConstantValueOpt;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 282053, 282078);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundObjectInitializerExpressionBase?
                f_10306_282128_282161(Microsoft.CodeAnalysis.CSharp.BoundObjectCreationExpression
                this_param)
                {
                    var return_v = this_param.InitializerExpressionOpt;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 282128, 282161);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundObjectCreationExpression
                f_10306_281790_282177(Microsoft.CodeAnalysis.CSharp.BoundObjectCreationExpression
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                constructor, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol>
                constructorsGroup, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                arguments, System.Collections.Immutable.ImmutableArray<string>
                argumentNamesOpt, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.RefKind>
                argumentRefKindsOpt, bool
                expanded, System.Collections.Immutable.ImmutableArray<int>
                argsToParamsOpt, Microsoft.CodeAnalysis.BitVector
                defaultArguments, Microsoft.CodeAnalysis.ConstantValue?
                constantValueOpt, Microsoft.CodeAnalysis.CSharp.BoundObjectInitializerExpressionBase?
                initializerExpressionOpt, Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                type)
                {
                    var return_v = this_param.Update(constructor, constructorsGroup, arguments, argumentNamesOpt, argumentRefKindsOpt, expanded, argsToParamsOpt, defaultArguments, constantValueOpt, initializerExpressionOpt, (Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol)type);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 281790, 282177);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.LookupResultKind
                f_10306_282345_282359(Microsoft.CodeAnalysis.CSharp.BoundBadExpression
                this_param)
                {
                    var return_v = this_param.ResultKind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 282345, 282359);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol?>
                f_10306_282361_282372(Microsoft.CodeAnalysis.CSharp.BoundBadExpression
                this_param)
                {
                    var return_v = this_param.Symbols;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 282361, 282372);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                f_10306_282374_282393(Microsoft.CodeAnalysis.CSharp.BoundBadExpression
                this_param)
                {
                    var return_v = this_param.ChildBoundNodes;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 282374, 282393);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundBadExpression
                f_10306_282334_282409(Microsoft.CodeAnalysis.CSharp.BoundBadExpression
                this_param, Microsoft.CodeAnalysis.CSharp.LookupResultKind
                resultKind, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol?>
                symbols, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                childBoundNodes, Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                type)
                {
                    var return_v = this_param.Update(resultKind, symbols, childBoundNodes, (Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol)type);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 282334, 282409);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundKind
                f_10306_282509_282527(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.Kind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 282509, 282527);
                    return return_v;
                }


                System.Exception
                f_10306_282474_282528(Microsoft.CodeAnalysis.CSharp.BoundKind
                o)
                {
                    var return_v = ExceptionUtilities.UnexpectedValue((object)o);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 282474, 282528);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_282586_282699(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.SyntaxNode
                node, Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                type, Microsoft.CodeAnalysis.CSharp.AnalyzedArguments
                analyzedArguments, Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax
                initializerOpt, Microsoft.CodeAnalysis.SyntaxNode
                typeSyntax, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.MakeBadExpressionForObjectCreation(node, (Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol)type, analyzedArguments, initializerOpt, typeSyntax, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 282586, 282699);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 278063, 282711);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 278063, 282711);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private BoundExpression BindNoPiaObjectCreationExpression(
                    SyntaxNode node,
                    NamedTypeSymbol interfaceType,
                    NamedTypeSymbol coClassType,
                    DiagnosticBag diagnostics,
                    SyntaxNode typeNode,
                    AnalyzedArguments analyzedArguments,
                    InitializerExpressionSyntax initializerOpt)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10306, 282723, 284398);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 283103, 283121);

                string
                guidString
                = default(string);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 283135, 283439) || true) && (!f_10306_283140_283181(coClassType, out guidString))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 283135, 283439);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 283379, 283424);

                    guidString = System.Guid.Empty.ToString("D");
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 283135, 283439);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 283455, 283757);

                var
                boundInitializerOpt = (DynAbs.Tracing.TraceSender.Conditional_F1(10306, 283481, 283503) || ((initializerOpt == null && DynAbs.Tracing.TraceSender.Conditional_F2(10306, 283506, 283510)) || DynAbs.Tracing.TraceSender.Conditional_F3(10306, 283530, 283756))) ? null : f_10306_283530_283756(this, syntax: initializerOpt, type: interfaceType, typeSyntax: typeNode, isForNewInstance: true, diagnostics: diagnostics)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 283773, 283881);

                var
                creation = f_10306_283788_283880(node, guidString, boundInitializerOpt, interfaceType)
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 283897, 284355) || true) && (f_10306_283901_283934(analyzedArguments.Arguments) > 0)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 283897, 284355);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 283972, 284088);

                    f_10306_283972_284087(diagnostics, ErrorCode.ERR_BadCtorArgCount, f_10306_284019_284036(typeNode), interfaceType, f_10306_284053_284086(analyzedArguments.Arguments));
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 284108, 284187);

                    var
                    children = f_10306_284123_284172(this, analyzedArguments).Add(creation)
                    ;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 284205, 284340);

                    return f_10306_284212_284339(node, LookupResultKind.OverloadResolutionFailure, ImmutableArray<Symbol>.Empty, children, f_10306_284325_284338(creation));
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 283897, 284355);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 284371, 284387);

                return creation;
                DynAbs.Tracing.TraceSender.TraceExitMethod(10306, 282723, 284398);

                bool
                f_10306_283140_283181(Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                this_param, out string
                guidString)
                {
                    var return_v = this_param.GetGuidString(out guidString);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 283140, 283181);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundObjectInitializerExpressionBase
                f_10306_283530_283756(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax
                syntax, Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                type, Microsoft.CodeAnalysis.SyntaxNode
                typeSyntax, bool
                isForNewInstance, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.BindInitializerExpression(syntax: syntax, type: (Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol)type, typeSyntax: typeSyntax, isForNewInstance: isForNewInstance, diagnostics: diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 283530, 283756);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundNoPiaObjectCreationExpression
                f_10306_283788_283880(Microsoft.CodeAnalysis.SyntaxNode
                syntax, string
                guidString, Microsoft.CodeAnalysis.CSharp.BoundObjectInitializerExpressionBase?
                initializerExpressionOpt, Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                type)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.BoundNoPiaObjectCreationExpression(syntax, guidString, initializerExpressionOpt, (Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol)type);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 283788, 283880);
                    return return_v;
                }


                int
                f_10306_283901_283934(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                this_param)
                {
                    var return_v = this_param.Count;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 283901, 283934);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Location
                f_10306_284019_284036(Microsoft.CodeAnalysis.SyntaxNode
                this_param)
                {
                    var return_v = this_param.Location;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 284019, 284036);
                    return return_v;
                }


                int
                f_10306_284053_284086(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                this_param)
                {
                    var return_v = this_param.Count;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 284053, 284086);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo
                f_10306_283972_284087(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, Microsoft.CodeAnalysis.Location
                location, params object[]
                args)
                {
                    var return_v = diagnostics.Add(code, location, args);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 283972, 284087);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                f_10306_284123_284172(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.AnalyzedArguments
                analyzedArguments)
                {
                    var return_v = this_param.BuildArgumentsForErrorRecovery(analyzedArguments);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 284123, 284172);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                f_10306_284325_284338(Microsoft.CodeAnalysis.CSharp.BoundNoPiaObjectCreationExpression
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 284325, 284338);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundBadExpression
                f_10306_284212_284339(Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.CSharp.LookupResultKind
                resultKind, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>
                symbols, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                childBoundNodes, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                type)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.BoundBadExpression(syntax, resultKind, symbols, childBoundNodes, type);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 284212, 284339);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 282723, 284398);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 282723, 284398);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private BoundExpression BindTypeParameterCreationExpression(ObjectCreationExpressionSyntax node, TypeParameterSymbol typeParameter, DiagnosticBag diagnostics)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10306, 284410, 284973);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 284593, 284663);

                AnalyzedArguments
                analyzedArguments = f_10306_284631_284662()
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 284677, 284750);

                f_10306_284677_284749(this, f_10306_284699_284716(node), diagnostics, analyzedArguments);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 284764, 284895);

                var
                result = f_10306_284777_284894(this, node, typeParameter, analyzedArguments, f_10306_284853_284869(node), f_10306_284871_284880(node), diagnostics)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 284909, 284934);

                f_10306_284909_284933(analyzedArguments);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 284948, 284962);

                return result;
                DynAbs.Tracing.TraceSender.TraceExitMethod(10306, 284410, 284973);

                Microsoft.CodeAnalysis.CSharp.AnalyzedArguments
                f_10306_284631_284662()
                {
                    var return_v = AnalyzedArguments.GetInstance();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 284631, 284662);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentListSyntax?
                f_10306_284699_284716(Microsoft.CodeAnalysis.CSharp.Syntax.ObjectCreationExpressionSyntax
                this_param)
                {
                    var return_v = this_param.ArgumentList;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 284699, 284716);
                    return return_v;
                }


                int
                f_10306_284677_284749(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentListSyntax?
                argumentListOpt, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.AnalyzedArguments
                result)
                {
                    this_param.BindArgumentsAndNames(argumentListOpt, diagnostics, result);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 284677, 284749);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax?
                f_10306_284853_284869(Microsoft.CodeAnalysis.CSharp.Syntax.ObjectCreationExpressionSyntax
                this_param)
                {
                    var return_v = this_param.Initializer;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 284853, 284869);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax
                f_10306_284871_284880(Microsoft.CodeAnalysis.CSharp.Syntax.ObjectCreationExpressionSyntax
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 284871, 284880);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_284777_284894(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.ObjectCreationExpressionSyntax
                node, Microsoft.CodeAnalysis.CSharp.Symbols.TypeParameterSymbol
                typeParameter, Microsoft.CodeAnalysis.CSharp.AnalyzedArguments
                analyzedArguments, Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax?
                initializerOpt, Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax
                typeSyntax, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.BindTypeParameterCreationExpression((Microsoft.CodeAnalysis.SyntaxNode)node, typeParameter, analyzedArguments, initializerOpt, (Microsoft.CodeAnalysis.SyntaxNode)typeSyntax, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 284777, 284894);
                    return return_v;
                }


                int
                f_10306_284909_284933(Microsoft.CodeAnalysis.CSharp.AnalyzedArguments
                this_param)
                {
                    this_param.Free();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 284909, 284933);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 284410, 284973);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 284410, 284973);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private BoundExpression BindTypeParameterCreationExpression(SyntaxNode node, TypeParameterSymbol typeParameter, AnalyzedArguments analyzedArguments, InitializerExpressionSyntax initializerOpt, SyntaxNode typeSyntax, DiagnosticBag diagnostics)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10306, 284985, 286303);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 285252, 286153) || true) && (f_10306_285256_285295_M(!typeParameter.HasConstructorConstraint) && (DynAbs.Tracing.TraceSender.Expression_True(10306, 285256, 285325) && f_10306_285299_285325_M(!typeParameter.IsValueType)))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 285252, 286153);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 285359, 285431);

                    f_10306_285359_285430(diagnostics, ErrorCode.ERR_NoNewTyvar, f_10306_285401_285414(node), typeParameter);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 285252, 286153);
                }

                else
                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 285252, 286153);

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 285465, 286153) || true) && (f_10306_285469_285502(analyzedArguments.Arguments) > 0)
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 285465, 286153);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 285540, 285618);

                        f_10306_285540_285617(diagnostics, ErrorCode.ERR_NewTyvarWithArgs, f_10306_285588_285601(node), typeParameter);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 285465, 286153);
                    }

                    else

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 285465, 286153);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 285684, 286057);

                        var
                        boundInitializerOpt = (DynAbs.Tracing.TraceSender.Conditional_F1(10306, 285710, 285732) || ((initializerOpt == null && DynAbs.Tracing.TraceSender.Conditional_F2(10306, 285757, 285761)) || DynAbs.Tracing.TraceSender.Conditional_F3(10306, 285786, 286056))) ? null : f_10306_285786_286056(this, syntax: initializerOpt, type: typeParameter, typeSyntax: typeSyntax, isForNewInstance: true, diagnostics: diagnostics)
                        ;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 286075, 286138);

                        return f_10306_286082_286137(node, boundInitializerOpt, typeParameter);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 285465, 286153);
                    }
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 285252, 286153);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 286169, 286292);

                return f_10306_286176_286291(this, node, typeParameter, analyzedArguments, initializerOpt, typeSyntax, diagnostics);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10306, 284985, 286303);

                bool
                f_10306_285256_285295_M(bool
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 285256, 285295);
                    return return_v;
                }


                bool
                f_10306_285299_285325_M(bool
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 285299, 285325);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Location
                f_10306_285401_285414(Microsoft.CodeAnalysis.SyntaxNode
                this_param)
                {
                    var return_v = this_param.Location;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 285401, 285414);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo
                f_10306_285359_285430(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, Microsoft.CodeAnalysis.Location
                location, params object[]
                args)
                {
                    var return_v = diagnostics.Add(code, location, args);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 285359, 285430);
                    return return_v;
                }


                int
                f_10306_285469_285502(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                this_param)
                {
                    var return_v = this_param.Count;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 285469, 285502);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Location
                f_10306_285588_285601(Microsoft.CodeAnalysis.SyntaxNode
                this_param)
                {
                    var return_v = this_param.Location;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 285588, 285601);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo
                f_10306_285540_285617(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, Microsoft.CodeAnalysis.Location
                location, params object[]
                args)
                {
                    var return_v = diagnostics.Add(code, location, args);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 285540, 285617);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundObjectInitializerExpressionBase
                f_10306_285786_286056(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax
                syntax, Microsoft.CodeAnalysis.CSharp.Symbols.TypeParameterSymbol
                type, Microsoft.CodeAnalysis.SyntaxNode
                typeSyntax, bool
                isForNewInstance, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.BindInitializerExpression(syntax: syntax, type: (Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol)type, typeSyntax: typeSyntax, isForNewInstance: isForNewInstance, diagnostics: diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 285786, 286056);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundNewT
                f_10306_286082_286137(Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.CSharp.BoundObjectInitializerExpressionBase?
                initializerExpressionOpt, Microsoft.CodeAnalysis.CSharp.Symbols.TypeParameterSymbol
                type)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.BoundNewT(syntax, initializerExpressionOpt, (Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol)type);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 286082, 286137);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_286176_286291(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.SyntaxNode
                node, Microsoft.CodeAnalysis.CSharp.Symbols.TypeParameterSymbol
                type, Microsoft.CodeAnalysis.CSharp.AnalyzedArguments
                analyzedArguments, Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax
                initializerOpt, Microsoft.CodeAnalysis.SyntaxNode
                typeSyntax, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.MakeBadExpressionForObjectCreation(node, (Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol)type, analyzedArguments, initializerOpt, typeSyntax, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 286176, 286291);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 284985, 286303);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 284985, 286303);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private bool TryPerformConstructorOverloadResolution(
                    NamedTypeSymbol typeContainingConstructors,
                    AnalyzedArguments analyzedArguments,
                    string errorName,
                    Location errorLocation,
                    bool suppressResultDiagnostics,
                    DiagnosticBag diagnostics,
                    out MemberResolutionResult<MethodSymbol> memberResolutionResult,
                    out ImmutableArray<MethodSymbol> candidateConstructors,
                    bool allowProtectedConstructorsOfBaseType) // Last to make named arguments more convenient.
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10306, 288371, 294997);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 289041, 289094);

                ImmutableArray<MethodSymbol>
                allInstanceConstructors
                = default(ImmutableArray<MethodSymbol>);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 289108, 289158);

                HashSet<DiagnosticInfo>
                useSiteDiagnostics = null
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 289172, 289362);

                candidateConstructors = f_10306_289196_289361(this, typeContainingConstructors, allowProtectedConstructorsOfBaseType, out allInstanceConstructors, ref useSiteDiagnostics);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 289378, 289479);

                OverloadResolutionResult<MethodSymbol>
                result = f_10306_289426_289478()
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 289595, 289642);

                bool
                succeededConsideringAccessibility = false
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 289783, 289827);

                bool
                succeededIgnoringAccessibility = false
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 289843, 290398) || true) && (candidateConstructors.Any())
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 289843, 290398);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 290050, 290181);

                    f_10306_290050_290180(f_10306_290050_290073(this), candidateConstructors, analyzedArguments, result, ref useSiteDiagnostics);

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 290201, 290383) || true) && (f_10306_290205_290221(result))
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 290201, 290383);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 290263, 290304);

                        succeededConsideringAccessibility = true;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 290326, 290364);

                        succeededIgnoringAccessibility = true;
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 290201, 290383);
                    }
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 289843, 290398);
                }

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 290414, 291618) || true) && (!succeededConsideringAccessibility && (DynAbs.Tracing.TraceSender.Expression_True(10306, 290418, 290517) && allInstanceConstructors.Length > candidateConstructors.Length))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 290414, 291618);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 290912, 291025);

                    OverloadResolutionResult<MethodSymbol>
                    inaccessibleResult = f_10306_290972_291024()
                    ;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 291043, 291188);

                    f_10306_291043_291187(f_10306_291043_291066(this), allInstanceConstructors, analyzedArguments, inaccessibleResult, ref useSiteDiagnostics);

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 291208, 291603) || true) && (f_10306_291212_291240(inaccessibleResult))
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 291208, 291603);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 291282, 291320);

                        succeededIgnoringAccessibility = true;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 291342, 291390);

                        candidateConstructors = allInstanceConstructors;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 291412, 291426);

                        f_10306_291412_291425(result);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 291448, 291476);

                        result = inaccessibleResult;
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 291208, 291603);
                    }

                    else

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 291208, 291603);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 291558, 291584);

                        f_10306_291558_291583(inaccessibleResult);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 291208, 291603);
                    }
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 290414, 291618);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 291634, 291685);

                f_10306_291634_291684(
                            diagnostics, errorLocation, useSiteDiagnostics);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 291699, 291725);

                useSiteDiagnostics = null;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 291741, 291921) || true) && (succeededIgnoringAccessibility)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 291741, 291921);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 291809, 291906);

                    f_10306_291809_291905(this, f_10306_291844_291862(result), analyzedArguments.Arguments, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 291741, 291921);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 292040, 292199);

                memberResolutionResult = (DynAbs.Tracing.TraceSender.Conditional_F1(10306, 292065, 292095) || ((succeededIgnoringAccessibility && DynAbs.Tracing.TraceSender.Conditional_F2(10306, 292115, 292133)) || DynAbs.Tracing.TraceSender.Conditional_F3(10306, 292153, 292198))) ? f_10306_292115_292133(result) : default(MemberResolutionResult<MethodSymbol>);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 292645, 294901) || true) && (!succeededConsideringAccessibility && (DynAbs.Tracing.TraceSender.Expression_True(10306, 292649, 292713) && !suppressResultDiagnostics))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 292645, 294901);

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 292747, 294886) || true) && (succeededIgnoringAccessibility)
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 292747, 294886);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 294361, 294444);

                        f_10306_294361_294443(                    // It is not legal to directly call a protected constructor on a base class unless
                                                                  // the "this" of the call is known to be of the current type. That is, it is
                                                                  // perfectly legal to say ": base()" to call a protected base class ctor, but
                                                                  // it is not legal to say "new MyBase()" if the ctor is protected. 
                                                                  //
                                                                  // The native compiler produces the error CS1540:
                                                                  //
                                                                  //   Cannot access protected member 'MyBase.MyBase' via a qualifier of type 'MyBase'; 
                                                                  //   the qualifier must be of type 'Derived' (or derived from it)
                                                                  //
                                                                  // Though technically correct, this is a very confusing error message for this scenario;
                                                                  // one does not typically think of the constructor as being a method that is 
                                                                  // called with an implicit "this" of a particular receiver type, even though of course
                                                                  // that is exactly what it is.
                                                                  //
                                                                  // The better error message here is to simply say that the best possible ctor cannot
                                                                  // be accessed because it is not accessible.
                                                                  //
                                                                  // CONSIDER: We might consider making up a new error message for this situation.

                                            // 
                                            // CS0122: 'MyBase.MyBase' is inaccessible due to its protection level
                                            diagnostics, ErrorCode.ERR_BadAccess, errorLocation, result.ValidResult.Member);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 292747, 294886);
                    }

                    else

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 292747, 294886);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 294526, 294867);

                        f_10306_294526_294866(result, binder: this, location: errorLocation, nodeOpt: null, diagnostics, name: errorName, receiver: null, invokedExpression: null, analyzedArguments, memberGroup: candidateConstructors, typeContainingConstructors, delegateTypeBeingInvoked: null);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 292747, 294886);
                    }
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 292645, 294901);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 294917, 294931);

                f_10306_294917_294930(
                            result);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 294945, 294986);

                return succeededConsideringAccessibility;
                DynAbs.Tracing.TraceSender.TraceExitMethod(10306, 288371, 294997);

                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol>
                f_10306_289196_289361(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                type, bool
                allowProtectedConstructorsOfBaseType, out System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol>
                allInstanceConstructors, ref System.Collections.Generic.HashSet<Microsoft.CodeAnalysis.DiagnosticInfo>?
                useSiteDiagnostics)
                {
                    var return_v = this_param.GetAccessibleConstructorsForOverloadResolution(type, allowProtectedConstructorsOfBaseType, out allInstanceConstructors, ref useSiteDiagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 289196, 289361);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.OverloadResolutionResult<Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol>
                f_10306_289426_289478()
                {
                    var return_v = OverloadResolutionResult<MethodSymbol>.GetInstance();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 289426, 289478);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.OverloadResolution
                f_10306_290050_290073(Microsoft.CodeAnalysis.CSharp.Binder
                this_param)
                {
                    var return_v = this_param.OverloadResolution;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 290050, 290073);
                    return return_v;
                }


                int
                f_10306_290050_290180(Microsoft.CodeAnalysis.CSharp.OverloadResolution
                this_param, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol>
                constructors, Microsoft.CodeAnalysis.CSharp.AnalyzedArguments
                arguments, Microsoft.CodeAnalysis.CSharp.OverloadResolutionResult<Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol>
                result, ref System.Collections.Generic.HashSet<Microsoft.CodeAnalysis.DiagnosticInfo>
                useSiteDiagnostics)
                {
                    this_param.ObjectCreationOverloadResolution(constructors, arguments, result, ref useSiteDiagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 290050, 290180);
                    return 0;
                }


                bool
                f_10306_290205_290221(Microsoft.CodeAnalysis.CSharp.OverloadResolutionResult<Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol>
                this_param)
                {
                    var return_v = this_param.Succeeded;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 290205, 290221);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.OverloadResolutionResult<Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol>
                f_10306_290972_291024()
                {
                    var return_v = OverloadResolutionResult<MethodSymbol>.GetInstance();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 290972, 291024);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.OverloadResolution
                f_10306_291043_291066(Microsoft.CodeAnalysis.CSharp.Binder
                this_param)
                {
                    var return_v = this_param.OverloadResolution;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 291043, 291066);
                    return return_v;
                }


                int
                f_10306_291043_291187(Microsoft.CodeAnalysis.CSharp.OverloadResolution
                this_param, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol>
                constructors, Microsoft.CodeAnalysis.CSharp.AnalyzedArguments
                arguments, Microsoft.CodeAnalysis.CSharp.OverloadResolutionResult<Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol>
                result, ref System.Collections.Generic.HashSet<Microsoft.CodeAnalysis.DiagnosticInfo>
                useSiteDiagnostics)
                {
                    this_param.ObjectCreationOverloadResolution(constructors, arguments, result, ref useSiteDiagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 291043, 291187);
                    return 0;
                }


                bool
                f_10306_291212_291240(Microsoft.CodeAnalysis.CSharp.OverloadResolutionResult<Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol>
                this_param)
                {
                    var return_v = this_param.Succeeded;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 291212, 291240);
                    return return_v;
                }


                int
                f_10306_291412_291425(Microsoft.CodeAnalysis.CSharp.OverloadResolutionResult<Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol>
                this_param)
                {
                    this_param.Free();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 291412, 291425);
                    return 0;
                }


                int
                f_10306_291558_291583(Microsoft.CodeAnalysis.CSharp.OverloadResolutionResult<Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol>
                this_param)
                {
                    this_param.Free();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 291558, 291583);
                    return 0;
                }


                bool
                f_10306_291634_291684(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.Location
                location, System.Collections.Generic.HashSet<Microsoft.CodeAnalysis.DiagnosticInfo>
                useSiteDiagnostics)
                {
                    var return_v = diagnostics.Add(location, useSiteDiagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 291634, 291684);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.MemberResolutionResult<Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol>
                f_10306_291844_291862(Microsoft.CodeAnalysis.CSharp.OverloadResolutionResult<Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol>
                this_param)
                {
                    var return_v = this_param.ValidResult;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 291844, 291862);
                    return return_v;
                }


                int
                f_10306_291809_291905(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.MemberResolutionResult<Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol>
                methodResult, Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                arguments, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    this_param.CoerceArguments<Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol>(methodResult, arguments, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 291809, 291905);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.MemberResolutionResult<Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol>
                f_10306_292115_292133(Microsoft.CodeAnalysis.CSharp.OverloadResolutionResult<Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol>
                this_param)
                {
                    var return_v = this_param.ValidResult;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 292115, 292133);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo
                f_10306_294361_294443(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, Microsoft.CodeAnalysis.Location
                location, params object[]
                args)
                {
                    var return_v = diagnostics.Add(code, location, args);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 294361, 294443);
                    return return_v;
                }


                int
                f_10306_294526_294866(Microsoft.CodeAnalysis.CSharp.OverloadResolutionResult<Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol>
                this_param, Microsoft.CodeAnalysis.CSharp.Binder
                binder, Microsoft.CodeAnalysis.Location
                location, Microsoft.CodeAnalysis.SyntaxNode
                nodeOpt, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, string
                name, Microsoft.CodeAnalysis.CSharp.BoundExpression
                receiver, Microsoft.CodeAnalysis.SyntaxNode
                invokedExpression, Microsoft.CodeAnalysis.CSharp.AnalyzedArguments
                arguments, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol>
                memberGroup, Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                typeContainingConstructor, Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                delegateTypeBeingInvoked)
                {
                    this_param.ReportDiagnostics<Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol>(binder: binder, location: location, nodeOpt: nodeOpt, diagnostics, name: name, receiver: receiver, invokedExpression: invokedExpression, arguments, memberGroup: memberGroup, typeContainingConstructor, delegateTypeBeingInvoked: delegateTypeBeingInvoked);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 294526, 294866);
                    return 0;
                }


                int
                f_10306_294917_294930(Microsoft.CodeAnalysis.CSharp.OverloadResolutionResult<Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol>
                this_param)
                {
                    this_param.Free();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 294917, 294930);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 288371, 294997);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 288371, 294997);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private ImmutableArray<MethodSymbol> GetAccessibleConstructorsForOverloadResolution(NamedTypeSymbol type, ref HashSet<DiagnosticInfo> useSiteDiagnostics)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10306, 295009, 295385);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 295187, 295240);

                ImmutableArray<MethodSymbol>
                allInstanceConstructors
                = default(ImmutableArray<MethodSymbol>);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 295254, 295374);

                return f_10306_295261_295373(this, type, false, out allInstanceConstructors, ref useSiteDiagnostics);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10306, 295009, 295385);

                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol>
                f_10306_295261_295373(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                type, bool
                allowProtectedConstructorsOfBaseType, out System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol>
                allInstanceConstructors, ref System.Collections.Generic.HashSet<Microsoft.CodeAnalysis.DiagnosticInfo>
                useSiteDiagnostics)
                {
                    var return_v = this_param.GetAccessibleConstructorsForOverloadResolution(type, allowProtectedConstructorsOfBaseType, out allInstanceConstructors, ref useSiteDiagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 295261, 295373);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 295009, 295385);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 295009, 295385);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private ImmutableArray<MethodSymbol> GetAccessibleConstructorsForOverloadResolution(NamedTypeSymbol type, bool allowProtectedConstructorsOfBaseType, out ImmutableArray<MethodSymbol> allInstanceConstructors, ref HashSet<DiagnosticInfo> useSiteDiagnostics)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10306, 295397, 296249);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 295676, 296031) || true) && (f_10306_295680_295698(type))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 295676, 296031);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 295958, 296016);

                    type = f_10306_295965_295988(type) as NamedTypeSymbol ?? (DynAbs.Tracing.TraceSender.Expression_Null<Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol?>(10306, 295965, 296015) ?? type);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 295676, 296031);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 296047, 296099);

                allInstanceConstructors = f_10306_296073_296098(type);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 296113, 296238);

                return f_10306_296120_296237(this, allInstanceConstructors, allowProtectedConstructorsOfBaseType, ref useSiteDiagnostics);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10306, 295397, 296249);

                bool
                f_10306_295680_295698(Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                type)
                {
                    var return_v = type.IsErrorType();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 295680, 295698);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?
                f_10306_295965_295988(Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                type)
                {
                    var return_v = type.GetNonErrorGuess();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 295965, 295988);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol>
                f_10306_296073_296098(Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                this_param)
                {
                    var return_v = this_param.InstanceConstructors;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 296073, 296098);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol>
                f_10306_296120_296237(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol>
                constructors, bool
                allowProtectedConstructorsOfBaseType, ref System.Collections.Generic.HashSet<Microsoft.CodeAnalysis.DiagnosticInfo>
                useSiteDiagnostics)
                {
                    var return_v = this_param.FilterInaccessibleConstructors(constructors, allowProtectedConstructorsOfBaseType, ref useSiteDiagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 296120, 296237);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 295397, 296249);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 295397, 296249);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private static ConstantValue FoldParameterlessValueTypeConstructor(NamedTypeSymbol type)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterStaticMethod(10306, 296261, 297847);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 296863, 296898);

                var
                specialType = f_10306_296881_296897(type)
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 296914, 297047) || true) && (f_10306_296918_296931(type) == TypeKind.Enum)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 296914, 297047);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 296982, 297032);

                    specialType = f_10306_296996_297031(f_10306_296996_297019(type));
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 296914, 297047);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 297063, 297808);

                switch (specialType)
                {

                    case SpecialType.System_SByte:
                    case SpecialType.System_Int16:
                    case SpecialType.System_Int32:
                    case SpecialType.System_Int64:
                    case SpecialType.System_Byte:
                    case SpecialType.System_UInt16:
                    case SpecialType.System_UInt32:
                    case SpecialType.System_UInt64:
                    case SpecialType.System_Single:
                    case SpecialType.System_Double:
                    case SpecialType.System_Decimal:
                    case SpecialType.System_Boolean:
                    case SpecialType.System_Char:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 297063, 297808);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 297751, 297793);

                        return f_10306_297758_297792(specialType);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 297063, 297808);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 297824, 297836);

                return null;
                DynAbs.Tracing.TraceSender.TraceExitStaticMethod(10306, 296261, 297847);

                Microsoft.CodeAnalysis.SpecialType
                f_10306_296881_296897(Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                this_param)
                {
                    var return_v = this_param.SpecialType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 296881, 296897);
                    return return_v;
                }


                Microsoft.CodeAnalysis.TypeKind
                f_10306_296918_296931(Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                this_param)
                {
                    var return_v = this_param.TypeKind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 296918, 296931);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                f_10306_296996_297019(Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                this_param)
                {
                    var return_v = this_param.EnumUnderlyingType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 296996, 297019);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SpecialType
                f_10306_296996_297031(Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                this_param)
                {
                    var return_v = this_param.SpecialType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 296996, 297031);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ConstantValue
                f_10306_297758_297792(Microsoft.CodeAnalysis.SpecialType
                st)
                {
                    var return_v = ConstantValue.Default(st);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 297758, 297792);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 296261, 297847);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 296261, 297847);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private BoundLiteral BindLiteralConstant(LiteralExpressionSyntax node, DiagnosticBag diagnostics)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10306, 297859, 299100);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 298054, 298083);

                var
                value = node.Token.Value
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 298099, 298116);

                ConstantValue
                cv
                = default(ConstantValue);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 298130, 298153);

                TypeSymbol
                type = null
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 298169, 299033) || true) && (value == null)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 298169, 299033);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 298220, 298244);

                    cv = f_10306_298225_298243();
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 298169, 299033);
                }

                else

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 298169, 299033);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 298310, 298362);

                    f_10306_298310_298361(f_10306_298323_298360_M(!f_10306_298324_298353(f_10306_298324_298339(value)).IsEnum));
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 298382, 298459);

                    var
                    specialType = f_10306_298400_298458(value)
                    ;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 298556, 298880);

                    f_10306_298556_298879(specialType != SpecialType.None && (DynAbs.Tracing.TraceSender.Expression_True(10306, 298591, 298685) && specialType != SpecialType.System_Byte) && (DynAbs.Tracing.TraceSender.Expression_True(10306, 298591, 298749) && specialType != SpecialType.System_SByte) && (DynAbs.Tracing.TraceSender.Expression_True(10306, 298591, 298813) && specialType != SpecialType.System_Int16) && (DynAbs.Tracing.TraceSender.Expression_True(10306, 298591, 298878) && specialType != SpecialType.System_UInt16));
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 298900, 298946);

                    cv = f_10306_298905_298945(value, specialType);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 298964, 299018);

                    type = f_10306_298971_299017(this, specialType, diagnostics, node);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 298169, 299033);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 299049, 299089);

                return f_10306_299056_299088(node, cv, type);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10306, 297859, 299100);

                Microsoft.CodeAnalysis.ConstantValue
                f_10306_298225_298243()
                {
                    var return_v = ConstantValue.Null;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 298225, 298243);
                    return return_v;
                }


                System.Type
                f_10306_298324_298339(object
                this_param)
                {
                    var return_v = this_param.GetType();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 298324, 298339);
                    return return_v;
                }


                System.Reflection.TypeInfo
                f_10306_298324_298353(System.Type
                type)
                {
                    var return_v = type.GetTypeInfo();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 298324, 298353);
                    return return_v;
                }


                bool
                f_10306_298323_298360_M(bool
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 298323, 298360);
                    return return_v;
                }


                int
                f_10306_298310_298361(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 298310, 298361);
                    return 0;
                }


                Microsoft.CodeAnalysis.SpecialType
                f_10306_298400_298458(object
                value)
                {
                    var return_v = SpecialTypeExtensions.FromRuntimeTypeOfLiteralValue(value);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 298400, 298458);
                    return return_v;
                }


                int
                f_10306_298556_298879(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 298556, 298879);
                    return 0;
                }


                Microsoft.CodeAnalysis.ConstantValue
                f_10306_298905_298945(object
                value, Microsoft.CodeAnalysis.SpecialType
                st)
                {
                    var return_v = ConstantValue.Create(value, st);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 298905, 298945);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                f_10306_298971_299017(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.SpecialType
                typeId, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.Syntax.LiteralExpressionSyntax
                node)
                {
                    var return_v = this_param.GetSpecialType(typeId, diagnostics, (Microsoft.CodeAnalysis.SyntaxNode)node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 298971, 299017);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundLiteral
                f_10306_299056_299088(Microsoft.CodeAnalysis.CSharp.Syntax.LiteralExpressionSyntax
                syntax, Microsoft.CodeAnalysis.ConstantValue
                constantValueOpt, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?
                type)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.BoundLiteral((Microsoft.CodeAnalysis.SyntaxNode)syntax, constantValueOpt, type);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 299056, 299088);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 297859, 299100);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 297859, 299100);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private BoundExpression BindCheckedExpression(CheckedExpressionSyntax node, DiagnosticBag diagnostics)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10306, 299112, 299497);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 299324, 299486);

                return f_10306_299331_299485(f_10306_299331_299409(this, f_10306_299365_299376(node) == SyntaxKind.CheckedExpression), f_10306_299456_299471(node), diagnostics);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10306, 299112, 299497);

                Microsoft.CodeAnalysis.CSharp.SyntaxKind
                f_10306_299365_299376(Microsoft.CodeAnalysis.CSharp.Syntax.CheckedExpressionSyntax
                this_param)
                {
                    var return_v = this_param.Kind();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 299365, 299376);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Binder
                f_10306_299331_299409(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, bool
                @checked)
                {
                    var return_v = this_param.WithCheckedOrUncheckedRegion(@checked);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 299331, 299409);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                f_10306_299456_299471(Microsoft.CodeAnalysis.CSharp.Syntax.CheckedExpressionSyntax
                this_param)
                {
                    var return_v = this_param.Expression;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 299456, 299471);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_299331_299485(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                innerExpression, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.BindParenthesizedExpression(innerExpression, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 299331, 299485);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 299112, 299497);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 299112, 299497);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private BoundExpression BindMemberAccess(
                    MemberAccessExpressionSyntax node,
                    bool invoked,
                    bool indexed,
                    DiagnosticBag diagnostics)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10306, 299602, 301823);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 299810, 299837);

                f_10306_299810_299836(node != null);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 299853, 299879);

                BoundExpression
                boundLeft
                = default(BoundExpression);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 299895, 299941);

                ExpressionSyntax
                exprSyntax = f_10306_299925_299940(node)
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 299955, 301680) || true) && (f_10306_299959_299970(node) == SyntaxKind.SimpleMemberAccessExpression)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 299955, 301680);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 300144, 300223);

                    boundLeft = f_10306_300156_300222(this, exprSyntax, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 299955, 301680);
                }

                else

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 299955, 301680);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 300289, 300359);

                    f_10306_300289_300358(f_10306_300302_300313(node) == SyntaxKind.PointerMemberAccessExpression);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 300377, 300442);

                    boundLeft = f_10306_300389_300441(this, exprSyntax, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 300860, 300885);

                    TypeSymbol
                    pointedAtType
                    = default(TypeSymbol);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 300903, 300918);

                    bool
                    hasErrors
                    = default(bool);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 300936, 301041);

                    f_10306_300936_301040(node, boundLeft, diagnostics, out pointedAtType, out hasErrors);

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 301192, 301665) || true) && (f_10306_301196_301232(pointedAtType, null))
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 301192, 301665);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 301274, 301313);

                        boundLeft = f_10306_301286_301312(this, boundLeft);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 301192, 301665);
                    }

                    else

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 301192, 301665);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 301395, 301646);

                        boundLeft = new BoundPointerIndirectionOperator(exprSyntax, boundLeft, pointedAtType, hasErrors)
                        {
                            WasCompilerGenerated = DynAbs.Tracing.TraceSender.TraceInitializationWrapper(() => true, 10306, 301407, 301645)
                        };
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 301192, 301665);
                    }
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 299955, 301680);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 301696, 301812);

                return f_10306_301703_301811(this, node, boundLeft, f_10306_301750_301759(node), f_10306_301761_301779(node), invoked, indexed, diagnostics);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10306, 299602, 301823);

                int
                f_10306_299810_299836(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 299810, 299836);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                f_10306_299925_299940(Microsoft.CodeAnalysis.CSharp.Syntax.MemberAccessExpressionSyntax
                this_param)
                {
                    var return_v = this_param.Expression;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 299925, 299940);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.SyntaxKind
                f_10306_299959_299970(Microsoft.CodeAnalysis.CSharp.Syntax.MemberAccessExpressionSyntax
                this_param)
                {
                    var return_v = this_param.Kind();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 299959, 299970);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_300156_300222(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                left, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.BindLeftOfPotentialColorColorMemberAccess(left, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 300156, 300222);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.SyntaxKind
                f_10306_300302_300313(Microsoft.CodeAnalysis.CSharp.Syntax.MemberAccessExpressionSyntax
                this_param)
                {
                    var return_v = this_param.Kind();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 300302, 300313);
                    return return_v;
                }


                int
                f_10306_300289_300358(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 300289, 300358);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_300389_300441(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                node, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.BindRValueWithoutTargetType(node, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 300389, 300441);
                    return return_v;
                }


                int
                f_10306_300936_301040(Microsoft.CodeAnalysis.CSharp.Syntax.MemberAccessExpressionSyntax
                node, Microsoft.CodeAnalysis.CSharp.BoundExpression
                operand, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, out Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                pointedAtType, out bool
                hasErrors)
                {
                    BindPointerIndirectionExpressionInternal((Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode)node, operand, diagnostics, out pointedAtType, out hasErrors);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 300936, 301040);
                    return 0;
                }


                bool
                f_10306_301196_301232(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                objA, object?
                objB)
                {
                    var return_v = ReferenceEquals((object)objA, objB);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 301196, 301232);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_301286_301312(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                expr)
                {
                    var return_v = this_param.ToBadExpression(expr);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 301286, 301312);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Syntax.SimpleNameSyntax
                f_10306_301750_301759(Microsoft.CodeAnalysis.CSharp.Syntax.MemberAccessExpressionSyntax
                this_param)
                {
                    var return_v = this_param.Name;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 301750, 301759);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SyntaxToken
                f_10306_301761_301779(Microsoft.CodeAnalysis.CSharp.Syntax.MemberAccessExpressionSyntax
                this_param)
                {
                    var return_v = this_param.OperatorToken;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 301761, 301779);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_301703_301811(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.MemberAccessExpressionSyntax
                node, Microsoft.CodeAnalysis.CSharp.BoundExpression
                boundLeft, Microsoft.CodeAnalysis.CSharp.Syntax.SimpleNameSyntax
                right, Microsoft.CodeAnalysis.SyntaxToken
                operatorToken, bool
                invoked, bool
                indexed, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.BindMemberAccessWithBoundLeft((Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)node, boundLeft, right, operatorToken, invoked, indexed, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 301703, 301811);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 299602, 301823);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 299602, 301823);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private BoundExpression BindLeftOfPotentialColorColorMemberAccess(ExpressionSyntax left, DiagnosticBag diagnostics)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10306, 302183, 306222);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 303091, 306075) || true) && (f_10306_303095_303106(left) == SyntaxKind.IdentifierName)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 303091, 306075);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 303169, 303207);

                    var
                    node = (IdentifierNameSyntax)left
                    ;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 303225, 303276);

                    var
                    valueDiagnostics = f_10306_303248_303275()
                    ;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 303294, 303395);

                    var
                    boundValue = f_10306_303311_303394(this, node, invoked: false, indexed: false, diagnostics: valueDiagnostics)
                    ;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 303415, 303433);

                    Symbol
                    leftSymbol
                    = default(Symbol);

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 303451, 303887) || true) && (f_10306_303455_303470(boundValue) == BoundKind.Conversion)
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 303451, 303887);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 303677, 303745);

                        leftSymbol = f_10306_303690_303744(f_10306_303690_303727(((BoundConversion)boundValue)));
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 303451, 303887);
                    }

                    else

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 303451, 303887);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 303827, 303868);

                        leftSymbol = f_10306_303840_303867(boundValue);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 303451, 303887);
                    }

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 303907, 305806) || true) && ((object)leftSymbol != null)
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 303907, 305806);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 303979, 305787);

                        switch (f_10306_303987_304002(leftSymbol))
                        {

                            case SymbolKind.Field:
                            case SymbolKind.Local:
                            case SymbolKind.Parameter:
                            case SymbolKind.Property:
                            case SymbolKind.RangeVariable:
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 303979, 305787);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 304311, 304342);

                                var
                                leftType = f_10306_304326_304341(boundValue)
                                ;
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 304372, 304411);

                                f_10306_304372_304410((object)leftType != null);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 304443, 304484);

                                var
                                leftName = node.Identifier.ValueText
                                ;

                                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 304514, 305613) || true) && (f_10306_304518_304531(leftType) == leftName || (DynAbs.Tracing.TraceSender.Expression_False(10306, 304518, 304576) || f_10306_304547_304576(this, leftName)))
                                )

                                {
                                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 304514, 305613);
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 304642, 304684);

                                    var
                                    typeDiagnostics = f_10306_304664_304683()
                                    ;
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 304718, 304777);

                                    var
                                    boundType = f_10306_304734_304776(this, node, typeDiagnostics)
                                    ;

                                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 304811, 305582) || true) && (f_10306_304815_304895(f_10306_304833_304847(boundType), leftType, TypeCompareKind.ConsiderEverything2))
                                    )

                                    {
                                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 304811, 305582);
                                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 305075, 305121);

                                        var
                                        newValueDiagnostics = f_10306_305101_305120()
                                        ;
                                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 305159, 305213);

                                        f_10306_305159_305212(newValueDiagnostics, valueDiagnostics);
                                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 305251, 305315);

                                        boundValue = f_10306_305264_305314(this, boundValue, newValueDiagnostics);
                                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 305353, 305547);

                                        return f_10306_305360_305546(left, f_10306_305438_305535(leftSymbol, boundValue, newValueDiagnostics, boundType, typeDiagnostics), leftType);
                                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 304811, 305582);
                                    }
                                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 304514, 305613);
                                }
                                DynAbs.Tracing.TraceSender.TraceBreak(10306, 305643, 305649);

                                break;
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 303979, 305787);

                                // case SymbolKind.Event: //SPEC: 7.6.4.1 (a.k.a. Color Color) doesn't cover events
                        }
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 303907, 305806);
                    }
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 305978, 306024);

                    f_10306_305978_306023(
                                    // Not a Color Color case; return the bound member.
                                    // NOTE: it is up to the caller to call CheckValue on the result.
                                    diagnostics, valueDiagnostics);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 306042, 306060);

                    return boundValue;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 303091, 306075);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 306170, 306211);

                return f_10306_306177_306210(this, left, diagnostics);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10306, 302183, 306222);

                Microsoft.CodeAnalysis.CSharp.SyntaxKind
                f_10306_303095_303106(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                this_param)
                {
                    var return_v = this_param.Kind();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 303095, 303106);
                    return return_v;
                }


                Microsoft.CodeAnalysis.DiagnosticBag
                f_10306_303248_303275()
                {
                    var return_v = DiagnosticBag.GetInstance();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 303248, 303275);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_303311_303394(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.IdentifierNameSyntax
                node, bool
                invoked, bool
                indexed, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.BindIdentifier((Microsoft.CodeAnalysis.CSharp.Syntax.SimpleNameSyntax)node, invoked: invoked, indexed: indexed, diagnostics: diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 303311, 303394);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundKind
                f_10306_303455_303470(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.Kind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 303455, 303470);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_303690_303727(Microsoft.CodeAnalysis.CSharp.BoundConversion
                this_param)
                {
                    var return_v = this_param.Operand;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 303690, 303727);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbol?
                f_10306_303690_303744(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.ExpressionSymbol;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 303690, 303744);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbol?
                f_10306_303840_303867(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.ExpressionSymbol;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 303840, 303867);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SymbolKind
                f_10306_303987_304002(Microsoft.CodeAnalysis.CSharp.Symbol
                this_param)
                {
                    var return_v = this_param.Kind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 303987, 304002);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?
                f_10306_304326_304341(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 304326, 304341);
                    return return_v;
                }


                int
                f_10306_304372_304410(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 304372, 304410);
                    return 0;
                }


                string
                f_10306_304518_304531(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                this_param)
                {
                    var return_v = this_param.Name;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 304518, 304531);
                    return return_v;
                }


                bool
                f_10306_304547_304576(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, string
                name)
                {
                    var return_v = this_param.IsUsingAliasInScope(name);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 304547, 304576);
                    return return_v;
                }


                Microsoft.CodeAnalysis.DiagnosticBag
                f_10306_304664_304683()
                {
                    var return_v = new Microsoft.CodeAnalysis.DiagnosticBag();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 304664, 304683);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_304734_304776(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.IdentifierNameSyntax
                node, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.BindNamespaceOrType((Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)node, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 304734, 304776);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?
                f_10306_304833_304847(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 304833, 304847);
                    return return_v;
                }


                bool
                f_10306_304815_304895(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?
                left, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                right, Microsoft.CodeAnalysis.TypeCompareKind
                comparison)
                {
                    var return_v = TypeSymbol.Equals(left, right, comparison);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 304815, 304895);
                    return return_v;
                }


                Microsoft.CodeAnalysis.DiagnosticBag
                f_10306_305101_305120()
                {
                    var return_v = new Microsoft.CodeAnalysis.DiagnosticBag();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 305101, 305120);
                    return return_v;
                }


                int
                f_10306_305159_305212(Microsoft.CodeAnalysis.DiagnosticBag
                this_param, Microsoft.CodeAnalysis.DiagnosticBag
                bag)
                {
                    this_param.AddRangeAndFree(bag);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 305159, 305212);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_305264_305314(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                expression, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.BindToNaturalType(expression, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 305264, 305314);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundTypeOrValueData
                f_10306_305438_305535(Microsoft.CodeAnalysis.CSharp.Symbol
                valueSymbol, Microsoft.CodeAnalysis.CSharp.BoundExpression
                valueExpression, Microsoft.CodeAnalysis.DiagnosticBag
                valueDiagnostics, Microsoft.CodeAnalysis.CSharp.BoundExpression
                typeExpression, Microsoft.CodeAnalysis.DiagnosticBag
                typeDiagnostics)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.BoundTypeOrValueData(valueSymbol, valueExpression, valueDiagnostics, typeExpression, typeDiagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 305438, 305535);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundTypeOrValueExpression
                f_10306_305360_305546(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                syntax, Microsoft.CodeAnalysis.CSharp.BoundTypeOrValueData
                data, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                type)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.BoundTypeOrValueExpression((Microsoft.CodeAnalysis.SyntaxNode)syntax, data, type);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 305360, 305546);
                    return return_v;
                }


                int
                f_10306_305978_306023(Microsoft.CodeAnalysis.DiagnosticBag
                this_param, Microsoft.CodeAnalysis.DiagnosticBag
                bag)
                {
                    this_param.AddRangeAndFree(bag);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 305978, 306023);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_306177_306210(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                node, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.BindExpression(node, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 306177, 306210);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 302183, 306222);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 302183, 306222);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private bool IsUsingAliasInScope(string name)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10306, 306389, 306810);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 306459, 306508);

                var
                isSemanticModel = f_10306_306481_306507(this)
                ;
                try
                {
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 306531, 306555);
                    for (var
        chain = f_10306_306539_306555(this)
        ; (DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 306522, 306770) || true) && (chain != null)
        ; DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 306572, 306595)
        , chain = chain.ParentOpt, DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 306522, 306770))

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 306522, 306770);

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 306629, 306755) || true) && (f_10306_306633_306682(chain.Imports, name, isSemanticModel))
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 306629, 306755);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 306724, 306736);

                            return true;
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 306629, 306755);
                        }
                    }
                }
                catch (System.Exception)
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoopByException(10306, 1, 249);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoop(10306, 1, 249);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 306786, 306799);

                return false;
                DynAbs.Tracing.TraceSender.TraceExitMethod(10306, 306389, 306810);

                bool
                f_10306_306481_306507(Microsoft.CodeAnalysis.CSharp.Binder
                this_param)
                {
                    var return_v = this_param.IsSemanticModelBinder;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 306481, 306507);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.ImportChain?
                f_10306_306539_306555(Microsoft.CodeAnalysis.CSharp.Binder
                this_param)
                {
                    var return_v = this_param.ImportChain;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 306539, 306555);
                    return return_v;
                }


                bool
                f_10306_306633_306682(Microsoft.CodeAnalysis.CSharp.Imports
                this_param, string
                name, bool
                callerIsSemanticModel)
                {
                    var return_v = this_param.IsUsingAlias(name, callerIsSemanticModel);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 306633, 306682);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 306389, 306810);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 306389, 306810);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private BoundExpression BindDynamicMemberAccess(
                    ExpressionSyntax node,
                    BoundExpression boundLeft,
                    SimpleNameSyntax right,
                    bool invoked,
                    bool indexed,
                    DiagnosticBag diagnostics)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10306, 306822, 309173);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 307190, 307416);

                SeparatedSyntaxList<TypeSyntax>
                typeArgumentsSyntax = (DynAbs.Tracing.TraceSender.Conditional_F1(10306, 307244, 307282) || ((f_10306_307244_307256(right) == SyntaxKind.GenericName && DynAbs.Tracing.TraceSender.Conditional_F2(10306, 307302, 307355)) || DynAbs.Tracing.TraceSender.Conditional_F3(10306, 307375, 307415))) ? f_10306_307302_307355(f_10306_307302_307345(((GenericNameSyntax)right))) : default(SeparatedSyntaxList<TypeSyntax>)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 307430, 307489);

                bool
                rightHasTypeArguments = typeArgumentsSyntax.Count > 0
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 307503, 307727);

                ImmutableArray<TypeWithAnnotations>
                typeArgumentsWithAnnotations = (DynAbs.Tracing.TraceSender.Conditional_F1(10306, 307570, 307591) || ((rightHasTypeArguments && DynAbs.Tracing.TraceSender.Conditional_F2(10306, 307611, 307662)) || DynAbs.Tracing.TraceSender.Conditional_F3(10306, 307682, 307726))) ? f_10306_307611_307662(this, typeArgumentsSyntax, diagnostics) : default(ImmutableArray<TypeWithAnnotations>)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 307743, 307766);

                bool
                hasErrors = false
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 307782, 308104) || true) && (!invoked && (DynAbs.Tracing.TraceSender.Expression_True(10306, 307786, 307819) && rightHasTypeArguments))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 307782, 308104);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 307939, 308054);

                    f_10306_307939_308053(diagnostics, ErrorCode.ERR_TypeArgsNotAllowed, right, right.Identifier.Text, f_10306_308022_308052(SymbolKind.Property));
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 308072, 308089);

                    hasErrors = true;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 307782, 308104);
                }

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 308120, 308767) || true) && (rightHasTypeArguments)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 308120, 308767);
                    try
                    {
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 308188, 308193);
                        for (int
        i = 0
        ; (DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 308179, 308752) || true) && (i < typeArgumentsWithAnnotations.Length)
        ; DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 308236, 308239)
        , ++i, DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 308179, 308752))

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 308179, 308752);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 308281, 308332);

                            var
                            typeArgument = typeArgumentsWithAnnotations[i]
                            ;

                            if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 308354, 308733) || true) && (f_10306_308358_308404(typeArgument.Type) || (DynAbs.Tracing.TraceSender.Expression_False(10306, 308358, 308444) || f_10306_308408_308444(typeArgument.Type)))
                            )

                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 308354, 308733);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 308574, 308667);

                                f_10306_308574_308666(diagnostics, ErrorCode.ERR_BadTypeArgument, typeArgumentsSyntax[i], typeArgument.Type);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 308693, 308710);

                                hasErrors = true;
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 308354, 308733);
                            }
                        }
                    }
                    catch (System.Exception)
                    {
                        DynAbs.Tracing.TraceSender.TraceExitLoopByException(10306, 1, 574);
                        throw;
                    }
                    finally
                    {
                        DynAbs.Tracing.TraceSender.TraceExitLoop(10306, 1, 574);
                    }
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 308120, 308767);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 308783, 309162);

                return f_10306_308790_309161(syntax: node, receiver: boundLeft, typeArgumentsOpt: typeArgumentsWithAnnotations, name: right.Identifier.ValueText, invoked: invoked, indexed: indexed, type: f_10306_309098_309121(f_10306_309098_309109()), hasErrors: hasErrors);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10306, 306822, 309173);

                Microsoft.CodeAnalysis.CSharp.SyntaxKind
                f_10306_307244_307256(Microsoft.CodeAnalysis.CSharp.Syntax.SimpleNameSyntax
                this_param)
                {
                    var return_v = this_param.Kind();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 307244, 307256);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Syntax.TypeArgumentListSyntax
                f_10306_307302_307345(Microsoft.CodeAnalysis.CSharp.Syntax.GenericNameSyntax
                this_param)
                {
                    var return_v = this_param.TypeArgumentList;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 307302, 307345);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SeparatedSyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax>
                f_10306_307302_307355(Microsoft.CodeAnalysis.CSharp.Syntax.TypeArgumentListSyntax
                this_param)
                {
                    var return_v = this_param.Arguments;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 307302, 307355);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations>
                f_10306_307611_307662(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.SeparatedSyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax>
                typeArguments, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.BindTypeArguments(typeArguments, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 307611, 307662);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.LocalizableErrorArgument
                f_10306_308022_308052(Microsoft.CodeAnalysis.SymbolKind
                kind)
                {
                    var return_v = kind.Localize();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 308022, 308052);
                    return return_v;
                }


                int
                f_10306_307939_308053(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, Microsoft.CodeAnalysis.CSharp.Syntax.SimpleNameSyntax
                syntax, params object[]
                args)
                {
                    Error(diagnostics, code, (Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode)syntax, args);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 307939, 308053);
                    return 0;
                }


                bool
                f_10306_308358_308404(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                type)
                {
                    var return_v = type.IsPointerOrFunctionPointer();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 308358, 308404);
                    return return_v;
                }


                bool
                f_10306_308408_308444(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                type)
                {
                    var return_v = type.IsRestrictedType();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 308408, 308444);
                    return return_v;
                }


                int
                f_10306_308574_308666(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax
                syntax, params object[]
                args)
                {
                    Error(diagnostics, code, (Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode)syntax, args);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 308574, 308666);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                f_10306_309098_309109()
                {
                    var return_v = Compilation;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 309098, 309109);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                f_10306_309098_309121(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param)
                {
                    var return_v = this_param.DynamicType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 309098, 309121);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundDynamicMemberAccess
                f_10306_308790_309161(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                syntax, Microsoft.CodeAnalysis.CSharp.BoundExpression
                receiver, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations>
                typeArgumentsOpt, string
                name, bool
                invoked, bool
                indexed, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                type, bool
                hasErrors)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.BoundDynamicMemberAccess(syntax: (Microsoft.CodeAnalysis.SyntaxNode)syntax, receiver: receiver, typeArgumentsOpt: typeArgumentsOpt, name: name, invoked: invoked, indexed: indexed, type: type, hasErrors: hasErrors);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 308790, 309161);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 306822, 309173);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 306822, 309173);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private BoundExpression BindMemberAccessWithBoundLeft(
                    ExpressionSyntax node,
                    BoundExpression boundLeft,
                    SimpleNameSyntax right,
                    SyntaxToken operatorToken,
                    bool invoked,
                    bool indexed,
                    DiagnosticBag diagnostics)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10306, 309646, 322626);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 309972, 309999);

                f_10306_309972_309998(node != null);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 310013, 310045);

                f_10306_310013_310044(boundLeft != null);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 310061, 310119);

                boundLeft = f_10306_310073_310118(this, boundLeft, diagnostics);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 310135, 310172);

                TypeSymbol
                leftType = f_10306_310157_310171(boundLeft)
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 310188, 310888) || true) && ((object)leftType != null && (DynAbs.Tracing.TraceSender.Expression_True(10306, 310192, 310240) && f_10306_310220_310240(leftType)))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 310188, 310888);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 310700, 310769);

                    boundLeft = f_10306_310712_310768(this, boundLeft, BindValueKind.RValue, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 310787, 310873);

                    return f_10306_310794_310872(this, node, boundLeft, right, invoked, indexed, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 310188, 310888);
                }

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 310947, 311229) || true) && ((object)leftType != null && (DynAbs.Tracing.TraceSender.Expression_True(10306, 310951, 311000) && f_10306_310979_311000(leftType)))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 310947, 311229);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 311034, 311158);

                    f_10306_311034_311157(diagnostics, ErrorCode.ERR_BadUnaryOp, operatorToken.GetLocation(), f_10306_311105_311146(operatorToken.Kind()), leftType);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 311176, 311214);

                    return f_10306_311183_311213(this, node, boundLeft);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 310947, 311229);
                }

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 311291, 311681) || true) && (f_10306_311295_311323(boundLeft))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 311291, 311681);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 311357, 311513);

                    DiagnosticInfo
                    diagnosticInfo = f_10306_311389_311512(ErrorCode.ERR_BadOpOnNullOrDefaultOrNew, f_10306_311451_311492(operatorToken.Kind()), f_10306_311494_311511(boundLeft))
                    ;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 311531, 311610);

                    f_10306_311531_311609(diagnostics, f_10306_311547_311608(diagnosticInfo, operatorToken.GetLocation()));
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 311628, 311666);

                    return f_10306_311635_311665(this, node, boundLeft);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 311291, 311681);
                }

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 311697, 312091) || true) && (f_10306_311701_311715(boundLeft) == BoundKind.UnboundLambda)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 311697, 312091);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 311776, 311815);

                    f_10306_311776_311814((object)leftType == null);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 311835, 311884);

                    var
                    msgId = f_10306_311847_311883(((UnboundLambda)boundLeft))
                    ;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 311902, 312020);

                    f_10306_311902_312019(diagnostics, ErrorCode.ERR_BadUnaryOp, f_10306_311944_311957(node), f_10306_311959_312000(operatorToken.Kind()), f_10306_312002_312018(msgId));
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 312038, 312076);

                    return f_10306_312045_312075(this, node, boundLeft);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 311697, 312091);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 312107, 312161);

                boundLeft = f_10306_312119_312160(this, boundLeft, diagnostics);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 312175, 312201);

                leftType = f_10306_312186_312200(boundLeft);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 312215, 312261);

                var
                lookupResult = f_10306_312234_312260()
                ;
                try
                {
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 312311, 312371);

                    LookupOptions
                    options = LookupOptions.AllMethodsOnArityZero
                    ;

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 312389, 312510) || true) && (invoked)
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 312389, 312510);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 312442, 312491);

                        options |= LookupOptions.MustBeInvocableIfMember;
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 312389, 312510);
                    }
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 312530, 312694);

                    var
                    typeArgumentsSyntax = (DynAbs.Tracing.TraceSender.Conditional_F1(10306, 312556, 312594) || ((f_10306_312556_312568(right) == SyntaxKind.GenericName && DynAbs.Tracing.TraceSender.Conditional_F2(10306, 312597, 312650)) || DynAbs.Tracing.TraceSender.Conditional_F3(10306, 312653, 312693))) ? f_10306_312597_312650(f_10306_312597_312640(((GenericNameSyntax)right))) : default(SeparatedSyntaxList<TypeSyntax>)
                    ;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 312712, 312771);

                    bool
                    rightHasTypeArguments = typeArgumentsSyntax.Count > 0
                    ;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 312789, 312932);

                    var
                    typeArguments = (DynAbs.Tracing.TraceSender.Conditional_F1(10306, 312809, 312830) || ((rightHasTypeArguments && DynAbs.Tracing.TraceSender.Conditional_F2(10306, 312833, 312884)) || DynAbs.Tracing.TraceSender.Conditional_F3(10306, 312887, 312931))) ? f_10306_312833_312884(this, typeArgumentsSyntax, diagnostics) : default(ImmutableArray<TypeWithAnnotations>)
                    ;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 314288, 314331);

                    var
                    rightName = right.Identifier.ValueText
                    ;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 314349, 314378);

                    var
                    rightArity = f_10306_314366_314377(right)
                    ;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 314398, 322236);

                    switch (f_10306_314406_314420(boundLeft))
                    {

                        case BoundKind.NamespaceExpression:
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 314398, 322236);
                            {
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 314737, 314800);

                                var
                                ns = f_10306_314746_314799(((BoundNamespaceExpression)boundLeft))
                                ;
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 314830, 314880);

                                HashSet<DiagnosticInfo>
                                useSiteDiagnostics = null
                                ;
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 314910, 315024);

                                f_10306_314910_315023(this, lookupResult, ns, rightName, rightArity, ref useSiteDiagnostics, options: options);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 315054, 315097);

                                f_10306_315054_315096(diagnostics, right, useSiteDiagnostics);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 315129, 315181);

                                ArrayBuilder<Symbol>
                                symbols = f_10306_315160_315180(lookupResult)
                                ;

                                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 315213, 318273) || true) && (f_10306_315217_315243(lookupResult))
                                )

                                {
                                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 315213, 318273);
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 315309, 315323);

                                    bool
                                    wasError
                                    = default(bool);
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 315357, 315473);

                                    Symbol
                                    sym = f_10306_315370_315472(this, lookupResult, rightName, rightArity, node, diagnostics, false, out wasError, ns, options)
                                    ;

                                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 315507, 316823) || true) && (wasError)
                                    )

                                    {
                                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 315507, 316823);
                                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 315593, 315772);

                                        return f_10306_315600_315771(node, LookupResultKind.Ambiguous, f_10306_315657_315691(f_10306_315657_315677(lookupResult)), f_10306_315693_315725(boundLeft), f_10306_315727_315753(this, rightName), hasErrors: true);
                                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 315507, 316823);
                                    }

                                    else
                                    {
                                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 315507, 316823);

                                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 315846, 316823) || true) && (f_10306_315850_315858(sym) == SymbolKind.Namespace)
                                        )

                                        {
                                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 315846, 316823);
                                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 315956, 316020);

                                            return f_10306_315963_316019(node, (NamespaceSymbol)sym);
                                            DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 315846, 316823);
                                        }

                                        else

                                        {
                                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 315846, 316823);
                                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 316166, 316213);

                                            f_10306_316166_316212(f_10306_316179_316187(sym) == SymbolKind.NamedType);
                                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 316251, 316283);

                                            var
                                            type = (NamedTypeSymbol)sym
                                            ;

                                            if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 316323, 316582) || true) && (rightHasTypeArguments)
                                            )

                                            {
                                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 316323, 316582);
                                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 316430, 316543);

                                                type = f_10306_316437_316542(this, right, type, typeArgumentsSyntax, typeArguments, diagnostics);
                                                DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 316323, 316582);
                                            }
                                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 316622, 316699);

                                            f_10306_316622_316698(this, diagnostics, type, node, hasBaseReceiver: false);
                                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 316739, 316788);

                                            return f_10306_316746_316787(node, null, type);
                                            DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 315846, 316823);
                                        }
                                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 315507, 316823);
                                    }
                                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 315213, 318273);
                                }

                                else
                                {
                                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 315213, 318273);

                                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 316889, 318273) || true) && (f_10306_316893_316910(lookupResult) == LookupResultKind.WrongArity)
                                    )

                                    {
                                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 316889, 318273);
                                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 317007, 317039);

                                        f_10306_317007_317038(f_10306_317020_317033(symbols) > 0);
                                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 317073, 317127);

                                        f_10306_317073_317126(f_10306_317086_317101(f_10306_317086_317096(symbols, 0)) == SymbolKind.NamedType);
                                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 317163, 317209);

                                        f_10306_317163_317208(diagnostics, f_10306_317182_317200(lookupResult), right);
                                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 317245, 317478);

                                        return f_10306_317252_317477(node, null, f_10306_317333_317476(f_10306_317361_317401(this, f_10306_317390_317400(symbols, 0)), f_10306_317403_317424(symbols), f_10306_317426_317443(lookupResult), f_10306_317445_317463(lookupResult), rightArity));
                                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 316889, 318273);
                                    }

                                    else
                                    {
                                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 316889, 318273);

                                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 317544, 318273) || true) && (f_10306_317548_317565(lookupResult) == LookupResultKind.Empty)
                                        )

                                        {
                                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 317544, 318273);
                                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 317657, 317826);

                                            f_10306_317657_317825(f_10306_317670_317690(lookupResult), "If there's a legitimate reason for having candidates without a reason, then we should produce something intelligent in such cases.");
                                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 317860, 317901);

                                            f_10306_317860_317900(f_10306_317873_317891(lookupResult) == null);
                                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 317935, 318049);

                                            f_10306_317935_318048(this, node, rightName, rightArity, rightName, diagnostics, aliasOpt: null, qualifierOpt: ns, options: options);
                                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 318085, 318242);

                                            return f_10306_318092_318241(node, f_10306_318121_318138(lookupResult), f_10306_318140_318161(symbols), f_10306_318163_318195(boundLeft), f_10306_318197_318223(this, rightName), hasErrors: true);
                                            DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 317544, 318273);
                                        }
                                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 316889, 318273);
                                    }
                                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 315213, 318273);
                                }
                                DynAbs.Tracing.TraceSender.TraceBreak(10306, 318303, 318309);

                                break;
                            }
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 314398, 322236);

                        case BoundKind.TypeExpression:
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 314398, 322236);
                            {
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 318445, 318484);

                                f_10306_318445_318483((object)leftType != null);

                                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 318514, 320084) || true) && (f_10306_318518_318535(leftType) == TypeKind.TypeParameter)
                                )

                                {
                                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 318514, 320084);
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 318627, 318737);

                                    f_10306_318627_318736(diagnostics, ErrorCode.ERR_BadSKunknown, boundLeft.Syntax, leftType, f_10306_318702_318735(MessageID.IDS_SK_TYVAR));
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 318771, 318837);

                                    return f_10306_318778_318836(this, node, LookupResultKind.NotAValue, boundLeft);
                                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 318514, 320084);
                                }

                                else
                                {
                                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 318514, 320084);

                                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 318903, 320084) || true) && (f_10306_318907_318935(this) == node)
                                    )

                                    {
                                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 318903, 320084);
                                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 319113, 319259);

                                        return f_10306_319120_319258(this, node, right, boundLeft, rightName, rightArity, typeArgumentsSyntax, typeArguments, invoked, indexed, diagnostics);
                                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 318903, 320084);
                                    }

                                    else

                                    {
                                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 318903, 320084);
                                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 319389, 319439);

                                        HashSet<DiagnosticInfo>
                                        useSiteDiagnostics = null
                                        ;
                                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 319473, 319619);

                                        f_10306_319473_319618(this, lookupResult, leftType, rightName, rightArity, ref useSiteDiagnostics, basesBeingResolved: null, options: options);
                                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 319653, 319696);

                                        f_10306_319653_319695(diagnostics, right, useSiteDiagnostics);

                                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 319730, 320053) || true) && (f_10306_319734_319760(lookupResult))
                                        )

                                        {
                                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 319730, 320053);
                                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 319834, 320018);

                                            return f_10306_319841_320017(this, node, right, rightName, rightArity, indexed, boundLeft, typeArgumentsSyntax, typeArguments, lookupResult, BoundMethodGroupFlags.None, diagnostics: diagnostics);
                                            DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 319730, 320053);
                                        }
                                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 318903, 320084);
                                    }
                                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 318514, 320084);
                                }
                                DynAbs.Tracing.TraceSender.TraceBreak(10306, 320114, 320120);

                                break;
                            }
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 314398, 322236);

                        case BoundKind.TypeOrValueExpression:
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 314398, 322236);
                            {
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 320531, 320677);

                                return f_10306_320538_320676(this, node, right, boundLeft, rightName, rightArity, typeArgumentsSyntax, typeArguments, invoked, indexed, diagnostics);
                            }
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 314398, 322236);

                        default:
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 314398, 322236);
                            {

                                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 320855, 322154) || true) && (f_10306_320859_320873(boundLeft) == BoundKind.Literal && (DynAbs.Tracing.TraceSender.Expression_True(10306, 320859, 320962) && f_10306_320898_320940(((BoundLiteral)boundLeft)) == f_10306_320944_320962()))
                                )

                                {
                                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 320855, 322154);

                                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 321028, 321254) || true) && (f_10306_321032_321055_M(!boundLeft.HasAnyErrors))
                                    )

                                    {
                                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 321028, 321254);
                                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 321129, 321219);

                                        f_10306_321129_321218(diagnostics, ErrorCode.ERR_BadUnaryOp, node, operatorToken.Text, f_10306_321200_321217(boundLeft));
                                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 321028, 321254);
                                    }
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 321290, 321328);

                                    return f_10306_321297_321327(this, node, boundLeft);
                                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 320855, 322154);
                                }

                                else
                                {
                                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 320855, 322154);

                                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 321394, 322154) || true) && ((object)leftType != null)
                                    )

                                    {
                                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 321394, 322154);
                                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 321786, 321855);

                                        boundLeft = f_10306_321798_321854(this, boundLeft, BindValueKind.RValue, diagnostics);
                                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 321889, 321943);

                                        boundLeft = f_10306_321901_321942(this, boundLeft, diagnostics);
                                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 321977, 322123);

                                        return f_10306_321984_322122(this, node, right, boundLeft, rightName, rightArity, typeArgumentsSyntax, typeArguments, invoked, indexed, diagnostics);
                                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 321394, 322154);
                                    }
                                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 320855, 322154);
                                }
                                DynAbs.Tracing.TraceSender.TraceBreak(10306, 322184, 322190);

                                break;
                            }
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 314398, 322236);
                    }
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 322256, 322357);

                    f_10306_322256_322356(
                                    this, node, right, rightName, boundLeft, f_10306_322324_322342(lookupResult), diagnostics);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 322375, 322511);

                    return f_10306_322382_322510(this, node, rightName, boundLeft, f_10306_322436_322454(lookupResult), f_10306_322456_322490(f_10306_322456_322476(lookupResult)), f_10306_322492_322509(lookupResult));
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinally(10306, 322540, 322615);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 322580, 322600);

                    f_10306_322580_322599(lookupResult);
                    DynAbs.Tracing.TraceSender.TraceExitFinally(10306, 322540, 322615);
                }
                DynAbs.Tracing.TraceSender.TraceExitMethod(10306, 309646, 322626);

                int
                f_10306_309972_309998(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 309972, 309998);
                    return 0;
                }


                int
                f_10306_310013_310044(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 310013, 310044);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_310073_310118(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                expr, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.MakeMemberAccessValue(expr, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 310073, 310118);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?
                f_10306_310157_310171(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 310157, 310171);
                    return return_v;
                }


                bool
                f_10306_310220_310240(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                type)
                {
                    var return_v = type.IsDynamic();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 310220, 310240);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_310712_310768(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                expr, Microsoft.CodeAnalysis.CSharp.Binder.BindValueKind
                valueKind, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.CheckValue(expr, valueKind, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 310712, 310768);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_310794_310872(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                node, Microsoft.CodeAnalysis.CSharp.BoundExpression
                boundLeft, Microsoft.CodeAnalysis.CSharp.Syntax.SimpleNameSyntax
                right, bool
                invoked, bool
                indexed, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.BindDynamicMemberAccess(node, boundLeft, right, invoked, indexed, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 310794, 310872);
                    return return_v;
                }


                bool
                f_10306_310979_311000(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                type)
                {
                    var return_v = type.IsVoidType();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 310979, 311000);
                    return return_v;
                }


                string
                f_10306_311105_311146(Microsoft.CodeAnalysis.CSharp.SyntaxKind
                kind)
                {
                    var return_v = SyntaxFacts.GetText(kind);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 311105, 311146);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo
                f_10306_311034_311157(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, Microsoft.CodeAnalysis.Location
                location, params object[]
                args)
                {
                    var return_v = diagnostics.Add(code, location, args);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 311034, 311157);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundBadExpression
                f_10306_311183_311213(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                syntax, Microsoft.CodeAnalysis.CSharp.BoundExpression
                childNode)
                {
                    var return_v = this_param.BadExpression((Microsoft.CodeAnalysis.SyntaxNode)syntax, childNode);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 311183, 311213);
                    return return_v;
                }


                bool
                f_10306_311295_311323(Microsoft.CodeAnalysis.CSharp.BoundExpression
                node)
                {
                    var return_v = node.IsLiteralDefault();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 311295, 311323);
                    return return_v;
                }


                string
                f_10306_311451_311492(Microsoft.CodeAnalysis.CSharp.SyntaxKind
                kind)
                {
                    var return_v = SyntaxFacts.GetText(kind);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 311451, 311492);
                    return return_v;
                }


                object
                f_10306_311494_311511(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.Display;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 311494, 311511);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo
                f_10306_311389_311512(Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, params object[]
                args)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo(code, args);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 311389, 311512);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSDiagnostic
                f_10306_311547_311608(Microsoft.CodeAnalysis.DiagnosticInfo
                info, Microsoft.CodeAnalysis.Location
                location)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.CSDiagnostic(info, location);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 311547, 311608);
                    return return_v;
                }


                int
                f_10306_311531_311609(Microsoft.CodeAnalysis.DiagnosticBag
                this_param, Microsoft.CodeAnalysis.CSharp.CSDiagnostic
                diag)
                {
                    this_param.Add((Microsoft.CodeAnalysis.Diagnostic)diag);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 311531, 311609);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.BoundBadExpression
                f_10306_311635_311665(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                syntax, Microsoft.CodeAnalysis.CSharp.BoundExpression
                childNode)
                {
                    var return_v = this_param.BadExpression((Microsoft.CodeAnalysis.SyntaxNode)syntax, childNode);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 311635, 311665);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundKind
                f_10306_311701_311715(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.Kind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 311701, 311715);
                    return return_v;
                }


                int
                f_10306_311776_311814(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 311776, 311814);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.MessageID
                f_10306_311847_311883(Microsoft.CodeAnalysis.CSharp.UnboundLambda
                this_param)
                {
                    var return_v = this_param.MessageID;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 311847, 311883);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Location
                f_10306_311944_311957(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                this_param)
                {
                    var return_v = this_param.Location;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 311944, 311957);
                    return return_v;
                }


                string
                f_10306_311959_312000(Microsoft.CodeAnalysis.CSharp.SyntaxKind
                kind)
                {
                    var return_v = SyntaxFacts.GetText(kind);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 311959, 312000);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.LocalizableErrorArgument
                f_10306_312002_312018(Microsoft.CodeAnalysis.CSharp.MessageID
                id)
                {
                    var return_v = id.Localize();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 312002, 312018);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo
                f_10306_311902_312019(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, Microsoft.CodeAnalysis.Location
                location, params object[]
                args)
                {
                    var return_v = diagnostics.Add(code, location, args);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 311902, 312019);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundBadExpression
                f_10306_312045_312075(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                syntax, Microsoft.CodeAnalysis.CSharp.BoundExpression
                childNode)
                {
                    var return_v = this_param.BadExpression((Microsoft.CodeAnalysis.SyntaxNode)syntax, childNode);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 312045, 312075);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_312119_312160(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                expression, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.BindToNaturalType(expression, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 312119, 312160);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?
                f_10306_312186_312200(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 312186, 312200);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.LookupResult
                f_10306_312234_312260()
                {
                    var return_v = LookupResult.GetInstance();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 312234, 312260);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.SyntaxKind
                f_10306_312556_312568(Microsoft.CodeAnalysis.CSharp.Syntax.SimpleNameSyntax
                this_param)
                {
                    var return_v = this_param.Kind();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 312556, 312568);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Syntax.TypeArgumentListSyntax
                f_10306_312597_312640(Microsoft.CodeAnalysis.CSharp.Syntax.GenericNameSyntax
                this_param)
                {
                    var return_v = this_param.TypeArgumentList;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 312597, 312640);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SeparatedSyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax>
                f_10306_312597_312650(Microsoft.CodeAnalysis.CSharp.Syntax.TypeArgumentListSyntax
                this_param)
                {
                    var return_v = this_param.Arguments;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 312597, 312650);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations>
                f_10306_312833_312884(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.SeparatedSyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax>
                typeArguments, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.BindTypeArguments(typeArguments, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 312833, 312884);
                    return return_v;
                }


                int
                f_10306_314366_314377(Microsoft.CodeAnalysis.CSharp.Syntax.SimpleNameSyntax
                this_param)
                {
                    var return_v = this_param.Arity;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 314366, 314377);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundKind
                f_10306_314406_314420(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.Kind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 314406, 314420);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceSymbol
                f_10306_314746_314799(Microsoft.CodeAnalysis.CSharp.BoundNamespaceExpression
                this_param)
                {
                    var return_v = this_param.NamespaceSymbol;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 314746, 314799);
                    return return_v;
                }


                int
                f_10306_314910_315023(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.LookupResult
                result, Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceSymbol
                nsOrType, string
                name, int
                arity, ref System.Collections.Generic.HashSet<Microsoft.CodeAnalysis.DiagnosticInfo>?
                useSiteDiagnostics, Microsoft.CodeAnalysis.CSharp.LookupOptions
                options)
                {
                    this_param.LookupMembersWithFallback(result, (Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceOrTypeSymbol)nsOrType, name, arity, ref useSiteDiagnostics, options: options);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 314910, 315023);
                    return 0;
                }


                bool
                f_10306_315054_315096(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.Syntax.SimpleNameSyntax
                node, System.Collections.Generic.HashSet<Microsoft.CodeAnalysis.DiagnosticInfo>
                useSiteDiagnostics)
                {
                    var return_v = diagnostics.Add((Microsoft.CodeAnalysis.SyntaxNode)node, useSiteDiagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 315054, 315096);
                    return return_v;
                }


                Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbol>
                f_10306_315160_315180(Microsoft.CodeAnalysis.CSharp.LookupResult
                this_param)
                {
                    var return_v = this_param.Symbols;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 315160, 315180);
                    return return_v;
                }


                bool
                f_10306_315217_315243(Microsoft.CodeAnalysis.CSharp.LookupResult
                this_param)
                {
                    var return_v = this_param.IsMultiViable;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 315217, 315243);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbol
                f_10306_315370_315472(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.LookupResult
                result, string
                simpleName, int
                arity, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                where, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, bool
                suppressUseSiteDiagnostics, out bool
                wasError, Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceSymbol
                qualifierOpt, Microsoft.CodeAnalysis.CSharp.LookupOptions
                options)
                {
                    var return_v = this_param.ResultSymbol(result, simpleName, arity, (Microsoft.CodeAnalysis.SyntaxNode)where, diagnostics, suppressUseSiteDiagnostics, out wasError, (Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceOrTypeSymbol)qualifierOpt, options);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 315370, 315472);
                    return return_v;
                }


                Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbol>
                f_10306_315657_315677(Microsoft.CodeAnalysis.CSharp.LookupResult
                this_param)
                {
                    var return_v = this_param.Symbols;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 315657, 315677);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>
                f_10306_315657_315691(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbol>
                items)
                {
                    var return_v = items.AsImmutable<Microsoft.CodeAnalysis.CSharp.Symbol>();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 315657, 315691);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                f_10306_315693_315725(Microsoft.CodeAnalysis.CSharp.BoundExpression
                item)
                {
                    var return_v = ImmutableArray.Create(item);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 315693, 315725);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                f_10306_315727_315753(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, string
                name)
                {
                    var return_v = this_param.CreateErrorType(name);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 315727, 315753);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundBadExpression
                f_10306_315600_315771(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                syntax, Microsoft.CodeAnalysis.CSharp.LookupResultKind
                resultKind, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>
                symbols, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                childBoundNodes, Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                type, bool
                hasErrors)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.BoundBadExpression((Microsoft.CodeAnalysis.SyntaxNode)syntax, resultKind, symbols, childBoundNodes, (Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol)type, hasErrors: hasErrors);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 315600, 315771);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SymbolKind
                f_10306_315850_315858(Microsoft.CodeAnalysis.CSharp.Symbol
                this_param)
                {
                    var return_v = this_param.Kind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 315850, 315858);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundNamespaceExpression
                f_10306_315963_316019(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                syntax, Microsoft.CodeAnalysis.CSharp.Symbol
                namespaceSymbol)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.BoundNamespaceExpression((Microsoft.CodeAnalysis.SyntaxNode)syntax, (Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceSymbol)namespaceSymbol);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 315963, 316019);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SymbolKind
                f_10306_316179_316187(Microsoft.CodeAnalysis.CSharp.Symbol
                this_param)
                {
                    var return_v = this_param.Kind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 316179, 316187);
                    return return_v;
                }


                int
                f_10306_316166_316212(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 316166, 316212);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                f_10306_316437_316542(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.SimpleNameSyntax
                typeSyntax, Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                type, Microsoft.CodeAnalysis.SeparatedSyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax>
                typeArgumentsSyntax, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations>
                typeArguments, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.ConstructNamedTypeUnlessTypeArgumentOmitted((Microsoft.CodeAnalysis.SyntaxNode)typeSyntax, type, typeArgumentsSyntax, typeArguments, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 316437, 316542);
                    return return_v;
                }


                int
                f_10306_316622_316698(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                symbol, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                node, bool
                hasBaseReceiver)
                {
                    this_param.ReportDiagnosticsIfObsolete(diagnostics, (Microsoft.CodeAnalysis.CSharp.Symbol)symbol, (Microsoft.CodeAnalysis.SyntaxNode)node, hasBaseReceiver: hasBaseReceiver);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 316622, 316698);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.BoundTypeExpression
                f_10306_316746_316787(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                syntax, Microsoft.CodeAnalysis.CSharp.Symbols.AliasSymbol?
                aliasOpt, Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                type)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.BoundTypeExpression((Microsoft.CodeAnalysis.SyntaxNode)syntax, aliasOpt, (Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol)type);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 316746, 316787);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.LookupResultKind
                f_10306_316893_316910(Microsoft.CodeAnalysis.CSharp.LookupResult
                this_param)
                {
                    var return_v = this_param.Kind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 316893, 316910);
                    return return_v;
                }


                int
                f_10306_317020_317033(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbol>
                this_param)
                {
                    var return_v = this_param.Count;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 317020, 317033);
                    return return_v;
                }


                int
                f_10306_317007_317038(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 317007, 317038);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.Symbol
                f_10306_317086_317096(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbol>
                this_param, int
                i0)
                {
                    var return_v = this_param[i0];
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 317086, 317096);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SymbolKind
                f_10306_317086_317101(Microsoft.CodeAnalysis.CSharp.Symbol
                this_param)
                {
                    var return_v = this_param.Kind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 317086, 317101);
                    return return_v;
                }


                int
                f_10306_317073_317126(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 317073, 317126);
                    return 0;
                }


                Microsoft.CodeAnalysis.DiagnosticInfo
                f_10306_317182_317200(Microsoft.CodeAnalysis.CSharp.LookupResult
                this_param)
                {
                    var return_v = this_param.Error;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 317182, 317200);
                    return return_v;
                }


                int
                f_10306_317163_317208(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.DiagnosticInfo
                info, Microsoft.CodeAnalysis.CSharp.Syntax.SimpleNameSyntax
                syntax)
                {
                    Error(diagnostics, info, (Microsoft.CodeAnalysis.SyntaxNode)syntax);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 317163, 317208);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.Symbol
                f_10306_317390_317400(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbol>
                this_param, int
                i0)
                {
                    var return_v = this_param[i0];
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 317390, 317400);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceOrTypeSymbol
                f_10306_317361_317401(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Symbol
                symbol)
                {
                    var return_v = this_param.GetContainingNamespaceOrType(symbol);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 317361, 317401);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>
                f_10306_317403_317424(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbol>
                this_param)
                {
                    var return_v = this_param.ToImmutable();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 317403, 317424);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.LookupResultKind
                f_10306_317426_317443(Microsoft.CodeAnalysis.CSharp.LookupResult
                this_param)
                {
                    var return_v = this_param.Kind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 317426, 317443);
                    return return_v;
                }


                Microsoft.CodeAnalysis.DiagnosticInfo
                f_10306_317445_317463(Microsoft.CodeAnalysis.CSharp.LookupResult
                this_param)
                {
                    var return_v = this_param.Error;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 317445, 317463);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.ExtendedErrorTypeSymbol
                f_10306_317333_317476(Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceOrTypeSymbol
                containingSymbol, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>
                candidateSymbols, Microsoft.CodeAnalysis.CSharp.LookupResultKind
                resultKind, Microsoft.CodeAnalysis.DiagnosticInfo
                errorInfo, int
                arity)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.Symbols.ExtendedErrorTypeSymbol(containingSymbol, candidateSymbols, resultKind, errorInfo, arity);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 317333, 317476);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundTypeExpression
                f_10306_317252_317477(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                syntax, Microsoft.CodeAnalysis.CSharp.Symbols.AliasSymbol?
                aliasOpt, Microsoft.CodeAnalysis.CSharp.Symbols.ExtendedErrorTypeSymbol
                type)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.BoundTypeExpression((Microsoft.CodeAnalysis.SyntaxNode)syntax, aliasOpt, (Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol)type);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 317252, 317477);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.LookupResultKind
                f_10306_317548_317565(Microsoft.CodeAnalysis.CSharp.LookupResult
                this_param)
                {
                    var return_v = this_param.Kind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 317548, 317565);
                    return return_v;
                }


                bool
                f_10306_317670_317690(Microsoft.CodeAnalysis.CSharp.LookupResult
                this_param)
                {
                    var return_v = this_param.IsClear;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 317670, 317690);
                    return return_v;
                }


                int
                f_10306_317657_317825(bool
                condition, string
                message)
                {
                    Debug.Assert(condition, message);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 317657, 317825);
                    return 0;
                }


                Microsoft.CodeAnalysis.DiagnosticInfo
                f_10306_317873_317891(Microsoft.CodeAnalysis.CSharp.LookupResult
                this_param)
                {
                    var return_v = this_param.Error;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 317873, 317891);
                    return return_v;
                }


                int
                f_10306_317860_317900(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 317860, 317900);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo
                f_10306_317935_318048(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                where, string
                simpleName, int
                arity, string
                whereText, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, string
                aliasOpt, Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceSymbol
                qualifierOpt, Microsoft.CodeAnalysis.CSharp.LookupOptions
                options)
                {
                    var return_v = this_param.NotFound((Microsoft.CodeAnalysis.SyntaxNode)where, simpleName, arity, whereText, diagnostics, aliasOpt: aliasOpt, qualifierOpt: (Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceOrTypeSymbol)qualifierOpt, options: options);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 317935, 318048);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.LookupResultKind
                f_10306_318121_318138(Microsoft.CodeAnalysis.CSharp.LookupResult
                this_param)
                {
                    var return_v = this_param.Kind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 318121, 318138);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>
                f_10306_318140_318161(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbol>
                items)
                {
                    var return_v = items.AsImmutable<Microsoft.CodeAnalysis.CSharp.Symbol>();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 318140, 318161);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                f_10306_318163_318195(Microsoft.CodeAnalysis.CSharp.BoundExpression
                item)
                {
                    var return_v = ImmutableArray.Create(item);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 318163, 318195);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                f_10306_318197_318223(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, string
                name)
                {
                    var return_v = this_param.CreateErrorType(name);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 318197, 318223);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundBadExpression
                f_10306_318092_318241(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                syntax, Microsoft.CodeAnalysis.CSharp.LookupResultKind
                resultKind, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>
                symbols, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                childBoundNodes, Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                type, bool
                hasErrors)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.BoundBadExpression((Microsoft.CodeAnalysis.SyntaxNode)syntax, resultKind, symbols, childBoundNodes, (Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol)type, hasErrors: hasErrors);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 318092, 318241);
                    return return_v;
                }


                int
                f_10306_318445_318483(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 318445, 318483);
                    return 0;
                }


                Microsoft.CodeAnalysis.TypeKind
                f_10306_318518_318535(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                this_param)
                {
                    var return_v = this_param.TypeKind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 318518, 318535);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.LocalizableErrorArgument
                f_10306_318702_318735(Microsoft.CodeAnalysis.CSharp.MessageID
                id)
                {
                    var return_v = id.Localize();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 318702, 318735);
                    return return_v;
                }


                int
                f_10306_318627_318736(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, Microsoft.CodeAnalysis.SyntaxNode
                syntax, params object[]
                args)
                {
                    Error(diagnostics, code, (Microsoft.CodeAnalysis.SyntaxNodeOrToken)syntax, args);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 318627, 318736);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.BoundBadExpression
                f_10306_318778_318836(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                syntax, Microsoft.CodeAnalysis.CSharp.LookupResultKind
                lookupResultKind, Microsoft.CodeAnalysis.CSharp.BoundExpression
                childNode)
                {
                    var return_v = this_param.BadExpression((Microsoft.CodeAnalysis.SyntaxNode)syntax, lookupResultKind, childNode);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 318778, 318836);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SyntaxNode?
                f_10306_318907_318935(Microsoft.CodeAnalysis.CSharp.Binder
                this_param)
                {
                    var return_v = this_param.EnclosingNameofArgument;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 318907, 318935);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_319120_319258(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                node, Microsoft.CodeAnalysis.CSharp.Syntax.SimpleNameSyntax
                right, Microsoft.CodeAnalysis.CSharp.BoundExpression
                boundLeft, string
                rightName, int
                rightArity, Microsoft.CodeAnalysis.SeparatedSyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax>
                typeArgumentsSyntax, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations>
                typeArgumentsWithAnnotations, bool
                invoked, bool
                indexed, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.BindInstanceMemberAccess((Microsoft.CodeAnalysis.SyntaxNode)node, (Microsoft.CodeAnalysis.SyntaxNode)right, boundLeft, rightName, rightArity, typeArgumentsSyntax, typeArgumentsWithAnnotations, invoked, indexed, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 319120, 319258);
                    return return_v;
                }


                int
                f_10306_319473_319618(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.LookupResult
                result, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                nsOrType, string
                name, int
                arity, ref System.Collections.Generic.HashSet<Microsoft.CodeAnalysis.DiagnosticInfo>?
                useSiteDiagnostics, Roslyn.Utilities.ConsList<Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol>
                basesBeingResolved, Microsoft.CodeAnalysis.CSharp.LookupOptions
                options)
                {
                    this_param.LookupMembersWithFallback(result, (Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceOrTypeSymbol)nsOrType, name, arity, ref useSiteDiagnostics, basesBeingResolved: basesBeingResolved, options: options);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 319473, 319618);
                    return 0;
                }


                bool
                f_10306_319653_319695(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.Syntax.SimpleNameSyntax
                node, System.Collections.Generic.HashSet<Microsoft.CodeAnalysis.DiagnosticInfo>
                useSiteDiagnostics)
                {
                    var return_v = diagnostics.Add((Microsoft.CodeAnalysis.SyntaxNode)node, useSiteDiagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 319653, 319695);
                    return return_v;
                }


                bool
                f_10306_319734_319760(Microsoft.CodeAnalysis.CSharp.LookupResult
                this_param)
                {
                    var return_v = this_param.IsMultiViable;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 319734, 319760);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_319841_320017(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                node, Microsoft.CodeAnalysis.CSharp.Syntax.SimpleNameSyntax
                right, string
                plainName, int
                arity, bool
                indexed, Microsoft.CodeAnalysis.CSharp.BoundExpression
                left, Microsoft.CodeAnalysis.SeparatedSyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax>
                typeArgumentsSyntax, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations>
                typeArgumentsWithAnnotations, Microsoft.CodeAnalysis.CSharp.LookupResult
                lookupResult, Microsoft.CodeAnalysis.CSharp.BoundMethodGroupFlags
                methodGroupFlags, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.BindMemberOfType((Microsoft.CodeAnalysis.SyntaxNode)node, (Microsoft.CodeAnalysis.SyntaxNode)right, plainName, arity, indexed, left, typeArgumentsSyntax, typeArgumentsWithAnnotations, lookupResult, methodGroupFlags, diagnostics: diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 319841, 320017);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_320538_320676(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                node, Microsoft.CodeAnalysis.CSharp.Syntax.SimpleNameSyntax
                right, Microsoft.CodeAnalysis.CSharp.BoundExpression
                boundLeft, string
                rightName, int
                rightArity, Microsoft.CodeAnalysis.SeparatedSyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax>
                typeArgumentsSyntax, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations>
                typeArgumentsWithAnnotations, bool
                invoked, bool
                indexed, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.BindInstanceMemberAccess((Microsoft.CodeAnalysis.SyntaxNode)node, (Microsoft.CodeAnalysis.SyntaxNode)right, boundLeft, rightName, rightArity, typeArgumentsSyntax, typeArgumentsWithAnnotations, invoked, indexed, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 320538, 320676);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundKind
                f_10306_320859_320873(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.Kind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 320859, 320873);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ConstantValue?
                f_10306_320898_320940(Microsoft.CodeAnalysis.CSharp.BoundLiteral
                this_param)
                {
                    var return_v = this_param.ConstantValueOpt;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 320898, 320940);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ConstantValue
                f_10306_320944_320962()
                {
                    var return_v = ConstantValue.Null;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 320944, 320962);
                    return return_v;
                }


                bool
                f_10306_321032_321055_M(bool
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 321032, 321055);
                    return return_v;
                }


                object
                f_10306_321200_321217(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.Display;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 321200, 321217);
                    return return_v;
                }


                int
                f_10306_321129_321218(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                syntax, params object[]
                args)
                {
                    Error(diagnostics, code, (Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode)syntax, args);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 321129, 321218);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.BoundBadExpression
                f_10306_321297_321327(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                syntax, Microsoft.CodeAnalysis.CSharp.BoundExpression
                childNode)
                {
                    var return_v = this_param.BadExpression((Microsoft.CodeAnalysis.SyntaxNode)syntax, childNode);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 321297, 321327);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_321798_321854(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                expr, Microsoft.CodeAnalysis.CSharp.Binder.BindValueKind
                valueKind, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.CheckValue(expr, valueKind, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 321798, 321854);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_321901_321942(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                expression, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.BindToNaturalType(expression, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 321901, 321942);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_321984_322122(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                node, Microsoft.CodeAnalysis.CSharp.Syntax.SimpleNameSyntax
                right, Microsoft.CodeAnalysis.CSharp.BoundExpression
                boundLeft, string
                rightName, int
                rightArity, Microsoft.CodeAnalysis.SeparatedSyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax>
                typeArgumentsSyntax, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations>
                typeArgumentsWithAnnotations, bool
                invoked, bool
                indexed, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.BindInstanceMemberAccess((Microsoft.CodeAnalysis.SyntaxNode)node, (Microsoft.CodeAnalysis.SyntaxNode)right, boundLeft, rightName, rightArity, typeArgumentsSyntax, typeArgumentsWithAnnotations, invoked, indexed, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 321984, 322122);
                    return return_v;
                }


                Microsoft.CodeAnalysis.DiagnosticInfo
                f_10306_322324_322342(Microsoft.CodeAnalysis.CSharp.LookupResult
                this_param)
                {
                    var return_v = this_param.Error;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 322324, 322342);
                    return return_v;
                }


                int
                f_10306_322256_322356(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                node, Microsoft.CodeAnalysis.CSharp.Syntax.SimpleNameSyntax
                name, string
                plainName, Microsoft.CodeAnalysis.CSharp.BoundExpression
                boundLeft, Microsoft.CodeAnalysis.DiagnosticInfo
                lookupError, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    this_param.BindMemberAccessReportError((Microsoft.CodeAnalysis.SyntaxNode)node, (Microsoft.CodeAnalysis.SyntaxNode)name, plainName, boundLeft, lookupError, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 322256, 322356);
                    return 0;
                }


                Microsoft.CodeAnalysis.DiagnosticInfo
                f_10306_322436_322454(Microsoft.CodeAnalysis.CSharp.LookupResult
                this_param)
                {
                    var return_v = this_param.Error;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 322436, 322454);
                    return return_v;
                }


                Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbol>
                f_10306_322456_322476(Microsoft.CodeAnalysis.CSharp.LookupResult
                this_param)
                {
                    var return_v = this_param.Symbols;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 322456, 322476);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>
                f_10306_322456_322490(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbol>
                this_param)
                {
                    var return_v = this_param.ToImmutable();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 322456, 322490);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.LookupResultKind
                f_10306_322492_322509(Microsoft.CodeAnalysis.CSharp.LookupResult
                this_param)
                {
                    var return_v = this_param.Kind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 322492, 322509);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_322382_322510(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                node, string
                nameString, Microsoft.CodeAnalysis.CSharp.BoundExpression
                boundLeft, Microsoft.CodeAnalysis.DiagnosticInfo
                lookupError, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>
                symbols, Microsoft.CodeAnalysis.CSharp.LookupResultKind
                lookupKind)
                {
                    var return_v = this_param.BindMemberAccessBadResult((Microsoft.CodeAnalysis.SyntaxNode)node, nameString, boundLeft, lookupError, symbols, lookupKind);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 322382, 322510);
                    return return_v;
                }


                int
                f_10306_322580_322599(Microsoft.CodeAnalysis.CSharp.LookupResult
                this_param)
                {
                    this_param.Free();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 322580, 322599);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 309646, 322626);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 309646, 322626);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private void WarnOnAccessOfOffDefault(SyntaxNode node, BoundExpression boundLeft, DiagnosticBag diagnostics)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10306, 322638, 323138);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 322771, 323127) || true) && ((boundLeft is BoundDefaultLiteral || (DynAbs.Tracing.TraceSender.Expression_False(10306, 322776, 322847) || boundLeft is BoundDefaultExpression)) && (DynAbs.Tracing.TraceSender.Expression_True(10306, 322775, 322897) && f_10306_322852_322875(boundLeft) == f_10306_322879_322897()) && (DynAbs.Tracing.TraceSender.Expression_True(10306, 322775, 323009) && f_10306_322918_322945(f_10306_322918_322929()) < f_10306_322948_323009(MessageID.IDS_FeatureNullableReferenceTypes)))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 322771, 323127);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 323043, 323112);

                    f_10306_323043_323111(diagnostics, ErrorCode.WRN_DotOnDefault, node, f_10306_323096_323110(boundLeft));
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 322771, 323127);
                }
                DynAbs.Tracing.TraceSender.TraceExitMethod(10306, 322638, 323138);

                Microsoft.CodeAnalysis.ConstantValue?
                f_10306_322852_322875(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.ConstantValue;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 322852, 322875);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ConstantValue
                f_10306_322879_322897()
                {
                    var return_v = ConstantValue.Null;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 322879, 322897);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                f_10306_322918_322929()
                {
                    var return_v = Compilation;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 322918, 322929);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.LanguageVersion
                f_10306_322918_322945(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param)
                {
                    var return_v = this_param.LanguageVersion;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 322918, 322945);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.LanguageVersion
                f_10306_322948_323009(Microsoft.CodeAnalysis.CSharp.MessageID
                feature)
                {
                    var return_v = feature.RequiredVersion();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 322948, 323009);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?
                f_10306_323096_323110(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 323096, 323110);
                    return return_v;
                }


                int
                f_10306_323043_323111(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, Microsoft.CodeAnalysis.SyntaxNode
                syntax, params object[]
                args)
                {
                    Error(diagnostics, code, (Microsoft.CodeAnalysis.SyntaxNodeOrToken)syntax, args);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 323043, 323111);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 322638, 323138);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 322638, 323138);
            }
        }

        private BoundExpression MakeMemberAccessValue(BoundExpression expr, DiagnosticBag diagnostics)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10306, 323429, 325177);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 323548, 325166);

                switch (f_10306_323556_323565(expr))
                {

                    case BoundKind.MethodGroup:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 323548, 325166);
                        {
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 323675, 323716);

                            var
                            methodGroup = (BoundMethodGroup)expr
                            ;
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 323742, 323792);

                            HashSet<DiagnosticInfo>
                            useSiteDiagnostics = null
                            ;
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 323818, 323973);

                            var
                            resolution = f_10306_323835_323972(this, methodGroup, analyzedArguments: null, isMethodGroupConversion: false, useSiteDiagnostics: ref useSiteDiagnostics)
                            ;
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 323999, 324048);

                            f_10306_323999_324047(diagnostics, expr.Syntax, useSiteDiagnostics);

                            if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 324074, 324681) || true) && (f_10306_324078_324096_M(!expr.HasAnyErrors))
                            )

                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 324074, 324681);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 324154, 324199);

                                f_10306_324154_324198(diagnostics, resolution.Diagnostics);

                                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 324231, 324654) || true) && (resolution.MethodGroup != null && (DynAbs.Tracing.TraceSender.Expression_True(10306, 324235, 324293) && f_10306_324269_324293_M(!resolution.HasAnyErrors)))
                                )

                                {
                                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 324231, 324654);
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 324359, 324393);

                                    f_10306_324359_324392(f_10306_324372_324391_M(!resolution.IsEmpty));
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 324427, 324474);

                                    var
                                    method = f_10306_324440_324473(f_10306_324440_324470(resolution.MethodGroup), 0)
                                    ;
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 324508, 324623);

                                    f_10306_324508_324622(diagnostics, ErrorCode.ERR_BadSKunknown, f_10306_324555_324577(methodGroup), method, f_10306_324587_324621(MessageID.IDS_SK_METHOD));
                                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 324231, 324654);
                                }
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 324074, 324681);
                            }
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 324707, 324758);

                            expr = f_10306_324714_324757(this, methodGroup);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 324784, 324802);

                            resolution.Free();
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 324828, 324840);

                            return expr;
                        }
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 323548, 325166);

                    case BoundKind.PropertyGroup:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 323548, 325166);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 324934, 325057);

                        return f_10306_324941_325056(this, expr, mustHaveAllOptionalParameters: false, diagnostics: diagnostics);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 323548, 325166);

                    default:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 323548, 325166);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 325107, 325151);

                        return f_10306_325114_325150(this, expr, diagnostics);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 323548, 325166);
                }
                DynAbs.Tracing.TraceSender.TraceExitMethod(10306, 323429, 325177);

                Microsoft.CodeAnalysis.CSharp.BoundKind
                f_10306_323556_323565(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.Kind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 323556, 323565);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.MethodGroupResolution
                f_10306_323835_323972(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.BoundMethodGroup
                node, Microsoft.CodeAnalysis.CSharp.AnalyzedArguments
                analyzedArguments, bool
                isMethodGroupConversion, ref System.Collections.Generic.HashSet<Microsoft.CodeAnalysis.DiagnosticInfo>?
                useSiteDiagnostics)
                {
                    var return_v = this_param.ResolveMethodGroup(node, analyzedArguments: analyzedArguments, isMethodGroupConversion: isMethodGroupConversion, useSiteDiagnostics: ref useSiteDiagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 323835, 323972);
                    return return_v;
                }


                bool
                f_10306_323999_324047(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.SyntaxNode
                node, System.Collections.Generic.HashSet<Microsoft.CodeAnalysis.DiagnosticInfo>
                useSiteDiagnostics)
                {
                    var return_v = diagnostics.Add(node, useSiteDiagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 323999, 324047);
                    return return_v;
                }


                bool
                f_10306_324078_324096_M(bool
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 324078, 324096);
                    return return_v;
                }


                int
                f_10306_324154_324198(Microsoft.CodeAnalysis.DiagnosticBag
                this_param, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Diagnostic>
                diagnostics)
                {
                    this_param.AddRange<Microsoft.CodeAnalysis.Diagnostic>(diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 324154, 324198);
                    return 0;
                }


                bool
                f_10306_324269_324293_M(bool
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 324269, 324293);
                    return return_v;
                }


                bool
                f_10306_324372_324391_M(bool
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 324372, 324391);
                    return return_v;
                }


                int
                f_10306_324359_324392(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 324359, 324392);
                    return 0;
                }


                Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol>
                f_10306_324440_324470(Microsoft.CodeAnalysis.CSharp.MethodGroup
                this_param)
                {
                    var return_v = this_param.Methods;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 324440, 324470);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                f_10306_324440_324473(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol>
                this_param, int
                i0)
                {
                    var return_v = this_param[i0];
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 324440, 324473);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SyntaxNode
                f_10306_324555_324577(Microsoft.CodeAnalysis.CSharp.BoundMethodGroup
                this_param)
                {
                    var return_v = this_param.NameSyntax;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 324555, 324577);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.LocalizableErrorArgument
                f_10306_324587_324621(Microsoft.CodeAnalysis.CSharp.MessageID
                id)
                {
                    var return_v = id.Localize();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 324587, 324621);
                    return return_v;
                }


                int
                f_10306_324508_324622(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, Microsoft.CodeAnalysis.SyntaxNode
                syntax, params object[]
                args)
                {
                    Error(diagnostics, code, (Microsoft.CodeAnalysis.SyntaxNodeOrToken)syntax, args);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 324508, 324622);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_324714_324757(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.BoundMethodGroup
                node)
                {
                    var return_v = this_param.BindMemberAccessBadResult(node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 324714, 324757);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_324941_325056(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                propertyGroup, bool
                mustHaveAllOptionalParameters, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.BindIndexedPropertyAccess((Microsoft.CodeAnalysis.CSharp.BoundPropertyGroup)propertyGroup, mustHaveAllOptionalParameters: mustHaveAllOptionalParameters, diagnostics: diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 324941, 325056);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_325114_325150(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                expression, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.BindToNaturalType(expression, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 325114, 325150);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 323429, 325177);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 323429, 325177);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private BoundExpression BindInstanceMemberAccess(
                    SyntaxNode node,
                    SyntaxNode right,
                    BoundExpression boundLeft,
                    string rightName,
                    int rightArity,
                    SeparatedSyntaxList<TypeSyntax> typeArgumentsSyntax,
                    ImmutableArray<TypeWithAnnotations> typeArgumentsWithAnnotations,
                    bool invoked,
                    bool indexed,
                    DiagnosticBag diagnostics)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10306, 325189, 329060);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 325663, 325774);

                f_10306_325663_325773(rightArity == ((DynAbs.Tracing.TraceSender.Conditional_F1(10306, 325691, 325729) || ((typeArgumentsWithAnnotations.IsDefault && DynAbs.Tracing.TraceSender.Conditional_F2(10306, 325732, 325733)) || DynAbs.Tracing.TraceSender.Conditional_F3(10306, 325736, 325771))) ? 0 : typeArgumentsWithAnnotations.Length));
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 325788, 325818);

                var
                leftType = f_10306_325803_325817(boundLeft)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 325832, 325892);

                LookupOptions
                options = LookupOptions.AllMethodsOnArityZero
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 325906, 326015) || true) && (invoked)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 325906, 326015);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 325951, 326000);

                    options |= LookupOptions.MustBeInvocableIfMember;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 325906, 326015);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 326031, 326077);

                var
                lookupResult = f_10306_326050_326076()
                ;
                try
                {
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 326486, 326555);

                    bool
                    leftIsBaseReference = f_10306_326513_326527(boundLeft) == BoundKind.BaseReference
                    ;

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 326573, 326712) || true) && (leftIsBaseReference)
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 326573, 326712);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 326638, 326693);

                        options |= LookupOptions.UseBaseReferenceAccessibility;
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 326573, 326712);
                    }
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 326732, 326782);

                    HashSet<DiagnosticInfo>
                    useSiteDiagnostics = null
                    ;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 326800, 326946);

                    f_10306_326800_326945(this, lookupResult, leftType, rightName, rightArity, ref useSiteDiagnostics, basesBeingResolved: null, options: options);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 326964, 327007);

                    f_10306_326964_327006(diagnostics, right, useSiteDiagnostics);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 327243, 327304);

                    var
                    searchExtensionMethodsIfNecessary = !leftIsBaseReference
                    ;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 327324, 327356);

                    BoundMethodGroupFlags
                    flags = 0
                    ;

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 327374, 327526) || true) && (searchExtensionMethodsIfNecessary)
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 327374, 327526);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 327453, 327507);

                        flags |= BoundMethodGroupFlags.SearchExtensionMethods;
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 327374, 327526);
                    }

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 327546, 327802) || true) && (f_10306_327550_327576(lookupResult))
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 327546, 327802);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 327618, 327783);

                        return f_10306_327625_327782(this, node, right, rightName, rightArity, indexed, boundLeft, typeArgumentsSyntax, typeArgumentsWithAnnotations, lookupResult, flags, diagnostics);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 327546, 327802);
                    }

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 327822, 328670) || true) && (searchExtensionMethodsIfNecessary)
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 327822, 328670);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 327901, 328356);

                        var
                        boundMethodGroup = f_10306_327924_328355(node, typeArgumentsWithAnnotations, boundLeft, rightName, (DynAbs.Tracing.TraceSender.Conditional_F1(10306, 328129, 328187) || ((f_10306_328129_328187(f_10306_328129_328149(lookupResult), s => s.Kind == SymbolKind.Method) && DynAbs.Tracing.TraceSender.Conditional_F2(10306, 328190, 328246)) || DynAbs.Tracing.TraceSender.Conditional_F3(10306, 328249, 328283))) ? f_10306_328190_328246(f_10306_328190_328210(lookupResult), s_toMethodSymbolFunc) : ImmutableArray<MethodSymbol>.Empty, lookupResult, flags)
                        ;

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 328380, 328603) || true) && (f_10306_328384_328411_M(!boundMethodGroup.HasErrors) && (DynAbs.Tracing.TraceSender.Expression_True(10306, 328384, 328470) && typeArgumentsSyntax.Any(SyntaxKind.OmittedTypeArgument)))
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 328380, 328603);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 328520, 328580);

                            f_10306_328520_328579(diagnostics, ErrorCode.ERR_OmittedTypeArgument, node);
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 328380, 328603);
                        }
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 328627, 328651);

                        return boundMethodGroup;
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 327822, 328670);
                    }
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 328690, 328791);

                    f_10306_328690_328790(
                                    this, node, right, rightName, boundLeft, f_10306_328758_328776(lookupResult), diagnostics);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 328809, 328945);

                    return f_10306_328816_328944(this, node, rightName, boundLeft, f_10306_328870_328888(lookupResult), f_10306_328890_328924(f_10306_328890_328910(lookupResult)), f_10306_328926_328943(lookupResult));
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinally(10306, 328974, 329049);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 329014, 329034);

                    f_10306_329014_329033(lookupResult);
                    DynAbs.Tracing.TraceSender.TraceExitFinally(10306, 328974, 329049);
                }
                DynAbs.Tracing.TraceSender.TraceExitMethod(10306, 325189, 329060);

                int
                f_10306_325663_325773(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 325663, 325773);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?
                f_10306_325803_325817(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 325803, 325817);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.LookupResult
                f_10306_326050_326076()
                {
                    var return_v = LookupResult.GetInstance();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 326050, 326076);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundKind
                f_10306_326513_326527(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.Kind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 326513, 326527);
                    return return_v;
                }


                int
                f_10306_326800_326945(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.LookupResult
                result, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?
                nsOrType, string
                name, int
                arity, ref System.Collections.Generic.HashSet<Microsoft.CodeAnalysis.DiagnosticInfo>?
                useSiteDiagnostics, Roslyn.Utilities.ConsList<Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol>
                basesBeingResolved, Microsoft.CodeAnalysis.CSharp.LookupOptions
                options)
                {
                    this_param.LookupMembersWithFallback(result, (Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceOrTypeSymbol?)nsOrType, name, arity, ref useSiteDiagnostics, basesBeingResolved: basesBeingResolved, options: options);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 326800, 326945);
                    return 0;
                }


                bool
                f_10306_326964_327006(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.SyntaxNode
                node, System.Collections.Generic.HashSet<Microsoft.CodeAnalysis.DiagnosticInfo>
                useSiteDiagnostics)
                {
                    var return_v = diagnostics.Add(node, useSiteDiagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 326964, 327006);
                    return return_v;
                }


                bool
                f_10306_327550_327576(Microsoft.CodeAnalysis.CSharp.LookupResult
                this_param)
                {
                    var return_v = this_param.IsMultiViable;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 327550, 327576);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_327625_327782(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.SyntaxNode
                node, Microsoft.CodeAnalysis.SyntaxNode
                right, string
                plainName, int
                arity, bool
                indexed, Microsoft.CodeAnalysis.CSharp.BoundExpression
                left, Microsoft.CodeAnalysis.SeparatedSyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax>
                typeArgumentsSyntax, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations>
                typeArgumentsWithAnnotations, Microsoft.CodeAnalysis.CSharp.LookupResult
                lookupResult, Microsoft.CodeAnalysis.CSharp.BoundMethodGroupFlags
                methodGroupFlags, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.BindMemberOfType(node, right, plainName, arity, indexed, left, typeArgumentsSyntax, typeArgumentsWithAnnotations, lookupResult, methodGroupFlags, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 327625, 327782);
                    return return_v;
                }


                Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbol>
                f_10306_328129_328149(Microsoft.CodeAnalysis.CSharp.LookupResult
                this_param)
                {
                    var return_v = this_param.Symbols;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 328129, 328149);
                    return return_v;
                }


                bool
                f_10306_328129_328187(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbol>
                builder, System.Func<Microsoft.CodeAnalysis.CSharp.Symbol, bool>
                predicate)
                {
                    var return_v = builder.All<Microsoft.CodeAnalysis.CSharp.Symbol>(predicate);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 328129, 328187);
                    return return_v;
                }


                Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbol>
                f_10306_328190_328210(Microsoft.CodeAnalysis.CSharp.LookupResult
                this_param)
                {
                    var return_v = this_param.Symbols;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 328190, 328210);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol>
                f_10306_328190_328246(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbol>
                items, System.Func<Microsoft.CodeAnalysis.CSharp.Symbol, Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol>
                map)
                {
                    var return_v = items.SelectAsArray<Microsoft.CodeAnalysis.CSharp.Symbol, Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol>(map);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 328190, 328246);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundMethodGroup
                f_10306_327924_328355(Microsoft.CodeAnalysis.SyntaxNode
                syntax, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations>
                typeArgumentsOpt, Microsoft.CodeAnalysis.CSharp.BoundExpression
                receiverOpt, string
                name, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol>
                methods, Microsoft.CodeAnalysis.CSharp.LookupResult
                lookupResult, Microsoft.CodeAnalysis.CSharp.BoundMethodGroupFlags
                flags)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.BoundMethodGroup(syntax, typeArgumentsOpt, receiverOpt, name, methods, lookupResult, flags);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 327924, 328355);
                    return return_v;
                }


                bool
                f_10306_328384_328411_M(bool
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 328384, 328411);
                    return return_v;
                }


                int
                f_10306_328520_328579(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, Microsoft.CodeAnalysis.SyntaxNode
                syntax)
                {
                    Error(diagnostics, code, (Microsoft.CodeAnalysis.SyntaxNodeOrToken)syntax);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 328520, 328579);
                    return 0;
                }


                Microsoft.CodeAnalysis.DiagnosticInfo
                f_10306_328758_328776(Microsoft.CodeAnalysis.CSharp.LookupResult
                this_param)
                {
                    var return_v = this_param.Error;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 328758, 328776);
                    return return_v;
                }


                int
                f_10306_328690_328790(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.SyntaxNode
                node, Microsoft.CodeAnalysis.SyntaxNode
                name, string
                plainName, Microsoft.CodeAnalysis.CSharp.BoundExpression
                boundLeft, Microsoft.CodeAnalysis.DiagnosticInfo
                lookupError, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    this_param.BindMemberAccessReportError(node, name, plainName, boundLeft, lookupError, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 328690, 328790);
                    return 0;
                }


                Microsoft.CodeAnalysis.DiagnosticInfo
                f_10306_328870_328888(Microsoft.CodeAnalysis.CSharp.LookupResult
                this_param)
                {
                    var return_v = this_param.Error;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 328870, 328888);
                    return return_v;
                }


                Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbol>
                f_10306_328890_328910(Microsoft.CodeAnalysis.CSharp.LookupResult
                this_param)
                {
                    var return_v = this_param.Symbols;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 328890, 328910);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>
                f_10306_328890_328924(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbol>
                this_param)
                {
                    var return_v = this_param.ToImmutable();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 328890, 328924);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.LookupResultKind
                f_10306_328926_328943(Microsoft.CodeAnalysis.CSharp.LookupResult
                this_param)
                {
                    var return_v = this_param.Kind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 328926, 328943);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_328816_328944(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.SyntaxNode
                node, string
                nameString, Microsoft.CodeAnalysis.CSharp.BoundExpression
                boundLeft, Microsoft.CodeAnalysis.DiagnosticInfo
                lookupError, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>
                symbols, Microsoft.CodeAnalysis.CSharp.LookupResultKind
                lookupKind)
                {
                    var return_v = this_param.BindMemberAccessBadResult(node, nameString, boundLeft, lookupError, symbols, lookupKind);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 328816, 328944);
                    return return_v;
                }


                int
                f_10306_329014_329033(Microsoft.CodeAnalysis.CSharp.LookupResult
                this_param)
                {
                    this_param.Free();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 329014, 329033);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 325189, 329060);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 325189, 329060);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private void BindMemberAccessReportError(BoundMethodGroup node, DiagnosticBag diagnostics)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10306, 329072, 329433);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 329187, 329220);

                var
                nameSyntax = f_10306_329204_329219(node)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 329234, 329295);

                var
                syntax = f_10306_329247_329280(node) ?? (DynAbs.Tracing.TraceSender.Expression_Null<Microsoft.CodeAnalysis.CSharp.Syntax.MemberAccessExpressionSyntax?>(10306, 329247, 329294) ?? nameSyntax)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 329309, 329422);

                f_10306_329309_329421(this, syntax, nameSyntax, f_10306_329362_329371(node), f_10306_329373_329389(node), f_10306_329391_329407(node), diagnostics);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10306, 329072, 329433);

                Microsoft.CodeAnalysis.SyntaxNode
                f_10306_329204_329219(Microsoft.CodeAnalysis.CSharp.BoundMethodGroup
                this_param)
                {
                    var return_v = this_param.NameSyntax;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 329204, 329219);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Syntax.MemberAccessExpressionSyntax?
                f_10306_329247_329280(Microsoft.CodeAnalysis.CSharp.BoundMethodGroup
                this_param)
                {
                    var return_v = this_param.MemberAccessExpressionSyntax;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 329247, 329280);
                    return return_v;
                }


                string
                f_10306_329362_329371(Microsoft.CodeAnalysis.CSharp.BoundMethodGroup
                this_param)
                {
                    var return_v = this_param.Name;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 329362, 329371);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression?
                f_10306_329373_329389(Microsoft.CodeAnalysis.CSharp.BoundMethodGroup
                this_param)
                {
                    var return_v = this_param.ReceiverOpt;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 329373, 329389);
                    return return_v;
                }


                Microsoft.CodeAnalysis.DiagnosticInfo?
                f_10306_329391_329407(Microsoft.CodeAnalysis.CSharp.BoundMethodGroup
                this_param)
                {
                    var return_v = this_param.LookupError;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 329391, 329407);
                    return return_v;
                }


                int
                f_10306_329309_329421(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.SyntaxNode
                node, Microsoft.CodeAnalysis.SyntaxNode
                name, string
                plainName, Microsoft.CodeAnalysis.CSharp.BoundExpression?
                boundLeft, Microsoft.CodeAnalysis.DiagnosticInfo?
                lookupError, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    this_param.BindMemberAccessReportError(node, name, plainName, boundLeft, lookupError, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 329309, 329421);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 329072, 329433);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 329072, 329433);
            }
        }

        private void BindMemberAccessReportError(
                    SyntaxNode node,
                    SyntaxNode name,
                    string plainName,
                    BoundExpression boundLeft,
                    DiagnosticInfo lookupError,
                    DiagnosticBag diagnostics)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10306, 329635, 331581);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 329913, 330048) || true) && (f_10306_329917_329939(boundLeft) && (DynAbs.Tracing.TraceSender.Expression_True(10306, 329917, 329992) && f_10306_329943_329957(boundLeft) != BoundKind.TypeOrValueExpression))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 329913, 330048);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 330026, 330033);

                    return;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 329913, 330048);
                }

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 330064, 331570) || true) && (lookupError != null)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 330064, 331570);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 330250, 330312);

                    f_10306_330250_330311(                // CONSIDER: there are some cases where Dev10 uses the span of "node",
                                                          // rather than "right".
                                    diagnostics, f_10306_330266_330310(lookupError, f_10306_330296_330309(name)));
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 330064, 331570);
                }

                else
                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 330064, 331570);

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 330346, 331570) || true) && (f_10306_330350_330364(node))
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 330346, 331570);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 330398, 330493);

                        f_10306_330398_330492(this, node, boundLeft, plainName, ImmutableArray<Symbol>.Empty, diagnostics);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 330346, 331570);
                    }

                    else

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 330346, 331570);

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 330561, 331555) || true) && ((object)f_10306_330573_330587(boundLeft) == null)
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 330561, 331555);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 330637, 330720);

                            f_10306_330637_330719(diagnostics, ErrorCode.ERR_NoSuchMember, name, f_10306_330690_330707(boundLeft), plainName);
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 330561, 331555);
                        }

                        else
                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 330561, 331555);

                            if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 330762, 331555) || true) && (f_10306_330766_330780(boundLeft) == BoundKind.TypeExpression || (DynAbs.Tracing.TraceSender.Expression_False(10306, 330766, 330874) || f_10306_330833_330847(boundLeft) == BoundKind.BaseReference) || (DynAbs.Tracing.TraceSender.Expression_False(10306, 330766, 330987) || f_10306_330899_330910(node) == SyntaxKind.AwaitExpression && (DynAbs.Tracing.TraceSender.Expression_True(10306, 330899, 330987) && plainName == WellKnownMemberNames.GetResult)))
                            )

                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 330762, 331555);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 331029, 331109);

                                f_10306_331029_331108(diagnostics, ErrorCode.ERR_NoSuchMember, name, f_10306_331082_331096(boundLeft), plainName);
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 330762, 331555);
                            }

                            else
                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 330762, 331555);

                                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 331151, 331555) || true) && (f_10306_331155_331211(this, f_10306_331185_331199(boundLeft), plainName))
                                )

                                {
                                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 331151, 331555);
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 331253, 331363);

                                    f_10306_331253_331362(diagnostics, ErrorCode.ERR_NoSuchMemberOrExtensionNeedUsing, name, f_10306_331326_331340(boundLeft), plainName, "System");
                                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 331151, 331555);
                                }

                                else

                                {
                                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 331151, 331555);
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 331445, 331536);

                                    f_10306_331445_331535(diagnostics, ErrorCode.ERR_NoSuchMemberOrExtension, name, f_10306_331509_331523(boundLeft), plainName);
                                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 331151, 331555);
                                }
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 330762, 331555);
                            }
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 330561, 331555);
                        }
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 330346, 331570);
                    }
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 330064, 331570);
                }
                DynAbs.Tracing.TraceSender.TraceExitMethod(10306, 329635, 331581);

                bool
                f_10306_329917_329939(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.HasAnyErrors;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 329917, 329939);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundKind
                f_10306_329943_329957(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.Kind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 329943, 329957);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Location
                f_10306_330296_330309(Microsoft.CodeAnalysis.SyntaxNode
                this_param)
                {
                    var return_v = this_param.Location;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 330296, 330309);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSDiagnostic
                f_10306_330266_330310(Microsoft.CodeAnalysis.DiagnosticInfo
                info, Microsoft.CodeAnalysis.Location
                location)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.CSDiagnostic(info, location);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 330266, 330310);
                    return return_v;
                }


                int
                f_10306_330250_330311(Microsoft.CodeAnalysis.DiagnosticBag
                this_param, Microsoft.CodeAnalysis.CSharp.CSDiagnostic
                diag)
                {
                    this_param.Add((Microsoft.CodeAnalysis.Diagnostic)diag);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 330250, 330311);
                    return 0;
                }


                bool
                f_10306_330350_330364(Microsoft.CodeAnalysis.SyntaxNode
                syntax)
                {
                    var return_v = syntax.IsQuery();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 330350, 330364);
                    return return_v;
                }


                int
                f_10306_330398_330492(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.SyntaxNode
                queryClause, Microsoft.CodeAnalysis.CSharp.BoundExpression
                instanceArgument, string
                name, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>
                symbols, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    this_param.ReportQueryLookupFailed(queryClause, instanceArgument, name, symbols, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 330398, 330492);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?
                f_10306_330573_330587(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 330573, 330587);
                    return return_v;
                }


                object
                f_10306_330690_330707(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.Display;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 330690, 330707);
                    return return_v;
                }


                int
                f_10306_330637_330719(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, Microsoft.CodeAnalysis.SyntaxNode
                syntax, params object[]
                args)
                {
                    Error(diagnostics, code, (Microsoft.CodeAnalysis.SyntaxNodeOrToken)syntax, args);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 330637, 330719);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.BoundKind
                f_10306_330766_330780(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.Kind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 330766, 330780);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundKind
                f_10306_330833_330847(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.Kind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 330833, 330847);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.SyntaxKind
                f_10306_330899_330910(Microsoft.CodeAnalysis.SyntaxNode
                node)
                {
                    var return_v = node.Kind();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 330899, 330910);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                f_10306_331082_331096(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 331082, 331096);
                    return return_v;
                }


                int
                f_10306_331029_331108(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, Microsoft.CodeAnalysis.SyntaxNode
                syntax, params object[]
                args)
                {
                    Error(diagnostics, code, (Microsoft.CodeAnalysis.SyntaxNodeOrToken)syntax, args);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 331029, 331108);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                f_10306_331185_331199(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 331185, 331199);
                    return return_v;
                }


                bool
                f_10306_331155_331211(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                receiver, string
                methodName)
                {
                    var return_v = this_param.WouldUsingSystemFindExtension(receiver, methodName);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 331155, 331211);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                f_10306_331326_331340(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 331326, 331340);
                    return return_v;
                }


                int
                f_10306_331253_331362(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, Microsoft.CodeAnalysis.SyntaxNode
                syntax, params object[]
                args)
                {
                    Error(diagnostics, code, (Microsoft.CodeAnalysis.SyntaxNodeOrToken)syntax, args);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 331253, 331362);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                f_10306_331509_331523(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 331509, 331523);
                    return return_v;
                }


                int
                f_10306_331445_331535(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, Microsoft.CodeAnalysis.SyntaxNode
                syntax, params object[]
                args)
                {
                    Error(diagnostics, code, (Microsoft.CodeAnalysis.SyntaxNodeOrToken)syntax, args);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 331445, 331535);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 329635, 331581);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 329635, 331581);
            }
        }

        private bool WouldUsingSystemFindExtension(TypeSymbol receiver, string methodName)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10306, 331593, 332211);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 332104, 332200);

                return methodName == WellKnownMemberNames.GetAwaiter && (DynAbs.Tracing.TraceSender.Expression_True(10306, 332111, 332199) && f_10306_332160_332199(this, receiver));
                DynAbs.Tracing.TraceSender.TraceExitMethod(10306, 331593, 332211);

                bool
                f_10306_332160_332199(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                type)
                {
                    var return_v = this_param.ImplementsWinRTAsyncInterface(type);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 332160, 332199);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 331593, 332211);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 331593, 332211);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private bool ImplementsWinRTAsyncInterface(TypeSymbol type)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10306, 332353, 332560);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 332437, 332549);

                return f_10306_332444_332471(this, type) || (DynAbs.Tracing.TraceSender.Expression_False(10306, 332444, 332548) || type.AllInterfacesNoUseSiteDiagnostics.Any(i => IsWinRTAsyncInterface(i)));
                DynAbs.Tracing.TraceSender.TraceExitMethod(10306, 332353, 332560);

                bool
                f_10306_332444_332471(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                type)
                {
                    var return_v = this_param.IsWinRTAsyncInterface(type);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 332444, 332471);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 332353, 332560);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 332353, 332560);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private bool IsWinRTAsyncInterface(TypeSymbol type)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10306, 332572, 333527);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 332648, 332737) || true) && (!f_10306_332653_332675(type))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 332648, 332737);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 332709, 332722);

                    return false;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 332648, 332737);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 332753, 332809);

                var
                namedType = f_10306_332769_332808(((NamedTypeSymbol)type))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 332823, 333516);

                return
                f_10306_332847_332989(namedType, f_10306_332876_332951(f_10306_332876_332887(), WellKnownType.Windows_Foundation_IAsyncAction), TypeCompareKind.ConsiderEverything2) || (DynAbs.Tracing.TraceSender.Expression_False(10306, 332847, 333166) || f_10306_333010_333166(namedType, f_10306_333039_333128(f_10306_333039_333050(), WellKnownType.Windows_Foundation_IAsyncActionWithProgress_T), TypeCompareKind.ConsiderEverything2)) || (DynAbs.Tracing.TraceSender.Expression_False(10306, 332847, 333334) || f_10306_333187_333334(namedType, f_10306_333216_333296(f_10306_333216_333227(), WellKnownType.Windows_Foundation_IAsyncOperation_T), TypeCompareKind.ConsiderEverything2)) || (DynAbs.Tracing.TraceSender.Expression_False(10306, 332847, 333515) || f_10306_333355_333515(namedType, f_10306_333384_333477(f_10306_333384_333395(), WellKnownType.Windows_Foundation_IAsyncOperationWithProgress_T2), TypeCompareKind.ConsiderEverything2));
                DynAbs.Tracing.TraceSender.TraceExitMethod(10306, 332572, 333527);

                bool
                f_10306_332653_332675(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                type)
                {
                    var return_v = type.IsInterfaceType();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 332653, 332675);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                f_10306_332769_332808(Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                this_param)
                {
                    var return_v = this_param.ConstructedFrom;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 332769, 332808);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                f_10306_332876_332887()
                {
                    var return_v = Compilation;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 332876, 332887);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                f_10306_332876_332951(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param, Microsoft.CodeAnalysis.WellKnownType
                type)
                {
                    var return_v = this_param.GetWellKnownType(type);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 332876, 332951);
                    return return_v;
                }


                bool
                f_10306_332847_332989(Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                left, Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                right, Microsoft.CodeAnalysis.TypeCompareKind
                comparison)
                {
                    var return_v = TypeSymbol.Equals((Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol)left, (Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol)right, comparison);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 332847, 332989);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                f_10306_333039_333050()
                {
                    var return_v = Compilation;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 333039, 333050);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                f_10306_333039_333128(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param, Microsoft.CodeAnalysis.WellKnownType
                type)
                {
                    var return_v = this_param.GetWellKnownType(type);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 333039, 333128);
                    return return_v;
                }


                bool
                f_10306_333010_333166(Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                left, Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                right, Microsoft.CodeAnalysis.TypeCompareKind
                comparison)
                {
                    var return_v = TypeSymbol.Equals((Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol)left, (Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol)right, comparison);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 333010, 333166);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                f_10306_333216_333227()
                {
                    var return_v = Compilation;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 333216, 333227);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                f_10306_333216_333296(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param, Microsoft.CodeAnalysis.WellKnownType
                type)
                {
                    var return_v = this_param.GetWellKnownType(type);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 333216, 333296);
                    return return_v;
                }


                bool
                f_10306_333187_333334(Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                left, Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                right, Microsoft.CodeAnalysis.TypeCompareKind
                comparison)
                {
                    var return_v = TypeSymbol.Equals((Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol)left, (Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol)right, comparison);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 333187, 333334);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                f_10306_333384_333395()
                {
                    var return_v = Compilation;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 333384, 333395);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                f_10306_333384_333477(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param, Microsoft.CodeAnalysis.WellKnownType
                type)
                {
                    var return_v = this_param.GetWellKnownType(type);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 333384, 333477);
                    return return_v;
                }


                bool
                f_10306_333355_333515(Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                left, Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                right, Microsoft.CodeAnalysis.TypeCompareKind
                comparison)
                {
                    var return_v = TypeSymbol.Equals((Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol)left, (Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol)right, comparison);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 333355, 333515);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 332572, 333527);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 332572, 333527);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private BoundExpression BindMemberAccessBadResult(BoundMethodGroup node)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10306, 333539, 333918);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 333636, 333669);

                var
                nameSyntax = f_10306_333653_333668(node)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 333683, 333744);

                var
                syntax = f_10306_333696_333729(node) ?? (DynAbs.Tracing.TraceSender.Expression_Null<Microsoft.CodeAnalysis.CSharp.Syntax.MemberAccessExpressionSyntax?>(10306, 333696, 333743) ?? nameSyntax)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 333758, 333907);

                return f_10306_333765_333906(this, syntax, f_10306_333804_333813(node), f_10306_333815_333831(node), f_10306_333833_333849(node), f_10306_333851_333888(f_10306_333875_333887(node)), f_10306_333890_333905(node));
                DynAbs.Tracing.TraceSender.TraceExitMethod(10306, 333539, 333918);

                Microsoft.CodeAnalysis.SyntaxNode
                f_10306_333653_333668(Microsoft.CodeAnalysis.CSharp.BoundMethodGroup
                this_param)
                {
                    var return_v = this_param.NameSyntax;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 333653, 333668);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Syntax.MemberAccessExpressionSyntax?
                f_10306_333696_333729(Microsoft.CodeAnalysis.CSharp.BoundMethodGroup
                this_param)
                {
                    var return_v = this_param.MemberAccessExpressionSyntax;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 333696, 333729);
                    return return_v;
                }


                string
                f_10306_333804_333813(Microsoft.CodeAnalysis.CSharp.BoundMethodGroup
                this_param)
                {
                    var return_v = this_param.Name;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 333804, 333813);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression?
                f_10306_333815_333831(Microsoft.CodeAnalysis.CSharp.BoundMethodGroup
                this_param)
                {
                    var return_v = this_param.ReceiverOpt;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 333815, 333831);
                    return return_v;
                }


                Microsoft.CodeAnalysis.DiagnosticInfo?
                f_10306_333833_333849(Microsoft.CodeAnalysis.CSharp.BoundMethodGroup
                this_param)
                {
                    var return_v = this_param.LookupError;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 333833, 333849);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol>
                f_10306_333875_333887(Microsoft.CodeAnalysis.CSharp.BoundMethodGroup
                this_param)
                {
                    var return_v = this_param.Methods;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 333875, 333887);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>
                f_10306_333851_333888(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol>
                from)
                {
                    var return_v = StaticCast<Symbol>.From(from);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 333851, 333888);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.LookupResultKind
                f_10306_333890_333905(Microsoft.CodeAnalysis.CSharp.BoundMethodGroup
                this_param)
                {
                    var return_v = this_param.ResultKind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 333890, 333905);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_333765_333906(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.SyntaxNode
                node, string
                nameString, Microsoft.CodeAnalysis.CSharp.BoundExpression?
                boundLeft, Microsoft.CodeAnalysis.DiagnosticInfo?
                lookupError, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>
                symbols, Microsoft.CodeAnalysis.CSharp.LookupResultKind
                lookupKind)
                {
                    var return_v = this_param.BindMemberAccessBadResult(node, nameString, boundLeft, lookupError, symbols, lookupKind);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 333765, 333906);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 333539, 333918);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 333539, 333918);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private BoundExpression BindMemberAccessBadResult(
                    SyntaxNode node,
                    string nameString,
                    BoundExpression boundLeft,
                    DiagnosticInfo lookupError,
                    ImmutableArray<Symbol> symbols,
                    LookupResultKind lookupKind)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10306, 334048, 336089);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 334353, 335608) || true) && (symbols.Length > 0 && (DynAbs.Tracing.TraceSender.Expression_True(10306, 334357, 334415) && f_10306_334379_334394(symbols[0]) == SymbolKind.Method))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 334353, 335608);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 334449, 334504);

                    var
                    builder = f_10306_334463_334503()
                    ;
                    try
                    {
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 334522, 334694);
                        foreach (var s in f_10306_334540_334547_I(symbols))
                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 334522, 334694);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 334589, 334615);

                            var
                            m = s as MethodSymbol
                            ;

                            if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 334637, 334675) || true) && ((object)m != null)
                            )
                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 334637, 334675);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 334660, 334675);

                                f_10306_334660_334674(builder, m);
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 334637, 334675);
                            }
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 334522, 334694);
                        }
                    }
                    catch (System.Exception)
                    {
                        DynAbs.Tracing.TraceSender.TraceExitLoopByException(10306, 1, 173);
                        throw;
                    }
                    finally
                    {
                        DynAbs.Tracing.TraceSender.TraceExitLoop(10306, 1, 173);
                    }
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 334712, 334755);

                    var
                    methods = f_10306_334726_334754(builder)
                    ;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 335127, 335593);

                    return f_10306_335134_335592(node, default(ImmutableArray<TypeWithAnnotations>), nameString, methods, (DynAbs.Tracing.TraceSender.Conditional_F1(10306, 335334, 335353) || ((methods.Length == 1 && DynAbs.Tracing.TraceSender.Conditional_F2(10306, 335356, 335366)) || DynAbs.Tracing.TraceSender.Conditional_F3(10306, 335369, 335373))) ? methods[0] : null, lookupError, flags: BoundMethodGroupFlags.None, receiverOpt: boundLeft, resultKind: lookupKind, hasErrors: true);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 334353, 335608);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 335624, 335680);

                var
                symbolOpt = (DynAbs.Tracing.TraceSender.Conditional_F1(10306, 335640, 335659) || ((symbols.Length == 1 && DynAbs.Tracing.TraceSender.Conditional_F2(10306, 335662, 335672)) || DynAbs.Tracing.TraceSender.Conditional_F3(10306, 335675, 335679))) ? symbols[0] : null
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 335694, 336078);

                return f_10306_335701_336077(node, lookupKind, (DynAbs.Tracing.TraceSender.Conditional_F1(10306, 335794, 335819) || (((object)symbolOpt == null && DynAbs.Tracing.TraceSender.Conditional_F2(10306, 335822, 335850)) || DynAbs.Tracing.TraceSender.Conditional_F3(10306, 335853, 335885))) ? ImmutableArray<Symbol>.Empty : f_10306_335853_335885(symbolOpt), (DynAbs.Tracing.TraceSender.Conditional_F1(10306, 335904, 335921) || ((boundLeft == null && DynAbs.Tracing.TraceSender.Conditional_F2(10306, 335924, 335961)) || DynAbs.Tracing.TraceSender.Conditional_F3(10306, 335964, 336024))) ? ImmutableArray<BoundExpression>.Empty : f_10306_335964_336024(f_10306_335986_336023(this, boundLeft)), f_10306_336043_336076(this, symbolOpt));
                DynAbs.Tracing.TraceSender.TraceExitMethod(10306, 334048, 336089);

                Microsoft.CodeAnalysis.SymbolKind
                f_10306_334379_334394(Microsoft.CodeAnalysis.CSharp.Symbol
                this_param)
                {
                    var return_v = this_param.Kind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 334379, 334394);
                    return return_v;
                }


                Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol>
                f_10306_334463_334503()
                {
                    var return_v = ArrayBuilder<MethodSymbol>.GetInstance();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 334463, 334503);
                    return return_v;
                }


                int
                f_10306_334660_334674(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol>
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                item)
                {
                    this_param.Add(item);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 334660, 334674);
                    return 0;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>
                f_10306_334540_334547_I(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 334540, 334547);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol>
                f_10306_334726_334754(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol>
                this_param)
                {
                    var return_v = this_param.ToImmutableAndFree();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 334726, 334754);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundMethodGroup
                f_10306_335134_335592(Microsoft.CodeAnalysis.SyntaxNode
                syntax, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations>
                typeArgumentsOpt, string
                name, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol>
                methods, Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol?
                lookupSymbolOpt, Microsoft.CodeAnalysis.DiagnosticInfo
                lookupError, Microsoft.CodeAnalysis.CSharp.BoundMethodGroupFlags
                flags, Microsoft.CodeAnalysis.CSharp.BoundExpression
                receiverOpt, Microsoft.CodeAnalysis.CSharp.LookupResultKind
                resultKind, bool
                hasErrors)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.BoundMethodGroup(syntax, typeArgumentsOpt, name, methods, (Microsoft.CodeAnalysis.CSharp.Symbol?)lookupSymbolOpt, lookupError, flags: (Microsoft.CodeAnalysis.CSharp.BoundMethodGroupFlags?)flags, receiverOpt: receiverOpt, resultKind: resultKind, hasErrors: hasErrors);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 335134, 335592);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>
                f_10306_335853_335885(Microsoft.CodeAnalysis.CSharp.Symbol
                item)
                {
                    var return_v = ImmutableArray.Create(item);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 335853, 335885);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_335986_336023(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                expression)
                {
                    var return_v = this_param.BindToTypeForErrorRecovery(expression);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 335986, 336023);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                f_10306_335964_336024(Microsoft.CodeAnalysis.CSharp.BoundExpression
                item)
                {
                    var return_v = ImmutableArray.Create(item);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 335964, 336024);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                f_10306_336043_336076(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Symbol?
                symbolOpt)
                {
                    var return_v = this_param.GetNonMethodMemberType(symbolOpt);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 336043, 336076);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundBadExpression
                f_10306_335701_336077(Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.CSharp.LookupResultKind
                resultKind, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>
                symbols, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                childBoundNodes, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                type)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.BoundBadExpression(syntax, resultKind, symbols, childBoundNodes, type);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 335701, 336077);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 334048, 336089);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 334048, 336089);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private TypeSymbol GetNonMethodMemberType(Symbol symbolOpt)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10306, 336101, 336908);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 336185, 336214);

                TypeSymbol
                resultType = null
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 336228, 336844) || true) && ((object)symbolOpt != null)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 336228, 336844);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 336291, 336829);

                    switch (f_10306_336299_336313(symbolOpt))
                    {

                        case SymbolKind.Field:
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 336291, 336829);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 336403, 336482);

                            resultType = f_10306_336416_336476(((FieldSymbol)symbolOpt), f_10306_336454_336475(this)).Type;
                            DynAbs.Tracing.TraceSender.TraceBreak(10306, 336508, 336514);

                            break;
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 336291, 336829);

                        case SymbolKind.Property:
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 336291, 336829);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 336587, 336633);

                            resultType = f_10306_336600_336632(((PropertySymbol)symbolOpt));
                            DynAbs.Tracing.TraceSender.TraceBreak(10306, 336659, 336665);

                            break;
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 336291, 336829);

                        case SymbolKind.Event:
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 336291, 336829);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 336735, 336778);

                            resultType = f_10306_336748_336777(((EventSymbol)symbolOpt));
                            DynAbs.Tracing.TraceSender.TraceBreak(10306, 336804, 336810);

                            break;
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 336291, 336829);
                    }
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 336228, 336844);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 336858, 336897);

                return resultType ?? (DynAbs.Tracing.TraceSender.Expression_Null<Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?>(10306, 336865, 336896) ?? f_10306_336879_336896(this));
                DynAbs.Tracing.TraceSender.TraceExitMethod(10306, 336101, 336908);

                Microsoft.CodeAnalysis.SymbolKind
                f_10306_336299_336313(Microsoft.CodeAnalysis.CSharp.Symbol
                this_param)
                {
                    var return_v = this_param.Kind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 336299, 336313);
                    return return_v;
                }


                Roslyn.Utilities.ConsList<Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol>
                f_10306_336454_336475(Microsoft.CodeAnalysis.CSharp.Binder
                this_param)
                {
                    var return_v = this_param.FieldsBeingBound;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 336454, 336475);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                f_10306_336416_336476(Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol
                this_param, Roslyn.Utilities.ConsList<Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol>
                fieldsBeingBound)
                {
                    var return_v = this_param.GetFieldType(fieldsBeingBound);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 336416, 336476);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                f_10306_336600_336632(Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 336600, 336632);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                f_10306_336748_336777(Microsoft.CodeAnalysis.CSharp.Symbols.EventSymbol
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 336748, 336777);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                f_10306_336879_336896(Microsoft.CodeAnalysis.CSharp.Binder
                this_param)
                {
                    var return_v = this_param.CreateErrorType();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 336879, 336896);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 336101, 336908);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 336101, 336908);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private static void CombineExtensionMethodArguments(BoundExpression receiver, AnalyzedArguments originalArguments, AnalyzedArguments extensionMethodArguments)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterStaticMethod(10306, 337204, 338344);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 337387, 337418);

                f_10306_337387_337417(receiver != null);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 337432, 337492);

                f_10306_337432_337491(f_10306_337445_337485(extensionMethodArguments.Arguments) == 0);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 337506, 337562);

                f_10306_337506_337561(f_10306_337519_337555(extensionMethodArguments.Names) == 0);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 337576, 337635);

                f_10306_337576_337634(f_10306_337589_337628(extensionMethodArguments.RefKinds) == 0);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 337651, 337711);

                extensionMethodArguments.IsExtensionMethodInvocation = true;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 337725, 337774);

                f_10306_337725_337773(extensionMethodArguments.Arguments, receiver);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 337788, 337861);

                f_10306_337788_337860(extensionMethodArguments.Arguments, originalArguments.Arguments);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 337877, 338087) || true) && (f_10306_337881_337910(originalArguments.Names) > 0)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 337877, 338087);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 337948, 337989);

                    f_10306_337948_337988(extensionMethodArguments.Names, null);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 338007, 338072);

                    f_10306_338007_338071(extensionMethodArguments.Names, originalArguments.Names);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 337877, 338087);
                }

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 338103, 338333) || true) && (f_10306_338107_338139(originalArguments.RefKinds) > 0)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 338103, 338333);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 338177, 338229);

                    f_10306_338177_338228(extensionMethodArguments.RefKinds, RefKind.None);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 338247, 338318);

                    f_10306_338247_338317(extensionMethodArguments.RefKinds, originalArguments.RefKinds);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 338103, 338333);
                }
                DynAbs.Tracing.TraceSender.TraceExitStaticMethod(10306, 337204, 338344);

                int
                f_10306_337387_337417(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 337387, 337417);
                    return 0;
                }


                int
                f_10306_337445_337485(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                this_param)
                {
                    var return_v = this_param.Count;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 337445, 337485);
                    return return_v;
                }


                int
                f_10306_337432_337491(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 337432, 337491);
                    return 0;
                }


                int
                f_10306_337519_337555(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Syntax.IdentifierNameSyntax>
                this_param)
                {
                    var return_v = this_param.Count;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 337519, 337555);
                    return return_v;
                }


                int
                f_10306_337506_337561(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 337506, 337561);
                    return 0;
                }


                int
                f_10306_337589_337628(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.RefKind>
                this_param)
                {
                    var return_v = this_param.Count;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 337589, 337628);
                    return return_v;
                }


                int
                f_10306_337576_337634(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 337576, 337634);
                    return 0;
                }


                int
                f_10306_337725_337773(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                item)
                {
                    this_param.Add(item);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 337725, 337773);
                    return 0;
                }


                int
                f_10306_337788_337860(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                this_param, Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                items)
                {
                    this_param.AddRange(items);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 337788, 337860);
                    return 0;
                }


                int
                f_10306_337881_337910(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Syntax.IdentifierNameSyntax>
                this_param)
                {
                    var return_v = this_param.Count;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 337881, 337910);
                    return return_v;
                }


                int
                f_10306_337948_337988(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Syntax.IdentifierNameSyntax>
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.IdentifierNameSyntax
                item)
                {
                    this_param.Add(item);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 337948, 337988);
                    return 0;
                }


                int
                f_10306_338007_338071(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Syntax.IdentifierNameSyntax>
                this_param, Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Syntax.IdentifierNameSyntax>
                items)
                {
                    this_param.AddRange(items);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 338007, 338071);
                    return 0;
                }


                int
                f_10306_338107_338139(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.RefKind>
                this_param)
                {
                    var return_v = this_param.Count;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 338107, 338139);
                    return return_v;
                }


                int
                f_10306_338177_338228(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.RefKind>
                this_param, Microsoft.CodeAnalysis.RefKind
                item)
                {
                    this_param.Add(item);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 338177, 338228);
                    return 0;
                }


                int
                f_10306_338247_338317(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.RefKind>
                this_param, Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.RefKind>
                items)
                {
                    this_param.AddRange(items);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 338247, 338317);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 337204, 338344);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 337204, 338344);
            }
        }

        private BoundExpression BindMemberOfType(
                    SyntaxNode node,
                    SyntaxNode right,
                    string plainName,
                    int arity,
                    bool indexed,
                    BoundExpression left,
                    SeparatedSyntaxList<TypeSyntax> typeArgumentsSyntax,
                    ImmutableArray<TypeWithAnnotations> typeArgumentsWithAnnotations,
                    LookupResult lookupResult,
                    BoundMethodGroupFlags methodGroupFlags,
                    DiagnosticBag diagnostics)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10306, 338458, 344406);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 338980, 339007);

                f_10306_338980_339006(node != null);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 339021, 339048);

                f_10306_339021_339047(left != null);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 339062, 339103);

                f_10306_339062_339102(f_10306_339075_339101(lookupResult));
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 339117, 339158);

                f_10306_339117_339157(f_10306_339130_339156(f_10306_339130_339150(lookupResult)));
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 339174, 339223);

                var
                members = f_10306_339188_339222()
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 339237, 339260);

                BoundExpression
                result
                = default(BoundExpression);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 339274, 339288);

                bool
                wasError
                = default(bool);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 339302, 339426);

                Symbol
                symbol = f_10306_339318_339425(this, lookupResult, right, plainName, arity, members, diagnostics, out wasError)
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 339442, 344336) || true) && ((object)symbol == null)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 339442, 344336);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 339502, 339534);

                    f_10306_339502_339533(f_10306_339515_339528(members) > 0);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 340054, 340467);

                    result = f_10306_340063_340466(node, typeArgumentsSyntax, typeArgumentsWithAnnotations, left, plainName, members, lookupResult, methodGroupFlags, wasError, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 339442, 344336);
                }

                else

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 339442, 344336);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 340603, 340650);

                    f_10306_340603_340649(f_10306_340616_340627(symbol) != SymbolKind.Method);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 340668, 340777);

                    left = f_10306_340675_340776(this, left, f_10306_340708_340723(symbol) || (DynAbs.Tracing.TraceSender.Expression_False(10306, 340708, 340762) || f_10306_340727_340738(symbol) == SymbolKind.NamedType), diagnostics);

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 340917, 341123) || true) && (f_10306_340921_340932(symbol) != SymbolKind.Event)
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 340917, 341123);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 340994, 341104);

                        f_10306_340994_341103(this, diagnostics, symbol, node, hasBaseReceiver: f_10306_341066_341075(left) == BoundKind.BaseReference);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 340917, 341123);
                    }
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 341143, 344321);

                    switch (f_10306_341151_341162(symbol))
                    {

                        case SymbolKind.NamedType:
                        case SymbolKind.ErrorType:
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 341143, 344321);

                            if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 341304, 341671) || true) && (f_10306_341308_341332(left) == true && (DynAbs.Tracing.TraceSender.Expression_True(10306, 341308, 341353) && !wasError))
                            )

                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 341304, 341671);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 341521, 341598);

                                f_10306_341521_341597(diagnostics, ErrorCode.ERR_BadTypeReference, right, plainName, symbol);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 341628, 341644);

                                wasError = true;
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 341304, 341671);
                            }
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 341851, 341886);

                            var
                            type = (NamedTypeSymbol)symbol
                            ;

                            if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 341912, 342168) || true) && (f_10306_341916_341955_M(!typeArgumentsWithAnnotations.IsDefault))
                            )

                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 341912, 342168);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 342013, 342141);

                                type = f_10306_342020_342140(this, right, type, typeArgumentsSyntax, typeArgumentsWithAnnotations, diagnostics);
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 341912, 342168);
                            }
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 342196, 342572);

                            result = f_10306_342205_342571(syntax: node, aliasOpt: null, boundContainingTypeOpt: left as BoundTypeExpression, boundDimensionsOpt: ImmutableArray<BoundExpression>.Empty, typeWithAnnotations: TypeWithAnnotations.Create(type));
                            DynAbs.Tracing.TraceSender.TraceBreak(10306, 342598, 342604);

                            break;
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 341143, 344321);

                        case SymbolKind.Property:
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 341143, 344321);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 342847, 342964);

                            result = f_10306_342856_342963(this, node, left, symbol, diagnostics, f_10306_342924_342941(lookupResult), hasErrors: wasError);
                            DynAbs.Tracing.TraceSender.TraceBreak(10306, 342990, 342996);

                            break;
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 341143, 344321);

                        case SymbolKind.Event:
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 341143, 344321);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 343231, 343342);

                            result = f_10306_343240_343341(this, node, left, symbol, diagnostics, f_10306_343302_343319(lookupResult), hasErrors: wasError);
                            DynAbs.Tracing.TraceSender.TraceBreak(10306, 343368, 343374);

                            break;
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 341143, 344321);

                        case SymbolKind.Field:
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 341143, 344321);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 344038, 344158);

                            result = f_10306_344047_344157(this, node, left, symbol, diagnostics, f_10306_344109_344126(lookupResult), indexed, hasErrors: wasError);
                            DynAbs.Tracing.TraceSender.TraceBreak(10306, 344184, 344190);

                            break;
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 341143, 344321);

                        default:
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 341143, 344321);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 344248, 344302);

                            throw f_10306_344254_344301(f_10306_344289_344300(symbol));
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 341143, 344321);
                    }
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 339442, 344336);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 344352, 344367);

                f_10306_344352_344366(
                            members);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 344381, 344395);

                return result;
                DynAbs.Tracing.TraceSender.TraceExitMethod(10306, 338458, 344406);

                int
                f_10306_338980_339006(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 338980, 339006);
                    return 0;
                }


                int
                f_10306_339021_339047(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 339021, 339047);
                    return 0;
                }


                bool
                f_10306_339075_339101(Microsoft.CodeAnalysis.CSharp.LookupResult
                this_param)
                {
                    var return_v = this_param.IsMultiViable;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 339075, 339101);
                    return return_v;
                }


                int
                f_10306_339062_339102(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 339062, 339102);
                    return 0;
                }


                Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbol>
                f_10306_339130_339150(Microsoft.CodeAnalysis.CSharp.LookupResult
                this_param)
                {
                    var return_v = this_param.Symbols;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 339130, 339150);
                    return return_v;
                }


                bool
                f_10306_339130_339156(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbol>
                this_param)
                {
                    var return_v = this_param.Any();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 339130, 339156);
                    return return_v;
                }


                int
                f_10306_339117_339157(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 339117, 339157);
                    return 0;
                }


                Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbol>
                f_10306_339188_339222()
                {
                    var return_v = ArrayBuilder<Symbol>.GetInstance();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 339188, 339222);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbol
                f_10306_339318_339425(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.LookupResult
                result, Microsoft.CodeAnalysis.SyntaxNode
                node, string
                plainName, int
                arity, Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbol>
                methodOrPropertyGroup, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, out bool
                wasError)
                {
                    var return_v = this_param.GetSymbolOrMethodOrPropertyGroup(result, node, plainName, arity, methodOrPropertyGroup, diagnostics, out wasError);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 339318, 339425);
                    return return_v;
                }


                int
                f_10306_339515_339528(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbol>
                this_param)
                {
                    var return_v = this_param.Count;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 339515, 339528);
                    return return_v;
                }


                int
                f_10306_339502_339533(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 339502, 339533);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.BoundMethodOrPropertyGroup
                f_10306_340063_340466(Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.SeparatedSyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax>
                typeArgumentsSyntax, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations>
                typeArguments, Microsoft.CodeAnalysis.CSharp.BoundExpression
                receiver, string
                plainName, Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbol>
                members, Microsoft.CodeAnalysis.CSharp.LookupResult
                lookupResult, Microsoft.CodeAnalysis.CSharp.BoundMethodGroupFlags
                methodGroupFlags, bool
                hasErrors, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = ConstructBoundMemberGroupAndReportOmittedTypeArguments(syntax, typeArgumentsSyntax, typeArguments, receiver, plainName, members, lookupResult, methodGroupFlags, hasErrors, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 340063, 340466);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SymbolKind
                f_10306_340616_340627(Microsoft.CodeAnalysis.CSharp.Symbol
                this_param)
                {
                    var return_v = this_param.Kind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 340616, 340627);
                    return return_v;
                }


                int
                f_10306_340603_340649(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 340603, 340649);
                    return 0;
                }


                bool
                f_10306_340708_340723(Microsoft.CodeAnalysis.CSharp.Symbol
                this_param)
                {
                    var return_v = this_param.IsStatic;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 340708, 340723);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SymbolKind
                f_10306_340727_340738(Microsoft.CodeAnalysis.CSharp.Symbol
                this_param)
                {
                    var return_v = this_param.Kind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 340727, 340738);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_340675_340776(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                receiver, bool
                useType, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.ReplaceTypeOrValueReceiver(receiver, useType, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 340675, 340776);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SymbolKind
                f_10306_340921_340932(Microsoft.CodeAnalysis.CSharp.Symbol
                this_param)
                {
                    var return_v = this_param.Kind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 340921, 340932);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundKind
                f_10306_341066_341075(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.Kind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 341066, 341075);
                    return return_v;
                }


                int
                f_10306_340994_341103(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.Symbol
                symbol, Microsoft.CodeAnalysis.SyntaxNode
                node, bool
                hasBaseReceiver)
                {
                    this_param.ReportDiagnosticsIfObsolete(diagnostics, symbol, node, hasBaseReceiver: hasBaseReceiver);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 340994, 341103);
                    return 0;
                }


                Microsoft.CodeAnalysis.SymbolKind
                f_10306_341151_341162(Microsoft.CodeAnalysis.CSharp.Symbol
                this_param)
                {
                    var return_v = this_param.Kind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 341151, 341162);
                    return return_v;
                }


                bool?
                f_10306_341308_341332(Microsoft.CodeAnalysis.CSharp.BoundExpression
                receiver)
                {
                    var return_v = IsInstanceReceiver(receiver);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 341308, 341332);
                    return return_v;
                }


                int
                f_10306_341521_341597(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, Microsoft.CodeAnalysis.SyntaxNode
                syntax, params object[]
                args)
                {
                    Error(diagnostics, code, (Microsoft.CodeAnalysis.SyntaxNodeOrToken)syntax, args);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 341521, 341597);
                    return 0;
                }


                bool
                f_10306_341916_341955_M(bool
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 341916, 341955);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                f_10306_342020_342140(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.SyntaxNode
                typeSyntax, Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                type, Microsoft.CodeAnalysis.SeparatedSyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax>
                typeArgumentsSyntax, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations>
                typeArguments, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.ConstructNamedTypeUnlessTypeArgumentOmitted(typeSyntax, type, typeArgumentsSyntax, typeArguments, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 342020, 342140);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundTypeExpression
                f_10306_342205_342571(Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.CSharp.Symbols.AliasSymbol?
                aliasOpt, Microsoft.CodeAnalysis.CSharp.BoundExpression
                boundContainingTypeOpt, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                boundDimensionsOpt, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                typeWithAnnotations)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.BoundTypeExpression(syntax: syntax, aliasOpt: aliasOpt, boundContainingTypeOpt: (Microsoft.CodeAnalysis.CSharp.BoundTypeExpression?)boundContainingTypeOpt, boundDimensionsOpt: boundDimensionsOpt, typeWithAnnotations: typeWithAnnotations);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 342205, 342571);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.LookupResultKind
                f_10306_342924_342941(Microsoft.CodeAnalysis.CSharp.LookupResult
                this_param)
                {
                    var return_v = this_param.Kind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 342924, 342941);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_342856_342963(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.SyntaxNode
                node, Microsoft.CodeAnalysis.CSharp.BoundExpression
                receiver, Microsoft.CodeAnalysis.CSharp.Symbol
                propertySymbol, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.LookupResultKind
                lookupResult, bool
                hasErrors)
                {
                    var return_v = this_param.BindPropertyAccess(node, receiver, (Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol)propertySymbol, diagnostics, lookupResult, hasErrors: hasErrors);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 342856, 342963);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.LookupResultKind
                f_10306_343302_343319(Microsoft.CodeAnalysis.CSharp.LookupResult
                this_param)
                {
                    var return_v = this_param.Kind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 343302, 343319);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_343240_343341(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.SyntaxNode
                node, Microsoft.CodeAnalysis.CSharp.BoundExpression
                receiver, Microsoft.CodeAnalysis.CSharp.Symbol
                eventSymbol, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.LookupResultKind
                lookupResult, bool
                hasErrors)
                {
                    var return_v = this_param.BindEventAccess(node, receiver, (Microsoft.CodeAnalysis.CSharp.Symbols.EventSymbol)eventSymbol, diagnostics, lookupResult, hasErrors: hasErrors);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 343240, 343341);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.LookupResultKind
                f_10306_344109_344126(Microsoft.CodeAnalysis.CSharp.LookupResult
                this_param)
                {
                    var return_v = this_param.Kind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 344109, 344126);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_344047_344157(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.SyntaxNode
                node, Microsoft.CodeAnalysis.CSharp.BoundExpression
                receiver, Microsoft.CodeAnalysis.CSharp.Symbol
                fieldSymbol, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.LookupResultKind
                resultKind, bool
                indexed, bool
                hasErrors)
                {
                    var return_v = this_param.BindFieldAccess(node, receiver, (Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol)fieldSymbol, diagnostics, resultKind, indexed, hasErrors: hasErrors);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 344047, 344157);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SymbolKind
                f_10306_344289_344300(Microsoft.CodeAnalysis.CSharp.Symbol
                this_param)
                {
                    var return_v = this_param.Kind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 344289, 344300);
                    return return_v;
                }


                System.Exception
                f_10306_344254_344301(Microsoft.CodeAnalysis.SymbolKind
                o)
                {
                    var return_v = ExceptionUtilities.UnexpectedValue((object)o);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 344254, 344301);
                    return return_v;
                }


                int
                f_10306_344352_344366(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbol>
                this_param)
                {
                    this_param.Free();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 344352, 344366);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 338458, 344406);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 338458, 344406);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        protected MethodGroupResolution BindExtensionMethod(
                    SyntaxNode expression,
                    string methodName,
                    AnalyzedArguments analyzedArguments,
                    BoundExpression left,
                    ImmutableArray<TypeWithAnnotations> typeArgumentsWithAnnotations,
                    bool isMethodGroupConversion,
                    RefKind returnRefKind,
                    TypeSymbol returnType)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10306, 344418, 349609);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 344842, 344888);

                var
                firstResult = f_10306_344860_344887()
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 344902, 344943);

                AnalyzedArguments
                actualArguments = null
                ;
                try
                {
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 344959, 349447);
                    foreach (var scope in f_10306_344981_345012_I(f_10306_344981_345012(this)))
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 344959, 349447);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 345046, 345090);

                        var
                        methodGroup = f_10306_345064_345089()
                        ;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 345108, 345154);

                        var
                        diagnostics = f_10306_345126_345153()
                        ;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 345174, 345313);

                        f_10306_345174_345312(
                                        this, scope, methodGroup, expression, left, methodName, typeArgumentsWithAnnotations, diagnostics);

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 345673, 346387) || true) && (analyzedArguments == null)
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 345673, 346387);

                            if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 345744, 346158) || true) && (expression == f_10306_345762_345785())
                            )

                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 345744, 346158);
                                try
                                {
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 345844, 345877);
                                    for (int
            i = f_10306_345848_345873(f_10306_345848_345867(methodGroup)) - 1
            ; (DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 345835, 346135) || true) && (i >= 0)
            ; DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 345887, 345890)
            , i--, DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 345835, 346135))

                                    {
                                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 345835, 346135);

                                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 345948, 346108) || true) && ((object)f_10306_345960_346033(f_10306_345960_345982(f_10306_345960_345979(methodGroup), i), f_10306_346005_346014(left), f_10306_346016_346032(this)) == null)
                                        )

                                        {
                                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 345948, 346108);
                                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 346076, 346108);

                                            f_10306_346076_346107(f_10306_346076_346095(methodGroup), i);
                                            DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 345948, 346108);
                                        }
                                    }
                                }
                                catch (System.Exception)
                                {
                                    DynAbs.Tracing.TraceSender.TraceExitLoopByException(10306, 1, 301);
                                    throw;
                                }
                                finally
                                {
                                    DynAbs.Tracing.TraceSender.TraceExitLoop(10306, 1, 301);
                                }
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 345744, 346158);
                            }

                            if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 346182, 346368) || true) && (f_10306_346186_346211(f_10306_346186_346205(methodGroup)) != 0)
                            )

                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 346182, 346368);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 346266, 346345);

                                return f_10306_346273_346344(methodGroup, f_10306_346312_346343(diagnostics));
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 346182, 346368);
                            }
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 345673, 346387);
                        }

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 346407, 346593) || true) && (f_10306_346411_346436(f_10306_346411_346430(methodGroup)) == 0)
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 346407, 346593);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 346483, 346502);

                            f_10306_346483_346501(methodGroup);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 346524, 346543);

                            f_10306_346524_346542(diagnostics);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 346565, 346574);

                            continue;
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 346407, 346593);
                        }

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 346613, 347006) || true) && (actualArguments == null)
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 346613, 347006);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 346841, 346891);

                            actualArguments = f_10306_346859_346890();
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 346913, 346987);

                            f_10306_346913_346986(left, analyzedArguments, actualArguments);
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 346613, 347006);
                        }
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 347026, 347110);

                        var
                        overloadResolutionResult = f_10306_347057_347109()
                        ;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 347128, 347211);

                        bool
                        allowRefOmittedArguments = f_10306_347160_347210(f_10306_347160_347180(methodGroup))
                        ;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 347229, 347279);

                        HashSet<DiagnosticInfo>
                        useSiteDiagnostics = null
                        ;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 347297, 347928);

                        f_10306_347297_347927(f_10306_347297_347315(), methods: f_10306_347382_347401(methodGroup), typeArguments: f_10306_347439_347464(methodGroup), receiver: f_10306_347497_347517(methodGroup), arguments: actualArguments, result: overloadResolutionResult, useSiteDiagnostics: ref useSiteDiagnostics, isMethodGroupConversion: isMethodGroupConversion, allowRefOmittedArguments: allowRefOmittedArguments, returnRefKind: returnRefKind, returnType: returnType);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 347946, 347994);

                        f_10306_347946_347993(diagnostics, expression, useSiteDiagnostics);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 348012, 348068);

                        var
                        sealedDiagnostics = f_10306_348036_348067(diagnostics)
                        ;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 348205, 348380);

                        var
                        result = f_10306_348218_348379(methodGroup, null, overloadResolutionResult, f_10306_348289_348335(actualArguments), f_10306_348337_348359(methodGroup), sealedDiagnostics)
                        ;

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 348731, 349432) || true) && (result.HasAnyApplicableMethod)
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 348731, 349432);

                            if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 348806, 349004) || true) && (f_10306_348810_348830_M(!firstResult.IsEmpty))
                            )

                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 348806, 349004);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 348880, 348911);

                                f_10306_348880_348910(firstResult.MethodGroup);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 348937, 348981);

                                f_10306_348937_348980(firstResult.OverloadResolutionResult);
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 348806, 349004);
                            }
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 349026, 349040);

                            return result;
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 348731, 349432);
                        }

                        else
                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 348731, 349432);

                            if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 349082, 349432) || true) && (firstResult.IsEmpty)
                            )

                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 349082, 349432);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 349147, 349168);

                                firstResult = result;
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 349082, 349432);
                            }

                            else

                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 349082, 349432);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 349340, 349372);

                                f_10306_349340_349371(                    // Neither the first result, nor applicable. No need to save result.
                                                    overloadResolutionResult);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 349394, 349413);

                                f_10306_349394_349412(methodGroup);
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 349082, 349432);
                            }
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 348731, 349432);
                        }
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 344959, 349447);
                    }
                }
                catch (System.Exception)
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoopByException(10306, 1, 4489);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoop(10306, 1, 4489);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 349463, 349527);

                f_10306_349463_349526((actualArguments == null) || (DynAbs.Tracing.TraceSender.Expression_False(10306, 349476, 349525) || f_10306_349505_349525_M(!firstResult.IsEmpty)));
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 349541, 349565);

                DynAbs.Tracing.TraceSender.TraceInvocationWrapper(() => DynAbs.Tracing.TraceSender.TraceConditionalAccessExpression(actualArguments, 10306, 349541, 349564)?.Free(), 10306, 349557, 349564);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 349579, 349598);

                return firstResult;
                DynAbs.Tracing.TraceSender.TraceExitMethod(10306, 344418, 349609);

                Microsoft.CodeAnalysis.CSharp.MethodGroupResolution
                f_10306_344860_344887()
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.MethodGroupResolution();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 344860, 344887);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.ExtensionMethodScopes
                f_10306_344981_345012(Microsoft.CodeAnalysis.CSharp.Binder
                binder)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.ExtensionMethodScopes(binder);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 344981, 345012);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.MethodGroup
                f_10306_345064_345089()
                {
                    var return_v = MethodGroup.GetInstance();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 345064, 345089);
                    return return_v;
                }


                Microsoft.CodeAnalysis.DiagnosticBag
                f_10306_345126_345153()
                {
                    var return_v = DiagnosticBag.GetInstance();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 345126, 345153);
                    return return_v;
                }


                int
                f_10306_345174_345312(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.ExtensionMethodScope
                scope, Microsoft.CodeAnalysis.CSharp.MethodGroup
                methodGroup, Microsoft.CodeAnalysis.SyntaxNode
                node, Microsoft.CodeAnalysis.CSharp.BoundExpression
                left, string
                rightName, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations>
                typeArgumentsWithAnnotations, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    this_param.PopulateExtensionMethodsFromSingleBinder(scope, methodGroup, node, left, rightName, typeArgumentsWithAnnotations, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 345174, 345312);
                    return 0;
                }


                Microsoft.CodeAnalysis.SyntaxNode?
                f_10306_345762_345785()
                {
                    var return_v = EnclosingNameofArgument;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 345762, 345785);
                    return return_v;
                }


                Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol>
                f_10306_345848_345867(Microsoft.CodeAnalysis.CSharp.MethodGroup
                this_param)
                {
                    var return_v = this_param.Methods;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 345848, 345867);
                    return return_v;
                }


                int
                f_10306_345848_345873(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol>
                this_param)
                {
                    var return_v = this_param.Count;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 345848, 345873);
                    return return_v;
                }


                Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol>
                f_10306_345960_345979(Microsoft.CodeAnalysis.CSharp.MethodGroup
                this_param)
                {
                    var return_v = this_param.Methods;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 345960, 345979);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                f_10306_345960_345982(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol>
                this_param, int
                i0)
                {
                    var return_v = this_param[i0];
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 345960, 345982);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?
                f_10306_346005_346014(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 346005, 346014);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                f_10306_346016_346032(Microsoft.CodeAnalysis.CSharp.Binder
                this_param)
                {
                    var return_v = this_param.Compilation;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 346016, 346032);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                f_10306_345960_346033(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?
                receiverType, Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                compilation)
                {
                    var return_v = this_param.ReduceExtensionMethod(receiverType, compilation);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 345960, 346033);
                    return return_v;
                }


                Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol>
                f_10306_346076_346095(Microsoft.CodeAnalysis.CSharp.MethodGroup
                this_param)
                {
                    var return_v = this_param.Methods;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 346076, 346095);
                    return return_v;
                }


                int
                f_10306_346076_346107(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol>
                this_param, int
                index)
                {
                    this_param.RemoveAt(index);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 346076, 346107);
                    return 0;
                }


                Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol>
                f_10306_346186_346205(Microsoft.CodeAnalysis.CSharp.MethodGroup
                this_param)
                {
                    var return_v = this_param.Methods;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 346186, 346205);
                    return return_v;
                }


                int
                f_10306_346186_346211(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol>
                this_param)
                {
                    var return_v = this_param.Count;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 346186, 346211);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Diagnostic>
                f_10306_346312_346343(Microsoft.CodeAnalysis.DiagnosticBag
                this_param)
                {
                    var return_v = this_param.ToReadOnlyAndFree();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 346312, 346343);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.MethodGroupResolution
                f_10306_346273_346344(Microsoft.CodeAnalysis.CSharp.MethodGroup
                methodGroup, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Diagnostic>
                diagnostics)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.MethodGroupResolution(methodGroup, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 346273, 346344);
                    return return_v;
                }


                Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol>
                f_10306_346411_346430(Microsoft.CodeAnalysis.CSharp.MethodGroup
                this_param)
                {
                    var return_v = this_param.Methods;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 346411, 346430);
                    return return_v;
                }


                int
                f_10306_346411_346436(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol>
                this_param)
                {
                    var return_v = this_param.Count;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 346411, 346436);
                    return return_v;
                }


                int
                f_10306_346483_346501(Microsoft.CodeAnalysis.CSharp.MethodGroup
                this_param)
                {
                    this_param.Free();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 346483, 346501);
                    return 0;
                }


                int
                f_10306_346524_346542(Microsoft.CodeAnalysis.DiagnosticBag
                this_param)
                {
                    this_param.Free();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 346524, 346542);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.AnalyzedArguments
                f_10306_346859_346890()
                {
                    var return_v = AnalyzedArguments.GetInstance();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 346859, 346890);
                    return return_v;
                }


                int
                f_10306_346913_346986(Microsoft.CodeAnalysis.CSharp.BoundExpression
                receiver, Microsoft.CodeAnalysis.CSharp.AnalyzedArguments?
                originalArguments, Microsoft.CodeAnalysis.CSharp.AnalyzedArguments
                extensionMethodArguments)
                {
                    CombineExtensionMethodArguments(receiver, originalArguments, extensionMethodArguments);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 346913, 346986);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.OverloadResolutionResult<Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol>
                f_10306_347057_347109()
                {
                    var return_v = OverloadResolutionResult<MethodSymbol>.GetInstance();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 347057, 347109);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_347160_347180(Microsoft.CodeAnalysis.CSharp.MethodGroup
                this_param)
                {
                    var return_v = this_param.Receiver;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 347160, 347180);
                    return return_v;
                }


                bool
                f_10306_347160_347210(Microsoft.CodeAnalysis.CSharp.BoundExpression
                expressionOpt)
                {
                    var return_v = expressionOpt.IsExpressionOfComImportType();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 347160, 347210);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.OverloadResolution
                f_10306_347297_347315()
                {
                    var return_v = OverloadResolution;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 347297, 347315);
                    return return_v;
                }


                Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol>
                f_10306_347382_347401(Microsoft.CodeAnalysis.CSharp.MethodGroup
                this_param)
                {
                    var return_v = this_param.Methods;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 347382, 347401);
                    return return_v;
                }


                Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations>
                f_10306_347439_347464(Microsoft.CodeAnalysis.CSharp.MethodGroup
                this_param)
                {
                    var return_v = this_param.TypeArguments;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 347439, 347464);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_347497_347517(Microsoft.CodeAnalysis.CSharp.MethodGroup
                this_param)
                {
                    var return_v = this_param.Receiver;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 347497, 347517);
                    return return_v;
                }


                int
                f_10306_347297_347927(Microsoft.CodeAnalysis.CSharp.OverloadResolution
                this_param, Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol>
                methods, Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations>
                typeArguments, Microsoft.CodeAnalysis.CSharp.BoundExpression
                receiver, Microsoft.CodeAnalysis.CSharp.AnalyzedArguments
                arguments, Microsoft.CodeAnalysis.CSharp.OverloadResolutionResult<Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol>
                result, ref System.Collections.Generic.HashSet<Microsoft.CodeAnalysis.DiagnosticInfo>?
                useSiteDiagnostics, bool
                isMethodGroupConversion, bool
                allowRefOmittedArguments, Microsoft.CodeAnalysis.RefKind
                returnRefKind, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                returnType)
                {
                    this_param.MethodInvocationOverloadResolution(methods: methods, typeArguments: typeArguments, receiver: receiver, arguments: arguments, result: result, useSiteDiagnostics: ref useSiteDiagnostics, isMethodGroupConversion: isMethodGroupConversion, allowRefOmittedArguments: allowRefOmittedArguments, returnRefKind: returnRefKind, returnType: returnType);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 347297, 347927);
                    return 0;
                }


                bool
                f_10306_347946_347993(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.SyntaxNode
                node, System.Collections.Generic.HashSet<Microsoft.CodeAnalysis.DiagnosticInfo>
                useSiteDiagnostics)
                {
                    var return_v = diagnostics.Add(node, useSiteDiagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 347946, 347993);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Diagnostic>
                f_10306_348036_348067(Microsoft.CodeAnalysis.DiagnosticBag
                this_param)
                {
                    var return_v = this_param.ToReadOnlyAndFree();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 348036, 348067);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.AnalyzedArguments
                f_10306_348289_348335(Microsoft.CodeAnalysis.CSharp.AnalyzedArguments
                original)
                {
                    var return_v = AnalyzedArguments.GetInstance(original);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 348289, 348335);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.LookupResultKind
                f_10306_348337_348359(Microsoft.CodeAnalysis.CSharp.MethodGroup
                this_param)
                {
                    var return_v = this_param.ResultKind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 348337, 348359);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.MethodGroupResolution
                f_10306_348218_348379(Microsoft.CodeAnalysis.CSharp.MethodGroup
                methodGroup, Microsoft.CodeAnalysis.CSharp.Symbol
                otherSymbol, Microsoft.CodeAnalysis.CSharp.OverloadResolutionResult<Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol>
                overloadResolutionResult, Microsoft.CodeAnalysis.CSharp.AnalyzedArguments
                analyzedArguments, Microsoft.CodeAnalysis.CSharp.LookupResultKind
                resultKind, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Diagnostic>
                diagnostics)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.MethodGroupResolution(methodGroup, otherSymbol, overloadResolutionResult, analyzedArguments, resultKind, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 348218, 348379);
                    return return_v;
                }


                bool
                f_10306_348810_348830_M(bool
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 348810, 348830);
                    return return_v;
                }


                int
                f_10306_348880_348910(Microsoft.CodeAnalysis.CSharp.MethodGroup?
                this_param)
                {
                    this_param.Free();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 348880, 348910);
                    return 0;
                }


                int
                f_10306_348937_348980(Microsoft.CodeAnalysis.CSharp.OverloadResolutionResult<Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol>?
                this_param)
                {
                    this_param.Free();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 348937, 348980);
                    return 0;
                }


                int
                f_10306_349340_349371(Microsoft.CodeAnalysis.CSharp.OverloadResolutionResult<Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol>
                this_param)
                {
                    this_param.Free();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 349340, 349371);
                    return 0;
                }


                int
                f_10306_349394_349412(Microsoft.CodeAnalysis.CSharp.MethodGroup
                this_param)
                {
                    this_param.Free();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 349394, 349412);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.ExtensionMethodScopes
                f_10306_344981_345012_I(Microsoft.CodeAnalysis.CSharp.ExtensionMethodScopes
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 344981, 345012);
                    return return_v;
                }


                bool
                f_10306_349505_349525_M(bool
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 349505, 349525);
                    return return_v;
                }


                int
                f_10306_349463_349526(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 349463, 349526);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 344418, 349609);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 344418, 349609);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private void PopulateExtensionMethodsFromSingleBinder(
                    ExtensionMethodScope scope,
                    MethodGroup methodGroup,
                    SyntaxNode node,
                    BoundExpression left,
                    string rightName,
                    ImmutableArray<TypeWithAnnotations> typeArgumentsWithAnnotations,
                    DiagnosticBag diagnostics)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10306, 349621, 351373);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 349994, 350004);

                int
                arity
                = default(int);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 350018, 350040);

                LookupOptions
                options
                = default(LookupOptions);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 350054, 350379) || true) && (typeArgumentsWithAnnotations.IsDefault)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 350054, 350379);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 350130, 350140);

                    arity = 0;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 350158, 350204);

                    options = LookupOptions.AllMethodsOnArityZero;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 350054, 350379);
                }

                else

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 350054, 350379);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 350270, 350314);

                    arity = typeArgumentsWithAnnotations.Length;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 350332, 350364);

                    options = LookupOptions.Default;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 350054, 350379);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 350395, 350441);

                var
                lookupResult = f_10306_350414_350440()
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 350455, 350505);

                HashSet<DiagnosticInfo>
                useSiteDiagnostics = null
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 350519, 350633);

                f_10306_350519_350632(this, scope, lookupResult, rightName, arity, options, ref useSiteDiagnostics);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 350647, 350689);

                f_10306_350647_350688(diagnostics, node, useSiteDiagnostics);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 350705, 351326) || true) && (f_10306_350709_350735(lookupResult))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 350705, 351326);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 350769, 350810);

                    f_10306_350769_350809(f_10306_350782_350808(f_10306_350782_350802(lookupResult)));
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 350828, 350877);

                    var
                    members = f_10306_350842_350876()
                    ;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 350895, 350909);

                    bool
                    wasError
                    = default(bool);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 350927, 351050);

                    Symbol
                    symbol = f_10306_350943_351049(this, lookupResult, node, rightName, arity, members, diagnostics, out wasError)
                    ;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 351068, 351105);

                    f_10306_351068_351104((object)symbol == null);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 351123, 351155);

                    f_10306_351123_351154(f_10306_351136_351149(members) > 0);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 351173, 351278);

                    f_10306_351173_351277(methodGroup, left, members, typeArgumentsWithAnnotations, f_10306_351259_351276(lookupResult));
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 351296, 351311);

                    f_10306_351296_351310(members);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 350705, 351326);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 351342, 351362);

                f_10306_351342_351361(
                            lookupResult);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10306, 349621, 351373);

                Microsoft.CodeAnalysis.CSharp.LookupResult
                f_10306_350414_350440()
                {
                    var return_v = LookupResult.GetInstance();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 350414, 350440);
                    return return_v;
                }


                int
                f_10306_350519_350632(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.ExtensionMethodScope
                scope, Microsoft.CodeAnalysis.CSharp.LookupResult
                result, string
                name, int
                arity, Microsoft.CodeAnalysis.CSharp.LookupOptions
                options, ref System.Collections.Generic.HashSet<Microsoft.CodeAnalysis.DiagnosticInfo>?
                useSiteDiagnostics)
                {
                    this_param.LookupExtensionMethodsInSingleBinder(scope, result, name, arity, options, ref useSiteDiagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 350519, 350632);
                    return 0;
                }


                bool
                f_10306_350647_350688(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.SyntaxNode
                node, System.Collections.Generic.HashSet<Microsoft.CodeAnalysis.DiagnosticInfo>
                useSiteDiagnostics)
                {
                    var return_v = diagnostics.Add(node, useSiteDiagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 350647, 350688);
                    return return_v;
                }


                bool
                f_10306_350709_350735(Microsoft.CodeAnalysis.CSharp.LookupResult
                this_param)
                {
                    var return_v = this_param.IsMultiViable;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 350709, 350735);
                    return return_v;
                }


                Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbol>
                f_10306_350782_350802(Microsoft.CodeAnalysis.CSharp.LookupResult
                this_param)
                {
                    var return_v = this_param.Symbols;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 350782, 350802);
                    return return_v;
                }


                bool
                f_10306_350782_350808(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbol>
                this_param)
                {
                    var return_v = this_param.Any();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 350782, 350808);
                    return return_v;
                }


                int
                f_10306_350769_350809(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 350769, 350809);
                    return 0;
                }


                Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbol>
                f_10306_350842_350876()
                {
                    var return_v = ArrayBuilder<Symbol>.GetInstance();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 350842, 350876);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbol
                f_10306_350943_351049(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.LookupResult
                result, Microsoft.CodeAnalysis.SyntaxNode
                node, string
                plainName, int
                arity, Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbol>
                methodOrPropertyGroup, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, out bool
                wasError)
                {
                    var return_v = this_param.GetSymbolOrMethodOrPropertyGroup(result, node, plainName, arity, methodOrPropertyGroup, diagnostics, out wasError);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 350943, 351049);
                    return return_v;
                }


                int
                f_10306_351068_351104(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 351068, 351104);
                    return 0;
                }


                int
                f_10306_351136_351149(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbol>
                this_param)
                {
                    var return_v = this_param.Count;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 351136, 351149);
                    return return_v;
                }


                int
                f_10306_351123_351154(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 351123, 351154);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.LookupResultKind
                f_10306_351259_351276(Microsoft.CodeAnalysis.CSharp.LookupResult
                this_param)
                {
                    var return_v = this_param.Kind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 351259, 351276);
                    return return_v;
                }


                int
                f_10306_351173_351277(Microsoft.CodeAnalysis.CSharp.MethodGroup
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                receiverOpt, Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbol>
                members, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations>
                typeArguments, Microsoft.CodeAnalysis.CSharp.LookupResultKind
                resultKind)
                {
                    this_param.PopulateWithExtensionMethods(receiverOpt, members, typeArguments, resultKind);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 351173, 351277);
                    return 0;
                }


                int
                f_10306_351296_351310(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbol>
                this_param)
                {
                    this_param.Free();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 351296, 351310);
                    return 0;
                }


                int
                f_10306_351342_351361(Microsoft.CodeAnalysis.CSharp.LookupResult
                this_param)
                {
                    this_param.Free();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 351342, 351361);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 349621, 351373);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 349621, 351373);
            }
        }

        protected BoundExpression BindFieldAccess(
                    SyntaxNode node,
                    BoundExpression receiver,
                    FieldSymbol fieldSymbol,
                    DiagnosticBag diagnostics,
                    LookupResultKind resultKind,
                    bool indexed,
                    bool hasErrors)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10306, 351385, 357869);
                Microsoft.CodeAnalysis.CSharp.Symbol accessedLocalOrParameterOpt = default(Microsoft.CodeAnalysis.CSharp.Symbol);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 351697, 351719);

                bool
                hasError = false
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 351733, 351783);

                NamedTypeSymbol
                type = f_10306_351756_351782(fieldSymbol)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 351797, 351859);

                var
                isEnumField = (f_10306_351816_351836(fieldSymbol) && (DynAbs.Tracing.TraceSender.Expression_True(10306, 351816, 351857) && f_10306_351840_351857(type)))
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 351875, 352065) || true) && (isEnumField && (DynAbs.Tracing.TraceSender.Expression_True(10306, 351879, 351917) && !f_10306_351895_351917(type)))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 351875, 352065);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 351951, 352016);

                    f_10306_351951_352015(diagnostics, ErrorCode.ERR_BindToBogus, node, fieldSymbol);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 352034, 352050);

                    hasError = true;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 351875, 352065);
                }

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 352081, 352239) || true) && (!hasError)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 352081, 352239);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 352128, 352224);

                    hasError = f_10306_352139_352223(this, node, receiver, fieldSymbol, ref resultKind, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 352081, 352239);
                }

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 352255, 354734) || true) && (!hasError && (DynAbs.Tracing.TraceSender.Expression_True(10306, 352259, 352301) && f_10306_352272_352301(fieldSymbol)) && (DynAbs.Tracing.TraceSender.Expression_True(10306, 352259, 352320) && f_10306_352305_352320_M(!IsInsideNameof)))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 352255, 354734);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 353256, 353296);

                    TypeSymbol
                    receiverType = f_10306_353282_353295(receiver)
                    ;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 353388, 353457);

                    hasError = (object)receiverType == null || (DynAbs.Tracing.TraceSender.Expression_False(10306, 353399, 353456) || f_10306_353431_353456_M(!receiverType.IsValueType));

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 353477, 354502) || true) && (!hasError)
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 353477, 354502);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 353532, 353610);

                        var
                        isFixedStatementExpression = f_10306_353565_353609(node)
                        ;

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 353634, 354483) || true) && (f_10306_353638_353706(this, receiver, out accessedLocalOrParameterOpt) != isFixedStatementExpression)
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 353634, 354483);

                            if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 353786, 354460) || true) && (indexed)
                            )

                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 353786, 354460);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 354047, 354141);

                                f_10306_354047_354140(node, MessageID.IDS_FeatureIndexingMovableFixedBuffers, diagnostics);
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 353786, 354460);
                            }

                            else

                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 353786, 354460);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 354255, 354375);

                                f_10306_354255_354374(diagnostics, (DynAbs.Tracing.TraceSender.Conditional_F1(10306, 354274, 354300) || ((isFixedStatementExpression && DynAbs.Tracing.TraceSender.Conditional_F2(10306, 354303, 354331)) || DynAbs.Tracing.TraceSender.Conditional_F3(10306, 354334, 354367))) ? ErrorCode.ERR_FixedNotNeeded : ErrorCode.ERR_FixedBufferNotFixed, node);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 354405, 354433);

                                hasErrors = hasError = true;
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 353786, 354460);
                            }
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 353634, 354483);
                        }
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 353477, 354502);
                    }

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 354522, 354719) || true) && (!hasError)
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 354522, 354719);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 354577, 354700);

                        hasError = !f_10306_354589_354699(this, node, receiver, BindValueKind.FixedReceiver, checkingReceiver: false, diagnostics: diagnostics);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 354522, 354719);
                    }
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 352255, 354734);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 354750, 354788);

                ConstantValue
                constantValueOpt = null
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 354804, 355309) || true) && (f_10306_354808_354827(fieldSymbol) && (DynAbs.Tracing.TraceSender.Expression_True(10306, 354808, 354846) && f_10306_354831_354846_M(!IsInsideNameof)))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 354804, 355309);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 354880, 354988);

                    constantValueOpt = f_10306_354899_354987(fieldSymbol, f_10306_354928_354957(this), f_10306_354959_354986(this));

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 355006, 355294) || true) && (constantValueOpt == f_10306_355030_355049())
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 355006, 355294);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 355238, 355275);

                        constantValueOpt = f_10306_355257_355274();
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 355006, 355294);
                    }
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 354804, 355309);
                }

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 355325, 355453) || true) && (f_10306_355329_355350_M(!fieldSymbol.IsStatic))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 355325, 355453);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 355384, 355438);

                    f_10306_355384_355437(this, node, receiver, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 355325, 355453);
                }

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 355469, 355657) || true) && (!f_10306_355474_355531(this, node, receiver, fieldSymbol, diagnostics))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 355469, 355657);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 355565, 355642);

                    f_10306_355565_355641(this, node, receiver, fieldSymbol, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 355469, 355657);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 355673, 355749);

                TypeSymbol
                fieldType = f_10306_355696_355743(fieldSymbol, f_10306_355721_355742(this)).Type
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 355763, 355913);

                BoundExpression
                expr = f_10306_355786_355912(node, receiver, fieldSymbol, constantValueOpt, resultKind, fieldType, hasErrors: (hasErrors || (DynAbs.Tracing.TraceSender.Expression_False(10306, 355889, 355910) || hasError)))
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 356101, 357830) || true) && (f_10306_356105_356135(this))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 356101, 357830);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 356169, 356201);

                    NamedTypeSymbol
                    enumType = null
                    ;

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 356219, 357159) || true) && (isEnumField)
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 356219, 357159);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 356572, 356588);

                        enumType = type;
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 356219, 357159);
                    }

                    else
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 356219, 357159);

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 356630, 357159) || true) && (constantValueOpt != null && (DynAbs.Tracing.TraceSender.Expression_True(10306, 356634, 356684) && f_10306_356662_356684(fieldType)))
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 356630, 357159);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 357102, 357140);

                            enumType = (NamedTypeSymbol)fieldType;
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 356630, 357159);
                        }
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 356219, 357159);
                    }

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 357179, 357815) || true) && ((object)enumType != null)
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 357179, 357815);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 357249, 357310);

                        NamedTypeSymbol
                        underlyingType = f_10306_357282_357309(enumType)
                        ;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 357332, 357377);

                        f_10306_357332_357376((object)underlyingType != null);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 357399, 357796);

                        expr = f_10306_357406_357795(node, expr, Conversion.ImplicitNumeric, @checked: true, explicitCastInCode: false, conversionGroupOpt: null, constantValueOpt: f_10306_357729_357747(expr), type: underlyingType);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 357179, 357815);
                    }
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 356101, 357830);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 357846, 357858);

                return expr;
                DynAbs.Tracing.TraceSender.TraceExitMethod(10306, 351385, 357869);

                Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                f_10306_351756_351782(Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol
                this_param)
                {
                    var return_v = this_param.ContainingType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 351756, 351782);
                    return return_v;
                }


                bool
                f_10306_351816_351836(Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol
                this_param)
                {
                    var return_v = this_param.IsStatic;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 351816, 351836);
                    return return_v;
                }


                bool
                f_10306_351840_351857(Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                type)
                {
                    var return_v = type.IsEnumType();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 351840, 351857);
                    return return_v;
                }


                bool
                f_10306_351895_351917(Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                type)
                {
                    var return_v = type.IsValidEnumType();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 351895, 351917);
                    return return_v;
                }


                int
                f_10306_351951_352015(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, Microsoft.CodeAnalysis.SyntaxNode
                syntax, params object[]
                args)
                {
                    Error(diagnostics, code, (Microsoft.CodeAnalysis.SyntaxNodeOrToken)syntax, args);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 351951, 352015);
                    return 0;
                }


                bool
                f_10306_352139_352223(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.SyntaxNode
                node, Microsoft.CodeAnalysis.CSharp.BoundExpression
                receiver, Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol
                symbol, ref Microsoft.CodeAnalysis.CSharp.LookupResultKind
                resultKind, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.CheckInstanceOrStatic(node, receiver, (Microsoft.CodeAnalysis.CSharp.Symbol)symbol, ref resultKind, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 352139, 352223);
                    return return_v;
                }


                bool
                f_10306_352272_352301(Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol
                this_param)
                {
                    var return_v = this_param.IsFixedSizeBuffer;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 352272, 352301);
                    return return_v;
                }


                bool
                f_10306_352305_352320_M(bool
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 352305, 352320);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?
                f_10306_353282_353295(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 353282, 353295);
                    return return_v;
                }


                bool
                f_10306_353431_353456_M(bool
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 353431, 353456);
                    return return_v;
                }


                bool
                f_10306_353565_353609(Microsoft.CodeAnalysis.SyntaxNode
                node)
                {
                    var return_v = SyntaxFacts.IsFixedStatementExpression(node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 353565, 353609);
                    return return_v;
                }


                bool
                f_10306_353638_353706(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                expr, out Microsoft.CodeAnalysis.CSharp.Symbol
                accessedLocalOrParameterOpt)
                {
                    var return_v = this_param.IsMoveableVariable(expr, out accessedLocalOrParameterOpt);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 353638, 353706);
                    return return_v;
                }


                bool
                f_10306_354047_354140(Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.CSharp.MessageID
                feature, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = CheckFeatureAvailability(syntax, feature, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 354047, 354140);
                    return return_v;
                }


                int
                f_10306_354255_354374(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, Microsoft.CodeAnalysis.SyntaxNode
                syntax)
                {
                    Error(diagnostics, code, (Microsoft.CodeAnalysis.SyntaxNodeOrToken)syntax);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 354255, 354374);
                    return 0;
                }


                bool
                f_10306_354589_354699(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.SyntaxNode
                node, Microsoft.CodeAnalysis.CSharp.BoundExpression
                expr, Microsoft.CodeAnalysis.CSharp.Binder.BindValueKind
                valueKind, bool
                checkingReceiver, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.CheckValueKind(node, expr, valueKind, checkingReceiver: checkingReceiver, diagnostics: diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 354589, 354699);
                    return return_v;
                }


                bool
                f_10306_354808_354827(Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol
                this_param)
                {
                    var return_v = this_param.IsConst;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 354808, 354827);
                    return return_v;
                }


                bool
                f_10306_354831_354846_M(bool
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 354831, 354846);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.ConstantFieldsInProgress
                f_10306_354928_354957(Microsoft.CodeAnalysis.CSharp.Binder
                this_param)
                {
                    var return_v = this_param.ConstantFieldsInProgress;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 354928, 354957);
                    return return_v;
                }


                bool
                f_10306_354959_354986(Microsoft.CodeAnalysis.CSharp.Binder
                this_param)
                {
                    var return_v = this_param.IsEarlyAttributeBinder;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 354959, 354986);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ConstantValue
                f_10306_354899_354987(Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol
                this_param, Microsoft.CodeAnalysis.CSharp.ConstantFieldsInProgress
                inProgress, bool
                earlyDecodingWellKnownAttributes)
                {
                    var return_v = this_param.GetConstantValue(inProgress, earlyDecodingWellKnownAttributes);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 354899, 354987);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ConstantValue
                f_10306_355030_355049()
                {
                    var return_v = ConstantValue.Unset;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 355030, 355049);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ConstantValue
                f_10306_355257_355274()
                {
                    var return_v = ConstantValue.Bad;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 355257, 355274);
                    return return_v;
                }


                bool
                f_10306_355329_355350_M(bool
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 355329, 355350);
                    return return_v;
                }


                int
                f_10306_355384_355437(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.SyntaxNode
                node, Microsoft.CodeAnalysis.CSharp.BoundExpression
                boundLeft, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    this_param.WarnOnAccessOfOffDefault(node, boundLeft, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 355384, 355437);
                    return 0;
                }


                bool
                f_10306_355474_355531(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.SyntaxNode
                node, Microsoft.CodeAnalysis.CSharp.BoundExpression
                receiverOpt, Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol
                member, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.IsBadBaseAccess(node, receiverOpt, (Microsoft.CodeAnalysis.CSharp.Symbol)member, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 355474, 355531);
                    return return_v;
                }


                int
                f_10306_355565_355641(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.SyntaxNode
                node, Microsoft.CodeAnalysis.CSharp.BoundExpression
                receiverOpt, Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol
                symbol, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    this_param.CheckRuntimeSupportForSymbolAccess(node, receiverOpt, (Microsoft.CodeAnalysis.CSharp.Symbol)symbol, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 355565, 355641);
                    return 0;
                }


                Roslyn.Utilities.ConsList<Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol>
                f_10306_355721_355742(Microsoft.CodeAnalysis.CSharp.Binder
                this_param)
                {
                    var return_v = this_param.FieldsBeingBound;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 355721, 355742);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                f_10306_355696_355743(Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol
                this_param, Roslyn.Utilities.ConsList<Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol>
                fieldsBeingBound)
                {
                    var return_v = this_param.GetFieldType(fieldsBeingBound);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 355696, 355743);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundFieldAccess
                f_10306_355786_355912(Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.CSharp.BoundExpression
                receiver, Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol
                fieldSymbol, Microsoft.CodeAnalysis.ConstantValue?
                constantValueOpt, Microsoft.CodeAnalysis.CSharp.LookupResultKind
                resultKind, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                type, bool
                hasErrors)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.BoundFieldAccess(syntax, receiver, fieldSymbol, constantValueOpt, resultKind, type, hasErrors);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 355786, 355912);
                    return return_v;
                }


                bool
                f_10306_356105_356135(Microsoft.CodeAnalysis.CSharp.Binder
                this_param)
                {
                    var return_v = this_param.InEnumMemberInitializer();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 356105, 356135);
                    return return_v;
                }


                bool
                f_10306_356662_356684(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                type)
                {
                    var return_v = type.IsEnumType();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 356662, 356684);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                f_10306_357282_357309(Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                this_param)
                {
                    var return_v = this_param.EnumUnderlyingType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 357282, 357309);
                    return return_v;
                }


                int
                f_10306_357332_357376(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 357332, 357376);
                    return 0;
                }


                Microsoft.CodeAnalysis.ConstantValue?
                f_10306_357729_357747(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.ConstantValue;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 357729, 357747);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundConversion
                f_10306_357406_357795(Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.CSharp.BoundExpression
                operand, Microsoft.CodeAnalysis.CSharp.Conversion
                conversion, bool
                @checked, bool
                explicitCastInCode, Microsoft.CodeAnalysis.CSharp.ConversionGroup?
                conversionGroupOpt, Microsoft.CodeAnalysis.ConstantValue?
                constantValueOpt, Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                type)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.BoundConversion(syntax, operand, conversion, @checked: @checked, explicitCastInCode: explicitCastInCode, conversionGroupOpt: conversionGroupOpt, constantValueOpt: constantValueOpt, type: (Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol)type);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 357406, 357795);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 351385, 357869);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 351385, 357869);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private bool InEnumMemberInitializer()
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10306, 357881, 358106);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 357944, 357985);

                var
                containingType = f_10306_357965_357984(this)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 357999, 358095);

                return f_10306_358006_358029(this) && (DynAbs.Tracing.TraceSender.Expression_True(10306, 358006, 358063) && (object)containingType != null) && (DynAbs.Tracing.TraceSender.Expression_True(10306, 358006, 358094) && f_10306_358067_358094(containingType));
                DynAbs.Tracing.TraceSender.TraceExitMethod(10306, 357881, 358106);

                Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol?
                f_10306_357965_357984(Microsoft.CodeAnalysis.CSharp.Binder
                this_param)
                {
                    var return_v = this_param.ContainingType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 357965, 357984);
                    return return_v;
                }


                bool
                f_10306_358006_358029(Microsoft.CodeAnalysis.CSharp.Binder
                this_param)
                {
                    var return_v = this_param.InFieldInitializer;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 358006, 358029);
                    return return_v;
                }


                bool
                f_10306_358067_358094(Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                type)
                {
                    var return_v = type.IsEnumType();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 358067, 358094);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 357881, 358106);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 357881, 358106);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private BoundExpression BindPropertyAccess(
                    SyntaxNode node,
                    BoundExpression receiver,
                    PropertySymbol propertySymbol,
                    DiagnosticBag diagnostics,
                    LookupResultKind lookupResult,
                    bool hasErrors)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10306, 358118, 358826);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 358412, 358518);

                bool
                hasError = f_10306_358428_358517(this, node, receiver, propertySymbol, ref lookupResult, diagnostics)
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 358534, 358665) || true) && (f_10306_358538_358562_M(!propertySymbol.IsStatic))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 358534, 358665);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 358596, 358650);

                    f_10306_358596_358649(this, node, receiver, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 358534, 358665);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 358681, 358815);

                return f_10306_358688_358814(node, receiver, propertySymbol, lookupResult, f_10306_358758_358777(propertySymbol), hasErrors: (hasErrors || (DynAbs.Tracing.TraceSender.Expression_False(10306, 358791, 358812) || hasError)));
                DynAbs.Tracing.TraceSender.TraceExitMethod(10306, 358118, 358826);

                bool
                f_10306_358428_358517(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.SyntaxNode
                node, Microsoft.CodeAnalysis.CSharp.BoundExpression
                receiver, Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol
                symbol, ref Microsoft.CodeAnalysis.CSharp.LookupResultKind
                resultKind, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.CheckInstanceOrStatic(node, receiver, (Microsoft.CodeAnalysis.CSharp.Symbol)symbol, ref resultKind, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 358428, 358517);
                    return return_v;
                }


                bool
                f_10306_358538_358562_M(bool
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 358538, 358562);
                    return return_v;
                }


                int
                f_10306_358596_358649(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.SyntaxNode
                node, Microsoft.CodeAnalysis.CSharp.BoundExpression
                boundLeft, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    this_param.WarnOnAccessOfOffDefault(node, boundLeft, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 358596, 358649);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                f_10306_358758_358777(Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 358758, 358777);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundPropertyAccess
                f_10306_358688_358814(Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.CSharp.BoundExpression
                receiverOpt, Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol
                propertySymbol, Microsoft.CodeAnalysis.CSharp.LookupResultKind
                resultKind, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                type, bool
                hasErrors)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.BoundPropertyAccess(syntax, receiverOpt, propertySymbol, resultKind, type, hasErrors);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 358688, 358814);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 358118, 358826);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 358118, 358826);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private void CheckRuntimeSupportForSymbolAccess(SyntaxNode node, BoundExpression receiverOpt, Symbol symbol, DiagnosticBag diagnostics)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10306, 358838, 360009);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 358998, 359998) || true) && (f_10306_359002_359036_M(DynAbs.Tracing.TraceSender.TraceConditionalAccessExpression(f_10306_359002_359023(symbol), 10306, 359002, 359036)?.IsInterface) == true && (DynAbs.Tracing.TraceSender.Expression_True(10306, 359002, 359115) && f_10306_359048_359115_M(!f_10306_359049_359069(f_10306_359049_359060()).RuntimeSupportsDefaultInterfaceImplementation)) && (DynAbs.Tracing.TraceSender.Expression_True(10306, 359002, 359170) && f_10306_359119_359143(f_10306_359119_359130()) != f_10306_359147_359170(symbol)))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 358998, 359998);

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 359204, 359983) || true) && (f_10306_359208_359224_M(!symbol.IsStatic) && (DynAbs.Tracing.TraceSender.Expression_True(10306, 359208, 359251) && !(symbol is TypeSymbol)) && (DynAbs.Tracing.TraceSender.Expression_True(10306, 359208, 359316) && !f_10306_359277_359316(symbol)))
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 359204, 359983);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 359358, 359450);

                        f_10306_359358_359449(diagnostics, ErrorCode.ERR_RuntimeDoesNotSupportDefaultInterfaceImplementation, node);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 359204, 359983);
                    }

                    else

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 359204, 359983);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 359532, 359964);

                        switch (f_10306_359540_359568(symbol))
                        {

                            case Accessibility.Protected:
                            case Accessibility.ProtectedOrInternal:
                            case Accessibility.ProtectedAndInternal:
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 359532, 359964);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 359810, 359905);

                                f_10306_359810_359904(diagnostics, ErrorCode.ERR_RuntimeDoesNotSupportProtectedAccessForInterfaceMember, node);
                                DynAbs.Tracing.TraceSender.TraceBreak(10306, 359935, 359941);

                                break;
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 359532, 359964);
                        }
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 359204, 359983);
                    }
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 358998, 359998);
                }
                DynAbs.Tracing.TraceSender.TraceExitMethod(10306, 358838, 360009);

                Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                f_10306_359002_359023(Microsoft.CodeAnalysis.CSharp.Symbol
                this_param)
                {
                    var return_v = this_param.ContainingType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 359002, 359023);
                    return return_v;
                }


                bool?
                f_10306_359002_359036_M(bool?
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 359002, 359036);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                f_10306_359049_359060()
                {
                    var return_v = Compilation;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 359049, 359060);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.AssemblySymbol
                f_10306_359049_359069(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param)
                {
                    var return_v = this_param.Assembly;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 359049, 359069);
                    return return_v;
                }


                bool
                f_10306_359048_359115_M(bool
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 359048, 359115);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                f_10306_359119_359130()
                {
                    var return_v = Compilation;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 359119, 359130);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.ModuleSymbol
                f_10306_359119_359143(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param)
                {
                    var return_v = this_param.SourceModule;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 359119, 359143);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.ModuleSymbol
                f_10306_359147_359170(Microsoft.CodeAnalysis.CSharp.Symbol
                this_param)
                {
                    var return_v = this_param.ContainingModule;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 359147, 359170);
                    return return_v;
                }


                bool
                f_10306_359208_359224_M(bool
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 359208, 359224);
                    return return_v;
                }


                bool
                f_10306_359277_359316(Microsoft.CodeAnalysis.CSharp.Symbol
                symbol)
                {
                    var return_v = symbol.IsImplementableInterfaceMember();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 359277, 359316);
                    return return_v;
                }


                int
                f_10306_359358_359449(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, Microsoft.CodeAnalysis.SyntaxNode
                syntax)
                {
                    Error(diagnostics, code, (Microsoft.CodeAnalysis.SyntaxNodeOrToken)syntax);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 359358, 359449);
                    return 0;
                }


                Microsoft.CodeAnalysis.Accessibility
                f_10306_359540_359568(Microsoft.CodeAnalysis.CSharp.Symbol
                this_param)
                {
                    var return_v = this_param.DeclaredAccessibility;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 359540, 359568);
                    return return_v;
                }


                int
                f_10306_359810_359904(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, Microsoft.CodeAnalysis.SyntaxNode
                syntax)
                {
                    Error(diagnostics, code, (Microsoft.CodeAnalysis.SyntaxNodeOrToken)syntax);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 359810, 359904);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 358838, 360009);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 358838, 360009);
            }
        }

        private BoundExpression BindEventAccess(
                    SyntaxNode node,
                    BoundExpression receiver,
                    EventSymbol eventSymbol,
                    DiagnosticBag diagnostics,
                    LookupResultKind lookupResult,
                    bool hasErrors)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10306, 360021, 361029);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 360306, 360356);

                HashSet<DiagnosticInfo>
                useSiteDiagnostics = null
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 360370, 360541);

                bool
                isUsableAsField = f_10306_360393_360423(eventSymbol) && (DynAbs.Tracing.TraceSender.Expression_True(10306, 360393, 360540) && f_10306_360427_360540(this, f_10306_360445_360472(eventSymbol), ref useSiteDiagnostics, (DynAbs.Tracing.TraceSender.Conditional_F1(10306, 360498, 360516) || (((receiver != null) && DynAbs.Tracing.TraceSender.Conditional_F2(10306, 360519, 360532)) || DynAbs.Tracing.TraceSender.Conditional_F3(10306, 360535, 360539))) ? f_10306_360519_360532(receiver) : null))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 360555, 360597);

                f_10306_360555_360596(diagnostics, node, useSiteDiagnostics);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 360613, 360716);

                bool
                hasError = f_10306_360629_360715(this, node, receiver, eventSymbol, ref lookupResult, diagnostics)
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 360732, 360860) || true) && (f_10306_360736_360757_M(!eventSymbol.IsStatic))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 360732, 360860);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 360791, 360845);

                    f_10306_360791_360844(this, node, receiver, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 360732, 360860);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 360876, 361018);

                return f_10306_360883_361017(node, receiver, eventSymbol, isUsableAsField, lookupResult, f_10306_360964_360980(eventSymbol), hasErrors: (hasErrors || (DynAbs.Tracing.TraceSender.Expression_False(10306, 360994, 361015) || hasError)));
                DynAbs.Tracing.TraceSender.TraceExitMethod(10306, 360021, 361029);

                bool
                f_10306_360393_360423(Microsoft.CodeAnalysis.CSharp.Symbols.EventSymbol
                this_param)
                {
                    var return_v = this_param.HasAssociatedField;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 360393, 360423);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol?
                f_10306_360445_360472(Microsoft.CodeAnalysis.CSharp.Symbols.EventSymbol
                this_param)
                {
                    var return_v = this_param.AssociatedField;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 360445, 360472);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?
                f_10306_360519_360532(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 360519, 360532);
                    return return_v;
                }


                bool
                f_10306_360427_360540(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol?
                symbol, ref System.Collections.Generic.HashSet<Microsoft.CodeAnalysis.DiagnosticInfo>?
                useSiteDiagnostics, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?
                accessThroughType)
                {
                    var return_v = this_param.IsAccessible((Microsoft.CodeAnalysis.CSharp.Symbol?)symbol, ref useSiteDiagnostics, accessThroughType);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 360427, 360540);
                    return return_v;
                }


                bool
                f_10306_360555_360596(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.SyntaxNode
                node, System.Collections.Generic.HashSet<Microsoft.CodeAnalysis.DiagnosticInfo>?
                useSiteDiagnostics)
                {
                    var return_v = diagnostics.Add(node, useSiteDiagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 360555, 360596);
                    return return_v;
                }


                bool
                f_10306_360629_360715(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.SyntaxNode
                node, Microsoft.CodeAnalysis.CSharp.BoundExpression?
                receiver, Microsoft.CodeAnalysis.CSharp.Symbols.EventSymbol
                symbol, ref Microsoft.CodeAnalysis.CSharp.LookupResultKind
                resultKind, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.CheckInstanceOrStatic(node, receiver, (Microsoft.CodeAnalysis.CSharp.Symbol)symbol, ref resultKind, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 360629, 360715);
                    return return_v;
                }


                bool
                f_10306_360736_360757_M(bool
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 360736, 360757);
                    return return_v;
                }


                int
                f_10306_360791_360844(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.SyntaxNode
                node, Microsoft.CodeAnalysis.CSharp.BoundExpression?
                boundLeft, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    this_param.WarnOnAccessOfOffDefault(node, boundLeft, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 360791, 360844);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                f_10306_360964_360980(Microsoft.CodeAnalysis.CSharp.Symbols.EventSymbol
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 360964, 360980);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundEventAccess
                f_10306_360883_361017(Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.CSharp.BoundExpression?
                receiverOpt, Microsoft.CodeAnalysis.CSharp.Symbols.EventSymbol
                eventSymbol, bool
                isUsableAsField, Microsoft.CodeAnalysis.CSharp.LookupResultKind
                resultKind, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                type, bool
                hasErrors)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.BoundEventAccess(syntax, receiverOpt, eventSymbol, isUsableAsField, resultKind, type, hasErrors);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 360883, 361017);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 360021, 361029);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 360021, 361029);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private static bool? IsInstanceReceiver(BoundExpression receiver)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterStaticMethod(10306, 361133, 361915);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 361223, 361904) || true) && (receiver == null)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 361223, 361904);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 361277, 361290);

                    return false;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 361223, 361904);
                }

                else

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 361223, 361904);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 361356, 361889);

                    switch (f_10306_361364_361377(receiver))
                    {

                        case BoundKind.PreviousSubmissionReference:
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 361356, 361889);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 361562, 361574);

                            return null;
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 361356, 361889);

                        case BoundKind.TypeExpression:
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 361356, 361889);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 361652, 361665);

                            return false;
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 361356, 361889);

                        case BoundKind.QueryClause:
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 361356, 361889);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 361740, 361802);

                            return f_10306_361747_361801(f_10306_361766_361800(((BoundQueryClause)receiver)));
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 361356, 361889);

                        default:
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 361356, 361889);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 361858, 361870);

                            return true;
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 361356, 361889);
                    }
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 361223, 361904);
                }
                DynAbs.Tracing.TraceSender.TraceExitStaticMethod(10306, 361133, 361915);

                Microsoft.CodeAnalysis.CSharp.BoundKind
                f_10306_361364_361377(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.Kind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 361364, 361377);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_361766_361800(Microsoft.CodeAnalysis.CSharp.BoundQueryClause
                this_param)
                {
                    var return_v = this_param.Value;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 361766, 361800);
                    return return_v;
                }


                bool?
                f_10306_361747_361801(Microsoft.CodeAnalysis.CSharp.BoundExpression
                receiver)
                {
                    var return_v = IsInstanceReceiver(receiver);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 361747, 361801);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 361133, 361915);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 361133, 361915);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private bool CheckInstanceOrStatic(
                    SyntaxNode node,
                    BoundExpression receiver,
                    Symbol symbol,
                    ref LookupResultKind resultKind,
                    DiagnosticBag diagnostics)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10306, 361927, 363186);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 362170, 362224);

                bool?
                instanceReceiver = f_10306_362195_362223(receiver)
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 362240, 363148) || true) && (!f_10306_362245_362278(symbol))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 362240, 363148);

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 362312, 362786) || true) && (instanceReceiver == true)
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 362312, 362786);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 362382, 362592);

                        ErrorCode
                        errorCode = (DynAbs.Tracing.TraceSender.Conditional_F1(10306, 362404, 362460) || ((f_10306_362404_362460(this.Flags, BinderFlags.ObjectInitializerMember) && DynAbs.Tracing.TraceSender.Conditional_F2(10306, 362488, 362533)) || DynAbs.Tracing.TraceSender.Conditional_F3(10306, 362561, 362591))) ? ErrorCode.ERR_StaticMemberInObjectInitializer : ErrorCode.ERR_ObjectProhibited
                        ;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 362614, 362658);

                        f_10306_362614_362657(diagnostics, errorCode, node, symbol);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 362680, 362733);

                        resultKind = LookupResultKind.StaticInstanceMismatch;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 362755, 362767);

                        return true;
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 362312, 362786);
                    }
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 362240, 363148);
                }

                else

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 362240, 363148);

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 362852, 363133) || true) && (instanceReceiver == false && (DynAbs.Tracing.TraceSender.Expression_True(10306, 362856, 362900) && f_10306_362885_362900_M(!IsInsideNameof)))
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 362852, 363133);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 362942, 363005);

                        f_10306_362942_363004(diagnostics, ErrorCode.ERR_ObjectRequired, node, symbol);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 363027, 363080);

                        resultKind = LookupResultKind.StaticInstanceMismatch;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 363102, 363114);

                        return true;
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 362852, 363133);
                    }
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 362240, 363148);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 363162, 363175);

                return false;
                DynAbs.Tracing.TraceSender.TraceExitMethod(10306, 361927, 363186);

                bool?
                f_10306_362195_362223(Microsoft.CodeAnalysis.CSharp.BoundExpression
                receiver)
                {
                    var return_v = IsInstanceReceiver(receiver);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 362195, 362223);
                    return return_v;
                }


                bool
                f_10306_362245_362278(Microsoft.CodeAnalysis.CSharp.Symbol
                symbol)
                {
                    var return_v = symbol.RequiresInstanceReceiver();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 362245, 362278);
                    return return_v;
                }


                bool
                f_10306_362404_362460(Microsoft.CodeAnalysis.CSharp.BinderFlags
                self, Microsoft.CodeAnalysis.CSharp.BinderFlags
                other)
                {
                    var return_v = self.Includes(other);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 362404, 362460);
                    return return_v;
                }


                int
                f_10306_362614_362657(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, Microsoft.CodeAnalysis.SyntaxNode
                syntax, params object[]
                args)
                {
                    Error(diagnostics, code, (Microsoft.CodeAnalysis.SyntaxNodeOrToken)syntax, args);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 362614, 362657);
                    return 0;
                }


                bool
                f_10306_362885_362900_M(bool
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 362885, 362900);
                    return return_v;
                }


                int
                f_10306_362942_363004(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, Microsoft.CodeAnalysis.SyntaxNode
                syntax, params object[]
                args)
                {
                    Error(diagnostics, code, (Microsoft.CodeAnalysis.SyntaxNodeOrToken)syntax, args);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 362942, 363004);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 361927, 363186);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 361927, 363186);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private Symbol GetSymbolOrMethodOrPropertyGroup(LookupResult result, SyntaxNode node, string plainName, int arity, ArrayBuilder<Symbol> methodOrPropertyGroup, DiagnosticBag diagnostics, out bool wasError)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10306, 364124, 368305);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 364353, 364396);

                f_10306_364353_364395(!f_10306_364367_364394(methodOrPropertyGroup));
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 364412, 364447);

                node = f_10306_364419_364438(node) ?? (DynAbs.Tracing.TraceSender.Expression_Null<Microsoft.CodeAnalysis.CSharp.Syntax.NameSyntax>(10306, 364419, 364446) ?? node);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 364461, 364478);

                wasError = false;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 364494, 364546);

                f_10306_364494_364545(f_10306_364507_364518(result) != LookupResultKind.Empty);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 364560, 364614);

                f_10306_364560_364613(!f_10306_364574_364612(f_10306_364574_364588(result), s => s.IsIndexer()));
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 364630, 364650);

                Symbol
                other = null
                ;
                try
                {
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 364962, 366994);
                    foreach (var symbol in f_10306_364985_364999_I(f_10306_364985_364999(result)))
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 364962, 366994);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 365033, 365056);

                        var
                        kind = f_10306_365044_365055(symbol)
                        ;

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 365074, 365889) || true) && (f_10306_365078_365105(methodOrPropertyGroup) > 0)
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 365074, 365889);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 365151, 365200);

                            var
                            existingKind = f_10306_365170_365199(f_10306_365170_365194(methodOrPropertyGroup, 0))
                            ;

                            if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 365222, 365870) || true) && (existingKind != kind)
                            )

                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 365222, 365870);

                                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 365449, 365730) || true) && ((existingKind == SymbolKind.Method) || (DynAbs.Tracing.TraceSender.Expression_False(10306, 365453, 365591) || ((existingKind == SymbolKind.Property) && (DynAbs.Tracing.TraceSender.Expression_True(10306, 365522, 365590) && (kind != SymbolKind.Method)))))
                                )

                                {
                                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 365449, 365730);
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 365649, 365664);

                                    other = symbol;
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 365694, 365703);

                                    continue;
                                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 365449, 365730);
                                }
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 365758, 365791);

                                other = f_10306_365766_365790(methodOrPropertyGroup, 0);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 365817, 365847);

                                f_10306_365817_365846(methodOrPropertyGroup);
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 365222, 365870);
                            }
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 365074, 365889);
                        }

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 365909, 366979) || true) && ((kind == SymbolKind.Method) || (DynAbs.Tracing.TraceSender.Expression_False(10306, 365913, 365973) || (kind == SymbolKind.Property)))
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 365909, 366979);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 366829, 366863);

                            f_10306_366829_366862(                    // SPEC VIOLATION: The spec states "Members that include an override modifier are excluded from the set"
                                                                      // SPEC VIOLATION: However, we are not going to do that here; we will keep the overriding member
                                                                      // SPEC VIOLATION: in the method group. The reason is because for features like "go to definition"
                                                                      // SPEC VIOLATION: we wish to go to the overriding member, not to the member of the base class.
                                                                      // SPEC VIOLATION: Or, for code generation of a call to Int32.ToString() we want to generate
                                                                      // SPEC VIOLATION: code that directly calls the Int32.ToString method with an int on the stack,
                                                                      // SPEC VIOLATION: rather than making a virtual call to ToString on a boxed int.
                                                methodOrPropertyGroup, symbol);
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 365909, 366979);
                        }

                        else

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 365909, 366979);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 366945, 366960);

                            other = symbol;
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 365909, 366979);
                        }
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 364962, 366994);
                    }
                }
                catch (System.Exception)
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoopByException(10306, 1, 2033);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoop(10306, 1, 2033);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 367010, 367079);

                f_10306_367010_367078(f_10306_367023_367050(methodOrPropertyGroup) || (DynAbs.Tracing.TraceSender.Expression_False(10306, 367023, 367077) || ((object)other != null)));

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 367095, 368148) || true) && ((f_10306_367100_367127(methodOrPropertyGroup) > 0) && (DynAbs.Tracing.TraceSender.Expression_True(10306, 367099, 367199) && f_10306_367153_367199(methodOrPropertyGroup)))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 367095, 368148);

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 367465, 368133) || true) && ((f_10306_367470_367499(f_10306_367470_367494(methodOrPropertyGroup, 0)) == SymbolKind.Method) || (DynAbs.Tracing.TraceSender.Expression_False(10306, 367469, 367548) || ((object)other == null)))
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 367465, 368133);

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 367853, 368078) || true) && (f_10306_367857_367869(result) != null)
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 367853, 368078);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 367927, 367966);

                            f_10306_367927_367965(diagnostics, f_10306_367946_367958(result), node);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 367992, 368055);

                            wasError = (f_10306_368004_368025(f_10306_368004_368016(result)) == DiagnosticSeverity.Error);
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 367853, 368078);
                        }
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 368102, 368114);

                        return null;
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 367465, 368133);
                    }
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 367095, 368148);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 368164, 368194);

                f_10306_368164_368193(
                            methodOrPropertyGroup);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 368208, 368294);

                return f_10306_368215_368293(this, result, plainName, arity, node, diagnostics, false, out wasError);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10306, 364124, 368305);

                bool
                f_10306_364367_364394(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbol>
                this_param)
                {
                    var return_v = this_param.Any();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 364367, 364394);
                    return return_v;
                }


                int
                f_10306_364353_364395(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 364353, 364395);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.Syntax.NameSyntax
                f_10306_364419_364438(Microsoft.CodeAnalysis.SyntaxNode
                syntax)
                {
                    var return_v = GetNameSyntax(syntax);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 364419, 364438);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.LookupResultKind
                f_10306_364507_364518(Microsoft.CodeAnalysis.CSharp.LookupResult
                this_param)
                {
                    var return_v = this_param.Kind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 364507, 364518);
                    return return_v;
                }


                int
                f_10306_364494_364545(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 364494, 364545);
                    return 0;
                }


                Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbol>
                f_10306_364574_364588(Microsoft.CodeAnalysis.CSharp.LookupResult
                this_param)
                {
                    var return_v = this_param.Symbols;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 364574, 364588);
                    return return_v;
                }


                bool
                f_10306_364574_364612(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbol>
                builder, System.Func<Microsoft.CodeAnalysis.CSharp.Symbol, bool>
                predicate)
                {
                    var return_v = builder.Any<Microsoft.CodeAnalysis.CSharp.Symbol>(predicate);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 364574, 364612);
                    return return_v;
                }


                int
                f_10306_364560_364613(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 364560, 364613);
                    return 0;
                }


                Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbol>
                f_10306_364985_364999(Microsoft.CodeAnalysis.CSharp.LookupResult
                this_param)
                {
                    var return_v = this_param.Symbols;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 364985, 364999);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SymbolKind
                f_10306_365044_365055(Microsoft.CodeAnalysis.CSharp.Symbol
                this_param)
                {
                    var return_v = this_param.Kind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 365044, 365055);
                    return return_v;
                }


                int
                f_10306_365078_365105(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbol>
                this_param)
                {
                    var return_v = this_param.Count;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 365078, 365105);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbol
                f_10306_365170_365194(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbol>
                this_param, int
                i0)
                {
                    var return_v = this_param[i0];
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 365170, 365194);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SymbolKind
                f_10306_365170_365199(Microsoft.CodeAnalysis.CSharp.Symbol
                this_param)
                {
                    var return_v = this_param.Kind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 365170, 365199);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbol
                f_10306_365766_365790(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbol>
                this_param, int
                i0)
                {
                    var return_v = this_param[i0];
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 365766, 365790);
                    return return_v;
                }


                int
                f_10306_365817_365846(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbol>
                this_param)
                {
                    this_param.Clear();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 365817, 365846);
                    return 0;
                }


                int
                f_10306_366829_366862(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbol>
                this_param, Microsoft.CodeAnalysis.CSharp.Symbol
                item)
                {
                    this_param.Add(item);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 366829, 366862);
                    return 0;
                }


                Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbol>
                f_10306_364985_364999_I(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbol>
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 364985, 364999);
                    return return_v;
                }


                bool
                f_10306_367023_367050(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbol>
                this_param)
                {
                    var return_v = this_param.Any();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 367023, 367050);
                    return return_v;
                }


                int
                f_10306_367010_367078(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 367010, 367078);
                    return 0;
                }


                int
                f_10306_367100_367127(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbol>
                this_param)
                {
                    var return_v = this_param.Count;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 367100, 367127);
                    return return_v;
                }


                bool
                f_10306_367153_367199(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbol>
                members)
                {
                    var return_v = IsMethodOrPropertyGroup(members);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 367153, 367199);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbol
                f_10306_367470_367494(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbol>
                this_param, int
                i0)
                {
                    var return_v = this_param[i0];
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 367470, 367494);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SymbolKind
                f_10306_367470_367499(Microsoft.CodeAnalysis.CSharp.Symbol
                this_param)
                {
                    var return_v = this_param.Kind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 367470, 367499);
                    return return_v;
                }


                Microsoft.CodeAnalysis.DiagnosticInfo
                f_10306_367857_367869(Microsoft.CodeAnalysis.CSharp.LookupResult
                this_param)
                {
                    var return_v = this_param.Error;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 367857, 367869);
                    return return_v;
                }


                Microsoft.CodeAnalysis.DiagnosticInfo
                f_10306_367946_367958(Microsoft.CodeAnalysis.CSharp.LookupResult
                this_param)
                {
                    var return_v = this_param.Error;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 367946, 367958);
                    return return_v;
                }


                int
                f_10306_367927_367965(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.DiagnosticInfo
                info, Microsoft.CodeAnalysis.SyntaxNode
                syntax)
                {
                    Error(diagnostics, info, syntax);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 367927, 367965);
                    return 0;
                }


                Microsoft.CodeAnalysis.DiagnosticInfo
                f_10306_368004_368016(Microsoft.CodeAnalysis.CSharp.LookupResult
                this_param)
                {
                    var return_v = this_param.Error;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 368004, 368016);
                    return return_v;
                }


                Microsoft.CodeAnalysis.DiagnosticSeverity
                f_10306_368004_368025(Microsoft.CodeAnalysis.DiagnosticInfo
                this_param)
                {
                    var return_v = this_param.Severity;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 368004, 368025);
                    return return_v;
                }


                int
                f_10306_368164_368193(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbol>
                this_param)
                {
                    this_param.Clear();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 368164, 368193);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.Symbol
                f_10306_368215_368293(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.LookupResult
                result, string
                simpleName, int
                arity, Microsoft.CodeAnalysis.SyntaxNode
                where, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, bool
                suppressUseSiteDiagnostics, out bool
                wasError)
                {
                    var return_v = this_param.ResultSymbol(result, simpleName, arity, where, diagnostics, suppressUseSiteDiagnostics, out wasError);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 368215, 368293);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 364124, 368305);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 364124, 368305);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private static bool IsMethodOrPropertyGroup(ArrayBuilder<Symbol> members)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterStaticMethod(10306, 368317, 369810);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 368415, 368447);

                f_10306_368415_368446(f_10306_368428_368441(members) > 0);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 368463, 368487);

                var
                member = f_10306_368476_368486(members, 0)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 368556, 368610);

                f_10306_368556_368609(f_10306_368569_368608(members, m => m.Kind == member.Kind));
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 368626, 369799);

                switch (f_10306_368634_368645(member))
                {

                    case SymbolKind.Method:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 368626, 369799);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 368724, 368736);

                        return true;
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 368626, 369799);

                    case SymbolKind.Property:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 368626, 369799);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 368803, 368850);

                        f_10306_368803_368849(f_10306_368816_368848(members, m => !m.IsIndexer()));
                        try
                        {
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 369402, 369645);
                            foreach (PropertySymbol property in f_10306_369438_369445_I(members))
                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 369402, 369645);

                                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 369495, 369622) || true) && (f_10306_369499_369525(property))
                                )

                                {
                                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 369495, 369622);
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 369583, 369595);

                                    return true;
                                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 369495, 369622);
                                }
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 369402, 369645);
                            }
                        }
                        catch (System.Exception)
                        {
                            DynAbs.Tracing.TraceSender.TraceExitLoopByException(10306, 1, 244);
                            throw;
                        }
                        finally
                        {
                            DynAbs.Tracing.TraceSender.TraceExitLoop(10306, 1, 244);
                        }
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 369667, 369680);

                        return false;
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 368626, 369799);

                    default:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 368626, 369799);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 369730, 369784);

                        throw f_10306_369736_369783(f_10306_369771_369782(member));
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 368626, 369799);
                }
                DynAbs.Tracing.TraceSender.TraceExitStaticMethod(10306, 368317, 369810);

                int
                f_10306_368428_368441(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbol>
                this_param)
                {
                    var return_v = this_param.Count;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 368428, 368441);
                    return return_v;
                }


                int
                f_10306_368415_368446(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 368415, 368446);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.Symbol
                f_10306_368476_368486(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbol>
                this_param, int
                i0)
                {
                    var return_v = this_param[i0];
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 368476, 368486);
                    return return_v;
                }


                bool
                f_10306_368569_368608(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbol>
                builder, System.Func<Microsoft.CodeAnalysis.CSharp.Symbol, bool>
                predicate)
                {
                    var return_v = builder.All<Microsoft.CodeAnalysis.CSharp.Symbol>(predicate);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 368569, 368608);
                    return return_v;
                }


                int
                f_10306_368556_368609(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 368556, 368609);
                    return 0;
                }


                Microsoft.CodeAnalysis.SymbolKind
                f_10306_368634_368645(Microsoft.CodeAnalysis.CSharp.Symbol
                this_param)
                {
                    var return_v = this_param.Kind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 368634, 368645);
                    return return_v;
                }


                bool
                f_10306_368816_368848(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbol>
                builder, System.Func<Microsoft.CodeAnalysis.CSharp.Symbol, bool>
                predicate)
                {
                    var return_v = builder.All<Microsoft.CodeAnalysis.CSharp.Symbol>(predicate);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 368816, 368848);
                    return return_v;
                }


                int
                f_10306_368803_368849(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 368803, 368849);
                    return 0;
                }


                bool
                f_10306_369499_369525(Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol
                this_param)
                {
                    var return_v = this_param.IsIndexedProperty;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 369499, 369525);
                    return return_v;
                }


                Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbol>
                f_10306_369438_369445_I(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbol>
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 369438, 369445);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SymbolKind
                f_10306_369771_369782(Microsoft.CodeAnalysis.CSharp.Symbol
                this_param)
                {
                    var return_v = this_param.Kind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 369771, 369782);
                    return return_v;
                }


                System.Exception
                f_10306_369736_369783(Microsoft.CodeAnalysis.SymbolKind
                o)
                {
                    var return_v = ExceptionUtilities.UnexpectedValue((object)o);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 369736, 369783);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 368317, 369810);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 368317, 369810);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private BoundExpression BindElementAccess(ElementAccessExpressionSyntax node, DiagnosticBag diagnostics)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10306, 369822, 370165);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 369951, 370067);

                BoundExpression
                receiver = f_10306_369978_370066(this, f_10306_369993_370008(node), diagnostics: diagnostics, invoked: false, indexed: true)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 370081, 370154);

                return f_10306_370088_370153(this, node, receiver, f_10306_370122_370139(node), diagnostics);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10306, 369822, 370165);

                Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                f_10306_369993_370008(Microsoft.CodeAnalysis.CSharp.Syntax.ElementAccessExpressionSyntax
                this_param)
                {
                    var return_v = this_param.Expression;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 369993, 370008);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_369978_370066(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                node, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, bool
                invoked, bool
                indexed)
                {
                    var return_v = this_param.BindExpression(node, diagnostics: diagnostics, invoked: invoked, indexed: indexed);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 369978, 370066);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Syntax.BracketedArgumentListSyntax
                f_10306_370122_370139(Microsoft.CodeAnalysis.CSharp.Syntax.ElementAccessExpressionSyntax
                this_param)
                {
                    var return_v = this_param.ArgumentList;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 370122, 370139);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_370088_370153(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.ElementAccessExpressionSyntax
                node, Microsoft.CodeAnalysis.CSharp.BoundExpression
                receiver, Microsoft.CodeAnalysis.CSharp.Syntax.BracketedArgumentListSyntax
                argumentList, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.BindElementAccess((Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)node, receiver, argumentList, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 370088, 370153);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 369822, 370165);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 369822, 370165);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private BoundExpression BindElementAccess(ExpressionSyntax node, BoundExpression receiver, BracketedArgumentListSyntax argumentList, DiagnosticBag diagnostics)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10306, 370177, 371248);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 370361, 370431);

                AnalyzedArguments
                analyzedArguments = f_10306_370399_370430()
                ;
                try
                {
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 370481, 370549);

                    f_10306_370481_370548(this, argumentList, diagnostics, analyzedArguments);

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 370569, 370869) || true) && (f_10306_370573_370586(receiver) == BoundKind.PropertyGroup)
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 370569, 370869);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 370655, 370704);

                        var
                        propertyGroup = (BoundPropertyGroup)receiver
                        ;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 370726, 370850);

                        return f_10306_370733_370849(this, node, f_10306_370765_370790(propertyGroup), f_10306_370792_370816(propertyGroup), analyzedArguments, diagnostics);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 370569, 370869);
                    }
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 370889, 370956);

                    receiver = f_10306_370900_370955(this, receiver, BindValueKind.RValue, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 370974, 371026);

                    receiver = f_10306_370985_371025(this, receiver, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 371046, 371128);

                    return f_10306_371053_371127(this, node, receiver, analyzedArguments, diagnostics);
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinally(10306, 371157, 371237);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 371197, 371222);

                    f_10306_371197_371221(analyzedArguments);
                    DynAbs.Tracing.TraceSender.TraceExitFinally(10306, 371157, 371237);
                }
                DynAbs.Tracing.TraceSender.TraceExitMethod(10306, 370177, 371248);

                Microsoft.CodeAnalysis.CSharp.AnalyzedArguments
                f_10306_370399_370430()
                {
                    var return_v = AnalyzedArguments.GetInstance();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 370399, 370430);
                    return return_v;
                }


                int
                f_10306_370481_370548(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.BracketedArgumentListSyntax
                argumentListOpt, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.AnalyzedArguments
                result)
                {
                    this_param.BindArgumentsAndNames(argumentListOpt, diagnostics, result);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 370481, 370548);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.BoundKind
                f_10306_370573_370586(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.Kind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 370573, 370586);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression?
                f_10306_370765_370790(Microsoft.CodeAnalysis.CSharp.BoundPropertyGroup
                this_param)
                {
                    var return_v = this_param.ReceiverOpt;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 370765, 370790);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol>
                f_10306_370792_370816(Microsoft.CodeAnalysis.CSharp.BoundPropertyGroup
                this_param)
                {
                    var return_v = this_param.Properties;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 370792, 370816);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_370733_370849(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                syntax, Microsoft.CodeAnalysis.CSharp.BoundExpression?
                receiverOpt, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol>
                propertyGroup, Microsoft.CodeAnalysis.CSharp.AnalyzedArguments
                arguments, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.BindIndexedPropertyAccess((Microsoft.CodeAnalysis.SyntaxNode)syntax, receiverOpt, propertyGroup, arguments, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 370733, 370849);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_370900_370955(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                expr, Microsoft.CodeAnalysis.CSharp.Binder.BindValueKind
                valueKind, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.CheckValue(expr, valueKind, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 370900, 370955);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_370985_371025(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                expression, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.BindToNaturalType(expression, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 370985, 371025);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_371053_371127(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                node, Microsoft.CodeAnalysis.CSharp.BoundExpression
                expr, Microsoft.CodeAnalysis.CSharp.AnalyzedArguments
                analyzedArguments, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.BindElementOrIndexerAccess(node, expr, analyzedArguments, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 371053, 371127);
                    return return_v;
                }


                int
                f_10306_371197_371221(Microsoft.CodeAnalysis.CSharp.AnalyzedArguments
                this_param)
                {
                    this_param.Free();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 371197, 371221);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 370177, 371248);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 370177, 371248);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private BoundExpression BindElementOrIndexerAccess(ExpressionSyntax node, BoundExpression expr, AnalyzedArguments analyzedArguments, DiagnosticBag diagnostics)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10306, 371260, 372375);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 371444, 371600) || true) && ((object)f_10306_371456_371465(expr) == null)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 371444, 371600);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 371507, 371585);

                    return f_10306_371514_371584(this, node, expr, analyzedArguments, null, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 371444, 371600);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 371616, 371666);

                f_10306_371616_371665(this, node, expr, diagnostics);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 371722, 372275) || true) && (f_10306_371726_371753(analyzedArguments) || (DynAbs.Tracing.TraceSender.Expression_False(10306, 371726, 371774) || f_10306_371757_371774(expr)))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 371722, 372275);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 372050, 372098);

                    DiagnosticBag
                    tmp = f_10306_372070_372097()
                    ;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 372116, 372199);

                    BoundExpression
                    result = f_10306_372141_372198(this, node, expr, analyzedArguments, tmp)
                    ;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 372217, 372228);

                    f_10306_372217_372227(tmp);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 372246, 372260);

                    return result;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 371722, 372275);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 372291, 372364);

                return f_10306_372298_372363(this, node, expr, analyzedArguments, diagnostics);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10306, 371260, 372375);

                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?
                f_10306_371456_371465(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 371456, 371465);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_371514_371584(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                node, Microsoft.CodeAnalysis.CSharp.BoundExpression
                expr, Microsoft.CodeAnalysis.CSharp.AnalyzedArguments
                analyzedArguments, Microsoft.CodeAnalysis.DiagnosticInfo
                errorOpt, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.BadIndexerExpression(node, expr, analyzedArguments, errorOpt, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 371514, 371584);
                    return return_v;
                }


                int
                f_10306_371616_371665(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                node, Microsoft.CodeAnalysis.CSharp.BoundExpression
                boundLeft, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    this_param.WarnOnAccessOfOffDefault((Microsoft.CodeAnalysis.SyntaxNode)node, boundLeft, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 371616, 371665);
                    return 0;
                }


                bool
                f_10306_371726_371753(Microsoft.CodeAnalysis.CSharp.AnalyzedArguments
                this_param)
                {
                    var return_v = this_param.HasErrors;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 371726, 371753);
                    return return_v;
                }


                bool
                f_10306_371757_371774(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.HasAnyErrors;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 371757, 371774);
                    return return_v;
                }


                Microsoft.CodeAnalysis.DiagnosticBag
                f_10306_372070_372097()
                {
                    var return_v = DiagnosticBag.GetInstance();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 372070, 372097);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_372141_372198(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                node, Microsoft.CodeAnalysis.CSharp.BoundExpression
                expr, Microsoft.CodeAnalysis.CSharp.AnalyzedArguments
                arguments, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.BindElementAccessCore(node, expr, arguments, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 372141, 372198);
                    return return_v;
                }


                int
                f_10306_372217_372227(Microsoft.CodeAnalysis.DiagnosticBag
                this_param)
                {
                    this_param.Free();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 372217, 372227);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_372298_372363(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                node, Microsoft.CodeAnalysis.CSharp.BoundExpression
                expr, Microsoft.CodeAnalysis.CSharp.AnalyzedArguments
                arguments, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.BindElementAccessCore(node, expr, arguments, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 372298, 372363);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 371260, 372375);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 371260, 372375);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private BoundExpression BadIndexerExpression(ExpressionSyntax node, BoundExpression expr, AnalyzedArguments analyzedArguments, DiagnosticInfo errorOpt, DiagnosticBag diagnostics)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10306, 372387, 373033);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 372590, 372767) || true) && (f_10306_372594_372612_M(!expr.HasAnyErrors))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 372590, 372767);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 372646, 372752);

                    f_10306_372646_372751(diagnostics, errorOpt ?? (DynAbs.Tracing.TraceSender.Expression_Null<Microsoft.CodeAnalysis.DiagnosticInfo>(10306, 372662, 372735) ?? f_10306_372674_372735(ErrorCode.ERR_BadIndexLHS, f_10306_372722_372734(expr))), f_10306_372737_372750(node));
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 372590, 372767);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 372783, 372865);

                var
                childBoundNodes = f_10306_372805_372854(this, analyzedArguments).Add(expr)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 372879, 373022);

                return f_10306_372886_373021(node, LookupResultKind.Empty, ImmutableArray<Symbol>.Empty, childBoundNodes, f_10306_372986_373003(this), hasErrors: true);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10306, 372387, 373033);

                bool
                f_10306_372594_372612_M(bool
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 372594, 372612);
                    return return_v;
                }


                object
                f_10306_372722_372734(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.Display;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 372722, 372734);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo
                f_10306_372674_372735(Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, params object[]
                args)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo(code, args);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 372674, 372735);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Location
                f_10306_372737_372750(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                this_param)
                {
                    var return_v = this_param.Location;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 372737, 372750);
                    return return_v;
                }


                int
                f_10306_372646_372751(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.DiagnosticInfo
                info, Microsoft.CodeAnalysis.Location
                location)
                {
                    diagnostics.Add(info, location);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 372646, 372751);
                    return 0;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                f_10306_372805_372854(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.AnalyzedArguments
                analyzedArguments)
                {
                    var return_v = this_param.BuildArgumentsForErrorRecovery(analyzedArguments);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 372805, 372854);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                f_10306_372986_373003(Microsoft.CodeAnalysis.CSharp.Binder
                this_param)
                {
                    var return_v = this_param.CreateErrorType();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 372986, 373003);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundBadExpression
                f_10306_372886_373021(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                syntax, Microsoft.CodeAnalysis.CSharp.LookupResultKind
                resultKind, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>
                symbols, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                childBoundNodes, Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                type, bool
                hasErrors)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.BoundBadExpression((Microsoft.CodeAnalysis.SyntaxNode)syntax, resultKind, symbols, childBoundNodes, (Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol)type, hasErrors: hasErrors);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 372886, 373021);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 372387, 373033);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 372387, 373033);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private BoundExpression BindElementAccessCore(
                     ExpressionSyntax node,
                     BoundExpression expr,
                     AnalyzedArguments arguments,
                     DiagnosticBag diagnostics)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10306, 373045, 374481);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 373273, 373300);

                f_10306_373273_373299(node != null);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 373314, 373341);

                f_10306_373314_373340(expr != null);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 373355, 373395);

                f_10306_373355_373394((object)f_10306_373376_373385(expr) != null);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 373409, 373441);

                f_10306_373409_373440(arguments != null);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 373457, 373482);

                var
                exprType = f_10306_373472_373481(expr)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 373496, 374470);

                switch (f_10306_373504_373521(exprType))
                {

                    case TypeKind.Array:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 373496, 374470);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 373597, 373656);

                        return f_10306_373604_373655(this, node, expr, arguments, diagnostics);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 373496, 374470);

                    case TypeKind.Dynamic:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 373496, 374470);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 373720, 373820);

                        return f_10306_373727_373819(this, node, expr, arguments, ImmutableArray<PropertySymbol>.Empty, diagnostics);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 373496, 374470);

                    case TypeKind.Pointer:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 373496, 374470);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 373884, 373952);

                        return f_10306_373891_373951(this, node, expr, arguments, diagnostics);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 373496, 374470);

                    case TypeKind.Class:
                    case TypeKind.Struct:
                    case TypeKind.Interface:
                    case TypeKind.TypeParameter:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 373496, 374470);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 374141, 374202);

                        return f_10306_374148_374201(this, node, expr, arguments, diagnostics);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 373496, 374470);

                    case TypeKind.Submission: // script class is synthesized and should not be used as a type of an indexer expression:
                    default:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 373496, 374470);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 374385, 374455);

                        return f_10306_374392_374454(this, node, expr, arguments, null, diagnostics);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 373496, 374470);
                }
                DynAbs.Tracing.TraceSender.TraceExitMethod(10306, 373045, 374481);

                int
                f_10306_373273_373299(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 373273, 373299);
                    return 0;
                }


                int
                f_10306_373314_373340(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 373314, 373340);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?
                f_10306_373376_373385(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 373376, 373385);
                    return return_v;
                }


                int
                f_10306_373355_373394(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 373355, 373394);
                    return 0;
                }


                int
                f_10306_373409_373440(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 373409, 373440);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                f_10306_373472_373481(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 373472, 373481);
                    return return_v;
                }


                Microsoft.CodeAnalysis.TypeKind
                f_10306_373504_373521(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                this_param)
                {
                    var return_v = this_param.TypeKind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 373504, 373521);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_373604_373655(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                node, Microsoft.CodeAnalysis.CSharp.BoundExpression
                expr, Microsoft.CodeAnalysis.CSharp.AnalyzedArguments
                arguments, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.BindArrayAccess(node, expr, arguments, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 373604, 373655);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_373727_373819(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                syntax, Microsoft.CodeAnalysis.CSharp.BoundExpression
                receiver, Microsoft.CodeAnalysis.CSharp.AnalyzedArguments
                arguments, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol>
                applicableProperties, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.BindDynamicIndexer((Microsoft.CodeAnalysis.SyntaxNode)syntax, receiver, arguments, applicableProperties, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 373727, 373819);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_373891_373951(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                node, Microsoft.CodeAnalysis.CSharp.BoundExpression
                expr, Microsoft.CodeAnalysis.CSharp.AnalyzedArguments
                analyzedArguments, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.BindPointerElementAccess(node, expr, analyzedArguments, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 373891, 373951);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_374148_374201(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                node, Microsoft.CodeAnalysis.CSharp.BoundExpression
                expr, Microsoft.CodeAnalysis.CSharp.AnalyzedArguments
                analyzedArguments, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.BindIndexerAccess(node, expr, analyzedArguments, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 374148, 374201);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_374392_374454(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                node, Microsoft.CodeAnalysis.CSharp.BoundExpression
                expr, Microsoft.CodeAnalysis.CSharp.AnalyzedArguments
                analyzedArguments, Microsoft.CodeAnalysis.DiagnosticInfo
                errorOpt, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.BadIndexerExpression(node, expr, analyzedArguments, errorOpt, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 374392, 374454);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 373045, 374481);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 373045, 374481);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private BoundExpression BindArrayAccess(ExpressionSyntax node, BoundExpression expr, AnalyzedArguments arguments, DiagnosticBag diagnostics)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10306, 374493, 378090);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 374658, 374685);

                f_10306_374658_374684(node != null);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 374699, 374726);

                f_10306_374699_374725(expr != null);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 374740, 374772);

                f_10306_374740_374771(arguments != null);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 375316, 375456) || true) && (f_10306_375320_375341(arguments.Names) > 0)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 375316, 375456);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 375379, 375441);

                    f_10306_375379_375440(diagnostics, ErrorCode.ERR_NamedArgumentForArray, node);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 375316, 375456);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 375472, 375536);

                bool
                hasErrors = f_10306_375489_375535(arguments, diagnostics)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 375550, 375593);

                var
                arrayType = (ArrayTypeSymbol)f_10306_375583_375592(expr)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 375937, 375963);

                int
                rank = f_10306_375948_375962(arrayType)
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 375979, 376266) || true) && (f_10306_375983_376008(arguments.Arguments) != rank)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 375979, 376266);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 376050, 376110);

                    f_10306_376050_376109(diagnostics, ErrorCode.ERR_BadIndexCount, node, rank);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 376128, 376251);

                    return f_10306_376135_376250(node, expr, f_10306_376168_376209(this, arguments), f_10306_376211_376232(arrayType), hasErrors: true);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 375979, 376266);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 376349, 376435);

                BoundExpression[]
                convertedArguments = new BoundExpression[f_10306_376408_376433(arguments.Arguments)]
                ;
                try
                {
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 376458, 376463);
                    for (int
        i = 0
        ; (DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 376449, 377388) || true) && (i < f_10306_376469_376494(arguments.Arguments))
        ; DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 376496, 376499)
        , ++i, DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 376449, 377388))

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 376449, 377388);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 376533, 376583);

                        BoundExpression
                        argument = f_10306_376560_376582(arguments.Arguments, i)
                        ;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 376603, 376707);

                        BoundExpression
                        index = f_10306_376627_376706(this, argument, node, diagnostics, allowIndexAndRange: rank == 1)
                        ;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 376725, 376755);

                        convertedArguments[i] = index;

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 377019, 377373) || true) && (rank == 1 && (DynAbs.Tracing.TraceSender.Expression_True(10306, 377023, 377055) && f_10306_377036_377055_M(!index.HasAnyErrors)))
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 377019, 377373);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 377097, 377142);

                            ConstantValue
                            constant = f_10306_377122_377141(index)
                            ;

                            if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 377164, 377354) || true) && (constant != null && (DynAbs.Tracing.TraceSender.Expression_True(10306, 377168, 377214) && f_10306_377188_377214(constant)))
                            )

                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 377164, 377354);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 377264, 377331);

                                f_10306_377264_377330(diagnostics, ErrorCode.WRN_NegativeArrayIndex, index.Syntax);
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 377164, 377354);
                            }
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 377019, 377373);
                        }
                    }
                }
                catch (System.Exception)
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoopByException(10306, 1, 940);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoop(10306, 1, 940);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 377404, 377732);

                TypeSymbol
                resultType = (DynAbs.Tracing.TraceSender.Conditional_F1(10306, 377428, 377661) || ((rank == 1 && (DynAbs.Tracing.TraceSender.Expression_True(10306, 377428, 377661) && f_10306_377458_377661(f_10306_377498_377524(convertedArguments[0]), f_10306_377547_377603(f_10306_377547_377558(), WellKnownType.System_Range), TypeCompareKind.ConsiderEverything)) && DynAbs.Tracing.TraceSender.Conditional_F2(10306, 377681, 377690)) || DynAbs.Tracing.TraceSender.Conditional_F3(10306, 377710, 377731))) ? arrayType
                : f_10306_377710_377731(arrayType)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 377748, 378079);

                return (DynAbs.Tracing.TraceSender.Conditional_F1(10306, 377755, 377764) || ((hasErrors
                && DynAbs.Tracing.TraceSender.Conditional_F2(10306, 377784, 377956)) || DynAbs.Tracing.TraceSender.Conditional_F3(10306, 377976, 378078))) ? f_10306_377784_377956(node, f_10306_377811_377843(this, expr), f_10306_377845_377926(f_10306_377845_377906(convertedArguments, e => BindToTypeForErrorRecovery(e))), resultType, hasErrors: true) : f_10306_377976_378078(node, expr, f_10306_378009_378047(convertedArguments), resultType, hasErrors: false);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10306, 374493, 378090);

                int
                f_10306_374658_374684(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 374658, 374684);
                    return 0;
                }


                int
                f_10306_374699_374725(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 374699, 374725);
                    return 0;
                }


                int
                f_10306_374740_374771(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 374740, 374771);
                    return 0;
                }


                int
                f_10306_375320_375341(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Syntax.IdentifierNameSyntax>
                this_param)
                {
                    var return_v = this_param.Count;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 375320, 375341);
                    return return_v;
                }


                int
                f_10306_375379_375440(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                syntax)
                {
                    Error(diagnostics, code, (Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode)syntax);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 375379, 375440);
                    return 0;
                }


                bool
                f_10306_375489_375535(Microsoft.CodeAnalysis.CSharp.AnalyzedArguments
                analyzedArguments, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = ReportRefOrOutArgument(analyzedArguments, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 375489, 375535);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?
                f_10306_375583_375592(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 375583, 375592);
                    return return_v;
                }


                int
                f_10306_375948_375962(Microsoft.CodeAnalysis.CSharp.Symbols.ArrayTypeSymbol?
                this_param)
                {
                    var return_v = this_param.Rank;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 375948, 375962);
                    return return_v;
                }


                int
                f_10306_375983_376008(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                this_param)
                {
                    var return_v = this_param.Count;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 375983, 376008);
                    return return_v;
                }


                int
                f_10306_376050_376109(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                syntax, params object[]
                args)
                {
                    Error(diagnostics, code, (Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode)syntax, args);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 376050, 376109);
                    return 0;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                f_10306_376168_376209(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.AnalyzedArguments
                analyzedArguments)
                {
                    var return_v = this_param.BuildArgumentsForErrorRecovery(analyzedArguments);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 376168, 376209);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                f_10306_376211_376232(Microsoft.CodeAnalysis.CSharp.Symbols.ArrayTypeSymbol
                this_param)
                {
                    var return_v = this_param.ElementType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 376211, 376232);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundArrayAccess
                f_10306_376135_376250(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                syntax, Microsoft.CodeAnalysis.CSharp.BoundExpression
                expression, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                indices, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                type, bool
                hasErrors)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.BoundArrayAccess((Microsoft.CodeAnalysis.SyntaxNode)syntax, expression, indices, type, hasErrors: hasErrors);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 376135, 376250);
                    return return_v;
                }


                int
                f_10306_376408_376433(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                this_param)
                {
                    var return_v = this_param.Count;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 376408, 376433);
                    return return_v;
                }


                int
                f_10306_376469_376494(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                this_param)
                {
                    var return_v = this_param.Count;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 376469, 376494);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_376560_376582(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                this_param, int
                i0)
                {
                    var return_v = this_param[i0];
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 376560, 376582);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_376627_376706(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                index, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                node, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, bool
                allowIndexAndRange)
                {
                    var return_v = this_param.ConvertToArrayIndex(index, (Microsoft.CodeAnalysis.SyntaxNode)node, diagnostics, allowIndexAndRange: allowIndexAndRange);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 376627, 376706);
                    return return_v;
                }


                bool
                f_10306_377036_377055_M(bool
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 377036, 377055);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ConstantValue?
                f_10306_377122_377141(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.ConstantValue;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 377122, 377141);
                    return return_v;
                }


                bool
                f_10306_377188_377214(Microsoft.CodeAnalysis.ConstantValue
                this_param)
                {
                    var return_v = this_param.IsNegativeNumeric;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 377188, 377214);
                    return return_v;
                }


                int
                f_10306_377264_377330(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, Microsoft.CodeAnalysis.SyntaxNode
                syntax)
                {
                    Error(diagnostics, code, (Microsoft.CodeAnalysis.SyntaxNodeOrToken)syntax);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 377264, 377330);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?
                f_10306_377498_377524(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 377498, 377524);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                f_10306_377547_377558()
                {
                    var return_v = Compilation;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 377547, 377558);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                f_10306_377547_377603(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param, Microsoft.CodeAnalysis.WellKnownType
                type)
                {
                    var return_v = this_param.GetWellKnownType(type);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 377547, 377603);
                    return return_v;
                }


                bool
                f_10306_377458_377661(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?
                left, Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                right, Microsoft.CodeAnalysis.TypeCompareKind
                comparison)
                {
                    var return_v = TypeSymbol.Equals(left, (Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol)right, comparison);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 377458, 377661);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                f_10306_377710_377731(Microsoft.CodeAnalysis.CSharp.Symbols.ArrayTypeSymbol
                this_param)
                {
                    var return_v = this_param.ElementType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 377710, 377731);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_377811_377843(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                expression)
                {
                    var return_v = this_param.BindToTypeForErrorRecovery(expression);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 377811, 377843);
                    return return_v;
                }


                System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                f_10306_377845_377906(Microsoft.CodeAnalysis.CSharp.BoundExpression[]
                source, System.Func<Microsoft.CodeAnalysis.CSharp.BoundExpression, Microsoft.CodeAnalysis.CSharp.BoundExpression>
                selector)
                {
                    var return_v = source.Select<Microsoft.CodeAnalysis.CSharp.BoundExpression, Microsoft.CodeAnalysis.CSharp.BoundExpression>(selector);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 377845, 377906);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                f_10306_377845_377926(System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                items)
                {
                    var return_v = items.AsImmutableOrNull<Microsoft.CodeAnalysis.CSharp.BoundExpression>();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 377845, 377926);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundArrayAccess
                f_10306_377784_377956(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                syntax, Microsoft.CodeAnalysis.CSharp.BoundExpression
                expression, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                indices, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                type, bool
                hasErrors)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.BoundArrayAccess((Microsoft.CodeAnalysis.SyntaxNode)syntax, expression, indices, type, hasErrors: hasErrors);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 377784, 377956);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                f_10306_378009_378047(Microsoft.CodeAnalysis.CSharp.BoundExpression[]
                items)
                {
                    var return_v = items.AsImmutableOrNull<Microsoft.CodeAnalysis.CSharp.BoundExpression>();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 378009, 378047);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundArrayAccess
                f_10306_377976_378078(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                syntax, Microsoft.CodeAnalysis.CSharp.BoundExpression
                expression, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                indices, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                type, bool
                hasErrors)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.BoundArrayAccess((Microsoft.CodeAnalysis.SyntaxNode)syntax, expression, indices, type, hasErrors: hasErrors);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 377976, 378078);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 374493, 378090);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 374493, 378090);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private BoundExpression ConvertToArrayIndex(BoundExpression index, SyntaxNode node, DiagnosticBag diagnostics, bool allowIndexAndRange)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10306, 378102, 381317);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 378262, 378290);

                f_10306_378262_378289(index != null);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 378306, 378702) || true) && (f_10306_378310_378320(index) == BoundKind.OutVariablePendingInference)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 378306, 378702);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 378395, 378472);

                    return f_10306_378402_378471(((OutVariablePendingInference)index), this, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 378306, 378702);
                }

                else
                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 378306, 378702);

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 378506, 378702) || true) && (f_10306_378510_378520(index) == BoundKind.DiscardExpression && (DynAbs.Tracing.TraceSender.Expression_True(10306, 378510, 378581) && !f_10306_378556_378581(index)))
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 378506, 378702);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 378615, 378687);

                        return f_10306_378622_378686(((BoundDiscardExpression)index), this, diagnostics);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 378506, 378702);
                    }
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 378306, 378702);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 378718, 379154);

                var
                result =
                f_10306_378748_378833(this, index, SpecialType.System_Int32, node, diagnostics) ?? (DynAbs.Tracing.TraceSender.Expression_Null<Microsoft.CodeAnalysis.CSharp.BoundExpression>(10306, 378748, 379153) ?? f_10306_378854_378940(this, index, SpecialType.System_UInt32, node, diagnostics) ?? (DynAbs.Tracing.TraceSender.Expression_Null<Microsoft.CodeAnalysis.CSharp.BoundExpression>(10306, 378854, 379153) ?? f_10306_378961_379046(this, index, SpecialType.System_Int64, node, diagnostics) ?? (DynAbs.Tracing.TraceSender.Expression_Null<Microsoft.CodeAnalysis.CSharp.BoundExpression>(10306, 378961, 379153) ?? f_10306_379067_379153(this, index, SpecialType.System_UInt64, node, diagnostics))))
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 379170, 380429) || true) && (result is null && (DynAbs.Tracing.TraceSender.Expression_True(10306, 379174, 379210) && allowIndexAndRange))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 379170, 380429);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 379244, 379341);

                    result = f_10306_379253_379340(this, index, WellKnownType.System_Index, node, diagnostics);

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 379361, 380414) || true) && (result is null)
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 379361, 380414);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 379421, 379518);

                        result = f_10306_379430_379517(this, index, WellKnownType.System_Range, node, diagnostics);

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 379540, 380002) || true) && (result is object)
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 379540, 380002);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 379716, 379979);

                            _ = f_10306_379720_379978(f_10306_379773_379784(), WellKnownMember.System_Runtime_CompilerServices_RuntimeHelpers__GetSubArray_T, diagnostics, syntax: node);
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 379540, 380002);
                        }
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 379361, 380414);
                    }

                    else

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 379361, 380414);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 380186, 380395);

                        _ = f_10306_380190_380394(f_10306_380239_380250(), WellKnownMember.System_Index__GetOffset, diagnostics, syntax: node);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 379361, 380414);
                    }
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 379170, 380429);
                }

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 380445, 381276) || true) && (result is null)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 380445, 381276);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 380578, 380662);

                    NamedTypeSymbol
                    int32 = f_10306_380602_380661(this, SpecialType.System_Int32, diagnostics, node)
                    ;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 380680, 380730);

                    HashSet<DiagnosticInfo>
                    useSiteDiagnostics = null
                    ;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 380748, 380866);

                    Conversion
                    failedConversion = f_10306_380778_380865(f_10306_380778_380794(this), index, int32, ref useSiteDiagnostics)
                    ;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 380884, 380926);

                    f_10306_380884_380925(diagnostics, node, useSiteDiagnostics);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 380944, 381027);

                    f_10306_380944_381026(this, diagnostics, node, failedConversion, index, int32);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 381103, 381261);

                    return f_10306_381110_381260(this, index.Syntax, index, failedConversion, isCast: false, conversionGroupOpt: null, destination: int32, diagnostics: f_10306_381240_381259());
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 380445, 381276);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 381292, 381306);

                return result;
                DynAbs.Tracing.TraceSender.TraceExitMethod(10306, 378102, 381317);

                int
                f_10306_378262_378289(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 378262, 378289);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.BoundKind
                f_10306_378310_378320(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.Kind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 378310, 378320);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_378402_378471(Microsoft.CodeAnalysis.CSharp.OutVariablePendingInference
                this_param, Microsoft.CodeAnalysis.CSharp.Binder
                binder, Microsoft.CodeAnalysis.DiagnosticBag
                diagnosticsOpt)
                {
                    var return_v = this_param.FailInference(binder, diagnosticsOpt);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 378402, 378471);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundKind
                f_10306_378510_378520(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.Kind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 378510, 378520);
                    return return_v;
                }


                bool
                f_10306_378556_378581(Microsoft.CodeAnalysis.CSharp.BoundExpression
                node)
                {
                    var return_v = node.HasExpressionType();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 378556, 378581);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundDiscardExpression
                f_10306_378622_378686(Microsoft.CodeAnalysis.CSharp.BoundDiscardExpression
                this_param, Microsoft.CodeAnalysis.CSharp.Binder
                binder, Microsoft.CodeAnalysis.DiagnosticBag
                diagnosticsOpt)
                {
                    var return_v = this_param.FailInference(binder, diagnosticsOpt);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 378622, 378686);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_378748_378833(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                expr, Microsoft.CodeAnalysis.SpecialType
                specialType, Microsoft.CodeAnalysis.SyntaxNode
                node, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.TryImplicitConversionToArrayIndex(expr, specialType, node, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 378748, 378833);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_378854_378940(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                expr, Microsoft.CodeAnalysis.SpecialType
                specialType, Microsoft.CodeAnalysis.SyntaxNode
                node, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.TryImplicitConversionToArrayIndex(expr, specialType, node, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 378854, 378940);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_378961_379046(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                expr, Microsoft.CodeAnalysis.SpecialType
                specialType, Microsoft.CodeAnalysis.SyntaxNode
                node, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.TryImplicitConversionToArrayIndex(expr, specialType, node, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 378961, 379046);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_379067_379153(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                expr, Microsoft.CodeAnalysis.SpecialType
                specialType, Microsoft.CodeAnalysis.SyntaxNode
                node, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.TryImplicitConversionToArrayIndex(expr, specialType, node, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 379067, 379153);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_379253_379340(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                expr, Microsoft.CodeAnalysis.WellKnownType
                wellKnownType, Microsoft.CodeAnalysis.SyntaxNode
                node, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.TryImplicitConversionToArrayIndex(expr, wellKnownType, node, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 379253, 379340);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_379430_379517(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                expr, Microsoft.CodeAnalysis.WellKnownType
                wellKnownType, Microsoft.CodeAnalysis.SyntaxNode
                node, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.TryImplicitConversionToArrayIndex(expr, wellKnownType, node, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 379430, 379517);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                f_10306_379773_379784()
                {
                    var return_v = Compilation;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 379773, 379784);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbol
                f_10306_379720_379978(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                compilation, Microsoft.CodeAnalysis.WellKnownMember
                member, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.SyntaxNode
                syntax)
                {
                    var return_v = GetWellKnownTypeMember(compilation, member, diagnostics, syntax: syntax);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 379720, 379978);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                f_10306_380239_380250()
                {
                    var return_v = Compilation;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 380239, 380250);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbol
                f_10306_380190_380394(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                compilation, Microsoft.CodeAnalysis.WellKnownMember
                member, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.SyntaxNode
                syntax)
                {
                    var return_v = GetWellKnownTypeMember(compilation, member, diagnostics, syntax: syntax);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 380190, 380394);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                f_10306_380602_380661(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.SpecialType
                typeId, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.SyntaxNode
                node)
                {
                    var return_v = this_param.GetSpecialType(typeId, diagnostics, node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 380602, 380661);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Conversions
                f_10306_380778_380794(Microsoft.CodeAnalysis.CSharp.Binder
                this_param)
                {
                    var return_v = this_param.Conversions;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 380778, 380794);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Conversion
                f_10306_380778_380865(Microsoft.CodeAnalysis.CSharp.Conversions
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                sourceExpression, Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                destination, ref System.Collections.Generic.HashSet<Microsoft.CodeAnalysis.DiagnosticInfo>?
                useSiteDiagnostics)
                {
                    var return_v = this_param.ClassifyConversionFromExpression(sourceExpression, (Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol)destination, ref useSiteDiagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 380778, 380865);
                    return return_v;
                }


                bool
                f_10306_380884_380925(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.SyntaxNode
                node, System.Collections.Generic.HashSet<Microsoft.CodeAnalysis.DiagnosticInfo>
                useSiteDiagnostics)
                {
                    var return_v = diagnostics.Add(node, useSiteDiagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 380884, 380925);
                    return return_v;
                }


                int
                f_10306_380944_381026(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.CSharp.Conversion
                conversion, Microsoft.CodeAnalysis.CSharp.BoundExpression
                operand, Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                targetType)
                {
                    this_param.GenerateImplicitConversionError(diagnostics, syntax, conversion, operand, (Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol)targetType);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 380944, 381026);
                    return 0;
                }


                Microsoft.CodeAnalysis.DiagnosticBag
                f_10306_381240_381259()
                {
                    var return_v = new Microsoft.CodeAnalysis.DiagnosticBag();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 381240, 381259);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_381110_381260(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.CSharp.BoundExpression
                source, Microsoft.CodeAnalysis.CSharp.Conversion
                conversion, bool
                isCast, Microsoft.CodeAnalysis.CSharp.ConversionGroup?
                conversionGroupOpt, Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                destination, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.CreateConversion(syntax, source, conversion, isCast: isCast, conversionGroupOpt: conversionGroupOpt, destination: (Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol)destination, diagnostics: diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 381110, 381260);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 378102, 381317);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 378102, 381317);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private BoundExpression TryImplicitConversionToArrayIndex(BoundExpression expr, WellKnownType wellKnownType, SyntaxNode node, DiagnosticBag diagnostics)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10306, 381329, 382114);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 381506, 381556);

                HashSet<DiagnosticInfo>
                useSiteDiagnostics = null
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 381570, 381644);

                TypeSymbol
                type = f_10306_381588_381643(this, wellKnownType, ref useSiteDiagnostics)
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 381660, 381743) || true) && (f_10306_381664_381682(type))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 381660, 381743);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 381716, 381728);

                    return null;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 381660, 381743);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 381759, 381812);

                var
                attemptDiagnostics = f_10306_381784_381811()
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 381826, 381911);

                var
                result = f_10306_381839_381910(this, expr, type, node, attemptDiagnostics)
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 381925, 382035) || true) && (result is object)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 381925, 382035);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 381979, 382020);

                    f_10306_381979_382019(diagnostics, attemptDiagnostics);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 381925, 382035);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 382049, 382075);

                f_10306_382049_382074(attemptDiagnostics);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 382089, 382103);

                return result;
                DynAbs.Tracing.TraceSender.TraceExitMethod(10306, 381329, 382114);

                Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                f_10306_381588_381643(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.WellKnownType
                type, ref System.Collections.Generic.HashSet<Microsoft.CodeAnalysis.DiagnosticInfo>?
                useSiteDiagnostics)
                {
                    var return_v = this_param.GetWellKnownType(type, ref useSiteDiagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 381588, 381643);
                    return return_v;
                }


                bool
                f_10306_381664_381682(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                type)
                {
                    var return_v = type.IsErrorType();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 381664, 381682);
                    return return_v;
                }


                Microsoft.CodeAnalysis.DiagnosticBag
                f_10306_381784_381811()
                {
                    var return_v = DiagnosticBag.GetInstance();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 381784, 381811);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_381839_381910(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                expr, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                targetType, Microsoft.CodeAnalysis.SyntaxNode
                node, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.TryImplicitConversionToArrayIndex(expr, targetType, node, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 381839, 381910);
                    return return_v;
                }


                int
                f_10306_381979_382019(Microsoft.CodeAnalysis.DiagnosticBag
                this_param, Microsoft.CodeAnalysis.DiagnosticBag
                bag)
                {
                    this_param.AddRange(bag);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 381979, 382019);
                    return 0;
                }


                int
                f_10306_382049_382074(Microsoft.CodeAnalysis.DiagnosticBag
                this_param)
                {
                    this_param.Free();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 382049, 382074);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 381329, 382114);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 381329, 382114);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private BoundExpression TryImplicitConversionToArrayIndex(BoundExpression expr, SpecialType specialType, SyntaxNode node, DiagnosticBag diagnostics)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10306, 382126, 382758);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 382299, 382362);

                DiagnosticBag
                attemptDiagnostics = f_10306_382334_382361()
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 382378, 382450);

                TypeSymbol
                type = f_10306_382396_382449(this, specialType, attemptDiagnostics, node)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 382466, 382551);

                var
                result = f_10306_382479_382550(this, expr, type, node, attemptDiagnostics)
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 382567, 382677) || true) && (result is object)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 382567, 382677);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 382621, 382662);

                    f_10306_382621_382661(diagnostics, attemptDiagnostics);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 382567, 382677);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 382693, 382719);

                f_10306_382693_382718(
                            attemptDiagnostics);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 382733, 382747);

                return result;
                DynAbs.Tracing.TraceSender.TraceExitMethod(10306, 382126, 382758);

                Microsoft.CodeAnalysis.DiagnosticBag
                f_10306_382334_382361()
                {
                    var return_v = DiagnosticBag.GetInstance();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 382334, 382361);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                f_10306_382396_382449(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.SpecialType
                typeId, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.SyntaxNode
                node)
                {
                    var return_v = this_param.GetSpecialType(typeId, diagnostics, node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 382396, 382449);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_382479_382550(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                expr, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                targetType, Microsoft.CodeAnalysis.SyntaxNode
                node, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.TryImplicitConversionToArrayIndex(expr, targetType, node, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 382479, 382550);
                    return return_v;
                }


                int
                f_10306_382621_382661(Microsoft.CodeAnalysis.DiagnosticBag
                this_param, Microsoft.CodeAnalysis.DiagnosticBag
                bag)
                {
                    this_param.AddRange(bag);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 382621, 382661);
                    return 0;
                }


                int
                f_10306_382693_382718(Microsoft.CodeAnalysis.DiagnosticBag
                this_param)
                {
                    this_param.Free();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 382693, 382718);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 382126, 382758);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 382126, 382758);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private BoundExpression TryImplicitConversionToArrayIndex(BoundExpression expr, TypeSymbol targetType, SyntaxNode node, DiagnosticBag diagnostics)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10306, 382770, 383893);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 382941, 382968);

                f_10306_382941_382967(expr != null);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 382982, 383023);

                f_10306_382982_383022((object)targetType != null);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 383039, 383089);

                HashSet<DiagnosticInfo>
                useSiteDiagnostics = null
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 383103, 383227);

                Conversion
                conversion = f_10306_383127_383226(f_10306_383127_383143(this), expr, targetType, ref useSiteDiagnostics)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 383241, 383283);

                f_10306_383241_383282(diagnostics, node, useSiteDiagnostics);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 383297, 383380) || true) && (f_10306_383301_383319_M(!conversion.Exists))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 383297, 383380);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 383353, 383365);

                    return null;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 383297, 383380);
                }

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 383396, 383529) || true) && (conversion.IsDynamic)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 383396, 383529);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 383454, 383514);

                    conversion = conversion.SetArrayIndexConversionForDynamic();
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 383396, 383529);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 383545, 383697);

                BoundExpression
                result = f_10306_383570_383696(this, expr.Syntax, expr, conversion, isCast: false, conversionGroupOpt: null, destination: targetType, diagnostics)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 383732, 383761);

                f_10306_383732_383760(result != null);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 383868, 383882);

                return result;
                DynAbs.Tracing.TraceSender.TraceExitMethod(10306, 382770, 383893);

                int
                f_10306_382941_382967(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 382941, 382967);
                    return 0;
                }


                int
                f_10306_382982_383022(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 382982, 383022);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.Conversions
                f_10306_383127_383143(Microsoft.CodeAnalysis.CSharp.Binder
                this_param)
                {
                    var return_v = this_param.Conversions;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 383127, 383143);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Conversion
                f_10306_383127_383226(Microsoft.CodeAnalysis.CSharp.Conversions
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                sourceExpression, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                destination, ref System.Collections.Generic.HashSet<Microsoft.CodeAnalysis.DiagnosticInfo>?
                useSiteDiagnostics)
                {
                    var return_v = this_param.ClassifyImplicitConversionFromExpression(sourceExpression, destination, ref useSiteDiagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 383127, 383226);
                    return return_v;
                }


                bool
                f_10306_383241_383282(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.SyntaxNode
                node, System.Collections.Generic.HashSet<Microsoft.CodeAnalysis.DiagnosticInfo>
                useSiteDiagnostics)
                {
                    var return_v = diagnostics.Add(node, useSiteDiagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 383241, 383282);
                    return return_v;
                }


                bool
                f_10306_383301_383319_M(bool
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 383301, 383319);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_383570_383696(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.CSharp.BoundExpression
                source, Microsoft.CodeAnalysis.CSharp.Conversion
                conversion, bool
                isCast, Microsoft.CodeAnalysis.CSharp.ConversionGroup?
                conversionGroupOpt, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                destination, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.CreateConversion(syntax, source, conversion, isCast: isCast, conversionGroupOpt: conversionGroupOpt, destination: destination, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 383570, 383696);
                    return return_v;
                }


                int
                f_10306_383732_383760(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 383732, 383760);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 382770, 383893);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 382770, 383893);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private BoundExpression BindPointerElementAccess(ExpressionSyntax node, BoundExpression expr, AnalyzedArguments analyzedArguments, DiagnosticBag diagnostics)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10306, 383905, 385942);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 384087, 384114);

                f_10306_384087_384113(node != null);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 384128, 384155);

                f_10306_384128_384154(expr != null);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 384169, 384209);

                f_10306_384169_384208(analyzedArguments != null);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 384225, 384248);

                bool
                hasErrors = false
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 384264, 384629) || true) && (f_10306_384268_384297(analyzedArguments.Names) > 0)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 384264, 384629);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 384517, 384579);

                    f_10306_384517_384578(diagnostics, ErrorCode.ERR_NamedArgumentForArray, node);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 384597, 384614);

                    hasErrors = true;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 384264, 384629);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 384645, 384725);

                hasErrors = hasErrors || (DynAbs.Tracing.TraceSender.Expression_False(10306, 384657, 384724) || f_10306_384670_384724(analyzedArguments, diagnostics));
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 384741, 384781);

                f_10306_384741_384780(f_10306_384754_384779(f_10306_384754_384763(expr)));
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 384795, 384856);

                PointerTypeSymbol
                pointerType = (PointerTypeSymbol)f_10306_384846_384855(expr)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 384870, 384923);

                TypeSymbol
                pointedAtType = f_10306_384897_384922(pointerType)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 384939, 385009);

                ArrayBuilder<BoundExpression>
                arguments = analyzedArguments.Arguments
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 385023, 385466) || true) && (f_10306_385027_385042(arguments) != 1)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 385023, 385466);

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 385081, 385211) || true) && (!hasErrors)
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 385081, 385211);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 385137, 385192);

                        f_10306_385137_385191(diagnostics, ErrorCode.ERR_PtrIndexSingle, node);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 385081, 385211);
                    }
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 385229, 385451);

                    return f_10306_385236_385450(node, expr, f_10306_385278_385372(f_10306_385278_385348(this, node, f_10306_385298_385347(this, analyzedArguments))), f_10306_385395_385417(), pointedAtType, hasErrors: true);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 385023, 385466);
                }

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 385482, 385653) || true) && (f_10306_385486_385512(pointedAtType))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 385482, 385653);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 385546, 385603);

                    f_10306_385546_385602(diagnostics, ErrorCode.ERR_VoidError, expr.Syntax);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 385621, 385638);

                    hasErrors = true;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 385482, 385653);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 385669, 385706);

                BoundExpression
                index = f_10306_385693_385705(arguments, 0)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 385722, 385811);

                index = f_10306_385730_385810(this, index, index.Syntax, diagnostics, allowIndexAndRange: false);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 385825, 385931);

                return f_10306_385832_385930(node, expr, index, f_10306_385881_385903(), pointedAtType, hasErrors);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10306, 383905, 385942);

                int
                f_10306_384087_384113(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 384087, 384113);
                    return 0;
                }


                int
                f_10306_384128_384154(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 384128, 384154);
                    return 0;
                }


                int
                f_10306_384169_384208(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 384169, 384208);
                    return 0;
                }


                int
                f_10306_384268_384297(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Syntax.IdentifierNameSyntax>
                this_param)
                {
                    var return_v = this_param.Count;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 384268, 384297);
                    return return_v;
                }


                int
                f_10306_384517_384578(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                syntax)
                {
                    Error(diagnostics, code, (Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode)syntax);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 384517, 384578);
                    return 0;
                }


                bool
                f_10306_384670_384724(Microsoft.CodeAnalysis.CSharp.AnalyzedArguments
                analyzedArguments, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = ReportRefOrOutArgument(analyzedArguments, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 384670, 384724);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?
                f_10306_384754_384763(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 384754, 384763);
                    return return_v;
                }


                bool
                f_10306_384754_384779(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?
                type)
                {
                    var return_v = type.IsPointerType();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 384754, 384779);
                    return return_v;
                }


                int
                f_10306_384741_384780(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 384741, 384780);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                f_10306_384846_384855(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 384846, 384855);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                f_10306_384897_384922(Microsoft.CodeAnalysis.CSharp.Symbols.PointerTypeSymbol
                this_param)
                {
                    var return_v = this_param.PointedAtType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 384897, 384922);
                    return return_v;
                }


                int
                f_10306_385027_385042(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                this_param)
                {
                    var return_v = this_param.Count;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 385027, 385042);
                    return return_v;
                }


                int
                f_10306_385137_385191(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                syntax)
                {
                    Error(diagnostics, code, (Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode)syntax);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 385137, 385191);
                    return 0;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                f_10306_385298_385347(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.AnalyzedArguments
                analyzedArguments)
                {
                    var return_v = this_param.BuildArgumentsForErrorRecovery(analyzedArguments);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 385298, 385347);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundBadExpression
                f_10306_385278_385348(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                syntax, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                childNodes)
                {
                    var return_v = this_param.BadExpression((Microsoft.CodeAnalysis.SyntaxNode)syntax, childNodes);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 385278, 385348);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundBadExpression
                f_10306_385278_385372(Microsoft.CodeAnalysis.CSharp.BoundBadExpression
                node)
                {
                    var return_v = node.MakeCompilerGenerated<Microsoft.CodeAnalysis.CSharp.BoundBadExpression>();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 385278, 385372);
                    return return_v;
                }


                bool
                f_10306_385395_385417()
                {
                    var return_v = CheckOverflowAtRuntime;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 385395, 385417);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundPointerElementAccess
                f_10306_385236_385450(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                syntax, Microsoft.CodeAnalysis.CSharp.BoundExpression
                expression, Microsoft.CodeAnalysis.CSharp.BoundBadExpression
                index, bool
                @checked, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                type, bool
                hasErrors)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.BoundPointerElementAccess((Microsoft.CodeAnalysis.SyntaxNode)syntax, expression, (Microsoft.CodeAnalysis.CSharp.BoundExpression)index, @checked, type, hasErrors: hasErrors);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 385236, 385450);
                    return return_v;
                }


                bool
                f_10306_385486_385512(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                type)
                {
                    var return_v = type.IsVoidType();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 385486, 385512);
                    return return_v;
                }


                int
                f_10306_385546_385602(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, Microsoft.CodeAnalysis.SyntaxNode
                syntax)
                {
                    Error(diagnostics, code, (Microsoft.CodeAnalysis.SyntaxNodeOrToken)syntax);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 385546, 385602);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_385693_385705(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                this_param, int
                i0)
                {
                    var return_v = this_param[i0];
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 385693, 385705);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_385730_385810(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                index, Microsoft.CodeAnalysis.SyntaxNode
                node, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, bool
                allowIndexAndRange)
                {
                    var return_v = this_param.ConvertToArrayIndex(index, node, diagnostics, allowIndexAndRange: allowIndexAndRange);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 385730, 385810);
                    return return_v;
                }


                bool
                f_10306_385881_385903()
                {
                    var return_v = CheckOverflowAtRuntime;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 385881, 385903);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundPointerElementAccess
                f_10306_385832_385930(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                syntax, Microsoft.CodeAnalysis.CSharp.BoundExpression
                expression, Microsoft.CodeAnalysis.CSharp.BoundExpression
                index, bool
                @checked, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                type, bool
                hasErrors)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.BoundPointerElementAccess((Microsoft.CodeAnalysis.SyntaxNode)syntax, expression, index, @checked, type, hasErrors);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 385832, 385930);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 383905, 385942);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 383905, 385942);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private static bool ReportRefOrOutArgument(AnalyzedArguments analyzedArguments, DiagnosticBag diagnostics)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterStaticMethod(10306, 385954, 386594);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 386085, 386138);

                int
                numArguments = f_10306_386104_386137(analyzedArguments.Arguments)
                ;
                try
                {
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 386161, 386166);
                    for (int
        i = 0
        ; (DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 386152, 386554) || true) && (i < numArguments)
        ; DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 386186, 386189)
        , i++, DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 386152, 386554))

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 386152, 386554);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 386223, 386270);

                        RefKind
                        refKind = f_10306_386241_386269(analyzedArguments, i)
                        ;

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 386288, 386539) || true) && (refKind != RefKind.None)
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 386288, 386539);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 386357, 386486);

                            f_10306_386357_386485(diagnostics, ErrorCode.ERR_BadArgExtraRef, f_10306_386406_386435(analyzedArguments, i).Syntax, i + 1, f_10306_386451_386484(refKind));
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 386508, 386520);

                            return true;
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 386288, 386539);
                        }
                    }
                }
                catch (System.Exception)
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoopByException(10306, 1, 403);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoop(10306, 1, 403);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 386570, 386583);

                return false;
                DynAbs.Tracing.TraceSender.TraceExitStaticMethod(10306, 385954, 386594);

                int
                f_10306_386104_386137(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                this_param)
                {
                    var return_v = this_param.Count;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 386104, 386137);
                    return return_v;
                }


                Microsoft.CodeAnalysis.RefKind
                f_10306_386241_386269(Microsoft.CodeAnalysis.CSharp.AnalyzedArguments
                this_param, int
                i)
                {
                    var return_v = this_param.RefKind(i);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 386241, 386269);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_386406_386435(Microsoft.CodeAnalysis.CSharp.AnalyzedArguments
                this_param, int
                i)
                {
                    var return_v = this_param.Argument(i);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 386406, 386435);
                    return return_v;
                }


                string
                f_10306_386451_386484(Microsoft.CodeAnalysis.RefKind
                kind)
                {
                    var return_v = kind.ToArgumentDisplayString();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 386451, 386484);
                    return return_v;
                }


                int
                f_10306_386357_386485(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, Microsoft.CodeAnalysis.SyntaxNode
                syntax, params object[]
                args)
                {
                    Error(diagnostics, code, (Microsoft.CodeAnalysis.SyntaxNodeOrToken)syntax, args);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 386357, 386485);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 385954, 386594);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 385954, 386594);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private BoundExpression BindIndexerAccess(ExpressionSyntax node, BoundExpression expr, AnalyzedArguments analyzedArguments, DiagnosticBag diagnostics)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10306, 386606, 388860);
                Microsoft.CodeAnalysis.CSharp.BoundIndexOrRangePatternIndexerAccess patternIndexerAccess = default(Microsoft.CodeAnalysis.CSharp.BoundIndexOrRangePatternIndexerAccess);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 386781, 386808);

                f_10306_386781_386807(node != null);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 386822, 386849);

                f_10306_386822_386848(expr != null);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 386863, 386903);

                f_10306_386863_386902((object)f_10306_386884_386893(expr) != null);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 386917, 386957);

                f_10306_386917_386956(analyzedArguments != null);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 386973, 387028);

                LookupResult
                lookupResult = f_10306_387001_387027()
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 387042, 387179);

                LookupOptions
                lookupOptions = (DynAbs.Tracing.TraceSender.Conditional_F1(10306, 387072, 387108) || ((f_10306_387072_387081(expr) == BoundKind.BaseReference && DynAbs.Tracing.TraceSender.Conditional_F2(10306, 387111, 387154)) || DynAbs.Tracing.TraceSender.Conditional_F3(10306, 387157, 387178))) ? LookupOptions.UseBaseReferenceAccessibility : LookupOptions.Default
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 387193, 387243);

                HashSet<DiagnosticInfo>
                useSiteDiagnostics = null
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 387257, 387421);

                f_10306_387257_387420(this, lookupResult, f_10306_387302_387311(expr), WellKnownMemberNames.Indexer, arity: 0, useSiteDiagnostics: ref useSiteDiagnostics, options: lookupOptions);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 387435, 387477);

                f_10306_387435_387476(diagnostics, node, useSiteDiagnostics);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 387570, 387610);

                BoundExpression
                indexerAccessExpression
                = default(BoundExpression);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 387626, 388768) || true) && (f_10306_387630_387657_M(!lookupResult.IsMultiViable))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 387626, 388768);

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 387691, 388202) || true) && (f_10306_387695_387901(this, node, expr, analyzedArguments, diagnostics, out patternIndexerAccess))
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 387691, 388202);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 387943, 387990);

                        indexerAccessExpression = patternIndexerAccess;
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 387691, 388202);
                    }

                    else

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 387691, 388202);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 388072, 388183);

                        indexerAccessExpression = f_10306_388098_388182(this, node, expr, analyzedArguments, f_10306_388150_388168(lookupResult), diagnostics);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 387691, 388202);
                    }
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 387626, 388768);
                }

                else

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 387626, 388768);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 388268, 388355);

                    ArrayBuilder<PropertySymbol>
                    indexerGroup = f_10306_388312_388354()
                    ;
                    try
                    {
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 388373, 388576);
                        foreach (Symbol symbol in f_10306_388399_388419_I(f_10306_388399_388419(lookupResult)))
                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 388373, 388576);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 388461, 388494);

                            f_10306_388461_388493(f_10306_388474_388492(symbol));
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 388516, 388557);

                            f_10306_388516_388556(indexerGroup, symbol);
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 388373, 388576);
                        }
                    }
                    catch (System.Exception)
                    {
                        DynAbs.Tracing.TraceSender.TraceExitLoopByException(10306, 1, 204);
                        throw;
                    }
                    finally
                    {
                        DynAbs.Tracing.TraceSender.TraceExitLoop(10306, 1, 204);
                    }
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 388596, 388715);

                    indexerAccessExpression = f_10306_388622_388714(this, node, expr, indexerGroup, analyzedArguments, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 388733, 388753);

                    f_10306_388733_388752(indexerGroup);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 387626, 388768);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 388784, 388804);

                f_10306_388784_388803(
                            lookupResult);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 388818, 388849);

                return indexerAccessExpression;
                DynAbs.Tracing.TraceSender.TraceExitMethod(10306, 386606, 388860);

                int
                f_10306_386781_386807(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 386781, 386807);
                    return 0;
                }


                int
                f_10306_386822_386848(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 386822, 386848);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?
                f_10306_386884_386893(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 386884, 386893);
                    return return_v;
                }


                int
                f_10306_386863_386902(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 386863, 386902);
                    return 0;
                }


                int
                f_10306_386917_386956(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 386917, 386956);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.LookupResult
                f_10306_387001_387027()
                {
                    var return_v = LookupResult.GetInstance();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 387001, 387027);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundKind
                f_10306_387072_387081(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.Kind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 387072, 387081);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                f_10306_387302_387311(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 387302, 387311);
                    return return_v;
                }


                int
                f_10306_387257_387420(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.LookupResult
                result, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                nsOrType, string
                name, int
                arity, ref System.Collections.Generic.HashSet<Microsoft.CodeAnalysis.DiagnosticInfo>?
                useSiteDiagnostics, Microsoft.CodeAnalysis.CSharp.LookupOptions
                options)
                {
                    this_param.LookupMembersWithFallback(result, (Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceOrTypeSymbol)nsOrType, name, arity: arity, useSiteDiagnostics: ref useSiteDiagnostics, options: options);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 387257, 387420);
                    return 0;
                }


                bool
                f_10306_387435_387476(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                node, System.Collections.Generic.HashSet<Microsoft.CodeAnalysis.DiagnosticInfo>
                useSiteDiagnostics)
                {
                    var return_v = diagnostics.Add((Microsoft.CodeAnalysis.SyntaxNode)node, useSiteDiagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 387435, 387476);
                    return return_v;
                }


                bool
                f_10306_387630_387657_M(bool
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 387630, 387657);
                    return return_v;
                }


                bool
                f_10306_387695_387901(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                syntax, Microsoft.CodeAnalysis.CSharp.BoundExpression
                receiverOpt, Microsoft.CodeAnalysis.CSharp.AnalyzedArguments
                arguments, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, out Microsoft.CodeAnalysis.CSharp.BoundIndexOrRangePatternIndexerAccess
                patternIndexerAccess)
                {
                    var return_v = this_param.TryBindIndexOrRangeIndexer((Microsoft.CodeAnalysis.SyntaxNode)syntax, receiverOpt, arguments, diagnostics, out patternIndexerAccess);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 387695, 387901);
                    return return_v;
                }


                Microsoft.CodeAnalysis.DiagnosticInfo
                f_10306_388150_388168(Microsoft.CodeAnalysis.CSharp.LookupResult
                this_param)
                {
                    var return_v = this_param.Error;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 388150, 388168);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_388098_388182(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                node, Microsoft.CodeAnalysis.CSharp.BoundExpression
                expr, Microsoft.CodeAnalysis.CSharp.AnalyzedArguments
                analyzedArguments, Microsoft.CodeAnalysis.DiagnosticInfo
                errorOpt, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.BadIndexerExpression(node, expr, analyzedArguments, errorOpt, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 388098, 388182);
                    return return_v;
                }


                Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol>
                f_10306_388312_388354()
                {
                    var return_v = ArrayBuilder<PropertySymbol>.GetInstance();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 388312, 388354);
                    return return_v;
                }


                Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbol>
                f_10306_388399_388419(Microsoft.CodeAnalysis.CSharp.LookupResult
                this_param)
                {
                    var return_v = this_param.Symbols;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 388399, 388419);
                    return return_v;
                }


                bool
                f_10306_388474_388492(Microsoft.CodeAnalysis.CSharp.Symbol
                symbol)
                {
                    var return_v = symbol.IsIndexer();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 388474, 388492);
                    return return_v;
                }


                int
                f_10306_388461_388493(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 388461, 388493);
                    return 0;
                }


                int
                f_10306_388516_388556(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol>
                this_param, Microsoft.CodeAnalysis.CSharp.Symbol
                item)
                {
                    this_param.Add((Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol)item);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 388516, 388556);
                    return 0;
                }


                Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbol>
                f_10306_388399_388419_I(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbol>
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 388399, 388419);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_388622_388714(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                syntax, Microsoft.CodeAnalysis.CSharp.BoundExpression
                receiverOpt, Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol>
                propertyGroup, Microsoft.CodeAnalysis.CSharp.AnalyzedArguments
                analyzedArguments, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.BindIndexerOrIndexedPropertyAccess((Microsoft.CodeAnalysis.SyntaxNode)syntax, receiverOpt, propertyGroup, analyzedArguments, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 388622, 388714);
                    return return_v;
                }


                int
                f_10306_388733_388752(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol>
                this_param)
                {
                    this_param.Free();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 388733, 388752);
                    return 0;
                }


                int
                f_10306_388784_388803(Microsoft.CodeAnalysis.CSharp.LookupResult
                this_param)
                {
                    this_param.Free();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 388784, 388803);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 386606, 388860);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 386606, 388860);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private static readonly Func<PropertySymbol, bool> s_isIndexedPropertyWithNonOptionalArguments;

        private static readonly SymbolDisplayFormat s_propertyGroupFormat;

        private BoundExpression BindIndexedPropertyAccess(BoundPropertyGroup propertyGroup, bool mustHaveAllOptionalParameters, DiagnosticBag diagnostics)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10306, 389853, 391204);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 390024, 390058);

                var
                syntax = propertyGroup.Syntax
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 390072, 390116);

                var
                receiverOpt = f_10306_390090_390115(propertyGroup)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 390130, 390172);

                var
                properties = f_10306_390147_390171(propertyGroup)
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 390188, 390960) || true) && (properties.All(s_isIndexedPropertyWithNonOptionalArguments))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 390188, 390960);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 390285, 390563);

                    f_10306_390285_390562(diagnostics, (DynAbs.Tracing.TraceSender.Conditional_F1(10306, 390325, 390354) || ((mustHaveAllOptionalParameters && DynAbs.Tracing.TraceSender.Conditional_F2(10306, 390357, 390411)) || DynAbs.Tracing.TraceSender.Conditional_F3(10306, 390414, 390457))) ? ErrorCode.ERR_IndexedPropertyMustHaveAllOptionalParams : ErrorCode.ERR_IndexedPropertyRequiresParams, syntax, f_10306_390509_390561(properties[0], s_propertyGroupFormat));
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 390581, 390945);

                    return f_10306_390588_390944(syntax, receiverOpt, f_10306_390704_390741(this, properties), ImmutableArray<BoundExpression>.Empty, default(ImmutableArray<string>), default(ImmutableArray<RefKind>), properties);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 390188, 390960);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 390976, 391024);

                var
                arguments = f_10306_390992_391023()
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 391038, 391134);

                var
                result = f_10306_391051_391133(this, syntax, receiverOpt, properties, arguments, diagnostics)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 391148, 391165);

                f_10306_391148_391164(arguments);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 391179, 391193);

                return result;
                DynAbs.Tracing.TraceSender.TraceExitMethod(10306, 389853, 391204);

                Microsoft.CodeAnalysis.CSharp.BoundExpression?
                f_10306_390090_390115(Microsoft.CodeAnalysis.CSharp.BoundPropertyGroup
                this_param)
                {
                    var return_v = this_param.ReceiverOpt;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 390090, 390115);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol>
                f_10306_390147_390171(Microsoft.CodeAnalysis.CSharp.BoundPropertyGroup
                this_param)
                {
                    var return_v = this_param.Properties;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 390147, 390171);
                    return return_v;
                }


                string
                f_10306_390509_390561(Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol
                this_param, Microsoft.CodeAnalysis.SymbolDisplayFormat
                format)
                {
                    var return_v = this_param.ToDisplayString(format);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 390509, 390561);
                    return return_v;
                }


                int
                f_10306_390285_390562(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, Microsoft.CodeAnalysis.SyntaxNode
                syntax, params object[]
                args)
                {
                    Error(diagnostics, code, (Microsoft.CodeAnalysis.SyntaxNodeOrToken)syntax, args);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 390285, 390562);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.ErrorPropertySymbol
                f_10306_390704_390741(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol>
                propertyGroup)
                {
                    var return_v = this_param.CreateErrorPropertySymbol(propertyGroup);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 390704, 390741);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundIndexerAccess
                f_10306_390588_390944(Microsoft.CodeAnalysis.SyntaxNode
                node, Microsoft.CodeAnalysis.CSharp.BoundExpression?
                receiverOpt, Microsoft.CodeAnalysis.CSharp.Symbols.ErrorPropertySymbol
                indexer, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                arguments, System.Collections.Immutable.ImmutableArray<string>
                namedArguments, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.RefKind>
                refKinds, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol>
                originalIndexers)
                {
                    var return_v = BoundIndexerAccess.ErrorAccess(node, receiverOpt, (Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol)indexer, arguments, namedArguments, refKinds, originalIndexers);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 390588, 390944);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.AnalyzedArguments
                f_10306_390992_391023()
                {
                    var return_v = AnalyzedArguments.GetInstance();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 390992, 391023);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_391051_391133(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.CSharp.BoundExpression?
                receiverOpt, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol>
                propertyGroup, Microsoft.CodeAnalysis.CSharp.AnalyzedArguments
                arguments, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.BindIndexedPropertyAccess(syntax, receiverOpt, propertyGroup, arguments, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 391051, 391133);
                    return return_v;
                }


                int
                f_10306_391148_391164(Microsoft.CodeAnalysis.CSharp.AnalyzedArguments
                this_param)
                {
                    this_param.Free();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 391148, 391164);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 389853, 391204);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 389853, 391204);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private BoundExpression BindIndexedPropertyAccess(SyntaxNode syntax, BoundExpression receiverOpt, ImmutableArray<PropertySymbol> propertyGroup, AnalyzedArguments arguments, DiagnosticBag diagnostics)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10306, 391216, 391931);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 391632, 391692);

                var
                properties = f_10306_391649_391691()
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 391706, 391741);

                f_10306_391706_391740(properties, propertyGroup);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 391755, 391860);

                var
                result = f_10306_391768_391859(this, syntax, receiverOpt, properties, arguments, diagnostics)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 391874, 391892);

                f_10306_391874_391891(properties);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 391906, 391920);

                return result;
                DynAbs.Tracing.TraceSender.TraceExitMethod(10306, 391216, 391931);

                Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol>
                f_10306_391649_391691()
                {
                    var return_v = ArrayBuilder<PropertySymbol>.GetInstance();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 391649, 391691);
                    return return_v;
                }


                int
                f_10306_391706_391740(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol>
                this_param, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol>
                items)
                {
                    this_param.AddRange(items);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 391706, 391740);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_391768_391859(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.CSharp.BoundExpression
                receiverOpt, Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol>
                propertyGroup, Microsoft.CodeAnalysis.CSharp.AnalyzedArguments
                analyzedArguments, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.BindIndexerOrIndexedPropertyAccess(syntax, receiverOpt, propertyGroup, analyzedArguments, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 391768, 391859);
                    return return_v;
                }


                int
                f_10306_391874_391891(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol>
                this_param)
                {
                    this_param.Free();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 391874, 391891);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 391216, 391931);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 391216, 391931);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private BoundExpression BindDynamicIndexer(
                     SyntaxNode syntax,
                     BoundExpression receiver,
                     AnalyzedArguments arguments,
                     ImmutableArray<PropertySymbol> applicableProperties,
                     DiagnosticBag diagnostics)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10306, 391943, 393967);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 392235, 392258);

                bool
                hasErrors = false
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 392274, 392313);

                BoundKind
                receiverKind = f_10306_392299_392312(receiver)
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 392327, 393357) || true) && (receiverKind == BoundKind.BaseReference)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 392327, 393357);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 392404, 392476);

                    f_10306_392404_392475(diagnostics, ErrorCode.ERR_NoDynamicPhantomOnBaseIndexer, syntax);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 392494, 392511);

                    hasErrors = true;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 392327, 393357);
                }

                else
                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 392327, 393357);

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 392545, 393357) || true) && (receiverKind == BoundKind.TypeOrValueExpression)
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 392545, 393357);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 392630, 392685);

                        var
                        typeOrValue = (BoundTypeOrValueExpression)receiver
                        ;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 393085, 393106);

                        bool
                        inStaticContext
                        = default(bool);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 393124, 393249);

                        bool
                        useType = f_10306_393139_393179(typeOrValue.Data.ValueSymbol) && (DynAbs.Tracing.TraceSender.Expression_True(10306, 393139, 393248) && !f_10306_393184_393248(this, isExplicit: false, inStaticContext: out inStaticContext))
                        ;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 393269, 393342);

                        receiver = f_10306_393280_393341(this, typeOrValue, useType, diagnostics);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 392545, 393357);
                    }
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 392327, 393357);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 393373, 393447);

                var
                argArray = f_10306_393388_393446(this, arguments, diagnostics)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 393461, 393520);

                var
                refKindsArray = f_10306_393481_393519(arguments.RefKinds)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 393536, 393640);

                hasErrors &= f_10306_393549_393639(syntax, argArray, refKindsArray, diagnostics, queryClause: null);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 393656, 393956);

                return f_10306_393663_393955(syntax, receiver, argArray, f_10306_393790_393810(arguments), refKindsArray, applicableProperties, f_10306_393900_393926(), hasErrors);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10306, 391943, 393967);

                Microsoft.CodeAnalysis.CSharp.BoundKind
                f_10306_392299_392312(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.Kind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 392299, 392312);
                    return return_v;
                }


                int
                f_10306_392404_392475(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, Microsoft.CodeAnalysis.SyntaxNode
                syntax)
                {
                    Error(diagnostics, code, (Microsoft.CodeAnalysis.SyntaxNodeOrToken)syntax);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 392404, 392475);
                    return 0;
                }


                bool
                f_10306_393139_393179(Microsoft.CodeAnalysis.CSharp.Symbol
                symbol)
                {
                    var return_v = IsInstance(symbol);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 393139, 393179);
                    return return_v;
                }


                bool
                f_10306_393184_393248(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, bool
                isExplicit, out bool
                inStaticContext)
                {
                    var return_v = this_param.HasThis(isExplicit: isExplicit, out inStaticContext);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 393184, 393248);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_393280_393341(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.BoundTypeOrValueExpression
                receiver, bool
                useType, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.ReplaceTypeOrValueReceiver((Microsoft.CodeAnalysis.CSharp.BoundExpression)receiver, useType, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 393280, 393341);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                f_10306_393388_393446(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.AnalyzedArguments
                arguments, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.BuildArgumentsForDynamicInvocation(arguments, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 393388, 393446);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.RefKind>
                f_10306_393481_393519(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.RefKind>
                this_param)
                {
                    var return_v = this_param.ToImmutableOrNull();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 393481, 393519);
                    return return_v;
                }


                bool
                f_10306_393549_393639(Microsoft.CodeAnalysis.SyntaxNode
                node, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                arguments, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.RefKind>
                refKinds, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode
                queryClause)
                {
                    var return_v = ReportBadDynamicArguments(node, arguments, refKinds, diagnostics, queryClause: queryClause);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 393549, 393639);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<string>
                f_10306_393790_393810(Microsoft.CodeAnalysis.CSharp.AnalyzedArguments
                this_param)
                {
                    var return_v = this_param.GetNames();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 393790, 393810);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                f_10306_393900_393926()
                {
                    var return_v = AssemblySymbol.DynamicType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 393900, 393926);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundDynamicIndexerAccess
                f_10306_393663_393955(Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.CSharp.BoundExpression
                receiver, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                arguments, System.Collections.Immutable.ImmutableArray<string>
                argumentNamesOpt, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.RefKind>
                argumentRefKindsOpt, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol>
                applicableIndexers, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                type, bool
                hasErrors)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.BoundDynamicIndexerAccess(syntax, receiver, arguments, argumentNamesOpt, argumentRefKindsOpt, applicableIndexers, type, hasErrors);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 393663, 393955);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 391943, 393967);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 391943, 393967);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private BoundExpression BindIndexerOrIndexedPropertyAccess(
                    SyntaxNode syntax,
                    BoundExpression receiverOpt,
                    ArrayBuilder<PropertySymbol> propertyGroup,
                    AnalyzedArguments analyzedArguments,
                    DiagnosticBag diagnostics)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10306, 393979, 401085);
                Microsoft.CodeAnalysis.CSharp.BoundIndexOrRangePatternIndexerAccess patternIndexerAccess = default(Microsoft.CodeAnalysis.CSharp.BoundIndexOrRangePatternIndexerAccess);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 394284, 394407);

                OverloadResolutionResult<PropertySymbol>
                overloadResolutionResult = f_10306_394352_394406()
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 394421, 394495);

                bool
                allowRefOmittedArguments = f_10306_394453_394494(receiverOpt)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 394509, 394559);

                HashSet<DiagnosticInfo>
                useSiteDiagnostics = null
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 394573, 394747);

                f_10306_394573_394746(f_10306_394573_394596(this), propertyGroup, receiverOpt, analyzedArguments, overloadResolutionResult, allowRefOmittedArguments, ref useSiteDiagnostics);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 394761, 394805);

                f_10306_394761_394804(diagnostics, syntax, useSiteDiagnostics);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 394819, 394850);

                BoundExpression
                propertyAccess
                = default(BoundExpression);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 394866, 395788) || true) && (f_10306_394870_394906(analyzedArguments) && (DynAbs.Tracing.TraceSender.Expression_True(10306, 394870, 394957) && f_10306_394910_394957(overloadResolutionResult)))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 394866, 395788);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 395425, 395599);

                    var
                    finalApplicableCandidates = f_10306_395457_395598(this, syntax, overloadResolutionResult, receiverOpt, default(ImmutableArray<TypeWithAnnotations>), diagnostics)
                    ;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 395617, 395649);

                    f_10306_395617_395648(overloadResolutionResult);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 395667, 395773);

                    return f_10306_395674_395772(this, syntax, receiverOpt, analyzedArguments, finalApplicableCandidates, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 394866, 395788);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 395804, 395872);

                ImmutableArray<string>
                argumentNames = f_10306_395843_395871(analyzedArguments)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 395886, 395976);

                ImmutableArray<RefKind>
                argumentRefKinds = f_10306_395929_395975(analyzedArguments.RefKinds)
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 395990, 400990) || true) && (f_10306_395994_396029_M(!overloadResolutionResult.Succeeded))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 395990, 400990);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 396219, 396291);

                    ImmutableArray<PropertySymbol>
                    candidates = f_10306_396263_396290(propertyGroup)
                    ;

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 396311, 397731) || true) && (f_10306_396315_396343_M(!analyzedArguments.HasErrors))
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 396311, 397731);

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 396385, 397712) || true) && (f_10306_396389_396624(this, syntax, receiverOpt, analyzedArguments, diagnostics, out patternIndexerAccess))
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 396385, 397712);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 396674, 396702);

                            return patternIndexerAccess;
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 396385, 397712);
                        }

                        else

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 396385, 397712);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 396891, 396921);

                            var
                            candidate = candidates[0]
                            ;
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 396947, 397041);

                            var
                            name = (DynAbs.Tracing.TraceSender.Conditional_F1(10306, 396958, 396977) || ((f_10306_396958_396977(candidate) && DynAbs.Tracing.TraceSender.Conditional_F2(10306, 396980, 397023)) || DynAbs.Tracing.TraceSender.Conditional_F3(10306, 397026, 397040))) ? f_10306_396980_397023(SyntaxKind.ThisKeyword) : f_10306_397026_397040(candidate)
                            ;
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 397069, 397689);

                            f_10306_397069_397688(
                                                    overloadResolutionResult, binder: this, location: f_10306_397195_397210(syntax), nodeOpt: syntax, diagnostics: diagnostics, name: name, receiver: null, invokedExpression: null, arguments: analyzedArguments, memberGroup: candidates, typeContainingConstructor: null, delegateTypeBeingInvoked: null);
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 396385, 397712);
                        }
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 396311, 397731);
                    }
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 397751, 397857);

                    ImmutableArray<BoundExpression>
                    arguments = f_10306_397795_397856(this, analyzedArguments, candidates)
                    ;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 398079, 398186);

                    PropertySymbol
                    property = (DynAbs.Tracing.TraceSender.Conditional_F1(10306, 398105, 398129) || (((candidates.Length == 1) && DynAbs.Tracing.TraceSender.Conditional_F2(10306, 398132, 398145)) || DynAbs.Tracing.TraceSender.Conditional_F3(10306, 398148, 398185))) ? candidates[0] : f_10306_398148_398185(this, candidates)
                    ;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 398206, 398489);

                    propertyAccess = f_10306_398223_398488(syntax, receiverOpt, property, arguments, argumentNames, argumentRefKinds, candidates);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 395990, 400990);
                }

                else

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 395990, 400990);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 398555, 398650);

                    MemberResolutionResult<PropertySymbol>
                    resolutionResult = f_10306_398613_398649(overloadResolutionResult)
                    ;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 398668, 398718);

                    PropertySymbol
                    property = resolutionResult.Member
                    ;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 398736, 398833);

                    f_10306_398736_398832(this, resolutionResult, analyzedArguments.Arguments, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 398853, 398948);

                    var
                    isExpanded = resolutionResult.Result.Kind == MemberResolutionKind.ApplicableInExpandedForm
                    ;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 398966, 399025);

                    var
                    argsToParams = resolutionResult.Result.ArgsToParamsOpt
                    ;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 399045, 399189);

                    f_10306_399045_399188(this, diagnostics, property, syntax, hasBaseReceiver: receiverOpt != null && (DynAbs.Tracing.TraceSender.Expression_True(10306, 399121, 399187) && f_10306_399144_399160(receiverOpt) == BoundKind.BaseReference));
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 399288, 399426);

                    var
                    gotError = f_10306_399303_399425(this, receiverOpt, property, syntax, diagnostics, invokedAsExtensionMethod: false)
                    ;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 399446, 399533);

                    var
                    receiver = f_10306_399461_399532(this, receiverOpt, f_10306_399501_399518(property), diagnostics)
                    ;

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 399553, 399788) || true) && (!gotError && (DynAbs.Tracing.TraceSender.Expression_True(10306, 399557, 399586) && receiver != null) && (DynAbs.Tracing.TraceSender.Expression_True(10306, 399557, 399630) && f_10306_399590_399603(receiver) == BoundKind.ThisReference) && (DynAbs.Tracing.TraceSender.Expression_True(10306, 399557, 399663) && f_10306_399634_399663(receiver)))
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 399553, 399788);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 399705, 399769);

                        gotError = f_10306_399716_399768(this, syntax, diagnostics);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 399553, 399788);
                    }
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 399808, 399866);

                    var
                    arguments = f_10306_399824_399865(analyzedArguments.Arguments)
                    ;

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 399886, 400307) || true) && (!gotError)
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 399886, 400307);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 399941, 400288);

                        gotError = !f_10306_399953_400287(syntax, property, receiver, f_10306_400107_400126(property), arguments, argsToParams, f_10306_400228_400248(this), diagnostics);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 399886, 400307);
                    }
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 400553, 400975);

                    propertyAccess = f_10306_400570_400974(syntax, receiver, property, arguments, argumentNames, argumentRefKinds, isExpanded, argsToParams, defaultArguments: default, f_10306_400929_400942(property), gotError);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 395990, 400990);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 401006, 401038);

                f_10306_401006_401037(
                            overloadResolutionResult);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 401052, 401074);

                return propertyAccess;
                DynAbs.Tracing.TraceSender.TraceExitMethod(10306, 393979, 401085);

                Microsoft.CodeAnalysis.CSharp.OverloadResolutionResult<Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol>
                f_10306_394352_394406()
                {
                    var return_v = OverloadResolutionResult<PropertySymbol>.GetInstance();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 394352, 394406);
                    return return_v;
                }


                bool
                f_10306_394453_394494(Microsoft.CodeAnalysis.CSharp.BoundExpression
                expressionOpt)
                {
                    var return_v = expressionOpt.IsExpressionOfComImportType();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 394453, 394494);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.OverloadResolution
                f_10306_394573_394596(Microsoft.CodeAnalysis.CSharp.Binder
                this_param)
                {
                    var return_v = this_param.OverloadResolution;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 394573, 394596);
                    return return_v;
                }


                int
                f_10306_394573_394746(Microsoft.CodeAnalysis.CSharp.OverloadResolution
                this_param, Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol>
                indexers, Microsoft.CodeAnalysis.CSharp.BoundExpression
                receiverOpt, Microsoft.CodeAnalysis.CSharp.AnalyzedArguments
                arguments, Microsoft.CodeAnalysis.CSharp.OverloadResolutionResult<Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol>
                result, bool
                allowRefOmittedArguments, ref System.Collections.Generic.HashSet<Microsoft.CodeAnalysis.DiagnosticInfo>?
                useSiteDiagnostics)
                {
                    this_param.PropertyOverloadResolution(indexers, receiverOpt, arguments, result, allowRefOmittedArguments, ref useSiteDiagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 394573, 394746);
                    return 0;
                }


                bool
                f_10306_394761_394804(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.SyntaxNode
                node, System.Collections.Generic.HashSet<Microsoft.CodeAnalysis.DiagnosticInfo>
                useSiteDiagnostics)
                {
                    var return_v = diagnostics.Add(node, useSiteDiagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 394761, 394804);
                    return return_v;
                }


                bool
                f_10306_394870_394906(Microsoft.CodeAnalysis.CSharp.AnalyzedArguments
                this_param)
                {
                    var return_v = this_param.HasDynamicArgument;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 394870, 394906);
                    return return_v;
                }


                bool
                f_10306_394910_394957(Microsoft.CodeAnalysis.CSharp.OverloadResolutionResult<Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol>
                this_param)
                {
                    var return_v = this_param.HasAnyApplicableMember;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 394910, 394957);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol>
                f_10306_395457_395598(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.CSharp.OverloadResolutionResult<Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol>
                overloadResolutionResult, Microsoft.CodeAnalysis.CSharp.BoundExpression
                receiverOpt, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations>
                typeArgumentsOpt, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.GetCandidatesPassingFinalValidation<Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol>(syntax, overloadResolutionResult, receiverOpt, typeArgumentsOpt, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 395457, 395598);
                    return return_v;
                }


                int
                f_10306_395617_395648(Microsoft.CodeAnalysis.CSharp.OverloadResolutionResult<Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol>
                this_param)
                {
                    this_param.Free();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 395617, 395648);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_395674_395772(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.CSharp.BoundExpression
                receiver, Microsoft.CodeAnalysis.CSharp.AnalyzedArguments
                arguments, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol>
                applicableProperties, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.BindDynamicIndexer(syntax, receiver, arguments, applicableProperties, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 395674, 395772);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<string>
                f_10306_395843_395871(Microsoft.CodeAnalysis.CSharp.AnalyzedArguments
                this_param)
                {
                    var return_v = this_param.GetNames();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 395843, 395871);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.RefKind>
                f_10306_395929_395975(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.RefKind>
                this_param)
                {
                    var return_v = this_param.ToImmutableOrNull();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 395929, 395975);
                    return return_v;
                }


                bool
                f_10306_395994_396029_M(bool
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 395994, 396029);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol>
                f_10306_396263_396290(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol>
                this_param)
                {
                    var return_v = this_param.ToImmutable();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 396263, 396290);
                    return return_v;
                }


                bool
                f_10306_396315_396343_M(bool
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 396315, 396343);
                    return return_v;
                }


                bool
                f_10306_396389_396624(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.CSharp.BoundExpression
                receiverOpt, Microsoft.CodeAnalysis.CSharp.AnalyzedArguments
                arguments, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, out Microsoft.CodeAnalysis.CSharp.BoundIndexOrRangePatternIndexerAccess
                patternIndexerAccess)
                {
                    var return_v = this_param.TryBindIndexOrRangeIndexer(syntax, receiverOpt, arguments, diagnostics, out patternIndexerAccess);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 396389, 396624);
                    return return_v;
                }


                bool
                f_10306_396958_396977(Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol
                this_param)
                {
                    var return_v = this_param.IsIndexer;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 396958, 396977);
                    return return_v;
                }


                string
                f_10306_396980_397023(Microsoft.CodeAnalysis.CSharp.SyntaxKind
                kind)
                {
                    var return_v = SyntaxFacts.GetText(kind);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 396980, 397023);
                    return return_v;
                }


                string
                f_10306_397026_397040(Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol
                this_param)
                {
                    var return_v = this_param.Name;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 397026, 397040);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Location
                f_10306_397195_397210(Microsoft.CodeAnalysis.SyntaxNode
                this_param)
                {
                    var return_v = this_param.Location;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 397195, 397210);
                    return return_v;
                }


                int
                f_10306_397069_397688(Microsoft.CodeAnalysis.CSharp.OverloadResolutionResult<Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol>
                this_param, Microsoft.CodeAnalysis.CSharp.Binder
                binder, Microsoft.CodeAnalysis.Location
                location, Microsoft.CodeAnalysis.SyntaxNode
                nodeOpt, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, string
                name, Microsoft.CodeAnalysis.CSharp.BoundExpression
                receiver, Microsoft.CodeAnalysis.SyntaxNode
                invokedExpression, Microsoft.CodeAnalysis.CSharp.AnalyzedArguments
                arguments, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol>
                memberGroup, Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                typeContainingConstructor, Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                delegateTypeBeingInvoked)
                {
                    this_param.ReportDiagnostics<Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol>(binder: binder, location: location, nodeOpt: nodeOpt, diagnostics: diagnostics, name: name, receiver: receiver, invokedExpression: invokedExpression, arguments: arguments, memberGroup: memberGroup, typeContainingConstructor: typeContainingConstructor, delegateTypeBeingInvoked: delegateTypeBeingInvoked);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 397069, 397688);
                    return 0;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                f_10306_397795_397856(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.AnalyzedArguments
                analyzedArguments, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol>
                properties)
                {
                    var return_v = this_param.BuildArgumentsForErrorRecovery(analyzedArguments, properties);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 397795, 397856);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.ErrorPropertySymbol
                f_10306_398148_398185(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol>
                propertyGroup)
                {
                    var return_v = this_param.CreateErrorPropertySymbol(propertyGroup);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 398148, 398185);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundIndexerAccess
                f_10306_398223_398488(Microsoft.CodeAnalysis.SyntaxNode
                node, Microsoft.CodeAnalysis.CSharp.BoundExpression
                receiverOpt, Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol
                indexer, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                arguments, System.Collections.Immutable.ImmutableArray<string>
                namedArguments, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.RefKind>
                refKinds, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol>
                originalIndexers)
                {
                    var return_v = BoundIndexerAccess.ErrorAccess(node, receiverOpt, indexer, arguments, namedArguments, refKinds, originalIndexers);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 398223, 398488);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.MemberResolutionResult<Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol>
                f_10306_398613_398649(Microsoft.CodeAnalysis.CSharp.OverloadResolutionResult<Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol>
                this_param)
                {
                    var return_v = this_param.ValidResult;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 398613, 398649);
                    return return_v;
                }


                int
                f_10306_398736_398832(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.MemberResolutionResult<Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol>
                methodResult, Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                arguments, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    this_param.CoerceArguments<Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol>(methodResult, arguments, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 398736, 398832);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.BoundKind
                f_10306_399144_399160(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.Kind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 399144, 399160);
                    return return_v;
                }


                int
                f_10306_399045_399188(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol
                symbol, Microsoft.CodeAnalysis.SyntaxNode
                node, bool
                hasBaseReceiver)
                {
                    this_param.ReportDiagnosticsIfObsolete(diagnostics, (Microsoft.CodeAnalysis.CSharp.Symbol)symbol, node, hasBaseReceiver: hasBaseReceiver);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 399045, 399188);
                    return 0;
                }


                bool
                f_10306_399303_399425(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression?
                receiverOpt, Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol
                memberSymbol, Microsoft.CodeAnalysis.SyntaxNode
                node, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, bool
                invokedAsExtensionMethod)
                {
                    var return_v = this_param.MemberGroupFinalValidationAccessibilityChecks(receiverOpt, (Microsoft.CodeAnalysis.CSharp.Symbol)memberSymbol, node, diagnostics, invokedAsExtensionMethod: invokedAsExtensionMethod);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 399303, 399425);
                    return return_v;
                }


                bool
                f_10306_399501_399518(Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol
                this_param)
                {
                    var return_v = this_param.IsStatic;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 399501, 399518);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_399461_399532(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression?
                receiver, bool
                useType, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.ReplaceTypeOrValueReceiver(receiver, useType, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 399461, 399532);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundKind
                f_10306_399590_399603(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.Kind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 399590, 399603);
                    return return_v;
                }


                bool
                f_10306_399634_399663(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.WasCompilerGenerated;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 399634, 399663);
                    return return_v;
                }


                bool
                f_10306_399716_399768(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.SyntaxNode
                thisOrBaseToken, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.IsRefOrOutThisParameterCaptured((Microsoft.CodeAnalysis.SyntaxNodeOrToken)thisOrBaseToken, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 399716, 399768);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                f_10306_399824_399865(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                this_param)
                {
                    var return_v = this_param.ToImmutable();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 399824, 399865);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol>
                f_10306_400107_400126(Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol
                this_param)
                {
                    var return_v = this_param.Parameters;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 400107, 400126);
                    return return_v;
                }


                uint
                f_10306_400228_400248(Microsoft.CodeAnalysis.CSharp.Binder
                this_param)
                {
                    var return_v = this_param.LocalScopeDepth;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 400228, 400248);
                    return return_v;
                }


                bool
                f_10306_399953_400287(Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol
                symbol, Microsoft.CodeAnalysis.CSharp.BoundExpression?
                receiverOpt, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol>
                parameters, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                argsOpt, System.Collections.Immutable.ImmutableArray<int>
                argsToParamsOpt, uint
                scopeOfTheContainingExpression, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = CheckInvocationArgMixing(syntax, (Microsoft.CodeAnalysis.CSharp.Symbol)symbol, receiverOpt, parameters, argsOpt, argsToParamsOpt, scopeOfTheContainingExpression, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 399953, 400287);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                f_10306_400929_400942(Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 400929, 400942);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundIndexerAccess
                f_10306_400570_400974(Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.CSharp.BoundExpression?
                receiverOpt, Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol
                indexer, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                arguments, System.Collections.Immutable.ImmutableArray<string>
                argumentNamesOpt, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.RefKind>
                argumentRefKindsOpt, bool
                expanded, System.Collections.Immutable.ImmutableArray<int>
                argsToParamsOpt, Microsoft.CodeAnalysis.BitVector
                defaultArguments, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                type, bool
                hasErrors)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.BoundIndexerAccess(syntax, receiverOpt, indexer, arguments, argumentNamesOpt, argumentRefKindsOpt, expanded, argsToParamsOpt, defaultArguments: defaultArguments, type, hasErrors);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 400570, 400974);
                    return return_v;
                }


                int
                f_10306_401006_401037(Microsoft.CodeAnalysis.CSharp.OverloadResolutionResult<Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol>
                this_param)
                {
                    this_param.Free();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 401006, 401037);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 393979, 401085);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 393979, 401085);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private bool TryBindIndexOrRangeIndexer(
                    SyntaxNode syntax,
                    BoundExpression receiverOpt,
                    AnalyzedArguments arguments,
                    DiagnosticBag diagnostics,
                    out BoundIndexOrRangePatternIndexerAccess patternIndexerAccess)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10306, 401097, 411331);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 401395, 401423);

                patternIndexerAccess = null;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 401657, 401753) || true) && (f_10306_401661_401686(arguments.Arguments) != 1)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 401657, 401753);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 401725, 401738);

                    return false;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 401657, 401753);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 401769, 401807);

                var
                argument = f_10306_401784_401806(arguments.Arguments, 0)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 401823, 401851);

                var
                argType = f_10306_401837_401850(argument)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 401865, 402038);

                bool
                argIsIndex = f_10306_401883_402037(argType, f_10306_401927_401983(f_10306_401927_401938(), WellKnownType.System_Index), TypeCompareKind.ConsiderEverything)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 402052, 402240);

                bool
                argIsRange = !argIsIndex && (DynAbs.Tracing.TraceSender.Expression_True(10306, 402070, 402239) && f_10306_402085_402239(argType, f_10306_402129_402185(f_10306_402129_402140(), WellKnownType.System_Range), TypeCompareKind.ConsiderEverything))
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 402256, 402418) || true) && ((!argIsIndex && (DynAbs.Tracing.TraceSender.Expression_True(10306, 402261, 402287) && !argIsRange)) || (DynAbs.Tracing.TraceSender.Expression_False(10306, 402260, 402356) || !(f_10306_402311_402328_M(DynAbs.Tracing.TraceSender.TraceConditionalAccessExpression(receiverOpt, 10306, 402311, 402328)?.Type) is TypeSymbol receiverType)))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 402256, 402418);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 402390, 402403);

                    return false;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 402256, 402418);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 402988, 403025);

                PropertySymbol
                lengthOrCountProperty
                = default(PropertySymbol);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 403041, 403087);

                var
                lookupResult = f_10306_403060_403086()
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 403101, 403151);

                HashSet<DiagnosticInfo>
                useSiteDiagnostics = null
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 403207, 403475) || true) && (!f_10306_403212_403302(WellKnownMemberNames.LengthPropertyName, out lengthOrCountProperty) && (DynAbs.Tracing.TraceSender.Expression_True(10306, 403211, 403413) && !f_10306_403324_403413(WellKnownMemberNames.CountPropertyName, out lengthOrCountProperty)))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 403207, 403475);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 403447, 403460);

                    return false;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 403207, 403475);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 403491, 403534);

                f_10306_403491_403533(lengthOrCountProperty is { });

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 403550, 408399) || true) && (argIsIndex)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 403550, 408399);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 403653, 404043);

                    f_10306_403653_404042(this, lookupResult, receiverType, WellKnownMemberNames.Indexer, arity: 0, basesBeingResolved: null, LookupOptions.Default, originalBinder: this, diagnose: false, ref useSiteDiagnostics);

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 404063, 405347) || true) && (f_10306_404067_404093(lookupResult))
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 404063, 405347);
                        try
                        {
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 404135, 405328);
                            foreach (var candidate in f_10306_404161_404181_I(f_10306_404161_404181(lookupResult)))
                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 404135, 405328);

                                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 404231, 405305) || true) && (f_10306_404235_404254_M(!candidate.IsStatic) && (DynAbs.Tracing.TraceSender.Expression_True(10306, 404235, 404323) && candidate is PropertySymbol property) && (DynAbs.Tracing.TraceSender.Expression_True(10306, 404235, 404402) && f_10306_404356_404402(this, property, ref useSiteDiagnostics)) && (DynAbs.Tracing.TraceSender.Expression_True(10306, 404235, 404496) && f_10306_404435_404462(property) is { ParameterCount: 1 } original) && (DynAbs.Tracing.TraceSender.Expression_True(10306, 404235, 404566) && f_10306_404529_404566(f_10306_404543_404562(original)[0])))
                                )

                                {
                                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 404231, 405305);
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 404624, 404721);

                                    f_10306_404624_404720(this, receiverOpt, f_10306_404675_404706(lengthOrCountProperty), diagnostics);
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 404867, 405242);

                                    patternIndexerAccess = f_10306_404890_405241(syntax, receiverOpt, lengthOrCountProperty, property, f_10306_405152_405192(this, argument, diagnostics), f_10306_405227_405240(property));
                                    DynAbs.Tracing.TraceSender.TraceBreak(10306, 405272, 405278);

                                    break;
                                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 404231, 405305);
                                }
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 404135, 405328);
                            }
                        }
                        catch (System.Exception)
                        {
                            DynAbs.Tracing.TraceSender.TraceExitLoopByException(10306, 1, 1194);
                            throw;
                        }
                        finally
                        {
                            DynAbs.Tracing.TraceSender.TraceExitLoop(10306, 1, 1194);
                        }
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 404063, 405347);
                    }
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 403550, 408399);
                }

                else
                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 403550, 408399);

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 405381, 408399) || true) && (f_10306_405385_405409(receiverType) == SpecialType.System_String)
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 405381, 408399);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 405472, 405497);

                        f_10306_405472_405496(argIsRange);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 405554, 405657);

                        var
                        substring = (MethodSymbol)f_10306_405584_405656(f_10306_405584_405595(), SpecialMember.System_String__Substring)
                        ;

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 405675, 406248) || true) && (substring is object)
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 405675, 406248);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 405740, 406075);

                            patternIndexerAccess = f_10306_405763_406074(syntax, receiverOpt, lengthOrCountProperty, substring, f_10306_405986_406026(this, argument, diagnostics), f_10306_406053_406073(substring));
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 406097, 406153);

                            f_10306_406097_406152(WellKnownMember.System_Range__get_Start);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 406175, 406229);

                            f_10306_406175_406228(WellKnownMember.System_Range__get_End);
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 405675, 406248);
                        }
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 405381, 408399);
                    }

                    else

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 405381, 408399);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 406314, 406339);

                        f_10306_406314_406338(argIsRange);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 406416, 406814);

                        f_10306_406416_406813(this, lookupResult, receiverType, WellKnownMemberNames.SliceMethodName, arity: 0, basesBeingResolved: null, LookupOptions.Default, originalBinder: this, diagnose: false, ref useSiteDiagnostics);

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 406834, 408384) || true) && (f_10306_406838_406864(lookupResult))
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 406834, 408384);
                            try
                            {
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 406906, 408365);
                                foreach (var candidate in f_10306_406932_406952_I(f_10306_406932_406952(lookupResult)))
                                {
                                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 406906, 408365);

                                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 407002, 408342) || true) && (f_10306_407006_407025_M(!candidate.IsStatic) && (DynAbs.Tracing.TraceSender.Expression_True(10306, 407006, 407105) && f_10306_407058_407105(this, candidate, ref useSiteDiagnostics)) && (DynAbs.Tracing.TraceSender.Expression_True(10306, 407006, 407170) && candidate is MethodSymbol method) && (DynAbs.Tracing.TraceSender.Expression_True(10306, 407006, 407244) && f_10306_407203_407228(method) is var original) && (DynAbs.Tracing.TraceSender.Expression_True(10306, 407006, 407305) && f_10306_407277_407300(original) == 2) && (DynAbs.Tracing.TraceSender.Expression_True(10306, 407006, 407375) && f_10306_407338_407375(f_10306_407352_407371(original)[0])) && (DynAbs.Tracing.TraceSender.Expression_True(10306, 407006, 407445) && f_10306_407408_407445(f_10306_407422_407441(original)[1])))
                                    )

                                    {
                                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 407002, 408342);
                                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 407503, 407600);

                                        f_10306_407503_407599(this, receiverOpt, f_10306_407554_407585(lengthOrCountProperty), diagnostics);
                                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 407630, 407702);

                                        f_10306_407630_407701(this, receiverOpt, method, diagnostics);
                                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 407732, 408109);

                                        patternIndexerAccess = f_10306_407755_408108(syntax, receiverOpt, lengthOrCountProperty, method, f_10306_408015_408055(this, argument, diagnostics), f_10306_408090_408107(method));
                                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 408139, 408195);

                                        f_10306_408139_408194(WellKnownMember.System_Range__get_Start);
                                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 408225, 408279);

                                        f_10306_408225_408278(WellKnownMember.System_Range__get_End);
                                        DynAbs.Tracing.TraceSender.TraceBreak(10306, 408309, 408315);

                                        break;
                                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 407002, 408342);
                                    }
                                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 406906, 408365);
                                }
                            }
                            catch (System.Exception)
                            {
                                DynAbs.Tracing.TraceSender.TraceExitLoopByException(10306, 1, 1460);
                                throw;
                            }
                            finally
                            {
                                DynAbs.Tracing.TraceSender.TraceExitLoop(10306, 1, 1460);
                            }
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 406834, 408384);
                        }
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 405381, 408399);
                    }
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 403550, 408399);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 408415, 408461);

                f_10306_408415_408460(lookupResult, ref useSiteDiagnostics);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 408475, 408569) || true) && (patternIndexerAccess is null)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 408475, 408569);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 408541, 408554);

                    return false;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 408475, 408569);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 408585, 408670);

                _ = f_10306_408589_408669(MessageID.IDS_FeatureIndexOperator, diagnostics, syntax);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 408684, 408740);

                f_10306_408684_408739(WellKnownMember.System_Index__GetOffset);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 408754, 409077) || true) && (f_10306_408758_408779(arguments.Names) > 0)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 408754, 409077);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 408817, 409062);

                    f_10306_408817_409061(diagnostics, (DynAbs.Tracing.TraceSender.Conditional_F1(10306, 408855, 408865) || ((argIsRange
                    && DynAbs.Tracing.TraceSender.Conditional_F2(10306, 408893, 408935)) || DynAbs.Tracing.TraceSender.Conditional_F3(10306, 408963, 409005))) ? ErrorCode.ERR_ImplicitRangeIndexerWithName
                    : ErrorCode.ERR_ImplicitIndexIndexerWithName, f_10306_409028_409060(f_10306_409028_409046(arguments.Names, 0)));
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 408754, 409077);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 409091, 409103);

                return true;

                static void cleanup(LookupResult lookupResult, ref HashSet<DiagnosticInfo> useSiteDiagnostics)
                {
                    try
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterStaticMethod(10306, 409119, 409325);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 409246, 409266);

                        f_10306_409246_409265(lookupResult);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 409284, 409310);

                        useSiteDiagnostics = null;
                        DynAbs.Tracing.TraceSender.TraceExitStaticMethod(10306, 409119, 409325);

                        int
                        f_10306_409246_409265(Microsoft.CodeAnalysis.CSharp.LookupResult
                        this_param)
                        {
                            this_param.Free();
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 409246, 409265);
                            return 0;
                        }

                    }
                    catch
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 409119, 409325);
                        throw;
                    }
                    finally
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 409119, 409325);
                    }
                }

                static bool isIntNotByRef(ParameterSymbol param)
                {
                    try
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterMethod(10306, 409407, 409513);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 409410, 409513);
                        return f_10306_409410_409432(f_10306_409410_409420(param)) == SpecialType.System_Int32 && (DynAbs.Tracing.TraceSender.Expression_True(10306, 409410, 409513) && f_10306_409484_409497(param) == RefKind.None); DynAbs.Tracing.TraceSender.TraceExitMethod(10306, 409407, 409513);
                    }
                    catch
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 409407, 409513);
                        throw;
                    }
                    finally
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 409407, 409513);
                    }
                    throw new System.Exception("Slicer error: unreachable code");
                }

                void checkWellKnown(WellKnownMember member)
                {
                    try
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterMethod(10306, 409530, 409947);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 409855, 409932);

                        _ = f_10306_409859_409931(f_10306_409882_409893(), member, diagnostics, syntax: syntax);
                        DynAbs.Tracing.TraceSender.TraceExitMethod(10306, 409530, 409947);

                        Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                        f_10306_409882_409893()
                        {
                            var return_v = Compilation;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 409882, 409893);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.CSharp.Symbol
                        f_10306_409859_409931(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                        compilation, Microsoft.CodeAnalysis.WellKnownMember
                        member, Microsoft.CodeAnalysis.DiagnosticBag
                        diagnostics, Microsoft.CodeAnalysis.SyntaxNode
                        syntax)
                        {
                            var return_v = GetWellKnownTypeMember(compilation, member, diagnostics, syntax: syntax);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 409859, 409931);
                            return return_v;
                        }

                    }
                    catch
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 409530, 409947);
                        throw;
                    }
                    finally
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 409530, 409947);
                    }
                }

                bool tryLookupLengthOrCount(string propertyName, out PropertySymbol valid)
                {
                    try
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterMethod(10306, 409963, 411320);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 410070, 410464);

                        f_10306_410070_410463(this, lookupResult, receiverType, propertyName, arity: 0, basesBeingResolved: null, LookupOptions.Default, originalBinder: this, diagnose: false, useSiteDiagnostics: ref useSiteDiagnostics);

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 410484, 411160) || true) && (f_10306_410488_410515(lookupResult) && (DynAbs.Tracing.TraceSender.Expression_True(10306, 410488, 410590) && f_10306_410540_410563(f_10306_410540_410560(lookupResult), 0) is PropertySymbol property) && (DynAbs.Tracing.TraceSender.Expression_True(10306, 410488, 410698) && f_10306_410615_410672_M(DynAbs.Tracing.TraceSender.TraceConditionalAccessExpression(f_10306_410615_410652(property), 10306, 410615, 410672)?.OriginalDefinition) is MethodSymbol getMethod) && (DynAbs.Tracing.TraceSender.Expression_True(10306, 410488, 410783) && f_10306_410723_410755(f_10306_410723_410743(getMethod)) == SpecialType.System_Int32) && (DynAbs.Tracing.TraceSender.Expression_True(10306, 410488, 410841) && f_10306_410808_410825(getMethod) == RefKind.None) && (DynAbs.Tracing.TraceSender.Expression_True(10306, 410488, 410885) && f_10306_410866_410885_M(!getMethod.IsStatic)) && (DynAbs.Tracing.TraceSender.Expression_True(10306, 410488, 410957) && f_10306_410910_410957(this, getMethod, ref useSiteDiagnostics)))
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 410484, 411160);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 410999, 411020);

                            f_10306_410999_411019(lookupResult);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 411042, 411068);

                            useSiteDiagnostics = null;
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 411090, 411107);

                            valid = property;
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 411129, 411141);

                            return true;
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 410484, 411160);
                        }
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 411178, 411199);

                        f_10306_411178_411198(lookupResult);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 411217, 411243);

                        useSiteDiagnostics = null;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 411261, 411274);

                        valid = null;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 411292, 411305);

                        return false;
                        DynAbs.Tracing.TraceSender.TraceExitMethod(10306, 409963, 411320);

                        int
                        f_10306_410070_410463(Microsoft.CodeAnalysis.CSharp.Binder
                        this_param, Microsoft.CodeAnalysis.CSharp.LookupResult
                        result, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                        type, string
                        name, int
                        arity, Roslyn.Utilities.ConsList<Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol>
                        basesBeingResolved, Microsoft.CodeAnalysis.CSharp.LookupOptions
                        options, Microsoft.CodeAnalysis.CSharp.Binder
                        originalBinder, bool
                        diagnose, ref System.Collections.Generic.HashSet<Microsoft.CodeAnalysis.DiagnosticInfo>?
                        useSiteDiagnostics)
                        {
                            this_param.LookupMembersInType(result, type, name, arity: arity, basesBeingResolved: basesBeingResolved, options, originalBinder: originalBinder, diagnose: diagnose, useSiteDiagnostics: ref useSiteDiagnostics);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 410070, 410463);
                            return 0;
                        }


                        bool
                        f_10306_410488_410515(Microsoft.CodeAnalysis.CSharp.LookupResult
                        this_param)
                        {
                            var return_v = this_param.IsSingleViable;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 410488, 410515);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbol>
                        f_10306_410540_410560(Microsoft.CodeAnalysis.CSharp.LookupResult
                        this_param)
                        {
                            var return_v = this_param.Symbols;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 410540, 410560);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.CSharp.Symbol
                        f_10306_410540_410563(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbol>
                        this_param, int
                        i0)
                        {
                            var return_v = this_param[i0];
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 410540, 410563);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol?
                        f_10306_410615_410652(Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol
                        property)
                        {
                            var return_v = property.GetOwnOrInheritedGetMethod();
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 410615, 410652);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol?
                        f_10306_410615_410672_M(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol?
                        i)
                        {
                            var return_v = i;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 410615, 410672);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                        f_10306_410723_410743(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                        this_param)
                        {
                            var return_v = this_param.ReturnType;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 410723, 410743);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.SpecialType
                        f_10306_410723_410755(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                        this_param)
                        {
                            var return_v = this_param.SpecialType;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 410723, 410755);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.RefKind
                        f_10306_410808_410825(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                        this_param)
                        {
                            var return_v = this_param.RefKind;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 410808, 410825);
                            return return_v;
                        }


                        bool
                        f_10306_410866_410885_M(bool
                        i)
                        {
                            var return_v = i;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 410866, 410885);
                            return return_v;
                        }


                        bool
                        f_10306_410910_410957(Microsoft.CodeAnalysis.CSharp.Binder
                        this_param, Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                        symbol, ref System.Collections.Generic.HashSet<Microsoft.CodeAnalysis.DiagnosticInfo>
                        useSiteDiagnostics)
                        {
                            var return_v = this_param.IsAccessible((Microsoft.CodeAnalysis.CSharp.Symbol)symbol, ref useSiteDiagnostics);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 410910, 410957);
                            return return_v;
                        }


                        int
                        f_10306_410999_411019(Microsoft.CodeAnalysis.CSharp.LookupResult
                        this_param)
                        {
                            this_param.Clear();
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 410999, 411019);
                            return 0;
                        }


                        int
                        f_10306_411178_411198(Microsoft.CodeAnalysis.CSharp.LookupResult
                        this_param)
                        {
                            this_param.Clear();
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 411178, 411198);
                            return 0;
                        }

                    }
                    catch
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 409963, 411320);
                        throw;
                    }
                    finally
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 409963, 411320);
                    }
                    throw new System.Exception("Slicer error: unreachable code");
                }
                DynAbs.Tracing.TraceSender.TraceExitMethod(10306, 401097, 411331);

                int
                f_10306_401661_401686(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                this_param)
                {
                    var return_v = this_param.Count;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 401661, 401686);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_401784_401806(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                this_param, int
                i0)
                {
                    var return_v = this_param[i0];
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 401784, 401806);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?
                f_10306_401837_401850(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 401837, 401850);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                f_10306_401927_401938()
                {
                    var return_v = Compilation;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 401927, 401938);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                f_10306_401927_401983(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param, Microsoft.CodeAnalysis.WellKnownType
                type)
                {
                    var return_v = this_param.GetWellKnownType(type);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 401927, 401983);
                    return return_v;
                }


                bool
                f_10306_401883_402037(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?
                left, Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                right, Microsoft.CodeAnalysis.TypeCompareKind
                comparison)
                {
                    var return_v = TypeSymbol.Equals(left, (Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol)right, comparison);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 401883, 402037);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                f_10306_402129_402140()
                {
                    var return_v = Compilation;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 402129, 402140);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                f_10306_402129_402185(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param, Microsoft.CodeAnalysis.WellKnownType
                type)
                {
                    var return_v = this_param.GetWellKnownType(type);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 402129, 402185);
                    return return_v;
                }


                bool
                f_10306_402085_402239(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?
                left, Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                right, Microsoft.CodeAnalysis.TypeCompareKind
                comparison)
                {
                    var return_v = TypeSymbol.Equals(left, (Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol)right, comparison);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 402085, 402239);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?
                f_10306_402311_402328_M(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 402311, 402328);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.LookupResult
                f_10306_403060_403086()
                {
                    var return_v = LookupResult.GetInstance();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 403060, 403086);
                    return return_v;
                }


                bool
                f_10306_403212_403302(string
                propertyName, out Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol
                valid)
                {
                    var return_v = tryLookupLengthOrCount(propertyName, out valid);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 403212, 403302);
                    return return_v;
                }


                bool
                f_10306_403324_403413(string
                propertyName, out Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol
                valid)
                {
                    var return_v = tryLookupLengthOrCount(propertyName, out valid);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 403324, 403413);
                    return return_v;
                }


                int
                f_10306_403491_403533(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 403491, 403533);
                    return 0;
                }


                int
                f_10306_403653_404042(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.LookupResult
                result, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                type, string
                name, int
                arity, Roslyn.Utilities.ConsList<Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol>
                basesBeingResolved, Microsoft.CodeAnalysis.CSharp.LookupOptions
                options, Microsoft.CodeAnalysis.CSharp.Binder
                originalBinder, bool
                diagnose, ref System.Collections.Generic.HashSet<Microsoft.CodeAnalysis.DiagnosticInfo>?
                useSiteDiagnostics)
                {
                    this_param.LookupMembersInType(result, type, name, arity: arity, basesBeingResolved: basesBeingResolved, options, originalBinder: originalBinder, diagnose: diagnose, ref useSiteDiagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 403653, 404042);
                    return 0;
                }


                bool
                f_10306_404067_404093(Microsoft.CodeAnalysis.CSharp.LookupResult
                this_param)
                {
                    var return_v = this_param.IsMultiViable;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 404067, 404093);
                    return return_v;
                }


                Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbol>
                f_10306_404161_404181(Microsoft.CodeAnalysis.CSharp.LookupResult
                this_param)
                {
                    var return_v = this_param.Symbols;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 404161, 404181);
                    return return_v;
                }


                bool
                f_10306_404235_404254_M(bool
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 404235, 404254);
                    return return_v;
                }


                bool
                f_10306_404356_404402(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol
                symbol, ref System.Collections.Generic.HashSet<Microsoft.CodeAnalysis.DiagnosticInfo>
                useSiteDiagnostics)
                {
                    var return_v = this_param.IsAccessible((Microsoft.CodeAnalysis.CSharp.Symbol)symbol, ref useSiteDiagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 404356, 404402);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol
                f_10306_404435_404462(Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol
                this_param)
                {
                    var return_v = this_param.OriginalDefinition;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 404435, 404462);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol>
                f_10306_404543_404562(Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol
                this_param)
                {
                    var return_v = this_param.Parameters;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 404543, 404562);
                    return return_v;
                }


                bool
                f_10306_404529_404566(Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol
                param)
                {
                    var return_v = isIntNotByRef(param);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 404529, 404566);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                f_10306_404675_404706(Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol
                this_param)
                {
                    var return_v = this_param.GetMethod;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 404675, 404706);
                    return return_v;
                }


                bool
                f_10306_404624_404720(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                receiver, Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                method, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.CheckImplicitThisCopyInReadOnlyMember(receiver, method, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 404624, 404720);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_405152_405192(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                expression, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.BindToNaturalType(expression, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 405152, 405192);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                f_10306_405227_405240(Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 405227, 405240);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundIndexOrRangePatternIndexerAccess
                f_10306_404890_405241(Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.CSharp.BoundExpression
                receiver, Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol
                lengthOrCountProperty, Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol
                patternSymbol, Microsoft.CodeAnalysis.CSharp.BoundExpression
                argument, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                type)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.BoundIndexOrRangePatternIndexerAccess(syntax, receiver, lengthOrCountProperty, (Microsoft.CodeAnalysis.CSharp.Symbol)patternSymbol, argument, type);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 404890, 405241);
                    return return_v;
                }


                Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbol>
                f_10306_404161_404181_I(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbol>
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 404161, 404181);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SpecialType
                f_10306_405385_405409(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                this_param)
                {
                    var return_v = this_param.SpecialType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 405385, 405409);
                    return return_v;
                }


                int
                f_10306_405472_405496(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 405472, 405496);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                f_10306_405584_405595()
                {
                    var return_v = Compilation;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 405584, 405595);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbol
                f_10306_405584_405656(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param, Microsoft.CodeAnalysis.SpecialMember
                specialMember)
                {
                    var return_v = this_param.GetSpecialTypeMember(specialMember);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 405584, 405656);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_405986_406026(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                expression, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.BindToNaturalType(expression, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 405986, 406026);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                f_10306_406053_406073(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                this_param)
                {
                    var return_v = this_param.ReturnType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 406053, 406073);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundIndexOrRangePatternIndexerAccess
                f_10306_405763_406074(Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.CSharp.BoundExpression
                receiver, Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol
                lengthOrCountProperty, Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                patternSymbol, Microsoft.CodeAnalysis.CSharp.BoundExpression
                argument, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                type)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.BoundIndexOrRangePatternIndexerAccess(syntax, receiver, lengthOrCountProperty, (Microsoft.CodeAnalysis.CSharp.Symbol)patternSymbol, argument, type);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 405763, 406074);
                    return return_v;
                }


                int
                f_10306_406097_406152(Microsoft.CodeAnalysis.WellKnownMember
                member)
                {
                    checkWellKnown(member);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 406097, 406152);
                    return 0;
                }


                int
                f_10306_406175_406228(Microsoft.CodeAnalysis.WellKnownMember
                member)
                {
                    checkWellKnown(member);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 406175, 406228);
                    return 0;
                }


                int
                f_10306_406314_406338(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 406314, 406338);
                    return 0;
                }


                int
                f_10306_406416_406813(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.LookupResult
                result, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                type, string
                name, int
                arity, Roslyn.Utilities.ConsList<Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol>
                basesBeingResolved, Microsoft.CodeAnalysis.CSharp.LookupOptions
                options, Microsoft.CodeAnalysis.CSharp.Binder
                originalBinder, bool
                diagnose, ref System.Collections.Generic.HashSet<Microsoft.CodeAnalysis.DiagnosticInfo>?
                useSiteDiagnostics)
                {
                    this_param.LookupMembersInType(result, type, name, arity: arity, basesBeingResolved: basesBeingResolved, options, originalBinder: originalBinder, diagnose: diagnose, ref useSiteDiagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 406416, 406813);
                    return 0;
                }


                bool
                f_10306_406838_406864(Microsoft.CodeAnalysis.CSharp.LookupResult
                this_param)
                {
                    var return_v = this_param.IsMultiViable;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 406838, 406864);
                    return return_v;
                }


                Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbol>
                f_10306_406932_406952(Microsoft.CodeAnalysis.CSharp.LookupResult
                this_param)
                {
                    var return_v = this_param.Symbols;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 406932, 406952);
                    return return_v;
                }


                bool
                f_10306_407006_407025_M(bool
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 407006, 407025);
                    return return_v;
                }


                bool
                f_10306_407058_407105(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Symbol
                symbol, ref System.Collections.Generic.HashSet<Microsoft.CodeAnalysis.DiagnosticInfo>
                useSiteDiagnostics)
                {
                    var return_v = this_param.IsAccessible(symbol, ref useSiteDiagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 407058, 407105);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                f_10306_407203_407228(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                this_param)
                {
                    var return_v = this_param.OriginalDefinition;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 407203, 407228);
                    return return_v;
                }


                int
                f_10306_407277_407300(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                this_param)
                {
                    var return_v = this_param.ParameterCount;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 407277, 407300);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol>
                f_10306_407352_407371(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                this_param)
                {
                    var return_v = this_param.Parameters;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 407352, 407371);
                    return return_v;
                }


                bool
                f_10306_407338_407375(Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol
                param)
                {
                    var return_v = isIntNotByRef(param);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 407338, 407375);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol>
                f_10306_407422_407441(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                this_param)
                {
                    var return_v = this_param.Parameters;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 407422, 407441);
                    return return_v;
                }


                bool
                f_10306_407408_407445(Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol
                param)
                {
                    var return_v = isIntNotByRef(param);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 407408, 407445);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                f_10306_407554_407585(Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol
                this_param)
                {
                    var return_v = this_param.GetMethod;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 407554, 407585);
                    return return_v;
                }


                bool
                f_10306_407503_407599(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                receiver, Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                method, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.CheckImplicitThisCopyInReadOnlyMember(receiver, method, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 407503, 407599);
                    return return_v;
                }


                bool
                f_10306_407630_407701(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                receiver, Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                method, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.CheckImplicitThisCopyInReadOnlyMember(receiver, method, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 407630, 407701);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_408015_408055(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                expression, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.BindToNaturalType(expression, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 408015, 408055);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                f_10306_408090_408107(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                this_param)
                {
                    var return_v = this_param.ReturnType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 408090, 408107);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundIndexOrRangePatternIndexerAccess
                f_10306_407755_408108(Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.CSharp.BoundExpression
                receiver, Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol
                lengthOrCountProperty, Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                patternSymbol, Microsoft.CodeAnalysis.CSharp.BoundExpression
                argument, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                type)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.BoundIndexOrRangePatternIndexerAccess(syntax, receiver, lengthOrCountProperty, (Microsoft.CodeAnalysis.CSharp.Symbol)patternSymbol, argument, type);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 407755, 408108);
                    return return_v;
                }


                int
                f_10306_408139_408194(Microsoft.CodeAnalysis.WellKnownMember
                member)
                {
                    checkWellKnown(member);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 408139, 408194);
                    return 0;
                }


                int
                f_10306_408225_408278(Microsoft.CodeAnalysis.WellKnownMember
                member)
                {
                    checkWellKnown(member);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 408225, 408278);
                    return 0;
                }


                Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbol>
                f_10306_406932_406952_I(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbol>
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 406932, 406952);
                    return return_v;
                }


                int
                f_10306_408415_408460(Microsoft.CodeAnalysis.CSharp.LookupResult
                lookupResult, ref System.Collections.Generic.HashSet<Microsoft.CodeAnalysis.DiagnosticInfo>?
                useSiteDiagnostics)
                {
                    cleanup(lookupResult, ref useSiteDiagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 408415, 408460);
                    return 0;
                }


                bool
                f_10306_408589_408669(Microsoft.CodeAnalysis.CSharp.MessageID
                feature, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.SyntaxNode
                syntax)
                {
                    var return_v = feature.CheckFeatureAvailability(diagnostics, syntax);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 408589, 408669);
                    return return_v;
                }


                int
                f_10306_408684_408739(Microsoft.CodeAnalysis.WellKnownMember
                member)
                {
                    checkWellKnown(member);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 408684, 408739);
                    return 0;
                }


                int
                f_10306_408758_408779(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Syntax.IdentifierNameSyntax>
                this_param)
                {
                    var return_v = this_param.Count;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 408758, 408779);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Syntax.IdentifierNameSyntax
                f_10306_409028_409046(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Syntax.IdentifierNameSyntax>
                this_param, int
                i0)
                {
                    var return_v = this_param[i0];
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 409028, 409046);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Location
                f_10306_409028_409060(Microsoft.CodeAnalysis.CSharp.Syntax.IdentifierNameSyntax
                this_param)
                {
                    var return_v = this_param.GetLocation();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 409028, 409060);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo
                f_10306_408817_409061(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, Microsoft.CodeAnalysis.Location
                location)
                {
                    var return_v = diagnostics.Add(code, location);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 408817, 409061);
                    return return_v;
                }


                static Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                f_10306_409410_409420(Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 409410, 409420);
                    return return_v;
                }


                static Microsoft.CodeAnalysis.SpecialType
                f_10306_409410_409432(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                this_param)
                {
                    var return_v = this_param.SpecialType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 409410, 409432);
                    return return_v;
                }


                static Microsoft.CodeAnalysis.RefKind
                f_10306_409484_409497(Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol
                this_param)
                {
                    var return_v = this_param.RefKind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 409484, 409497);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 401097, 411331);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 401097, 411331);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private ErrorPropertySymbol CreateErrorPropertySymbol(ImmutableArray<PropertySymbol> propertyGroup)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10306, 411343, 411764);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 411467, 411555);

                TypeSymbol
                propertyType = f_10306_411493_411533(propertyGroup) ?? (DynAbs.Tracing.TraceSender.Expression_Null<Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol>(10306, 411493, 411554) ?? f_10306_411537_411554(this))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 411569, 411602);

                var
                candidate = propertyGroup[0]
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 411616, 411753);

                return f_10306_411623_411752(f_10306_411647_411671(candidate), propertyType, f_10306_411687_411701(candidate), f_10306_411703_411722(candidate), f_10306_411724_411751(candidate));
                DynAbs.Tracing.TraceSender.TraceExitMethod(10306, 411343, 411764);

                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                f_10306_411493_411533(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol>
                members)
                {
                    var return_v = GetCommonTypeOrReturnType(members);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 411493, 411533);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                f_10306_411537_411554(Microsoft.CodeAnalysis.CSharp.Binder
                this_param)
                {
                    var return_v = this_param.CreateErrorType();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 411537, 411554);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                f_10306_411647_411671(Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol
                this_param)
                {
                    var return_v = this_param.ContainingType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 411647, 411671);
                    return return_v;
                }


                string
                f_10306_411687_411701(Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol
                this_param)
                {
                    var return_v = this_param.Name;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 411687, 411701);
                    return return_v;
                }


                bool
                f_10306_411703_411722(Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol
                this_param)
                {
                    var return_v = this_param.IsIndexer;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 411703, 411722);
                    return return_v;
                }


                bool
                f_10306_411724_411751(Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol
                this_param)
                {
                    var return_v = this_param.IsIndexedProperty;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 411724, 411751);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.ErrorPropertySymbol
                f_10306_411623_411752(Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                containingSymbol, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                type, string
                name, bool
                isIndexer, bool
                isIndexedProperty)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.Symbols.ErrorPropertySymbol((Microsoft.CodeAnalysis.CSharp.Symbol)containingSymbol, type, name, isIndexer, isIndexedProperty);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 411623, 411752);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 411343, 411764);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 411343, 411764);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        internal MethodGroupResolution ResolveMethodGroup(
                    BoundMethodGroup node,
                    AnalyzedArguments analyzedArguments,
                    bool isMethodGroupConversion,
                    ref HashSet<DiagnosticInfo> useSiteDiagnostics,
                    bool inferWithDynamic = false,
                    RefKind returnRefKind = default,
                    TypeSymbol returnType = null,
                    bool isFunctionPointerResolution = false,
                    in CallingConventionInfo callingConventionInfo = default)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10306, 413145, 414050);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 413669, 414039);

                return f_10306_413676_414038(this, node, node.Syntax, f_10306_413732_413741(node), analyzedArguments, isMethodGroupConversion, ref useSiteDiagnostics, inferWithDynamic: inferWithDynamic, returnRefKind: returnRefKind, returnType: returnType, isFunctionPointerResolution: isFunctionPointerResolution, callingConventionInfo: callingConventionInfo);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10306, 413145, 414050);

                string
                f_10306_413732_413741(Microsoft.CodeAnalysis.CSharp.BoundMethodGroup
                this_param)
                {
                    var return_v = this_param.Name;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 413732, 413741);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.MethodGroupResolution
                f_10306_413676_414038(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.BoundMethodGroup
                node, Microsoft.CodeAnalysis.SyntaxNode
                expression, string
                methodName, Microsoft.CodeAnalysis.CSharp.AnalyzedArguments
                analyzedArguments, bool
                isMethodGroupConversion, ref System.Collections.Generic.HashSet<Microsoft.CodeAnalysis.DiagnosticInfo>
                useSiteDiagnostics, bool
                inferWithDynamic, Microsoft.CodeAnalysis.RefKind
                returnRefKind, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?
                returnType, bool
                isFunctionPointerResolution, Microsoft.CodeAnalysis.CSharp.CallingConventionInfo
                callingConventionInfo)
                {
                    var return_v = this_param.ResolveMethodGroup(node, expression, methodName, analyzedArguments, isMethodGroupConversion, ref useSiteDiagnostics, inferWithDynamic: inferWithDynamic, returnRefKind: returnRefKind, returnType: returnType, isFunctionPointerResolution: isFunctionPointerResolution, callingConventionInfo: callingConventionInfo);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 413676, 414038);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 413145, 414050);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 413145, 414050);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        internal MethodGroupResolution ResolveMethodGroup(
                    BoundMethodGroup node,
                    SyntaxNode expression,
                    string methodName,
                    AnalyzedArguments analyzedArguments,
                    bool isMethodGroupConversion,
                    ref HashSet<DiagnosticInfo> useSiteDiagnostics,
                    bool inferWithDynamic = false,
                    bool allowUnexpandedForm = true,
                    RefKind returnRefKind = default,
                    TypeSymbol returnType = null,
                    bool isFunctionPointerResolution = false,
                    in CallingConventionInfo callingConventionInfo = default)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10306, 414062, 415964);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 414700, 415149);

                var
                methodResolution = f_10306_414723_415148(this, node, expression, methodName, analyzedArguments, isMethodGroupConversion, ref useSiteDiagnostics, inferWithDynamic: inferWithDynamic, allowUnexpandedForm: allowUnexpandedForm, returnRefKind: returnRefKind, returnType: returnType, isFunctionPointerResolution: isFunctionPointerResolution, callingConvention: callingConventionInfo)
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 415163, 415915) || true) && (methodResolution.IsEmpty && (DynAbs.Tracing.TraceSender.Expression_True(10306, 415167, 415225) && f_10306_415195_415225_M(!methodResolution.HasAnyErrors)))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 415163, 415915);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 415259, 415298);

                    f_10306_415259_415297(f_10306_415272_415288(node) == null);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 415318, 415364);

                    var
                    diagnostics = f_10306_415336_415363()
                    ;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 415382, 415433);

                    f_10306_415382_415432(diagnostics, methodResolution.Diagnostics);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 415490, 415537);

                    f_10306_415490_415536(this, node, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 415666, 415900);

                    return f_10306_415673_415899(methodResolution.MethodGroup, methodResolution.OtherSymbol, methodResolution.OverloadResolutionResult, methodResolution.AnalyzedArguments, methodResolution.ResultKind, f_10306_415867_415898(diagnostics));
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 415163, 415915);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 415929, 415953);

                return methodResolution;
                DynAbs.Tracing.TraceSender.TraceExitMethod(10306, 414062, 415964);

                Microsoft.CodeAnalysis.CSharp.MethodGroupResolution
                f_10306_414723_415148(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.BoundMethodGroup
                methodGroup, Microsoft.CodeAnalysis.SyntaxNode
                expression, string
                methodName, Microsoft.CodeAnalysis.CSharp.AnalyzedArguments
                analyzedArguments, bool
                isMethodGroupConversion, ref System.Collections.Generic.HashSet<Microsoft.CodeAnalysis.DiagnosticInfo>
                useSiteDiagnostics, bool
                inferWithDynamic, bool
                allowUnexpandedForm, Microsoft.CodeAnalysis.RefKind
                returnRefKind, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?
                returnType, bool
                isFunctionPointerResolution, Microsoft.CodeAnalysis.CSharp.CallingConventionInfo
                callingConvention)
                {
                    var return_v = this_param.ResolveMethodGroupInternal(methodGroup, expression, methodName, analyzedArguments, isMethodGroupConversion, ref useSiteDiagnostics, inferWithDynamic: inferWithDynamic, allowUnexpandedForm: allowUnexpandedForm, returnRefKind: returnRefKind, returnType: returnType, isFunctionPointerResolution: isFunctionPointerResolution, callingConvention: callingConvention);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 414723, 415148);
                    return return_v;
                }


                bool
                f_10306_415195_415225_M(bool
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 415195, 415225);
                    return return_v;
                }


                Microsoft.CodeAnalysis.DiagnosticInfo?
                f_10306_415272_415288(Microsoft.CodeAnalysis.CSharp.BoundMethodGroup
                this_param)
                {
                    var return_v = this_param.LookupError;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 415272, 415288);
                    return return_v;
                }


                int
                f_10306_415259_415297(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 415259, 415297);
                    return 0;
                }


                Microsoft.CodeAnalysis.DiagnosticBag
                f_10306_415336_415363()
                {
                    var return_v = DiagnosticBag.GetInstance();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 415336, 415363);
                    return return_v;
                }


                int
                f_10306_415382_415432(Microsoft.CodeAnalysis.DiagnosticBag
                this_param, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Diagnostic>
                diagnostics)
                {
                    this_param.AddRange<Microsoft.CodeAnalysis.Diagnostic>(diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 415382, 415432);
                    return 0;
                }


                int
                f_10306_415490_415536(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.BoundMethodGroup
                node, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    this_param.BindMemberAccessReportError(node, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 415490, 415536);
                    return 0;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Diagnostic>
                f_10306_415867_415898(Microsoft.CodeAnalysis.DiagnosticBag
                this_param)
                {
                    var return_v = this_param.ToReadOnlyAndFree();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 415867, 415898);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.MethodGroupResolution
                f_10306_415673_415899(Microsoft.CodeAnalysis.CSharp.MethodGroup
                methodGroup, Microsoft.CodeAnalysis.CSharp.Symbol
                otherSymbol, Microsoft.CodeAnalysis.CSharp.OverloadResolutionResult<Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol>
                overloadResolutionResult, Microsoft.CodeAnalysis.CSharp.AnalyzedArguments
                analyzedArguments, Microsoft.CodeAnalysis.CSharp.LookupResultKind
                resultKind, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Diagnostic>
                diagnostics)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.MethodGroupResolution(methodGroup, otherSymbol, overloadResolutionResult, analyzedArguments, resultKind, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 415673, 415899);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 414062, 415964);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 414062, 415964);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        internal MethodGroupResolution ResolveMethodGroupForFunctionPointer(
                    BoundMethodGroup methodGroup,
                    AnalyzedArguments analyzedArguments,
                    TypeSymbol returnType,
                    RefKind returnRefKind,
                    in CallingConventionInfo callingConventionInfo,
                    ref HashSet<DiagnosticInfo> useSiteDiagnostics)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10306, 415976, 416795);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 416356, 416784);

                return f_10306_416363_416783(this, methodGroup, analyzedArguments, isMethodGroupConversion: true, ref useSiteDiagnostics, inferWithDynamic: false, allowUnexpandedForm: true, returnRefKind, returnType, isFunctionPointerResolution: true, callingConventionInfo);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10306, 415976, 416795);

                Microsoft.CodeAnalysis.CSharp.MethodGroupResolution
                f_10306_416363_416783(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.BoundMethodGroup
                node, Microsoft.CodeAnalysis.CSharp.AnalyzedArguments
                analyzedArguments, bool
                isMethodGroupConversion, ref System.Collections.Generic.HashSet<Microsoft.CodeAnalysis.DiagnosticInfo>
                useSiteDiagnostics, bool
                inferWithDynamic, bool
                allowUnexpandedForm, Microsoft.CodeAnalysis.RefKind
                returnRefKind, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                returnType, bool
                isFunctionPointerResolution, Microsoft.CodeAnalysis.CSharp.CallingConventionInfo
                callingConvention)
                {
                    var return_v = this_param.ResolveDefaultMethodGroup(node, analyzedArguments, isMethodGroupConversion: isMethodGroupConversion, ref useSiteDiagnostics, inferWithDynamic: inferWithDynamic, allowUnexpandedForm: allowUnexpandedForm, returnRefKind, returnType, isFunctionPointerResolution: isFunctionPointerResolution, callingConvention);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 416363, 416783);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 415976, 416795);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 415976, 416795);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private MethodGroupResolution ResolveMethodGroupInternal(
                    BoundMethodGroup methodGroup,
                    SyntaxNode expression,
                    string methodName,
                    AnalyzedArguments analyzedArguments,
                    bool isMethodGroupConversion,
                    ref HashSet<DiagnosticInfo> useSiteDiagnostics,
                    bool inferWithDynamic = false,
                    bool allowUnexpandedForm = true,
                    RefKind returnRefKind = default,
                    TypeSymbol returnType = null,
                    bool isFunctionPointerResolution = false,
                    in CallingConventionInfo callingConvention = default)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10306, 416807, 420360);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 417455, 417751);

                var
                methodResolution = f_10306_417478_417750(this, methodGroup, analyzedArguments, isMethodGroupConversion, ref useSiteDiagnostics, inferWithDynamic, allowUnexpandedForm, returnRefKind, returnType, isFunctionPointerResolution, callingConvention)
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 417938, 418139) || true) && (f_10306_417942_417977_M(!methodGroup.SearchExtensionMethods) || (DynAbs.Tracing.TraceSender.Expression_False(10306, 417942, 418020) || methodResolution.HasAnyApplicableMethod) || (DynAbs.Tracing.TraceSender.Expression_False(10306, 417942, 418066) || f_10306_418024_418066(methodGroup)))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 417938, 418139);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 418100, 418124);

                    return methodResolution;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 417938, 418139);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 418155, 418419);

                var
                extensionMethodResolution = f_10306_418187_418418(this, expression, methodName, analyzedArguments, f_10306_418268_418291(methodGroup), f_10306_418293_418321(methodGroup), isMethodGroupConversion, returnRefKind: returnRefKind, returnType: returnType)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 418433, 418478);

                bool
                preferExtensionMethodResolution = false
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 418494, 419922) || true) && (extensionMethodResolution.HasAnyApplicableMethod)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 418494, 419922);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 418580, 418619);

                    preferExtensionMethodResolution = true;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 418494, 419922);
                }

                else
                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 418494, 419922);

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 418653, 419922) || true) && (extensionMethodResolution.IsEmpty)
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 418653, 419922);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 418724, 418764);

                        preferExtensionMethodResolution = false;
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 418653, 419922);
                    }

                    else
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 418653, 419922);

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 418798, 419922) || true) && (methodResolution.IsEmpty)
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 418798, 419922);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 418860, 418899);

                            preferExtensionMethodResolution = true;
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 418798, 419922);
                        }

                        else

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 418798, 419922);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 419190, 419245);

                            f_10306_419190_419244(f_10306_419203_419243_M(!methodResolution.HasAnyApplicableMethod));
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 419263, 419327);

                            f_10306_419263_419326(f_10306_419276_419325_M(!extensionMethodResolution.HasAnyApplicableMethod));
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 419345, 419385);

                            f_10306_419345_419384(f_10306_419358_419383_M(!methodResolution.IsEmpty));
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 419403, 419452);

                            f_10306_419403_419451(f_10306_419416_419450_M(!extensionMethodResolution.IsEmpty));
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 419472, 419536);

                            LookupResultKind
                            methodResultKind = methodResolution.ResultKind
                            ;
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 419554, 419636);

                            LookupResultKind
                            extensionMethodResultKind = extensionMethodResolution.ResultKind
                            ;

                            if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 419654, 419907) || true) && (methodResultKind != extensionMethodResultKind && (DynAbs.Tracing.TraceSender.Expression_True(10306, 419658, 419807) && methodResultKind == f_10306_419748_419807(extensionMethodResultKind, methodResultKind)))
                            )

                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 419654, 419907);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 419849, 419888);

                                preferExtensionMethodResolution = true;
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 419654, 419907);
                            }
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 418798, 419922);
                        }
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 418653, 419922);
                    }
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 418494, 419922);
                }

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 419938, 420260) || true) && (preferExtensionMethodResolution)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 419938, 420260);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 420007, 420031);

                    methodResolution.Free();
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 420049, 420098);

                    f_10306_420049_420097(f_10306_420062_420096_M(!extensionMethodResolution.IsEmpty));
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 420116, 420149);

                    return extensionMethodResolution;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 419938, 420260);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 420276, 420309);

                extensionMethodResolution.Free();
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 420325, 420349);

                return methodResolution;
                DynAbs.Tracing.TraceSender.TraceExitMethod(10306, 416807, 420360);

                Microsoft.CodeAnalysis.CSharp.MethodGroupResolution
                f_10306_417478_417750(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.BoundMethodGroup
                node, Microsoft.CodeAnalysis.CSharp.AnalyzedArguments
                analyzedArguments, bool
                isMethodGroupConversion, ref System.Collections.Generic.HashSet<Microsoft.CodeAnalysis.DiagnosticInfo>
                useSiteDiagnostics, bool
                inferWithDynamic, bool
                allowUnexpandedForm, Microsoft.CodeAnalysis.RefKind
                returnRefKind, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?
                returnType, bool
                isFunctionPointerResolution, Microsoft.CodeAnalysis.CSharp.CallingConventionInfo
                callingConvention)
                {
                    var return_v = this_param.ResolveDefaultMethodGroup(node, analyzedArguments, isMethodGroupConversion, ref useSiteDiagnostics, inferWithDynamic, allowUnexpandedForm, returnRefKind, returnType, isFunctionPointerResolution, callingConvention);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 417478, 417750);
                    return return_v;
                }


                bool
                f_10306_417942_417977_M(bool
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 417942, 417977);
                    return return_v;
                }


                bool
                f_10306_418024_418066(Microsoft.CodeAnalysis.CSharp.BoundMethodGroup
                node)
                {
                    var return_v = node.MethodGroupReceiverIsDynamic();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 418024, 418066);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression?
                f_10306_418268_418291(Microsoft.CodeAnalysis.CSharp.BoundMethodGroup
                this_param)
                {
                    var return_v = this_param.ReceiverOpt;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 418268, 418291);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations>
                f_10306_418293_418321(Microsoft.CodeAnalysis.CSharp.BoundMethodGroup
                this_param)
                {
                    var return_v = this_param.TypeArgumentsOpt;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 418293, 418321);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.MethodGroupResolution
                f_10306_418187_418418(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.SyntaxNode
                expression, string
                methodName, Microsoft.CodeAnalysis.CSharp.AnalyzedArguments
                analyzedArguments, Microsoft.CodeAnalysis.CSharp.BoundExpression?
                left, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations>
                typeArgumentsWithAnnotations, bool
                isMethodGroupConversion, Microsoft.CodeAnalysis.RefKind
                returnRefKind, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?
                returnType)
                {
                    var return_v = this_param.BindExtensionMethod(expression, methodName, analyzedArguments, left, typeArgumentsWithAnnotations, isMethodGroupConversion, returnRefKind: returnRefKind, returnType: returnType);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 418187, 418418);
                    return return_v;
                }


                bool
                f_10306_419203_419243_M(bool
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 419203, 419243);
                    return return_v;
                }


                int
                f_10306_419190_419244(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 419190, 419244);
                    return 0;
                }


                bool
                f_10306_419276_419325_M(bool
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 419276, 419325);
                    return return_v;
                }


                int
                f_10306_419263_419326(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 419263, 419326);
                    return 0;
                }


                bool
                f_10306_419358_419383_M(bool
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 419358, 419383);
                    return return_v;
                }


                int
                f_10306_419345_419384(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 419345, 419384);
                    return 0;
                }


                bool
                f_10306_419416_419450_M(bool
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 419416, 419450);
                    return return_v;
                }


                int
                f_10306_419403_419451(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 419403, 419451);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.LookupResultKind
                f_10306_419748_419807(Microsoft.CodeAnalysis.CSharp.LookupResultKind
                resultKind1, Microsoft.CodeAnalysis.CSharp.LookupResultKind
                resultKind2)
                {
                    var return_v = resultKind1.WorseResultKind(resultKind2);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 419748, 419807);
                    return return_v;
                }


                bool
                f_10306_420062_420096_M(bool
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 420062, 420096);
                    return return_v;
                }


                int
                f_10306_420049_420097(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 420049, 420097);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 416807, 420360);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 416807, 420360);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private MethodGroupResolution ResolveDefaultMethodGroup(
                    BoundMethodGroup node,
                    AnalyzedArguments analyzedArguments,
                    bool isMethodGroupConversion,
                    ref HashSet<DiagnosticInfo> useSiteDiagnostics,
                    bool inferWithDynamic = false,
                    bool allowUnexpandedForm = true,
                    RefKind returnRefKind = default,
                    TypeSymbol returnType = null,
                    bool isFunctionPointerResolution = false,
                    in CallingConventionInfo callingConvention = default)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10306, 420372, 423873);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 420944, 420971);

                var
                methods = f_10306_420958_420970(node)
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 420985, 421252) || true) && (methods.Length == 0)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 420985, 421252);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 421042, 421092);

                    var
                    method = f_10306_421055_421075(node) as MethodSymbol
                    ;

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 421110, 421237) || true) && ((object)method != null)
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 421110, 421237);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 421178, 421218);

                        methods = f_10306_421188_421217(method);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 421110, 421237);
                    }
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 420985, 421252);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 421268, 421348);

                ImmutableArray<Diagnostic>
                sealedDiagnostics = ImmutableArray<Diagnostic>.Empty
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 421362, 421637) || true) && (f_10306_421366_421382(node) != null)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 421362, 421637);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 421424, 421480);

                    DiagnosticBag
                    diagnostics = f_10306_421452_421479()
                    ;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 421498, 421552);

                    f_10306_421498_421551(diagnostics, f_10306_421517_421533(node), f_10306_421535_421550(node));
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 421570, 421622);

                    sealedDiagnostics = f_10306_421590_421621(diagnostics);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 421362, 421637);
                }

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 421653, 421816) || true) && (methods.Length == 0)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 421653, 421816);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 421710, 421801);

                    return f_10306_421717_421800(f_10306_421743_421763(node), f_10306_421765_421780(node), sealedDiagnostics);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 421653, 421816);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 421832, 421876);

                var
                methodGroup = f_10306_421850_421875()
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 421990, 422119);

                f_10306_421990_422118(            // NOTE: node.ReceiverOpt could be a BoundTypeOrValueExpression - users need to check.
                            methodGroup, f_10306_422034_422050(node), methods, f_10306_422061_422082(node), f_10306_422084_422099(node), f_10306_422101_422117(node));

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 422135, 422277) || true) && (f_10306_422139_422155(node) != null)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 422135, 422277);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 422197, 422262);

                    return f_10306_422204_422261(methodGroup, sealedDiagnostics);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 422135, 422277);
                }

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 422541, 423862) || true) && (analyzedArguments == null)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 422541, 423862);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 422604, 422669);

                    return f_10306_422611_422668(methodGroup, sealedDiagnostics);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 422541, 423862);
                }

                else

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 422541, 423862);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 422735, 422801);

                    var
                    result = f_10306_422748_422800()
                    ;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 422819, 422902);

                    bool
                    allowRefOmittedArguments = f_10306_422851_422901(f_10306_422851_422871(methodGroup))
                    ;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 422920, 423555);

                    f_10306_422920_423554(f_10306_422920_422938(), f_10306_422996_423015(methodGroup), f_10306_423038_423063(methodGroup), f_10306_423086_423106(methodGroup), analyzedArguments, result, ref useSiteDiagnostics, isMethodGroupConversion, allowRefOmittedArguments, inferWithDynamic, allowUnexpandedForm, returnRefKind, returnType, isFunctionPointerResolution, callingConvention);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 423694, 423847);

                    return f_10306_423701_423846(methodGroup, null, result, f_10306_423754_423802(analyzedArguments), f_10306_423804_423826(methodGroup), sealedDiagnostics);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 422541, 423862);
                }
                DynAbs.Tracing.TraceSender.TraceExitMethod(10306, 420372, 423873);

                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol>
                f_10306_420958_420970(Microsoft.CodeAnalysis.CSharp.BoundMethodGroup
                this_param)
                {
                    var return_v = this_param.Methods;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 420958, 420970);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbol?
                f_10306_421055_421075(Microsoft.CodeAnalysis.CSharp.BoundMethodGroup
                this_param)
                {
                    var return_v = this_param.LookupSymbolOpt;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 421055, 421075);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol>
                f_10306_421188_421217(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                item)
                {
                    var return_v = ImmutableArray.Create(item);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 421188, 421217);
                    return return_v;
                }


                Microsoft.CodeAnalysis.DiagnosticInfo?
                f_10306_421366_421382(Microsoft.CodeAnalysis.CSharp.BoundMethodGroup
                this_param)
                {
                    var return_v = this_param.LookupError;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 421366, 421382);
                    return return_v;
                }


                Microsoft.CodeAnalysis.DiagnosticBag
                f_10306_421452_421479()
                {
                    var return_v = DiagnosticBag.GetInstance();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 421452, 421479);
                    return return_v;
                }


                Microsoft.CodeAnalysis.DiagnosticInfo
                f_10306_421517_421533(Microsoft.CodeAnalysis.CSharp.BoundMethodGroup
                this_param)
                {
                    var return_v = this_param.LookupError;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 421517, 421533);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SyntaxNode
                f_10306_421535_421550(Microsoft.CodeAnalysis.CSharp.BoundMethodGroup
                this_param)
                {
                    var return_v = this_param.NameSyntax;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 421535, 421550);
                    return return_v;
                }


                int
                f_10306_421498_421551(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.DiagnosticInfo
                info, Microsoft.CodeAnalysis.SyntaxNode
                syntax)
                {
                    Error(diagnostics, info, syntax);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 421498, 421551);
                    return 0;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Diagnostic>
                f_10306_421590_421621(Microsoft.CodeAnalysis.DiagnosticBag
                this_param)
                {
                    var return_v = this_param.ToReadOnlyAndFree();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 421590, 421621);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbol?
                f_10306_421743_421763(Microsoft.CodeAnalysis.CSharp.BoundMethodGroup
                this_param)
                {
                    var return_v = this_param.LookupSymbolOpt;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 421743, 421763);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.LookupResultKind
                f_10306_421765_421780(Microsoft.CodeAnalysis.CSharp.BoundMethodGroup
                this_param)
                {
                    var return_v = this_param.ResultKind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 421765, 421780);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.MethodGroupResolution
                f_10306_421717_421800(Microsoft.CodeAnalysis.CSharp.Symbol?
                otherSymbol, Microsoft.CodeAnalysis.CSharp.LookupResultKind
                resultKind, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Diagnostic>
                diagnostics)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.MethodGroupResolution(otherSymbol, resultKind, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 421717, 421800);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.MethodGroup
                f_10306_421850_421875()
                {
                    var return_v = MethodGroup.GetInstance();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 421850, 421875);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression?
                f_10306_422034_422050(Microsoft.CodeAnalysis.CSharp.BoundMethodGroup
                this_param)
                {
                    var return_v = this_param.ReceiverOpt;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 422034, 422050);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations>
                f_10306_422061_422082(Microsoft.CodeAnalysis.CSharp.BoundMethodGroup
                this_param)
                {
                    var return_v = this_param.TypeArgumentsOpt;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 422061, 422082);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.LookupResultKind
                f_10306_422084_422099(Microsoft.CodeAnalysis.CSharp.BoundMethodGroup
                this_param)
                {
                    var return_v = this_param.ResultKind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 422084, 422099);
                    return return_v;
                }


                Microsoft.CodeAnalysis.DiagnosticInfo?
                f_10306_422101_422117(Microsoft.CodeAnalysis.CSharp.BoundMethodGroup
                this_param)
                {
                    var return_v = this_param.LookupError;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 422101, 422117);
                    return return_v;
                }


                int
                f_10306_421990_422118(Microsoft.CodeAnalysis.CSharp.MethodGroup
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression?
                receiverOpt, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol>
                methods, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations>
                typeArguments, Microsoft.CodeAnalysis.CSharp.LookupResultKind
                resultKind, Microsoft.CodeAnalysis.DiagnosticInfo?
                error)
                {
                    this_param.PopulateWithNonExtensionMethods(receiverOpt, methods, typeArguments, resultKind, error);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 421990, 422118);
                    return 0;
                }


                Microsoft.CodeAnalysis.DiagnosticInfo?
                f_10306_422139_422155(Microsoft.CodeAnalysis.CSharp.BoundMethodGroup
                this_param)
                {
                    var return_v = this_param.LookupError;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 422139, 422155);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.MethodGroupResolution
                f_10306_422204_422261(Microsoft.CodeAnalysis.CSharp.MethodGroup
                methodGroup, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Diagnostic>
                diagnostics)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.MethodGroupResolution(methodGroup, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 422204, 422261);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.MethodGroupResolution
                f_10306_422611_422668(Microsoft.CodeAnalysis.CSharp.MethodGroup
                methodGroup, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Diagnostic>
                diagnostics)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.MethodGroupResolution(methodGroup, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 422611, 422668);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.OverloadResolutionResult<Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol>
                f_10306_422748_422800()
                {
                    var return_v = OverloadResolutionResult<MethodSymbol>.GetInstance();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 422748, 422800);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_422851_422871(Microsoft.CodeAnalysis.CSharp.MethodGroup
                this_param)
                {
                    var return_v = this_param.Receiver;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 422851, 422871);
                    return return_v;
                }


                bool
                f_10306_422851_422901(Microsoft.CodeAnalysis.CSharp.BoundExpression
                expressionOpt)
                {
                    var return_v = expressionOpt.IsExpressionOfComImportType();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 422851, 422901);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.OverloadResolution
                f_10306_422920_422938()
                {
                    var return_v = OverloadResolution;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 422920, 422938);
                    return return_v;
                }


                Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol>
                f_10306_422996_423015(Microsoft.CodeAnalysis.CSharp.MethodGroup
                this_param)
                {
                    var return_v = this_param.Methods;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 422996, 423015);
                    return return_v;
                }


                Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations>
                f_10306_423038_423063(Microsoft.CodeAnalysis.CSharp.MethodGroup
                this_param)
                {
                    var return_v = this_param.TypeArguments;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 423038, 423063);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_423086_423106(Microsoft.CodeAnalysis.CSharp.MethodGroup
                this_param)
                {
                    var return_v = this_param.Receiver;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 423086, 423106);
                    return return_v;
                }


                int
                f_10306_422920_423554(Microsoft.CodeAnalysis.CSharp.OverloadResolution
                this_param, Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol>
                methods, Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations>
                typeArguments, Microsoft.CodeAnalysis.CSharp.BoundExpression
                receiver, Microsoft.CodeAnalysis.CSharp.AnalyzedArguments
                arguments, Microsoft.CodeAnalysis.CSharp.OverloadResolutionResult<Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol>
                result, ref System.Collections.Generic.HashSet<Microsoft.CodeAnalysis.DiagnosticInfo>
                useSiteDiagnostics, bool
                isMethodGroupConversion, bool
                allowRefOmittedArguments, bool
                inferWithDynamic, bool
                allowUnexpandedForm, Microsoft.CodeAnalysis.RefKind
                returnRefKind, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?
                returnType, bool
                isFunctionPointerResolution, Microsoft.CodeAnalysis.CSharp.CallingConventionInfo
                callingConventionInfo)
                {
                    this_param.MethodInvocationOverloadResolution(methods, typeArguments, receiver, arguments, result, ref useSiteDiagnostics, isMethodGroupConversion, allowRefOmittedArguments, inferWithDynamic, allowUnexpandedForm, returnRefKind, returnType, isFunctionPointerResolution, callingConventionInfo);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 422920, 423554);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.AnalyzedArguments
                f_10306_423754_423802(Microsoft.CodeAnalysis.CSharp.AnalyzedArguments
                original)
                {
                    var return_v = AnalyzedArguments.GetInstance(original);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 423754, 423802);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.LookupResultKind
                f_10306_423804_423826(Microsoft.CodeAnalysis.CSharp.MethodGroup
                this_param)
                {
                    var return_v = this_param.ResultKind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 423804, 423826);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.MethodGroupResolution
                f_10306_423701_423846(Microsoft.CodeAnalysis.CSharp.MethodGroup
                methodGroup, Microsoft.CodeAnalysis.CSharp.Symbol
                otherSymbol, Microsoft.CodeAnalysis.CSharp.OverloadResolutionResult<Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol>
                overloadResolutionResult, Microsoft.CodeAnalysis.CSharp.AnalyzedArguments
                analyzedArguments, Microsoft.CodeAnalysis.CSharp.LookupResultKind
                resultKind, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Diagnostic>
                diagnostics)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.MethodGroupResolution(methodGroup, otherSymbol, overloadResolutionResult, analyzedArguments, resultKind, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 423701, 423846);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 420372, 423873);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 420372, 423873);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        internal static bool ReportDelegateInvokeUseSiteDiagnostic(DiagnosticBag diagnostics, TypeSymbol possibleDelegateType,
                    Location location = null, SyntaxNode node = null)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterStaticMethod(10306, 423885, 425221);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 424091, 424141);

                f_10306_424091_424140((location == null) ^ (node == null));

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 424157, 424261) || true) && (!f_10306_424162_424199(possibleDelegateType))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 424157, 424261);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 424233, 424246);

                    return false;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 424157, 424261);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 424277, 424343);

                MethodSymbol
                invoke = f_10306_424299_424342(possibleDelegateType)
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 424357, 424584) || true) && ((object)invoke == null)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 424357, 424584);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 424417, 424539);

                    f_10306_424417_424538(diagnostics, f_10306_424433_424510(ErrorCode.ERR_InvalidDelegateType, possibleDelegateType), location ?? (DynAbs.Tracing.TraceSender.Expression_Null<Microsoft.CodeAnalysis.Location?>(10306, 424512, 424537) ?? f_10306_424524_424537(node)));
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 424557, 424569);

                    return true;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 424357, 424584);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 424600, 424652);

                DiagnosticInfo
                info = f_10306_424622_424651(invoke)
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 424666, 424744) || true) && (info == null)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 424666, 424744);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 424716, 424729);

                    return false;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 424666, 424744);
                }

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 424760, 424854) || true) && (location == null)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 424760, 424854);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 424814, 424839);

                    location = f_10306_424825_424838(node);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 424760, 424854);
                }

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 424870, 425127) || true) && (f_10306_424874_424883(info) == (int)ErrorCode.ERR_InvalidDelegateType)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 424870, 425127);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 424959, 425082);

                    f_10306_424959_425081(diagnostics, f_10306_424975_425080(f_10306_424992_425069(ErrorCode.ERR_InvalidDelegateType, possibleDelegateType), location));
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 425100, 425112);

                    return true;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 424870, 425127);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 425143, 425210);

                return f_10306_425150_425209(info, diagnostics, location);
                DynAbs.Tracing.TraceSender.TraceExitStaticMethod(10306, 423885, 425221);

                int
                f_10306_424091_424140(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 424091, 424140);
                    return 0;
                }


                bool
                f_10306_424162_424199(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                type)
                {
                    var return_v = type.IsDelegateType();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 424162, 424199);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                f_10306_424299_424342(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                type)
                {
                    var return_v = type.DelegateInvokeMethod();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 424299, 424342);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo
                f_10306_424433_424510(Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, params object[]
                args)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo(code, args);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 424433, 424510);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Location
                f_10306_424524_424537(Microsoft.CodeAnalysis.SyntaxNode?
                this_param)
                {
                    var return_v = this_param.Location;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 424524, 424537);
                    return return_v;
                }


                int
                f_10306_424417_424538(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo
                info, Microsoft.CodeAnalysis.Location
                location)
                {
                    diagnostics.Add((Microsoft.CodeAnalysis.DiagnosticInfo)info, location);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 424417, 424538);
                    return 0;
                }


                Microsoft.CodeAnalysis.DiagnosticInfo
                f_10306_424622_424651(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                this_param)
                {
                    var return_v = this_param.GetUseSiteDiagnostic();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 424622, 424651);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Location
                f_10306_424825_424838(Microsoft.CodeAnalysis.SyntaxNode?
                this_param)
                {
                    var return_v = this_param.Location;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 424825, 424838);
                    return return_v;
                }


                int
                f_10306_424874_424883(Microsoft.CodeAnalysis.DiagnosticInfo
                this_param)
                {
                    var return_v = this_param.Code;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 424874, 424883);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo
                f_10306_424992_425069(Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, params object[]
                args)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo(code, args);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 424992, 425069);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSDiagnostic
                f_10306_424975_425080(Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo
                info, Microsoft.CodeAnalysis.Location
                location)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.CSDiagnostic((Microsoft.CodeAnalysis.DiagnosticInfo)info, location);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 424975, 425080);
                    return return_v;
                }


                int
                f_10306_424959_425081(Microsoft.CodeAnalysis.DiagnosticBag
                this_param, Microsoft.CodeAnalysis.CSharp.CSDiagnostic
                diag)
                {
                    this_param.Add((Microsoft.CodeAnalysis.Diagnostic)diag);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 424959, 425081);
                    return 0;
                }


                bool
                f_10306_425150_425209(Microsoft.CodeAnalysis.DiagnosticInfo
                info, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.Location
                location)
                {
                    var return_v = Symbol.ReportUseSiteDiagnostic(info, diagnostics, location);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 425150, 425209);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 423885, 425221);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 423885, 425221);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private BoundConditionalAccess BindConditionalAccessExpression(ConditionalAccessExpressionSyntax node, DiagnosticBag diagnostics)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10306, 425233, 429931);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 425387, 425463);

                BoundExpression
                receiver = f_10306_425414_425462(this, node, diagnostics)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 425479, 425559);

                var
                conditionalAccessBinder = f_10306_425509_425558(this, receiver)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 425573, 425673);

                var
                access = f_10306_425586_425672(conditionalAccessBinder, f_10306_425620_425636(node), diagnostics, BindValueKind.RValue)
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 425689, 425880) || true) && (f_10306_425693_425714(receiver) || (DynAbs.Tracing.TraceSender.Expression_False(10306, 425693, 425737) || f_10306_425718_425737(access)))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 425689, 425880);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 425771, 425865);

                    return f_10306_425778_425864(node, receiver, access, f_10306_425829_425846(this), hasErrors: true);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 425689, 425880);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 425896, 425929);

                var
                receiverType = f_10306_425915_425928(receiver)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 425943, 425986);

                f_10306_425943_425985((object)receiverType != null);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 426050, 426221) || true) && (f_10306_426054_426065(access) == BoundKind.MethodGroup)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 426050, 426221);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 426124, 426206);

                    return f_10306_426131_426205(this, node, receiver, access, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 426050, 426221);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 426237, 426266);

                var
                accessType = f_10306_426254_426265(access)
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 426325, 426486) || true) && ((object)accessType == null)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 426325, 426486);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 426389, 426471);

                    return f_10306_426396_426470(this, node, receiver, access, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 426325, 426486);
                }

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 426879, 429284) || true) && ((f_10306_426884_426911_M(!accessType.IsReferenceType) && (DynAbs.Tracing.TraceSender.Expression_True(10306, 426884, 426938) && f_10306_426915_426938_M(!accessType.IsValueType))) || (DynAbs.Tracing.TraceSender.Expression_False(10306, 426883, 426982) || f_10306_426943_426982(accessType)) || (DynAbs.Tracing.TraceSender.Expression_False(10306, 426883, 427015) || f_10306_426986_427015(accessType)))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 426879, 429284);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 427428, 427453);

                    bool
                    resultIsUsed = true
                    ;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 427471, 427509);

                    CSharpSyntaxNode
                    parent = f_10306_427497_427508(node)
                    ;

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 427529, 428998) || true) && (parent != null)
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 427529, 428998);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 427589, 428979);

                        switch (f_10306_427597_427610(parent))
                        {

                            case SyntaxKind.ExpressionStatement:
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 427589, 428979);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 427726, 427796);

                                resultIsUsed = f_10306_427741_427787(((ExpressionStatementSyntax)parent)) != node;
                                DynAbs.Tracing.TraceSender.TraceBreak(10306, 427826, 427832);

                                break;
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 427589, 428979);

                            case SyntaxKind.SimpleLambdaExpression:
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 427589, 428979);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 427929, 428041);

                                resultIsUsed = (f_10306_427945_427988(((SimpleLambdaExpressionSyntax)parent)) != node) || (DynAbs.Tracing.TraceSender.Expression_False(10306, 427944, 428040) || f_10306_428001_428040(this));
                                DynAbs.Tracing.TraceSender.TraceBreak(10306, 428071, 428077);

                                break;
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 427589, 428979);

                            case SyntaxKind.ParenthesizedLambdaExpression:
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 427589, 428979);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 428181, 428300);

                                resultIsUsed = (f_10306_428197_428247(((ParenthesizedLambdaExpressionSyntax)parent)) != node) || (DynAbs.Tracing.TraceSender.Expression_False(10306, 428196, 428299) || f_10306_428260_428299(this));
                                DynAbs.Tracing.TraceSender.TraceBreak(10306, 428330, 428336);

                                break;
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 427589, 428979);

                            case SyntaxKind.ArrowExpressionClause:
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 427589, 428979);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 428432, 428549);

                                resultIsUsed = (f_10306_428448_428496(((ArrowExpressionClauseSyntax)parent)) != node) || (DynAbs.Tracing.TraceSender.Expression_False(10306, 428447, 428548) || f_10306_428509_428548(this));
                                DynAbs.Tracing.TraceSender.TraceBreak(10306, 428579, 428585);

                                break;
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 427589, 428979);

                            case SyntaxKind.ForStatement:
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 427589, 428979);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 428766, 428804);

                                var
                                loop = (ForStatementSyntax)parent
                                ;
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 428834, 428920);

                                resultIsUsed = !loop.Incrementors.Contains(node) && (DynAbs.Tracing.TraceSender.Expression_True(10306, 428849, 428919) && !loop.Initializers.Contains(node));
                                DynAbs.Tracing.TraceSender.TraceBreak(10306, 428950, 428956);

                                break;
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 427589, 428979);
                        }
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 427529, 428998);
                    }

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 429018, 429177) || true) && (resultIsUsed)
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 429018, 429177);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 429076, 429158);

                        return f_10306_429083_429157(this, node, receiver, access, diagnostics);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 429018, 429177);
                    }
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 429197, 429269);

                    accessType = f_10306_429210_429268(this, SpecialType.System_Void, diagnostics, node);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 426879, 429284);
                }

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 429599, 429834) || true) && (f_10306_429603_429625(accessType) && (DynAbs.Tracing.TraceSender.Expression_True(10306, 429603, 429657) && !f_10306_429630_429657(accessType)) && (DynAbs.Tracing.TraceSender.Expression_True(10306, 429603, 429685) && !f_10306_429662_429685(accessType)))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 429599, 429834);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 429719, 429819);

                    accessType = f_10306_429732_429818(f_10306_429732_429796(this, SpecialType.System_Nullable_T, diagnostics, node), accessType);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 429599, 429834);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 429850, 429920);

                return f_10306_429857_429919(node, receiver, access, accessType);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10306, 425233, 429931);

                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_425414_425462(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.ConditionalAccessExpressionSyntax
                node, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.BindConditionalAccessReceiver(node, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 425414, 425462);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Binder.BinderWithConditionalReceiver
                f_10306_425509_425558(Microsoft.CodeAnalysis.CSharp.Binder
                next, Microsoft.CodeAnalysis.CSharp.BoundExpression
                receiverExpression)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.Binder.BinderWithConditionalReceiver(next, receiverExpression);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 425509, 425558);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                f_10306_425620_425636(Microsoft.CodeAnalysis.CSharp.Syntax.ConditionalAccessExpressionSyntax
                this_param)
                {
                    var return_v = this_param.WhenNotNull;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 425620, 425636);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_425586_425672(Microsoft.CodeAnalysis.CSharp.Binder.BinderWithConditionalReceiver
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                node, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.Binder.BindValueKind
                valueKind)
                {
                    var return_v = this_param.BindValue(node, diagnostics, valueKind);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 425586, 425672);
                    return return_v;
                }


                bool
                f_10306_425693_425714(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.HasAnyErrors;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 425693, 425714);
                    return return_v;
                }


                bool
                f_10306_425718_425737(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.HasAnyErrors;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 425718, 425737);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                f_10306_425829_425846(Microsoft.CodeAnalysis.CSharp.Binder
                this_param)
                {
                    var return_v = this_param.CreateErrorType();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 425829, 425846);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundConditionalAccess
                f_10306_425778_425864(Microsoft.CodeAnalysis.CSharp.Syntax.ConditionalAccessExpressionSyntax
                syntax, Microsoft.CodeAnalysis.CSharp.BoundExpression
                receiver, Microsoft.CodeAnalysis.CSharp.BoundExpression
                accessExpression, Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                type, bool
                hasErrors)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.BoundConditionalAccess((Microsoft.CodeAnalysis.SyntaxNode)syntax, receiver, accessExpression, (Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol)type, hasErrors: hasErrors);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 425778, 425864);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?
                f_10306_425915_425928(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 425915, 425928);
                    return return_v;
                }


                int
                f_10306_425943_425985(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 425943, 425985);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.BoundKind
                f_10306_426054_426065(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.Kind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 426054, 426065);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundConditionalAccess
                f_10306_426131_426205(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.ConditionalAccessExpressionSyntax
                node, Microsoft.CodeAnalysis.CSharp.BoundExpression
                receiver, Microsoft.CodeAnalysis.CSharp.BoundExpression
                access, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.GenerateBadConditionalAccessNodeError(node, receiver, access, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 426131, 426205);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?
                f_10306_426254_426265(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 426254, 426265);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundConditionalAccess
                f_10306_426396_426470(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.ConditionalAccessExpressionSyntax
                node, Microsoft.CodeAnalysis.CSharp.BoundExpression
                receiver, Microsoft.CodeAnalysis.CSharp.BoundExpression
                access, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.GenerateBadConditionalAccessNodeError(node, receiver, access, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 426396, 426470);
                    return return_v;
                }


                bool
                f_10306_426884_426911_M(bool
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 426884, 426911);
                    return return_v;
                }


                bool
                f_10306_426915_426938_M(bool
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 426915, 426938);
                    return return_v;
                }


                bool
                f_10306_426943_426982(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                type)
                {
                    var return_v = type.IsPointerOrFunctionPointer();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 426943, 426982);
                    return return_v;
                }


                bool
                f_10306_426986_427015(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                type)
                {
                    var return_v = type.IsRestrictedType();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 426986, 427015);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode?
                f_10306_427497_427508(Microsoft.CodeAnalysis.CSharp.Syntax.ConditionalAccessExpressionSyntax
                this_param)
                {
                    var return_v = this_param.Parent;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 427497, 427508);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.SyntaxKind
                f_10306_427597_427610(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode
                this_param)
                {
                    var return_v = this_param.Kind();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 427597, 427610);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                f_10306_427741_427787(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionStatementSyntax
                this_param)
                {
                    var return_v = this_param.Expression;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 427741, 427787);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode
                f_10306_427945_427988(Microsoft.CodeAnalysis.CSharp.Syntax.SimpleLambdaExpressionSyntax
                this_param)
                {
                    var return_v = this_param.Body;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 427945, 427988);
                    return return_v;
                }


                bool
                f_10306_428001_428040(Microsoft.CodeAnalysis.CSharp.Binder
                this_param)
                {
                    var return_v = this_param.ContainingMethodOrLambdaRequiresValue();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 428001, 428040);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode
                f_10306_428197_428247(Microsoft.CodeAnalysis.CSharp.Syntax.ParenthesizedLambdaExpressionSyntax
                this_param)
                {
                    var return_v = this_param.Body;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 428197, 428247);
                    return return_v;
                }


                bool
                f_10306_428260_428299(Microsoft.CodeAnalysis.CSharp.Binder
                this_param)
                {
                    var return_v = this_param.ContainingMethodOrLambdaRequiresValue();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 428260, 428299);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                f_10306_428448_428496(Microsoft.CodeAnalysis.CSharp.Syntax.ArrowExpressionClauseSyntax
                this_param)
                {
                    var return_v = this_param.Expression;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 428448, 428496);
                    return return_v;
                }


                bool
                f_10306_428509_428548(Microsoft.CodeAnalysis.CSharp.Binder
                this_param)
                {
                    var return_v = this_param.ContainingMethodOrLambdaRequiresValue();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 428509, 428548);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundConditionalAccess
                f_10306_429083_429157(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.ConditionalAccessExpressionSyntax
                node, Microsoft.CodeAnalysis.CSharp.BoundExpression
                receiver, Microsoft.CodeAnalysis.CSharp.BoundExpression
                access, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.GenerateBadConditionalAccessNodeError(node, receiver, access, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 429083, 429157);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                f_10306_429210_429268(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.SpecialType
                typeId, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.Syntax.ConditionalAccessExpressionSyntax
                node)
                {
                    var return_v = this_param.GetSpecialType(typeId, diagnostics, (Microsoft.CodeAnalysis.SyntaxNode)node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 429210, 429268);
                    return return_v;
                }


                bool
                f_10306_429603_429625(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                this_param)
                {
                    var return_v = this_param.IsValueType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 429603, 429625);
                    return return_v;
                }


                bool
                f_10306_429630_429657(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                type)
                {
                    var return_v = type.IsNullableType();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 429630, 429657);
                    return return_v;
                }


                bool
                f_10306_429662_429685(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                type)
                {
                    var return_v = type.IsVoidType();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 429662, 429685);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                f_10306_429732_429796(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.SpecialType
                typeId, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.Syntax.ConditionalAccessExpressionSyntax
                node)
                {
                    var return_v = this_param.GetSpecialType(typeId, diagnostics, (Microsoft.CodeAnalysis.SyntaxNode)node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 429732, 429796);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                f_10306_429732_429818(Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                this_param, params Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol[]
                typeArguments)
                {
                    var return_v = this_param.Construct(typeArguments);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 429732, 429818);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundConditionalAccess
                f_10306_429857_429919(Microsoft.CodeAnalysis.CSharp.Syntax.ConditionalAccessExpressionSyntax
                syntax, Microsoft.CodeAnalysis.CSharp.BoundExpression
                receiver, Microsoft.CodeAnalysis.CSharp.BoundExpression
                accessExpression, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                type)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.BoundConditionalAccess((Microsoft.CodeAnalysis.SyntaxNode)syntax, receiver, accessExpression, type);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 429857, 429919);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 425233, 429931);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 425233, 429931);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private bool ContainingMethodOrLambdaRequiresValue()
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10306, 429943, 430301);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 430020, 430084);

                var
                containingMethod = f_10306_430043_430067() as MethodSymbol
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 430098, 430290);

                return
                                (object)containingMethod == null || (DynAbs.Tracing.TraceSender.Expression_False(10306, 430122, 430289) || f_10306_430179_430208_M(!containingMethod.ReturnsVoid) && (DynAbs.Tracing.TraceSender.Expression_True(10306, 430179, 430289) && !f_10306_430234_430289(containingMethod, f_10306_430272_430288(this))));
                DynAbs.Tracing.TraceSender.TraceExitMethod(10306, 429943, 430301);

                Microsoft.CodeAnalysis.CSharp.Symbol?
                f_10306_430043_430067()
                {
                    var return_v = ContainingMemberOrLambda;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 430043, 430067);
                    return return_v;
                }


                bool
                f_10306_430179_430208_M(bool
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 430179, 430208);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                f_10306_430272_430288(Microsoft.CodeAnalysis.CSharp.Binder
                this_param)
                {
                    var return_v = this_param.Compilation;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 430272, 430288);
                    return return_v;
                }


                bool
                f_10306_430234_430289(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                method, Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                compilation)
                {
                    var return_v = method.IsAsyncReturningTask(compilation);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 430234, 430289);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 429943, 430301);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 429943, 430301);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private BoundConditionalAccess GenerateBadConditionalAccessNodeError(ConditionalAccessExpressionSyntax node, BoundExpression receiver, BoundExpression access, DiagnosticBag diagnostics)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10306, 430313, 431119);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 430523, 430562);

                var
                operatorToken = f_10306_430543_430561(node)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 430701, 430839);

                DiagnosticInfo
                diagnosticInfo = f_10306_430733_430838(ErrorCode.ERR_BadUnaryOp, f_10306_430780_430821(operatorToken.Kind()), f_10306_430823_430837(access))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 430853, 430932);

                f_10306_430853_430931(diagnostics, f_10306_430869_430930(diagnosticInfo, operatorToken.GetLocation()));
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 430946, 430998);

                receiver = f_10306_430957_430997(this, receiver.Syntax, receiver);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 431014, 431108);

                return f_10306_431021_431107(node, receiver, access, f_10306_431072_431089(this), hasErrors: true);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10306, 430313, 431119);

                Microsoft.CodeAnalysis.SyntaxToken
                f_10306_430543_430561(Microsoft.CodeAnalysis.CSharp.Syntax.ConditionalAccessExpressionSyntax
                this_param)
                {
                    var return_v = this_param.OperatorToken;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 430543, 430561);
                    return return_v;
                }


                string
                f_10306_430780_430821(Microsoft.CodeAnalysis.CSharp.SyntaxKind
                kind)
                {
                    var return_v = SyntaxFacts.GetText(kind);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 430780, 430821);
                    return return_v;
                }


                object
                f_10306_430823_430837(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.Display;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 430823, 430837);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo
                f_10306_430733_430838(Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, params object[]
                args)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo(code, args);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 430733, 430838);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSDiagnostic
                f_10306_430869_430930(Microsoft.CodeAnalysis.DiagnosticInfo
                info, Microsoft.CodeAnalysis.Location
                location)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.CSDiagnostic(info, location);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 430869, 430930);
                    return return_v;
                }


                int
                f_10306_430853_430931(Microsoft.CodeAnalysis.DiagnosticBag
                this_param, Microsoft.CodeAnalysis.CSharp.CSDiagnostic
                diag)
                {
                    this_param.Add((Microsoft.CodeAnalysis.Diagnostic)diag);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 430853, 430931);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.BoundBadExpression
                f_10306_430957_430997(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.CSharp.BoundExpression
                childNode)
                {
                    var return_v = this_param.BadExpression(syntax, childNode);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 430957, 430997);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                f_10306_431072_431089(Microsoft.CodeAnalysis.CSharp.Binder
                this_param)
                {
                    var return_v = this_param.CreateErrorType();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 431072, 431089);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundConditionalAccess
                f_10306_431021_431107(Microsoft.CodeAnalysis.CSharp.Syntax.ConditionalAccessExpressionSyntax
                syntax, Microsoft.CodeAnalysis.CSharp.BoundExpression
                receiver, Microsoft.CodeAnalysis.CSharp.BoundExpression
                accessExpression, Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                type, bool
                hasErrors)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.BoundConditionalAccess((Microsoft.CodeAnalysis.SyntaxNode)syntax, receiver, accessExpression, (Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol)type, hasErrors: hasErrors);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 431021, 431107);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 430313, 431119);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 430313, 431119);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private BoundExpression BindMemberBindingExpression(MemberBindingExpressionSyntax node, bool invoked, bool indexed, DiagnosticBag diagnostics)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10306, 431131, 431565);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 431298, 431377);

                BoundExpression
                receiver = f_10306_431325_431376(this, node, diagnostics)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 431393, 431520);

                var
                memberAccess = f_10306_431412_431519(this, node, receiver, f_10306_431458_431467(node), f_10306_431469_431487(node), invoked, indexed, diagnostics)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 431534, 431554);

                return memberAccess;
                DynAbs.Tracing.TraceSender.TraceExitMethod(10306, 431131, 431565);

                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_431325_431376(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.MemberBindingExpressionSyntax
                binding, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.GetReceiverForConditionalBinding((Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)binding, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 431325, 431376);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Syntax.SimpleNameSyntax
                f_10306_431458_431467(Microsoft.CodeAnalysis.CSharp.Syntax.MemberBindingExpressionSyntax
                this_param)
                {
                    var return_v = this_param.Name;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 431458, 431467);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SyntaxToken
                f_10306_431469_431487(Microsoft.CodeAnalysis.CSharp.Syntax.MemberBindingExpressionSyntax
                this_param)
                {
                    var return_v = this_param.OperatorToken;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 431469, 431487);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_431412_431519(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.MemberBindingExpressionSyntax
                node, Microsoft.CodeAnalysis.CSharp.BoundExpression
                boundLeft, Microsoft.CodeAnalysis.CSharp.Syntax.SimpleNameSyntax
                right, Microsoft.CodeAnalysis.SyntaxToken
                operatorToken, bool
                invoked, bool
                indexed, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.BindMemberAccessWithBoundLeft((Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)node, boundLeft, right, operatorToken, invoked, indexed, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 431412, 431519);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 431131, 431565);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 431131, 431565);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private BoundExpression BindElementBindingExpression(ElementBindingExpressionSyntax node, DiagnosticBag diagnostics)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10306, 431577, 431943);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 431718, 431797);

                BoundExpression
                receiver = f_10306_431745_431796(this, node, diagnostics)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 431813, 431898);

                var
                memberAccess = f_10306_431832_431897(this, node, receiver, f_10306_431866_431883(node), diagnostics)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 431912, 431932);

                return memberAccess;
                DynAbs.Tracing.TraceSender.TraceExitMethod(10306, 431577, 431943);

                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_431745_431796(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.ElementBindingExpressionSyntax
                binding, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.GetReceiverForConditionalBinding((Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)binding, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 431745, 431796);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Syntax.BracketedArgumentListSyntax
                f_10306_431866_431883(Microsoft.CodeAnalysis.CSharp.Syntax.ElementBindingExpressionSyntax
                this_param)
                {
                    var return_v = this_param.ArgumentList;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 431866, 431883);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_431832_431897(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.ElementBindingExpressionSyntax
                node, Microsoft.CodeAnalysis.CSharp.BoundExpression
                receiver, Microsoft.CodeAnalysis.CSharp.Syntax.BracketedArgumentListSyntax
                argumentList, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.BindElementAccess((Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)node, receiver, argumentList, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 431832, 431897);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 431577, 431943);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 431577, 431943);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private static CSharpSyntaxNode GetConditionalReceiverSyntax(ConditionalAccessExpressionSyntax node)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterStaticMethod(10306, 431955, 432483);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 432080, 432107);

                f_10306_432080_432106(node != null);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 432121, 432159);

                f_10306_432121_432158(f_10306_432134_432149(node) != null);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 432175, 432206);

                var
                receiver = f_10306_432190_432205(node)
                ;
                try
                {
                    while ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 432220, 432440) || true) && (f_10306_432227_432278(receiver, SyntaxKind.ParenthesizedExpression))
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 432220, 432440);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 432312, 432376);

                        receiver = f_10306_432323_432375(((ParenthesizedExpressionSyntax)receiver));
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 432394, 432425);

                        f_10306_432394_432424(receiver != null);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 432220, 432440);
                    }
                }
                catch (System.Exception)
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoopByException(10306, 432220, 432440);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoop(10306, 432220, 432440);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 432456, 432472);

                return receiver;
                DynAbs.Tracing.TraceSender.TraceExitStaticMethod(10306, 431955, 432483);

                int
                f_10306_432080_432106(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 432080, 432106);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                f_10306_432134_432149(Microsoft.CodeAnalysis.CSharp.Syntax.ConditionalAccessExpressionSyntax
                this_param)
                {
                    var return_v = this_param.Expression;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 432134, 432149);
                    return return_v;
                }


                int
                f_10306_432121_432158(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 432121, 432158);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                f_10306_432190_432205(Microsoft.CodeAnalysis.CSharp.Syntax.ConditionalAccessExpressionSyntax
                this_param)
                {
                    var return_v = this_param.Expression;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 432190, 432205);
                    return return_v;
                }


                bool
                f_10306_432227_432278(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                node, Microsoft.CodeAnalysis.CSharp.SyntaxKind
                kind)
                {
                    var return_v = node.IsKind(kind);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 432227, 432278);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                f_10306_432323_432375(Microsoft.CodeAnalysis.CSharp.Syntax.ParenthesizedExpressionSyntax
                this_param)
                {
                    var return_v = this_param.Expression;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 432323, 432375);
                    return return_v;
                }


                int
                f_10306_432394_432424(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 432394, 432424);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 431955, 432483);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 431955, 432483);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private BoundExpression GetReceiverForConditionalBinding(ExpressionSyntax binding, DiagnosticBag diagnostics)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10306, 432495, 433865);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 432629, 432716);

                var
                conditionalAccessNode = f_10306_432657_432715(binding)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 432730, 432774);

                f_10306_432730_432773(conditionalAccessNode != null);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 432790, 432852);

                BoundExpression
                receiver = f_10306_432817_432851(this)
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 432866, 433346) || true) && (DynAbs.Tracing.TraceSender.TraceConditionalAccessExpression(receiver, 10306, 432870, 432886)?.Syntax != f_10306_432890_432941(conditionalAccessNode))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 432866, 433346);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 433254, 433331);

                    receiver = f_10306_433265_433330(this, conditionalAccessNode, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 432866, 433346);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 433404, 433437);

                var
                receiverType = f_10306_433423_433436(receiver)
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 433474, 433650) || true) && (!f_10306_433479_433504(receiverType, null) && (DynAbs.Tracing.TraceSender.Expression_True(10306, 433478, 433545) && f_10306_433508_433537(receiverType) == true))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 433474, 433650);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 433579, 433635);

                    receiverType = f_10306_433594_433634(receiverType);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 433474, 433650);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 433666, 433824);

                receiver = new BoundConditionalReceiver(receiver.Syntax, 0, receiverType ?? (DynAbs.Tracing.TraceSender.Expression_Null<Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?>(10306, 433726, 433759) ?? f_10306_433742_433759(this)), hasErrors: f_10306_433772_433790(receiver)) { WasCompilerGenerated = DynAbs.Tracing.TraceSender.TraceInitializationWrapper(() => true, 10306, 433677, 433823) };
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 433838, 433854);

                return receiver;
                DynAbs.Tracing.TraceSender.TraceExitMethod(10306, 432495, 433865);

                Microsoft.CodeAnalysis.CSharp.Syntax.ConditionalAccessExpressionSyntax?
                f_10306_432657_432715(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                node)
                {
                    var return_v = SyntaxFactory.FindConditionalAccessNodeForBinding((Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode)node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 432657, 432715);
                    return return_v;
                }


                int
                f_10306_432730_432773(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 432730, 432773);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression?
                f_10306_432817_432851(Microsoft.CodeAnalysis.CSharp.Binder
                this_param)
                {
                    var return_v = this_param.ConditionalReceiverExpression;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 432817, 432851);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode
                f_10306_432890_432941(Microsoft.CodeAnalysis.CSharp.Syntax.ConditionalAccessExpressionSyntax
                node)
                {
                    var return_v = GetConditionalReceiverSyntax(node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 432890, 432941);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_433265_433330(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.ConditionalAccessExpressionSyntax
                node, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.BindConditionalAccessReceiver(node, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 433265, 433330);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?
                f_10306_433423_433436(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 433423, 433436);
                    return return_v;
                }


                bool
                f_10306_433479_433504(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?
                this_param, object
                obj)
                {
                    var return_v = this_param.Equals(obj);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 433479, 433504);
                    return return_v;
                }


                bool
                f_10306_433508_433537(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                type)
                {
                    var return_v = type.IsNullableType();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 433508, 433537);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                f_10306_433594_433634(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                type)
                {
                    var return_v = type.GetNullableUnderlyingType();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 433594, 433634);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                f_10306_433742_433759(Microsoft.CodeAnalysis.CSharp.Binder
                this_param)
                {
                    var return_v = this_param.CreateErrorType();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 433742, 433759);
                    return return_v;
                }


                bool
                f_10306_433772_433790(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.HasErrors;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 433772, 433790);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 432495, 433865);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 432495, 433865);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private BoundExpression BindConditionalAccessReceiver(ConditionalAccessExpressionSyntax node, DiagnosticBag diagnostics)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10306, 433877, 435947);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 434022, 434059);

                var
                receiverSyntax = f_10306_434043_434058(node)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 434073, 434145);

                var
                receiver = f_10306_434088_434144(this, receiverSyntax, diagnostics)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 434159, 434215);

                receiver = f_10306_434170_434214(this, receiver, diagnostics);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 434231, 434321) || true) && (f_10306_434235_434256(receiver))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 434231, 434321);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 434290, 434306);

                    return receiver;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 434231, 434321);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 434337, 434376);

                var
                operatorToken = f_10306_434357_434375(node)
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 434392, 434839) || true) && (f_10306_434396_434409(receiver) == BoundKind.UnboundLambda)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 434392, 434839);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 434470, 434518);

                    var
                    msgId = f_10306_434482_434517(((UnboundLambda)receiver))
                    ;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 434536, 434676);

                    DiagnosticInfo
                    diagnosticInfo = f_10306_434568_434675(ErrorCode.ERR_BadUnaryOp, f_10306_434615_434656(operatorToken.Kind()), f_10306_434658_434674(msgId))
                    ;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 434694, 434759);

                    f_10306_434694_434758(diagnostics, f_10306_434710_434757(diagnosticInfo, f_10306_434743_434756(node)));
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 434777, 434824);

                    return f_10306_434784_434823(this, receiverSyntax, receiver);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 434392, 434839);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 434855, 434888);

                var
                receiverType = f_10306_434874_434887(receiver)
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 434981, 435239) || true) && ((object)receiverType == null)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 434981, 435239);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 435047, 435159);

                    f_10306_435047_435158(diagnostics, ErrorCode.ERR_BadUnaryOp, operatorToken.GetLocation(), operatorToken.Text, f_10306_435141_435157(receiver));
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 435177, 435224);

                    return f_10306_435184_435223(this, receiverSyntax, receiver);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 434981, 435239);
                }

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 435298, 435549) || true) && (f_10306_435302_435327(receiverType))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 435298, 435549);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 435361, 435469);

                    f_10306_435361_435468(diagnostics, ErrorCode.ERR_BadUnaryOp, operatorToken.GetLocation(), operatorToken.Text, receiverType);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 435487, 435534);

                    return f_10306_435494_435533(this, receiverSyntax, receiver);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 435298, 435549);
                }

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 435565, 435904) || true) && (f_10306_435569_435593(receiverType) && (DynAbs.Tracing.TraceSender.Expression_True(10306, 435569, 435627) && !f_10306_435598_435627(receiverType)))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10306, 435565, 435904);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 435716, 435824);

                    f_10306_435716_435823(diagnostics, ErrorCode.ERR_BadUnaryOp, operatorToken.GetLocation(), operatorToken.Text, receiverType);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 435842, 435889);

                    return f_10306_435849_435888(this, receiverSyntax, receiver);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10306, 435565, 435904);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10306, 435920, 435936);

                return receiver;
                DynAbs.Tracing.TraceSender.TraceExitMethod(10306, 433877, 435947);

                Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                f_10306_434043_434058(Microsoft.CodeAnalysis.CSharp.Syntax.ConditionalAccessExpressionSyntax
                this_param)
                {
                    var return_v = this_param.Expression;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 434043, 434058);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_434088_434144(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                node, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.BindRValueWithoutTargetType(node, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 434088, 434144);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10306_434170_434214(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                expr, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.MakeMemberAccessValue(expr, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 434170, 434214);
                    return return_v;
                }


                bool
                f_10306_434235_434256(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.HasAnyErrors;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 434235, 434256);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SyntaxToken
                f_10306_434357_434375(Microsoft.CodeAnalysis.CSharp.Syntax.ConditionalAccessExpressionSyntax
                this_param)
                {
                    var return_v = this_param.OperatorToken;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 434357, 434375);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundKind
                f_10306_434396_434409(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.Kind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 434396, 434409);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.MessageID
                f_10306_434482_434517(Microsoft.CodeAnalysis.CSharp.UnboundLambda
                this_param)
                {
                    var return_v = this_param.MessageID;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 434482, 434517);
                    return return_v;
                }


                string
                f_10306_434615_434656(Microsoft.CodeAnalysis.CSharp.SyntaxKind
                kind)
                {
                    var return_v = SyntaxFacts.GetText(kind);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 434615, 434656);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.LocalizableErrorArgument
                f_10306_434658_434674(Microsoft.CodeAnalysis.CSharp.MessageID
                id)
                {
                    var return_v = id.Localize();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 434658, 434674);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo
                f_10306_434568_434675(Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, params object[]
                args)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo(code, args);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 434568, 434675);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Location
                f_10306_434743_434756(Microsoft.CodeAnalysis.CSharp.Syntax.ConditionalAccessExpressionSyntax
                this_param)
                {
                    var return_v = this_param.Location;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 434743, 434756);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSDiagnostic
                f_10306_434710_434757(Microsoft.CodeAnalysis.DiagnosticInfo
                info, Microsoft.CodeAnalysis.Location
                location)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.CSDiagnostic(info, location);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 434710, 434757);
                    return return_v;
                }


                int
                f_10306_434694_434758(Microsoft.CodeAnalysis.DiagnosticBag
                this_param, Microsoft.CodeAnalysis.CSharp.CSDiagnostic
                diag)
                {
                    this_param.Add((Microsoft.CodeAnalysis.Diagnostic)diag);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 434694, 434758);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.BoundBadExpression
                f_10306_434784_434823(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                syntax, Microsoft.CodeAnalysis.CSharp.BoundExpression
                childNode)
                {
                    var return_v = this_param.BadExpression((Microsoft.CodeAnalysis.SyntaxNode)syntax, childNode);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 434784, 434823);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?
                f_10306_434874_434887(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 434874, 434887);
                    return return_v;
                }


                object
                f_10306_435141_435157(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.Display;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 435141, 435157);
                    return return_v;
                }


                int
                f_10306_435047_435158(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, Microsoft.CodeAnalysis.Location
                location, params object[]
                args)
                {
                    Error(diagnostics, code, location, args);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 435047, 435158);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.BoundBadExpression
                f_10306_435184_435223(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                syntax, Microsoft.CodeAnalysis.CSharp.BoundExpression
                childNode)
                {
                    var return_v = this_param.BadExpression((Microsoft.CodeAnalysis.SyntaxNode)syntax, childNode);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 435184, 435223);
                    return return_v;
                }


                bool
                f_10306_435302_435327(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                type)
                {
                    var return_v = type.IsVoidType();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 435302, 435327);
                    return return_v;
                }


                int
                f_10306_435361_435468(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, Microsoft.CodeAnalysis.Location
                location, params object[]
                args)
                {
                    Error(diagnostics, code, location, args);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 435361, 435468);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.BoundBadExpression
                f_10306_435494_435533(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                syntax, Microsoft.CodeAnalysis.CSharp.BoundExpression
                childNode)
                {
                    var return_v = this_param.BadExpression((Microsoft.CodeAnalysis.SyntaxNode)syntax, childNode);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 435494, 435533);
                    return return_v;
                }


                bool
                f_10306_435569_435593(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                this_param)
                {
                    var return_v = this_param.IsValueType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10306, 435569, 435593);
                    return return_v;
                }


                bool
                f_10306_435598_435627(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                type)
                {
                    var return_v = type.IsNullableType();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 435598, 435627);
                    return return_v;
                }


                int
                f_10306_435716_435823(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, Microsoft.CodeAnalysis.Location
                location, params object[]
                args)
                {
                    Error(diagnostics, code, location, args);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 435716, 435823);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.BoundBadExpression
                f_10306_435849_435888(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                syntax, Microsoft.CodeAnalysis.CSharp.BoundExpression
                childNode)
                {
                    var return_v = this_param.BadExpression((Microsoft.CodeAnalysis.SyntaxNode)syntax, childNode);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10306, 435849, 435888);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10306, 433877, 435947);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10306, 433877, 435947);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }
    }
}
