// Licensed to the .NET Foundation under one or more agreements.
// The .NET Foundation licenses this file to you under the MIT license.
// See the LICENSE file in the project root for more information.

using System;
using System.Collections.Concurrent;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Diagnostics;
using System.Diagnostics.CodeAnalysis;
using System.IO;
using System.Linq;
using System.Reflection;
using System.Reflection.Metadata;
using System.Threading;
using Microsoft.Cci;
using Microsoft.CodeAnalysis;
using Microsoft.CodeAnalysis.CodeGen;
using Microsoft.CodeAnalysis.CSharp.Emit;
using Microsoft.CodeAnalysis.CSharp.Symbols;
using Microsoft.CodeAnalysis.CSharp.Syntax;
using Microsoft.CodeAnalysis.Diagnostics;
using Microsoft.CodeAnalysis.Emit;
using Microsoft.CodeAnalysis.Operations;
using Microsoft.CodeAnalysis.PooledObjects;
using Microsoft.CodeAnalysis.Symbols;
using Microsoft.CodeAnalysis.Text;
using Roslyn.Utilities;
using static Microsoft.CodeAnalysis.CSharp.Binder;

namespace Microsoft.CodeAnalysis.CSharp
{
    public sealed partial class CSharpCompilation : Compilation
    {
        private readonly CSharpCompilationOptions _options;

        private readonly Lazy<Imports> _globalImports;

        private readonly Lazy<Imports> _previousSubmissionImports;

        private readonly Lazy<AliasSymbol> _globalNamespaceAlias;

        private readonly Lazy<ImplicitNamedTypeSymbol?> _scriptClass;

        private TypeSymbol? _lazyHostObjectTypeSymbol;

        private ConcurrentSet<ImportInfo>? _lazyImportInfos;

        private ImmutableArray<Diagnostic> _lazyClsComplianceDiagnostics;

        private Conversions? _conversions;

        internal Conversions Conversions
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 3346, 3617);

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 3382, 3562) || true) && (_conversions == null)
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 3382, 3562);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 3448, 3543);

                        f_10038_3448_3542(ref _conversions, f_10038_3494_3535(f_10038_3494_3523(this)), null);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 3382, 3562);
                    }
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 3582, 3602);

                    return _conversions;
                    DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 3346, 3617);

                    Microsoft.CodeAnalysis.CSharp.BuckStopsHereBinder
                    f_10038_3494_3523(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                    compilation)
                    {
                        var return_v = new Microsoft.CodeAnalysis.CSharp.BuckStopsHereBinder(compilation);
                        DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 3494, 3523);
                        return return_v;
                    }


                    Microsoft.CodeAnalysis.CSharp.Conversions
                    f_10038_3494_3535(Microsoft.CodeAnalysis.CSharp.BuckStopsHereBinder
                    this_param)
                    {
                        var return_v = this_param.Conversions;
                        DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 3494, 3535);
                        return return_v;
                    }


                    Microsoft.CodeAnalysis.CSharp.Conversions?
                    f_10038_3448_3542(ref Microsoft.CodeAnalysis.CSharp.Conversions?
                    location1, Microsoft.CodeAnalysis.CSharp.Conversions
                    value, Microsoft.CodeAnalysis.CSharp.Conversions?
                    comparand)
                    {
                        var return_v = Interlocked.CompareExchange(ref location1, value, comparand);
                        DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 3448, 3542);
                        return return_v;
                    }

                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 3289, 3628);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 3289, 3628);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        private readonly AnonymousTypeManager _anonymousTypeManager;

        private NamespaceSymbol? _lazyGlobalNamespace;

        internal readonly BuiltInOperators builtInOperators;

        private SourceAssemblySymbol? _lazyAssemblySymbol;

        private ReferenceManager _referenceManager;

        private readonly SyntaxAndDeclarationManager _syntaxAndDeclarations;

        private EntryPoint? _lazyEntryPoint;

        private ThreeState _lazyEmitNullablePublicOnly;

        private HashSet<SyntaxTree>? _lazyCompilationUnitCompletedTrees;

        internal ConcurrentDictionary<object, NullableWalker.Data>? NullableAnalysisData;

        public override string Language
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 6449, 6528);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 6485, 6513);

                    return LanguageNames.CSharp;
                    DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 6449, 6528);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 6393, 6539);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 6393, 6539);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override bool IsCaseSensitive
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 6612, 6675);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 6648, 6660);

                    return true;
                    DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 6612, 6675);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 6551, 6686);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 6551, 6686);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public new CSharpCompilationOptions Options
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 6872, 6939);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 6908, 6924);

                    return _options;
                    DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 6872, 6939);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 6804, 6950);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 6804, 6950);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        internal AnonymousTypeManager AnonymousTypeManager
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 7037, 7117);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 7073, 7102);

                    return _anonymousTypeManager;
                    DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 7037, 7117);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 6962, 7128);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 6962, 7128);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        internal override CommonAnonymousTypeManager CommonAnonymousTypeManager
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 7236, 7315);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 7272, 7300);

                    return f_10038_7279_7299();
                    DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 7236, 7315);

                    Microsoft.CodeAnalysis.CSharp.Symbols.AnonymousTypeManager
                    f_10038_7279_7299()
                    {
                        var return_v = AnonymousTypeManager;
                        DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 7279, 7299);
                        return return_v;
                    }

                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 7140, 7326);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 7140, 7326);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        internal bool FeatureStrictEnabled
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 7734, 7762);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 7737, 7762);
                    return f_10038_7737_7754(this, "strict") != null; DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 7734, 7762);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 7734, 7762);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 7734, 7762);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        internal bool IsPeVerifyCompatEnabled
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 8233, 8317);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 8236, 8317);
                    return f_10038_8236_8251() < LanguageVersion.CSharp7_2 || (DynAbs.Tracing.TraceSender.Expression_False(10038, 8236, 8317) || f_10038_8283_8309(this, "peverify-compat") != null); DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 8233, 8317);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 8233, 8317);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 8233, 8317);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        internal bool IsNullableAnalysisEnabledIn(SyntaxNode syntax)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 8698, 8879);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 8783, 8868);

                return f_10038_8790_8867(this, f_10038_8836_8853(syntax), f_10038_8855_8866(syntax));
                DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 8698, 8879);

                Microsoft.CodeAnalysis.SyntaxTree
                f_10038_8836_8853(Microsoft.CodeAnalysis.SyntaxNode
                this_param)
                {
                    var return_v = this_param.SyntaxTree;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 8836, 8853);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Text.TextSpan
                f_10038_8855_8866(Microsoft.CodeAnalysis.SyntaxNode
                this_param)
                {
                    var return_v = this_param.Span;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 8855, 8866);
                    return return_v;
                }


                bool
                f_10038_8790_8867(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param, Microsoft.CodeAnalysis.SyntaxTree
                tree, Microsoft.CodeAnalysis.Text.TextSpan
                span)
                {
                    var return_v = this_param.IsNullableAnalysisEnabledIn((Microsoft.CodeAnalysis.CSharp.CSharpSyntaxTree)tree, span);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 8790, 8867);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 8698, 8879);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 8698, 8879);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        internal bool IsNullableAnalysisEnabledIn(CSharpSyntaxTree tree, TextSpan span)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 9228, 9526);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 9332, 9515);

                return f_10038_9339_9365(this) ?? (DynAbs.Tracing.TraceSender.Expression_Null<bool?>(10038, 9339, 9514) ?? f_10038_9386_9422(tree, span) ?? (DynAbs.Tracing.TraceSender.Expression_Null<bool?>(10038, 9386, 9514) ?? (f_10038_9444_9474(f_10038_9444_9451()) & NullableContextOptions.Warnings) != 0));
                DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 9228, 9526);

                bool?
                f_10038_9339_9365(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param)
                {
                    var return_v = this_param.GetNullableAnalysisValue();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 9339, 9365);
                    return return_v;
                }


                bool?
                f_10038_9386_9422(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxTree
                this_param, Microsoft.CodeAnalysis.Text.TextSpan
                span)
                {
                    var return_v = this_param.IsNullableAnalysisEnabled(span);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 9386, 9422);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions
                f_10038_9444_9451()
                {
                    var return_v = Options;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 9444, 9451);
                    return return_v;
                }


                Microsoft.CodeAnalysis.NullableContextOptions
                f_10038_9444_9474(Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions
                this_param)
                {
                    var return_v = this_param.NullableContextOptions;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 9444, 9474);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 9228, 9526);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 9228, 9526);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        internal bool IsNullableAnalysisEnabledIn(MethodSymbol method)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 10115, 10302);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 10202, 10291);

                return f_10038_10209_10235(this) ?? (DynAbs.Tracing.TraceSender.Expression_Null<bool?>(10038, 10209, 10290) ?? f_10038_10256_10290(method));
                DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 10115, 10302);

                bool?
                f_10038_10209_10235(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param)
                {
                    var return_v = this_param.GetNullableAnalysisValue();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 10209, 10235);
                    return return_v;
                }


                bool
                f_10038_10256_10290(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                this_param)
                {
                    var return_v = this_param.IsNullableAnalysisEnabled();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 10256, 10290);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 10115, 10302);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 10115, 10302);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        internal bool IsNullableAnalysisEnabledAlways
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 11103, 11298);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 11139, 11178);

                    var
                    value = f_10038_11151_11177(this)
                    ;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 11207, 11229);

                    return value != false;
                    DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 11103, 11298);

                    bool?
                    f_10038_11151_11177(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                    this_param)
                    {
                        var return_v = this_param.GetNullableAnalysisValue();
                        DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 11151, 11177);
                        return return_v;
                    }

                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 11033, 11309);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 11033, 11309);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        private bool? GetNullableAnalysisValue()
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 11511, 11762);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 11576, 11751);

                return f_10038_11583_11615(this, "run-nullable-analysis") switch
                {
                    "always" when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 11655, 11671) && DynAbs.Tracing.TraceSender.Expression_True(10038, 11655, 11671))
    => true,
                    "never" when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 11690, 11706) && DynAbs.Tracing.TraceSender.Expression_True(10038, 11690, 11706))
    => false,
                    _ when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 11725, 11734) && DynAbs.Tracing.TraceSender.Expression_True(10038, 11725, 11734))
    => null,
                };
                DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 11511, 11762);

                string?
                f_10038_11583_11615(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param, string
                p)
                {
                    var return_v = this_param.Feature(p);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 11583, 11615);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 11511, 11762);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 11511, 11762);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public LanguageVersion LanguageVersion
        {
            get;
        }

        protected override INamedTypeSymbol CommonCreateErrorTypeSymbol(INamespaceOrTypeSymbol? container, string name, int arity)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 12006, 12351);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 12153, 12340);

                return f_10038_12160_12339(f_10038_12160_12321(f_10038_12213_12266(container, nameof(container)), name, arity, errorInfo: null));
                DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 12006, 12351);

                Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceOrTypeSymbol?
                f_10038_12213_12266(Microsoft.CodeAnalysis.INamespaceOrTypeSymbol?
                symbol, string
                paramName)
                {
                    var return_v = symbol.EnsureCSharpSymbolOrNull(paramName);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 12213, 12266);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.ExtendedErrorTypeSymbol
                f_10038_12160_12321(Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceOrTypeSymbol?
                containingSymbol, string
                name, int
                arity, Microsoft.CodeAnalysis.DiagnosticInfo?
                errorInfo)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.Symbols.ExtendedErrorTypeSymbol(containingSymbol, name, arity, errorInfo: errorInfo);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 12160, 12321);
                    return return_v;
                }


                Microsoft.CodeAnalysis.INamedTypeSymbol?
                f_10038_12160_12339(Microsoft.CodeAnalysis.CSharp.Symbols.ExtendedErrorTypeSymbol
                symbol)
                {
                    var return_v = symbol.GetPublicSymbol();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 12160, 12339);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 12006, 12351);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 12006, 12351);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        protected override INamespaceSymbol CommonCreateErrorNamespaceSymbol(INamespaceSymbol container, string name)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 12363, 12670);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 12497, 12659);

                return f_10038_12504_12658(f_10038_12504_12640(f_10038_12556_12609(container, nameof(container)), name));
                DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 12363, 12670);

                Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceSymbol?
                f_10038_12556_12609(Microsoft.CodeAnalysis.INamespaceSymbol
                symbol, string
                paramName)
                {
                    var return_v = symbol.EnsureCSharpSymbolOrNull(paramName);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 12556, 12609);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.MissingNamespaceSymbol
                f_10038_12504_12640(Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceSymbol
                containingNamespace, string
                name)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.Symbols.MissingNamespaceSymbol(containingNamespace, name);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 12504, 12640);
                    return return_v;
                }


                Microsoft.CodeAnalysis.INamespaceSymbol?
                f_10038_12504_12658(Microsoft.CodeAnalysis.CSharp.Symbols.MissingNamespaceSymbol
                symbol)
                {
                    var return_v = symbol.GetPublicSymbol();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 12504, 12658);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 12363, 12670);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 12363, 12670);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private static readonly CSharpCompilationOptions s_defaultOptions;

        private static readonly CSharpCompilationOptions s_defaultSubmissionOptions;

        public static CSharpCompilation Create(
                    string? assemblyName,
                    IEnumerable<SyntaxTree>? syntaxTrees = null,
                    IEnumerable<MetadataReference>? references = null,
                    CSharpCompilationOptions? options = null)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterStaticMethod(10038, 13704, 14297);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 13980, 14286);

                return f_10038_13987_14285(assemblyName, options ?? (DynAbs.Tracing.TraceSender.Expression_Null<Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions?>(10038, 14043, 14070) ?? s_defaultOptions), syntaxTrees, references, previousSubmission: null, returnType: null, hostObjectType: null, isSubmission: false);
                DynAbs.Tracing.TraceSender.TraceExitStaticMethod(10038, 13704, 14297);

                Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                f_10038_13987_14285(string?
                assemblyName, Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions
                options, System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.SyntaxTree>?
                syntaxTrees, System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.MetadataReference>?
                references, Microsoft.CodeAnalysis.CSharp.CSharpCompilation?
                previousSubmission, System.Type?
                returnType, System.Type?
                hostObjectType, bool
                isSubmission)
                {
                    var return_v = Create(assemblyName, options, syntaxTrees, references, previousSubmission: previousSubmission, returnType: returnType, hostObjectType: hostObjectType, isSubmission: isSubmission);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 13987, 14285);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 13704, 14297);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 13704, 14297);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public static CSharpCompilation CreateScriptCompilation(
                    string assemblyName,
                    SyntaxTree? syntaxTree = null,
                    IEnumerable<MetadataReference>? references = null,
                    CSharpCompilationOptions? options = null,
                    CSharpCompilation? previousScriptCompilation = null,
                    Type? returnType = null,
                    Type? globalsType = null)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterStaticMethod(10038, 14426, 15444);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 14847, 14879);

                f_10038_14847_14878(options);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 14893, 14985);

                f_10038_14893_14984(previousScriptCompilation, returnType, ref globalsType);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 15001, 15433);

                return f_10038_15008_15432(assemblyName, f_10038_15072_15115(DynAbs.Tracing.TraceSender.TraceConditionalAccessExpression(options, 10038, 15064, 15115), true) ?? (DynAbs.Tracing.TraceSender.Expression_Null<Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions?>(10038, 15064, 15145) ?? s_defaultSubmissionOptions), (DynAbs.Tracing.TraceSender.Conditional_F1(10038, 15164, 15184) || (((syntaxTree != null) && DynAbs.Tracing.TraceSender.Conditional_F2(10038, 15187, 15207)) || DynAbs.Tracing.TraceSender.Conditional_F3(10038, 15210, 15262))) ? new[] { syntaxTree } : f_10038_15210_15262(), references, previousScriptCompilation, returnType, globalsType, isSubmission: true);
                DynAbs.Tracing.TraceSender.TraceExitStaticMethod(10038, 14426, 15444);

                int
                f_10038_14847_14878(Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions?
                options)
                {
                    CheckSubmissionOptions((Microsoft.CodeAnalysis.CompilationOptions?)options);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 14847, 14878);
                    return 0;
                }


                int
                f_10038_14893_14984(Microsoft.CodeAnalysis.CSharp.CSharpCompilation?
                previousScriptCompilation, System.Type?
                returnType, ref System.Type?
                globalsType)
                {
                    ValidateScriptCompilationParameters((Microsoft.CodeAnalysis.Compilation?)previousScriptCompilation, returnType, ref globalsType);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 14893, 14984);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions?
                f_10038_15072_15115(Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions
                this_param, bool
                value)
                {
                    var return_v = this_param?.WithReferencesSupersedeLowerVersions(value);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 15072, 15115);
                    return return_v;
                }


                System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.SyntaxTree>
                f_10038_15210_15262()
                {
                    var return_v = SpecializedCollections.EmptyEnumerable<SyntaxTree>();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 15210, 15262);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                f_10038_15008_15432(string
                assemblyName, Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions
                options, System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.SyntaxTree>
                syntaxTrees, System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.MetadataReference>?
                references, Microsoft.CodeAnalysis.CSharp.CSharpCompilation?
                previousSubmission, System.Type?
                returnType, System.Type?
                hostObjectType, bool
                isSubmission)
                {
                    var return_v = Create(assemblyName, options, syntaxTrees, references, previousSubmission, returnType, hostObjectType, isSubmission: isSubmission);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 15008, 15432);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 14426, 15444);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 14426, 15444);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private static CSharpCompilation Create(
                    string? assemblyName,
                    CSharpCompilationOptions options,
                    IEnumerable<SyntaxTree>? syntaxTrees,
                    IEnumerable<MetadataReference>? references,
                    CSharpCompilation? previousSubmission,
                    Type? returnType,
                    Type? hostObjectType,
                    bool isSubmission)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterStaticMethod(10038, 15456, 17726);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 15861, 15897);

                f_10038_15861_15896(options != null);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 15911, 15983);

                f_10038_15911_15982(!isSubmission || (DynAbs.Tracing.TraceSender.Expression_False(10038, 15924, 15981) || f_10038_15941_15981(options)));
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 15999, 16084);

                var
                validatedReferences = f_10038_16025_16083(references)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 16718, 17470);

                var
                compilation = f_10038_16736_17469(assemblyName, options, validatedReferences, previousSubmission, returnType, hostObjectType, isSubmission, referenceManager: null, reuseReferenceManager: false, syntaxAndDeclarations: f_10038_17112_17422(ImmutableArray<SyntaxTree>.Empty, f_10038_17221_17244(options), f_10038_17267_17298(options), CSharp.MessageProvider.Instance, isSubmission, state: null), semanticModelProvider: null)
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 17486, 17612) || true) && (syntaxTrees != null)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 17486, 17612);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 17543, 17597);

                    compilation = f_10038_17557_17596(compilation, syntaxTrees);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 17486, 17612);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 17628, 17682);

                f_10038_17628_17681(compilation._lazyAssemblySymbol is null);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 17696, 17715);

                return compilation;
                DynAbs.Tracing.TraceSender.TraceExitStaticMethod(10038, 15456, 17726);

                int
                f_10038_15861_15896(bool
                b)
                {
                    RoslynDebug.Assert(b);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 15861, 15896);
                    return 0;
                }


                bool
                f_10038_15941_15981(Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions
                this_param)
                {
                    var return_v = this_param.ReferencesSupersedeLowerVersions;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 15941, 15981);
                    return return_v;
                }


                int
                f_10038_15911_15982(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 15911, 15982);
                    return 0;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.MetadataReference>
                f_10038_16025_16083(System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.MetadataReference>?
                references)
                {
                    var return_v = ValidateReferences<CSharpCompilationReference>(references);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 16025, 16083);
                    return return_v;
                }


                string?
                f_10038_17221_17244(Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions
                this_param)
                {
                    var return_v = this_param.ScriptClassName;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 17221, 17244);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SourceReferenceResolver?
                f_10038_17267_17298(Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions
                this_param)
                {
                    var return_v = this_param.SourceReferenceResolver;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 17267, 17298);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.SyntaxAndDeclarationManager
                f_10038_17112_17422(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.SyntaxTree>
                externalSyntaxTrees, string?
                scriptClassName, Microsoft.CodeAnalysis.SourceReferenceResolver?
                resolver, Microsoft.CodeAnalysis.CSharp.MessageProvider
                messageProvider, bool
                isSubmission, Microsoft.CodeAnalysis.CSharp.SyntaxAndDeclarationManager.State
                state)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.SyntaxAndDeclarationManager(externalSyntaxTrees, scriptClassName, resolver, (Microsoft.CodeAnalysis.CommonMessageProvider)messageProvider, isSubmission, state: state);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 17112, 17422);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                f_10038_16736_17469(string?
                assemblyName, Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions
                options, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.MetadataReference>
                references, Microsoft.CodeAnalysis.CSharp.CSharpCompilation?
                previousSubmission, System.Type?
                submissionReturnType, System.Type?
                hostObjectType, bool
                isSubmission, Microsoft.CodeAnalysis.CSharp.CSharpCompilation.ReferenceManager?
                referenceManager, bool
                reuseReferenceManager, Microsoft.CodeAnalysis.CSharp.SyntaxAndDeclarationManager
                syntaxAndDeclarations, Microsoft.CodeAnalysis.SemanticModelProvider?
                semanticModelProvider)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.CSharpCompilation(assemblyName, options, references, previousSubmission, submissionReturnType, hostObjectType, isSubmission, referenceManager: referenceManager, reuseReferenceManager: reuseReferenceManager, syntaxAndDeclarations: syntaxAndDeclarations, semanticModelProvider: semanticModelProvider);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 16736, 17469);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                f_10038_17557_17596(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param, System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.SyntaxTree>
                trees)
                {
                    var return_v = this_param.AddSyntaxTrees(trees);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 17557, 17596);
                    return return_v;
                }


                int
                f_10038_17628_17681(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 17628, 17681);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 15456, 17726);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 15456, 17726);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private CSharpCompilation(
                    string? assemblyName,
                    CSharpCompilationOptions options,
                    ImmutableArray<MetadataReference> references,
                    CSharpCompilation? previousSubmission,
                    Type? submissionReturnType,
                    Type? hostObjectType,
                    bool isSubmission,
                    ReferenceManager? referenceManager,
                    bool reuseReferenceManager,
                    SyntaxAndDeclarationManager syntaxAndDeclarations,
                    SemanticModelProvider? semanticModelProvider,
                    AsyncQueue<CompilationEvent>? eventQueue = null)
        : this(f_10038_18361_18373_C(assemblyName), options, references, previousSubmission, submissionReturnType, hostObjectType, isSubmission, referenceManager, reuseReferenceManager, syntaxAndDeclarations, f_10038_18532_18599(syntaxAndDeclarations.ExternalSyntaxTrees), semanticModelProvider, eventQueue)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterConstructor(10038, 17738, 18657);
                DynAbs.Tracing.TraceSender.TraceExitConstructor(10038, 17738, 18657);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 17738, 18657);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 17738, 18657);
            }
        }

        private CSharpCompilation(
                    string? assemblyName,
                    CSharpCompilationOptions options,
                    ImmutableArray<MetadataReference> references,
                    CSharpCompilation? previousSubmission,
                    Type? submissionReturnType,
                    Type? hostObjectType,
                    bool isSubmission,
                    ReferenceManager? referenceManager,
                    bool reuseReferenceManager,
                    SyntaxAndDeclarationManager syntaxAndDeclarations,
                    IReadOnlyDictionary<string, string> features,
                    SemanticModelProvider? semanticModelProvider,
                    AsyncQueue<CompilationEvent>? eventQueue = null)
        : base(f_10038_19351_19363_C(assemblyName), references, features, isSubmission, semanticModelProvider, eventQueue)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterConstructor(10038, 18669, 21507);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 2160, 2168);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 2210, 2224);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 2266, 2292);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 2338, 2359);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 2463, 2475);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 2564, 2589);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 2861, 2877);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 3159, 3171);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 3840, 3861);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 3899, 3919);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 3967, 3983);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 4478, 4497);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 5114, 5131);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 5189, 5211);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 5364, 5379);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 5741, 5768);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 5972, 6006);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 6360, 6380);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 11916, 11994);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 31777, 31847);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 57318, 57337);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 93850, 93875);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 96010, 96026);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 96077, 96112);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 105387, 105414);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 105438, 105467);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 105836, 105884);
                this._additionalCodegenWarnings = f_10038_105865_105884(); 
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10091, 705, 737);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10091, 968, 987);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10091, 1198, 1223);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10091, 1249, 1272);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10091, 1295, 1320);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10091, 1344, 1378);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 19460, 19539);

                WellKnownMemberSignatureComparer = f_10038_19495_19538(this);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 19553, 19572);

                _options = options;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 19588, 19639);

                this.builtInOperators = f_10038_19612_19638(this);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 19653, 19720);

                _scriptClass = f_10038_19668_19719(BindScriptClass);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 19734, 19788);

                _globalImports = f_10038_19751_19787(BindGlobalImports);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 19802, 19882);

                _previousSubmissionImports = f_10038_19831_19881(ExpandPreviousSubmissionImports);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 19896, 19970);

                _globalNamespaceAlias = f_10038_19920_19969(CreateGlobalNamespaceAlias);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 19984, 20039);

                _anonymousTypeManager = f_10038_20008_20038(this);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 20053, 20141);

                this.LanguageVersion = f_10038_20076_20140(syntaxAndDeclarations.ExternalSyntaxTrees);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 20157, 20620) || true) && (isSubmission)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 20157, 20620);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 20207, 20303);

                    f_10038_20207_20302(previousSubmission == null || (DynAbs.Tracing.TraceSender.Expression_False(10038, 20220, 20301) || f_10038_20250_20283(previousSubmission) == hostObjectType));
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 20321, 20440);

                    this.ScriptCompilationInfo = f_10038_20350_20439(previousSubmission, submissionReturnType, hostObjectType);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 20157, 20620);
                }

                else

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 20157, 20620);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 20506, 20605);

                    f_10038_20506_20604(previousSubmission == null && (DynAbs.Tracing.TraceSender.Expression_True(10038, 20519, 20577) && submissionReturnType == null) && (DynAbs.Tracing.TraceSender.Expression_True(10038, 20519, 20603) && hostObjectType == null));
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 20157, 20620);
                }

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 20636, 21280) || true) && (reuseReferenceManager)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 20636, 21280);

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 20695, 20842) || true) && (referenceManager is null)
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 20695, 20842);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 20765, 20823);

                        throw f_10038_20771_20822(nameof(referenceManager));
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 20695, 20842);
                    }
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 20862, 20914);

                    f_10038_20862_20913(
                                    referenceManager, this);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 20932, 20969);

                    _referenceManager = referenceManager;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 20636, 21280);
                }

                else

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 20636, 21280);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 21035, 21265);

                    _referenceManager = f_10038_21055_21264(f_10038_21098_21128(this), f_10038_21151_21188(f_10038_21151_21163(this)), observedMetadata: DynAbs.Tracing.TraceSender.TraceConditionalAccessExpression(referenceManager, 10038, 21229, 21263)?.ObservedMetadata);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 20636, 21280);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 21296, 21343);

                _syntaxAndDeclarations = syntaxAndDeclarations;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 21359, 21401);

                f_10038_21359_21400(_lazyAssemblySymbol is null);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 21415, 21496) || true) && (f_10038_21419_21429() != null)
                )
                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 21415, 21496);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 21439, 21496);

                    f_10038_21439_21495(f_10038_21439_21449(), f_10038_21461_21494(this));
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 21415, 21496);
                }
                DynAbs.Tracing.TraceSender.TraceExitConstructor(10038, 18669, 21507);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 18669, 21507);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 18669, 21507);
            }
        }

        internal override void ValidateDebugEntryPoint(IMethodSymbol debugEntryPoint, DiagnosticBag diagnostics)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 21519, 22221);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 21648, 21686);

                f_10038_21648_21685(debugEntryPoint != null);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 21812, 21984);

                var
                methodSymbol = (DynAbs.Tracing.TraceSender.Conditional_F1(10038, 21831, 21882) || ((debugEntryPoint is Symbols.PublicModel.MethodSymbol && DynAbs.Tracing.TraceSender.Conditional_F2(10038, 21902, 21976)) || DynAbs.Tracing.TraceSender.Conditional_F3(10038, 21979, 21983))) ? f_10038_21902_21976(((Symbols.PublicModel.MethodSymbol)debugEntryPoint)) : null
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 21998, 22210) || true) && (f_10038_22002_22036_M(DynAbs.Tracing.TraceSender.TraceConditionalAccessExpression(methodSymbol, 10038, 22002, 22036)?.DeclaringCompilation) != this || (DynAbs.Tracing.TraceSender.Expression_False(10038, 22002, 22074) || f_10038_22048_22074_M(!methodSymbol.IsDefinition)))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 21998, 22210);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 22108, 22195);

                    f_10038_22108_22194(diagnostics, ErrorCode.ERR_DebugEntryPointNotSourceMethodDefinition, f_10038_22180_22193());
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 21998, 22210);
                }
                DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 21519, 22221);

                int
                f_10038_21648_21685(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 21648, 21685);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                f_10038_21902_21976(Microsoft.CodeAnalysis.CSharp.Symbols.PublicModel.MethodSymbol
                this_param)
                {
                    var return_v = this_param.UnderlyingMethodSymbol;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 21902, 21976);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSharpCompilation?
                f_10038_22002_22036_M(Microsoft.CodeAnalysis.CSharp.CSharpCompilation?
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 22002, 22036);
                    return return_v;
                }


                bool
                f_10038_22048_22074_M(bool
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 22048, 22074);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Location
                f_10038_22180_22193()
                {
                    var return_v = Location.None;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 22180, 22193);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo
                f_10038_22108_22194(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, Microsoft.CodeAnalysis.Location
                location)
                {
                    var return_v = diagnostics.Add(code, location);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 22108, 22194);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 21519, 22221);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 21519, 22221);
            }
        }

        private static LanguageVersion CommonLanguageVersion(ImmutableArray<SyntaxTree> syntaxTrees)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterStaticMethod(10038, 22233, 22962);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 22350, 22381);

                LanguageVersion?
                result = null
                ;
                try
                {
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 22395, 22861);
                    foreach (var tree in f_10038_22416_22427_I(syntaxTrees))
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 22395, 22861);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 22461, 22526);

                        var
                        version = f_10038_22475_22525(((CSharpParseOptions)f_10038_22496_22508(tree)))
                        ;

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 22544, 22846) || true) && (result == null)
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 22544, 22846);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 22604, 22621);

                            result = version;
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 22544, 22846);
                        }

                        else
                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 22544, 22846);

                            if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 22663, 22846) || true) && (result != version)
                            )

                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 22663, 22846);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 22726, 22827);

                                throw f_10038_22732_22826(f_10038_22754_22804(), nameof(syntaxTrees));
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 22663, 22846);
                            }
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 22544, 22846);
                        }
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 22395, 22861);
                    }
                }
                catch (System.Exception)
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoopByException(10038, 1, 467);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoop(10038, 1, 467);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 22877, 22951);

                return result ?? (DynAbs.Tracing.TraceSender.Expression_Null<Microsoft.CodeAnalysis.CSharp.LanguageVersion?>(10038, 22884, 22950) ?? f_10038_22894_22950(LanguageVersion.Default));
                DynAbs.Tracing.TraceSender.TraceExitStaticMethod(10038, 22233, 22962);

                Microsoft.CodeAnalysis.ParseOptions
                f_10038_22496_22508(Microsoft.CodeAnalysis.SyntaxTree
                this_param)
                {
                    var return_v = this_param.Options;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 22496, 22508);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.LanguageVersion
                f_10038_22475_22525(Microsoft.CodeAnalysis.CSharp.CSharpParseOptions
                this_param)
                {
                    var return_v = this_param.LanguageVersion;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 22475, 22525);
                    return return_v;
                }


                string
                f_10038_22754_22804()
                {
                    var return_v = CodeAnalysisResources.InconsistentLanguageVersions;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 22754, 22804);
                    return return_v;
                }


                System.ArgumentException
                f_10038_22732_22826(string
                message, string
                paramName)
                {
                    var return_v = new System.ArgumentException(message, paramName);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 22732, 22826);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.SyntaxTree>
                f_10038_22416_22427_I(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.SyntaxTree>
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 22416, 22427);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.LanguageVersion
                f_10038_22894_22950(Microsoft.CodeAnalysis.CSharp.LanguageVersion
                version)
                {
                    var return_v = version.MapSpecifiedToEffectiveVersion();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 22894, 22950);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 22233, 22962);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 22233, 22962);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public new CSharpCompilation Clone()
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 23106, 23641);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 23167, 23630);

                return f_10038_23174_23629(f_10038_23214_23231(this), _options, f_10038_23277_23300(this), f_10038_23319_23342(this), f_10038_23361_23386(this), f_10038_23405_23424(this), f_10038_23443_23460(this), _referenceManager, reuseReferenceManager: true, _syntaxAndDeclarations, f_10038_23602_23628(this));
                DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 23106, 23641);

                string?
                f_10038_23214_23231(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param)
                {
                    var return_v = this_param.AssemblyName;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 23214, 23231);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.MetadataReference>
                f_10038_23277_23300(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param)
                {
                    var return_v = this_param.ExternalReferences;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 23277, 23300);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSharpCompilation?
                f_10038_23319_23342(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param)
                {
                    var return_v = this_param.PreviousSubmission;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 23319, 23342);
                    return return_v;
                }


                System.Type?
                f_10038_23361_23386(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param)
                {
                    var return_v = this_param.SubmissionReturnType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 23361, 23386);
                    return return_v;
                }


                System.Type?
                f_10038_23405_23424(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param)
                {
                    var return_v = this_param.HostObjectType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 23405, 23424);
                    return return_v;
                }


                bool
                f_10038_23443_23460(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param)
                {
                    var return_v = this_param.IsSubmission;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 23443, 23460);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SemanticModelProvider?
                f_10038_23602_23628(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param)
                {
                    var return_v = this_param.SemanticModelProvider;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 23602, 23628);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                f_10038_23174_23629(string?
                assemblyName, Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions
                options, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.MetadataReference>
                references, Microsoft.CodeAnalysis.CSharp.CSharpCompilation?
                previousSubmission, System.Type?
                submissionReturnType, System.Type?
                hostObjectType, bool
                isSubmission, Microsoft.CodeAnalysis.CSharp.CSharpCompilation.ReferenceManager
                referenceManager, bool
                reuseReferenceManager, Microsoft.CodeAnalysis.CSharp.SyntaxAndDeclarationManager
                syntaxAndDeclarations, Microsoft.CodeAnalysis.SemanticModelProvider?
                semanticModelProvider)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.CSharpCompilation(assemblyName, options, references, previousSubmission, submissionReturnType, hostObjectType, isSubmission, referenceManager, reuseReferenceManager: reuseReferenceManager, syntaxAndDeclarations, semanticModelProvider);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 23174, 23629);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 23106, 23641);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 23106, 23641);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private CSharpCompilation Update(
                    ReferenceManager referenceManager,
                    bool reuseReferenceManager,
                    SyntaxAndDeclarationManager syntaxAndDeclarations)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 23653, 24330);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 23864, 24319);

                return f_10038_23871_24318(f_10038_23911_23928(this), _options, f_10038_23974_23997(this), f_10038_24016_24039(this), f_10038_24058_24083(this), f_10038_24102_24121(this), f_10038_24140_24157(this), referenceManager, reuseReferenceManager, syntaxAndDeclarations, f_10038_24291_24317(this));
                DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 23653, 24330);

                string?
                f_10038_23911_23928(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param)
                {
                    var return_v = this_param.AssemblyName;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 23911, 23928);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.MetadataReference>
                f_10038_23974_23997(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param)
                {
                    var return_v = this_param.ExternalReferences;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 23974, 23997);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSharpCompilation?
                f_10038_24016_24039(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param)
                {
                    var return_v = this_param.PreviousSubmission;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 24016, 24039);
                    return return_v;
                }


                System.Type?
                f_10038_24058_24083(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param)
                {
                    var return_v = this_param.SubmissionReturnType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 24058, 24083);
                    return return_v;
                }


                System.Type?
                f_10038_24102_24121(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param)
                {
                    var return_v = this_param.HostObjectType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 24102, 24121);
                    return return_v;
                }


                bool
                f_10038_24140_24157(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param)
                {
                    var return_v = this_param.IsSubmission;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 24140, 24157);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SemanticModelProvider?
                f_10038_24291_24317(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param)
                {
                    var return_v = this_param.SemanticModelProvider;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 24291, 24317);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                f_10038_23871_24318(string?
                assemblyName, Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions
                options, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.MetadataReference>
                references, Microsoft.CodeAnalysis.CSharp.CSharpCompilation?
                previousSubmission, System.Type?
                submissionReturnType, System.Type?
                hostObjectType, bool
                isSubmission, Microsoft.CodeAnalysis.CSharp.CSharpCompilation.ReferenceManager
                referenceManager, bool
                reuseReferenceManager, Microsoft.CodeAnalysis.CSharp.SyntaxAndDeclarationManager
                syntaxAndDeclarations, Microsoft.CodeAnalysis.SemanticModelProvider?
                semanticModelProvider)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.CSharpCompilation(assemblyName, options, references, previousSubmission, submissionReturnType, hostObjectType, isSubmission, referenceManager, reuseReferenceManager, syntaxAndDeclarations, semanticModelProvider);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 23871, 24318);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 23653, 24330);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 23653, 24330);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public new CSharpCompilation WithAssemblyName(string? assemblyName)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 24453, 25309);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 24811, 25298);

                return f_10038_24818_25297(assemblyName, _options, f_10038_24916_24939(this), f_10038_24958_24981(this), f_10038_25000_25025(this), f_10038_25044_25063(this), f_10038_25082_25099(this), _referenceManager, reuseReferenceManager: assemblyName == f_10038_25193_25210(this), _syntaxAndDeclarations, f_10038_25270_25296(this));
                DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 24453, 25309);

                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.MetadataReference>
                f_10038_24916_24939(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param)
                {
                    var return_v = this_param.ExternalReferences;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 24916, 24939);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSharpCompilation?
                f_10038_24958_24981(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param)
                {
                    var return_v = this_param.PreviousSubmission;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 24958, 24981);
                    return return_v;
                }


                System.Type?
                f_10038_25000_25025(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param)
                {
                    var return_v = this_param.SubmissionReturnType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 25000, 25025);
                    return return_v;
                }


                System.Type?
                f_10038_25044_25063(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param)
                {
                    var return_v = this_param.HostObjectType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 25044, 25063);
                    return return_v;
                }


                bool
                f_10038_25082_25099(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param)
                {
                    var return_v = this_param.IsSubmission;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 25082, 25099);
                    return return_v;
                }


                string?
                f_10038_25193_25210(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param)
                {
                    var return_v = this_param.AssemblyName;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 25193, 25210);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SemanticModelProvider?
                f_10038_25270_25296(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param)
                {
                    var return_v = this_param.SemanticModelProvider;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 25270, 25296);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                f_10038_24818_25297(string?
                assemblyName, Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions
                options, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.MetadataReference>
                references, Microsoft.CodeAnalysis.CSharp.CSharpCompilation?
                previousSubmission, System.Type?
                submissionReturnType, System.Type?
                hostObjectType, bool
                isSubmission, Microsoft.CodeAnalysis.CSharp.CSharpCompilation.ReferenceManager
                referenceManager, bool
                reuseReferenceManager, Microsoft.CodeAnalysis.CSharp.SyntaxAndDeclarationManager
                syntaxAndDeclarations, Microsoft.CodeAnalysis.SemanticModelProvider?
                semanticModelProvider)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.CSharpCompilation(assemblyName, options, references, previousSubmission, submissionReturnType, hostObjectType, isSubmission, referenceManager, reuseReferenceManager: reuseReferenceManager, syntaxAndDeclarations, semanticModelProvider);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 24818, 25297);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 24453, 25309);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 24453, 25309);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public new CSharpCompilation WithReferences(IEnumerable<MetadataReference>? references)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 26071, 26877);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 26362, 26866);

                return f_10038_26369_26865(f_10038_26409_26426(this), _options, f_10038_26472_26530(references), f_10038_26549_26572(this), f_10038_26591_26616(this), f_10038_26635_26654(this), f_10038_26673_26690(this), referenceManager: null, reuseReferenceManager: false, _syntaxAndDeclarations, f_10038_26838_26864(this));
                DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 26071, 26877);

                string?
                f_10038_26409_26426(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param)
                {
                    var return_v = this_param.AssemblyName;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 26409, 26426);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.MetadataReference>
                f_10038_26472_26530(System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.MetadataReference>?
                references)
                {
                    var return_v = ValidateReferences<CSharpCompilationReference>(references);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 26472, 26530);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSharpCompilation?
                f_10038_26549_26572(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param)
                {
                    var return_v = this_param.PreviousSubmission;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 26549, 26572);
                    return return_v;
                }


                System.Type?
                f_10038_26591_26616(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param)
                {
                    var return_v = this_param.SubmissionReturnType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 26591, 26616);
                    return return_v;
                }


                System.Type?
                f_10038_26635_26654(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param)
                {
                    var return_v = this_param.HostObjectType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 26635, 26654);
                    return return_v;
                }


                bool
                f_10038_26673_26690(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param)
                {
                    var return_v = this_param.IsSubmission;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 26673, 26690);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SemanticModelProvider?
                f_10038_26838_26864(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param)
                {
                    var return_v = this_param.SemanticModelProvider;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 26838, 26864);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                f_10038_26369_26865(string?
                assemblyName, Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions
                options, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.MetadataReference>
                references, Microsoft.CodeAnalysis.CSharp.CSharpCompilation?
                previousSubmission, System.Type?
                submissionReturnType, System.Type?
                hostObjectType, bool
                isSubmission, Microsoft.CodeAnalysis.CSharp.CSharpCompilation.ReferenceManager?
                referenceManager, bool
                reuseReferenceManager, Microsoft.CodeAnalysis.CSharp.SyntaxAndDeclarationManager
                syntaxAndDeclarations, Microsoft.CodeAnalysis.SemanticModelProvider?
                semanticModelProvider)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.CSharpCompilation(assemblyName, options, references, previousSubmission, submissionReturnType, hostObjectType, isSubmission, referenceManager: referenceManager, reuseReferenceManager: reuseReferenceManager, syntaxAndDeclarations, semanticModelProvider);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 26369, 26865);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 26071, 26877);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 26071, 26877);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public new CSharpCompilation WithReferences(params MetadataReference[] references)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 27006, 27195);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 27113, 27184);

                return f_10038_27120_27183(this, references);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 27006, 27195);

                Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                f_10038_27120_27183(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param, Microsoft.CodeAnalysis.MetadataReference[]
                references)
                {
                    var return_v = this_param.WithReferences((System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.MetadataReference>)references);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 27120, 27183);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 27006, 27195);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 27006, 27195);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public CSharpCompilation WithOptions(CSharpCompilationOptions options)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 27333, 28692);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 27428, 27458);

                var
                oldOptions = f_10038_27445_27457(this)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 27472, 27557);

                bool
                reuseReferenceManager = f_10038_27501_27556(oldOptions, options)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 27571, 27755);

                bool
                reuseSyntaxAndDeclarationManager = f_10038_27611_27637(oldOptions) == f_10038_27641_27664(options) && (DynAbs.Tracing.TraceSender.Expression_True(10038, 27611, 27754) && f_10038_27685_27719(oldOptions) == f_10038_27723_27754(options))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 27771, 28681);

                return f_10038_27778_28680(f_10038_27818_27835(this), options, f_10038_27880_27903(this), f_10038_27922_27945(this), f_10038_27964_27989(this), f_10038_28008_28027(this), f_10038_28046_28063(this), _referenceManager, reuseReferenceManager, (DynAbs.Tracing.TraceSender.Conditional_F1(10038, 28158, 28190) || ((reuseSyntaxAndDeclarationManager && DynAbs.Tracing.TraceSender.Conditional_F2(10038, 28214, 28236)) || DynAbs.Tracing.TraceSender.Conditional_F3(10038, 28260, 28634))) ? _syntaxAndDeclarations : f_10038_28260_28634(_syntaxAndDeclarations.ExternalSyntaxTrees, f_10038_28387_28410(options), f_10038_28437_28468(options), _syntaxAndDeclarations.MessageProvider, _syntaxAndDeclarations.IsSubmission, state: null), f_10038_28653_28679(this));
                DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 27333, 28692);

                Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions
                f_10038_27445_27457(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param)
                {
                    var return_v = this_param.Options;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 27445, 27457);
                    return return_v;
                }


                bool
                f_10038_27501_27556(Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions
                this_param, Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions
                other)
                {
                    var return_v = this_param.CanReuseCompilationReferenceManager((Microsoft.CodeAnalysis.CompilationOptions)other);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 27501, 27556);
                    return return_v;
                }


                string?
                f_10038_27611_27637(Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions
                this_param)
                {
                    var return_v = this_param.ScriptClassName;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 27611, 27637);
                    return return_v;
                }


                string?
                f_10038_27641_27664(Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions
                this_param)
                {
                    var return_v = this_param.ScriptClassName;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 27641, 27664);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SourceReferenceResolver?
                f_10038_27685_27719(Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions
                this_param)
                {
                    var return_v = this_param.SourceReferenceResolver;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 27685, 27719);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SourceReferenceResolver?
                f_10038_27723_27754(Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions
                this_param)
                {
                    var return_v = this_param.SourceReferenceResolver;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 27723, 27754);
                    return return_v;
                }


                string?
                f_10038_27818_27835(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param)
                {
                    var return_v = this_param.AssemblyName;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 27818, 27835);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.MetadataReference>
                f_10038_27880_27903(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param)
                {
                    var return_v = this_param.ExternalReferences;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 27880, 27903);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSharpCompilation?
                f_10038_27922_27945(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param)
                {
                    var return_v = this_param.PreviousSubmission;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 27922, 27945);
                    return return_v;
                }


                System.Type?
                f_10038_27964_27989(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param)
                {
                    var return_v = this_param.SubmissionReturnType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 27964, 27989);
                    return return_v;
                }


                System.Type?
                f_10038_28008_28027(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param)
                {
                    var return_v = this_param.HostObjectType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 28008, 28027);
                    return return_v;
                }


                bool
                f_10038_28046_28063(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param)
                {
                    var return_v = this_param.IsSubmission;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 28046, 28063);
                    return return_v;
                }


                string?
                f_10038_28387_28410(Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions
                this_param)
                {
                    var return_v = this_param.ScriptClassName;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 28387, 28410);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SourceReferenceResolver?
                f_10038_28437_28468(Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions
                this_param)
                {
                    var return_v = this_param.SourceReferenceResolver;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 28437, 28468);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.SyntaxAndDeclarationManager
                f_10038_28260_28634(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.SyntaxTree>
                externalSyntaxTrees, string?
                scriptClassName, Microsoft.CodeAnalysis.SourceReferenceResolver?
                resolver, Microsoft.CodeAnalysis.CommonMessageProvider
                messageProvider, bool
                isSubmission, Microsoft.CodeAnalysis.CSharp.SyntaxAndDeclarationManager.State
                state)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.SyntaxAndDeclarationManager(externalSyntaxTrees, scriptClassName, resolver, messageProvider, isSubmission, state: state);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 28260, 28634);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SemanticModelProvider?
                f_10038_28653_28679(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param)
                {
                    var return_v = this_param.SemanticModelProvider;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 28653, 28679);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                f_10038_27778_28680(string?
                assemblyName, Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions
                options, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.MetadataReference>
                references, Microsoft.CodeAnalysis.CSharp.CSharpCompilation?
                previousSubmission, System.Type?
                submissionReturnType, System.Type?
                hostObjectType, bool
                isSubmission, Microsoft.CodeAnalysis.CSharp.CSharpCompilation.ReferenceManager
                referenceManager, bool
                reuseReferenceManager, Microsoft.CodeAnalysis.CSharp.SyntaxAndDeclarationManager
                syntaxAndDeclarations, Microsoft.CodeAnalysis.SemanticModelProvider?
                semanticModelProvider)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.CSharpCompilation(assemblyName, options, references, previousSubmission, submissionReturnType, hostObjectType, isSubmission, referenceManager, reuseReferenceManager, syntaxAndDeclarations, semanticModelProvider);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 27778, 28680);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 27333, 28692);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 27333, 28692);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public CSharpCompilation WithScriptCompilationInfo(CSharpScriptCompilationInfo? info)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 28849, 30110);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 28959, 29053) || true) && (info == f_10038_28971_28992())
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 28959, 29053);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 29026, 29038);

                    return this;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 28959, 29053);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 29489, 29617);

                bool
                reuseReferenceManager = f_10038_29518_29616(f_10038_29534_29582_M(DynAbs.Tracing.TraceSender.TraceConditionalAccessExpression(f_10038_29534_29555(), 10038, 29534, 29582)?.PreviousScriptCompilation), f_10038_29584_29615_M(DynAbs.Tracing.TraceSender.TraceConditionalAccessExpression(info, 10038, 29584, 29615)?.PreviousScriptCompilation))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 29633, 30099);

                return f_10038_29640_30098(f_10038_29680_29697(this), _options, f_10038_29743_29766(this), f_10038_29785_29816_M(DynAbs.Tracing.TraceSender.TraceConditionalAccessExpression(info, 10038, 29785, 29816)?.PreviousScriptCompilation), f_10038_29835_29854_M(DynAbs.Tracing.TraceSender.TraceConditionalAccessExpression(info, 10038, 29835, 29854)?.ReturnTypeOpt), f_10038_29873_29890_M(DynAbs.Tracing.TraceSender.TraceConditionalAccessExpression(info, 10038, 29873, 29890)?.GlobalsType), isSubmission: info != null, _referenceManager, reuseReferenceManager, _syntaxAndDeclarations, f_10038_30071_30097(this));
                DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 28849, 30110);

                Microsoft.CodeAnalysis.CSharp.CSharpScriptCompilationInfo?
                f_10038_28971_28992()
                {
                    var return_v = ScriptCompilationInfo;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 28971, 28992);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSharpScriptCompilationInfo?
                f_10038_29534_29555()
                {
                    var return_v = ScriptCompilationInfo;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 29534, 29555);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSharpCompilation?
                f_10038_29534_29582_M(Microsoft.CodeAnalysis.CSharp.CSharpCompilation?
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 29534, 29582);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSharpCompilation?
                f_10038_29584_29615_M(Microsoft.CodeAnalysis.CSharp.CSharpCompilation?
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 29584, 29615);
                    return return_v;
                }


                bool
                f_10038_29518_29616(Microsoft.CodeAnalysis.CSharp.CSharpCompilation?
                objA, Microsoft.CodeAnalysis.CSharp.CSharpCompilation?
                objB)
                {
                    var return_v = ReferenceEquals((object?)objA, (object?)objB);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 29518, 29616);
                    return return_v;
                }


                string?
                f_10038_29680_29697(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param)
                {
                    var return_v = this_param.AssemblyName;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 29680, 29697);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.MetadataReference>
                f_10038_29743_29766(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param)
                {
                    var return_v = this_param.ExternalReferences;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 29743, 29766);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSharpCompilation?
                f_10038_29785_29816_M(Microsoft.CodeAnalysis.CSharp.CSharpCompilation?
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 29785, 29816);
                    return return_v;
                }


                System.Type?
                f_10038_29835_29854_M(System.Type?
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 29835, 29854);
                    return return_v;
                }


                System.Type?
                f_10038_29873_29890_M(System.Type?
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 29873, 29890);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SemanticModelProvider?
                f_10038_30071_30097(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param)
                {
                    var return_v = this_param.SemanticModelProvider;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 30071, 30097);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                f_10038_29640_30098(string?
                assemblyName, Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions
                options, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.MetadataReference>
                references, Microsoft.CodeAnalysis.CSharp.CSharpCompilation?
                previousSubmission, System.Type?
                submissionReturnType, System.Type?
                hostObjectType, bool
                isSubmission, Microsoft.CodeAnalysis.CSharp.CSharpCompilation.ReferenceManager
                referenceManager, bool
                reuseReferenceManager, Microsoft.CodeAnalysis.CSharp.SyntaxAndDeclarationManager
                syntaxAndDeclarations, Microsoft.CodeAnalysis.SemanticModelProvider?
                semanticModelProvider)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.CSharpCompilation(assemblyName, options, references, previousSubmission, submissionReturnType, hostObjectType, isSubmission: isSubmission, referenceManager, reuseReferenceManager, syntaxAndDeclarations, semanticModelProvider);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 29640, 30098);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 28849, 30110);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 28849, 30110);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        internal override Compilation WithSemanticModelProvider(SemanticModelProvider? semanticModelProvider)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 30248, 30975);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 30374, 30490) || true) && (f_10038_30378_30404(this) == semanticModelProvider)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 30374, 30490);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 30463, 30475);

                    return this;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 30374, 30490);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 30506, 30964);

                return f_10038_30513_30963(f_10038_30553_30570(this), _options, f_10038_30616_30639(this), f_10038_30658_30681(this), f_10038_30700_30725(this), f_10038_30744_30763(this), f_10038_30782_30799(this), _referenceManager, reuseReferenceManager: true, _syntaxAndDeclarations, semanticModelProvider);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 30248, 30975);

                Microsoft.CodeAnalysis.SemanticModelProvider?
                f_10038_30378_30404(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param)
                {
                    var return_v = this_param.SemanticModelProvider;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 30378, 30404);
                    return return_v;
                }


                string?
                f_10038_30553_30570(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param)
                {
                    var return_v = this_param.AssemblyName;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 30553, 30570);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.MetadataReference>
                f_10038_30616_30639(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param)
                {
                    var return_v = this_param.ExternalReferences;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 30616, 30639);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSharpCompilation?
                f_10038_30658_30681(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param)
                {
                    var return_v = this_param.PreviousSubmission;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 30658, 30681);
                    return return_v;
                }


                System.Type?
                f_10038_30700_30725(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param)
                {
                    var return_v = this_param.SubmissionReturnType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 30700, 30725);
                    return return_v;
                }


                System.Type?
                f_10038_30744_30763(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param)
                {
                    var return_v = this_param.HostObjectType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 30744, 30763);
                    return return_v;
                }


                bool
                f_10038_30782_30799(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param)
                {
                    var return_v = this_param.IsSubmission;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 30782, 30799);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                f_10038_30513_30963(string?
                assemblyName, Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions
                options, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.MetadataReference>
                references, Microsoft.CodeAnalysis.CSharp.CSharpCompilation?
                previousSubmission, System.Type?
                submissionReturnType, System.Type?
                hostObjectType, bool
                isSubmission, Microsoft.CodeAnalysis.CSharp.CSharpCompilation.ReferenceManager
                referenceManager, bool
                reuseReferenceManager, Microsoft.CodeAnalysis.CSharp.SyntaxAndDeclarationManager
                syntaxAndDeclarations, Microsoft.CodeAnalysis.SemanticModelProvider?
                semanticModelProvider)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.CSharpCompilation(assemblyName, options, references, previousSubmission, submissionReturnType, hostObjectType, isSubmission, referenceManager, reuseReferenceManager: reuseReferenceManager, syntaxAndDeclarations, semanticModelProvider);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 30513, 30963);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 30248, 30975);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 30248, 30975);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        internal override Compilation WithEventQueue(AsyncQueue<CompilationEvent>? eventQueue)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 31099, 31713);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 31210, 31702);

                return f_10038_31217_31701(f_10038_31257_31274(this), _options, f_10038_31320_31343(this), f_10038_31362_31385(this), f_10038_31404_31429(this), f_10038_31448_31467(this), f_10038_31486_31503(this), _referenceManager, reuseReferenceManager: true, _syntaxAndDeclarations, f_10038_31645_31671(this), eventQueue);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 31099, 31713);

                string?
                f_10038_31257_31274(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param)
                {
                    var return_v = this_param.AssemblyName;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 31257, 31274);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.MetadataReference>
                f_10038_31320_31343(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param)
                {
                    var return_v = this_param.ExternalReferences;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 31320, 31343);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSharpCompilation?
                f_10038_31362_31385(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param)
                {
                    var return_v = this_param.PreviousSubmission;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 31362, 31385);
                    return return_v;
                }


                System.Type?
                f_10038_31404_31429(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param)
                {
                    var return_v = this_param.SubmissionReturnType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 31404, 31429);
                    return return_v;
                }


                System.Type?
                f_10038_31448_31467(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param)
                {
                    var return_v = this_param.HostObjectType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 31448, 31467);
                    return return_v;
                }


                bool
                f_10038_31486_31503(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param)
                {
                    var return_v = this_param.IsSubmission;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 31486, 31503);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SemanticModelProvider?
                f_10038_31645_31671(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param)
                {
                    var return_v = this_param.SemanticModelProvider;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 31645, 31671);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                f_10038_31217_31701(string?
                assemblyName, Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions
                options, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.MetadataReference>
                references, Microsoft.CodeAnalysis.CSharp.CSharpCompilation?
                previousSubmission, System.Type?
                submissionReturnType, System.Type?
                hostObjectType, bool
                isSubmission, Microsoft.CodeAnalysis.CSharp.CSharpCompilation.ReferenceManager
                referenceManager, bool
                reuseReferenceManager, Microsoft.CodeAnalysis.CSharp.SyntaxAndDeclarationManager
                syntaxAndDeclarations, Microsoft.CodeAnalysis.SemanticModelProvider?
                semanticModelProvider, Microsoft.CodeAnalysis.Diagnostics.AsyncQueue<Microsoft.CodeAnalysis.Diagnostics.CompilationEvent>?
                eventQueue)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.CSharpCompilation(assemblyName, options, references, previousSubmission, submissionReturnType, hostObjectType, isSubmission, referenceManager, reuseReferenceManager: reuseReferenceManager, syntaxAndDeclarations, semanticModelProvider, eventQueue);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 31217, 31701);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 31099, 31713);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 31099, 31713);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public new CSharpScriptCompilationInfo? ScriptCompilationInfo { get; }

        internal override ScriptCompilationInfo? CommonScriptCompilationInfo
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 31926, 31950);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 31929, 31950);
                    return f_10038_31929_31950(); DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 31926, 31950);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 31926, 31950);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 31926, 31950);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        internal CSharpCompilation? PreviousSubmission
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 32010, 32061);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 32013, 32061);
                    return f_10038_32013_32061_M(DynAbs.Tracing.TraceSender.TraceConditionalAccessExpression(f_10038_32013_32034(), 10038, 32013, 32061)?.PreviousScriptCompilation); DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 32010, 32061);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 32010, 32061);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 32010, 32061);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        internal override bool HasSubmissionResult()
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 32074, 33843);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 32143, 32170);

                f_10038_32143_32169(f_10038_32156_32168());
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 32266, 32338);

                var
                tree = _syntaxAndDeclarations.ExternalSyntaxTrees.SingleOrDefault()
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 32352, 32430) || true) && (tree == null)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 32352, 32430);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 32402, 32415);

                    return false;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 32352, 32430);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 32446, 32487);

                var
                root = tree.GetCompilationUnitRoot()
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 32501, 32581) || true) && (f_10038_32505_32519(root))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 32501, 32581);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 32553, 32566);

                    return false;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 32501, 32581);
                }

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 32656, 32875) || true) && (f_10038_32660_32814(f_10038_32660_32767(root, n => n is GlobalStatementSyntax || n is StatementSyntax || n is CompilationUnitSyntax), n => n.IsKind(SyntaxKind.ReturnStatement)))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 32656, 32875);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 32848, 32860);

                    return true;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 32656, 32875);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 32939, 33058);

                // Lafhis
                var temp = root.Members;
                var
                lastGlobalStatement = (GlobalStatementSyntax)f_10038_32988_33057(ref temp, m => m.IsKind(SyntaxKind.GlobalStatement))
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 33072, 33803) || true) && (lastGlobalStatement != null)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 33072, 33803);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 33137, 33183);

                    var
                    statement = f_10038_33153_33182(lastGlobalStatement)
                    ;

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 33201, 33788) || true) && (f_10038_33205_33253(statement, SyntaxKind.ExpressionStatement))
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 33201, 33788);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 33295, 33358);

                        var
                        expressionStatement = (ExpressionStatementSyntax)statement
                        ;

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 33380, 33769) || true) && (expressionStatement.SemicolonToken.IsMissing)
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 33380, 33769);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 33478, 33513);

                            var
                            model = f_10038_33490_33512(this, tree)
                            ;
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 33539, 33587);

                            var
                            expression = f_10038_33556_33586(expressionStatement)
                            ;
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 33613, 33654);

                            var
                            info = f_10038_33624_33653(model, expression)
                            ;
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 33680, 33746);

                            return f_10038_33687_33718_M(DynAbs.Tracing.TraceSender.TraceConditionalAccessExpression(info.ConvertedType, 10038, 33687, 33718)?.SpecialType) != SpecialType.System_Void;
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 33380, 33769);
                        }
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 33201, 33788);
                    }
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 33072, 33803);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 33819, 33832);

                return false;
                DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 32074, 33843);

                bool
                f_10038_32156_32168()
                {
                    var return_v = IsSubmission;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 32156, 32168);
                    return return_v;
                }


                int
                f_10038_32143_32169(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 32143, 32169);
                    return 0;
                }


                bool
                f_10038_32505_32519(Microsoft.CodeAnalysis.CSharp.Syntax.CompilationUnitSyntax
                this_param)
                {
                    var return_v = this_param.HasErrors;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 32505, 32519);
                    return return_v;
                }


                System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.SyntaxNode>
                f_10038_32660_32767(Microsoft.CodeAnalysis.CSharp.Syntax.CompilationUnitSyntax
                this_param, System.Func<Microsoft.CodeAnalysis.SyntaxNode, bool>?
                descendIntoChildren)
                {
                    var return_v = this_param.DescendantNodes(descendIntoChildren);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 32660, 32767);
                    return return_v;
                }


                bool
                f_10038_32660_32814(System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.SyntaxNode>
                source, System.Func<Microsoft.CodeAnalysis.SyntaxNode, bool>
                predicate)
                {
                    var return_v = source.Any<Microsoft.CodeAnalysis.SyntaxNode>(predicate);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 32660, 32814);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Syntax.MemberDeclarationSyntax
                f_10038_32988_33057(ref Microsoft.CodeAnalysis.SyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.MemberDeclarationSyntax>
                source, System.Func<Microsoft.CodeAnalysis.CSharp.Syntax.MemberDeclarationSyntax, bool>
                predicate)
                {
                    var return_v = source.LastOrDefault<Microsoft.CodeAnalysis.CSharp.Syntax.MemberDeclarationSyntax>(predicate);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 32988, 33057);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax
                f_10038_33153_33182(Microsoft.CodeAnalysis.CSharp.Syntax.GlobalStatementSyntax
                this_param)
                {
                    var return_v = this_param.Statement;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 33153, 33182);
                    return return_v;
                }


                bool
                f_10038_33205_33253(Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax
                node, Microsoft.CodeAnalysis.CSharp.SyntaxKind
                kind)
                {
                    var return_v = node.IsKind(kind);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 33205, 33253);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SemanticModel
                f_10038_33490_33512(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param, Microsoft.CodeAnalysis.SyntaxTree
                syntaxTree)
                {
                    var return_v = this_param.GetSemanticModel(syntaxTree);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 33490, 33512);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                f_10038_33556_33586(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionStatementSyntax
                this_param)
                {
                    var return_v = this_param.Expression;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 33556, 33586);
                    return return_v;
                }


                Microsoft.CodeAnalysis.TypeInfo
                f_10038_33624_33653(Microsoft.CodeAnalysis.SemanticModel
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                node)
                {
                    var return_v = this_param.GetTypeInfo((Microsoft.CodeAnalysis.SyntaxNode)node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 33624, 33653);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SpecialType?
                f_10038_33687_33718_M(Microsoft.CodeAnalysis.SpecialType?
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 33687, 33718);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 32074, 33843);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 32074, 33843);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        #region SyntaxTrees
        public new ImmutableArray<SyntaxTree> SyntaxTrees
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 34153, 34218);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 34159, 34216);

                    return f_10038_34166_34203(_syntaxAndDeclarations).SyntaxTrees;
                    DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 34153, 34218);

                    Microsoft.CodeAnalysis.CSharp.SyntaxAndDeclarationManager.State
                    f_10038_34166_34203(Microsoft.CodeAnalysis.CSharp.SyntaxAndDeclarationManager
                    this_param)
                    {
                        var return_v = this_param.GetLazyState();
                        DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 34166, 34203);
                        return return_v;
                    }

                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 34079, 34229);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 34079, 34229);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public new bool ContainsSyntaxTree(SyntaxTree? syntaxTree)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 34381, 34581);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 34464, 34570);

                return syntaxTree != null && (DynAbs.Tracing.TraceSender.Expression_True(10038, 34471, 34569) && f_10038_34493_34569(f_10038_34493_34530(_syntaxAndDeclarations).RootNamespaces, syntaxTree));
                DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 34381, 34581);

                Microsoft.CodeAnalysis.CSharp.SyntaxAndDeclarationManager.State
                f_10038_34493_34530(Microsoft.CodeAnalysis.CSharp.SyntaxAndDeclarationManager
                this_param)
                {
                    var return_v = this_param.GetLazyState();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 34493, 34530);
                    return return_v;
                }


                bool
                f_10038_34493_34569(System.Collections.Immutable.ImmutableDictionary<Microsoft.CodeAnalysis.SyntaxTree, System.Lazy<Microsoft.CodeAnalysis.CSharp.RootSingleNamespaceDeclaration>>
                this_param, Microsoft.CodeAnalysis.SyntaxTree
                key)
                {
                    var return_v = this_param.ContainsKey(key);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 34493, 34569);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 34381, 34581);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 34381, 34581);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public new CSharpCompilation AddSyntaxTrees(params SyntaxTree[] trees)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 34709, 34869);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 34804, 34858);

                return f_10038_34811_34857(this, trees);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 34709, 34869);

                Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                f_10038_34811_34857(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param, Microsoft.CodeAnalysis.SyntaxTree[]
                trees)
                {
                    var return_v = this_param.AddSyntaxTrees((System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.SyntaxTree>)trees);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 34811, 34857);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 34709, 34869);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 34709, 34869);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public new CSharpCompilation AddSyntaxTrees(IEnumerable<SyntaxTree> trees)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 34997, 37422);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 35096, 35209) || true) && (trees == null)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 35096, 35209);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 35147, 35194);

                    throw f_10038_35153_35193(nameof(trees));
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 35096, 35209);
                }

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 35225, 35305) || true) && (f_10038_35229_35244(trees))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 35225, 35305);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 35278, 35290);

                    return this;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 35225, 35305);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 35655, 35721);

                var
                externalSyntaxTrees = f_10038_35681_35720()
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 35735, 35786);

                var
                syntaxAndDeclarations = _syntaxAndDeclarations
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 35800, 35870);

                externalSyntaxTrees.AddAll(syntaxAndDeclarations.ExternalSyntaxTrees);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 35884, 35918);

                bool
                reuseReferenceManager = true
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 35932, 35942);

                int
                i = 0
                ;
                try
                {
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 35956, 37009);
                    foreach (var tree in f_10038_35977_36007_I(f_10038_35977_36007(trees)))
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 35956, 37009);

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 36041, 36175) || true) && (tree == null)
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 36041, 36175);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 36099, 36156);

                            throw f_10038_36105_36155($"{nameof(trees)}[{i}]");
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 36041, 36175);
                        }

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 36195, 36384) || true) && (f_10038_36199_36227_M(!tree.HasCompilationUnitRoot))
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 36195, 36384);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 36269, 36365);

                            throw f_10038_36275_36364(f_10038_36297_36338(), $"{nameof(trees)}[{i}]");
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 36195, 36384);
                        }

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 36404, 36598) || true) && (f_10038_36408_36442(externalSyntaxTrees, tree))
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 36404, 36598);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 36484, 36579);

                            throw f_10038_36490_36578(f_10038_36512_36552(), $"{nameof(trees)}[{i}]");
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 36404, 36598);
                        }

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 36618, 36842) || true) && (f_10038_36622_36639(this) && (DynAbs.Tracing.TraceSender.Expression_True(10038, 36622, 36686) && f_10038_36643_36660(f_10038_36643_36655(tree)) == SourceCodeKind.Regular))
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 36618, 36842);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 36728, 36823);

                            throw f_10038_36734_36822(f_10038_36756_36796(), $"{nameof(trees)}[{i}]");
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 36618, 36842);
                        }
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 36862, 36892);

                        f_10038_36862_36891(
                                        externalSyntaxTrees, tree);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 36910, 36970);

                        reuseReferenceManager &= f_10038_36935_36969_M(!tree.HasReferenceOrLoadDirectives);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 36990, 36994);

                        i++;
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 35956, 37009);
                    }
                }
                catch (System.Exception)
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoopByException(10038, 1, 1054);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoop(10038, 1, 1054);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 37023, 37050);

                f_10038_37023_37049(externalSyntaxTrees);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 37066, 37232) || true) && (f_10038_37070_37087(this) && (DynAbs.Tracing.TraceSender.Expression_True(10038, 37070, 37096) && i > 1))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 37066, 37232);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 37130, 37217);

                    throw f_10038_37136_37216(f_10038_37158_37200(), nameof(trees));
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 37066, 37232);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 37248, 37316);

                syntaxAndDeclarations = f_10038_37272_37315(syntaxAndDeclarations, trees);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 37332, 37411);

                return f_10038_37339_37410(this, _referenceManager, reuseReferenceManager, syntaxAndDeclarations);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 34997, 37422);

                System.ArgumentNullException
                f_10038_35153_35193(string
                paramName)
                {
                    var return_v = new System.ArgumentNullException(paramName);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 35153, 35193);
                    return return_v;
                }


                bool
                f_10038_35229_35244(System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.SyntaxTree>
                source)
                {
                    var return_v = source.IsEmpty<Microsoft.CodeAnalysis.SyntaxTree>();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 35229, 35244);
                    return return_v;
                }


                Microsoft.CodeAnalysis.PooledObjects.PooledHashSet<Microsoft.CodeAnalysis.SyntaxTree>
                f_10038_35681_35720()
                {
                    var return_v = PooledHashSet<SyntaxTree>.GetInstance();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 35681, 35720);
                    return return_v;
                }


                System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.CSharp.CSharpSyntaxTree>
                f_10038_35977_36007(System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.SyntaxTree>
                source)
                {
                    var return_v = source.Cast<Microsoft.CodeAnalysis.CSharp.CSharpSyntaxTree>();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 35977, 36007);
                    return return_v;
                }


                System.ArgumentNullException
                f_10038_36105_36155(string
                paramName)
                {
                    var return_v = new System.ArgumentNullException(paramName);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 36105, 36155);
                    return return_v;
                }


                bool
                f_10038_36199_36227_M(bool
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 36199, 36227);
                    return return_v;
                }


                string
                f_10038_36297_36338()
                {
                    var return_v = CSharpResources.TreeMustHaveARootNodeWith;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 36297, 36338);
                    return return_v;
                }


                System.ArgumentException
                f_10038_36275_36364(string
                message, string
                paramName)
                {
                    var return_v = new System.ArgumentException(message, paramName);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 36275, 36364);
                    return return_v;
                }


                bool
                f_10038_36408_36442(Microsoft.CodeAnalysis.PooledObjects.PooledHashSet<Microsoft.CodeAnalysis.SyntaxTree>
                this_param, Microsoft.CodeAnalysis.CSharp.CSharpSyntaxTree
                item)
                {
                    var return_v = this_param.Contains((Microsoft.CodeAnalysis.SyntaxTree)item);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 36408, 36442);
                    return return_v;
                }


                string
                f_10038_36512_36552()
                {
                    var return_v = CSharpResources.SyntaxTreeAlreadyPresent;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 36512, 36552);
                    return return_v;
                }


                System.ArgumentException
                f_10038_36490_36578(string
                message, string
                paramName)
                {
                    var return_v = new System.ArgumentException(message, paramName);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 36490, 36578);
                    return return_v;
                }


                bool
                f_10038_36622_36639(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param)
                {
                    var return_v = this_param.IsSubmission;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 36622, 36639);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSharpParseOptions
                f_10038_36643_36655(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxTree
                this_param)
                {
                    var return_v = this_param.Options;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 36643, 36655);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SourceCodeKind
                f_10038_36643_36660(Microsoft.CodeAnalysis.CSharp.CSharpParseOptions
                this_param)
                {
                    var return_v = this_param.Kind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 36643, 36660);
                    return return_v;
                }


                string
                f_10038_36756_36796()
                {
                    var return_v = CSharpResources.SubmissionCanOnlyInclude;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 36756, 36796);
                    return return_v;
                }


                System.ArgumentException
                f_10038_36734_36822(string
                message, string
                paramName)
                {
                    var return_v = new System.ArgumentException(message, paramName);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 36734, 36822);
                    return return_v;
                }


                bool
                f_10038_36862_36891(Microsoft.CodeAnalysis.PooledObjects.PooledHashSet<Microsoft.CodeAnalysis.SyntaxTree>
                this_param, Microsoft.CodeAnalysis.CSharp.CSharpSyntaxTree
                item)
                {
                    var return_v = this_param.Add((Microsoft.CodeAnalysis.SyntaxTree)item);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 36862, 36891);
                    return return_v;
                }


                bool
                f_10038_36935_36969_M(bool
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 36935, 36969);
                    return return_v;
                }


                System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.CSharp.CSharpSyntaxTree>
                f_10038_35977_36007_I(System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.CSharp.CSharpSyntaxTree>
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 35977, 36007);
                    return return_v;
                }


                int
                f_10038_37023_37049(Microsoft.CodeAnalysis.PooledObjects.PooledHashSet<Microsoft.CodeAnalysis.SyntaxTree>
                this_param)
                {
                    this_param.Free();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 37023, 37049);
                    return 0;
                }


                bool
                f_10038_37070_37087(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param)
                {
                    var return_v = this_param.IsSubmission;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 37070, 37087);
                    return return_v;
                }


                string
                f_10038_37158_37200()
                {
                    var return_v = CSharpResources.SubmissionCanHaveAtMostOne;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 37158, 37200);
                    return return_v;
                }


                System.ArgumentException
                f_10038_37136_37216(string
                message, string
                paramName)
                {
                    var return_v = new System.ArgumentException(message, paramName);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 37136, 37216);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.SyntaxAndDeclarationManager
                f_10038_37272_37315(Microsoft.CodeAnalysis.CSharp.SyntaxAndDeclarationManager
                this_param, System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.SyntaxTree>
                trees)
                {
                    var return_v = this_param.AddSyntaxTrees(trees);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 37272, 37315);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                f_10038_37339_37410(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param, Microsoft.CodeAnalysis.CSharp.CSharpCompilation.ReferenceManager
                referenceManager, bool
                reuseReferenceManager, Microsoft.CodeAnalysis.CSharp.SyntaxAndDeclarationManager
                syntaxAndDeclarations)
                {
                    var return_v = this_param.Update(referenceManager, reuseReferenceManager, syntaxAndDeclarations);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 37339, 37410);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 34997, 37422);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 34997, 37422);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public new CSharpCompilation RemoveSyntaxTrees(params SyntaxTree[] trees)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 37625, 37791);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 37723, 37780);

                return f_10038_37730_37779(this, trees);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 37625, 37791);

                Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                f_10038_37730_37779(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param, Microsoft.CodeAnalysis.SyntaxTree[]
                trees)
                {
                    var return_v = this_param.RemoveSyntaxTrees((System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.SyntaxTree>)trees);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 37730, 37779);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 37625, 37791);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 37625, 37791);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public new CSharpCompilation RemoveSyntaxTrees(IEnumerable<SyntaxTree> trees)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 37994, 40189);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 38096, 38209) || true) && (trees == null)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 38096, 38209);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 38147, 38194);

                    throw f_10038_38153_38193(nameof(trees));
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 38096, 38209);
                }

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 38225, 38305) || true) && (f_10038_38229_38244(trees))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 38225, 38305);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 38278, 38290);

                    return this;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 38225, 38305);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 38321, 38377);

                var
                removeSet = f_10038_38337_38376()
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 38725, 38791);

                var
                externalSyntaxTrees = f_10038_38751_38790()
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 38805, 38856);

                var
                syntaxAndDeclarations = _syntaxAndDeclarations
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 38870, 38940);

                externalSyntaxTrees.AddAll(syntaxAndDeclarations.ExternalSyntaxTrees);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 38954, 38988);

                bool
                reuseReferenceManager = true
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 39002, 39012);

                int
                i = 0
                ;
                try
                {
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 39026, 39920);
                    foreach (var tree in f_10038_39047_39077_I(f_10038_39047_39077(trees)))
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 39026, 39920);

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 39111, 39763) || true) && (!f_10038_39116_39150(externalSyntaxTrees, tree))
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 39111, 39763);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 39264, 39347);

                            var
                            loadedSyntaxTreeMap = f_10038_39290_39326(syntaxAndDeclarations).LoadedSyntaxTreeMap
                            ;

                            if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 39369, 39623) || true) && (f_10038_39373_39446(tree, loadedSyntaxTreeMap))
                            )

                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 39369, 39623);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 39496, 39600);

                                throw f_10038_39502_39599(f_10038_39524_39573(), $"{nameof(trees)}[{i}]");
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 39369, 39623);
                            }
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 39647, 39744);

                            throw f_10038_39653_39743(f_10038_39675_39717(), $"{nameof(trees)}[{i}]");
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 39111, 39763);
                        }
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 39783, 39803);

                        f_10038_39783_39802(
                                        removeSet, tree);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 39821, 39881);

                        reuseReferenceManager &= f_10038_39846_39880_M(!tree.HasReferenceOrLoadDirectives);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 39901, 39905);

                        i++;
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 39026, 39920);
                    }
                }
                catch (System.Exception)
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoopByException(10038, 1, 895);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoop(10038, 1, 895);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 39934, 39961);

                f_10038_39934_39960(externalSyntaxTrees);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 39977, 40052);

                syntaxAndDeclarations = f_10038_40001_40051(syntaxAndDeclarations, removeSet);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 40066, 40083);

                f_10038_40066_40082(removeSet);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 40099, 40178);

                return f_10038_40106_40177(this, _referenceManager, reuseReferenceManager, syntaxAndDeclarations);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 37994, 40189);

                System.ArgumentNullException
                f_10038_38153_38193(string
                paramName)
                {
                    var return_v = new System.ArgumentNullException(paramName);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 38153, 38193);
                    return return_v;
                }


                bool
                f_10038_38229_38244(System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.SyntaxTree>
                source)
                {
                    var return_v = source.IsEmpty<Microsoft.CodeAnalysis.SyntaxTree>();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 38229, 38244);
                    return return_v;
                }


                Microsoft.CodeAnalysis.PooledObjects.PooledHashSet<Microsoft.CodeAnalysis.SyntaxTree>
                f_10038_38337_38376()
                {
                    var return_v = PooledHashSet<SyntaxTree>.GetInstance();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 38337, 38376);
                    return return_v;
                }


                Microsoft.CodeAnalysis.PooledObjects.PooledHashSet<Microsoft.CodeAnalysis.SyntaxTree>
                f_10038_38751_38790()
                {
                    var return_v = PooledHashSet<SyntaxTree>.GetInstance();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 38751, 38790);
                    return return_v;
                }


                System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.CSharp.CSharpSyntaxTree>
                f_10038_39047_39077(System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.SyntaxTree>
                source)
                {
                    var return_v = source.Cast<Microsoft.CodeAnalysis.CSharp.CSharpSyntaxTree>();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 39047, 39077);
                    return return_v;
                }


                bool
                f_10038_39116_39150(Microsoft.CodeAnalysis.PooledObjects.PooledHashSet<Microsoft.CodeAnalysis.SyntaxTree>
                this_param, Microsoft.CodeAnalysis.CSharp.CSharpSyntaxTree
                item)
                {
                    var return_v = this_param.Contains((Microsoft.CodeAnalysis.SyntaxTree)item);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 39116, 39150);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.SyntaxAndDeclarationManager.State
                f_10038_39290_39326(Microsoft.CodeAnalysis.CSharp.SyntaxAndDeclarationManager
                this_param)
                {
                    var return_v = this_param.GetLazyState();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 39290, 39326);
                    return return_v;
                }


                bool
                f_10038_39373_39446(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxTree
                tree, System.Collections.Immutable.ImmutableDictionary<string, Microsoft.CodeAnalysis.SyntaxTree>
                loadedSyntaxTreeMap)
                {
                    var return_v = SyntaxAndDeclarationManager.IsLoadedSyntaxTree((Microsoft.CodeAnalysis.SyntaxTree)tree, loadedSyntaxTreeMap);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 39373, 39446);
                    return return_v;
                }


                string
                f_10038_39524_39573()
                {
                    var return_v = CSharpResources.SyntaxTreeFromLoadNoRemoveReplace;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 39524, 39573);
                    return return_v;
                }


                System.ArgumentException
                f_10038_39502_39599(string
                message, string
                paramName)
                {
                    var return_v = new System.ArgumentException(message, paramName);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 39502, 39599);
                    return return_v;
                }


                string
                f_10038_39675_39717()
                {
                    var return_v = CSharpResources.SyntaxTreeNotFoundToRemove;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 39675, 39717);
                    return return_v;
                }


                System.ArgumentException
                f_10038_39653_39743(string
                message, string
                paramName)
                {
                    var return_v = new System.ArgumentException(message, paramName);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 39653, 39743);
                    return return_v;
                }


                bool
                f_10038_39783_39802(Microsoft.CodeAnalysis.PooledObjects.PooledHashSet<Microsoft.CodeAnalysis.SyntaxTree>
                this_param, Microsoft.CodeAnalysis.CSharp.CSharpSyntaxTree
                item)
                {
                    var return_v = this_param.Add((Microsoft.CodeAnalysis.SyntaxTree)item);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 39783, 39802);
                    return return_v;
                }


                bool
                f_10038_39846_39880_M(bool
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 39846, 39880);
                    return return_v;
                }


                System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.CSharp.CSharpSyntaxTree>
                f_10038_39047_39077_I(System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.CSharp.CSharpSyntaxTree>
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 39047, 39077);
                    return return_v;
                }


                int
                f_10038_39934_39960(Microsoft.CodeAnalysis.PooledObjects.PooledHashSet<Microsoft.CodeAnalysis.SyntaxTree>
                this_param)
                {
                    this_param.Free();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 39934, 39960);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.SyntaxAndDeclarationManager
                f_10038_40001_40051(Microsoft.CodeAnalysis.CSharp.SyntaxAndDeclarationManager
                this_param, Microsoft.CodeAnalysis.PooledObjects.PooledHashSet<Microsoft.CodeAnalysis.SyntaxTree>
                trees)
                {
                    var return_v = this_param.RemoveSyntaxTrees((System.Collections.Generic.HashSet<Microsoft.CodeAnalysis.SyntaxTree>)trees);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 40001, 40051);
                    return return_v;
                }


                int
                f_10038_40066_40082(Microsoft.CodeAnalysis.PooledObjects.PooledHashSet<Microsoft.CodeAnalysis.SyntaxTree>
                this_param)
                {
                    this_param.Free();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 40066, 40082);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                f_10038_40106_40177(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param, Microsoft.CodeAnalysis.CSharp.CSharpCompilation.ReferenceManager
                referenceManager, bool
                reuseReferenceManager, Microsoft.CodeAnalysis.CSharp.SyntaxAndDeclarationManager
                syntaxAndDeclarations)
                {
                    var return_v = this_param.Update(referenceManager, reuseReferenceManager, syntaxAndDeclarations);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 40106, 40177);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 37994, 40189);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 37994, 40189);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public new CSharpCompilation RemoveAllSyntaxTrees()
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 40404, 40821);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 40480, 40531);

                var
                syntaxAndDeclarations = _syntaxAndDeclarations
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 40545, 40810);

                return f_10038_40552_40809(this, _referenceManager, reuseReferenceManager: !f_10038_40637_40687(syntaxAndDeclarations), syntaxAndDeclarations: f_10038_40729_40808(syntaxAndDeclarations, ImmutableArray<SyntaxTree>.Empty));
                DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 40404, 40821);

                bool
                f_10038_40637_40687(Microsoft.CodeAnalysis.CSharp.SyntaxAndDeclarationManager
                this_param)
                {
                    var return_v = this_param.MayHaveReferenceDirectives();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 40637, 40687);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.SyntaxAndDeclarationManager
                f_10038_40729_40808(Microsoft.CodeAnalysis.CSharp.SyntaxAndDeclarationManager
                this_param, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.SyntaxTree>
                trees)
                {
                    var return_v = this_param.WithExternalSyntaxTrees(trees);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 40729, 40808);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                f_10038_40552_40809(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param, Microsoft.CodeAnalysis.CSharp.CSharpCompilation.ReferenceManager
                referenceManager, bool
                reuseReferenceManager, Microsoft.CodeAnalysis.CSharp.SyntaxAndDeclarationManager
                syntaxAndDeclarations)
                {
                    var return_v = this_param.Update(referenceManager, reuseReferenceManager: reuseReferenceManager, syntaxAndDeclarations: syntaxAndDeclarations);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 40552, 40809);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 40404, 40821);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 40404, 40821);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public new CSharpCompilation ReplaceSyntaxTree(SyntaxTree oldTree, SyntaxTree? newTree)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 40963, 43431);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 41130, 41166);

                oldTree = (CSharpSyntaxTree)oldTree;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 41180, 41217);

                newTree = (CSharpSyntaxTree?)newTree;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 41233, 41350) || true) && (oldTree == null)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 41233, 41350);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 41286, 41335);

                    throw f_10038_41292_41334(nameof(oldTree));
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 41233, 41350);
                }

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 41366, 41575) || true) && (newTree == null)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 41366, 41575);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 41419, 41458);

                    return f_10038_41426_41457(this, oldTree);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 41366, 41575);
                }

                else
                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 41366, 41575);

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 41492, 41575) || true) && (newTree == oldTree)
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 41492, 41575);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 41548, 41560);

                        return this;
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 41492, 41575);
                    }
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 41366, 41575);
                }

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 41591, 41763) || true) && (f_10038_41595_41626_M(!newTree.HasCompilationUnitRoot))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 41591, 41763);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 41660, 41748);

                    throw f_10038_41666_41747(f_10038_41688_41729(), nameof(newTree));
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 41591, 41763);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 41779, 41830);

                var
                syntaxAndDeclarations = _syntaxAndDeclarations
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 41844, 41912);

                var
                externalSyntaxTrees = syntaxAndDeclarations.ExternalSyntaxTrees
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 41926, 42525) || true) && (!externalSyntaxTrees.Contains(oldTree))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 41926, 42525);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 42063, 42146);

                    var
                    loadedSyntaxTreeMap = f_10038_42089_42125(syntaxAndDeclarations).LoadedSyntaxTreeMap
                    ;

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 42164, 42401) || true) && (f_10038_42168_42244(oldTree, loadedSyntaxTreeMap))
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 42164, 42401);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 42286, 42382);

                        throw f_10038_42292_42381(f_10038_42314_42363(), nameof(oldTree));
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 42164, 42401);
                    }
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 42421, 42510);

                    throw f_10038_42427_42509(f_10038_42449_42491(), nameof(oldTree));
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 41926, 42525);
                }

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 42541, 42718) || true) && (externalSyntaxTrees.Contains(newTree))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 42541, 42718);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 42616, 42703);

                    throw f_10038_42622_42702(f_10038_42644_42684(), nameof(newTree));
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 42541, 42718);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 43118, 43229);

                var
                reuseReferenceManager = !f_10038_43147_43185(oldTree) && (DynAbs.Tracing.TraceSender.Expression_True(10038, 43146, 43228) && !f_10038_43190_43228(newTree))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 43243, 43325);

                syntaxAndDeclarations = f_10038_43267_43324(syntaxAndDeclarations, oldTree, newTree);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 43341, 43420);

                return f_10038_43348_43419(this, _referenceManager, reuseReferenceManager, syntaxAndDeclarations);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 40963, 43431);

                System.ArgumentNullException
                f_10038_41292_41334(string
                paramName)
                {
                    var return_v = new System.ArgumentNullException(paramName);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 41292, 41334);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                f_10038_41426_41457(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param, params Microsoft.CodeAnalysis.SyntaxTree[]
                trees)
                {
                    var return_v = this_param.RemoveSyntaxTrees(trees);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 41426, 41457);
                    return return_v;
                }


                bool
                f_10038_41595_41626_M(bool
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 41595, 41626);
                    return return_v;
                }


                string
                f_10038_41688_41729()
                {
                    var return_v = CSharpResources.TreeMustHaveARootNodeWith;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 41688, 41729);
                    return return_v;
                }


                System.ArgumentException
                f_10038_41666_41747(string
                message, string
                paramName)
                {
                    var return_v = new System.ArgumentException(message, paramName);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 41666, 41747);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.SyntaxAndDeclarationManager.State
                f_10038_42089_42125(Microsoft.CodeAnalysis.CSharp.SyntaxAndDeclarationManager
                this_param)
                {
                    var return_v = this_param.GetLazyState();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 42089, 42125);
                    return return_v;
                }


                bool
                f_10038_42168_42244(Microsoft.CodeAnalysis.SyntaxTree
                tree, System.Collections.Immutable.ImmutableDictionary<string, Microsoft.CodeAnalysis.SyntaxTree>
                loadedSyntaxTreeMap)
                {
                    var return_v = SyntaxAndDeclarationManager.IsLoadedSyntaxTree(tree, loadedSyntaxTreeMap);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 42168, 42244);
                    return return_v;
                }


                string
                f_10038_42314_42363()
                {
                    var return_v = CSharpResources.SyntaxTreeFromLoadNoRemoveReplace;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 42314, 42363);
                    return return_v;
                }


                System.ArgumentException
                f_10038_42292_42381(string
                message, string
                paramName)
                {
                    var return_v = new System.ArgumentException(message, paramName);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 42292, 42381);
                    return return_v;
                }


                string
                f_10038_42449_42491()
                {
                    var return_v = CSharpResources.SyntaxTreeNotFoundToRemove;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 42449, 42491);
                    return return_v;
                }


                System.ArgumentException
                f_10038_42427_42509(string
                message, string
                paramName)
                {
                    var return_v = new System.ArgumentException(message, paramName);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 42427, 42509);
                    return return_v;
                }


                string
                f_10038_42644_42684()
                {
                    var return_v = CSharpResources.SyntaxTreeAlreadyPresent;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 42644, 42684);
                    return return_v;
                }


                System.ArgumentException
                f_10038_42622_42702(string
                message, string
                paramName)
                {
                    var return_v = new System.ArgumentException(message, paramName);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 42622, 42702);
                    return return_v;
                }


                bool
                f_10038_43147_43185(Microsoft.CodeAnalysis.SyntaxTree
                tree)
                {
                    var return_v = tree.HasReferenceOrLoadDirectives();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 43147, 43185);
                    return return_v;
                }


                bool
                f_10038_43190_43228(Microsoft.CodeAnalysis.SyntaxTree
                tree)
                {
                    var return_v = tree.HasReferenceOrLoadDirectives();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 43190, 43228);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.SyntaxAndDeclarationManager
                f_10038_43267_43324(Microsoft.CodeAnalysis.CSharp.SyntaxAndDeclarationManager
                this_param, Microsoft.CodeAnalysis.SyntaxTree
                oldTree, Microsoft.CodeAnalysis.SyntaxTree
                newTree)
                {
                    var return_v = this_param.ReplaceSyntaxTree(oldTree, newTree);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 43267, 43324);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                f_10038_43348_43419(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param, Microsoft.CodeAnalysis.CSharp.CSharpCompilation.ReferenceManager
                referenceManager, bool
                reuseReferenceManager, Microsoft.CodeAnalysis.CSharp.SyntaxAndDeclarationManager
                syntaxAndDeclarations)
                {
                    var return_v = this_param.Update(referenceManager, reuseReferenceManager, syntaxAndDeclarations);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 43348, 43419);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 40963, 43431);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 40963, 43431);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        internal override int GetSyntaxTreeOrdinal(SyntaxTree tree)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 43443, 43658);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 43527, 43571);

                f_10038_43527_43570(f_10038_43540_43569(this, tree));
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 43585, 43647);

                return f_10038_43592_43646(f_10038_43592_43629(_syntaxAndDeclarations).OrdinalMap, tree);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 43443, 43658);

                bool
                f_10038_43540_43569(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param, Microsoft.CodeAnalysis.SyntaxTree
                syntaxTree)
                {
                    var return_v = this_param.ContainsSyntaxTree(syntaxTree);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 43540, 43569);
                    return return_v;
                }


                int
                f_10038_43527_43570(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 43527, 43570);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.SyntaxAndDeclarationManager.State
                f_10038_43592_43629(Microsoft.CodeAnalysis.CSharp.SyntaxAndDeclarationManager
                this_param)
                {
                    var return_v = this_param.GetLazyState();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 43592, 43629);
                    return return_v;
                }


                int
                f_10038_43592_43646(System.Collections.Immutable.ImmutableDictionary<Microsoft.CodeAnalysis.SyntaxTree, int>
                this_param, Microsoft.CodeAnalysis.SyntaxTree
                i0)
                {
                    var return_v = this_param[i0];
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 43592, 43646);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 43443, 43658);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 43443, 43658);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }
        #endregion


        internal override CommonReferenceManager CommonGetBoundReferenceManager()
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 43722, 43865);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 43820, 43854);

                return f_10038_43827_43853(this);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 43722, 43865);

                Microsoft.CodeAnalysis.CSharp.CSharpCompilation.ReferenceManager
                f_10038_43827_43853(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param)
                {
                    var return_v = this_param.GetBoundReferenceManager();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 43827, 43853);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 43722, 43865);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 43722, 43865);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        internal new ReferenceManager GetBoundReferenceManager()
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 43877, 44409);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 43958, 44159) || true) && (_lazyAssemblySymbol is null)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 43958, 44159);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 44023, 44082);

                    f_10038_44023_44081(_referenceManager, this);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 44100, 44144);

                    f_10038_44100_44143(_lazyAssemblySymbol is object);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 43958, 44159);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 44373, 44398);

                return _referenceManager;
                DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 43877, 44409);

                int
                f_10038_44023_44081(Microsoft.CodeAnalysis.CSharp.CSharpCompilation.ReferenceManager
                this_param, Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                compilation)
                {
                    this_param.CreateSourceAssemblyForCompilation(compilation);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 44023, 44081);
                    return 0;
                }


                int
                f_10038_44100_44143(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 44100, 44143);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 43877, 44409);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 43877, 44409);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        internal bool ReferenceManagerEquals(CSharpCompilation other)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 44451, 44615);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 44537, 44604);

                return f_10038_44544_44603(_referenceManager, other._referenceManager);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 44451, 44615);

                bool
                f_10038_44544_44603(Microsoft.CodeAnalysis.CSharp.CSharpCompilation.ReferenceManager
                objA, Microsoft.CodeAnalysis.CSharp.CSharpCompilation.ReferenceManager
                objB)
                {
                    var return_v = ReferenceEquals((object)objA, (object)objB);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 44544, 44603);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 44451, 44615);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 44451, 44615);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override ImmutableArray<MetadataReference> DirectiveReferences
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 44721, 44826);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 44757, 44811);

                    return f_10038_44764_44810(f_10038_44764_44790(this));
                    DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 44721, 44826);

                    Microsoft.CodeAnalysis.CSharp.CSharpCompilation.ReferenceManager
                    f_10038_44764_44790(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                    this_param)
                    {
                        var return_v = this_param.GetBoundReferenceManager();
                        DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 44764, 44790);
                        return return_v;
                    }


                    System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.MetadataReference>
                    f_10038_44764_44810(Microsoft.CodeAnalysis.CSharp.CSharpCompilation.ReferenceManager
                    this_param)
                    {
                        var return_v = this_param.DirectiveReferences;
                        DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 44764, 44810);
                        return return_v;
                    }

                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 44627, 44837);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 44627, 44837);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        internal override IDictionary<(string path, string content), MetadataReference> ReferenceDirectiveMap
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 44964, 45015);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 44967, 45015);
                    return f_10038_44967_45015(f_10038_44967_44993(this)); DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 44964, 45015);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 44964, 45015);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 44964, 45015);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        internal IEnumerable<string> ExternAliases
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 45128, 45227);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 45164, 45212);

                    return f_10038_45171_45211(f_10038_45171_45197(this));
                    DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 45128, 45227);

                    Microsoft.CodeAnalysis.CSharp.CSharpCompilation.ReferenceManager
                    f_10038_45171_45197(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                    this_param)
                    {
                        var return_v = this_param.GetBoundReferenceManager();
                        DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 45171, 45197);
                        return return_v;
                    }


                    System.Collections.Generic.IEnumerable<string>
                    f_10038_45171_45211(Microsoft.CodeAnalysis.CSharp.CSharpCompilation.ReferenceManager
                    this_param)
                    {
                        var return_v = this_param.ExternAliases;
                        DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 45171, 45211);
                        return return_v;
                    }

                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 45061, 45238);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 45061, 45238);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        internal new Symbol? GetAssemblyOrModuleSymbol(MetadataReference reference)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 45702, 46431);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 45802, 45923) || true) && (reference == null)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 45802, 45923);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 45857, 45908);

                    throw f_10038_45863_45907(nameof(reference));
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 45802, 45923);
                }

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 45939, 46420) || true) && (reference.Properties.Kind == MetadataImageKind.Assembly)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 45939, 46420);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 46032, 46105);

                    return f_10038_46039_46104(f_10038_46039_46065(this), reference);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 45939, 46420);
                }

                else

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 45939, 46420);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 46171, 46239);

                    f_10038_46171_46238(reference.Properties.Kind == MetadataImageKind.Module);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 46257, 46332);

                    int
                    index = f_10038_46269_46331(f_10038_46269_46295(this), reference)
                    ;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 46350, 46405);

                    return (DynAbs.Tracing.TraceSender.Conditional_F1(10038, 46357, 46366) || ((index < 0 && DynAbs.Tracing.TraceSender.Conditional_F2(10038, 46369, 46373)) || DynAbs.Tracing.TraceSender.Conditional_F3(10038, 46376, 46404))) ? null : f_10038_46376_46397(f_10038_46376_46389(this))[index];
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 45939, 46420);
                }
                DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 45702, 46431);

                System.ArgumentNullException
                f_10038_45863_45907(string
                paramName)
                {
                    var return_v = new System.ArgumentNullException(paramName);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 45863, 45907);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSharpCompilation.ReferenceManager
                f_10038_46039_46065(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param)
                {
                    var return_v = this_param.GetBoundReferenceManager();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 46039, 46065);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.AssemblySymbol?
                f_10038_46039_46104(Microsoft.CodeAnalysis.CSharp.CSharpCompilation.ReferenceManager
                this_param, Microsoft.CodeAnalysis.MetadataReference
                reference)
                {
                    var return_v = this_param.GetReferencedAssemblySymbol(reference);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 46039, 46104);
                    return return_v;
                }


                int
                f_10038_46171_46238(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 46171, 46238);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.CSharpCompilation.ReferenceManager
                f_10038_46269_46295(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param)
                {
                    var return_v = this_param.GetBoundReferenceManager();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 46269, 46295);
                    return return_v;
                }


                int
                f_10038_46269_46331(Microsoft.CodeAnalysis.CSharp.CSharpCompilation.ReferenceManager
                this_param, Microsoft.CodeAnalysis.MetadataReference
                reference)
                {
                    var return_v = this_param.GetReferencedModuleIndex(reference);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 46269, 46331);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.AssemblySymbol
                f_10038_46376_46389(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param)
                {
                    var return_v = this_param.Assembly;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 46376, 46389);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.ModuleSymbol>
                f_10038_46376_46397(Microsoft.CodeAnalysis.CSharp.Symbols.AssemblySymbol
                this_param)
                {
                    var return_v = this_param.Modules;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 46376, 46397);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 45702, 46431);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 45702, 46431);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override IEnumerable<AssemblyIdentity> ReferencedAssemblyNames
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 46537, 46667);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 46573, 46652);

                    // Lafhis
                    var temp = f_10038_46580_46588().Modules;
                    return f_10038_46580_46651(ref temp, module => module.GetReferencedAssemblies());
                    DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 46537, 46667);

                    Microsoft.CodeAnalysis.CSharp.Symbols.AssemblySymbol
                    f_10038_46580_46588()
                    {
                        var return_v = Assembly;
                        DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 46580, 46588);
                        return return_v;
                    }


                    System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.AssemblyIdentity>
                    f_10038_46580_46651(ref System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.ModuleSymbol>
                    source, System.Func<Microsoft.CodeAnalysis.CSharp.Symbols.ModuleSymbol, System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.AssemblyIdentity>>
                    selector)
                    {
                        var return_v = source.SelectMany<Microsoft.CodeAnalysis.CSharp.Symbols.ModuleSymbol, Microsoft.CodeAnalysis.AssemblyIdentity>(selector);
                        DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 46580, 46651);
                        return return_v;
                    }

                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 46443, 46678);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 46443, 46678);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        internal override IEnumerable<ReferenceDirective> ReferenceDirectives
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 46895, 46948);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 46901, 46946);

                    return f_10038_46908_46945(f_10038_46908_46925(this));
                    DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 46895, 46948);

                    Microsoft.CodeAnalysis.CSharp.DeclarationTable
                    f_10038_46908_46925(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                    this_param)
                    {
                        var return_v = this_param.Declarations;
                        DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 46908, 46925);
                        return return_v;
                    }


                    System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.ReferenceDirective>
                    f_10038_46908_46945(Microsoft.CodeAnalysis.CSharp.DeclarationTable
                    this_param)
                    {
                        var return_v = this_param.ReferenceDirectives;
                        DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 46908, 46945);
                        return return_v;
                    }

                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 46801, 46959);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 46801, 46959);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public MetadataReference? GetDirectiveReference(ReferenceDirectiveTriviaSyntax directive)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 47331, 47709);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 47445, 47505);

                f_10038_47445_47504(f_10038_47464_47493(f_10038_47464_47484(directive)) is object);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 47521, 47550);

                MetadataReference?
                reference
                = default(MetadataReference?);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 47564, 47698);

                return (DynAbs.Tracing.TraceSender.Conditional_F1(10038, 47571, 47678) || ((f_10038_47571_47678(f_10038_47571_47592(), (f_10038_47606_47635(f_10038_47606_47626(directive)), directive.File.ValueText), out reference) && DynAbs.Tracing.TraceSender.Conditional_F2(10038, 47681, 47690)) || DynAbs.Tracing.TraceSender.Conditional_F3(10038, 47693, 47697))) ? reference : null;
                DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 47331, 47709);

                Microsoft.CodeAnalysis.SyntaxTree
                f_10038_47464_47484(Microsoft.CodeAnalysis.CSharp.Syntax.ReferenceDirectiveTriviaSyntax
                this_param)
                {
                    var return_v = this_param.SyntaxTree;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 47464, 47484);
                    return return_v;
                }


                string
                f_10038_47464_47493(Microsoft.CodeAnalysis.SyntaxTree
                this_param)
                {
                    var return_v = this_param.FilePath;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 47464, 47493);
                    return return_v;
                }


                int
                f_10038_47445_47504(bool
                b)
                {
                    RoslynDebug.Assert(b);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 47445, 47504);
                    return 0;
                }


                System.Collections.Generic.IDictionary<(string path, string content), Microsoft.CodeAnalysis.MetadataReference>
                f_10038_47571_47592()
                {
                    var return_v = ReferenceDirectiveMap;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 47571, 47592);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SyntaxTree
                f_10038_47606_47626(Microsoft.CodeAnalysis.CSharp.Syntax.ReferenceDirectiveTriviaSyntax
                this_param)
                {
                    var return_v = this_param.SyntaxTree;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 47606, 47626);
                    return return_v;
                }


                string
                f_10038_47606_47635(Microsoft.CodeAnalysis.SyntaxTree
                this_param)
                {
                    var return_v = this_param.FilePath;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 47606, 47635);
                    return return_v;
                }


                bool
                f_10038_47571_47678(System.Collections.Generic.IDictionary<(string path, string content), Microsoft.CodeAnalysis.MetadataReference>
                this_param, (string FilePath, string ValueText)
                key, out Microsoft.CodeAnalysis.MetadataReference?
                value)
                {
                    var return_v = this_param.TryGetValue(((string path, string content))key, out value);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 47571, 47678);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 47331, 47709);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 47331, 47709);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public new CSharpCompilation AddReferences(params MetadataReference[] references)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 47844, 48018);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 47950, 48007);

                return (CSharpCompilation)DynAbs.Tracing.TraceSender.TraceInvocationWrapper(() => base.AddReferences(references), 10038, 47976, 48006);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 47844, 48018);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 47844, 48018);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 47844, 48018);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public new CSharpCompilation AddReferences(IEnumerable<MetadataReference> references)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 48153, 48331);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 48263, 48320);

                return (CSharpCompilation)DynAbs.Tracing.TraceSender.TraceInvocationWrapper(() => base.AddReferences(references), 10038, 48289, 48319);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 48153, 48331);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 48153, 48331);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 48153, 48331);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public new CSharpCompilation RemoveReferences(params MetadataReference[] references)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 48472, 48652);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 48581, 48641);

                return (CSharpCompilation)DynAbs.Tracing.TraceSender.TraceInvocationWrapper(() => base.RemoveReferences(references), 10038, 48607, 48640);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 48472, 48652);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 48472, 48652);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 48472, 48652);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public new CSharpCompilation RemoveReferences(IEnumerable<MetadataReference> references)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 48793, 48977);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 48906, 48966);

                return (CSharpCompilation)DynAbs.Tracing.TraceSender.TraceInvocationWrapper(() => base.RemoveReferences(references), 10038, 48932, 48965);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 48793, 48977);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 48793, 48977);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 48793, 48977);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public new CSharpCompilation RemoveAllReferences()
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 49107, 49246);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 49182, 49235);

                return (CSharpCompilation)DynAbs.Tracing.TraceSender.TraceInvocationWrapper(() => base.RemoveAllReferences(), 10038, 49208, 49234);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 49107, 49246);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 49107, 49246);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 49107, 49246);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public new CSharpCompilation ReplaceReference(MetadataReference oldReference, MetadataReference newReference)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 49415, 49636);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 49549, 49625);

                return (CSharpCompilation)DynAbs.Tracing.TraceSender.TraceInvocationWrapper(() => base.ReplaceReference(oldReference, newReference), 10038, 49575, 49624);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 49415, 49636);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 49415, 49636);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 49415, 49636);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override CompilationReference ToMetadataReference(ImmutableArray<string> aliases = default, bool embedInteropTypes = false)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 49648, 49886);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 49803, 49875);

                return f_10038_49810_49874(this, aliases, embedInteropTypes);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 49648, 49886);

                Microsoft.CodeAnalysis.CSharp.CSharpCompilationReference
                f_10038_49810_49874(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                compilation, System.Collections.Immutable.ImmutableArray<string>
                aliases, bool
                embedInteropTypes)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.CSharpCompilationReference(compilation, aliases, embedInteropTypes);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 49810, 49874);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 49648, 49886);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 49648, 49886);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private void GetAllUnaliasedModules(ArrayBuilder<ModuleSymbol> modules)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 50398, 51034);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 50602, 50637);

                f_10038_50602_50636(            // NOTE: This includes referenced modules - they count as modules of the compilation assembly.
                            modules, f_10038_50619_50635(f_10038_50619_50627()));
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 50653, 50703);

                var
                referenceManager = f_10038_50676_50702(this)
                ;
                try
                {
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 50728, 50733);

                    for (int
        i = 0
        ; (DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 50719, 51023) || true) && (i < referenceManager.ReferencedAssemblies.Length)
        ; DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 50785, 50788)
        , i++, DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 50719, 51023))

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 50719, 51023);

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 50822, 51008) || true) && (f_10038_50826_50880(referenceManager, i))
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 50822, 51008);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 50922, 50989);

                            f_10038_50922_50988(modules, f_10038_50939_50987(f_10038_50939_50976(referenceManager)[i]));
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 50822, 51008);
                        }
                    }
                }
                catch (System.Exception)
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoopByException(10038, 1, 305);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoop(10038, 1, 305);
                }
                DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 50398, 51034);

                Microsoft.CodeAnalysis.CSharp.Symbols.AssemblySymbol
                f_10038_50619_50627()
                {
                    var return_v = Assembly;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 50619, 50627);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.ModuleSymbol>
                f_10038_50619_50635(Microsoft.CodeAnalysis.CSharp.Symbols.AssemblySymbol
                this_param)
                {
                    var return_v = this_param.Modules;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 50619, 50635);
                    return return_v;
                }


                int
                f_10038_50602_50636(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbols.ModuleSymbol>
                this_param, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.ModuleSymbol>
                items)
                {
                    this_param.AddRange(items);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 50602, 50636);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.CSharpCompilation.ReferenceManager
                f_10038_50676_50702(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param)
                {
                    var return_v = this_param.GetBoundReferenceManager();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 50676, 50702);
                    return return_v;
                }


                bool
                f_10038_50826_50880(Microsoft.CodeAnalysis.CSharp.CSharpCompilation.ReferenceManager
                this_param, int
                referencedAssemblyIndex)
                {
                    var return_v = this_param.DeclarationsAccessibleWithoutAlias(referencedAssemblyIndex);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 50826, 50880);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.AssemblySymbol>
                f_10038_50939_50976(Microsoft.CodeAnalysis.CSharp.CSharpCompilation.ReferenceManager
                this_param)
                {
                    var return_v = this_param.ReferencedAssemblies;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 50939, 50976);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.ModuleSymbol>
                f_10038_50939_50987(Microsoft.CodeAnalysis.CSharp.Symbols.AssemblySymbol
                this_param)
                {
                    var return_v = this_param.Modules;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 50939, 50987);
                    return return_v;
                }


                int
                f_10038_50922_50988(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbols.ModuleSymbol>
                this_param, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.ModuleSymbol>
                items)
                {
                    this_param.AddRange(items);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 50922, 50988);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 50398, 51034);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 50398, 51034);
            }
        }

        internal void GetUnaliasedReferencedAssemblies(ArrayBuilder<AssemblySymbol> assemblies)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 51345, 51828);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 51457, 51507);

                var
                referenceManager = f_10038_51480_51506(this)
                ;
                try
                {
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 51532, 51537);

                    for (int
        i = 0
        ; (DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 51523, 51817) || true) && (i < referenceManager.ReferencedAssemblies.Length)
        ; DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 51589, 51592)
        , i++, DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 51523, 51817))

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 51523, 51817);

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 51626, 51802) || true) && (f_10038_51630_51684(referenceManager, i))
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 51626, 51802);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 51726, 51783);

                            f_10038_51726_51782(assemblies, f_10038_51741_51778(referenceManager)[i]);
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 51626, 51802);
                        }
                    }
                }
                catch (System.Exception)
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoopByException(10038, 1, 295);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoop(10038, 1, 295);
                }
                DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 51345, 51828);

                Microsoft.CodeAnalysis.CSharp.CSharpCompilation.ReferenceManager
                f_10038_51480_51506(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param)
                {
                    var return_v = this_param.GetBoundReferenceManager();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 51480, 51506);
                    return return_v;
                }


                bool
                f_10038_51630_51684(Microsoft.CodeAnalysis.CSharp.CSharpCompilation.ReferenceManager
                this_param, int
                referencedAssemblyIndex)
                {
                    var return_v = this_param.DeclarationsAccessibleWithoutAlias(referencedAssemblyIndex);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 51630, 51684);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.AssemblySymbol>
                f_10038_51741_51778(Microsoft.CodeAnalysis.CSharp.CSharpCompilation.ReferenceManager
                this_param)
                {
                    var return_v = this_param.ReferencedAssemblies;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 51741, 51778);
                    return return_v;
                }


                int
                f_10038_51726_51782(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbols.AssemblySymbol>
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.AssemblySymbol
                item)
                {
                    this_param.Add(item);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 51726, 51782);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 51345, 51828);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 51345, 51828);
            }
        }

        public new MetadataReference? GetMetadataReference(IAssemblySymbol assemblySymbol)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 51982, 52149);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 52089, 52138);

                return DynAbs.Tracing.TraceSender.TraceInvocationWrapper(() => base.GetMetadataReference(assemblySymbol), 10038, 52096, 52137);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 51982, 52149);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 51982, 52149);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 51982, 52149);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private protected override MetadataReference? CommonGetMetadataReference(IAssemblySymbol assemblySymbol)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 52161, 52531);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 52290, 52492) || true) && (assemblySymbol is Symbols.PublicModel.AssemblySymbol { UnderlyingAssemblySymbol: var underlyingSymbol })
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 52290, 52492);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 52431, 52477);

                    return f_10038_52438_52476(this, underlyingSymbol);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 52290, 52492);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 52508, 52520);

                return null;
                DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 52161, 52531);

                Microsoft.CodeAnalysis.MetadataReference?
                f_10038_52438_52476(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.AssemblySymbol
                assemblySymbol)
                {
                    var return_v = this_param.GetMetadataReference(assemblySymbol);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 52438, 52476);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 52161, 52531);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 52161, 52531);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        internal MetadataReference? GetMetadataReference(AssemblySymbol? assemblySymbol)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 52543, 52730);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 52648, 52719);

                return f_10038_52655_52718(f_10038_52655_52681(this), assemblySymbol);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 52543, 52730);

                Microsoft.CodeAnalysis.CSharp.CSharpCompilation.ReferenceManager
                f_10038_52655_52681(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param)
                {
                    var return_v = this_param.GetBoundReferenceManager();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 52655, 52681);
                    return return_v;
                }


                Microsoft.CodeAnalysis.MetadataReference?
                f_10038_52655_52718(Microsoft.CodeAnalysis.CSharp.CSharpCompilation.ReferenceManager
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.AssemblySymbol?
                assemblySymbol)
                {
                    var return_v = this_param.GetMetadataReference((Microsoft.CodeAnalysis.Symbols.IAssemblySymbolInternal?)assemblySymbol);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 52655, 52718);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 52543, 52730);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 52543, 52730);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        internal SourceAssemblySymbol SourceAssembly
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 52983, 53174);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 53019, 53046);

                    f_10038_53019_53045(this);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 53064, 53114);

                    f_10038_53064_53113(_lazyAssemblySymbol is object);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 53132, 53159);

                    return _lazyAssemblySymbol;
                    DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 52983, 53174);

                    Microsoft.CodeAnalysis.CSharp.CSharpCompilation.ReferenceManager
                    f_10038_53019_53045(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                    this_param)
                    {
                        var return_v = this_param.GetBoundReferenceManager();
                        DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 53019, 53045);
                        return return_v;
                    }


                    int
                    f_10038_53064_53113(bool
                    b)
                    {
                        RoslynDebug.Assert(b);
                        DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 53064, 53113);
                        return 0;
                    }

                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 52914, 53185);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 52914, 53185);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        internal new AssemblySymbol Assembly
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 53381, 53454);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 53417, 53439);

                    return f_10038_53424_53438();
                    DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 53381, 53454);

                    Microsoft.CodeAnalysis.CSharp.Symbols.SourceAssemblySymbol
                    f_10038_53424_53438()
                    {
                        var return_v = SourceAssembly;
                        DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 53424, 53438);
                        return return_v;
                    }

                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 53320, 53465);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 53320, 53465);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        internal new ModuleSymbol SourceModule
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 53843, 53921);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 53879, 53906);

                    return f_10038_53886_53902(f_10038_53886_53894())[0];
                    DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 53843, 53921);

                    Microsoft.CodeAnalysis.CSharp.Symbols.AssemblySymbol
                    f_10038_53886_53894()
                    {
                        var return_v = Assembly;
                        DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 53886, 53894);
                        return return_v;
                    }


                    System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.ModuleSymbol>
                    f_10038_53886_53902(Microsoft.CodeAnalysis.CSharp.Symbols.AssemblySymbol
                    this_param)
                    {
                        var return_v = this_param.Modules;
                        DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 53886, 53902);
                        return return_v;
                    }

                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 53780, 53932);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 53780, 53932);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        internal new NamespaceSymbol GlobalNamespace
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 54241, 55178);

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 54277, 55115) || true) && (_lazyGlobalNamespace is null)
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 54277, 55115);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 54633, 54688);

                        var
                        modules = f_10038_54647_54687()
                        ;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 54710, 54742);

                        f_10038_54710_54741(this, modules);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 54766, 54965);

                        var
                        result = f_10038_54779_54964(f_10038_54834_54859(this), null, f_10038_54917_54963(modules, m => m.GlobalNamespace))
                        ;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 54989, 55004);

                        f_10038_54989_55003(
                                            modules);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 55028, 55096);

                        f_10038_55028_55095(ref _lazyGlobalNamespace, result, null);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 54277, 55115);
                    }
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 55135, 55163);

                    return _lazyGlobalNamespace;
                    DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 54241, 55178);

                    Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbols.ModuleSymbol>
                    f_10038_54647_54687()
                    {
                        var return_v = ArrayBuilder<ModuleSymbol>.GetInstance();
                        DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 54647, 54687);
                        return return_v;
                    }


                    int
                    f_10038_54710_54741(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                    this_param, Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbols.ModuleSymbol>
                    modules)
                    {
                        this_param.GetAllUnaliasedModules(modules);
                        DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 54710, 54741);
                        return 0;
                    }


                    Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceExtent
                    f_10038_54834_54859(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                    compilation)
                    {
                        var return_v = new Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceExtent(compilation);
                        DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 54834, 54859);
                        return return_v;
                    }


                    System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceSymbol>
                    f_10038_54917_54963(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbols.ModuleSymbol>
                    this_param, System.Func<Microsoft.CodeAnalysis.CSharp.Symbols.ModuleSymbol, Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceSymbol>
                    selector)
                    {
                        var return_v = this_param.SelectDistinct<Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceSymbol>(selector);
                        DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 54917, 54963);
                        return return_v;
                    }


                    Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceSymbol
                    f_10038_54779_54964(Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceExtent
                    extent, Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceSymbol
                    containingNamespace, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceSymbol>
                    namespacesToMerge)
                    {
                        var return_v = MergedNamespaceSymbol.Create(extent, containingNamespace, namespacesToMerge);
                        DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 54779, 54964);
                        return return_v;
                    }


                    int
                    f_10038_54989_55003(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbols.ModuleSymbol>
                    this_param)
                    {
                        this_param.Free();
                        DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 54989, 55003);
                        return 0;
                    }


                    Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceSymbol?
                    f_10038_55028_55095(ref Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceSymbol?
                    location1, Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceSymbol
                    value, Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceSymbol?
                    comparand)
                    {
                        var return_v = Interlocked.CompareExchange(ref location1, value, comparand);
                        DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 55028, 55095);
                        return return_v;
                    }

                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 54172, 55189);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 54172, 55189);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        internal new NamespaceSymbol? GetCompilationNamespace(INamespaceSymbol namespaceSymbol)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 55623, 56478);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 55735, 56024) || true) && (namespaceSymbol is Symbols.PublicModel.NamespaceSymbol n && (DynAbs.Tracing.TraceSender.Expression_True(10038, 55739, 55874) && f_10038_55816_55845(namespaceSymbol) == NamespaceKind.Compilation) && (DynAbs.Tracing.TraceSender.Expression_True(10038, 55739, 55940) && f_10038_55895_55932(namespaceSymbol) == this))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 55735, 56024);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 55974, 56009);

                    return f_10038_55981_56008(n);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 55735, 56024);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 56040, 56102);

                var
                containingNamespace = f_10038_56066_56101(namespaceSymbol)
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 56116, 56224) || true) && (containingNamespace == null)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 56116, 56224);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 56181, 56209);

                    return f_10038_56188_56208(this);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 56116, 56224);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 56240, 56299);

                var
                current = f_10038_56254_56298(this, containingNamespace)
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 56313, 56439) || true) && (current is object)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 56313, 56439);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 56368, 56424);

                    return f_10038_56375_56423(current, f_10038_56402_56422(namespaceSymbol));
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 56313, 56439);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 56455, 56467);

                return null;
                DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 55623, 56478);

                Microsoft.CodeAnalysis.NamespaceKind
                f_10038_55816_55845(Microsoft.CodeAnalysis.INamespaceSymbol
                this_param)
                {
                    var return_v = this_param.NamespaceKind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 55816, 55845);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Compilation?
                f_10038_55895_55932(Microsoft.CodeAnalysis.INamespaceSymbol
                this_param)
                {
                    var return_v = this_param.ContainingCompilation;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 55895, 55932);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceSymbol
                f_10038_55981_56008(Microsoft.CodeAnalysis.CSharp.Symbols.PublicModel.NamespaceSymbol
                this_param)
                {
                    var return_v = this_param.UnderlyingNamespaceSymbol;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 55981, 56008);
                    return return_v;
                }


                Microsoft.CodeAnalysis.INamespaceSymbol
                f_10038_56066_56101(Microsoft.CodeAnalysis.INamespaceSymbol
                this_param)
                {
                    var return_v = this_param.ContainingNamespace;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 56066, 56101);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceSymbol
                f_10038_56188_56208(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param)
                {
                    var return_v = this_param.GlobalNamespace;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 56188, 56208);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceSymbol?
                f_10038_56254_56298(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param, Microsoft.CodeAnalysis.INamespaceSymbol
                namespaceSymbol)
                {
                    var return_v = this_param.GetCompilationNamespace(namespaceSymbol);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 56254, 56298);
                    return return_v;
                }


                string
                f_10038_56402_56422(Microsoft.CodeAnalysis.INamespaceSymbol
                this_param)
                {
                    var return_v = this_param.Name;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 56402, 56422);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceSymbol
                f_10038_56375_56423(Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceSymbol
                this_param, string
                name)
                {
                    var return_v = this_param.GetNestedNamespace(name);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 56375, 56423);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 55623, 56478);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 55623, 56478);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        internal NamespaceSymbol? GetCompilationNamespace(NamespaceSymbol namespaceSymbol)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 56490, 57251);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 56597, 56797) || true) && (f_10038_56601_56630(namespaceSymbol) == NamespaceKind.Compilation && (DynAbs.Tracing.TraceSender.Expression_True(10038, 56601, 56725) && f_10038_56680_56717(namespaceSymbol) == this))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 56597, 56797);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 56759, 56782);

                    return namespaceSymbol;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 56597, 56797);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 56813, 56875);

                var
                containingNamespace = f_10038_56839_56874(namespaceSymbol)
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 56889, 56997) || true) && (containingNamespace == null)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 56889, 56997);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 56954, 56982);

                    return f_10038_56961_56981(this);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 56889, 56997);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 57013, 57072);

                var
                current = f_10038_57027_57071(this, containingNamespace)
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 57086, 57212) || true) && (current is object)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 57086, 57212);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 57141, 57197);

                    return f_10038_57148_57196(current, f_10038_57175_57195(namespaceSymbol));
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 57086, 57212);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 57228, 57240);

                return null;
                DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 56490, 57251);

                Microsoft.CodeAnalysis.NamespaceKind
                f_10038_56601_56630(Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceSymbol
                this_param)
                {
                    var return_v = this_param.NamespaceKind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 56601, 56630);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                f_10038_56680_56717(Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceSymbol
                this_param)
                {
                    var return_v = this_param.ContainingCompilation;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 56680, 56717);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceSymbol
                f_10038_56839_56874(Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceSymbol
                this_param)
                {
                    var return_v = this_param.ContainingNamespace;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 56839, 56874);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceSymbol
                f_10038_56961_56981(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param)
                {
                    var return_v = this_param.GlobalNamespace;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 56961, 56981);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceSymbol?
                f_10038_57027_57071(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceSymbol
                namespaceSymbol)
                {
                    var return_v = this_param.GetCompilationNamespace(namespaceSymbol);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 57027, 57071);
                    return return_v;
                }


                string
                f_10038_57175_57195(Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceSymbol
                this_param)
                {
                    var return_v = this_param.Name;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 57175, 57195);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceSymbol
                f_10038_57148_57196(Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceSymbol
                this_param, string
                name)
                {
                    var return_v = this_param.GetNestedNamespace(name);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 57148, 57196);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 56490, 57251);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 56490, 57251);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private ConcurrentDictionary<string, NamespaceSymbol>? _externAliasTargets;

        internal bool GetExternAliasTarget(string aliasName, out NamespaceSymbol? @namespace)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 57350, 59340);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 57460, 57829) || true) && (_externAliasTargets == null)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 57460, 57829);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 57525, 57637);

                    f_10038_57525_57636(ref _externAliasTargets, f_10038_57578_57629(), null);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 57460, 57829);
                }

                else
                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 57460, 57829);

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 57671, 57829) || true) && (f_10038_57675_57733(_externAliasTargets, aliasName, out @namespace))
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 57671, 57829);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 57767, 57814);

                        return !(@namespace is MissingNamespaceSymbol);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 57671, 57829);
                    }
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 57460, 57829);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 57845, 57891);

                ArrayBuilder<NamespaceSymbol>?
                builder = null
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 57905, 57955);

                var
                referenceManager = f_10038_57928_57954(this)
                ;
                try
                {
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 57978, 57983);
                    for (int
        i = 0
        ; (DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 57969, 58378) || true) && (i < referenceManager.ReferencedAssemblies.Length)
        ; DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 58035, 58038)
        , i++, DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 57969, 58378))

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 57969, 58378);

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 58072, 58363) || true) && (f_10038_58076_58122(referenceManager)[i].Contains(aliasName))
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 58072, 58363);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 58187, 58252);

                            builder = builder ?? (DynAbs.Tracing.TraceSender.Expression_Null<Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceSymbol>?>(10038, 58197, 58251) ?? f_10038_58208_58251());
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 58274, 58344);

                            f_10038_58274_58343(builder, f_10038_58286_58342(f_10038_58286_58323(referenceManager)[i]));
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 58072, 58363);
                        }
                    }
                }
                catch (System.Exception)
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoopByException(10038, 1, 410);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoop(10038, 1, 410);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 58394, 58432);

                bool
                foundNamespace = builder != null
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 58618, 58980);

                @namespace = (DynAbs.Tracing.TraceSender.Conditional_F1(10038, 58631, 58645) || ((foundNamespace
                && DynAbs.Tracing.TraceSender.Conditional_F2(10038, 58665, 58812)) || DynAbs.Tracing.TraceSender.Conditional_F3(10038, 58832, 58979))) ? f_10038_58665_58812(f_10038_58694_58719(this), namespacesToMerge: f_10038_58740_58769(builder!), containingNamespace: null, nameOpt: null) : f_10038_58832_58979(f_10038_58859_58978(f_10038_58883_58964(f_10038_58909_58963(System.Guid.NewGuid().ToString())), ordinal: -1));
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 59138, 59203);

                @namespace = f_10038_59151_59202(_externAliasTargets, aliasName, @namespace);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 59219, 59291);

                f_10038_59219_59290(foundNamespace == !(@namespace is MissingNamespaceSymbol));
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 59307, 59329);

                return foundNamespace;
                DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 57350, 59340);

                System.Collections.Concurrent.ConcurrentDictionary<string, Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceSymbol>
                f_10038_57578_57629()
                {
                    var return_v = new System.Collections.Concurrent.ConcurrentDictionary<string, Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceSymbol>();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 57578, 57629);
                    return return_v;
                }


                System.Collections.Concurrent.ConcurrentDictionary<string, Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceSymbol>?
                f_10038_57525_57636(ref System.Collections.Concurrent.ConcurrentDictionary<string, Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceSymbol>?
                location1, System.Collections.Concurrent.ConcurrentDictionary<string, Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceSymbol>
                value, System.Collections.Concurrent.ConcurrentDictionary<string, Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceSymbol>?
                comparand)
                {
                    var return_v = Interlocked.CompareExchange(ref location1, value, comparand);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 57525, 57636);
                    return return_v;
                }


                bool
                f_10038_57675_57733(System.Collections.Concurrent.ConcurrentDictionary<string, Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceSymbol>
                this_param, string
                key, out Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceSymbol?
                value)
                {
                    var return_v = this_param.TryGetValue(key, out value);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 57675, 57733);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSharpCompilation.ReferenceManager
                f_10038_57928_57954(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param)
                {
                    var return_v = this_param.GetBoundReferenceManager();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 57928, 57954);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<System.Collections.Immutable.ImmutableArray<string>>
                f_10038_58076_58122(Microsoft.CodeAnalysis.CSharp.CSharpCompilation.ReferenceManager
                this_param)
                {
                    var return_v = this_param.AliasesOfReferencedAssemblies;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 58076, 58122);
                    return return_v;
                }


                Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceSymbol>
                f_10038_58208_58251()
                {
                    var return_v = ArrayBuilder<NamespaceSymbol>.GetInstance();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 58208, 58251);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.AssemblySymbol>
                f_10038_58286_58323(Microsoft.CodeAnalysis.CSharp.CSharpCompilation.ReferenceManager
                this_param)
                {
                    var return_v = this_param.ReferencedAssemblies;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 58286, 58323);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceSymbol
                f_10038_58286_58342(Microsoft.CodeAnalysis.CSharp.Symbols.AssemblySymbol
                this_param)
                {
                    var return_v = this_param.GlobalNamespace;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 58286, 58342);
                    return return_v;
                }


                int
                f_10038_58274_58343(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceSymbol>
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceSymbol
                item)
                {
                    this_param.Add(item);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 58274, 58343);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceExtent
                f_10038_58694_58719(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                compilation)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceExtent(compilation);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 58694, 58719);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceSymbol>
                f_10038_58740_58769(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceSymbol>
                this_param)
                {
                    var return_v = this_param.ToImmutableAndFree();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 58740, 58769);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceSymbol
                f_10038_58665_58812(Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceExtent
                extent, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceSymbol>
                namespacesToMerge, Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceSymbol
                containingNamespace, string
                nameOpt)
                {
                    var return_v = MergedNamespaceSymbol.Create(extent, namespacesToMerge: namespacesToMerge, containingNamespace: containingNamespace, nameOpt: nameOpt);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 58665, 58812);
                    return return_v;
                }


                Microsoft.CodeAnalysis.AssemblyIdentity
                f_10038_58909_58963(string
                name)
                {
                    var return_v = new Microsoft.CodeAnalysis.AssemblyIdentity(name);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 58909, 58963);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.MissingAssemblySymbol
                f_10038_58883_58964(Microsoft.CodeAnalysis.AssemblyIdentity
                identity)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.Symbols.MissingAssemblySymbol(identity);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 58883, 58964);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.MissingModuleSymbol
                f_10038_58859_58978(Microsoft.CodeAnalysis.CSharp.Symbols.MissingAssemblySymbol
                assembly, int
                ordinal)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.Symbols.MissingModuleSymbol((Microsoft.CodeAnalysis.CSharp.Symbols.AssemblySymbol)assembly, ordinal: ordinal);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 58859, 58978);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.MissingNamespaceSymbol
                f_10038_58832_58979(Microsoft.CodeAnalysis.CSharp.Symbols.MissingModuleSymbol
                containingModule)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.Symbols.MissingNamespaceSymbol(containingModule);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 58832, 58979);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceSymbol
                f_10038_59151_59202(System.Collections.Concurrent.ConcurrentDictionary<string, Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceSymbol>
                this_param, string
                key, Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceSymbol
                value)
                {
                    var return_v = this_param.GetOrAdd(key, value);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 59151, 59202);
                    return return_v;
                }


                int
                f_10038_59219_59290(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 59219, 59290);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 57350, 59340);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 57350, 59340);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        internal new NamedTypeSymbol? ScriptClass
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 59601, 59635);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 59607, 59633);

                    return f_10038_59614_59632(_scriptClass);
                    DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 59601, 59635);

                    Microsoft.CodeAnalysis.CSharp.Symbols.ImplicitNamedTypeSymbol?
                    f_10038_59614_59632(System.Lazy<Microsoft.CodeAnalysis.CSharp.Symbols.ImplicitNamedTypeSymbol?>
                    this_param)
                    {
                        var return_v = this_param.Value;
                        DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 59614, 59632);
                        return return_v;
                    }

                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 59535, 59646);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 59535, 59646);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        private ImplicitNamedTypeSymbol? BindScriptClass()
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 60005, 60160);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 60080, 60149);

                return (ImplicitNamedTypeSymbol?)f_10038_60113_60148(f_10038_60113_60136(this));
                DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 60005, 60160);

                Microsoft.CodeAnalysis.INamedTypeSymbol?
                f_10038_60113_60136(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param)
                {
                    var return_v = this_param.CommonBindScriptClass();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 60113, 60136);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol?
                f_10038_60113_60148(Microsoft.CodeAnalysis.INamedTypeSymbol?
                symbol)
                {
                    var return_v = symbol.GetSymbol();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 60113, 60148);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 60005, 60160);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 60005, 60160);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        internal bool IsSubmissionSyntaxTree(SyntaxTree tree)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 60172, 60504);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 60250, 60277);

                f_10038_60250_60276(tree != null);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 60291, 60382);

                f_10038_60291_60381(f_10038_60304_60322_M(!this.IsSubmission) || (DynAbs.Tracing.TraceSender.Expression_False(10038, 60304, 60380) || _syntaxAndDeclarations.ExternalSyntaxTrees.Length <= 1));
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 60396, 60493);

                return f_10038_60403_60420(this) && (DynAbs.Tracing.TraceSender.Expression_True(10038, 60403, 60492) && tree == _syntaxAndDeclarations.ExternalSyntaxTrees.SingleOrDefault());
                DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 60172, 60504);

                int
                f_10038_60250_60276(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 60250, 60276);
                    return 0;
                }


                bool
                f_10038_60304_60322_M(bool
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 60304, 60322);
                    return return_v;
                }


                int
                f_10038_60291_60381(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 60291, 60381);
                    return 0;
                }


                bool
                f_10038_60403_60420(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param)
                {
                    var return_v = this_param.IsSubmission;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 60403, 60420);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 60172, 60504);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 60172, 60504);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        internal Imports GlobalImports
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 60685, 60708);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 60688, 60708);
                    return f_10038_60688_60708(_globalImports); DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 60685, 60708);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 60685, 60708);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 60685, 60708);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        private Imports BindGlobalImports()
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 60757, 60790);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 60760, 60790);
                return f_10038_60760_60790(this); DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 60757, 60790);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 60757, 60790);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 60757, 60790);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        internal Imports GetSubmissionImports()
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 60925, 61551);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 60989, 61021);

                f_10038_60989_61020(f_10038_61002_61019(this));
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 61035, 61104);

                f_10038_61035_61103(_syntaxAndDeclarations.ExternalSyntaxTrees.Length <= 1);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 61200, 61272);

                var
                tree = _syntaxAndDeclarations.ExternalSyntaxTrees.SingleOrDefault()
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 61286, 61372) || true) && (tree == null)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 61286, 61372);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 61336, 61357);

                    return Imports.Empty;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 61286, 61372);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 61388, 61475);

                var
                binder = f_10038_61401_61474(f_10038_61401_61423(this, tree), f_10038_61459_61473(tree))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 61489, 61540);

                return f_10038_61496_61539(binder, basesBeingResolved: null);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 60925, 61551);

                bool
                f_10038_61002_61019(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param)
                {
                    var return_v = this_param.IsSubmission;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 61002, 61019);
                    return return_v;
                }


                int
                f_10038_60989_61020(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 60989, 61020);
                    return 0;
                }


                int
                f_10038_61035_61103(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 61035, 61103);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.BinderFactory
                f_10038_61401_61423(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param, Microsoft.CodeAnalysis.SyntaxTree
                syntaxTree)
                {
                    var return_v = this_param.GetBinderFactory(syntaxTree);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 61401, 61423);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SyntaxNode
                f_10038_61459_61473(Microsoft.CodeAnalysis.SyntaxTree
                this_param)
                {
                    var return_v = this_param.GetRoot();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 61459, 61473);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Binder
                f_10038_61401_61474(Microsoft.CodeAnalysis.CSharp.BinderFactory
                this_param, Microsoft.CodeAnalysis.SyntaxNode
                unit)
                {
                    var return_v = this_param.GetImportsBinder((Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode)unit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 61401, 61474);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Imports
                f_10038_61496_61539(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Roslyn.Utilities.ConsList<Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol>?
                basesBeingResolved)
                {
                    var return_v = this_param.GetImports(basesBeingResolved: basesBeingResolved);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 61496, 61539);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 60925, 61551);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 60925, 61551);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        internal Imports GetPreviousSubmissionImports()
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 61710, 61745);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 61713, 61745);
                return f_10038_61713_61745(_previousSubmissionImports); DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 61710, 61745);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 61710, 61745);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 61710, 61745);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private Imports ExpandPreviousSubmissionImports()
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 61758, 62249);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 61832, 61864);

                f_10038_61832_61863(f_10038_61845_61862(this));
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 61878, 61917);

                var
                previous = f_10038_61893_61916(this)
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 61933, 62023) || true) && (previous == null)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 61933, 62023);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 61987, 62008);

                    return Imports.Empty;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 61933, 62023);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 62039, 62238);

                return f_10038_62046_62237(f_10038_62046_62132(f_10038_62086_62125(previous), this), f_10038_62158_62236(f_10038_62198_62229(previous), this));
                DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 61758, 62249);

                bool
                f_10038_61845_61862(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param)
                {
                    var return_v = this_param.IsSubmission;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 61845, 61862);
                    return return_v;
                }


                int
                f_10038_61832_61863(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 61832, 61863);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.CSharpCompilation?
                f_10038_61893_61916(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param)
                {
                    var return_v = this_param.PreviousSubmission;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 61893, 61916);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Imports
                f_10038_62086_62125(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param)
                {
                    var return_v = this_param.GetPreviousSubmissionImports();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 62086, 62125);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Imports
                f_10038_62046_62132(Microsoft.CodeAnalysis.CSharp.Imports
                previousSubmissionImports, Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                newSubmission)
                {
                    var return_v = Imports.ExpandPreviousSubmissionImports(previousSubmissionImports, newSubmission);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 62046, 62132);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Imports
                f_10038_62198_62229(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param)
                {
                    var return_v = this_param.GetSubmissionImports();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 62198, 62229);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Imports
                f_10038_62158_62236(Microsoft.CodeAnalysis.CSharp.Imports
                previousSubmissionImports, Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                newSubmission)
                {
                    var return_v = Imports.ExpandPreviousSubmissionImports(previousSubmissionImports, newSubmission);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 62158, 62236);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Imports
                f_10038_62046_62237(Microsoft.CodeAnalysis.CSharp.Imports
                this_param, Microsoft.CodeAnalysis.CSharp.Imports
                otherImports)
                {
                    var return_v = this_param.Concat(otherImports);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 62046, 62237);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 61758, 62249);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 61758, 62249);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        internal AliasSymbol GlobalNamespaceAlias
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 62327, 62413);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 62363, 62398);

                    return f_10038_62370_62397(_globalNamespaceAlias);
                    DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 62327, 62413);

                    Microsoft.CodeAnalysis.CSharp.Symbols.AliasSymbol
                    f_10038_62370_62397(System.Lazy<Microsoft.CodeAnalysis.CSharp.Symbols.AliasSymbol>
                    this_param)
                    {
                        var return_v = this_param.Value;
                        DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 62370, 62397);
                        return return_v;
                    }

                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 62261, 62424);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 62261, 62424);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        internal new NamedTypeSymbol GetSpecialType(SpecialType specialType)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 62588, 63516);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 62681, 62909) || true) && (specialType <= SpecialType.None || (DynAbs.Tracing.TraceSender.Expression_False(10038, 62685, 62751) || specialType > SpecialType.Count))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 62681, 62909);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 62785, 62894);

                    throw f_10038_62791_62893(nameof(specialType), $"Unexpected SpecialType: '{(int)specialType}'.");
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 62681, 62909);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 62925, 62948);

                NamedTypeSymbol
                result
                = default(NamedTypeSymbol);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 62962, 63413) || true) && (f_10038_62966_62992(this, specialType))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 62962, 63413);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 63026, 63158);

                    MetadataTypeName
                    emittedName = MetadataTypeName.FromFullName(f_10038_63087_63116(specialType), useCLSCompliantNameArityEncoding: true)
                    ;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 63176, 63286);

                    result = f_10038_63185_63285(f_10038_63224_63251(f_10038_63224_63243(f_10038_63224_63232()))[0], ref emittedName, specialType);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 62962, 63413);
                }

                else

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 62962, 63413);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 63352, 63398);

                    result = f_10038_63361_63397(f_10038_63361_63369(), specialType);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 62962, 63413);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 63429, 63477);

                f_10038_63429_63476(f_10038_63442_63460(result) == specialType);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 63491, 63505);

                return result;
                DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 62588, 63516);

                System.ArgumentOutOfRangeException
                f_10038_62791_62893(string
                paramName, string
                message)
                {
                    var return_v = new System.ArgumentOutOfRangeException(paramName, message);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 62791, 62893);
                    return return_v;
                }


                bool
                f_10038_62966_62992(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param, Microsoft.CodeAnalysis.SpecialType
                type)
                {
                    var return_v = this_param.IsTypeMissing(type);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 62966, 62992);
                    return return_v;
                }


                string?
                f_10038_63087_63116(Microsoft.CodeAnalysis.SpecialType
                id)
                {
                    var return_v = id.GetMetadataName();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 63087, 63116);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.AssemblySymbol
                f_10038_63224_63232()
                {
                    var return_v = Assembly;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 63224, 63232);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.AssemblySymbol
                f_10038_63224_63243(Microsoft.CodeAnalysis.CSharp.Symbols.AssemblySymbol
                this_param)
                {
                    var return_v = this_param.CorLibrary;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 63224, 63243);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.ModuleSymbol>
                f_10038_63224_63251(Microsoft.CodeAnalysis.CSharp.Symbols.AssemblySymbol
                this_param)
                {
                    var return_v = this_param.Modules;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 63224, 63251);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.MissingMetadataTypeSymbol.TopLevel
                f_10038_63185_63285(Microsoft.CodeAnalysis.CSharp.Symbols.ModuleSymbol
                module, ref Microsoft.CodeAnalysis.MetadataTypeName
                fullName, Microsoft.CodeAnalysis.SpecialType
                specialType)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.Symbols.MissingMetadataTypeSymbol.TopLevel(module, ref fullName, specialType);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 63185, 63285);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.AssemblySymbol
                f_10038_63361_63369()
                {
                    var return_v = Assembly;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 63361, 63369);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                f_10038_63361_63397(Microsoft.CodeAnalysis.CSharp.Symbols.AssemblySymbol
                this_param, Microsoft.CodeAnalysis.SpecialType
                type)
                {
                    var return_v = this_param.GetSpecialType(type);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 63361, 63397);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SpecialType
                f_10038_63442_63460(Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                this_param)
                {
                    var return_v = this_param.SpecialType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 63442, 63460);
                    return return_v;
                }


                int
                f_10038_63429_63476(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 63429, 63476);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 62588, 63516);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 62588, 63516);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        internal Symbol GetSpecialTypeMember(SpecialMember specialMember)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 63687, 63840);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 63777, 63829);

                return f_10038_63784_63828(f_10038_63784_63792(), specialMember);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 63687, 63840);

                Microsoft.CodeAnalysis.CSharp.Symbols.AssemblySymbol
                f_10038_63784_63792()
                {
                    var return_v = Assembly;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 63784, 63792);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbol
                f_10038_63784_63828(Microsoft.CodeAnalysis.CSharp.Symbols.AssemblySymbol
                this_param, Microsoft.CodeAnalysis.SpecialMember
                member)
                {
                    var return_v = this_param.GetSpecialTypeMember(member);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 63784, 63828);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 63687, 63840);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 63687, 63840);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        internal override ISymbolInternal CommonGetSpecialTypeMember(SpecialMember specialMember)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 63852, 64020);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 63966, 64009);

                return f_10038_63973_64008(this, specialMember);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 63852, 64020);

                Microsoft.CodeAnalysis.CSharp.Symbol
                f_10038_63973_64008(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param, Microsoft.CodeAnalysis.SpecialMember
                specialMember)
                {
                    var return_v = this_param.GetSpecialTypeMember(specialMember);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 63973, 64008);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 63852, 64020);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 63852, 64020);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        internal TypeSymbol GetTypeByReflectionType(Type type, DiagnosticBag diagnostics)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 64032, 64564);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 64138, 64215);

                var
                result = f_10038_64151_64214(f_10038_64151_64159(), type, includeReferences: true)
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 64229, 64523) || true) && ((object)result == null)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 64229, 64523);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 64289, 64394);

                    var
                    errorType = f_10038_64305_64393(this, f_10038_64339_64348(type), 0, f_10038_64353_64392(type))
                    ;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 64412, 64471);

                    f_10038_64412_64470(diagnostics, f_10038_64428_64447(errorType), NoLocation.Singleton);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 64489, 64508);

                    result = errorType;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 64229, 64523);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 64539, 64553);

                return result;
                DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 64032, 64564);

                Microsoft.CodeAnalysis.CSharp.Symbols.AssemblySymbol
                f_10038_64151_64159()
                {
                    var return_v = Assembly;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 64151, 64159);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                f_10038_64151_64214(Microsoft.CodeAnalysis.CSharp.Symbols.AssemblySymbol
                this_param, System.Type
                type, bool
                includeReferences)
                {
                    var return_v = this_param.GetTypeByReflectionType(type, includeReferences: includeReferences);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 64151, 64214);
                    return return_v;
                }


                string
                f_10038_64339_64348(System.Type
                this_param)
                {
                    var return_v = this_param.Name;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 64339, 64348);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo
                f_10038_64353_64392(System.Type
                type)
                {
                    var return_v = CreateReflectionTypeNotFoundError(type);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 64353, 64392);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.ExtendedErrorTypeSymbol
                f_10038_64305_64393(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                compilation, string
                name, int
                arity, Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo
                errorInfo)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.Symbols.ExtendedErrorTypeSymbol(compilation, name, arity, (Microsoft.CodeAnalysis.DiagnosticInfo)errorInfo);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 64305, 64393);
                    return return_v;
                }


                Microsoft.CodeAnalysis.DiagnosticInfo?
                f_10038_64428_64447(Microsoft.CodeAnalysis.CSharp.Symbols.ExtendedErrorTypeSymbol
                this_param)
                {
                    var return_v = this_param.ErrorInfo;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 64428, 64447);
                    return return_v;
                }


                int
                f_10038_64412_64470(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.DiagnosticInfo?
                info, Microsoft.CodeAnalysis.Location
                location)
                {
                    diagnostics.Add(info, location);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 64412, 64470);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 64032, 64564);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 64032, 64564);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private static CSDiagnosticInfo CreateReflectionTypeNotFoundError(Type type)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterStaticMethod(10038, 64576, 65089);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 64810, 65078);

                return f_10038_64817_65077(ErrorCode.ERR_GlobalSingleTypeNameNotFound, new object[] { f_10038_64932_64958(type) ?? (DynAbs.Tracing.TraceSender.Expression_Null<string?>(10038, 64932, 64964) ?? "") }, ImmutableArray<Symbol>.Empty, ImmutableArray<Location>.Empty);
                DynAbs.Tracing.TraceSender.TraceExitStaticMethod(10038, 64576, 65089);

                string?
                f_10038_64932_64958(System.Type
                this_param)
                {
                    var return_v = this_param.AssemblyQualifiedName;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 64932, 64958);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo
                f_10038_64817_65077(Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, object[]
                args, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>
                symbols, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Location>
                additionalLocations)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo(code, args, symbols, additionalLocations);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 64817, 65077);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 64576, 65089);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 64576, 65089);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        protected override ITypeSymbol? CommonScriptGlobalsType
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 65170, 65217);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 65173, 65217);
                    return f_10038_65199_65217(f_10038_65173_65198(this)); DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 65170, 65217);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 65170, 65217);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 65170, 65217);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        internal TypeSymbol? GetHostObjectTypeSymbol()
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 65230, 66488);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 65301, 66428) || true) && (f_10038_65305_65319() != null && (DynAbs.Tracing.TraceSender.Expression_True(10038, 65305, 65364) && _lazyHostObjectTypeSymbol is null))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 65301, 66428);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 65398, 65492);

                    TypeSymbol
                    symbol = f_10038_65418_65491(f_10038_65418_65426(), f_10038_65451_65465(), includeReferences: true)
                    ;

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 65512, 66320) || true) && ((object)symbol == null)
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 65512, 66320);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 65580, 65929);

                        MetadataTypeName
                        mdName = MetadataTypeName.FromNamespaceAndTypeName(f_10038_65648_65672(f_10038_65648_65662()) ?? (DynAbs.Tracing.TraceSender.Expression_Null<string?>(10038, 65648, 65688) ?? String.Empty), f_10038_65779_65798(f_10038_65779_65793()), useCLSCompliantNameArityEncoding: true)
                        ;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 65953, 66301);

                        symbol = f_10038_65962_66300(f_10038_66027_66140(f_10038_66027_66132(f_10038_66053_66131(f_10038_66093_66130(f_10038_66093_66121(f_10038_66093_66107())))))[0], ref mdName, SpecialType.None, f_10038_66250_66299(f_10038_66284_66298()));
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 65512, 66320);
                    }
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 66340, 66413);

                    f_10038_66340_66412(ref _lazyHostObjectTypeSymbol, symbol, null);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 65301, 66428);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 66444, 66477);

                return _lazyHostObjectTypeSymbol;
                DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 65230, 66488);

                System.Type?
                f_10038_65305_65319()
                {
                    var return_v = HostObjectType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 65305, 65319);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.AssemblySymbol
                f_10038_65418_65426()
                {
                    var return_v = Assembly;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 65418, 65426);
                    return return_v;
                }


                System.Type
                f_10038_65451_65465()
                {
                    var return_v = HostObjectType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 65451, 65465);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                f_10038_65418_65491(Microsoft.CodeAnalysis.CSharp.Symbols.AssemblySymbol
                this_param, System.Type
                type, bool
                includeReferences)
                {
                    var return_v = this_param.GetTypeByReflectionType(type, includeReferences: includeReferences);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 65418, 65491);
                    return return_v;
                }


                System.Type
                f_10038_65648_65662()
                {
                    var return_v = HostObjectType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 65648, 65662);
                    return return_v;
                }


                string?
                f_10038_65648_65672(System.Type
                this_param)
                {
                    var return_v = this_param.Namespace;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 65648, 65672);
                    return return_v;
                }


                System.Type
                f_10038_65779_65793()
                {
                    var return_v = HostObjectType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 65779, 65793);
                    return return_v;
                }


                string
                f_10038_65779_65798(System.Type
                this_param)
                {
                    var return_v = this_param.Name;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 65779, 65798);
                    return return_v;
                }


                System.Type
                f_10038_66093_66107()
                {
                    var return_v = HostObjectType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 66093, 66107);
                    return return_v;
                }


                System.Reflection.TypeInfo
                f_10038_66093_66121(System.Type
                type)
                {
                    var return_v = type.GetTypeInfo();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 66093, 66121);
                    return return_v;
                }


                System.Reflection.Assembly
                f_10038_66093_66130(System.Reflection.TypeInfo
                this_param)
                {
                    var return_v = this_param.Assembly;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 66093, 66130);
                    return return_v;
                }


                Microsoft.CodeAnalysis.AssemblyIdentity
                f_10038_66053_66131(System.Reflection.Assembly
                assembly)
                {
                    var return_v = AssemblyIdentity.FromAssemblyDefinition(assembly);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 66053, 66131);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.MissingAssemblySymbol
                f_10038_66027_66132(Microsoft.CodeAnalysis.AssemblyIdentity
                identity)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.Symbols.MissingAssemblySymbol(identity);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 66027, 66132);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.ModuleSymbol>
                f_10038_66027_66140(Microsoft.CodeAnalysis.CSharp.Symbols.MissingAssemblySymbol
                this_param)
                {
                    var return_v = this_param.Modules;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 66027, 66140);
                    return return_v;
                }


                System.Type
                f_10038_66284_66298()
                {
                    var return_v = HostObjectType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 66284, 66298);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo
                f_10038_66250_66299(System.Type
                type)
                {
                    var return_v = CreateReflectionTypeNotFoundError(type);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 66250, 66299);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.MissingMetadataTypeSymbol.TopLevel
                f_10038_65962_66300(Microsoft.CodeAnalysis.CSharp.Symbols.ModuleSymbol
                module, ref Microsoft.CodeAnalysis.MetadataTypeName
                fullName, Microsoft.CodeAnalysis.SpecialType
                specialType, Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo
                errorInfo)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.Symbols.MissingMetadataTypeSymbol.TopLevel(module, ref fullName, specialType, (Microsoft.CodeAnalysis.DiagnosticInfo)errorInfo);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 65962, 66300);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?
                f_10038_66340_66412(ref Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?
                location1, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                value, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?
                comparand)
                {
                    var return_v = Interlocked.CompareExchange(ref location1, value, comparand);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 66340, 66412);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 65230, 66488);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 65230, 66488);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        internal SynthesizedInteractiveInitializerMethod? GetSubmissionInitializer()
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 66500, 66737);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 66601, 66726);

                return (DynAbs.Tracing.TraceSender.Conditional_F1(10038, 66608, 66647) || (((f_10038_66609_66621() && (DynAbs.Tracing.TraceSender.Expression_True(10038, 66609, 66646) && f_10038_66625_66636() is object)) && DynAbs.Tracing.TraceSender.Conditional_F2(10038, 66667, 66701)) || DynAbs.Tracing.TraceSender.Conditional_F3(10038, 66721, 66725))) ? f_10038_66667_66701(f_10038_66667_66678()) : null;
                DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 66500, 66737);

                bool
                f_10038_66609_66621()
                {
                    var return_v = IsSubmission;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 66609, 66621);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol?
                f_10038_66625_66636()
                {
                    var return_v = ScriptClass;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 66625, 66636);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                f_10038_66667_66678()
                {
                    var return_v = ScriptClass;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 66667, 66678);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedInteractiveInitializerMethod
                f_10038_66667_66701(Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                this_param)
                {
                    var return_v = this_param.GetScriptInitializer();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 66667, 66701);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 66500, 66737);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 66500, 66737);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        internal new NamedTypeSymbol? GetTypeByMetadataName(string fullyQualifiedMetadataName)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 67006, 67270);
                (Microsoft.CodeAnalysis.CSharp.Symbols.AssemblySymbol, Microsoft.CodeAnalysis.CSharp.Symbols.AssemblySymbol) _ = default((Microsoft.CodeAnalysis.CSharp.Symbols.AssemblySymbol, Microsoft.CodeAnalysis.CSharp.Symbols.AssemblySymbol));
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 67117, 67259);

                return f_10038_67124_67258(f_10038_67124_67137(this), fullyQualifiedMetadataName, includeReferences: true, isWellKnownType: false, conflicts: out _);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 67006, 67270);

                Microsoft.CodeAnalysis.CSharp.Symbols.AssemblySymbol
                f_10038_67124_67137(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param)
                {
                    var return_v = this_param.Assembly;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 67124, 67137);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                f_10038_67124_67258(Microsoft.CodeAnalysis.CSharp.Symbols.AssemblySymbol
                this_param, string
                metadataName, bool
                includeReferences, bool
                isWellKnownType, out (Microsoft.CodeAnalysis.CSharp.Symbols.AssemblySymbol, Microsoft.CodeAnalysis.CSharp.Symbols.AssemblySymbol)
                conflicts)
                {
                    var return_v = this_param.GetTypeByMetadataName(metadataName, includeReferences: includeReferences, isWellKnownType: isWellKnownType, out conflicts);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 67124, 67258);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 67006, 67270);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 67006, 67270);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        internal new TypeSymbol DynamicType
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 67461, 67546);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 67497, 67531);

                    return f_10038_67504_67530();
                    DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 67461, 67546);

                    Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                    f_10038_67504_67530()
                    {
                        var return_v = AssemblySymbol.DynamicType;
                        DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 67504, 67530);
                        return return_v;
                    }

                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 67401, 67557);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 67401, 67557);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        internal new NamedTypeSymbol ObjectType
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 67845, 67928);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 67881, 67913);

                    return f_10038_67888_67912(f_10038_67888_67901(this));
                    DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 67845, 67928);

                    Microsoft.CodeAnalysis.CSharp.Symbols.AssemblySymbol
                    f_10038_67888_67901(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                    this_param)
                    {
                        var return_v = this_param.Assembly;
                        DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 67888, 67901);
                        return return_v;
                    }


                    Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                    f_10038_67888_67912(Microsoft.CodeAnalysis.CSharp.Symbols.AssemblySymbol
                    this_param)
                    {
                        var return_v = this_param.ObjectType;
                        DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 67888, 67912);
                        return return_v;
                    }

                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 67781, 67939);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 67781, 67939);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        internal bool DeclaresTheObjectClass
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 68012, 68108);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 68048, 68093);

                    return f_10038_68055_68092(f_10038_68055_68069());
                    DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 68012, 68108);

                    Microsoft.CodeAnalysis.CSharp.Symbols.SourceAssemblySymbol
                    f_10038_68055_68069()
                    {
                        var return_v = SourceAssembly;
                        DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 68055, 68069);
                        return return_v;
                    }


                    bool
                    f_10038_68055_68092(Microsoft.CodeAnalysis.CSharp.Symbols.SourceAssemblySymbol
                    this_param)
                    {
                        var return_v = this_param.DeclaresTheObjectClass;
                        DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 68055, 68092);
                        return return_v;
                    }

                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 67951, 68119);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 67951, 68119);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        internal new MethodSymbol? GetEntryPoint(CancellationToken cancellationToken)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 68131, 68360);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 68233, 68304);

                EntryPoint
                entryPoint = f_10038_68257_68303(this, cancellationToken)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 68318, 68349);

                return entryPoint.MethodSymbol;
                DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 68131, 68360);

                Microsoft.CodeAnalysis.CSharp.CSharpCompilation.EntryPoint
                f_10038_68257_68303(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param, System.Threading.CancellationToken
                cancellationToken)
                {
                    var return_v = this_param.GetEntryPointAndDiagnostics(cancellationToken);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 68257, 68303);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 68131, 68360);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 68131, 68360);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        internal EntryPoint GetEntryPointAndDiagnostics(CancellationToken cancellationToken)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 68372, 70755);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 68481, 70705) || true) && (_lazyEntryPoint == null)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 68481, 70705);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 68542, 68565);

                    EntryPoint?
                    entryPoint
                    = default(EntryPoint?);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 68583, 68681);

                    var
                    simpleProgramEntryPointSymbol = f_10038_68619_68680(this)
                    ;

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 68701, 70603) || true) && (!f_10038_68706_68745(f_10038_68706_68729(f_10038_68706_68718(this))) && (DynAbs.Tracing.TraceSender.Expression_True(10038, 68705, 68775) && (f_10038_68750_68766(this) is null)))
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 68701, 70603);

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 68817, 69342) || true) && (simpleProgramEntryPointSymbol is object)
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 68817, 69342);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 68910, 68956);

                            var
                            diagnostics = f_10038_68928_68955()
                            ;
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 68982, 69099);

                            f_10038_68982_69098(diagnostics, ErrorCode.ERR_SimpleProgramNotAnExecutable, f_10038_69042_69097(f_10038_69042_69088(simpleProgramEntryPointSymbol)));
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 69125, 69192);

                            entryPoint = f_10038_69138_69191(null, f_10038_69159_69190(diagnostics));
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 68817, 69342);
                        }

                        else

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 68817, 69342);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 69290, 69319);

                            entryPoint = EntryPoint.None;
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 68817, 69342);
                        }
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 68701, 70603);
                    }

                    else

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 68701, 70603);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 69424, 69442);

                        entryPoint = null;

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 69466, 69734) || true) && (f_10038_69470_69495(f_10038_69470_69482(this)) != null && (DynAbs.Tracing.TraceSender.Expression_True(10038, 69470, 69554) && !f_10038_69508_69554(f_10038_69508_69533(f_10038_69508_69520(this)))))
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 69466, 69734);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 69604, 69656);

                            f_10038_69604_69655(f_10038_69617_69654_M(!f_10038_69618_69630(this).Errors.IsDefaultOrEmpty));
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 69682, 69711);

                            entryPoint = EntryPoint.None;
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 69466, 69734);
                        }

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 69758, 70108) || true) && (entryPoint is null)
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 69758, 70108);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 69830, 69869);

                            ImmutableArray<Diagnostic>
                            diagnostics
                            = default(ImmutableArray<Diagnostic>);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 69895, 70000);

                            var
                            entryPointMethod = f_10038_69918_69999(this, simpleProgramEntryPointSymbol, cancellationToken, out diagnostics)
                            ;
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 70026, 70085);

                            entryPoint = f_10038_70039_70084(entryPointMethod, diagnostics);
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 69758, 70108);
                        }

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 70132, 70584) || true) && (f_10038_70136_70161(f_10038_70136_70148(this)) != null && (DynAbs.Tracing.TraceSender.Expression_True(10038, 70136, 70212) && simpleProgramEntryPointSymbol is object))
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 70132, 70584);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 70262, 70308);

                            var
                            diagnostics = f_10038_70280_70307()
                            ;
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 70334, 70418);

                            f_10038_70334_70417(diagnostics, ErrorCode.ERR_SimpleProgramDisallowsMainType, NoLocation.Singleton);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 70444, 70561);

                            entryPoint = f_10038_70457_70560(entryPoint.MethodSymbol, entryPoint.Diagnostics.Concat(f_10038_70527_70558(diagnostics)));
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 70132, 70584);
                        }
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 68701, 70603);
                    }
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 70623, 70690);

                    f_10038_70623_70689(ref _lazyEntryPoint, entryPoint, null);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 68481, 70705);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 70721, 70744);

                return _lazyEntryPoint;
                DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 68372, 70755);

                Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedSimpleProgramEntryPointSymbol?
                f_10038_68619_68680(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                compilation)
                {
                    var return_v = SimpleProgramNamedTypeSymbol.GetSimpleProgramEntryPoint(compilation);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 68619, 68680);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions
                f_10038_68706_68718(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param)
                {
                    var return_v = this_param.Options;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 68706, 68718);
                    return return_v;
                }


                Microsoft.CodeAnalysis.OutputKind
                f_10038_68706_68729(Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions
                this_param)
                {
                    var return_v = this_param.OutputKind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 68706, 68729);
                    return return_v;
                }


                bool
                f_10038_68706_68745(Microsoft.CodeAnalysis.OutputKind
                kind)
                {
                    var return_v = kind.IsApplication();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 68706, 68745);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol?
                f_10038_68750_68766(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param)
                {
                    var return_v = this_param.ScriptClass;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 68750, 68766);
                    return return_v;
                }


                Microsoft.CodeAnalysis.DiagnosticBag
                f_10038_68928_68955()
                {
                    var return_v = DiagnosticBag.GetInstance();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 68928, 68955);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SyntaxNode
                f_10038_69042_69088(Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedSimpleProgramEntryPointSymbol
                this_param)
                {
                    var return_v = this_param.ReturnTypeSyntax;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 69042, 69088);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Location
                f_10038_69042_69097(Microsoft.CodeAnalysis.SyntaxNode
                this_param)
                {
                    var return_v = this_param.Location;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 69042, 69097);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo
                f_10038_68982_69098(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, Microsoft.CodeAnalysis.Location
                location)
                {
                    var return_v = diagnostics.Add(code, location);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 68982, 69098);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Diagnostic>
                f_10038_69159_69190(Microsoft.CodeAnalysis.DiagnosticBag
                this_param)
                {
                    var return_v = this_param.ToReadOnlyAndFree();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 69159, 69190);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSharpCompilation.EntryPoint
                f_10038_69138_69191(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol?
                methodSymbol, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Diagnostic>
                diagnostics)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.CSharpCompilation.EntryPoint(methodSymbol, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 69138, 69191);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions
                f_10038_69470_69482(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param)
                {
                    var return_v = this_param.Options;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 69470, 69482);
                    return return_v;
                }


                string?
                f_10038_69470_69495(Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions
                this_param)
                {
                    var return_v = this_param.MainTypeName;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 69470, 69495);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions
                f_10038_69508_69520(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param)
                {
                    var return_v = this_param.Options;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 69508, 69520);
                    return return_v;
                }


                string
                f_10038_69508_69533(Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions
                this_param)
                {
                    var return_v = this_param.MainTypeName;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 69508, 69533);
                    return return_v;
                }


                bool
                f_10038_69508_69554(string
                name)
                {
                    var return_v = name.IsValidClrTypeName();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 69508, 69554);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions
                f_10038_69618_69630(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param)
                {
                    var return_v = this_param.Options;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 69618, 69630);
                    return return_v;
                }


                bool
                f_10038_69617_69654_M(bool
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 69617, 69654);
                    return return_v;
                }


                int
                f_10038_69604_69655(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 69604, 69655);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol?
                f_10038_69918_69999(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedSimpleProgramEntryPointSymbol?
                simpleProgramEntryPointSymbol, System.Threading.CancellationToken
                cancellationToken, out System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Diagnostic>
                sealedDiagnostics)
                {
                    var return_v = this_param.FindEntryPoint((Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol?)simpleProgramEntryPointSymbol, cancellationToken, out sealedDiagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 69918, 69999);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSharpCompilation.EntryPoint
                f_10038_70039_70084(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol?
                methodSymbol, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Diagnostic>
                diagnostics)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.CSharpCompilation.EntryPoint(methodSymbol, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 70039, 70084);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions
                f_10038_70136_70148(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param)
                {
                    var return_v = this_param.Options;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 70136, 70148);
                    return return_v;
                }


                string?
                f_10038_70136_70161(Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions
                this_param)
                {
                    var return_v = this_param.MainTypeName;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 70136, 70161);
                    return return_v;
                }


                Microsoft.CodeAnalysis.DiagnosticBag
                f_10038_70280_70307()
                {
                    var return_v = DiagnosticBag.GetInstance();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 70280, 70307);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo
                f_10038_70334_70417(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, Microsoft.CodeAnalysis.Location
                location)
                {
                    var return_v = diagnostics.Add(code, location);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 70334, 70417);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Diagnostic>
                f_10038_70527_70558(Microsoft.CodeAnalysis.DiagnosticBag
                this_param)
                {
                    var return_v = this_param.ToReadOnlyAndFree();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 70527, 70558);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSharpCompilation.EntryPoint
                f_10038_70457_70560(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol?
                methodSymbol, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Diagnostic>
                diagnostics)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.CSharpCompilation.EntryPoint(methodSymbol, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 70457, 70560);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSharpCompilation.EntryPoint?
                f_10038_70623_70689(ref Microsoft.CodeAnalysis.CSharp.CSharpCompilation.EntryPoint?
                location1, Microsoft.CodeAnalysis.CSharp.CSharpCompilation.EntryPoint
                value, Microsoft.CodeAnalysis.CSharp.CSharpCompilation.EntryPoint?
                comparand)
                {
                    var return_v = Interlocked.CompareExchange(ref location1, value, comparand);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 70623, 70689);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 68372, 70755);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 68372, 70755);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private MethodSymbol? FindEntryPoint(MethodSymbol? simpleProgramEntryPointSymbol, CancellationToken cancellationToken, out ImmutableArray<Diagnostic> sealedDiagnostics)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 70767, 82343);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 70960, 71006);

                var
                diagnostics = f_10038_70978_71005()
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 71020, 71088);

                var
                entryPointCandidates = f_10038_71047_71087()
                ;

                try
                {
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 71140, 71166);

                    NamedTypeSymbol?
                    mainType
                    = default(NamedTypeSymbol?);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 71186, 71235);

                    string?
                    mainTypeName = f_10038_71209_71234(f_10038_71209_71221(this))
                    ;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 71253, 71321);

                    NamespaceSymbol
                    globalNamespace = f_10038_71287_71320(f_10038_71287_71304(this))
                    ;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 71339, 71374);

                    var
                    scriptClass = f_10038_71357_71373(this)
                    ;

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 71394, 74031) || true) && (mainTypeName != null)
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 71394, 74031);

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 71540, 71872) || true) && (scriptClass is object)
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 71540, 71872);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 71703, 71782);

                            f_10038_71703_71781(                        // CONSIDER: we could use the symbol instead of just the name.
                                                    diagnostics, ErrorCode.WRN_MainIgnored, NoLocation.Singleton, mainTypeName);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 71808, 71849);

                            return f_10038_71815_71848(scriptClass);
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 71540, 71872);
                        }
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 71896, 72014);

                        var
                        mainTypeOrNamespace = f_10038_71922_72013(f_10038_71922_71996(globalNamespace, f_10038_71972_71995(mainTypeName, '.')))
                        ;

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 72036, 72263) || true) && (mainTypeOrNamespace is null)
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 72036, 72263);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 72117, 72202);

                            f_10038_72117_72201(diagnostics, ErrorCode.ERR_MainClassNotFound, NoLocation.Singleton, mainTypeName);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 72228, 72240);

                            return null;
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 72036, 72263);
                        }
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 72287, 72337);

                        mainType = mainTypeOrNamespace as NamedTypeSymbol;

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 72359, 72731) || true) && (mainType is null || (DynAbs.Tracing.TraceSender.Expression_False(10038, 72363, 72405) || f_10038_72383_72405(mainType)) || (DynAbs.Tracing.TraceSender.Expression_False(10038, 72363, 72511) || (f_10038_72410_72427(mainType) != TypeKind.Class && (DynAbs.Tracing.TraceSender.Expression_True(10038, 72410, 72485) && f_10038_72449_72466(mainType) != TypeKind.Struct) && (DynAbs.Tracing.TraceSender.Expression_True(10038, 72410, 72510) && f_10038_72489_72510_M(!mainType.IsInterface)))))
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 72359, 72731);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 72561, 72670);

                            f_10038_72561_72669(diagnostics, ErrorCode.ERR_MainClassNotClass, mainTypeOrNamespace.Locations.First(), mainTypeOrNamespace);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 72696, 72708);

                            return null;
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 72359, 72731);
                        }
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 72755, 72833);

                        f_10038_72755_72832(entryPointCandidates, f_10038_72801_72831(mainType));
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 71394, 74031);
                    }

                    else

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 71394, 74031);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 72915, 72931);

                        mainType = null;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 72955, 73164);

                        f_10038_72955_73163(entryPointCandidates, f_10038_73052_73162(this, WellKnownMemberNames.EntryPointMethodName, SymbolFilter.Member, cancellationToken));

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 73268, 74012) || true) && (scriptClass is object || (DynAbs.Tracing.TraceSender.Expression_False(10038, 73272, 73336) || simpleProgramEntryPointSymbol is object))
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 73268, 74012);
                            try
                            {
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 73386, 73585);
                                foreach (var main in f_10038_73407_73427_I(entryPointCandidates))
                                {
                                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 73386, 73585);
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 73485, 73558);

                                    f_10038_73485_73557(diagnostics, ErrorCode.WRN_MainIgnored, main.Locations.First(), main);
                                    DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 73386, 73585);
                                }
                            }
                            catch (System.Exception)
                            {
                                DynAbs.Tracing.TraceSender.TraceExitLoopByException(10038, 1, 200);
                                throw;
                            }
                            finally
                            {
                                DynAbs.Tracing.TraceSender.TraceExitLoop(10038, 1, 200);
                            }
                            if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 73613, 73764) || true) && (scriptClass is object)
                            )

                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 73613, 73764);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 73696, 73737);

                                return f_10038_73703_73736(scriptClass);
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 73613, 73764);
                            }
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 73792, 73852);

                            f_10038_73792_73851(simpleProgramEntryPointSymbol is object);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 73878, 73907);

                            f_10038_73878_73906(entryPointCandidates);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 73933, 73989);

                            f_10038_73933_73988(entryPointCandidates, simpleProgramEntryPointSymbol);
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 73268, 74012);
                        }
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 71394, 74031);
                    }
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 74230, 74354);

                    var
                    taskEntryPoints = f_10038_74252_74353()
                    ;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 74523, 74590);

                    DiagnosticBag
                    noMainFoundDiagnostics = f_10038_74562_74589()
                    ;

                    bool
                f_10038_76072_76123(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                candidate, bool
                isCandidate, Microsoft.CodeAnalysis.DiagnosticBag
                specificDiagnostics)
                    {
                        var return_v = checkValid(candidate, isCandidate, specificDiagnostics);
                        DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 76072, 76123);
                        return return_v;
                    }

                    bool
                    f_10038_76967_77018(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                    candidate, bool
                    isCandidate, Microsoft.CodeAnalysis.DiagnosticBag
                    specificDiagnostics)
                    {
                        var return_v = checkValid(candidate, isCandidate, specificDiagnostics);
                        DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 76967, 77018);
                        return return_v;
                    }

                    bool checkValid(MethodSymbol candidate, bool isCandidate, DiagnosticBag specificDiagnostics)
                    {
                        try
                        {
                            DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 74610, 75471);

                            if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 74743, 75047) || true) && (!isCandidate)
                            )

                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 74743, 75047);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 74809, 74906);

                                f_10038_74809_74905(noMainFoundDiagnostics, ErrorCode.WRN_InvalidMainSig, candidate.Locations.First(), candidate);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 74932, 74985);

                                f_10038_74932_74984(noMainFoundDiagnostics, specificDiagnostics);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 75011, 75024);

                                return false;
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 74743, 75047);
                            }

                            if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 75071, 75418) || true) && (f_10038_75075_75100(candidate) || (DynAbs.Tracing.TraceSender.Expression_False(10038, 75075, 75142) || f_10038_75104_75142(f_10038_75104_75128(candidate))))
                            )

                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 75071, 75418);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 75256, 75356);

                                f_10038_75256_75355(                        // a single error for partial methods:
                                                        noMainFoundDiagnostics, ErrorCode.WRN_MainCantBeGeneric, candidate.Locations.First(), candidate);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 75382, 75395);

                                return false;
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 75071, 75418);
                            }
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 75440, 75452);

                            return true;
                            DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 74610, 75471);

                            Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo
                            f_10038_74809_74905(Microsoft.CodeAnalysis.DiagnosticBag
                            diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                            code, Microsoft.CodeAnalysis.Location
                            location, params object[]
                            args)
                            {
                                var return_v = diagnostics.Add(code, location, args);
                                DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 74809, 74905);
                                return return_v;
                            }


                            int
                            f_10038_74932_74984(Microsoft.CodeAnalysis.DiagnosticBag
                            this_param, Microsoft.CodeAnalysis.DiagnosticBag
                            bag)
                            {
                                this_param.AddRange(bag);
                                DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 74932, 74984);
                                return 0;
                            }


                            bool
                            f_10038_75075_75100(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                            this_param)
                            {
                                var return_v = this_param.IsGenericMethod;
                                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 75075, 75100);
                                return return_v;
                            }


                            Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                            f_10038_75104_75128(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                            this_param)
                            {
                                var return_v = this_param.ContainingType;
                                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 75104, 75128);
                                return return_v;
                            }


                            bool
                            f_10038_75104_75142(Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                            this_param)
                            {
                                var return_v = this_param.IsGenericType;
                                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 75104, 75142);
                                return return_v;
                            }


                            Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo
                            f_10038_75256_75355(Microsoft.CodeAnalysis.DiagnosticBag
                            diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                            code, Microsoft.CodeAnalysis.Location
                            location, params object[]
                            args)
                            {
                                var return_v = diagnostics.Add(code, location, args);
                                DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 75256, 75355);
                                return return_v;
                            }

                        }
                        catch
                        {
                            DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 74610, 75471);
                            throw;
                        }
                        finally
                        {
                            DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 74610, 75471);
                        }
                        throw new System.Exception("Slicer error: unreachable code");
                    }
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 75491, 75556);

                    var
                    viableEntryPoints = f_10038_75515_75555()
                    ;
                    try
                    {
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 75576, 76746);
                        foreach (var candidate in f_10038_75602_75622_I(entryPointCandidates))
                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 75576, 76746);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 75664, 75714);

                            var
                            perCandidateBag = f_10038_75686_75713()
                            ;
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 75736, 75819);

                            var (IsCandidate, IsTaskLike) = f_10038_75768_75818(this, candidate, perCandidateBag);

                            if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 75843, 76727) || true) && (IsTaskLike)
                            )

                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 75843, 76727);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 75907, 75970);

                                f_10038_75907_75969(taskEntryPoints, (IsCandidate, candidate, perCandidateBag));
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 75843, 76727);
                            }

                            else

                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 75843, 76727);

                                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 76068, 76655) || true) && (f_10038_76072_76123(candidate, IsCandidate, perCandidateBag))
                                )

                                {
                                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 76068, 76655);

                                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 76181, 76628) || true) && (f_10038_76185_76202(candidate))
                                    )

                                    {
                                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 76181, 76628);
                                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 76268, 76362);

                                        f_10038_76268_76361(diagnostics, ErrorCode.ERR_NonTaskMainCantBeAsync, candidate.Locations.First(), candidate);
                                        DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 76181, 76628);
                                    }

                                    else

                                    {
                                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 76181, 76628);
                                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 76492, 76530);

                                        f_10038_76492_76529(diagnostics, perCandidateBag);
                                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 76564, 76597);

                                        f_10038_76564_76596(viableEntryPoints, candidate);
                                        DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 76181, 76628);
                                    }
                                    DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 76068, 76655);
                                }
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 76681, 76704);

                                f_10038_76681_76703(perCandidateBag);
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 75843, 76727);
                            }
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 75576, 76746);
                        }
                    }
                    catch (System.Exception)
                    {
                        DynAbs.Tracing.TraceSender.TraceExitLoopByException(10038, 1, 1171);
                        throw;
                    }
                    finally
                    {
                        DynAbs.Tracing.TraceSender.TraceExitLoop(10038, 1, 1171);
                    }
                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 76766, 78405) || true) && (f_10038_76770_76793(viableEntryPoints) == 0)
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 76766, 78405);
                        foreach (var (IsValid, Candidate, SpecificDiagnostics) in taskEntryPoints)
                        {

                            if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 76963, 77347) || true) && (f_10038_76967_77018(Candidate, IsValid, SpecificDiagnostics) && (DynAbs.Tracing.TraceSender.Expression_True(10038, 76967, 77157) && f_10038_77051_77157(f_10038_77076_77111(Candidate), MessageID.IDS_FeatureAsyncMain, diagnostics)))
                            )

                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 76963, 77347);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 77215, 77257);

                                f_10038_77215_77256(diagnostics, SpecificDiagnostics);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 77287, 77320);

                                f_10038_77287_77319(viableEntryPoints, Candidate);
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 76963, 77347);
                            }
                        }
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 76766, 78405);
                    }

                    else
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 76766, 78405);

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 77412, 78405) || true) && (f_10038_77416_77431() >= f_10038_77435_77483(MessageID.IDS_FeatureAsyncMain) && (DynAbs.Tracing.TraceSender.Expression_True(10038, 77416, 77512) && f_10038_77487_77508(taskEntryPoints) > 0))
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 77412, 78405);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 77554, 77631);

                            var
                            taskCandidates = f_10038_77575_77630(taskEntryPoints, s => (Symbol)s.Candidate)
                            ;
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 77653, 77723);

                            var
                            taskLocations = taskCandidates.SelectAsArray(s => s.Locations[0])
                            ;
                            try
                            {
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 77747, 78386);
                                foreach (var candidate in f_10038_77773_77787_I(taskCandidates))
                                {
                                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 77747, 78386);
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 77964, 78273);

                                    var
                                    info = f_10038_77975_78272(ErrorCode.WRN_SyncAndAsyncEntryPoints, args: new object[] { candidate, f_10038_78128_78148(viableEntryPoints, 0) }, symbols: taskCandidates, additionalLocations: taskLocations)
                                    ;
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 78299, 78363);

                                    f_10038_78299_78362(diagnostics, f_10038_78315_78361(info, f_10038_78338_78357(candidate)[0]));
                                    DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 77747, 78386);
                                }
                            }
                            catch (System.Exception)
                            {
                                DynAbs.Tracing.TraceSender.TraceExitLoopByException(10038, 1, 640);
                                throw;
                            }
                            finally
                            {
                                DynAbs.Tracing.TraceSender.TraceExitLoop(10038, 1, 640);
                            }
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 77412, 78405);
                        }
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 76766, 78405);
                    }

                    foreach (var (_, _, SpecificDiagnostics) in taskEntryPoints)
                    {
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 78526, 78553);

                        f_10038_78526_78552(SpecificDiagnostics);
                    }

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 78592, 79903) || true) && (f_10038_78596_78619(viableEntryPoints) == 0)
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 78592, 79903);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 78666, 78711);

                        f_10038_78666_78710(diagnostics, noMainFoundDiagnostics);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 78592, 79903);
                    }

                    else
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 78592, 79903);

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 78753, 79903) || true) && (mainType is null)
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 78753, 79903);
                            try
                            {
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 79519, 79884);
                                foreach (var diagnostic in f_10038_79546_79583_I(f_10038_79546_79583(noMainFoundDiagnostics)))
                                {
                                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 79519, 79884);

                                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 79633, 79861) || true) && (f_10038_79637_79652(diagnostic) == (int)ErrorCode.WRN_InvalidMainSig || (DynAbs.Tracing.TraceSender.Expression_False(10038, 79637, 79748) || f_10038_79693_79708(diagnostic) == (int)ErrorCode.WRN_MainCantBeGeneric))
                                    )

                                    {
                                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 79633, 79861);
                                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 79806, 79834);

                                        f_10038_79806_79833(diagnostics, diagnostic);
                                        DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 79633, 79861);
                                    }
                                    DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 79519, 79884);
                                }
                            }
                            catch (System.Exception)
                            {
                                DynAbs.Tracing.TraceSender.TraceExitLoopByException(10038, 1, 366);
                                throw;
                            }
                            finally
                            {
                                DynAbs.Tracing.TraceSender.TraceExitLoop(10038, 1, 366);
                            }
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 78753, 79903);
                        }
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 78592, 79903);
                    }
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 79923, 79955);

                    MethodSymbol?
                    entryPoint = null
                    ;

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 79973, 81980) || true) && (f_10038_79977_80000(viableEntryPoints) == 0)
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 79973, 81980);

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 80047, 80387) || true) && (mainType is null)
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 80047, 80387);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 80117, 80183);

                            f_10038_80117_80182(diagnostics, ErrorCode.ERR_NoEntryPoint, NoLocation.Singleton);
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 80047, 80387);
                        }

                        else

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 80047, 80387);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 80281, 80364);

                            f_10038_80281_80363(diagnostics, ErrorCode.ERR_NoMainInClass, mainType.Locations.First(), mainType);
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 80047, 80387);
                        }
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 79973, 81980);
                    }

                    else

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 79973, 81980);
                        try
                        {
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 80469, 81120);
                            foreach (var viableEntryPoint in f_10038_80502_80519_I(viableEntryPoints))
                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 80469, 81120);

                                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 80569, 81097) || true) && (f_10038_80573_80647(viableEntryPoint, forceComplete: true) is { } data)
                                )

                                {
                                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 80569, 81097);
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 80717, 80803);

                                    f_10038_80717_80802(!f_10038_80731_80801(data, UnmanagedCallersOnlyAttributeData.Uninitialized));
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 80833, 80934);

                                    f_10038_80833_80933(!f_10038_80847_80932(data, UnmanagedCallersOnlyAttributeData.AttributePresentDataNotBound));
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 80964, 81070);

                                    f_10038_80964_81069(diagnostics, ErrorCode.ERR_EntryPointCannotBeUnmanagedCallersOnly, viableEntryPoint.Locations.First());
                                    DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 80569, 81097);
                                }
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 80469, 81120);
                            }
                        }
                        catch (System.Exception)
                        {
                            DynAbs.Tracing.TraceSender.TraceExitLoopByException(10038, 1, 652);
                            throw;
                        }
                        finally
                        {
                            DynAbs.Tracing.TraceSender.TraceExitLoop(10038, 1, 652);
                        }
                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 81144, 81961) || true) && (f_10038_81148_81171(viableEntryPoints) > 1)
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 81144, 81961);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 81225, 81285);

                            f_10038_81225_81284(viableEntryPoints, LexicalOrderSymbolComparer.Instance);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 81311, 81693);

                            var
                            info = f_10038_81322_81692(ErrorCode.ERR_MultipleEntryPoints, args: f_10038_81445_81466(), symbols: f_10038_81507_81555(f_10038_81507_81541(viableEntryPoints)), additionalLocations: f_10038_81608_81691(f_10038_81608_81677(f_10038_81608_81658(viableEntryPoints, m => m.Locations.First()))))
                            ;
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 81721, 81806);

                            f_10038_81721_81805(
                                                    diagnostics, f_10038_81737_81804(info, f_10038_81760_81785(viableEntryPoints).Locations.First()));
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 81144, 81961);
                        }

                        else

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 81144, 81961);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 81904, 81938);

                            entryPoint = f_10038_81917_81937(viableEntryPoints, 0);
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 81144, 81961);
                        }
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 79973, 81980);
                    }
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 82000, 82023);

                    f_10038_82000_82022(
                                    taskEntryPoints);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 82041, 82066);

                    f_10038_82041_82065(viableEntryPoints);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 82084, 82114);

                    f_10038_82084_82113(noMainFoundDiagnostics);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 82132, 82150);

                    return entryPoint;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinally(10038, 82179, 82332);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 82219, 82247);

                    f_10038_82219_82246(entryPointCandidates);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 82265, 82317);

                    sealedDiagnostics = f_10038_82285_82316(diagnostics);
                    DynAbs.Tracing.TraceSender.TraceExitFinally(10038, 82179, 82332);
                }
                DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 70767, 82343);

                Microsoft.CodeAnalysis.DiagnosticBag
                f_10038_70978_71005()
                {
                    var return_v = DiagnosticBag.GetInstance();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 70978, 71005);
                    return return_v;
                }


                Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol>
                f_10038_71047_71087()
                {
                    var return_v = ArrayBuilder<MethodSymbol>.GetInstance();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 71047, 71087);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions
                f_10038_71209_71221(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param)
                {
                    var return_v = this_param.Options;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 71209, 71221);
                    return return_v;
                }


                string?
                f_10038_71209_71234(Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions
                this_param)
                {
                    var return_v = this_param.MainTypeName;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 71209, 71234);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.ModuleSymbol
                f_10038_71287_71304(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param)
                {
                    var return_v = this_param.SourceModule;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 71287, 71304);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceSymbol
                f_10038_71287_71320(Microsoft.CodeAnalysis.CSharp.Symbols.ModuleSymbol
                this_param)
                {
                    var return_v = this_param.GlobalNamespace;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 71287, 71320);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol?
                f_10038_71357_71373(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param)
                {
                    var return_v = this_param.ScriptClass;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 71357, 71373);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo
                f_10038_71703_71781(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, Microsoft.CodeAnalysis.Location
                location, params object[]
                args)
                {
                    var return_v = diagnostics.Add(code, location, args);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 71703, 71781);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedEntryPointSymbol
                f_10038_71815_71848(Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                this_param)
                {
                    var return_v = this_param.GetScriptEntryPoint();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 71815, 71848);
                    return return_v;
                }


                string[]
                f_10038_71972_71995(string
                this_param, char
                separator)
                {
                    var return_v = this_param.Split(separator);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 71972, 71995);
                    return return_v;
                }


                System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceOrTypeSymbol>?
                f_10038_71922_71996(Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceSymbol
                this_param, string[]
                qualifiedName)
                {
                    var return_v = this_param.GetNamespaceOrTypeByQualifiedName((System.Collections.Generic.IEnumerable<string>)qualifiedName);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 71922, 71996);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceOrTypeSymbol
                f_10038_71922_72013(System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceOrTypeSymbol>?
                symbols)
                {
                    var return_v = symbols.OfMinimalArity();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 71922, 72013);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo
                f_10038_72117_72201(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, Microsoft.CodeAnalysis.Location
                location, params object[]
                args)
                {
                    var return_v = diagnostics.Add(code, location, args);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 72117, 72201);
                    return return_v;
                }


                bool
                f_10038_72383_72405(Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                this_param)
                {
                    var return_v = this_param.IsGenericType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 72383, 72405);
                    return return_v;
                }


                Microsoft.CodeAnalysis.TypeKind
                f_10038_72410_72427(Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                this_param)
                {
                    var return_v = this_param.TypeKind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 72410, 72427);
                    return return_v;
                }


                Microsoft.CodeAnalysis.TypeKind
                f_10038_72449_72466(Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                this_param)
                {
                    var return_v = this_param.TypeKind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 72449, 72466);
                    return return_v;
                }


                bool
                f_10038_72489_72510_M(bool
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 72489, 72510);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo
                f_10038_72561_72669(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, Microsoft.CodeAnalysis.Location
                location, params object[]
                args)
                {
                    var return_v = diagnostics.Add(code, location, args);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 72561, 72669);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>
                f_10038_72801_72831(Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                this_param)
                {
                    var return_v = this_param.GetMembersUnordered();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 72801, 72831);
                    return return_v;
                }


                int
                f_10038_72755_72832(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol>
                entryPointCandidates, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>
                members)
                {
                    AddEntryPointCandidates(entryPointCandidates, (System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.CSharp.Symbol>)members);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 72755, 72832);
                    return 0;
                }


                System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.CSharp.Symbol>
                f_10038_73052_73162(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param, string
                name, Microsoft.CodeAnalysis.SymbolFilter
                filter, System.Threading.CancellationToken
                cancellationToken)
                {
                    var return_v = this_param.GetSymbolsWithNameCore(name, filter, cancellationToken);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 73052, 73162);
                    return return_v;
                }


                int
                f_10038_72955_73163(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol>
                entryPointCandidates, System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.CSharp.Symbol>
                members)
                {
                    AddEntryPointCandidates(entryPointCandidates, members);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 72955, 73163);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo
                f_10038_73485_73557(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, Microsoft.CodeAnalysis.Location
                location, params object[]
                args)
                {
                    var return_v = diagnostics.Add(code, location, args);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 73485, 73557);
                    return return_v;
                }


                Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol>
                f_10038_73407_73427_I(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol>
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 73407, 73427);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedEntryPointSymbol
                f_10038_73703_73736(Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                this_param)
                {
                    var return_v = this_param.GetScriptEntryPoint();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 73703, 73736);
                    return return_v;
                }


                int
                f_10038_73792_73851(bool
                b)
                {
                    RoslynDebug.Assert(b);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 73792, 73851);
                    return 0;
                }


                int
                f_10038_73878_73906(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol>
                this_param)
                {
                    this_param.Clear();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 73878, 73906);
                    return 0;
                }


                int
                f_10038_73933_73988(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol>
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                item)
                {
                    this_param.Add(item);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 73933, 73988);
                    return 0;
                }


                Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<(bool IsValid, Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol Candidate, Microsoft.CodeAnalysis.DiagnosticBag SpecificDiagnostics)>
                f_10038_74252_74353()
                {
                    var return_v = ArrayBuilder<(bool IsValid, MethodSymbol Candidate, DiagnosticBag SpecificDiagnostics)>.GetInstance();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 74252, 74353);
                    return return_v;
                }


                Microsoft.CodeAnalysis.DiagnosticBag
                f_10038_74562_74589()
                {
                    var return_v = DiagnosticBag.GetInstance();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 74562, 74589);
                    return return_v;
                }


                Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol>
                f_10038_75515_75555()
                {
                    var return_v = ArrayBuilder<MethodSymbol>.GetInstance();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 75515, 75555);
                    return return_v;
                }


                Microsoft.CodeAnalysis.DiagnosticBag
                f_10038_75686_75713()
                {
                    var return_v = DiagnosticBag.GetInstance();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 75686, 75713);
                    return return_v;
                }


                (bool IsCandidate, bool IsTaskLike)
                f_10038_75768_75818(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                method, Microsoft.CodeAnalysis.DiagnosticBag
                bag)
                {
                    var return_v = this_param.HasEntryPointSignature(method, bag);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 75768, 75818);
                    return return_v;
                }


                int
                f_10038_75907_75969(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<(bool IsValid, Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol Candidate, Microsoft.CodeAnalysis.DiagnosticBag SpecificDiagnostics)>
                this_param, (bool IsCandidate, Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol candidate, Microsoft.CodeAnalysis.DiagnosticBag perCandidateBag)
                item)
                {
                    this_param.Add(((bool IsValid, Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol Candidate, Microsoft.CodeAnalysis.DiagnosticBag SpecificDiagnostics))item);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 75907, 75969);
                    return 0;
                }

                bool
                f_10038_76185_76202(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                this_param)
                {
                    var return_v = this_param.IsAsync;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 76185, 76202);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo
                f_10038_76268_76361(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, Microsoft.CodeAnalysis.Location
                location, params object[]
                args)
                {
                    var return_v = diagnostics.Add(code, location, args);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 76268, 76361);
                    return return_v;
                }


                int
                f_10038_76492_76529(Microsoft.CodeAnalysis.DiagnosticBag
                this_param, Microsoft.CodeAnalysis.DiagnosticBag
                bag)
                {
                    this_param.AddRange(bag);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 76492, 76529);
                    return 0;
                }


                int
                f_10038_76564_76596(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol>
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                item)
                {
                    this_param.Add(item);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 76564, 76596);
                    return 0;
                }


                int
                f_10038_76681_76703(Microsoft.CodeAnalysis.DiagnosticBag
                this_param)
                {
                    this_param.Free();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 76681, 76703);
                    return 0;
                }


                Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol>
                f_10038_75602_75622_I(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol>
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 75602, 75622);
                    return return_v;
                }


                int
                f_10038_76770_76793(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol>
                this_param)
                {
                    var return_v = this_param.Count;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 76770, 76793);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode
                f_10038_77076_77111(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                method)
                {
                    var return_v = method.ExtractReturnTypeSyntax();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 77076, 77111);
                    return return_v;
                }


                bool
                f_10038_77051_77157(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode
                syntax, Microsoft.CodeAnalysis.CSharp.MessageID
                feature, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = CheckFeatureAvailability((Microsoft.CodeAnalysis.SyntaxNode)syntax, feature, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 77051, 77157);
                    return return_v;
                }


                int
                f_10038_77215_77256(Microsoft.CodeAnalysis.DiagnosticBag
                this_param, Microsoft.CodeAnalysis.DiagnosticBag
                bag)
                {
                    this_param.AddRange(bag);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 77215, 77256);
                    return 0;
                }


                int
                f_10038_77287_77319(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol>
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                item)
                {
                    this_param.Add(item);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 77287, 77319);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.LanguageVersion
                f_10038_77416_77431()
                {
                    var return_v = LanguageVersion;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 77416, 77431);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.LanguageVersion
                f_10038_77435_77483(Microsoft.CodeAnalysis.CSharp.MessageID
                feature)
                {
                    var return_v = feature.RequiredVersion();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 77435, 77483);
                    return return_v;
                }


                int
                f_10038_77487_77508(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<(bool IsValid, Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol Candidate, Microsoft.CodeAnalysis.DiagnosticBag SpecificDiagnostics)>
                this_param)
                {
                    var return_v = this_param.Count;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 77487, 77508);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>
                f_10038_77575_77630(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<(bool IsValid, Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol Candidate, Microsoft.CodeAnalysis.DiagnosticBag SpecificDiagnostics)>
                items, System.Func<(bool IsValid, Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol Candidate, Microsoft.CodeAnalysis.DiagnosticBag SpecificDiagnostics), Microsoft.CodeAnalysis.CSharp.Symbol>
                map)
                {
                    var return_v = items.SelectAsArray<(bool IsValid, Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol Candidate, Microsoft.CodeAnalysis.DiagnosticBag SpecificDiagnostics), Microsoft.CodeAnalysis.CSharp.Symbol>(map);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 77575, 77630);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                f_10038_78128_78148(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol>
                this_param, int
                i0)
                {
                    var return_v = this_param[i0];
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 78128, 78148);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo
                f_10038_77975_78272(Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, object[]
                args, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>
                symbols, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Location>
                additionalLocations)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo(code, args: args, symbols: symbols, additionalLocations: additionalLocations);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 77975, 78272);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Location>
                f_10038_78338_78357(Microsoft.CodeAnalysis.CSharp.Symbol
                this_param)
                {
                    var return_v = this_param.Locations;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 78338, 78357);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSDiagnostic
                f_10038_78315_78361(Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo
                info, Microsoft.CodeAnalysis.Location
                location)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.CSDiagnostic((Microsoft.CodeAnalysis.DiagnosticInfo)info, location);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 78315, 78361);
                    return return_v;
                }


                int
                f_10038_78299_78362(Microsoft.CodeAnalysis.DiagnosticBag
                this_param, Microsoft.CodeAnalysis.CSharp.CSDiagnostic
                diag)
                {
                    this_param.Add((Microsoft.CodeAnalysis.Diagnostic)diag);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 78299, 78362);
                    return 0;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>
                f_10038_77773_77787_I(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 77773, 77787);
                    return return_v;
                }


                int
                f_10038_78526_78552(Microsoft.CodeAnalysis.DiagnosticBag
                this_param)
                {
                    this_param.Free();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 78526, 78552);
                    return 0;
                }


                int
                f_10038_78596_78619(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol>
                this_param)
                {
                    var return_v = this_param.Count;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 78596, 78619);
                    return return_v;
                }


                int
                f_10038_78666_78710(Microsoft.CodeAnalysis.DiagnosticBag
                this_param, Microsoft.CodeAnalysis.DiagnosticBag
                bag)
                {
                    this_param.AddRange(bag);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 78666, 78710);
                    return 0;
                }


                System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.Diagnostic>
                f_10038_79546_79583(Microsoft.CodeAnalysis.DiagnosticBag
                this_param)
                {
                    var return_v = this_param.AsEnumerable();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 79546, 79583);
                    return return_v;
                }


                int
                f_10038_79637_79652(Microsoft.CodeAnalysis.Diagnostic
                this_param)
                {
                    var return_v = this_param.Code;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 79637, 79652);
                    return return_v;
                }


                int
                f_10038_79693_79708(Microsoft.CodeAnalysis.Diagnostic
                this_param)
                {
                    var return_v = this_param.Code;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 79693, 79708);
                    return return_v;
                }


                int
                f_10038_79806_79833(Microsoft.CodeAnalysis.DiagnosticBag
                this_param, Microsoft.CodeAnalysis.Diagnostic
                diag)
                {
                    this_param.Add(diag);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 79806, 79833);
                    return 0;
                }


                System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.Diagnostic>
                f_10038_79546_79583_I(System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.Diagnostic>
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 79546, 79583);
                    return return_v;
                }


                int
                f_10038_79977_80000(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol>
                this_param)
                {
                    var return_v = this_param.Count;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 79977, 80000);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo
                f_10038_80117_80182(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, Microsoft.CodeAnalysis.Location
                location)
                {
                    var return_v = diagnostics.Add(code, location);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 80117, 80182);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo
                f_10038_80281_80363(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, Microsoft.CodeAnalysis.Location
                location, params object[]
                args)
                {
                    var return_v = diagnostics.Add(code, location, args);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 80281, 80363);
                    return return_v;
                }


                Microsoft.CodeAnalysis.UnmanagedCallersOnlyAttributeData?
                f_10038_80573_80647(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                this_param, bool
                forceComplete)
                {
                    var return_v = this_param.GetUnmanagedCallersOnlyAttributeData(forceComplete: forceComplete);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 80573, 80647);
                    return return_v;
                }


                bool
                f_10038_80731_80801(Microsoft.CodeAnalysis.UnmanagedCallersOnlyAttributeData
                objA, Microsoft.CodeAnalysis.UnmanagedCallersOnlyAttributeData
                objB)
                {
                    var return_v = ReferenceEquals((object)objA, (object)objB);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 80731, 80801);
                    return return_v;
                }


                int
                f_10038_80717_80802(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 80717, 80802);
                    return 0;
                }


                bool
                f_10038_80847_80932(Microsoft.CodeAnalysis.UnmanagedCallersOnlyAttributeData
                objA, Microsoft.CodeAnalysis.UnmanagedCallersOnlyAttributeData
                objB)
                {
                    var return_v = ReferenceEquals((object)objA, (object)objB);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 80847, 80932);
                    return return_v;
                }


                int
                f_10038_80833_80933(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 80833, 80933);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo
                f_10038_80964_81069(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, Microsoft.CodeAnalysis.Location
                location)
                {
                    var return_v = diagnostics.Add(code, location);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 80964, 81069);
                    return return_v;
                }


                Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol>
                f_10038_80502_80519_I(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol>
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 80502, 80519);
                    return return_v;
                }


                int
                f_10038_81148_81171(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol>
                this_param)
                {
                    var return_v = this_param.Count;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 81148, 81171);
                    return return_v;
                }


                int
                f_10038_81225_81284(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol>
                this_param, Microsoft.CodeAnalysis.CSharp.LexicalOrderSymbolComparer
                comparer)
                {
                    this_param.Sort((System.Collections.Generic.IComparer<Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol>)comparer);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 81225, 81284);
                    return 0;
                }


                object[]
                f_10038_81445_81466()
                {
                    var return_v = Array.Empty<object>();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 81445, 81466);
                    return return_v;
                }


                System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.CSharp.Symbol>
                f_10038_81507_81541(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol>
                source)
                {
                    var return_v = source.OfType<Microsoft.CodeAnalysis.CSharp.Symbol>();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 81507, 81541);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>
                f_10038_81507_81555(System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.CSharp.Symbol>
                items)
                {
                    var return_v = items.AsImmutable<Microsoft.CodeAnalysis.CSharp.Symbol>();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 81507, 81555);
                    return return_v;
                }


                System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.Location>
                f_10038_81608_81658(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol>
                source, System.Func<Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol, Microsoft.CodeAnalysis.Location>
                selector)
                {
                    var return_v = source.Select<Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol, Microsoft.CodeAnalysis.Location>(selector);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 81608, 81658);
                    return return_v;
                }


                System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.Location>
                f_10038_81608_81677(System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.Location>
                source)
                {
                    var return_v = source.OfType<Microsoft.CodeAnalysis.Location>();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 81608, 81677);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Location>
                f_10038_81608_81691(System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.Location>
                items)
                {
                    var return_v = items.AsImmutable<Microsoft.CodeAnalysis.Location>();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 81608, 81691);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo
                f_10038_81322_81692(Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, object[]
                args, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>
                symbols, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Location>
                additionalLocations)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo(code, args: args, symbols: symbols, additionalLocations: additionalLocations);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 81322, 81692);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                f_10038_81760_81785(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol>
                this_param)
                {
                    var return_v = this_param.First();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 81760, 81785);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSDiagnostic
                f_10038_81737_81804(Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo
                info, Microsoft.CodeAnalysis.Location
                location)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.CSDiagnostic((Microsoft.CodeAnalysis.DiagnosticInfo)info, location);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 81737, 81804);
                    return return_v;
                }


                int
                f_10038_81721_81805(Microsoft.CodeAnalysis.DiagnosticBag
                this_param, Microsoft.CodeAnalysis.CSharp.CSDiagnostic
                diag)
                {
                    this_param.Add((Microsoft.CodeAnalysis.Diagnostic)diag);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 81721, 81805);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                f_10038_81917_81937(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol>
                this_param, int
                i0)
                {
                    var return_v = this_param[i0];
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 81917, 81937);
                    return return_v;
                }


                int
                f_10038_82000_82022(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<(bool IsValid, Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol Candidate, Microsoft.CodeAnalysis.DiagnosticBag SpecificDiagnostics)>
                this_param)
                {
                    this_param.Free();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 82000, 82022);
                    return 0;
                }


                int
                f_10038_82041_82065(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol>
                this_param)
                {
                    this_param.Free();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 82041, 82065);
                    return 0;
                }


                int
                f_10038_82084_82113(Microsoft.CodeAnalysis.DiagnosticBag
                this_param)
                {
                    this_param.Free();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 82084, 82113);
                    return 0;
                }


                int
                f_10038_82219_82246(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol>
                this_param)
                {
                    this_param.Free();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 82219, 82246);
                    return 0;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Diagnostic>
                f_10038_82285_82316(Microsoft.CodeAnalysis.DiagnosticBag
                this_param)
                {
                    var return_v = this_param.ToReadOnlyAndFree();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 82285, 82316);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 70767, 82343);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 70767, 82343);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private static void AddEntryPointCandidates(
                    ArrayBuilder<MethodSymbol> entryPointCandidates, IEnumerable<Symbol> members)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterStaticMethod(10038, 82355, 82785);
                try
                {
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 82515, 82774);
                    foreach (var member in f_10038_82538_82545_I(members))
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 82515, 82774);

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 82579, 82759) || true) && (member is MethodSymbol method && (DynAbs.Tracing.TraceSender.Expression_True(10038, 82583, 82665) && f_10038_82637_82665(method)))
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 82579, 82759);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 82707, 82740);

                            f_10038_82707_82739(entryPointCandidates, method);
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 82579, 82759);
                        }
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 82515, 82774);
                    }
                }
                catch (System.Exception)
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoopByException(10038, 1, 260);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoop(10038, 1, 260);
                }
                DynAbs.Tracing.TraceSender.TraceExitStaticMethod(10038, 82355, 82785);

                bool
                f_10038_82637_82665(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                this_param)
                {
                    var return_v = this_param.IsEntryPointCandidate;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 82637, 82665);
                    return return_v;
                }


                int
                f_10038_82707_82739(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol>
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                item)
                {
                    this_param.Add(item);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 82707, 82739);
                    return 0;
                }


                System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.CSharp.Symbol>
                f_10038_82538_82545_I(System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.CSharp.Symbol>
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 82538, 82545);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 82355, 82785);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 82355, 82785);
            }
        }

        internal bool ReturnsAwaitableToVoidOrInt(MethodSymbol method, DiagnosticBag diagnostics)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 82797, 84279);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 82952, 83109) || true) && (f_10038_82956_82986(f_10038_82956_82973(method)) || (DynAbs.Tracing.TraceSender.Expression_False(10038, 82956, 83047) || f_10038_82990_83019(f_10038_82990_83007(method)) == SpecialType.System_Int32))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 82952, 83109);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 83081, 83094);

                    return false;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 82952, 83109);
                }

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 83125, 83240) || true) && (!(f_10038_83131_83148(method) is NamedTypeSymbol namedType))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 83125, 83240);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 83212, 83225);

                    return false;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 83125, 83240);
                }

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 83354, 83732) || true) && (!(f_10038_83360_83502(f_10038_83378_83403(namedType), f_10038_83405_83464(this, WellKnownType.System_Threading_Tasks_Task), TypeCompareKind.ConsiderEverything2) || (DynAbs.Tracing.TraceSender.Expression_False(10038, 83360, 83669) || f_10038_83525_83669(f_10038_83543_83568(namedType), f_10038_83570_83631(this, WellKnownType.System_Threading_Tasks_Task_T), TypeCompareKind.ConsiderEverything2))))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 83354, 83732);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 83704, 83717);

                    return false;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 83354, 83732);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 83748, 83794);

                var
                syntax = f_10038_83761_83793(method)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 83808, 83883);

                var
                dumbInstance = f_10038_83827_83882(syntax, f_10038_83852_83870(), namedType)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 83897, 83928);

                var
                binder = f_10038_83910_83927(this, syntax)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 83942, 83966);

                BoundExpression?
                result
                = default(BoundExpression?);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 83980, 84075);

                var
                success = f_10038_83994_84074(binder, dumbInstance, out result, syntax, diagnostics)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 84091, 84134);

                f_10038_84091_84133(!f_10038_84111_84132(namedType));
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 84148, 84268);

                return success && (DynAbs.Tracing.TraceSender.Expression_True(10038, 84155, 84267) && (f_10038_84184_84210(result!.Type!) || (DynAbs.Tracing.TraceSender.Expression_False(10038, 84184, 84266) || f_10038_84214_84238(result.Type!) == SpecialType.System_Int32)));
                DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 82797, 84279);

                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                f_10038_82956_82973(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                this_param)
                {
                    var return_v = this_param.ReturnType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 82956, 82973);
                    return return_v;
                }


                bool
                f_10038_82956_82986(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                type)
                {
                    var return_v = type.IsVoidType();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 82956, 82986);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                f_10038_82990_83007(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                this_param)
                {
                    var return_v = this_param.ReturnType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 82990, 83007);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SpecialType
                f_10038_82990_83019(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                this_param)
                {
                    var return_v = this_param.SpecialType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 82990, 83019);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                f_10038_83131_83148(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                this_param)
                {
                    var return_v = this_param.ReturnType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 83131, 83148);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                f_10038_83378_83403(Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                this_param)
                {
                    var return_v = this_param.ConstructedFrom;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 83378, 83403);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                f_10038_83405_83464(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param, Microsoft.CodeAnalysis.WellKnownType
                type)
                {
                    var return_v = this_param.GetWellKnownType(type);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 83405, 83464);
                    return return_v;
                }


                bool
                f_10038_83360_83502(Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                left, Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                right, Microsoft.CodeAnalysis.TypeCompareKind
                comparison)
                {
                    var return_v = TypeSymbol.Equals((Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol)left, (Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol)right, comparison);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 83360, 83502);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                f_10038_83543_83568(Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                this_param)
                {
                    var return_v = this_param.ConstructedFrom;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 83543, 83568);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                f_10038_83570_83631(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param, Microsoft.CodeAnalysis.WellKnownType
                type)
                {
                    var return_v = this_param.GetWellKnownType(type);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 83570, 83631);
                    return return_v;
                }


                bool
                f_10038_83525_83669(Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                left, Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                right, Microsoft.CodeAnalysis.TypeCompareKind
                comparison)
                {
                    var return_v = TypeSymbol.Equals((Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol)left, (Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol)right, comparison);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 83525, 83669);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode
                f_10038_83761_83793(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                method)
                {
                    var return_v = method.ExtractReturnTypeSyntax();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 83761, 83793);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ConstantValue
                f_10038_83852_83870()
                {
                    var return_v = ConstantValue.Null;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 83852, 83870);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundLiteral
                f_10038_83827_83882(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode
                syntax, Microsoft.CodeAnalysis.ConstantValue
                constantValueOpt, Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                type)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.BoundLiteral((Microsoft.CodeAnalysis.SyntaxNode)syntax, constantValueOpt, (Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol)type);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 83827, 83882);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Binder
                f_10038_83910_83927(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param, Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode
                syntax)
                {
                    var return_v = this_param.GetBinder(syntax);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 83910, 83927);
                    return return_v;
                }


                bool
                f_10038_83994_84074(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Microsoft.CodeAnalysis.CSharp.BoundLiteral
                expression, out Microsoft.CodeAnalysis.CSharp.BoundExpression?
                getAwaiterGetResultCall, Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode
                node, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.GetAwaitableExpressionInfo((Microsoft.CodeAnalysis.CSharp.BoundExpression)expression, out getAwaiterGetResultCall, (Microsoft.CodeAnalysis.SyntaxNode)node, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 83994, 84074);
                    return return_v;
                }


                bool
                f_10038_84111_84132(Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                type)
                {
                    var return_v = type.IsDynamic();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 84111, 84132);
                    return return_v;
                }


                int
                f_10038_84091_84133(bool
                b)
                {
                    RoslynDebug.Assert(b);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 84091, 84133);
                    return 0;
                }


                bool
                f_10038_84184_84210(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                type)
                {
                    var return_v = type.IsVoidType();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 84184, 84210);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SpecialType
                f_10038_84214_84238(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                this_param)
                {
                    var return_v = this_param.SpecialType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 84214, 84238);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 82797, 84279);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 82797, 84279);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        internal (bool IsCandidate, bool IsTaskLike) HasEntryPointSignature(MethodSymbol method, DiagnosticBag bag)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 84753, 86466);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 84885, 84975) || true) && (f_10038_84889_84904(method))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 84885, 84975);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 84938, 84960);

                    return (false, false);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 84885, 84975);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 84991, 85033);

                TypeSymbol
                returnType = f_10038_85015_85032(method)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 85047, 85083);

                bool
                returnsTaskOrTaskOfInt = false
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 85097, 85502) || true) && (f_10038_85101_85123(returnType) != SpecialType.System_Int32 && (DynAbs.Tracing.TraceSender.Expression_True(10038, 85101, 85179) && !f_10038_85156_85179(returnType)))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 85097, 85502);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 85293, 85359);

                    returnsTaskOrTaskOfInt = f_10038_85318_85358(this, method, bag);

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 85377, 85487) || true) && (!returnsTaskOrTaskOfInt)
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 85377, 85487);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 85446, 85468);

                        return (false, false);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 85377, 85487);
                    }
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 85097, 85502);
                }

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 85518, 85640) || true) && (f_10038_85522_85536(method) != RefKind.None)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 85518, 85640);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 85586, 85625);

                    return (false, returnsTaskOrTaskOfInt);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 85518, 85640);
                }

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 85656, 85776) || true) && (method.Parameters.Length == 0)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 85656, 85776);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 85723, 85761);

                    return (true, returnsTaskOrTaskOfInt);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 85656, 85776);
                }

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 85792, 85912) || true) && (method.Parameters.Length > 1)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 85792, 85912);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 85858, 85897);

                    return (false, returnsTaskOrTaskOfInt);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 85792, 85912);
                }

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 85928, 86055) || true) && (f_10038_85932_85967_M(!method.ParameterRefKinds.IsDefault))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 85928, 86055);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 86001, 86040);

                    return (false, returnsTaskOrTaskOfInt);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 85928, 86055);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 86071, 86128);

                var
                firstType = f_10038_86087_86127(f_10038_86087_86104(method)[0])
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 86142, 86270) || true) && (firstType.TypeKind != TypeKind.Array)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 86142, 86270);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 86216, 86255);

                    return (false, returnsTaskOrTaskOfInt);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 86142, 86270);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 86286, 86330);

                var
                array = (ArrayTypeSymbol)firstType.Type
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 86344, 86455);

                return (f_10038_86352_86367(array) && (DynAbs.Tracing.TraceSender.Expression_True(10038, 86352, 86429) && f_10038_86371_86400(f_10038_86371_86388(array)) == SpecialType.System_String), returnsTaskOrTaskOfInt);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 84753, 86466);

                bool
                f_10038_84889_84904(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                this_param)
                {
                    var return_v = this_param.IsVararg;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 84889, 84904);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                f_10038_85015_85032(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                this_param)
                {
                    var return_v = this_param.ReturnType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 85015, 85032);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SpecialType
                f_10038_85101_85123(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                this_param)
                {
                    var return_v = this_param.SpecialType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 85101, 85123);
                    return return_v;
                }


                bool
                f_10038_85156_85179(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                type)
                {
                    var return_v = type.IsVoidType();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 85156, 85179);
                    return return_v;
                }


                bool
                f_10038_85318_85358(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                method, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.ReturnsAwaitableToVoidOrInt(method, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 85318, 85358);
                    return return_v;
                }


                Microsoft.CodeAnalysis.RefKind
                f_10038_85522_85536(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                this_param)
                {
                    var return_v = this_param.RefKind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 85522, 85536);
                    return return_v;
                }


                bool
                f_10038_85932_85967_M(bool
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 85932, 85967);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol>
                f_10038_86087_86104(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                this_param)
                {
                    var return_v = this_param.Parameters;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 86087, 86104);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                f_10038_86087_86127(Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol
                this_param)
                {
                    var return_v = this_param.TypeWithAnnotations;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 86087, 86127);
                    return return_v;
                }


                bool
                f_10038_86352_86367(Microsoft.CodeAnalysis.CSharp.Symbols.ArrayTypeSymbol
                this_param)
                {
                    var return_v = this_param.IsSZArray;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 86352, 86367);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                f_10038_86371_86388(Microsoft.CodeAnalysis.CSharp.Symbols.ArrayTypeSymbol
                this_param)
                {
                    var return_v = this_param.ElementType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 86371, 86388);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SpecialType
                f_10038_86371_86400(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                this_param)
                {
                    var return_v = this_param.SpecialType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 86371, 86400);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 84753, 86466);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 84753, 86466);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        internal override bool IsUnreferencedAssemblyIdentityDiagnosticCode(int code)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 86569, 86608);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 86572, 86608);
                return code == (int)ErrorCode.ERR_NoTypeDef; DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 86569, 86608);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 86569, 86608);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 86569, 86608);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }
        internal class EntryPoint
        {
            public readonly MethodSymbol? MethodSymbol;

            public readonly ImmutableArray<Diagnostic> Diagnostics;

            public static readonly EntryPoint None;

            public EntryPoint(MethodSymbol? methodSymbol, ImmutableArray<Diagnostic> diagnostics)
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterConstructor(10038, 86911, 87126);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 86701, 86713);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 87029, 87062);

                    this.MethodSymbol = methodSymbol;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 87080, 87111);

                    this.Diagnostics = diagnostics;
                    DynAbs.Tracing.TraceSender.TraceExitConstructor(10038, 86911, 87126);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 86911, 87126);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 86911, 87126);
                }
            }

            static EntryPoint()
            {
                DynAbs.Tracing.TraceSender.TraceEnterStaticConstructor(10038, 86621, 87137);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 86833, 86894);
                None = f_10038_86840_86894(null, ImmutableArray<Diagnostic>.Empty); DynAbs.Tracing.TraceSender.TraceExitStaticConstructor(10038, 86621, 87137);

                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 86621, 87137);
            }

            int ___ignore_me___ = DynAbs.Tracing.TraceSender.TraceBeforeConstructor(10038, 86621, 87137);

            static Microsoft.CodeAnalysis.CSharp.CSharpCompilation.EntryPoint
            f_10038_86840_86894(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol?
            methodSymbol, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Diagnostic>
            diagnostics)
            {
                var return_v = new Microsoft.CodeAnalysis.CSharp.CSharpCompilation.EntryPoint(methodSymbol, diagnostics);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 86840, 86894);
                return return_v;
            }

        }

        internal bool MightContainNoPiaLocalTypes()
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 87149, 87280);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 87217, 87269);

                return f_10038_87224_87268(f_10038_87224_87238());
                DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 87149, 87280);

                Microsoft.CodeAnalysis.CSharp.Symbols.SourceAssemblySymbol
                f_10038_87224_87238()
                {
                    var return_v = SourceAssembly;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 87224, 87238);
                    return return_v;
                }


                bool
                f_10038_87224_87268(Microsoft.CodeAnalysis.CSharp.Symbols.SourceAssemblySymbol
                this_param)
                {
                    var return_v = this_param.MightContainNoPiaLocalTypes();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 87224, 87268);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 87149, 87280);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 87149, 87280);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public Conversion ClassifyConversion(ITypeSymbol source, ITypeSymbol destination)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 88341, 89337);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 88705, 88828) || true) && ((object)source == null)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 88705, 88828);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 88765, 88813);

                    throw f_10038_88771_88812(nameof(source));
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 88705, 88828);
                }

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 88844, 88977) || true) && ((object)destination == null)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 88844, 88977);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 88909, 88962);

                    throw f_10038_88915_88961(nameof(destination));
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 88844, 88977);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 88993, 89064);

                TypeSymbol?
                cssource = f_10038_89016_89063(source, nameof(source))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 89078, 89157);

                TypeSymbol?
                csdest = f_10038_89099_89156(destination, nameof(destination))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 89173, 89224);

                HashSet<DiagnosticInfo>?
                useSiteDiagnostics = null
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 89238, 89326);

                return f_10038_89245_89325(f_10038_89245_89256(), cssource, csdest, ref useSiteDiagnostics);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 88341, 89337);

                System.ArgumentNullException
                f_10038_88771_88812(string
                paramName)
                {
                    var return_v = new System.ArgumentNullException(paramName);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 88771, 88812);
                    return return_v;
                }


                System.ArgumentNullException
                f_10038_88915_88961(string
                paramName)
                {
                    var return_v = new System.ArgumentNullException(paramName);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 88915, 88961);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?
                f_10038_89016_89063(Microsoft.CodeAnalysis.ITypeSymbol
                symbol, string
                paramName)
                {
                    var return_v = symbol.EnsureCSharpSymbolOrNull(paramName);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 89016, 89063);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?
                f_10038_89099_89156(Microsoft.CodeAnalysis.ITypeSymbol
                symbol, string
                paramName)
                {
                    var return_v = symbol.EnsureCSharpSymbolOrNull(paramName);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 89099, 89156);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Conversions
                f_10038_89245_89256()
                {
                    var return_v = Conversions;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 89245, 89256);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Conversion
                f_10038_89245_89325(Microsoft.CodeAnalysis.CSharp.Conversions
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                source, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                destination, ref System.Collections.Generic.HashSet<Microsoft.CodeAnalysis.DiagnosticInfo>?
                useSiteDiagnostics)
                {
                    var return_v = this_param.ClassifyConversionFromType(source, destination, ref useSiteDiagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 89245, 89325);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 88341, 89337);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 88341, 89337);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override CommonConversion ClassifyCommonConversion(ITypeSymbol source, ITypeSymbol destination)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 89926, 90132);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 90053, 90121);

                return f_10038_90060_90099(this, source, destination).ToCommonConversion();
                DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 89926, 90132);

                Microsoft.CodeAnalysis.CSharp.Conversion
                f_10038_90060_90099(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param, Microsoft.CodeAnalysis.ITypeSymbol
                source, Microsoft.CodeAnalysis.ITypeSymbol
                destination)
                {
                    var return_v = this_param.ClassifyConversion(source, destination);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 90060, 90099);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 89926, 90132);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 89926, 90132);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        internal override IConvertibleConversion ClassifyConvertibleConversion(IOperation source, ITypeSymbol? destination, out ConstantValue? constantValue)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 90144, 91237);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 90318, 90339);

                constantValue = null;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 90355, 90458) || true) && (destination is null)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 90355, 90458);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 90412, 90443);

                    return Conversion.NoConversion;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 90355, 90458);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 90474, 90512);

                ITypeSymbol?
                sourceType = f_10038_90500_90511(source)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 90528, 90591);

                ConstantValue?
                sourceConstantValue = f_10038_90565_90590(source)
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 90605, 90950) || true) && (sourceType is null)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 90605, 90950);

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 90661, 90884) || true) && (sourceConstantValue is { IsNull: true } && (DynAbs.Tracing.TraceSender.Expression_True(10038, 90665, 90735) && f_10038_90708_90735(destination)))
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 90661, 90884);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 90777, 90813);

                        constantValue = sourceConstantValue;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 90835, 90865);

                        return Conversion.NullLiteral;
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 90661, 90884);
                    }
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 90904, 90935);

                    return Conversion.NoConversion;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 90605, 90950);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 90966, 91030);

                Conversion
                result = f_10038_90986_91029(this, sourceType, destination)
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 91046, 91196) || true) && (result.IsReference && (DynAbs.Tracing.TraceSender.Expression_True(10038, 91050, 91111) && sourceConstantValue is { IsNull: true }))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 91046, 91196);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 91145, 91181);

                    constantValue = sourceConstantValue;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 91046, 91196);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 91212, 91226);

                return result;
                DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 90144, 91237);

                Microsoft.CodeAnalysis.ITypeSymbol?
                f_10038_90500_90511(Microsoft.CodeAnalysis.IOperation
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 90500, 90511);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ConstantValue?
                f_10038_90565_90590(Microsoft.CodeAnalysis.IOperation
                operation)
                {
                    var return_v = operation.GetConstantValue();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 90565, 90590);
                    return return_v;
                }


                bool
                f_10038_90708_90735(Microsoft.CodeAnalysis.ITypeSymbol
                this_param)
                {
                    var return_v = this_param.IsReferenceType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 90708, 90735);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Conversion
                f_10038_90986_91029(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param, Microsoft.CodeAnalysis.ITypeSymbol
                source, Microsoft.CodeAnalysis.ITypeSymbol
                destination)
                {
                    var return_v = this_param.ClassifyConversion(source, destination);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 90986, 91029);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 90144, 91237);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 90144, 91237);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        internal ArrayTypeSymbol CreateArrayTypeSymbol(TypeSymbol elementType, int rank = 1, NullableAnnotation elementNullableAnnotation = NullableAnnotation.Oblivious)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 91442, 92037);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 91628, 91761) || true) && ((object)elementType == null)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 91628, 91761);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 91693, 91746);

                    throw f_10038_91699_91745(nameof(elementType));
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 91628, 91761);
                }

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 91777, 91880) || true) && (rank < 1)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 91777, 91880);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 91823, 91865);

                    throw f_10038_91829_91864(nameof(rank));
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 91777, 91880);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 91896, 92026);

                return f_10038_91903_92025(f_10038_91937_91950(this), TypeWithAnnotations.Create(elementType, elementNullableAnnotation), rank);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 91442, 92037);

                System.ArgumentNullException
                f_10038_91699_91745(string
                paramName)
                {
                    var return_v = new System.ArgumentNullException(paramName);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 91699, 91745);
                    return return_v;
                }


                System.ArgumentException
                f_10038_91829_91864(string
                message)
                {
                    var return_v = new System.ArgumentException(message);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 91829, 91864);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.AssemblySymbol
                f_10038_91937_91950(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param)
                {
                    var return_v = this_param.Assembly;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 91937, 91950);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.ArrayTypeSymbol
                f_10038_91903_92025(Microsoft.CodeAnalysis.CSharp.Symbols.AssemblySymbol
                declaringAssembly, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                elementTypeWithAnnotations, int
                rank)
                {
                    var return_v = ArrayTypeSymbol.CreateCSharpArray(declaringAssembly, elementTypeWithAnnotations, rank);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 91903, 92025);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 91442, 92037);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 91442, 92037);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        internal PointerTypeSymbol CreatePointerTypeSymbol(TypeSymbol elementType, NullableAnnotation elementNullableAnnotation = NullableAnnotation.Oblivious)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 92205, 92638);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 92381, 92514) || true) && ((object)elementType == null)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 92381, 92514);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 92446, 92499);

                    throw f_10038_92452_92498(nameof(elementType));
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 92381, 92514);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 92530, 92627);

                return f_10038_92537_92626(TypeWithAnnotations.Create(elementType, elementNullableAnnotation));
                DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 92205, 92638);

                System.ArgumentNullException
                f_10038_92452_92498(string
                paramName)
                {
                    var return_v = new System.ArgumentNullException(paramName);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 92452, 92498);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.PointerTypeSymbol
                f_10038_92537_92626(Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                pointedAtType)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.Symbols.PointerTypeSymbol(pointedAtType);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 92537, 92626);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 92205, 92638);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 92205, 92638);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private protected override bool IsSymbolAccessibleWithinCore(
                    ISymbol symbol,
                    ISymbol within,
                    ITypeSymbol? throughType)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 92650, 93459);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 92833, 92899);

                Symbol?
                symbol0 = f_10038_92851_92898(symbol, nameof(symbol))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 92913, 92979);

                Symbol?
                within0 = f_10038_92931_92978(within, nameof(within))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 92993, 93078);

                TypeSymbol?
                throughType0 = f_10038_93020_93077(throughType, nameof(throughType))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 93092, 93143);

                HashSet<DiagnosticInfo>?
                useSiteDiagnostics = null
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 93157, 93448);

                return
                (DynAbs.Tracing.TraceSender.Conditional_F1(10038, 93181, 93216) || ((f_10038_93181_93193(within0) == SymbolKind.Assembly && DynAbs.Tracing.TraceSender.Conditional_F2(10038, 93236, 93324)) || DynAbs.Tracing.TraceSender.Conditional_F3(10038, 93344, 93447))) ? f_10038_93236_93324(symbol0, within0, ref useSiteDiagnostics) : f_10038_93344_93447(symbol0, within0, ref useSiteDiagnostics, throughType0);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 92650, 93459);

                Microsoft.CodeAnalysis.CSharp.Symbol?
                f_10038_92851_92898(Microsoft.CodeAnalysis.ISymbol
                symbol, string
                paramName)
                {
                    var return_v = symbol.EnsureCSharpSymbolOrNull(paramName);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 92851, 92898);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbol?
                f_10038_92931_92978(Microsoft.CodeAnalysis.ISymbol
                symbol, string
                paramName)
                {
                    var return_v = symbol.EnsureCSharpSymbolOrNull(paramName);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 92931, 92978);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?
                f_10038_93020_93077(Microsoft.CodeAnalysis.ITypeSymbol?
                symbol, string
                paramName)
                {
                    var return_v = symbol.EnsureCSharpSymbolOrNull(paramName);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 93020, 93077);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SymbolKind
                f_10038_93181_93193(Microsoft.CodeAnalysis.CSharp.Symbol
                this_param)
                {
                    var return_v = this_param.Kind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 93181, 93193);
                    return return_v;
                }


                bool
                f_10038_93236_93324(Microsoft.CodeAnalysis.CSharp.Symbol
                symbol, Microsoft.CodeAnalysis.CSharp.Symbol
                within, ref System.Collections.Generic.HashSet<Microsoft.CodeAnalysis.DiagnosticInfo>?
                useSiteDiagnostics)
                {
                    var return_v = AccessCheck.IsSymbolAccessible(symbol, (Microsoft.CodeAnalysis.CSharp.Symbols.AssemblySymbol)within, ref useSiteDiagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 93236, 93324);
                    return return_v;
                }


                bool
                f_10038_93344_93447(Microsoft.CodeAnalysis.CSharp.Symbol
                symbol, Microsoft.CodeAnalysis.CSharp.Symbol
                within, ref System.Collections.Generic.HashSet<Microsoft.CodeAnalysis.DiagnosticInfo>?
                useSiteDiagnostics, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?
                throughTypeOpt)
                {
                    var return_v = AccessCheck.IsSymbolAccessible(symbol, (Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol)within, ref useSiteDiagnostics, throughTypeOpt);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 93344, 93447);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 92650, 93459);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 92650, 93459);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        [Obsolete("Compilation.IsSymbolAccessibleWithin is not designed for use within the compilers", true)]
        internal new bool IsSymbolAccessibleWithin(
                    ISymbol symbol,
                    ISymbol within,
                    ITypeSymbol? throughType = null)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 93471, 93801);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 93754, 93790);

                throw f_10038_93760_93789();
                DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 93471, 93801);

                System.NotImplementedException
                f_10038_93760_93789()
                {
                    var return_v = new System.NotImplementedException();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 93760, 93789);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 93471, 93801);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 93471, 93801);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private ConcurrentSet<MethodSymbol>? _moduleInitializerMethods;

        internal void AddModuleInitializerMethod(MethodSymbol method)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 93888, 94121);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 93974, 94019);

                f_10038_93974_94018(!_declarationDiagnosticsFrozen);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 94033, 94110);

                f_10038_94033_94109(f_10038_94033_94097(ref _moduleInitializerMethods), method);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 93888, 94121);

                int
                f_10038_93974_94018(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 93974, 94018);
                    return 0;
                }


                Roslyn.Utilities.ConcurrentSet<Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol>
                f_10038_94033_94097(ref Roslyn.Utilities.ConcurrentSet<Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol>?
                target)
                {
                    var return_v = LazyInitializer.EnsureInitialized(ref target);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 94033, 94097);
                    return return_v;
                }


                bool
                f_10038_94033_94109(Roslyn.Utilities.ConcurrentSet<Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol>
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                value)
                {
                    var return_v = this_param.Add(value);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 94033, 94109);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 93888, 94121);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 93888, 94121);
            }
        }

        public new SemanticModel GetSemanticModel(SyntaxTree syntaxTree, bool ignoreAccessibility)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 94308, 95144);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 94423, 94546) || true) && (syntaxTree == null)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 94423, 94546);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 94479, 94531);

                    throw f_10038_94485_94530(nameof(syntaxTree));
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 94423, 94546);
                }

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 94562, 94776) || true) && (!f_10038_94567_94643(f_10038_94567_94604(_syntaxAndDeclarations).RootNamespaces, syntaxTree))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 94562, 94776);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 94677, 94761);

                    throw f_10038_94683_94760(f_10038_94705_94739(), nameof(syntaxTree));
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 94562, 94776);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 94792, 94820);

                SemanticModel?
                model = null
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 94834, 95048) || true) && (f_10038_94838_94859() != null)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 94834, 95048);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 94901, 94987);

                    model = f_10038_94909_94986(f_10038_94909_94930(), syntaxTree, this, ignoreAccessibility);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 95005, 95033);

                    f_10038_95005_95032(model != null);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 94834, 95048);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 95064, 95133);

                return model ?? (DynAbs.Tracing.TraceSender.Expression_Null<Microsoft.CodeAnalysis.SemanticModel?>(10038, 95071, 95132) ?? f_10038_95080_95132(this, syntaxTree, ignoreAccessibility));
                DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 94308, 95144);

                System.ArgumentNullException
                f_10038_94485_94530(string
                paramName)
                {
                    var return_v = new System.ArgumentNullException(paramName);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 94485, 94530);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.SyntaxAndDeclarationManager.State
                f_10038_94567_94604(Microsoft.CodeAnalysis.CSharp.SyntaxAndDeclarationManager
                this_param)
                {
                    var return_v = this_param.GetLazyState();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 94567, 94604);
                    return return_v;
                }


                bool
                f_10038_94567_94643(System.Collections.Immutable.ImmutableDictionary<Microsoft.CodeAnalysis.SyntaxTree, System.Lazy<Microsoft.CodeAnalysis.CSharp.RootSingleNamespaceDeclaration>>
                this_param, Microsoft.CodeAnalysis.SyntaxTree
                key)
                {
                    var return_v = this_param.ContainsKey(key);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 94567, 94643);
                    return return_v;
                }


                string
                f_10038_94705_94739()
                {
                    var return_v = CSharpResources.SyntaxTreeNotFound;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 94705, 94739);
                    return return_v;
                }


                System.ArgumentException
                f_10038_94683_94760(string
                message, string
                paramName)
                {
                    var return_v = new System.ArgumentException(message, paramName);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 94683, 94760);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SemanticModelProvider?
                f_10038_94838_94859()
                {
                    var return_v = SemanticModelProvider;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 94838, 94859);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SemanticModelProvider
                f_10038_94909_94930()
                {
                    var return_v = SemanticModelProvider;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 94909, 94930);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SemanticModel
                f_10038_94909_94986(Microsoft.CodeAnalysis.SemanticModelProvider
                this_param, Microsoft.CodeAnalysis.SyntaxTree
                tree, Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                compilation, bool
                ignoreAccessibility)
                {
                    var return_v = this_param.GetSemanticModel(tree, (Microsoft.CodeAnalysis.Compilation)compilation, ignoreAccessibility);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 94909, 94986);
                    return return_v;
                }


                int
                f_10038_95005_95032(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 95005, 95032);
                    return 0;
                }


                Microsoft.CodeAnalysis.SemanticModel
                f_10038_95080_95132(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param, Microsoft.CodeAnalysis.SyntaxTree
                syntaxTree, bool
                ignoreAccessibility)
                {
                    var return_v = this_param.CreateSemanticModel(syntaxTree, ignoreAccessibility);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 95080, 95132);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 94308, 95144);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 94308, 95144);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        internal override SemanticModel CreateSemanticModel(SyntaxTree syntaxTree, bool ignoreAccessibility)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 95270, 95339);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 95273, 95339);
                return f_10038_95273_95339(this, syntaxTree, ignoreAccessibility); DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 95270, 95339);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 95270, 95339);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 95270, 95339);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private WeakReference<BinderFactory>[]? _binderFactories;

        private WeakReference<BinderFactory>[]? _ignoreAccessibilityBinderFactories;

        internal BinderFactory GetBinderFactory(SyntaxTree syntaxTree, bool ignoreAccessibility = false)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 96125, 96610);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 96246, 96497) || true) && (ignoreAccessibility && (DynAbs.Tracing.TraceSender.Expression_True(10038, 96250, 96344) && f_10038_96273_96334(this) is object))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 96246, 96497);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 96378, 96482);

                    return f_10038_96385_96481(this, syntaxTree, ignoreAccessibility: true, ref _ignoreAccessibilityBinderFactories);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 96246, 96497);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 96513, 96599);

                return f_10038_96520_96598(this, syntaxTree, ignoreAccessibility: false, ref _binderFactories);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 96125, 96610);

                Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedSimpleProgramEntryPointSymbol?
                f_10038_96273_96334(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                compilation)
                {
                    var return_v = SimpleProgramNamedTypeSymbol.GetSimpleProgramEntryPoint(compilation);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 96273, 96334);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BinderFactory
                f_10038_96385_96481(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param, Microsoft.CodeAnalysis.SyntaxTree
                syntaxTree, bool
                ignoreAccessibility, ref System.WeakReference<Microsoft.CodeAnalysis.CSharp.BinderFactory>[]?
                cachedBinderFactories)
                {
                    var return_v = this_param.GetBinderFactory(syntaxTree, ignoreAccessibility: ignoreAccessibility, ref cachedBinderFactories);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 96385, 96481);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BinderFactory
                f_10038_96520_96598(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param, Microsoft.CodeAnalysis.SyntaxTree
                syntaxTree, bool
                ignoreAccessibility, ref System.WeakReference<Microsoft.CodeAnalysis.CSharp.BinderFactory>[]?
                cachedBinderFactories)
                {
                    var return_v = this_param.GetBinderFactory(syntaxTree, ignoreAccessibility: ignoreAccessibility, ref cachedBinderFactories);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 96520, 96598);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 96125, 96610);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 96125, 96610);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private BinderFactory GetBinderFactory(SyntaxTree syntaxTree, bool ignoreAccessibility, ref WeakReference<BinderFactory>[]? cachedBinderFactories)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 96622, 97822);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 96793, 96971);

                f_10038_96793_96970(f_10038_96806_96969(ref cachedBinderFactories, ref (DynAbs.Tracing.TraceSender.Conditional_F1(10038, 96884, 96903) || ((ignoreAccessibility && DynAbs.Tracing.TraceSender.Conditional_F2(10038, 96906, 96945)) || DynAbs.Tracing.TraceSender.Conditional_F3(10038, 96948, 96968))) ? ref _ignoreAccessibilityBinderFactories : ref _binderFactories));
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 96987, 97034);

                var
                treeNum = f_10038_97001_97033(this, syntaxTree)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 97048, 97120);

                WeakReference<BinderFactory>[]?
                binderFactories = cachedBinderFactories
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 97134, 97419) || true) && (binderFactories == null)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 97134, 97419);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 97195, 97271);

                    binderFactories = new WeakReference<BinderFactory>[this.SyntaxTrees.Length];
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 97289, 97404);

                    binderFactories = f_10038_97307_97384(ref cachedBinderFactories, binderFactories, null) ?? (DynAbs.Tracing.TraceSender.Expression_Null<System.WeakReference<Microsoft.CodeAnalysis.CSharp.BinderFactory>[]?>(10038, 97307, 97403) ?? binderFactories);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 97134, 97419);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 97435, 97466);

                BinderFactory?
                previousFactory
                = default(BinderFactory?);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 97480, 97533);

                var
                previousWeakReference = binderFactories[treeNum]
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 97547, 97711) || true) && (previousWeakReference != null && (DynAbs.Tracing.TraceSender.Expression_True(10038, 97551, 97639) && f_10038_97584_97639(previousWeakReference, out previousFactory)))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 97547, 97711);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 97673, 97696);

                    return previousFactory;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 97547, 97711);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 97727, 97811);

                return f_10038_97734_97810(this, syntaxTree, ignoreAccessibility, ref binderFactories[treeNum]);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 96622, 97822);

                bool
                f_10038_96806_96969(ref System.WeakReference<Microsoft.CodeAnalysis.CSharp.BinderFactory>[]?
                left, ref System.WeakReference<Microsoft.CodeAnalysis.CSharp.BinderFactory>[]?
                right)
                {
                    var return_v = System.Runtime.CompilerServices.Unsafe.AreSame(ref left, ref right);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 96806, 96969);
                    return return_v;
                }


                int
                f_10038_96793_96970(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 96793, 96970);
                    return 0;
                }


                int
                f_10038_97001_97033(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param, Microsoft.CodeAnalysis.SyntaxTree
                tree)
                {
                    var return_v = this_param.GetSyntaxTreeOrdinal(tree);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 97001, 97033);
                    return return_v;
                }


                System.WeakReference<Microsoft.CodeAnalysis.CSharp.BinderFactory>[]?
                f_10038_97307_97384(ref System.WeakReference<Microsoft.CodeAnalysis.CSharp.BinderFactory>[]?
                location1, System.WeakReference<Microsoft.CodeAnalysis.CSharp.BinderFactory>[]
                value, System.WeakReference<Microsoft.CodeAnalysis.CSharp.BinderFactory>[]?
                comparand)
                {
                    var return_v = Interlocked.CompareExchange(ref location1, value, comparand);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 97307, 97384);
                    return return_v;
                }


                bool
                f_10038_97584_97639(System.WeakReference<Microsoft.CodeAnalysis.CSharp.BinderFactory>
                this_param, out Microsoft.CodeAnalysis.CSharp.BinderFactory?
                target)
                {
                    var return_v = this_param.TryGetTarget(out target);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 97584, 97639);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BinderFactory
                f_10038_97734_97810(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param, Microsoft.CodeAnalysis.SyntaxTree
                syntaxTree, bool
                ignoreAccessibility, ref System.WeakReference<Microsoft.CodeAnalysis.CSharp.BinderFactory>
                slot)
                {
                    var return_v = this_param.AddNewFactory(syntaxTree, ignoreAccessibility, ref slot);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 97734, 97810);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 96622, 97822);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 96622, 97822);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private BinderFactory AddNewFactory(SyntaxTree syntaxTree, bool ignoreAccessibility, [NotNull] ref WeakReference<BinderFactory>? slot)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 97834, 98796);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 97993, 98067);

                var
                newFactory = f_10038_98010_98066(this, syntaxTree, ignoreAccessibility)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 98081, 98149);

                var
                newWeakReference = f_10038_98104_98148(newFactory)
                ;
                try
                {
                    while ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 98165, 98785) || true) && (true)
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 98165, 98785);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 98210, 98241);

                        BinderFactory?
                        previousFactory
                        = default(BinderFactory?);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 98259, 98318);

                        WeakReference<BinderFactory>?
                        previousWeakReference = slot
                        ;

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 98336, 98563) || true) && (previousWeakReference != null && (DynAbs.Tracing.TraceSender.Expression_True(10038, 98340, 98428) && f_10038_98373_98428(previousWeakReference, out previousFactory)))
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 98336, 98563);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 98470, 98499);

                            f_10038_98470_98498(slot is object);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 98521, 98544);

                            return previousFactory;
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 98336, 98563);
                        }

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 98583, 98770) || true) && (f_10038_98587_98666(ref slot!, newWeakReference, previousWeakReference) == previousWeakReference)
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 98583, 98770);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 98733, 98751);

                            return newFactory;
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 98583, 98770);
                        }
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 98165, 98785);
                    }
                }
                catch (System.Exception)
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoopByException(10038, 98165, 98785);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoop(10038, 98165, 98785);
                }
                DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 97834, 98796);

                Microsoft.CodeAnalysis.CSharp.BinderFactory
                f_10038_98010_98066(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                compilation, Microsoft.CodeAnalysis.SyntaxTree
                syntaxTree, bool
                ignoreAccessibility)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.BinderFactory(compilation, syntaxTree, ignoreAccessibility);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 98010, 98066);
                    return return_v;
                }


                System.WeakReference<Microsoft.CodeAnalysis.CSharp.BinderFactory>
                f_10038_98104_98148(Microsoft.CodeAnalysis.CSharp.BinderFactory
                target)
                {
                    var return_v = new System.WeakReference<Microsoft.CodeAnalysis.CSharp.BinderFactory>(target);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 98104, 98148);
                    return return_v;
                }


                bool
                f_10038_98373_98428(System.WeakReference<Microsoft.CodeAnalysis.CSharp.BinderFactory>
                this_param, out Microsoft.CodeAnalysis.CSharp.BinderFactory?
                target)
                {
                    var return_v = this_param.TryGetTarget(out target);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 98373, 98428);
                    return return_v;
                }


                int
                f_10038_98470_98498(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 98470, 98498);
                    return 0;
                }


                System.WeakReference<Microsoft.CodeAnalysis.CSharp.BinderFactory>?
                f_10038_98587_98666(ref System.WeakReference<Microsoft.CodeAnalysis.CSharp.BinderFactory>
                location1, System.WeakReference<Microsoft.CodeAnalysis.CSharp.BinderFactory>
                value, System.WeakReference<Microsoft.CodeAnalysis.CSharp.BinderFactory>?
                comparand)
                {
                    var return_v = Interlocked.CompareExchange(ref location1, value, comparand);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 98587, 98666);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 97834, 98796);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 97834, 98796);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        internal Binder GetBinder(CSharpSyntaxNode syntax)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 98808, 98955);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 98883, 98944);

                return f_10038_98890_98943(f_10038_98890_98925(this, f_10038_98907_98924(syntax)), syntax);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 98808, 98955);

                Microsoft.CodeAnalysis.SyntaxTree
                f_10038_98907_98924(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode
                this_param)
                {
                    var return_v = this_param.SyntaxTree;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 98907, 98924);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BinderFactory
                f_10038_98890_98925(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param, Microsoft.CodeAnalysis.SyntaxTree
                syntaxTree)
                {
                    var return_v = this_param.GetBinderFactory(syntaxTree);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 98890, 98925);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Binder
                f_10038_98890_98943(Microsoft.CodeAnalysis.CSharp.BinderFactory
                this_param, Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode
                node)
                {
                    var return_v = this_param.GetBinder((Microsoft.CodeAnalysis.SyntaxNode)node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 98890, 98943);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 98808, 98955);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 98808, 98955);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        internal Imports GetImports(SingleNamespaceDeclaration declaration)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 99079, 99359);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 99171, 99348);

                return f_10038_99178_99347(f_10038_99178_99310(f_10038_99178_99234(this, f_10038_99195_99233(f_10038_99195_99222(declaration))), f_10038_99270_99309(f_10038_99270_99297(declaration))), basesBeingResolved: null);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 99079, 99359);

                Microsoft.CodeAnalysis.SyntaxReference
                f_10038_99195_99222(Microsoft.CodeAnalysis.CSharp.SingleNamespaceDeclaration
                this_param)
                {
                    var return_v = this_param.SyntaxReference;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 99195, 99222);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SyntaxTree
                f_10038_99195_99233(Microsoft.CodeAnalysis.SyntaxReference
                this_param)
                {
                    var return_v = this_param.SyntaxTree;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 99195, 99233);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BinderFactory
                f_10038_99178_99234(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param, Microsoft.CodeAnalysis.SyntaxTree
                syntaxTree)
                {
                    var return_v = this_param.GetBinderFactory(syntaxTree);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 99178, 99234);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SyntaxReference
                f_10038_99270_99297(Microsoft.CodeAnalysis.CSharp.SingleNamespaceDeclaration
                this_param)
                {
                    var return_v = this_param.SyntaxReference;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 99270, 99297);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SyntaxNode
                f_10038_99270_99309(Microsoft.CodeAnalysis.SyntaxReference
                this_param)
                {
                    var return_v = this_param.GetSyntax();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 99270, 99309);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Binder
                f_10038_99178_99310(Microsoft.CodeAnalysis.CSharp.BinderFactory
                this_param, Microsoft.CodeAnalysis.SyntaxNode
                unit)
                {
                    var return_v = this_param.GetImportsBinder((Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode)unit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 99178, 99310);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Imports
                f_10038_99178_99347(Microsoft.CodeAnalysis.CSharp.Binder
                this_param, Roslyn.Utilities.ConsList<Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol>?
                basesBeingResolved)
                {
                    var return_v = this_param.GetImports(basesBeingResolved: basesBeingResolved);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 99178, 99347);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 99079, 99359);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 99079, 99359);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private AliasSymbol CreateGlobalNamespaceAlias()
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 99371, 99599);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 99444, 99588);

                return f_10038_99451_99587(f_10038_99490_99510(this), f_10038_99512_99586(f_10038_99534_99554(this), f_10038_99556_99585(this)));
                DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 99371, 99599);

                Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceSymbol
                f_10038_99490_99510(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param)
                {
                    var return_v = this_param.GlobalNamespace;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 99490, 99510);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceSymbol
                f_10038_99534_99554(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param)
                {
                    var return_v = this_param.GlobalNamespace;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 99534, 99554);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BuckStopsHereBinder
                f_10038_99556_99585(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                compilation)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.BuckStopsHereBinder(compilation);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 99556, 99585);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.InContainerBinder
                f_10038_99512_99586(Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceSymbol
                container, Microsoft.CodeAnalysis.CSharp.BuckStopsHereBinder
                next)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.InContainerBinder((Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceOrTypeSymbol)container, (Microsoft.CodeAnalysis.CSharp.Binder)next);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 99512, 99586);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.AliasSymbol
                f_10038_99451_99587(Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceSymbol
                globalNamespace, Microsoft.CodeAnalysis.CSharp.InContainerBinder
                globalNamespaceBinder)
                {
                    var return_v = AliasSymbol.CreateGlobalNamespaceAlias(globalNamespace, (Microsoft.CodeAnalysis.CSharp.Binder)globalNamespaceBinder);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 99451, 99587);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 99371, 99599);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 99371, 99599);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private void CompleteTree(SyntaxTree tree)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 99611, 100475);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 99678, 99827) || true) && (_lazyCompilationUnitCompletedTrees == null)
                )
                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 99678, 99827);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 99726, 99827);

                    f_10038_99726_99826(ref _lazyCompilationUnitCompletedTrees, f_10038_99794_99819(), null);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 99678, 99827);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 99847, 99881);
                lock (_lazyCompilationUnitCompletedTrees)
                {

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 99915, 100449) || true) && (f_10038_99919_99963(_lazyCompilationUnitCompletedTrees, tree))
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 99915, 100449);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 100068, 100138);

                        f_10038_100079_100137(DynAbs.Tracing.TraceSender.TraceConditionalAccessExpression(f_10038_100068_100078(), 10038, 100068, 100137), f_10038_100091_100136(this, tree));

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 100162, 100430) || true) && (f_10038_100166_100206(_lazyCompilationUnitCompletedTrees) == this.SyntaxTrees.Length)
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 100162, 100430);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 100368, 100407);

                            f_10038_100368_100406(this);
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 100162, 100430);
                        }
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 99915, 100449);
                    }
                }
                DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 99611, 100475);

                System.Collections.Generic.HashSet<Microsoft.CodeAnalysis.SyntaxTree>
                f_10038_99794_99819()
                {
                    var return_v = new System.Collections.Generic.HashSet<Microsoft.CodeAnalysis.SyntaxTree>();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 99794, 99819);
                    return return_v;
                }


                System.Collections.Generic.HashSet<Microsoft.CodeAnalysis.SyntaxTree>?
                f_10038_99726_99826(ref System.Collections.Generic.HashSet<Microsoft.CodeAnalysis.SyntaxTree>?
                location1, System.Collections.Generic.HashSet<Microsoft.CodeAnalysis.SyntaxTree>
                value, System.Collections.Generic.HashSet<Microsoft.CodeAnalysis.SyntaxTree>?
                comparand)
                {
                    var return_v = Interlocked.CompareExchange(ref location1, value, comparand);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 99726, 99826);
                    return return_v;
                }


                bool
                f_10038_99919_99963(System.Collections.Generic.HashSet<Microsoft.CodeAnalysis.SyntaxTree>
                this_param, Microsoft.CodeAnalysis.SyntaxTree
                item)
                {
                    var return_v = this_param.Add(item);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 99919, 99963);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Diagnostics.AsyncQueue<Microsoft.CodeAnalysis.Diagnostics.CompilationEvent>?
                f_10038_100068_100078()
                {
                    var return_v = EventQueue;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 100068, 100078);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Diagnostics.CompilationUnitCompletedEvent
                f_10038_100091_100136(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                compilation, Microsoft.CodeAnalysis.SyntaxTree
                compilationUnit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Diagnostics.CompilationUnitCompletedEvent((Microsoft.CodeAnalysis.Compilation)compilation, compilationUnit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 100091, 100136);
                    return return_v;
                }


                bool?
                f_10038_100079_100137(Microsoft.CodeAnalysis.Diagnostics.AsyncQueue<Microsoft.CodeAnalysis.Diagnostics.CompilationEvent>
                this_param, Microsoft.CodeAnalysis.Diagnostics.CompilationUnitCompletedEvent
                value)
                {
                    var return_v = this_param?.TryEnqueue((Microsoft.CodeAnalysis.Diagnostics.CompilationEvent)value);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 100079, 100137);
                    return return_v;
                }


                int
                f_10038_100166_100206(System.Collections.Generic.HashSet<Microsoft.CodeAnalysis.SyntaxTree>
                this_param)
                {
                    var return_v = this_param.Count;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 100166, 100206);
                    return return_v;
                }


                int
                f_10038_100368_100406(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param)
                {
                    this_param.CompleteCompilationEventQueue_NoLock();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 100368, 100406);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 99611, 100475);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 99611, 100475);
            }
        }

        internal override void ReportUnusedImports(SyntaxTree? filterTree, DiagnosticBag diagnostics, CancellationToken cancellationToken)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 100487, 101817);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 100665, 101764) || true) && (_lazyImportInfos != null && (DynAbs.Tracing.TraceSender.Expression_True(10038, 100669, 100732) && filterTree != null) && (DynAbs.Tracing.TraceSender.Expression_True(10038, 100669, 100815) && f_10038_100753_100789(f_10038_100753_100771(filterTree)) != DocumentationMode.None))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 100665, 101764);
                    try
                    {
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 100849, 101749);
                        foreach (ImportInfo info in f_10038_100877_100893_I(_lazyImportInfos))
                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 100849, 101749);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 100935, 100984);

                            cancellationToken.ThrowIfCancellationRequested();
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 101008, 101040);

                            SyntaxTree
                            infoTree = info.Tree
                            ;

                            if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 101062, 101730) || true) && ((filterTree == null || (DynAbs.Tracing.TraceSender.Expression_False(10038, 101067, 101111) || filterTree == infoTree)) && (DynAbs.Tracing.TraceSender.Expression_True(10038, 101066, 101176) && f_10038_101116_101150(f_10038_101116_101132(infoTree)) != DocumentationMode.None))
                            )

                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 101062, 101730);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 101226, 101256);

                                TextSpan
                                infoSpan = info.Span
                                ;

                                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 101282, 101707) || true) && (!f_10038_101287_101339(this, infoTree, infoSpan.Start))
                                )

                                {
                                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 101282, 101707);
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 101397, 101596);

                                    ErrorCode
                                    code = (DynAbs.Tracing.TraceSender.Conditional_F1(10038, 101414, 101458) || ((info.Kind == SyntaxKind.ExternAliasDirective
                                    && DynAbs.Tracing.TraceSender.Conditional_F2(10038, 101494, 101525)) || DynAbs.Tracing.TraceSender.Conditional_F3(10038, 101561, 101595))) ? ErrorCode.HDN_UnusedExternAlias
                                    : ErrorCode.HDN_UnusedUsingDirective
                                    ;
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 101626, 101680);

                                    f_10038_101626_101679(diagnostics, code, f_10038_101648_101678(infoTree, infoSpan));
                                    DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 101282, 101707);
                                }
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 101062, 101730);
                            }
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 100849, 101749);
                        }
                    }
                    catch (System.Exception)
                    {
                        DynAbs.Tracing.TraceSender.TraceExitLoopByException(10038, 1, 901);
                        throw;
                    }
                    finally
                    {
                        DynAbs.Tracing.TraceSender.TraceExitLoop(10038, 1, 901);
                    }
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 100665, 101764);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 101780, 101806);

                f_10038_101780_101805(this, filterTree);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 100487, 101817);

                Microsoft.CodeAnalysis.ParseOptions
                f_10038_100753_100771(Microsoft.CodeAnalysis.SyntaxTree
                this_param)
                {
                    var return_v = this_param.Options;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 100753, 100771);
                    return return_v;
                }


                Microsoft.CodeAnalysis.DocumentationMode
                f_10038_100753_100789(Microsoft.CodeAnalysis.ParseOptions
                this_param)
                {
                    var return_v = this_param.DocumentationMode;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 100753, 100789);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ParseOptions
                f_10038_101116_101132(Microsoft.CodeAnalysis.SyntaxTree
                this_param)
                {
                    var return_v = this_param.Options;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 101116, 101132);
                    return return_v;
                }


                Microsoft.CodeAnalysis.DocumentationMode
                f_10038_101116_101150(Microsoft.CodeAnalysis.ParseOptions
                this_param)
                {
                    var return_v = this_param.DocumentationMode;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 101116, 101150);
                    return return_v;
                }


                bool
                f_10038_101287_101339(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param, Microsoft.CodeAnalysis.SyntaxTree
                syntaxTree, int
                position)
                {
                    var return_v = this_param.IsImportDirectiveUsed(syntaxTree, position);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 101287, 101339);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Location
                f_10038_101648_101678(Microsoft.CodeAnalysis.SyntaxTree
                this_param, Microsoft.CodeAnalysis.Text.TextSpan
                span)
                {
                    var return_v = this_param.GetLocation(span);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 101648, 101678);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo
                f_10038_101626_101679(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, Microsoft.CodeAnalysis.Location
                location)
                {
                    var return_v = diagnostics.Add(code, location);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 101626, 101679);
                    return return_v;
                }


                Roslyn.Utilities.ConcurrentSet<Microsoft.CodeAnalysis.CSharp.CSharpCompilation.ImportInfo>
                f_10038_100877_100893_I(Roslyn.Utilities.ConcurrentSet<Microsoft.CodeAnalysis.CSharp.CSharpCompilation.ImportInfo>
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 100877, 100893);
                    return return_v;
                }


                int
                f_10038_101780_101805(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param, Microsoft.CodeAnalysis.SyntaxTree?
                filterTree)
                {
                    this_param.CompleteTrees(filterTree);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 101780, 101805);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 100487, 101817);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 100487, 101817);
            }
        }

        internal override void CompleteTrees(SyntaxTree? filterTree)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 101829, 102580);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 102179, 102569) || true) && (f_10038_102183_102193() != null)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 102179, 102569);

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 102235, 102554) || true) && (filterTree != null)
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 102235, 102554);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 102299, 102324);

                        f_10038_102299_102323(this, filterTree);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 102235, 102554);
                    }

                    else

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 102235, 102554);
                        try
                        {
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 102406, 102535);
                            foreach (var tree in f_10038_102427_102443_I(f_10038_102427_102443(this)))
                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 102406, 102535);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 102493, 102512);

                                f_10038_102493_102511(this, tree);
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 102406, 102535);
                            }
                        }
                        catch (System.Exception)
                        {
                            DynAbs.Tracing.TraceSender.TraceExitLoopByException(10038, 1, 130);
                            throw;
                        }
                        finally
                        {
                            DynAbs.Tracing.TraceSender.TraceExitLoop(10038, 1, 130);
                        }
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 102235, 102554);
                    }
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 102179, 102569);
                }
                DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 101829, 102580);

                Microsoft.CodeAnalysis.Diagnostics.AsyncQueue<Microsoft.CodeAnalysis.Diagnostics.CompilationEvent>?
                f_10038_102183_102193()
                {
                    var return_v = EventQueue;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 102183, 102193);
                    return return_v;
                }


                int
                f_10038_102299_102323(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param, Microsoft.CodeAnalysis.SyntaxTree
                tree)
                {
                    this_param.CompleteTree(tree);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 102299, 102323);
                    return 0;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.SyntaxTree>
                f_10038_102427_102443(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param)
                {
                    var return_v = this_param.SyntaxTrees;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 102427, 102443);
                    return return_v;
                }


                int
                f_10038_102493_102511(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param, Microsoft.CodeAnalysis.SyntaxTree
                tree)
                {
                    this_param.CompleteTree(tree);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 102493, 102511);
                    return 0;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.SyntaxTree>
                f_10038_102427_102443_I(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.SyntaxTree>
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 102427, 102443);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 101829, 102580);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 101829, 102580);
            }
        }

        internal void RecordImport(UsingDirectiveSyntax syntax)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 102592, 102712);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 102672, 102701);

                f_10038_102672_102700(this, syntax);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 102592, 102712);

                int
                f_10038_102672_102700(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.UsingDirectiveSyntax
                syntax)
                {
                    this_param.RecordImportInternal((Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode)syntax);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 102672, 102700);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 102592, 102712);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 102592, 102712);
            }
        }

        internal void RecordImport(ExternAliasDirectiveSyntax syntax)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 102724, 102850);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 102810, 102839);

                f_10038_102810_102838(this, syntax);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 102724, 102850);

                int
                f_10038_102810_102838(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.ExternAliasDirectiveSyntax
                syntax)
                {
                    this_param.RecordImportInternal((Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode)syntax);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 102810, 102838);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 102724, 102850);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 102724, 102850);
            }
        }

        private void RecordImportInternal(CSharpSyntaxNode syntax)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 102862, 103199);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 103046, 103188);

                f_10038_103046_103187(f_10038_103046_103101(ref _lazyImportInfos)!, f_10038_103125_103186(f_10038_103140_103157(syntax), f_10038_103159_103172(syntax), f_10038_103174_103185(syntax)));
                DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 102862, 103199);

                Roslyn.Utilities.ConcurrentSet<Microsoft.CodeAnalysis.CSharp.CSharpCompilation.ImportInfo>
                f_10038_103046_103101(ref Roslyn.Utilities.ConcurrentSet<Microsoft.CodeAnalysis.CSharp.CSharpCompilation.ImportInfo>?
                target)
                {
                    var return_v = LazyInitializer.EnsureInitialized(ref target);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 103046, 103101);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SyntaxTree
                f_10038_103140_103157(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode
                this_param)
                {
                    var return_v = this_param.SyntaxTree;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 103140, 103157);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.SyntaxKind
                f_10038_103159_103172(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode
                this_param)
                {
                    var return_v = this_param.Kind();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 103159, 103172);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Text.TextSpan
                f_10038_103174_103185(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode
                this_param)
                {
                    var return_v = this_param.Span;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 103174, 103185);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSharpCompilation.ImportInfo
                f_10038_103125_103186(Microsoft.CodeAnalysis.SyntaxTree
                tree, Microsoft.CodeAnalysis.CSharp.SyntaxKind
                kind, Microsoft.CodeAnalysis.Text.TextSpan
                span)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.CSharpCompilation.ImportInfo(tree, kind, span);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 103125, 103186);
                    return return_v;
                }


                bool
                f_10038_103046_103187(Roslyn.Utilities.ConcurrentSet<Microsoft.CodeAnalysis.CSharp.CSharpCompilation.ImportInfo>
                this_param, Microsoft.CodeAnalysis.CSharp.CSharpCompilation.ImportInfo
                value)
                {
                    var return_v = this_param.Add(value);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 103046, 103187);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 102862, 103199);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 102862, 103199);
            }
        }

        private struct ImportInfo : IEquatable<ImportInfo>
        {

            public readonly SyntaxTree Tree;

            public readonly SyntaxKind Kind;

            public readonly TextSpan Span;

            public ImportInfo(SyntaxTree tree, SyntaxKind kind, TextSpan span)
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterConstructor(10038, 103424, 103625);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 103523, 103540);

                    this.Tree = tree;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 103558, 103575);

                    this.Kind = kind;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 103593, 103610);

                    this.Span = span;
                    DynAbs.Tracing.TraceSender.TraceExitConstructor(10038, 103424, 103625);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 103424, 103625);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 103424, 103625);
                }
            }

            public override bool Equals(object? obj)
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 103641, 103783);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 103714, 103768);

                    return (obj is ImportInfo) && (DynAbs.Tracing.TraceSender.Expression_True(10038, 103721, 103767) && Equals(obj));
                    DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 103641, 103783);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 103641, 103783);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 103641, 103783);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }

            public bool Equals(ImportInfo other)
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 103799, 104031);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 103868, 104016);

                    return
                                        other.Kind == this.Kind && (DynAbs.Tracing.TraceSender.Expression_True(10038, 103896, 103967) && other.Tree == this.Tree) && (DynAbs.Tracing.TraceSender.Expression_True(10038, 103896, 104015) && other.Span == this.Span);
                    DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 103799, 104031);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 103799, 104031);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 103799, 104031);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }

            public override int GetHashCode()
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 104047, 104166);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 104113, 104151);

                    return f_10038_104120_104150(Tree, Span.Start);
                    DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 104047, 104166);

                    int
                    f_10038_104120_104150(Microsoft.CodeAnalysis.SyntaxTree
                    newKeyPart, int
                    currentKey)
                    {
                        var return_v = Hash.Combine(newKeyPart, currentKey);
                        DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 104120, 104150);
                        return return_v;
                    }

                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 104047, 104166);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 104047, 104166);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
            static ImportInfo()
            {
                DynAbs.Tracing.TraceSender.TraceEnterStaticConstructor(10038, 103211, 104177);
                DynAbs.Tracing.TraceSender.TraceExitStaticConstructor(10038, 103211, 104177);

                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 103211, 104177);
            }
        }

        #region Diagnostics

        internal override CommonMessageProvider MessageProvider
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 104322, 104376);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 104328, 104374);

                    return _syntaxAndDeclarations.MessageProvider;
                    DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 104322, 104376);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 104242, 104387);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 104242, 104387);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        internal DiagnosticBag DeclarationDiagnostics
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 104596, 105341);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 104960, 105013);

                    f_10038_104960_105012(!_declarationDiagnosticsFrozen || (DynAbs.Tracing.TraceSender.Expression_False(10038, 104973, 105011) || true));

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 105031, 105271) || true) && (_lazyDeclarationDiagnostics == null)
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 105031, 105271);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 105112, 105150);

                        var
                        diagnostics = f_10038_105130_105149()
                        ;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 105172, 105252);

                        f_10038_105172_105251(ref _lazyDeclarationDiagnostics, diagnostics, null);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 105031, 105271);
                    }
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 105291, 105326);

                    return _lazyDeclarationDiagnostics;
                    DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 104596, 105341);

                    int
                    f_10038_104960_105012(bool
                    condition)
                    {
                        Debug.Assert(condition);
                        DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 104960, 105012);
                        return 0;
                    }


                    Microsoft.CodeAnalysis.DiagnosticBag
                    f_10038_105130_105149()
                    {
                        var return_v = new Microsoft.CodeAnalysis.DiagnosticBag();
                        DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 105130, 105149);
                        return return_v;
                    }


                    Microsoft.CodeAnalysis.DiagnosticBag?
                    f_10038_105172_105251(ref Microsoft.CodeAnalysis.DiagnosticBag?
                    location1, Microsoft.CodeAnalysis.DiagnosticBag
                    value, Microsoft.CodeAnalysis.DiagnosticBag?
                    comparand)
                    {
                        var return_v = Interlocked.CompareExchange(ref location1, value, comparand);
                        DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 105172, 105251);
                        return return_v;
                    }

                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 104526, 105352);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 104526, 105352);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        private DiagnosticBag? _lazyDeclarationDiagnostics;
        
        private bool _declarationDiagnosticsFrozen;

        internal DiagnosticBag AdditionalCodegenWarnings
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 105697, 105782);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 105733, 105767);

                    return _additionalCodegenWarnings;
                    DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 105697, 105782);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 105624, 105793);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 105624, 105793);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        // LAFHIS
        private readonly DiagnosticBag _additionalCodegenWarnings; // = new DiagnosticBag();

        internal DeclarationTable Declarations
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 105960, 106073);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 105996, 106058);

                    return f_10038_106003_106040(_syntaxAndDeclarations).DeclarationTable;
                    DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 105960, 106073);

                    Microsoft.CodeAnalysis.CSharp.SyntaxAndDeclarationManager.State
                    f_10038_106003_106040(Microsoft.CodeAnalysis.CSharp.SyntaxAndDeclarationManager
                    this_param)
                    {
                        var return_v = this_param.GetLazyState();
                        DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 106003, 106040);
                        return return_v;
                    }

                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 105897, 106084);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 105897, 106084);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        internal MergedNamespaceDeclaration MergedRootDeclaration
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 106178, 106269);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 106214, 106254);

                    return f_10038_106221_106253(f_10038_106221_106233(), this);
                    DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 106178, 106269);

                    Microsoft.CodeAnalysis.CSharp.DeclarationTable
                    f_10038_106221_106233()
                    {
                        var return_v = Declarations;
                        DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 106221, 106233);
                        return return_v;
                    }


                    Microsoft.CodeAnalysis.CSharp.MergedNamespaceDeclaration
                    f_10038_106221_106253(Microsoft.CodeAnalysis.CSharp.DeclarationTable
                    this_param, Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                    compilation)
                    {
                        var return_v = this_param.GetMergedRoot(compilation);
                        DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 106221, 106253);
                        return return_v;
                    }

                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 106096, 106280);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 106096, 106280);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override ImmutableArray<Diagnostic> GetParseDiagnostics(CancellationToken cancellationToken = default)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 106523, 106740);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 106657, 106729);

                return f_10038_106664_106728(this, CompilationStage.Parse, false, cancellationToken);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 106523, 106740);

                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Diagnostic>
                f_10038_106664_106728(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param, Microsoft.CodeAnalysis.CompilationStage
                stage, bool
                includeEarlierStages, System.Threading.CancellationToken
                cancellationToken)
                {
                    var return_v = this_param.GetDiagnostics(stage, includeEarlierStages, cancellationToken);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 106664, 106728);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 106523, 106740);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 106523, 106740);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override ImmutableArray<Diagnostic> GetDeclarationDiagnostics(CancellationToken cancellationToken = default)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 106960, 107185);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 107100, 107174);

                return f_10038_107107_107173(this, CompilationStage.Declare, false, cancellationToken);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 106960, 107185);

                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Diagnostic>
                f_10038_107107_107173(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param, Microsoft.CodeAnalysis.CompilationStage
                stage, bool
                includeEarlierStages, System.Threading.CancellationToken
                cancellationToken)
                {
                    var return_v = this_param.GetDiagnostics(stage, includeEarlierStages, cancellationToken);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 107107, 107173);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 106960, 107185);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 106960, 107185);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override ImmutableArray<Diagnostic> GetMethodBodyDiagnostics(CancellationToken cancellationToken = default)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 107348, 107572);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 107487, 107561);

                return f_10038_107494_107560(this, CompilationStage.Compile, false, cancellationToken);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 107348, 107572);

                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Diagnostic>
                f_10038_107494_107560(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param, Microsoft.CodeAnalysis.CompilationStage
                stage, bool
                includeEarlierStages, System.Threading.CancellationToken
                cancellationToken)
                {
                    var return_v = this_param.GetDiagnostics(stage, includeEarlierStages, cancellationToken);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 107494, 107560);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 107348, 107572);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 107348, 107572);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override ImmutableArray<Diagnostic> GetDiagnostics(CancellationToken cancellationToken = default)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 107820, 108032);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 107949, 108021);

                return f_10038_107956_108020(this, DefaultDiagnosticsStage, true, cancellationToken);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 107820, 108032);

                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Diagnostic>
                f_10038_107956_108020(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param, Microsoft.CodeAnalysis.CompilationStage
                stage, bool
                includeEarlierStages, System.Threading.CancellationToken
                cancellationToken)
                {
                    var return_v = this_param.GetDiagnostics(stage, includeEarlierStages, cancellationToken);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 107956, 108020);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 107820, 108032);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 107820, 108032);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        internal ImmutableArray<Diagnostic> GetDiagnostics(CompilationStage stage, bool includeEarlierStages, CancellationToken cancellationToken)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 108044, 108407);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 108207, 108253);

                var
                diagnostics = f_10038_108225_108252()
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 108267, 108343);

                f_10038_108267_108342(this, stage, includeEarlierStages, diagnostics, cancellationToken);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 108357, 108396);

                return f_10038_108364_108395(diagnostics);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 108044, 108407);

                Microsoft.CodeAnalysis.DiagnosticBag
                f_10038_108225_108252()
                {
                    var return_v = DiagnosticBag.GetInstance();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 108225, 108252);
                    return return_v;
                }


                int
                f_10038_108267_108342(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param, Microsoft.CodeAnalysis.CompilationStage
                stage, bool
                includeEarlierStages, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, System.Threading.CancellationToken
                cancellationToken)
                {
                    this_param.GetDiagnostics(stage, includeEarlierStages, diagnostics, cancellationToken);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 108267, 108342);
                    return 0;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Diagnostic>
                f_10038_108364_108395(Microsoft.CodeAnalysis.DiagnosticBag
                this_param)
                {
                    var return_v = this_param.ToReadOnlyAndFree();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 108364, 108395);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 108044, 108407);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 108044, 108407);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        internal override void GetDiagnostics(CompilationStage stage, bool includeEarlierStages, DiagnosticBag diagnostics, CancellationToken cancellationToken = default)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 108419, 112945);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 108606, 108659);

                DiagnosticBag?
                builder = f_10038_108631_108658()
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 108675, 110700) || true) && (stage == CompilationStage.Parse || (DynAbs.Tracing.TraceSender.Expression_False(10038, 108679, 108770) || (stage > CompilationStage.Parse && (DynAbs.Tracing.TraceSender.Expression_True(10038, 108715, 108769) && includeEarlierStages))))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 108675, 110700);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 108804, 108839);

                    var
                    syntaxTrees = f_10038_108822_108838(this)
                    ;

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 108857, 109989) || true) && (f_10038_108861_108889(f_10038_108861_108873(this)))
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 108857, 109989);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 108931, 109460);

                        f_10038_108931_109459(0, syntaxTrees.Length, f_10038_109049_109414(i =>
                        {
                            var syntaxTree = syntaxTrees[i];
                            AppendLoadDirectiveDiagnostics(builder, _syntaxAndDeclarations, syntaxTree);
                            builder.AddRange(syntaxTree.GetDiagnostics(cancellationToken));
                        }), cancellationToken);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 108857, 109989);
                    }

                    else

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 108857, 109989);
                        try
                        {
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 109542, 109970);
                            foreach (var syntaxTree in f_10038_109569_109580_I(syntaxTrees))
                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 109542, 109970);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 109630, 109679);

                                cancellationToken.ThrowIfCancellationRequested();
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 109705, 109781);

                                f_10038_109705_109780(builder, _syntaxAndDeclarations, syntaxTree);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 109809, 109858);

                                cancellationToken.ThrowIfCancellationRequested();
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 109884, 109947);

                                f_10038_109884_109946(builder, f_10038_109901_109945(syntaxTree, cancellationToken));
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 109542, 109970);
                            }
                        }
                        catch (System.Exception)
                        {
                            DynAbs.Tracing.TraceSender.TraceExitLoopByException(10038, 1, 429);
                            throw;
                        }
                        finally
                        {
                            DynAbs.Tracing.TraceSender.TraceExitLoop(10038, 1, 429);
                        }
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 108857, 109989);
                    }
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 110009, 110064);

                    var
                    parseOptionsReported = f_10038_110036_110063()
                    ;
                    try
                    {
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 110082, 110685);
                        foreach (var syntaxTree in f_10038_110109_110120_I(syntaxTrees))
                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 110082, 110685);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 110162, 110211);

                            cancellationToken.ThrowIfCancellationRequested();

                            if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 110233, 110666) || true) && (f_10038_110237_110280_M(!f_10038_110238_110256(syntaxTree).Errors.IsDefaultOrEmpty) && (DynAbs.Tracing.TraceSender.Expression_True(10038, 110237, 110328) && f_10038_110284_110328(parseOptionsReported, f_10038_110309_110327(syntaxTree))))
                            )

                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 110233, 110666);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 110378, 110443);

                                var
                                location = f_10038_110393_110442(syntaxTree, TextSpan.FromBounds(0, 0))
                                ;
                                try
                                {
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 110469, 110643);
                                    foreach (var error in f_10038_110491_110516_I(f_10038_110491_110516(f_10038_110491_110509(syntaxTree))))
                                    {
                                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 110469, 110643);
                                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 110574, 110616);

                                        f_10038_110574_110615(builder, f_10038_110586_110614(error, location));
                                        DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 110469, 110643);
                                    }
                                }
                                catch (System.Exception)
                                {
                                    DynAbs.Tracing.TraceSender.TraceExitLoopByException(10038, 1, 175);
                                    throw;
                                }
                                finally
                                {
                                    DynAbs.Tracing.TraceSender.TraceExitLoop(10038, 1, 175);
                                }
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 110233, 110666);
                            }
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 110082, 110685);
                        }
                    }
                    catch (System.Exception)
                    {
                        DynAbs.Tracing.TraceSender.TraceExitLoopByException(10038, 1, 604);
                        throw;
                    }
                    finally
                    {
                        DynAbs.Tracing.TraceSender.TraceExitLoop(10038, 1, 604);
                    }
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 108675, 110700);
                }

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 110716, 112230) || true) && (stage == CompilationStage.Declare || (DynAbs.Tracing.TraceSender.Expression_False(10038, 110720, 110813) || stage > CompilationStage.Declare && (DynAbs.Tracing.TraceSender.Expression_True(10038, 110757, 110813) && includeEarlierStages)))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 110716, 112230);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 110847, 110874);

                    f_10038_110847_110873(this, builder);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 110892, 110925);

                    f_10038_110892_110924(builder, f_10038_110909_110923(f_10038_110909_110916()));

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 110945, 111644) || true) && (f_10038_110949_110979(f_10038_110949_110956()) != NullableContextOptions.Disable && (DynAbs.Tracing.TraceSender.Expression_True(10038, 110949, 111096) && f_10038_111017_111032() < f_10038_111035_111096(MessageID.IDS_FeatureNullableReferenceTypes)) && (DynAbs.Tracing.TraceSender.Expression_True(10038, 110949, 111169) && _syntaxAndDeclarations.ExternalSyntaxTrees.Any()))
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 110945, 111644);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 111211, 111625);

                        f_10038_111211_111624(builder, f_10038_111223_111623(f_10038_111240_111607(ErrorCode.ERR_NullableOptionNotAvailable, nameof(Options.NullableContextOptions), f_10038_111393_111423(f_10038_111393_111400()), f_10038_111425_111458(f_10038_111425_111440()), f_10038_111510_111606(f_10038_111544_111605(MessageID.IDS_FeatureNullableReferenceTypes))), f_10038_111609_111622()));
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 110945, 111644);
                    }
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 111664, 111713);

                    cancellationToken.ThrowIfCancellationRequested();
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 111812, 111869);

                    f_10038_111812_111868(
                                    // the set of diagnostics related to establishing references.
                                    builder, f_10038_111829_111867(f_10038_111829_111855(this)));
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 111889, 111938);

                    cancellationToken.ThrowIfCancellationRequested();
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 111958, 112046);

                    f_10038_111958_112045(
                                    builder, f_10038_111975_112044(this, cancellationToken: cancellationToken));

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 112066, 112215) || true) && (f_10038_112070_112080() != null && (DynAbs.Tracing.TraceSender.Expression_True(10038, 112070, 112115) && f_10038_112092_112103().Length == 0))
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 112066, 112215);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 112157, 112196);

                        f_10038_112157_112195(this);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 112066, 112215);
                    }
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 110716, 112230);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 112246, 112295);

                cancellationToken.ThrowIfCancellationRequested();

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 112311, 112671) || true) && (stage == CompilationStage.Compile || (DynAbs.Tracing.TraceSender.Expression_False(10038, 112315, 112408) || stage > CompilationStage.Compile && (DynAbs.Tracing.TraceSender.Expression_True(10038, 112352, 112408) && includeEarlierStages)))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 112311, 112671);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 112442, 112498);

                    var
                    methodBodyDiagnostics = f_10038_112470_112497()
                    ;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 112516, 112591);

                    f_10038_112516_112590(this, methodBodyDiagnostics, cancellationToken);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 112609, 112656);

                    f_10038_112609_112655(builder, methodBodyDiagnostics);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 112311, 112671);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 112855, 112934);

                f_10038_112855_112933(this, diagnostics, ref builder, cancellationToken);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 108419, 112945);

                Microsoft.CodeAnalysis.DiagnosticBag
                f_10038_108631_108658()
                {
                    var return_v = DiagnosticBag.GetInstance();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 108631, 108658);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.SyntaxTree>
                f_10038_108822_108838(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param)
                {
                    var return_v = this_param.SyntaxTrees;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 108822, 108838);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions
                f_10038_108861_108873(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param)
                {
                    var return_v = this_param.Options;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 108861, 108873);
                    return return_v;
                }


                bool
                f_10038_108861_108889(Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions
                this_param)
                {
                    var return_v = this_param.ConcurrentBuild;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 108861, 108889);
                    return return_v;
                }


                System.Action<int>
                f_10038_109049_109414(System.Action<int>
                action)
                {
                    var return_v = UICultureUtilities.WithCurrentUICulture<int>(action);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 109049, 109414);
                    return return_v;
                }


                System.Threading.Tasks.ParallelLoopResult
                f_10038_108931_109459(int
                fromInclusive, int
                toExclusive, System.Action<int>
                body, System.Threading.CancellationToken
                cancellationToken)
                {
                    var return_v = RoslynParallel.For(fromInclusive, toExclusive, body, cancellationToken);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 108931, 109459);
                    return return_v;
                }


                int
                f_10038_109705_109780(Microsoft.CodeAnalysis.DiagnosticBag
                builder, Microsoft.CodeAnalysis.CSharp.SyntaxAndDeclarationManager
                syntaxAndDeclarations, Microsoft.CodeAnalysis.SyntaxTree
                syntaxTree)
                {
                    AppendLoadDirectiveDiagnostics(builder, syntaxAndDeclarations, syntaxTree);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 109705, 109780);
                    return 0;
                }


                System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.Diagnostic>
                f_10038_109901_109945(Microsoft.CodeAnalysis.SyntaxTree
                this_param, System.Threading.CancellationToken
                cancellationToken)
                {
                    var return_v = this_param.GetDiagnostics(cancellationToken);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 109901, 109945);
                    return return_v;
                }


                int
                f_10038_109884_109946(Microsoft.CodeAnalysis.DiagnosticBag
                this_param, System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.Diagnostic>
                diagnostics)
                {
                    this_param.AddRange(diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 109884, 109946);
                    return 0;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.SyntaxTree>
                f_10038_109569_109580_I(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.SyntaxTree>
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 109569, 109580);
                    return return_v;
                }


                System.Collections.Generic.HashSet<Microsoft.CodeAnalysis.ParseOptions>
                f_10038_110036_110063()
                {
                    var return_v = new System.Collections.Generic.HashSet<Microsoft.CodeAnalysis.ParseOptions>();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 110036, 110063);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ParseOptions
                f_10038_110238_110256(Microsoft.CodeAnalysis.SyntaxTree
                this_param)
                {
                    var return_v = this_param.Options;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 110238, 110256);
                    return return_v;
                }


                bool
                f_10038_110237_110280_M(bool
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 110237, 110280);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ParseOptions
                f_10038_110309_110327(Microsoft.CodeAnalysis.SyntaxTree
                this_param)
                {
                    var return_v = this_param.Options;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 110309, 110327);
                    return return_v;
                }


                bool
                f_10038_110284_110328(System.Collections.Generic.HashSet<Microsoft.CodeAnalysis.ParseOptions>
                this_param, Microsoft.CodeAnalysis.ParseOptions
                item)
                {
                    var return_v = this_param.Add(item);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 110284, 110328);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Location
                f_10038_110393_110442(Microsoft.CodeAnalysis.SyntaxTree
                this_param, Microsoft.CodeAnalysis.Text.TextSpan
                span)
                {
                    var return_v = this_param.GetLocation(span);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 110393, 110442);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ParseOptions
                f_10038_110491_110509(Microsoft.CodeAnalysis.SyntaxTree
                this_param)
                {
                    var return_v = this_param.Options;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 110491, 110509);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Diagnostic>
                f_10038_110491_110516(Microsoft.CodeAnalysis.ParseOptions
                this_param)
                {
                    var return_v = this_param.Errors;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 110491, 110516);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Diagnostic
                f_10038_110586_110614(Microsoft.CodeAnalysis.Diagnostic
                this_param, Microsoft.CodeAnalysis.Location
                location)
                {
                    var return_v = this_param.WithLocation(location);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 110586, 110614);
                    return return_v;
                }


                int
                f_10038_110574_110615(Microsoft.CodeAnalysis.DiagnosticBag
                this_param, Microsoft.CodeAnalysis.Diagnostic
                diag)
                {
                    this_param.Add(diag);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 110574, 110615);
                    return 0;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Diagnostic>
                f_10038_110491_110516_I(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Diagnostic>
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 110491, 110516);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.SyntaxTree>
                f_10038_110109_110120_I(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.SyntaxTree>
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 110109, 110120);
                    return return_v;
                }


                int
                f_10038_110847_110873(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    this_param.CheckAssemblyName(diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 110847, 110873);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions
                f_10038_110909_110916()
                {
                    var return_v = Options;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 110909, 110916);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Diagnostic>
                f_10038_110909_110923(Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions
                this_param)
                {
                    var return_v = this_param.Errors;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 110909, 110923);
                    return return_v;
                }


                int
                f_10038_110892_110924(Microsoft.CodeAnalysis.DiagnosticBag
                this_param, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Diagnostic>
                diagnostics)
                {
                    this_param.AddRange<Microsoft.CodeAnalysis.Diagnostic>(diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 110892, 110924);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions
                f_10038_110949_110956()
                {
                    var return_v = Options;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 110949, 110956);
                    return return_v;
                }


                Microsoft.CodeAnalysis.NullableContextOptions
                f_10038_110949_110979(Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions
                this_param)
                {
                    var return_v = this_param.NullableContextOptions;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 110949, 110979);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.LanguageVersion
                f_10038_111017_111032()
                {
                    var return_v = LanguageVersion;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 111017, 111032);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.LanguageVersion
                f_10038_111035_111096(Microsoft.CodeAnalysis.CSharp.MessageID
                feature)
                {
                    var return_v = feature.RequiredVersion();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 111035, 111096);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions
                f_10038_111393_111400()
                {
                    var return_v = Options;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 111393, 111400);
                    return return_v;
                }


                Microsoft.CodeAnalysis.NullableContextOptions
                f_10038_111393_111423(Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions
                this_param)
                {
                    var return_v = this_param.NullableContextOptions;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 111393, 111423);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.LanguageVersion
                f_10038_111425_111440()
                {
                    var return_v = LanguageVersion;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 111425, 111440);
                    return return_v;
                }


                string
                f_10038_111425_111458(Microsoft.CodeAnalysis.CSharp.LanguageVersion
                version)
                {
                    var return_v = version.ToDisplayString();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 111425, 111458);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.LanguageVersion
                f_10038_111544_111605(Microsoft.CodeAnalysis.CSharp.MessageID
                feature)
                {
                    var return_v = feature.RequiredVersion();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 111544, 111605);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSharpRequiredLanguageVersion
                f_10038_111510_111606(Microsoft.CodeAnalysis.CSharp.LanguageVersion
                version)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.CSharpRequiredLanguageVersion(version);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 111510, 111606);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo
                f_10038_111240_111607(Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, params object[]
                args)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo(code, args);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 111240, 111607);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Location
                f_10038_111609_111622()
                {
                    var return_v = Location.None;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 111609, 111622);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSDiagnostic
                f_10038_111223_111623(Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo
                info, Microsoft.CodeAnalysis.Location
                location)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.CSDiagnostic((Microsoft.CodeAnalysis.DiagnosticInfo)info, location);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 111223, 111623);
                    return return_v;
                }


                int
                f_10038_111211_111624(Microsoft.CodeAnalysis.DiagnosticBag
                this_param, Microsoft.CodeAnalysis.CSharp.CSDiagnostic
                diag)
                {
                    this_param.Add((Microsoft.CodeAnalysis.Diagnostic)diag);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 111211, 111624);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.CSharpCompilation.ReferenceManager
                f_10038_111829_111855(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param)
                {
                    var return_v = this_param.GetBoundReferenceManager();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 111829, 111855);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Diagnostic>
                f_10038_111829_111867(Microsoft.CodeAnalysis.CSharp.CSharpCompilation.ReferenceManager
                this_param)
                {
                    var return_v = this_param.Diagnostics;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 111829, 111867);
                    return return_v;
                }


                int
                f_10038_111812_111868(Microsoft.CodeAnalysis.DiagnosticBag
                this_param, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Diagnostic>
                diagnostics)
                {
                    this_param.AddRange<Microsoft.CodeAnalysis.Diagnostic>(diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 111812, 111868);
                    return 0;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Diagnostic>
                f_10038_111975_112044(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param, System.Threading.CancellationToken
                cancellationToken)
                {
                    var return_v = this_param.GetSourceDeclarationDiagnostics(cancellationToken: cancellationToken);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 111975, 112044);
                    return return_v;
                }


                int
                f_10038_111958_112045(Microsoft.CodeAnalysis.DiagnosticBag
                this_param, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Diagnostic>
                diagnostics)
                {
                    this_param.AddRange<Microsoft.CodeAnalysis.Diagnostic>(diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 111958, 112045);
                    return 0;
                }


                Microsoft.CodeAnalysis.Diagnostics.AsyncQueue<Microsoft.CodeAnalysis.Diagnostics.CompilationEvent>?
                f_10038_112070_112080()
                {
                    var return_v = EventQueue;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 112070, 112080);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.SyntaxTree>
                f_10038_112092_112103()
                {
                    var return_v = SyntaxTrees;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 112092, 112103);
                    return return_v;
                }


                int
                f_10038_112157_112195(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param)
                {
                    this_param.EnsureCompilationEventQueueCompleted();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 112157, 112195);
                    return 0;
                }


                Microsoft.CodeAnalysis.DiagnosticBag
                f_10038_112470_112497()
                {
                    var return_v = DiagnosticBag.GetInstance();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 112470, 112497);
                    return return_v;
                }


                int
                f_10038_112516_112590(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, System.Threading.CancellationToken
                cancellationToken)
                {
                    this_param.GetDiagnosticsForAllMethodBodies(diagnostics, cancellationToken);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 112516, 112590);
                    return 0;
                }


                int
                f_10038_112609_112655(Microsoft.CodeAnalysis.DiagnosticBag
                this_param, Microsoft.CodeAnalysis.DiagnosticBag
                bag)
                {
                    this_param.AddRangeAndFree(bag);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 112609, 112655);
                    return 0;
                }


                bool
                f_10038_112855_112933(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param, Microsoft.CodeAnalysis.DiagnosticBag
                accumulator, ref Microsoft.CodeAnalysis.DiagnosticBag
                incoming, System.Threading.CancellationToken
                cancellationToken)
                {
                    var return_v = this_param.FilterAndAppendAndFreeDiagnostics(accumulator, ref incoming, cancellationToken);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 112855, 112933);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 108419, 112945);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 108419, 112945);
            }
        }

        private static void AppendLoadDirectiveDiagnostics(DiagnosticBag builder, SyntaxAndDeclarationManager syntaxAndDeclarations, SyntaxTree syntaxTree, Func<IEnumerable<Diagnostic>, IEnumerable<Diagnostic>>? locationFilterOpt = null)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterStaticMethod(10038, 112957, 113869);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 113211, 113256);

                ImmutableArray<LoadDirective>
                loadDirectives
                = default(ImmutableArray<LoadDirective>);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 113270, 113858) || true) && (f_10038_113274_113371(f_10038_113274_113310(syntaxAndDeclarations).LoadDirectiveMap, syntaxTree, out loadDirectives))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 113270, 113858);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 113405, 113443);

                    f_10038_113405_113442(f_10038_113418_113441_M(!loadDirectives.IsEmpty));
                    try
                    {
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 113461, 113843);
                        foreach (var directive in f_10038_113487_113501_I(loadDirectives))
                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 113461, 113843);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 113543, 113603);

                            IEnumerable<Diagnostic>
                            diagnostics = directive.Diagnostics
                            ;

                            if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 113625, 113772) || true) && (locationFilterOpt != null)
                            )

                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 113625, 113772);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 113704, 113749);

                                diagnostics = f_10038_113718_113748(locationFilterOpt, diagnostics);
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 113625, 113772);
                            }
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 113794, 113824);

                            f_10038_113794_113823(builder, diagnostics);
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 113461, 113843);
                        }
                    }
                    catch (System.Exception)
                    {
                        DynAbs.Tracing.TraceSender.TraceExitLoopByException(10038, 1, 383);
                        throw;
                    }
                    finally
                    {
                        DynAbs.Tracing.TraceSender.TraceExitLoop(10038, 1, 383);
                    }
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 113270, 113858);
                }
                DynAbs.Tracing.TraceSender.TraceExitStaticMethod(10038, 112957, 113869);

                Microsoft.CodeAnalysis.CSharp.SyntaxAndDeclarationManager.State
                f_10038_113274_113310(Microsoft.CodeAnalysis.CSharp.SyntaxAndDeclarationManager
                this_param)
                {
                    var return_v = this_param.GetLazyState();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 113274, 113310);
                    return return_v;
                }


                bool
                f_10038_113274_113371(System.Collections.Immutable.ImmutableDictionary<Microsoft.CodeAnalysis.SyntaxTree, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.LoadDirective>>
                this_param, Microsoft.CodeAnalysis.SyntaxTree
                key, out System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.LoadDirective>
                value)
                {
                    var return_v = this_param.TryGetValue(key, out value);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 113274, 113371);
                    return return_v;
                }


                bool
                f_10038_113418_113441_M(bool
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 113418, 113441);
                    return return_v;
                }


                int
                f_10038_113405_113442(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 113405, 113442);
                    return 0;
                }


                System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.Diagnostic>
                f_10038_113718_113748(System.Func<System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.Diagnostic>, System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.Diagnostic>>
                this_param, System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.Diagnostic>
                arg)
                {
                    var return_v = this_param.Invoke(arg);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 113718, 113748);
                    return return_v;
                }


                int
                f_10038_113794_113823(Microsoft.CodeAnalysis.DiagnosticBag
                this_param, System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.Diagnostic>
                diagnostics)
                {
                    this_param.AddRange(diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 113794, 113823);
                    return 0;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.LoadDirective>
                f_10038_113487_113501_I(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.LoadDirective>
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 113487, 113501);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 112957, 113869);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 112957, 113869);
            }
        }

        private void GetDiagnosticsForAllMethodBodies(DiagnosticBag diagnostics, CancellationToken cancellationToken)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 114021, 114756);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 114155, 114532);

                f_10038_114155_114531(compilation: this, moduleBeingBuiltOpt: null, emittingPdb: false, emitTestCoverageData: false, hasDeclarationErrors: false, diagnostics: diagnostics, filterOpt: null, cancellationToken: cancellationToken);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 114548, 114656);

                f_10038_114548_114655(this, null, null, diagnostics, cancellationToken);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 114670, 114745);

                f_10038_114670_114744(this, filterTree: null, diagnostics, cancellationToken);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 114021, 114756);

                int
                f_10038_114155_114531(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                compilation, Microsoft.CodeAnalysis.CSharp.Emit.PEModuleBuilder
                moduleBeingBuiltOpt, bool
                emittingPdb, bool
                emitTestCoverageData, bool
                hasDeclarationErrors, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, System.Predicate<Microsoft.CodeAnalysis.CSharp.Symbol>
                filterOpt, System.Threading.CancellationToken
                cancellationToken)
                {
                    MethodCompiler.CompileMethodBodies(compilation: compilation, moduleBeingBuiltOpt: moduleBeingBuiltOpt, emittingPdb: emittingPdb, emitTestCoverageData: emitTestCoverageData, hasDeclarationErrors: hasDeclarationErrors, diagnostics: diagnostics, filterOpt: filterOpt, cancellationToken: cancellationToken);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 114155, 114531);
                    return 0;
                }


                int
                f_10038_114548_114655(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                compilation, string?
                assemblyName, System.IO.Stream?
                xmlDocStream, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, System.Threading.CancellationToken
                cancellationToken)
                {
                    DocumentationCommentCompiler.WriteDocumentationCommentXml(compilation, assemblyName, xmlDocStream, diagnostics, cancellationToken);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 114548, 114655);
                    return 0;
                }


                int
                f_10038_114670_114744(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param, Microsoft.CodeAnalysis.SyntaxTree?
                filterTree, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, System.Threading.CancellationToken
                cancellationToken)
                {
                    this_param.ReportUnusedImports(filterTree: filterTree, diagnostics, cancellationToken);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 114670, 114744);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 114021, 114756);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 114021, 114756);
            }
        }

        private static bool IsDefinedOrImplementedInSourceTree(Symbol symbol, SyntaxTree tree, TextSpan? span)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterStaticMethod(10038, 114768, 115403);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 114895, 115000) || true) && (f_10038_114899_114939(symbol, tree, span))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 114895, 115000);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 114973, 114985);

                    return true;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 114895, 115000);
                }

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 115016, 115363) || true) && (f_10038_115020_115031(symbol) == SymbolKind.Method && (DynAbs.Tracing.TraceSender.Expression_True(10038, 115020, 115083) && f_10038_115056_115083(symbol)) && (DynAbs.Tracing.TraceSender.Expression_True(10038, 115020, 115146) && f_10038_115087_115120(((MethodSymbol)symbol)) == MethodKind.Constructor))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 115016, 115363);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 115271, 115348);

                    return f_10038_115278_115347(f_10038_115313_115334(symbol), tree, span);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 115016, 115363);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 115379, 115392);

                return false;
                DynAbs.Tracing.TraceSender.TraceExitStaticMethod(10038, 114768, 115403);

                bool
                f_10038_114899_114939(Microsoft.CodeAnalysis.CSharp.Symbol
                this_param, Microsoft.CodeAnalysis.SyntaxTree
                tree, Microsoft.CodeAnalysis.Text.TextSpan?
                definedWithinSpan)
                {
                    var return_v = this_param.IsDefinedInSourceTree(tree, definedWithinSpan);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 114899, 114939);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SymbolKind
                f_10038_115020_115031(Microsoft.CodeAnalysis.CSharp.Symbol
                this_param)
                {
                    var return_v = this_param.Kind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 115020, 115031);
                    return return_v;
                }


                bool
                f_10038_115056_115083(Microsoft.CodeAnalysis.CSharp.Symbol
                this_param)
                {
                    var return_v = this_param.IsImplicitlyDeclared;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 115056, 115083);
                    return return_v;
                }


                Microsoft.CodeAnalysis.MethodKind
                f_10038_115087_115120(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                this_param)
                {
                    var return_v = this_param.MethodKind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 115087, 115120);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                f_10038_115313_115334(Microsoft.CodeAnalysis.CSharp.Symbol
                this_param)
                {
                    var return_v = this_param.ContainingType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 115313, 115334);
                    return return_v;
                }


                bool
                f_10038_115278_115347(Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                symbol, Microsoft.CodeAnalysis.SyntaxTree
                tree, Microsoft.CodeAnalysis.Text.TextSpan?
                span)
                {
                    var return_v = IsDefinedOrImplementedInSourceTree((Microsoft.CodeAnalysis.CSharp.Symbol)symbol, tree, span);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 115278, 115347);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 114768, 115403);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 114768, 115403);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private ImmutableArray<Diagnostic> GetDiagnosticsForMethodBodiesInTree(SyntaxTree tree, TextSpan? span, CancellationToken cancellationToken)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 115415, 116699);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 115580, 115636);

                DiagnosticBag
                diagnostics = f_10038_115608_115635()
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 115652, 116079);

                f_10038_115652_116078(compilation: this, moduleBeingBuiltOpt: null, emittingPdb: false, emitTestCoverageData: false, hasDeclarationErrors: false, diagnostics: diagnostics, filterOpt: s => IsDefinedOrImplementedInSourceTree(s, tree, span), cancellationToken: cancellationToken);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 116095, 116215);

                f_10038_116095_116214(this, null, null, diagnostics, cancellationToken, tree, span);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 116450, 116633) || true) && (f_10038_116454_116468_M(!span.HasValue) || (DynAbs.Tracing.TraceSender.Expression_False(10038, 116454, 116526) || span.Value == f_10038_116486_116526(f_10038_116486_116517(tree, cancellationToken))))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 116450, 116633);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 116560, 116618);

                    f_10038_116560_116617(this, tree, diagnostics, cancellationToken);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 116450, 116633);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 116649, 116688);

                return f_10038_116656_116687(diagnostics);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 115415, 116699);

                Microsoft.CodeAnalysis.DiagnosticBag
                f_10038_115608_115635()
                {
                    var return_v = DiagnosticBag.GetInstance();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 115608, 115635);
                    return return_v;
                }


                int
                f_10038_115652_116078(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                compilation, Microsoft.CodeAnalysis.CSharp.Emit.PEModuleBuilder
                moduleBeingBuiltOpt, bool
                emittingPdb, bool
                emitTestCoverageData, bool
                hasDeclarationErrors, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, System.Predicate<Microsoft.CodeAnalysis.CSharp.Symbol>
                filterOpt, System.Threading.CancellationToken
                cancellationToken)
                {
                    MethodCompiler.CompileMethodBodies(compilation: compilation, moduleBeingBuiltOpt: moduleBeingBuiltOpt, emittingPdb: emittingPdb, emitTestCoverageData: emitTestCoverageData, hasDeclarationErrors: hasDeclarationErrors, diagnostics: diagnostics, filterOpt: filterOpt, cancellationToken: cancellationToken);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 115652, 116078);
                    return 0;
                }


                int
                f_10038_116095_116214(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                compilation, string?
                assemblyName, System.IO.Stream?
                xmlDocStream, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, System.Threading.CancellationToken
                cancellationToken, Microsoft.CodeAnalysis.SyntaxTree
                filterTree, Microsoft.CodeAnalysis.Text.TextSpan?
                filterSpanWithinTree)
                {
                    DocumentationCommentCompiler.WriteDocumentationCommentXml(compilation, assemblyName, xmlDocStream, diagnostics, cancellationToken, filterTree, filterSpanWithinTree);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 116095, 116214);
                    return 0;
                }


                bool
                f_10038_116454_116468_M(bool
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 116454, 116468);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SyntaxNode
                f_10038_116486_116517(Microsoft.CodeAnalysis.SyntaxTree
                this_param, System.Threading.CancellationToken
                cancellationToken)
                {
                    var return_v = this_param.GetRoot(cancellationToken);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 116486, 116517);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Text.TextSpan
                f_10038_116486_116526(Microsoft.CodeAnalysis.SyntaxNode
                this_param)
                {
                    var return_v = this_param.FullSpan;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 116486, 116526);
                    return return_v;
                }


                int
                f_10038_116560_116617(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param, Microsoft.CodeAnalysis.SyntaxTree
                filterTree, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, System.Threading.CancellationToken
                cancellationToken)
                {
                    this_param.ReportUnusedImports(filterTree, diagnostics, cancellationToken);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 116560, 116617);
                    return 0;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Diagnostic>
                f_10038_116656_116687(Microsoft.CodeAnalysis.DiagnosticBag
                this_param)
                {
                    var return_v = this_param.ToReadOnlyAndFree();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 116656, 116687);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 115415, 116699);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 115415, 116699);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private ImmutableArray<Diagnostic> GetSourceDeclarationDiagnostics(SyntaxTree? syntaxTree = null, TextSpan? filterSpanWithinTree = null, Func<IEnumerable<Diagnostic>, SyntaxTree, TextSpan?, IEnumerable<Diagnostic>>? locationFilterOpt = null, CancellationToken cancellationToken = default)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 116711, 118664);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 117024, 117066);

                f_10038_117024_117065(f_10038_117024_117037(), cancellationToken);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 117082, 117114);

                SourceLocation?
                location = null
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 117128, 117437) || true) && (syntaxTree != null)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 117128, 117437);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 117184, 117233);

                    var
                    root = f_10038_117195_117232(syntaxTree, cancellationToken)
                    ;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 117251, 117422);

                    location = (DynAbs.Tracing.TraceSender.Conditional_F1(10038, 117262, 117291) || ((filterSpanWithinTree.HasValue && DynAbs.Tracing.TraceSender.Conditional_F2(10038, 117315, 117373)) || DynAbs.Tracing.TraceSender.Conditional_F3(10038, 117397, 117421))) ? f_10038_117315_117373(syntaxTree, filterSpanWithinTree.Value) : f_10038_117397_117421(root);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 117128, 117437);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 117453, 117505);

                f_10038_117453_117504(f_10038_117453_117461(), location, cancellationToken);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 117521, 117998) || true) && (syntaxTree is null)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 117521, 117998);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 117693, 117730);

                    _declarationDiagnosticsFrozen = true;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 117941, 117983);

                    _needsGeneratedAttributes_IsFrozen = true;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 117521, 117998);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 118014, 118105);

                var
                result = f_10038_118055_118070(DynAbs.Tracing.TraceSender.TraceConditionalAccessExpression(_lazyDeclarationDiagnostics, 10038, 118027, 118070)) ?? (DynAbs.Tracing.TraceSender.Expression_Null<System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.Diagnostic>?>(10038, 118027, 118104) ?? f_10038_118074_118104())
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 118121, 118325) || true) && (locationFilterOpt != null)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 118121, 118325);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 118184, 118223);

                    f_10038_118184_118222(syntaxTree != null);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 118241, 118310);

                    result = f_10038_118250_118309(locationFilterOpt, result, syntaxTree, filterSpanWithinTree);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 118121, 118325);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 118461, 118586);

                ImmutableArray<Diagnostic>
                clsDiagnostics = f_10038_118505_118585(this, syntaxTree, filterSpanWithinTree, cancellationToken)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 118602, 118653);

                return f_10038_118609_118629(result).Concat(clsDiagnostics);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 116711, 118664);

                Microsoft.CodeAnalysis.CSharp.Imports
                f_10038_117024_117037()
                {
                    var return_v = GlobalImports;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 117024, 117037);
                    return return_v;
                }


                int
                f_10038_117024_117065(Microsoft.CodeAnalysis.CSharp.Imports
                this_param, System.Threading.CancellationToken
                cancellationToken)
                {
                    this_param.Complete(cancellationToken);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 117024, 117065);
                    return 0;
                }


                Microsoft.CodeAnalysis.SyntaxNode
                f_10038_117195_117232(Microsoft.CodeAnalysis.SyntaxTree
                this_param, System.Threading.CancellationToken
                cancellationToken)
                {
                    var return_v = this_param.GetRoot(cancellationToken);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 117195, 117232);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SourceLocation
                f_10038_117315_117373(Microsoft.CodeAnalysis.SyntaxTree
                syntaxTree, Microsoft.CodeAnalysis.Text.TextSpan
                span)
                {
                    var return_v = new Microsoft.CodeAnalysis.SourceLocation(syntaxTree, span);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 117315, 117373);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SourceLocation
                f_10038_117397_117421(Microsoft.CodeAnalysis.SyntaxNode
                node)
                {
                    var return_v = new Microsoft.CodeAnalysis.SourceLocation(node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 117397, 117421);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.AssemblySymbol
                f_10038_117453_117461()
                {
                    var return_v = Assembly;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 117453, 117461);
                    return return_v;
                }


                int
                f_10038_117453_117504(Microsoft.CodeAnalysis.CSharp.Symbols.AssemblySymbol
                this_param, Microsoft.CodeAnalysis.SourceLocation?
                locationOpt, System.Threading.CancellationToken
                cancellationToken)
                {
                    this_param.ForceComplete(locationOpt, cancellationToken);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 117453, 117504);
                    return 0;
                }


                System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.Diagnostic>?
                f_10038_118055_118070(Microsoft.CodeAnalysis.DiagnosticBag
                this_param)
                {
                    var return_v = this_param?.AsEnumerable();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 118055, 118070);
                    return return_v;
                }


                System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.Diagnostic>
                f_10038_118074_118104()
                {
                    var return_v = Enumerable.Empty<Diagnostic>();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 118074, 118104);
                    return return_v;
                }


                int
                f_10038_118184_118222(bool
                b)
                {
                    RoslynDebug.Assert(b);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 118184, 118222);
                    return 0;
                }


                System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.Diagnostic>
                f_10038_118250_118309(System.Func<System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.Diagnostic>, Microsoft.CodeAnalysis.SyntaxTree, Microsoft.CodeAnalysis.Text.TextSpan?, System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.Diagnostic>>
                this_param, System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.Diagnostic>
                arg1, Microsoft.CodeAnalysis.SyntaxTree
                arg2, Microsoft.CodeAnalysis.Text.TextSpan?
                arg3)
                {
                    var return_v = this_param.Invoke(arg1, arg2, arg3);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 118250, 118309);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Diagnostic>
                f_10038_118505_118585(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param, Microsoft.CodeAnalysis.SyntaxTree?
                syntaxTree, Microsoft.CodeAnalysis.Text.TextSpan?
                filterSpanWithinTree, System.Threading.CancellationToken
                cancellationToken)
                {
                    var return_v = this_param.GetClsComplianceDiagnostics(syntaxTree, filterSpanWithinTree, cancellationToken);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 118505, 118585);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Diagnostic>
                f_10038_118609_118629(System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.Diagnostic>
                items)
                {
                    var return_v = items.AsImmutable<Microsoft.CodeAnalysis.Diagnostic>();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 118609, 118629);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 116711, 118664);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 116711, 118664);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private ImmutableArray<Diagnostic> GetClsComplianceDiagnostics(SyntaxTree? syntaxTree, TextSpan? filterSpanWithinTree, CancellationToken cancellationToken)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 118676, 119642);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 118856, 119145) || true) && (syntaxTree != null)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 118856, 119145);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 118912, 118954);

                    var
                    builder = f_10038_118926_118953()
                    ;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 118972, 119077);

                    f_10038_118972_119076(this, builder, cancellationToken, syntaxTree, filterSpanWithinTree);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 119095, 119130);

                    return f_10038_119102_119129(builder);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 118856, 119145);
                }

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 119161, 119509) || true) && (_lazyClsComplianceDiagnostics.IsDefault)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 119161, 119509);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 119238, 119280);

                    var
                    builder = f_10038_119252_119279()
                    ;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 119298, 119369);

                    f_10038_119298_119368(this, builder, cancellationToken);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 119387, 119494);

                    f_10038_119387_119493(ref _lazyClsComplianceDiagnostics, f_10038_119465_119492(builder));
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 119161, 119509);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 119525, 119580);

                f_10038_119525_119579(f_10038_119538_119578_M(!_lazyClsComplianceDiagnostics.IsDefault));
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 119594, 119631);

                return _lazyClsComplianceDiagnostics;
                DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 118676, 119642);

                Microsoft.CodeAnalysis.DiagnosticBag
                f_10038_118926_118953()
                {
                    var return_v = DiagnosticBag.GetInstance();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 118926, 118953);
                    return return_v;
                }


                int
                f_10038_118972_119076(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                compilation, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, System.Threading.CancellationToken
                cancellationToken, Microsoft.CodeAnalysis.SyntaxTree
                filterTree, Microsoft.CodeAnalysis.Text.TextSpan?
                filterSpanWithinTree)
                {
                    ClsComplianceChecker.CheckCompliance(compilation, diagnostics, cancellationToken, filterTree, filterSpanWithinTree);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 118972, 119076);
                    return 0;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Diagnostic>
                f_10038_119102_119129(Microsoft.CodeAnalysis.DiagnosticBag
                this_param)
                {
                    var return_v = this_param.ToReadOnlyAndFree();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 119102, 119129);
                    return return_v;
                }


                Microsoft.CodeAnalysis.DiagnosticBag
                f_10038_119252_119279()
                {
                    var return_v = DiagnosticBag.GetInstance();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 119252, 119279);
                    return return_v;
                }


                int
                f_10038_119298_119368(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                compilation, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, System.Threading.CancellationToken
                cancellationToken)
                {
                    ClsComplianceChecker.CheckCompliance(compilation, diagnostics, cancellationToken);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 119298, 119368);
                    return 0;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Diagnostic>
                f_10038_119465_119492(Microsoft.CodeAnalysis.DiagnosticBag
                this_param)
                {
                    var return_v = this_param.ToReadOnlyAndFree();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 119465, 119492);
                    return return_v;
                }


                bool
                f_10038_119387_119493(ref System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Diagnostic>
                location, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Diagnostic>
                value)
                {
                    var return_v = ImmutableInterlocked.InterlockedInitialize(ref location, value);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 119387, 119493);
                    return return_v;
                }


                bool
                f_10038_119538_119578_M(bool
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 119538, 119578);
                    return return_v;
                }


                int
                f_10038_119525_119579(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 119525, 119579);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 118676, 119642);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 118676, 119642);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private static IEnumerable<Diagnostic> FilterDiagnosticsByLocation(IEnumerable<Diagnostic> diagnostics, SyntaxTree tree, TextSpan? filterSpanWithinTree)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterStaticMethod(10038, 119654, 120080);

                var listYield = new List<Diagnostic>();
                try
                {
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 119831, 120069);
                    foreach (var diagnostic in f_10038_119858_119869_I(diagnostics))
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 119831, 120069);

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 119903, 120054) || true) && (f_10038_119907_119969(diagnostic, tree, filterSpanWithinTree))
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 119903, 120054);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 120011, 120035);

                            listYield.Add(diagnostic);
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 119903, 120054);
                        }
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 119831, 120069);
                    }
                }
                catch (System.Exception)
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoopByException(10038, 1, 239);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoop(10038, 1, 239);
                }
                DynAbs.Tracing.TraceSender.TraceExitStaticMethod(10038, 119654, 120080);

                return listYield;

                bool
                f_10038_119907_119969(Microsoft.CodeAnalysis.Diagnostic
                this_param, Microsoft.CodeAnalysis.SyntaxTree
                tree, Microsoft.CodeAnalysis.Text.TextSpan?
                filterSpanWithinTree)
                {
                    var return_v = this_param.HasIntersectingLocation(tree, filterSpanWithinTree);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 119907, 119969);
                    return return_v;
                }


                System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.Diagnostic>
                f_10038_119858_119869_I(System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.Diagnostic>
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 119858, 119869);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 119654, 120080);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 119654, 120080);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        internal ImmutableArray<Diagnostic> GetDiagnosticsForSyntaxTree(
                    CompilationStage stage,
                    SyntaxTree syntaxTree,
                    TextSpan? filterSpanWithinTree,
                    bool includeEarlierStages,
                    CancellationToken cancellationToken = default)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 120092, 123665);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 120399, 120448);

                cancellationToken.ThrowIfCancellationRequested();
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 120464, 120517);

                DiagnosticBag?
                builder = f_10038_120489_120516()
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 120531, 121125) || true) && (stage == CompilationStage.Parse || (DynAbs.Tracing.TraceSender.Expression_False(10038, 120535, 120626) || (stage > CompilationStage.Parse && (DynAbs.Tracing.TraceSender.Expression_True(10038, 120571, 120625) && includeEarlierStages))))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 120531, 121125);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 120660, 120848);

                    f_10038_120660_120847(builder, _syntaxAndDeclarations, syntaxTree, diagnostics => FilterDiagnosticsByLocation(diagnostics, syntaxTree, filterSpanWithinTree));
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 120868, 120937);

                    var
                    syntaxDiagnostics = f_10038_120892_120936(syntaxTree, cancellationToken)
                    ;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 120955, 121056);

                    syntaxDiagnostics = f_10038_120975_121055(syntaxDiagnostics, syntaxTree, filterSpanWithinTree);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 121074, 121110);

                    f_10038_121074_121109(builder, syntaxDiagnostics);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 120531, 121125);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 121141, 121190);

                cancellationToken.ThrowIfCancellationRequested();

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 121204, 121798) || true) && (stage == CompilationStage.Declare || (DynAbs.Tracing.TraceSender.Expression_False(10038, 121208, 121303) || (stage > CompilationStage.Declare && (DynAbs.Tracing.TraceSender.Expression_True(10038, 121246, 121302) && includeEarlierStages))))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 121204, 121798);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 121337, 121480);

                    var
                    declarationDiagnostics = f_10038_121366_121479(this, syntaxTree, filterSpanWithinTree, FilterDiagnosticsByLocation, cancellationToken)
                    ;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 121742, 121783);

                    f_10038_121742_121782(                // re-enabling/fixing the below assert is tracked by https://github.com/dotnet/roslyn/issues/21020
                                                          // Debug.Assert(declarationDiagnostics.All(d => d.HasIntersectingLocation(syntaxTree, filterSpanWithinTree)));
                                    builder, declarationDiagnostics);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 121204, 121798);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 121814, 121863);

                cancellationToken.ThrowIfCancellationRequested();

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 121879, 123287) || true) && (stage == CompilationStage.Compile || (DynAbs.Tracing.TraceSender.Expression_False(10038, 121883, 121978) || (stage > CompilationStage.Compile && (DynAbs.Tracing.TraceSender.Expression_True(10038, 121921, 121977) && includeEarlierStages))))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 121879, 123287);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 122535, 122672);

                    IEnumerable<Diagnostic>
                    methodBodyDiagnostics = f_10038_122583_122671(this, syntaxTree, filterSpanWithinTree, cancellationToken)
                    ;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 123103, 123212);

                    methodBodyDiagnostics = f_10038_123127_123211(methodBodyDiagnostics, syntaxTree, filterSpanWithinTree);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 123232, 123272);

                    f_10038_123232_123271(
                                    builder, methodBodyDiagnostics);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 121879, 123287);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 123465, 123506);

                var
                result = f_10038_123478_123505()
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 123520, 123594);

                f_10038_123520_123593(this, result, ref builder, cancellationToken);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 123608, 123654);

                return f_10038_123615_123653(result);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 120092, 123665);

                Microsoft.CodeAnalysis.DiagnosticBag
                f_10038_120489_120516()
                {
                    var return_v = DiagnosticBag.GetInstance();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 120489, 120516);
                    return return_v;
                }


                int
                f_10038_120660_120847(Microsoft.CodeAnalysis.DiagnosticBag
                builder, Microsoft.CodeAnalysis.CSharp.SyntaxAndDeclarationManager
                syntaxAndDeclarations, Microsoft.CodeAnalysis.SyntaxTree
                syntaxTree, System.Func<System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.Diagnostic>, System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.Diagnostic>>?
                locationFilterOpt)
                {
                    AppendLoadDirectiveDiagnostics(builder, syntaxAndDeclarations, syntaxTree, locationFilterOpt);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 120660, 120847);
                    return 0;
                }


                System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.Diagnostic>
                f_10038_120892_120936(Microsoft.CodeAnalysis.SyntaxTree
                this_param, System.Threading.CancellationToken
                cancellationToken)
                {
                    var return_v = this_param.GetDiagnostics(cancellationToken);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 120892, 120936);
                    return return_v;
                }


                System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.Diagnostic>
                f_10038_120975_121055(System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.Diagnostic>
                diagnostics, Microsoft.CodeAnalysis.SyntaxTree
                tree, Microsoft.CodeAnalysis.Text.TextSpan?
                filterSpanWithinTree)
                {
                    var return_v = FilterDiagnosticsByLocation(diagnostics, tree, filterSpanWithinTree);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 120975, 121055);
                    return return_v;
                }


                int
                f_10038_121074_121109(Microsoft.CodeAnalysis.DiagnosticBag
                this_param, System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.Diagnostic>
                diagnostics)
                {
                    this_param.AddRange(diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 121074, 121109);
                    return 0;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Diagnostic>
                f_10038_121366_121479(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param, Microsoft.CodeAnalysis.SyntaxTree
                syntaxTree, Microsoft.CodeAnalysis.Text.TextSpan?
                filterSpanWithinTree, System.Func<System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.Diagnostic>, Microsoft.CodeAnalysis.SyntaxTree, Microsoft.CodeAnalysis.Text.TextSpan?, System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.Diagnostic>>
                locationFilterOpt, System.Threading.CancellationToken
                cancellationToken)
                {
                    var return_v = this_param.GetSourceDeclarationDiagnostics(syntaxTree, filterSpanWithinTree, locationFilterOpt, cancellationToken);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 121366, 121479);
                    return return_v;
                }


                int
                f_10038_121742_121782(Microsoft.CodeAnalysis.DiagnosticBag
                this_param, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Diagnostic>
                diagnostics)
                {
                    this_param.AddRange<Microsoft.CodeAnalysis.Diagnostic>(diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 121742, 121782);
                    return 0;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Diagnostic>
                f_10038_122583_122671(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param, Microsoft.CodeAnalysis.SyntaxTree
                tree, Microsoft.CodeAnalysis.Text.TextSpan?
                span, System.Threading.CancellationToken
                cancellationToken)
                {
                    var return_v = this_param.GetDiagnosticsForMethodBodiesInTree(tree, span, cancellationToken);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 122583, 122671);
                    return return_v;
                }


                System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.Diagnostic>
                f_10038_123127_123211(System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.Diagnostic>
                diagnostics, Microsoft.CodeAnalysis.SyntaxTree
                tree, Microsoft.CodeAnalysis.Text.TextSpan?
                filterSpanWithinTree)
                {
                    var return_v = FilterDiagnosticsByLocation(diagnostics, tree, filterSpanWithinTree);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 123127, 123211);
                    return return_v;
                }


                int
                f_10038_123232_123271(Microsoft.CodeAnalysis.DiagnosticBag
                this_param, System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.Diagnostic>
                diagnostics)
                {
                    this_param.AddRange(diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 123232, 123271);
                    return 0;
                }


                Microsoft.CodeAnalysis.DiagnosticBag
                f_10038_123478_123505()
                {
                    var return_v = DiagnosticBag.GetInstance();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 123478, 123505);
                    return return_v;
                }


                bool
                f_10038_123520_123593(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param, Microsoft.CodeAnalysis.DiagnosticBag
                accumulator, ref Microsoft.CodeAnalysis.DiagnosticBag
                incoming, System.Threading.CancellationToken
                cancellationToken)
                {
                    var return_v = this_param.FilterAndAppendAndFreeDiagnostics(accumulator, ref incoming, cancellationToken);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 123520, 123593);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Diagnostic>
                f_10038_123615_123653(Microsoft.CodeAnalysis.DiagnosticBag
                this_param)
                {
                    var return_v = this_param.ToReadOnlyAndFree<Microsoft.CodeAnalysis.Diagnostic>();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 123615, 123653);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 120092, 123665);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 120092, 123665);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        #endregion

        #region Resources

        protected override void AppendDefaultVersionResource(Stream resourceStream)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 123728, 124904);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 123828, 123864);

                var
                sourceAssembly = f_10038_123849_123863()
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 123878, 123972);

                string
                fileVersion = f_10038_123899_123925(sourceAssembly) ?? (DynAbs.Tracing.TraceSender.Expression_Null<string>(10038, 123899, 123971) ?? f_10038_123929_123971(f_10038_123929_123960(f_10038_123929_123952(sourceAssembly))))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 123988, 124893);

                f_10038_123988_124892(resourceStream, !f_10038_124077_124116(f_10038_124077_124100(f_10038_124077_124089(this))), fileVersion: fileVersion, originalFileName: f_10038_124196_124218(f_10038_124196_124213(this)), internalName: f_10038_124251_124273(f_10038_124251_124268(this)), productVersion: f_10038_124308_124343(sourceAssembly) ?? (DynAbs.Tracing.TraceSender.Expression_Null<string>(10038, 124308, 124358) ?? fileVersion), fileDescription: f_10038_124394_124414(sourceAssembly) ?? (DynAbs.Tracing.TraceSender.Expression_Null<string>(10038, 124394, 124421) ?? " "), assemblyVersion: f_10038_124514_124545(f_10038_124514_124537(sourceAssembly)), legalCopyright: f_10038_124580_124604(sourceAssembly) ?? (DynAbs.Tracing.TraceSender.Expression_Null<string>(10038, 124580, 124611) ?? " "), legalTrademarks: f_10038_124704_124728(sourceAssembly), productName: f_10038_124760_124782(sourceAssembly), comments: f_10038_124811_124837(sourceAssembly), companyName: f_10038_124869_124891(sourceAssembly));
                DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 123728, 124904);

                Microsoft.CodeAnalysis.CSharp.Symbols.SourceAssemblySymbol
                f_10038_123849_123863()
                {
                    var return_v = SourceAssembly;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 123849, 123863);
                    return return_v;
                }


                string
                f_10038_123899_123925(Microsoft.CodeAnalysis.CSharp.Symbols.SourceAssemblySymbol
                this_param)
                {
                    var return_v = this_param.FileVersion;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 123899, 123925);
                    return return_v;
                }


                Microsoft.CodeAnalysis.AssemblyIdentity
                f_10038_123929_123952(Microsoft.CodeAnalysis.CSharp.Symbols.SourceAssemblySymbol
                this_param)
                {
                    var return_v = this_param.Identity;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 123929, 123952);
                    return return_v;
                }


                System.Version
                f_10038_123929_123960(Microsoft.CodeAnalysis.AssemblyIdentity
                this_param)
                {
                    var return_v = this_param.Version;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 123929, 123960);
                    return return_v;
                }


                string
                f_10038_123929_123971(System.Version
                this_param)
                {
                    var return_v = this_param.ToString();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 123929, 123971);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions
                f_10038_124077_124089(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param)
                {
                    var return_v = this_param.Options;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 124077, 124089);
                    return return_v;
                }


                Microsoft.CodeAnalysis.OutputKind
                f_10038_124077_124100(Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions
                this_param)
                {
                    var return_v = this_param.OutputKind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 124077, 124100);
                    return return_v;
                }


                bool
                f_10038_124077_124116(Microsoft.CodeAnalysis.OutputKind
                kind)
                {
                    var return_v = kind.IsApplication();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 124077, 124116);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.ModuleSymbol
                f_10038_124196_124213(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param)
                {
                    var return_v = this_param.SourceModule;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 124196, 124213);
                    return return_v;
                }


                string
                f_10038_124196_124218(Microsoft.CodeAnalysis.CSharp.Symbols.ModuleSymbol
                this_param)
                {
                    var return_v = this_param.Name;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 124196, 124218);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.ModuleSymbol
                f_10038_124251_124268(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param)
                {
                    var return_v = this_param.SourceModule;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 124251, 124268);
                    return return_v;
                }


                string
                f_10038_124251_124273(Microsoft.CodeAnalysis.CSharp.Symbols.ModuleSymbol
                this_param)
                {
                    var return_v = this_param.Name;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 124251, 124273);
                    return return_v;
                }


                string
                f_10038_124308_124343(Microsoft.CodeAnalysis.CSharp.Symbols.SourceAssemblySymbol
                this_param)
                {
                    var return_v = this_param.InformationalVersion;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 124308, 124343);
                    return return_v;
                }


                string
                f_10038_124394_124414(Microsoft.CodeAnalysis.CSharp.Symbols.SourceAssemblySymbol
                this_param)
                {
                    var return_v = this_param.Title;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 124394, 124414);
                    return return_v;
                }


                Microsoft.CodeAnalysis.AssemblyIdentity
                f_10038_124514_124537(Microsoft.CodeAnalysis.CSharp.Symbols.SourceAssemblySymbol
                this_param)
                {
                    var return_v = this_param.Identity;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 124514, 124537);
                    return return_v;
                }


                System.Version
                f_10038_124514_124545(Microsoft.CodeAnalysis.AssemblyIdentity
                this_param)
                {
                    var return_v = this_param.Version;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 124514, 124545);
                    return return_v;
                }


                string
                f_10038_124580_124604(Microsoft.CodeAnalysis.CSharp.Symbols.SourceAssemblySymbol
                this_param)
                {
                    var return_v = this_param.Copyright;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 124580, 124604);
                    return return_v;
                }


                string
                f_10038_124704_124728(Microsoft.CodeAnalysis.CSharp.Symbols.SourceAssemblySymbol
                this_param)
                {
                    var return_v = this_param.Trademark;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 124704, 124728);
                    return return_v;
                }


                string
                f_10038_124760_124782(Microsoft.CodeAnalysis.CSharp.Symbols.SourceAssemblySymbol
                this_param)
                {
                    var return_v = this_param.Product;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 124760, 124782);
                    return return_v;
                }


                string
                f_10038_124811_124837(Microsoft.CodeAnalysis.CSharp.Symbols.SourceAssemblySymbol
                this_param)
                {
                    var return_v = this_param.Description;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 124811, 124837);
                    return return_v;
                }


                string
                f_10038_124869_124891(Microsoft.CodeAnalysis.CSharp.Symbols.SourceAssemblySymbol
                this_param)
                {
                    var return_v = this_param.Company;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 124869, 124891);
                    return return_v;
                }


                int
                f_10038_123988_124892(System.IO.Stream
                resStream, bool
                isDll, string
                fileVersion, string
                originalFileName, string
                internalName, string
                productVersion, string
                fileDescription, System.Version
                assemblyVersion, string
                legalCopyright, string
                legalTrademarks, string
                productName, string
                comments, string
                companyName)
                {
                    Win32ResourceConversions.AppendVersionToResourceStream(resStream, isDll, fileVersion: fileVersion, originalFileName: originalFileName, internalName: internalName, productVersion: productVersion, fileDescription: fileDescription, assemblyVersion: assemblyVersion, legalCopyright: legalCopyright, legalTrademarks: legalTrademarks, productName: productName, comments: comments, companyName: companyName);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 123988, 124892);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 123728, 124904);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 123728, 124904);
            }
        }

        #endregion

        #region Emit
        internal override byte LinkerMajorVersion
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 125004, 125011);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 125007, 125011);
                    return 0x30; DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 125004, 125011);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 125004, 125011);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 125004, 125011);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        internal override bool IsDelaySigned
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 125085, 125129);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 125091, 125127);

                    return f_10038_125098_125126(f_10038_125098_125112());
                    DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 125085, 125129);

                    Microsoft.CodeAnalysis.CSharp.Symbols.SourceAssemblySymbol
                    f_10038_125098_125112()
                    {
                        var return_v = SourceAssembly;
                        DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 125098, 125112);
                        return return_v;
                    }


                    bool
                    f_10038_125098_125126(Microsoft.CodeAnalysis.CSharp.Symbols.SourceAssemblySymbol
                    this_param)
                    {
                        var return_v = this_param.IsDelaySigned;
                        DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 125098, 125126);
                        return return_v;
                    }

                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 125024, 125140);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 125024, 125140);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        internal override StrongNameKeys StrongNameKeys
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 125224, 125269);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 125230, 125267);

                    return f_10038_125237_125266(f_10038_125237_125251());
                    DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 125224, 125269);

                    Microsoft.CodeAnalysis.CSharp.Symbols.SourceAssemblySymbol
                    f_10038_125237_125251()
                    {
                        var return_v = SourceAssembly;
                        DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 125237, 125251);
                        return return_v;
                    }


                    Microsoft.CodeAnalysis.StrongNameKeys
                    f_10038_125237_125266(Microsoft.CodeAnalysis.CSharp.Symbols.SourceAssemblySymbol
                    this_param)
                    {
                        var return_v = this_param.StrongNameKeys;
                        DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 125237, 125266);
                        return return_v;
                    }

                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 125152, 125280);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 125152, 125280);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        internal override CommonPEModuleBuilder? CreateModuleBuilder(
                    EmitOptions emitOptions,
                    IMethodSymbol? debugEntryPoint,
                    Stream? sourceLinkStream,
                    IEnumerable<EmbeddedText>? embeddedTexts,
                    IEnumerable<ResourceDescription>? manifestResources,
                    CompilationTestData? testData,
                    DiagnosticBag diagnostics,
                    CancellationToken cancellationToken)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 125292, 127715);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 125755, 125802);

                f_10038_125755_125801(f_10038_125768_125781_M(!IsSubmission) || (DynAbs.Tracing.TraceSender.Expression_False(10038, 125768, 125800) || f_10038_125785_125800(this)));
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 125818, 125897);

                string?
                runtimeMDVersion = f_10038_125845_125896(this, emitOptions, diagnostics)
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 125911, 126000) || true) && (runtimeMDVersion == null)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 125911, 126000);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 125973, 125985);

                    return null;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 125911, 126000);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 126016, 126104);

                var
                moduleProps = f_10038_126034_126103(this, emitOptions, runtimeMDVersion)
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 126120, 126280) || true) && (manifestResources == null)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 126120, 126280);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 126183, 126265);

                    manifestResources = f_10038_126203_126264();
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 126120, 126280);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 126296, 126329);

                PEModuleBuilder
                moduleBeingBuilt
                = default(PEModuleBuilder);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 126343, 127034) || true) && (f_10038_126347_126380(f_10038_126347_126366(_options)))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 126343, 127034);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 126414, 126620);

                    moduleBeingBuilt = f_10038_126433_126619((SourceModuleSymbol)f_10038_126498_126510(), emitOptions, moduleProps, manifestResources);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 126343, 127034);
                }

                else

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 126343, 127034);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 126686, 126787);

                    var
                    kind = (DynAbs.Tracing.TraceSender.Conditional_F1(10038, 126697, 126726) || ((f_10038_126697_126726(f_10038_126697_126716(_options)) && DynAbs.Tracing.TraceSender.Conditional_F2(10038, 126729, 126748)) || DynAbs.Tracing.TraceSender.Conditional_F3(10038, 126751, 126786))) ? f_10038_126729_126748(_options) : OutputKind.DynamicallyLinkedLibrary
                    ;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 126805, 127019);

                    moduleBeingBuilt = f_10038_126824_127018(f_10038_126868_126882(), emitOptions, kind, moduleProps, manifestResources);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 126343, 127034);
                }

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 127050, 127204) || true) && (debugEntryPoint != null)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 127050, 127204);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 127111, 127189);

                    f_10038_127111_127188(moduleBeingBuilt, f_10038_127147_127174(debugEntryPoint), diagnostics);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 127050, 127204);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 127220, 127276);

                moduleBeingBuilt.SourceLinkStreamOpt = sourceLinkStream;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 127292, 127413) || true) && (embeddedTexts != null)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 127292, 127413);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 127351, 127398);

                    moduleBeingBuilt.EmbeddedTexts = embeddedTexts;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 127292, 127413);
                }

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 127489, 127664) || true) && (testData != null)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 127489, 127664);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 127543, 127596);

                    f_10038_127543_127595(moduleBeingBuilt, testData.Methods);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 127614, 127649);

                    testData.Module = moduleBeingBuilt;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 127489, 127664);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 127680, 127704);

                return moduleBeingBuilt;
                DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 125292, 127715);

                bool
                f_10038_125768_125781_M(bool
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 125768, 125781);
                    return return_v;
                }


                bool
                f_10038_125785_125800(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param)
                {
                    var return_v = this_param.HasCodeToEmit();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 125785, 125800);
                    return return_v;
                }


                int
                f_10038_125755_125801(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 125755, 125801);
                    return 0;
                }


                string?
                f_10038_125845_125896(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param, Microsoft.CodeAnalysis.Emit.EmitOptions
                emitOptions, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.GetRuntimeMetadataVersion(emitOptions, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 125845, 125896);
                    return return_v;
                }


                Microsoft.Cci.ModulePropertiesForSerialization
                f_10038_126034_126103(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param, Microsoft.CodeAnalysis.Emit.EmitOptions
                emitOptions, string
                targetRuntimeVersion)
                {
                    var return_v = this_param.ConstructModuleSerializationProperties(emitOptions, targetRuntimeVersion);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 126034, 126103);
                    return return_v;
                }


                System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.ResourceDescription>
                f_10038_126203_126264()
                {
                    var return_v = SpecializedCollections.EmptyEnumerable<ResourceDescription>();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 126203, 126264);
                    return return_v;
                }


                Microsoft.CodeAnalysis.OutputKind
                f_10038_126347_126366(Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions
                this_param)
                {
                    var return_v = this_param.OutputKind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 126347, 126366);
                    return return_v;
                }


                bool
                f_10038_126347_126380(Microsoft.CodeAnalysis.OutputKind
                kind)
                {
                    var return_v = kind.IsNetModule();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 126347, 126380);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.ModuleSymbol
                f_10038_126498_126510()
                {
                    var return_v = SourceModule;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 126498, 126510);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Emit.PENetModuleBuilder
                f_10038_126433_126619(Microsoft.CodeAnalysis.CSharp.Symbols.ModuleSymbol
                sourceModule, Microsoft.CodeAnalysis.Emit.EmitOptions
                emitOptions, Microsoft.Cci.ModulePropertiesForSerialization
                serializationProperties, System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.ResourceDescription>
                manifestResources)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.Emit.PENetModuleBuilder((Microsoft.CodeAnalysis.CSharp.Symbols.SourceModuleSymbol)sourceModule, emitOptions, serializationProperties, manifestResources);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 126433, 126619);
                    return return_v;
                }


                Microsoft.CodeAnalysis.OutputKind
                f_10038_126697_126716(Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions
                this_param)
                {
                    var return_v = this_param.OutputKind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 126697, 126716);
                    return return_v;
                }


                bool
                f_10038_126697_126726(Microsoft.CodeAnalysis.OutputKind
                value)
                {
                    var return_v = value.IsValid();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 126697, 126726);
                    return return_v;
                }


                Microsoft.CodeAnalysis.OutputKind
                f_10038_126729_126748(Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions
                this_param)
                {
                    var return_v = this_param.OutputKind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 126729, 126748);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.SourceAssemblySymbol
                f_10038_126868_126882()
                {
                    var return_v = SourceAssembly;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 126868, 126882);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Emit.PEAssemblyBuilder
                f_10038_126824_127018(Microsoft.CodeAnalysis.CSharp.Symbols.SourceAssemblySymbol
                sourceAssembly, Microsoft.CodeAnalysis.Emit.EmitOptions
                emitOptions, Microsoft.CodeAnalysis.OutputKind
                outputKind, Microsoft.Cci.ModulePropertiesForSerialization
                serializationProperties, System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.ResourceDescription>
                manifestResources)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.Emit.PEAssemblyBuilder(sourceAssembly, emitOptions, outputKind, serializationProperties, manifestResources);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 126824, 127018);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol?
                f_10038_127147_127174(Microsoft.CodeAnalysis.IMethodSymbol
                symbol)
                {
                    var return_v = symbol.GetSymbol();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 127147, 127174);
                    return return_v;
                }


                int
                f_10038_127111_127188(Microsoft.CodeAnalysis.CSharp.Emit.PEModuleBuilder
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                method, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    this_param.SetDebugEntryPoint((Microsoft.CodeAnalysis.Symbols.IMethodSymbolInternal)method, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 127111, 127188);
                    return 0;
                }


                int
                f_10038_127543_127595(Microsoft.CodeAnalysis.CSharp.Emit.PEModuleBuilder
                this_param, System.Collections.Concurrent.ConcurrentDictionary<Microsoft.CodeAnalysis.Symbols.IMethodSymbolInternal, Microsoft.CodeAnalysis.CodeGen.CompilationTestData.MethodData>
                methods)
                {
                    this_param.SetMethodTestData(methods);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 127543, 127595);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 125292, 127715);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 125292, 127715);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        internal override bool CompileMethods(
                    CommonPEModuleBuilder moduleBuilder,
                    bool emittingPdb,
                    bool emitMetadataOnly,
                    bool emitTestCoverageData,
                    DiagnosticBag diagnostics,
                    Predicate<ISymbolInternal>? filterOpt,
                    CancellationToken cancellationToken)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 127727, 131566);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 128363, 128409);

                PooledHashSet<int>?
                excludeDiagnostics = null
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 128423, 128627) || true) && (emitMetadataOnly)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 128423, 128627);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 128477, 128531);

                    excludeDiagnostics = f_10038_128498_128530();
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 128549, 128612);

                    f_10038_128549_128611(excludeDiagnostics, ErrorCode.ERR_ConcreteMissingBody);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 128423, 128627);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 128641, 128816);

                bool
                hasDeclarationErrors = !f_10038_128670_128815(this, diagnostics, f_10038_128710_128775(this, CompilationStage.Declare, true, cancellationToken), excludeDiagnostics, cancellationToken)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 128830, 128857);

                f_10038_128849_128856(DynAbs.Tracing.TraceSender.TraceConditionalAccessExpression(excludeDiagnostics, 10038, 128830, 128856));
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 128991, 129045);

                var
                moduleBeingBuilt = (PEModuleBuilder)moduleBuilder
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 129061, 131527) || true) && (emitMetadataOnly)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 129061, 131527);

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 129115, 129213) || true) && (hasDeclarationErrors)
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 129115, 129213);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 129181, 129194);

                        return false;
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 129115, 129213);
                    }

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 129233, 129804) || true) && (f_10038_129237_129283(moduleBeingBuilt.SourceModule))
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 129233, 129804);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 129450, 129748);

                        f_10038_129450_129747(                    // If there were errors but no declaration diagnostics, explicitly add a "Failed to emit module" error.
                                            diagnostics, ErrorCode.ERR_ModuleEmitFailure, NoLocation.Singleton, f_10038_129521_129562(((Cci.INamedEntity)moduleBeingBuilt)), f_10038_129589_129746(nameof(CodeAnalysisResources.ModuleHasInvalidAttributes), f_10038_129677_129714(), typeof(CodeAnalysisResources)));
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 129772, 129785);

                        return false;
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 129233, 129804);
                    }
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 129824, 129921);

                    f_10038_129824_129920(this, moduleBeingBuilt, cancellationToken);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 129061, 131527);
                }

                else

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 129061, 131527);

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 129987, 130233) || true) && ((emittingPdb || (DynAbs.Tracing.TraceSender.Expression_False(10038, 129992, 130027) || emitTestCoverageData)) && (DynAbs.Tracing.TraceSender.Expression_True(10038, 129991, 130159) && !f_10038_130054_130159(this, moduleBeingBuilt.DebugDocumentsBuilder, f_10038_130115_130145(moduleBeingBuilt), diagnostics)))
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 129987, 130233);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 130201, 130214);

                        return false;
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 129987, 130233);
                    }
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 130515, 130584);

                    DiagnosticBag?
                    methodBodyDiagnosticBag = f_10038_130556_130583()
                    ;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 130604, 130987);

                    f_10038_130604_130986(this, moduleBeingBuilt, emittingPdb, emitTestCoverageData, hasDeclarationErrors, diagnostics: methodBodyDiagnosticBag, filterOpt: filterOpt, cancellationToken: cancellationToken);

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 131007, 131230) || true) && (!hasDeclarationErrors && (DynAbs.Tracing.TraceSender.Expression_True(10038, 131011, 131100) && !f_10038_131037_131100(methodBodyDiagnosticBag)))
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 131007, 131230);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 131142, 131211);

                        f_10038_131142_131210(this, moduleBeingBuilt, methodBodyDiagnosticBag);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 131007, 131230);
                    }
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 131250, 131372);

                    bool
                    hasMethodBodyError = !f_10038_131277_131371(this, diagnostics, ref methodBodyDiagnosticBag, cancellationToken)
                    ;

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 131392, 131512) || true) && (hasDeclarationErrors || (DynAbs.Tracing.TraceSender.Expression_False(10038, 131396, 131438) || hasMethodBodyError))
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 131392, 131512);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 131480, 131493);

                        return false;
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 131392, 131512);
                    }
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 129061, 131527);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 131543, 131555);

                return true;
                DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 127727, 131566);

                Microsoft.CodeAnalysis.PooledObjects.PooledHashSet<int>
                f_10038_128498_128530()
                {
                    var return_v = PooledHashSet<int>.GetInstance();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 128498, 128530);
                    return return_v;
                }


                bool
                f_10038_128549_128611(Microsoft.CodeAnalysis.PooledObjects.PooledHashSet<int>
                this_param, Microsoft.CodeAnalysis.CSharp.ErrorCode
                item)
                {
                    var return_v = this_param.Add((int)item);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 128549, 128611);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Diagnostic>
                f_10038_128710_128775(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param, Microsoft.CodeAnalysis.CompilationStage
                stage, bool
                includeEarlierStages, System.Threading.CancellationToken
                cancellationToken)
                {
                    var return_v = this_param.GetDiagnostics(stage, includeEarlierStages, cancellationToken);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 128710, 128775);
                    return return_v;
                }


                bool
                f_10038_128670_128815(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param, Microsoft.CodeAnalysis.DiagnosticBag
                accumulator, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Diagnostic>
                incoming, Microsoft.CodeAnalysis.PooledObjects.PooledHashSet<int>?
                exclude, System.Threading.CancellationToken
                cancellationToken)
                {
                    var return_v = this_param.FilterAndAppendDiagnostics(accumulator, (System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.Diagnostic>)incoming, (System.Collections.Generic.HashSet<int>?)exclude, cancellationToken);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 128670, 128815);
                    return return_v;
                }


                int
                f_10038_128849_128856(Microsoft.CodeAnalysis.PooledObjects.PooledHashSet<int>
                this_param)
                {
                    this_param?.Free();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 128849, 128856);
                    return 0;
                }


                bool
                f_10038_129237_129283(Microsoft.CodeAnalysis.CSharp.Symbols.SourceModuleSymbol
                this_param)
                {
                    var return_v = this_param.HasBadAttributes;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 129237, 129283);
                    return return_v;
                }


                string?
                f_10038_129521_129562(Microsoft.Cci.INamedEntity
                this_param)
                {
                    var return_v = this_param.Name;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 129521, 129562);
                    return return_v;
                }


                System.Resources.ResourceManager
                f_10038_129677_129714()
                {
                    var return_v = CodeAnalysisResources.ResourceManager;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 129677, 129714);
                    return return_v;
                }


                Microsoft.CodeAnalysis.LocalizableResourceString
                f_10038_129589_129746(string
                nameOfLocalizableResource, System.Resources.ResourceManager
                resourceManager, System.Type
                resourceSource)
                {
                    var return_v = new Microsoft.CodeAnalysis.LocalizableResourceString(nameOfLocalizableResource, resourceManager, resourceSource);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 129589, 129746);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo
                f_10038_129450_129747(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, Microsoft.CodeAnalysis.Location
                location, params object[]
                args)
                {
                    var return_v = diagnostics.Add(code, location, args);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 129450, 129747);
                    return return_v;
                }


                int
                f_10038_129824_129920(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                compilation, Microsoft.CodeAnalysis.CSharp.Emit.PEModuleBuilder
                moduleBeingBuilt, System.Threading.CancellationToken
                cancellationToken)
                {
                    SynthesizedMetadataCompiler.ProcessSynthesizedMembers(compilation, moduleBeingBuilt, cancellationToken);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 129824, 129920);
                    return 0;
                }


                System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.EmbeddedText>
                f_10038_130115_130145(Microsoft.CodeAnalysis.CSharp.Emit.PEModuleBuilder
                this_param)
                {
                    var return_v = this_param.EmbeddedTexts;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 130115, 130145);
                    return return_v;
                }


                bool
                f_10038_130054_130159(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param, Microsoft.CodeAnalysis.Emit.DebugDocumentsBuilder
                documentsBuilder, System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.EmbeddedText>
                embeddedTexts, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.CreateDebugDocuments(documentsBuilder, embeddedTexts, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 130054, 130159);
                    return return_v;
                }


                Microsoft.CodeAnalysis.DiagnosticBag
                f_10038_130556_130583()
                {
                    var return_v = DiagnosticBag.GetInstance();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 130556, 130583);
                    return return_v;
                }


                int
                f_10038_130604_130986(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                compilation, Microsoft.CodeAnalysis.CSharp.Emit.PEModuleBuilder
                moduleBeingBuiltOpt, bool
                emittingPdb, bool
                emitTestCoverageData, bool
                hasDeclarationErrors, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, System.Predicate<Microsoft.CodeAnalysis.Symbols.ISymbolInternal>?
                filterOpt, System.Threading.CancellationToken
                cancellationToken)
                {
                    MethodCompiler.CompileMethodBodies(compilation, moduleBeingBuiltOpt, emittingPdb, emitTestCoverageData, hasDeclarationErrors, diagnostics: diagnostics, filterOpt: (System.Predicate<Microsoft.CodeAnalysis.CSharp.Symbol>?)filterOpt, cancellationToken: cancellationToken);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 130604, 130986);
                    return 0;
                }


                bool
                f_10038_131037_131100(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = CommonCompiler.HasUnsuppressableErrors(diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 131037, 131100);
                    return return_v;
                }


                int
                f_10038_131142_131210(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param, Microsoft.CodeAnalysis.CSharp.Emit.PEModuleBuilder
                moduleBeingBuilt, Microsoft.CodeAnalysis.DiagnosticBag
                methodBodyDiagnosticBag)
                {
                    this_param.GenerateModuleInitializer(moduleBeingBuilt, methodBodyDiagnosticBag);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 131142, 131210);
                    return 0;
                }


                bool
                f_10038_131277_131371(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param, Microsoft.CodeAnalysis.DiagnosticBag
                accumulator, ref Microsoft.CodeAnalysis.DiagnosticBag
                incoming, System.Threading.CancellationToken
                cancellationToken)
                {
                    var return_v = this_param.FilterAndAppendAndFreeDiagnostics(accumulator, ref incoming, cancellationToken);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 131277, 131371);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 127727, 131566);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 127727, 131566);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private void GenerateModuleInitializer(PEModuleBuilder moduleBeingBuilt, DiagnosticBag methodBodyDiagnosticBag)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 131578, 132718);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 131714, 131758);

                f_10038_131714_131757(_declarationDiagnosticsFrozen);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 131774, 132707) || true) && (_moduleInitializerMethods is object)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 131774, 132707);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 131847, 131989);

                    var
                    ilBuilder = f_10038_131863_131988(moduleBeingBuilt, f_10038_131895_131936(slotAllocator: null), OptimizationLevel.Release, areLocalsZeroed: false)
                    ;
                    try
                    {
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 132009, 132505);
                        foreach (MethodSymbol method in f_10038_132041_132125_I(f_10038_132041_132125(_moduleInitializerMethods, LexicalOrderSymbolComparer.Instance)))
                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 132009, 132505);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 132167, 132223);

                            f_10038_132167_132222(ilBuilder, ILOpCode.Call, stackAdjustment: 0);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 132247, 132486);

                            f_10038_132247_132485(
                                                ilBuilder, f_10038_132293_132375(moduleBeingBuilt, method, methodBodyDiagnosticBag, needDeclaration: true), f_10038_132402_132434(CSharpSyntaxTree.Dummy), methodBodyDiagnosticBag);
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 132009, 132505);
                        }
                    }
                    catch (System.Exception)
                    {
                        DynAbs.Tracing.TraceSender.TraceExitLoopByException(10038, 1, 497);
                        throw;
                    }
                    finally
                    {
                        DynAbs.Tracing.TraceSender.TraceExitLoop(10038, 1, 497);
                    }
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 132525, 132557);

                    f_10038_132525_132556(
                                    ilBuilder, isVoid: true);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 132575, 132595);

                    f_10038_132575_132594(ilBuilder);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 132613, 132692);

                    f_10038_132613_132691(f_10038_132613_132644(moduleBeingBuilt), ilBuilder.RealizedIL);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 131774, 132707);
                }
                DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 131578, 132718);

                int
                f_10038_131714_131757(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 131714, 131757);
                    return 0;
                }


                Microsoft.CodeAnalysis.CodeGen.LocalSlotManager
                f_10038_131895_131936(Microsoft.CodeAnalysis.CodeGen.VariableSlotAllocator?
                slotAllocator)
                {
                    var return_v = new Microsoft.CodeAnalysis.CodeGen.LocalSlotManager(slotAllocator: slotAllocator);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 131895, 131936);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CodeGen.ILBuilder
                f_10038_131863_131988(Microsoft.CodeAnalysis.CSharp.Emit.PEModuleBuilder
                module, Microsoft.CodeAnalysis.CodeGen.LocalSlotManager
                localSlotManager, Microsoft.CodeAnalysis.OptimizationLevel
                optimizations, bool
                areLocalsZeroed)
                {
                    var return_v = new Microsoft.CodeAnalysis.CodeGen.ILBuilder((Microsoft.CodeAnalysis.CodeGen.ITokenDeferral)module, localSlotManager, optimizations, areLocalsZeroed: areLocalsZeroed);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 131863, 131988);
                    return return_v;
                }


                System.Linq.IOrderedEnumerable<Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol>
                f_10038_132041_132125(Roslyn.Utilities.ConcurrentSet<Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol>
                source, Microsoft.CodeAnalysis.CSharp.LexicalOrderSymbolComparer
                comparer)
                {
                    var return_v = source.OrderBy<Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol>((System.Collections.Generic.IComparer<Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol>)comparer);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 132041, 132125);
                    return return_v;
                }


                int
                f_10038_132167_132222(Microsoft.CodeAnalysis.CodeGen.ILBuilder
                this_param, System.Reflection.Metadata.ILOpCode
                code, int
                stackAdjustment)
                {
                    this_param.EmitOpCode(code, stackAdjustment: stackAdjustment);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 132167, 132222);
                    return 0;
                }


                Microsoft.Cci.IMethodReference
                f_10038_132293_132375(Microsoft.CodeAnalysis.CSharp.Emit.PEModuleBuilder
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                symbol, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, bool
                needDeclaration)
                {
                    var return_v = this_param.Translate(symbol, diagnostics, needDeclaration: needDeclaration);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 132293, 132375);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SyntaxNode
                f_10038_132402_132434(Microsoft.CodeAnalysis.SyntaxTree
                this_param)
                {
                    var return_v = this_param.GetRoot();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 132402, 132434);
                    return return_v;
                }


                int
                f_10038_132247_132485(Microsoft.CodeAnalysis.CodeGen.ILBuilder
                this_param, Microsoft.Cci.IMethodReference
                value, Microsoft.CodeAnalysis.SyntaxNode
                syntaxNode, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    this_param.EmitToken((Microsoft.Cci.ISignature)value, syntaxNode, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 132247, 132485);
                    return 0;
                }


                System.Linq.IOrderedEnumerable<Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol>
                f_10038_132041_132125_I(System.Linq.IOrderedEnumerable<Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol>
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 132041, 132125);
                    return return_v;
                }


                int
                f_10038_132525_132556(Microsoft.CodeAnalysis.CodeGen.ILBuilder
                this_param, bool
                isVoid)
                {
                    this_param.EmitRet(isVoid: isVoid);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 132525, 132556);
                    return 0;
                }


                int
                f_10038_132575_132594(Microsoft.CodeAnalysis.CodeGen.ILBuilder
                this_param)
                {
                    this_param.Realize();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 132575, 132594);
                    return 0;
                }


                Microsoft.Cci.RootModuleType
                f_10038_132613_132644(Microsoft.CodeAnalysis.CSharp.Emit.PEModuleBuilder
                this_param)
                {
                    var return_v = this_param.RootModuleType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 132613, 132644);
                    return return_v;
                }


                int
                f_10038_132613_132691(Microsoft.Cci.RootModuleType
                this_param, System.Collections.Immutable.ImmutableArray<byte>
                il)
                {
                    this_param.SetStaticConstructorBody(il);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 132613, 132691);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 131578, 132718);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 131578, 132718);
            }
        }

        internal override bool GenerateResourcesAndDocumentationComments(
                    CommonPEModuleBuilder moduleBuilder,
                    Stream? xmlDocStream,
                    Stream? win32Resources,
                    string? outputNameOverride,
                    DiagnosticBag diagnostics,
                    CancellationToken cancellationToken)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 132730, 134402);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 133164, 133229);

                DiagnosticBag?
                resourceDiagnostics = f_10038_133201_133228()
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 133245, 133317);

                f_10038_133245_133316(this, moduleBuilder, win32Resources, resourceDiagnostics);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 133333, 133626);

                // Lafhis
                var temp = f_10038_133434_133448().Modules;
                f_10038_133333_133625(this, moduleBuilder.ManifestResources, f_10038_133434_133484(f_10038_133434_133464(ref temp, 1), m => m.Name), f_10038_133540_133586(this, resourceDiagnostics), resourceDiagnostics);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 133642, 133799) || true) && (!f_10038_133647_133737(this, diagnostics, ref resourceDiagnostics, cancellationToken))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 133642, 133799);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 133771, 133784);

                    return false;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 133642, 133799);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 133815, 133864);

                cancellationToken.ThrowIfCancellationRequested();
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 133971, 134031);

                DiagnosticBag?
                xmlDiagnostics = f_10038_134003_134030()
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 134047, 134141);

                string?
                assemblyName = f_10038_134070_134140(outputNameOverride, extension: null)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 134155, 134282);

                f_10038_134155_134281(this, assemblyName, xmlDocStream, xmlDiagnostics, cancellationToken);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 134298, 134391);

                return f_10038_134305_134390(this, diagnostics, ref xmlDiagnostics, cancellationToken);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 132730, 134402);

                Microsoft.CodeAnalysis.DiagnosticBag
                f_10038_133201_133228()
                {
                    var return_v = DiagnosticBag.GetInstance();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 133201, 133228);
                    return return_v;
                }


                int
                f_10038_133245_133316(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param, Microsoft.CodeAnalysis.Emit.CommonPEModuleBuilder
                moduleBeingBuilt, System.IO.Stream?
                win32Resources, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    this_param.SetupWin32Resources(moduleBeingBuilt, win32Resources, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 133245, 133316);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.SourceAssemblySymbol
                f_10038_133434_133448()
                {
                    var return_v = SourceAssembly;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 133434, 133448);
                    return return_v;
                }


                System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.CSharp.Symbols.ModuleSymbol>
                f_10038_133434_133464(ref System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.ModuleSymbol>
                source, int
                count)
                {
                    var return_v = source.Skip<Microsoft.CodeAnalysis.CSharp.Symbols.ModuleSymbol>(count);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 133434, 133464);
                    return return_v;
                }


                System.Collections.Generic.IEnumerable<string>
                f_10038_133434_133484(System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.CSharp.Symbols.ModuleSymbol>
                source, System.Func<Microsoft.CodeAnalysis.CSharp.Symbols.ModuleSymbol, string>
                selector)
                {
                    var return_v = source.Select<Microsoft.CodeAnalysis.CSharp.Symbols.ModuleSymbol, string>(selector);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 133434, 133484);
                    return return_v;
                }


                System.Collections.Generic.IEnumerable<string>
                f_10038_133540_133586(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.AddedModulesResourceNames(diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 133540, 133586);
                    return return_v;
                }


                int
                f_10038_133333_133625(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param, System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.ResourceDescription>
                manifestResources, System.Collections.Generic.IEnumerable<string>
                addedModuleNames, System.Collections.Generic.IEnumerable<string>
                addedModuleResourceNames, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    this_param.ReportManifestResourceDuplicates(manifestResources, addedModuleNames, addedModuleResourceNames, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 133333, 133625);
                    return 0;
                }


                bool
                f_10038_133647_133737(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param, Microsoft.CodeAnalysis.DiagnosticBag
                accumulator, ref Microsoft.CodeAnalysis.DiagnosticBag
                incoming, System.Threading.CancellationToken
                cancellationToken)
                {
                    var return_v = this_param.FilterAndAppendAndFreeDiagnostics(accumulator, ref incoming, cancellationToken);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 133647, 133737);
                    return return_v;
                }


                Microsoft.CodeAnalysis.DiagnosticBag
                f_10038_134003_134030()
                {
                    var return_v = DiagnosticBag.GetInstance();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 134003, 134030);
                    return return_v;
                }


                string?
                f_10038_134070_134140(string?
                path, string?
                extension)
                {
                    var return_v = FileNameUtilities.ChangeExtension(path, extension: extension);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 134070, 134140);
                    return return_v;
                }


                int
                f_10038_134155_134281(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                compilation, string?
                assemblyName, System.IO.Stream?
                xmlDocStream, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, System.Threading.CancellationToken
                cancellationToken)
                {
                    DocumentationCommentCompiler.WriteDocumentationCommentXml(compilation, assemblyName, xmlDocStream, diagnostics, cancellationToken);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 134155, 134281);
                    return 0;
                }


                bool
                f_10038_134305_134390(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param, Microsoft.CodeAnalysis.DiagnosticBag
                accumulator, ref Microsoft.CodeAnalysis.DiagnosticBag
                incoming, System.Threading.CancellationToken
                cancellationToken)
                {
                    var return_v = this_param.FilterAndAppendAndFreeDiagnostics(accumulator, ref incoming, cancellationToken);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 134305, 134390);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 132730, 134402);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 132730, 134402);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private IEnumerable<string> AddedModulesResourceNames(DiagnosticBag diagnostics)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 134414, 135318);

                var listYield = new List<String>();
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 134519, 134581);

                ImmutableArray<ModuleSymbol>
                modules = f_10038_134558_134580(f_10038_134558_134572())
                ;
                try
                {
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 134606, 134611);

                    for (int
        i = 1
        ; (DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 134597, 135307) || true) && (i < modules.Length)
        ; DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 134633, 134636)
        , i++, DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 134597, 135307))

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 134597, 135307);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 134670, 134725);

                        var
                        m = (Symbols.Metadata.PE.PEModuleSymbol)modules[i]
                        ;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 134743, 134786);

                        ImmutableArray<EmbeddedResource>
                        resources
                        = default(ImmutableArray<EmbeddedResource>);

                        try
                        {
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 134850, 134901);

                            resources = f_10038_134862_134900(f_10038_134862_134870(m));
                        }
                        catch (BadImageFormatException)
                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCatch(10038, 134938, 135150);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 135010, 135100);

                            f_10038_135010_135099(diagnostics, f_10038_135026_135076(ErrorCode.ERR_BindToBogus, m), NoLocation.Singleton);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 135122, 135131);

                            continue;
                            DynAbs.Tracing.TraceSender.TraceExitCatch(10038, 134938, 135150);
                        }
                        try
                        {
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 135170, 135292);
                            foreach (var resource in f_10038_135195_135204_I(resources))
                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 135170, 135292);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 135246, 135273);

                                listYield.Add(resource.Name);
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 135170, 135292);
                            }
                        }
                        catch (System.Exception)
                        {
                            DynAbs.Tracing.TraceSender.TraceExitLoopByException(10038, 1, 123);
                            throw;
                        }
                        finally
                        {
                            DynAbs.Tracing.TraceSender.TraceExitLoop(10038, 1, 123);
                        }
                    }
                }
                catch (System.Exception)
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoopByException(10038, 1, 711);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoop(10038, 1, 711);
                }
                DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 134414, 135318);

                return listYield;

                Microsoft.CodeAnalysis.CSharp.Symbols.SourceAssemblySymbol
                f_10038_134558_134572()
                {
                    var return_v = SourceAssembly;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 134558, 134572);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.ModuleSymbol>
                f_10038_134558_134580(Microsoft.CodeAnalysis.CSharp.Symbols.SourceAssemblySymbol
                this_param)
                {
                    var return_v = this_param.Modules;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 134558, 134580);
                    return return_v;
                }


                Microsoft.CodeAnalysis.PEModule
                f_10038_134862_134870(Microsoft.CodeAnalysis.CSharp.Symbols.Metadata.PE.PEModuleSymbol
                this_param)
                {
                    var return_v = this_param.Module;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 134862, 134870);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.EmbeddedResource>
                f_10038_134862_134900(Microsoft.CodeAnalysis.PEModule
                this_param)
                {
                    var return_v = this_param.GetEmbeddedResourcesOrThrow();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 134862, 134900);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo
                f_10038_135026_135076(Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, params object[]
                args)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo(code, args);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 135026, 135076);
                    return return_v;
                }


                int
                f_10038_135010_135099(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo
                info, Microsoft.CodeAnalysis.Location
                location)
                {
                    diagnostics.Add((Microsoft.CodeAnalysis.DiagnosticInfo)info, location);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 135010, 135099);
                    return 0;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.EmbeddedResource>
                f_10038_135195_135204_I(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.EmbeddedResource>
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 135195, 135204);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 134414, 135318);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 134414, 135318);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        internal override EmitDifferenceResult EmitDifference(
                    EmitBaseline baseline,
                    IEnumerable<SemanticEdit> edits,
                    Func<ISymbol, bool> isAddedSymbol,
                    Stream metadataStream,
                    Stream ilStream,
                    Stream pdbStream,
                    ICollection<MethodDefinitionHandle> updatedMethods,
                    CompilationTestData? testData,
                    CancellationToken cancellationToken)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 135330, 136131);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 135795, 136120);

                return f_10038_135802_136119(this, baseline, edits, isAddedSymbol, metadataStream, ilStream, pdbStream, updatedMethods, testData, cancellationToken);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 135330, 136131);

                Microsoft.CodeAnalysis.Emit.EmitDifferenceResult
                f_10038_135802_136119(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                compilation, Microsoft.CodeAnalysis.Emit.EmitBaseline
                baseline, System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.Emit.SemanticEdit>
                edits, System.Func<Microsoft.CodeAnalysis.ISymbol, bool>
                isAddedSymbol, System.IO.Stream
                metadataStream, System.IO.Stream
                ilStream, System.IO.Stream
                pdbStream, System.Collections.Generic.ICollection<System.Reflection.Metadata.MethodDefinitionHandle>
                updatedMethods, Microsoft.CodeAnalysis.CodeGen.CompilationTestData?
                testData, System.Threading.CancellationToken
                cancellationToken)
                {
                    var return_v = EmitHelpers.EmitDifference(compilation, baseline, edits, isAddedSymbol, metadataStream, ilStream, pdbStream, updatedMethods, testData, cancellationToken);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 135802, 136119);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 135330, 136131);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 135330, 136131);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        internal string? GetRuntimeMetadataVersion(EmitOptions emitOptions, DiagnosticBag diagnostics)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 136143, 136903);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 136262, 136328);

                string?
                runtimeMDVersion = f_10038_136289_136327(this, emitOptions)
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 136342, 136443) || true) && (runtimeMDVersion != null)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 136342, 136443);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 136404, 136428);

                    return runtimeMDVersion;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 136342, 136443);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 136459, 136532);

                DiagnosticBag?
                runtimeMDVersionDiagnostics = f_10038_136504_136531()
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 136546, 136640);

                f_10038_136546_136639(runtimeMDVersionDiagnostics, ErrorCode.WRN_NoRuntimeMetadataVersion, NoLocation.Singleton);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 136654, 136823) || true) && (!f_10038_136659_136762(this, diagnostics, ref runtimeMDVersionDiagnostics, CancellationToken.None))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 136654, 136823);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 136796, 136808);

                    return null;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 136654, 136823);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 136839, 136859);

                return string.Empty;
                DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 136143, 136903);

                string?
                f_10038_136289_136327(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param, Microsoft.CodeAnalysis.Emit.EmitOptions
                emitOptions)
                {
                    var return_v = this_param.GetRuntimeMetadataVersion(emitOptions);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 136289, 136327);
                    return return_v;
                }


                Microsoft.CodeAnalysis.DiagnosticBag
                f_10038_136504_136531()
                {
                    var return_v = DiagnosticBag.GetInstance();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 136504, 136531);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo
                f_10038_136546_136639(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, Microsoft.CodeAnalysis.Location
                location)
                {
                    var return_v = diagnostics.Add(code, location);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 136546, 136639);
                    return return_v;
                }


                bool
                f_10038_136659_136762(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param, Microsoft.CodeAnalysis.DiagnosticBag
                accumulator, ref Microsoft.CodeAnalysis.DiagnosticBag
                incoming, System.Threading.CancellationToken
                cancellationToken)
                {
                    var return_v = this_param.FilterAndAppendAndFreeDiagnostics(accumulator, ref incoming, cancellationToken);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 136659, 136762);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 136143, 136903);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 136143, 136903);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private string? GetRuntimeMetadataVersion(EmitOptions emitOptions)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 136915, 137302);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 137006, 137084);

                var
                corAssembly = f_10038_137024_137043(f_10038_137024_137032()) as Symbols.Metadata.PE.PEAssemblySymbol
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 137100, 137233) || true) && (corAssembly is object)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 137100, 137233);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 137159, 137218);

                    return f_10038_137166_137217(f_10038_137166_137201(f_10038_137166_137186(corAssembly)));
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 137100, 137233);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 137249, 137291);

                return f_10038_137256_137290(emitOptions);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 136915, 137302);

                Microsoft.CodeAnalysis.CSharp.Symbols.AssemblySymbol
                f_10038_137024_137032()
                {
                    var return_v = Assembly;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 137024, 137032);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.AssemblySymbol
                f_10038_137024_137043(Microsoft.CodeAnalysis.CSharp.Symbols.AssemblySymbol
                this_param)
                {
                    var return_v = this_param.CorLibrary;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 137024, 137043);
                    return return_v;
                }


                Microsoft.CodeAnalysis.PEAssembly
                f_10038_137166_137186(Microsoft.CodeAnalysis.CSharp.Symbols.Metadata.PE.PEAssemblySymbol
                this_param)
                {
                    var return_v = this_param.Assembly;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 137166, 137186);
                    return return_v;
                }


                Microsoft.CodeAnalysis.PEModule
                f_10038_137166_137201(Microsoft.CodeAnalysis.PEAssembly
                this_param)
                {
                    var return_v = this_param.ManifestModule;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 137166, 137201);
                    return return_v;
                }


                string
                f_10038_137166_137217(Microsoft.CodeAnalysis.PEModule
                this_param)
                {
                    var return_v = this_param.MetadataVersion;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 137166, 137217);
                    return return_v;
                }


                string?
                f_10038_137256_137290(Microsoft.CodeAnalysis.Emit.EmitOptions
                this_param)
                {
                    var return_v = this_param.RuntimeMetadataVersion;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 137256, 137290);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 136915, 137302);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 136915, 137302);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        internal override void AddDebugSourceDocumentsForChecksumDirectives(
                    DebugDocumentsBuilder documentsBuilder,
                    SyntaxTree tree,
                    DiagnosticBag diagnostics)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 137314, 140167);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 137530, 137735);

                var
                checksumDirectives = f_10038_137555_137734(f_10038_137555_137569(tree), d => d.Kind() == SyntaxKind.PragmaChecksumDirectiveTrivia &&
                                                                                 !d.ContainsDiagnostics)
                ;
                try
                {
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 137751, 140156);
                    foreach (var directive in f_10038_137777_137795_I(checksumDirectives))
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 137751, 140156);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 137829, 137900);

                        var
                        checksumDirective = (PragmaChecksumDirectiveTriviaSyntax)directive
                        ;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 137918, 137962);

                        var
                        path = checksumDirective.File.ValueText
                        ;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 137982, 138035);

                        var
                        checksumText = checksumDirective.Bytes.ValueText
                        ;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 138053, 138149);

                        var
                        normalizedPath = f_10038_138074_138148(documentsBuilder, path, basePath: f_10038_138134_138147(tree))
                        ;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 138167, 138255);

                        var
                        existingDoc = f_10038_138185_138254(documentsBuilder, normalizedPath)
                        ;

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 138442, 140141) || true) && (existingDoc != null)
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 138442, 140141);

                            if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 138816, 138932) || true) && (f_10038_138820_138850(existingDoc))
                            )

                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 138816, 138932);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 138900, 138909);

                                continue;
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 138816, 138932);
                            }
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 138956, 139001);

                            var
                            sourceInfo = f_10038_138973_139000(existingDoc)
                            ;

                            if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 139023, 139431) || true) && (f_10038_139027_139077(checksumText, sourceInfo.Checksum))
                            )

                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 139023, 139431);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 139127, 139183);

                                var
                                guid = Guid.Parse(checksumDirective.Guid.ValueText)
                                ;

                                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 139209, 139408) || true) && (guid == sourceInfo.ChecksumAlgorithmId)
                                )

                                {
                                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 139209, 139408);
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 139372, 139381);

                                    continue;
                                    DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 139209, 139408);
                                }
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 139023, 139431);
                            }
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 139581, 139677);

                            f_10038_139581_139676(
                                                // did not match to an existing document
                                                // produce a warning and ignore the pragma
                                                diagnostics, ErrorCode.WRN_ConflictingChecksum, f_10038_139632_139669(checksumDirective), path);
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 138442, 140141);
                        }

                        else

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 138442, 140141);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 139759, 140051);

                            var
                            newDocument = f_10038_139777_140050(normalizedPath, Cci.DebugSourceDocument.CorSymLanguageTypeCSharp, f_10038_139947_139978(checksumText), Guid.Parse(checksumDirective.Guid.ValueText))
                            ;
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 140075, 140122);

                            f_10038_140075_140121(
                                                documentsBuilder, newDocument);
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 138442, 140141);
                        }
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 137751, 140156);
                    }
                }
                catch (System.Exception)
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoopByException(10038, 1, 2406);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoop(10038, 1, 2406);
                }
                DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 137314, 140167);

                Microsoft.CodeAnalysis.SyntaxNode
                f_10038_137555_137569(Microsoft.CodeAnalysis.SyntaxTree
                this_param)
                {
                    var return_v = this_param.GetRoot();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 137555, 137569);
                    return return_v;
                }


                System.Collections.Generic.IList<Microsoft.CodeAnalysis.CSharp.Syntax.DirectiveTriviaSyntax>
                f_10038_137555_137734(Microsoft.CodeAnalysis.SyntaxNode
                node, System.Func<Microsoft.CodeAnalysis.CSharp.Syntax.DirectiveTriviaSyntax, bool>?
                filter)
                {
                    var return_v = node.GetDirectives(filter);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 137555, 137734);
                    return return_v;
                }


                string
                f_10038_138134_138147(Microsoft.CodeAnalysis.SyntaxTree
                this_param)
                {
                    var return_v = this_param.FilePath;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 138134, 138147);
                    return return_v;
                }


                string
                f_10038_138074_138148(Microsoft.CodeAnalysis.Emit.DebugDocumentsBuilder
                this_param, string
                path, string
                basePath)
                {
                    var return_v = this_param.NormalizeDebugDocumentPath(path, basePath: basePath);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 138074, 138148);
                    return return_v;
                }


                Microsoft.Cci.DebugSourceDocument
                f_10038_138185_138254(Microsoft.CodeAnalysis.Emit.DebugDocumentsBuilder
                this_param, string
                normalizedPath)
                {
                    var return_v = this_param.TryGetDebugDocumentForNormalizedPath(normalizedPath);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 138185, 138254);
                    return return_v;
                }


                bool
                f_10038_138820_138850(Microsoft.Cci.DebugSourceDocument
                this_param)
                {
                    var return_v = this_param.IsComputedChecksum;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 138820, 138850);
                    return return_v;
                }


                Microsoft.Cci.DebugSourceInfo
                f_10038_138973_139000(Microsoft.Cci.DebugSourceDocument
                this_param)
                {
                    var return_v = this_param.GetSourceInfo();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 138973, 139000);
                    return return_v;
                }


                bool
                f_10038_139027_139077(string
                bytesText, System.Collections.Immutable.ImmutableArray<byte>
                bytes)
                {
                    var return_v = ChecksumMatches(bytesText, bytes);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 139027, 139077);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SourceLocation
                f_10038_139632_139669(Microsoft.CodeAnalysis.CSharp.Syntax.PragmaChecksumDirectiveTriviaSyntax
                node)
                {
                    var return_v = new Microsoft.CodeAnalysis.SourceLocation((Microsoft.CodeAnalysis.SyntaxNode)node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 139632, 139669);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo
                f_10038_139581_139676(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, Microsoft.CodeAnalysis.SourceLocation
                location, params object[]
                args)
                {
                    var return_v = diagnostics.Add(code, (Microsoft.CodeAnalysis.Location)location, args);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 139581, 139676);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<byte>
                f_10038_139947_139978(string
                bytesText)
                {
                    var return_v = MakeChecksumBytes(bytesText);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 139947, 139978);
                    return return_v;
                }


                Microsoft.Cci.DebugSourceDocument
                f_10038_139777_140050(string
                location, System.Guid
                language, System.Collections.Immutable.ImmutableArray<byte>
                checksum, System.Guid
                algorithm)
                {
                    var return_v = new Microsoft.Cci.DebugSourceDocument(location, language, checksum, algorithm);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 139777, 140050);
                    return return_v;
                }


                int
                f_10038_140075_140121(Microsoft.CodeAnalysis.Emit.DebugDocumentsBuilder
                this_param, Microsoft.Cci.DebugSourceDocument
                document)
                {
                    this_param.AddDebugDocument(document);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 140075, 140121);
                    return 0;
                }


                System.Collections.Generic.IList<Microsoft.CodeAnalysis.CSharp.Syntax.DirectiveTriviaSyntax>
                f_10038_137777_137795_I(System.Collections.Generic.IList<Microsoft.CodeAnalysis.CSharp.Syntax.DirectiveTriviaSyntax>
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 137777, 137795);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 137314, 140167);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 137314, 140167);
            }
        }

        private static bool ChecksumMatches(string bytesText, ImmutableArray<byte> bytes)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterStaticMethod(10038, 140179, 140827);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 140285, 140387) || true) && (f_10038_140289_140305(bytesText) != bytes.Length * 2)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 140285, 140387);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 140359, 140372);

                    return false;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 140285, 140387);
                }
                try
                {
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 140412, 140417);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 140419, 140445);

                    for (int
        i = 0
        ,
        len = f_10038_140425_140441(bytesText) / 2
        ; (DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 140403, 140788) || true) && (i < len)
        ; DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 140456, 140459)
        , i++, DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 140403, 140788))

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 140403, 140788);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 140540, 140662);

                        var
                        b = f_10038_140548_140586(f_10038_140569_140585(bytesText, i * 2)) * 16 +
                        f_10038_140619_140661(f_10038_140640_140660(bytesText, i * 2 + 1))
                        ;

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 140682, 140773) || true) && (b != bytes[i])
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 140682, 140773);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 140741, 140754);

                            return false;
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 140682, 140773);
                        }
                    }
                }
                catch (System.Exception)
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoopByException(10038, 1, 386);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoop(10038, 1, 386);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 140804, 140816);

                return true;
                DynAbs.Tracing.TraceSender.TraceExitStaticMethod(10038, 140179, 140827);

                int
                f_10038_140289_140305(string
                this_param)
                {
                    var return_v = this_param.Length;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 140289, 140305);
                    return return_v;
                }


                int
                f_10038_140425_140441(string
                this_param)
                {
                    var return_v = this_param.Length;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 140425, 140441);
                    return return_v;
                }


                char
                f_10038_140569_140585(string
                this_param, int
                i0)
                {
                    var return_v = this_param[i0];
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 140569, 140585);
                    return return_v;
                }


                int
                f_10038_140548_140586(char
                c)
                {
                    var return_v = SyntaxFacts.HexValue(c);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 140548, 140586);
                    return return_v;
                }


                char
                f_10038_140640_140660(string
                this_param, int
                i0)
                {
                    var return_v = this_param[i0];
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 140640, 140660);
                    return return_v;
                }


                int
                f_10038_140619_140661(char
                c)
                {
                    var return_v = SyntaxFacts.HexValue(c);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 140619, 140661);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 140179, 140827);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 140179, 140827);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private static ImmutableArray<byte> MakeChecksumBytes(string bytesText)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterStaticMethod(10038, 140839, 141405);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 140935, 140969);

                int
                length = f_10038_140948_140964(bytesText) / 2
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 140983, 141036);

                var
                builder = f_10038_140997_141035(length)
                ;
                try
                {
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 141061, 141066);

                    for (int
        i = 0
        ; (DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 141052, 141342) || true) && (i < length)
        ; DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 141080, 141083)
        , i++, DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 141052, 141342))

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 141052, 141342);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 141164, 141286);

                        var
                        b = f_10038_141172_141210(f_10038_141193_141209(bytesText, i * 2)) * 16 +
                        f_10038_141243_141285(f_10038_141264_141284(bytesText, i * 2 + 1))
                        ;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 141306, 141327);

                        f_10038_141306_141326(
                                        builder, b);
                    }
                }
                catch (System.Exception)
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoopByException(10038, 1, 291);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoop(10038, 1, 291);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 141358, 141394);

                return f_10038_141365_141393(builder);
                DynAbs.Tracing.TraceSender.TraceExitStaticMethod(10038, 140839, 141405);

                int
                f_10038_140948_140964(string
                this_param)
                {
                    var return_v = this_param.Length;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 140948, 140964);
                    return return_v;
                }


                Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<byte>
                f_10038_140997_141035(int
                capacity)
                {
                    var return_v = ArrayBuilder<byte>.GetInstance(capacity);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 140997, 141035);
                    return return_v;
                }


                char
                f_10038_141193_141209(string
                this_param, int
                i0)
                {
                    var return_v = this_param[i0];
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 141193, 141209);
                    return return_v;
                }


                int
                f_10038_141172_141210(char
                c)
                {
                    var return_v = SyntaxFacts.HexValue(c);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 141172, 141210);
                    return return_v;
                }


                char
                f_10038_141264_141284(string
                this_param, int
                i0)
                {
                    var return_v = this_param[i0];
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 141264, 141284);
                    return return_v;
                }


                int
                f_10038_141243_141285(char
                c)
                {
                    var return_v = SyntaxFacts.HexValue(c);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 141243, 141285);
                    return return_v;
                }


                int
                f_10038_141306_141326(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<byte>
                this_param, int
                item)
                {
                    this_param.Add((byte)item);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 141306, 141326);
                    return 0;
                }


                System.Collections.Immutable.ImmutableArray<byte>
                f_10038_141365_141393(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<byte>
                this_param)
                {
                    var return_v = this_param.ToImmutableAndFree();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 141365, 141393);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 140839, 141405);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 140839, 141405);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        internal override Guid DebugSourceDocumentLanguageId
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 141470, 141521);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 141473, 141521);
                    return Cci.DebugSourceDocument.CorSymLanguageTypeCSharp; DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 141470, 141521);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 141470, 141521);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 141470, 141521);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        internal override bool HasCodeToEmit()
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 141534, 141893);
                try
                {
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 141597, 141853);
                    foreach (var syntaxTree in f_10038_141624_141640_I(f_10038_141624_141640(this)))
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 141597, 141853);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 141674, 141721);

                        var
                        unit = syntaxTree.GetCompilationUnitRoot()
                        ;

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 141739, 141838) || true) && (unit.Members.Count > 0)
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 141739, 141838);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 141807, 141819);

                            return true;
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 141739, 141838);
                        }
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 141597, 141853);
                    }
                }
                catch (System.Exception)
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoopByException(10038, 1, 257);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoop(10038, 1, 257);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 141869, 141882);

                return false;
                DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 141534, 141893);

                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.SyntaxTree>
                f_10038_141624_141640(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param)
                {
                    var return_v = this_param.SyntaxTrees;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 141624, 141640);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.SyntaxTree>
                f_10038_141624_141640_I(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.SyntaxTree>
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 141624, 141640);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 141534, 141893);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 141534, 141893);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }
        #endregion

        #region Common Members
        protected override Compilation CommonWithReferences(IEnumerable<MetadataReference> newReferences)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 141961, 142131);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 142083, 142120);

                return f_10038_142090_142119(this, newReferences);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 141961, 142131);

                Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                f_10038_142090_142119(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param, System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.MetadataReference>
                references)
                {
                    var return_v = this_param.WithReferences(references);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 142090, 142119);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 141961, 142131);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 141961, 142131);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        protected override Compilation CommonWithAssemblyName(string? assemblyName)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 142143, 142292);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 142243, 142281);

                return f_10038_142250_142280(this, assemblyName);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 142143, 142292);

                Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                f_10038_142250_142280(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param, string?
                assemblyName)
                {
                    var return_v = this_param.WithAssemblyName(assemblyName);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 142250, 142280);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 142143, 142292);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 142143, 142292);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        protected override IAssemblySymbol CommonAssembly
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 142378, 142425);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 142384, 142423);

                    return f_10038_142391_142422(f_10038_142391_142404(this));
                    DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 142378, 142425);

                    Microsoft.CodeAnalysis.CSharp.Symbols.AssemblySymbol
                    f_10038_142391_142404(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                    this_param)
                    {
                        var return_v = this_param.Assembly;
                        DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 142391, 142404);
                        return return_v;
                    }


                    Microsoft.CodeAnalysis.IAssemblySymbol?
                    f_10038_142391_142422(Microsoft.CodeAnalysis.CSharp.Symbols.AssemblySymbol
                    symbol)
                    {
                        var return_v = symbol.GetPublicSymbol();
                        DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 142391, 142422);
                        return return_v;
                    }

                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 142304, 142436);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 142304, 142436);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        protected override INamespaceSymbol CommonGlobalNamespace
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 142530, 142584);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 142536, 142582);

                    return f_10038_142543_142581(f_10038_142543_142563(this));
                    DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 142530, 142584);

                    Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceSymbol
                    f_10038_142543_142563(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                    this_param)
                    {
                        var return_v = this_param.GlobalNamespace;
                        DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 142543, 142563);
                        return return_v;
                    }


                    Microsoft.CodeAnalysis.INamespaceSymbol?
                    f_10038_142543_142581(Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceSymbol
                    symbol)
                    {
                        var return_v = symbol.GetPublicSymbol();
                        DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 142543, 142581);
                        return return_v;
                    }

                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 142448, 142595);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 142448, 142595);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        protected override CompilationOptions CommonOptions
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 142683, 142707);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 142689, 142705);

                    return _options;
                    DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 142683, 142707);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 142607, 142718);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 142607, 142718);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        protected override SemanticModel CommonGetSemanticModel(SyntaxTree syntaxTree, bool ignoreAccessibility)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 142730, 142944);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 142859, 142933);

                return f_10038_142866_142932(this, syntaxTree, ignoreAccessibility);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 142730, 142944);

                Microsoft.CodeAnalysis.SemanticModel
                f_10038_142866_142932(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param, Microsoft.CodeAnalysis.SyntaxTree
                syntaxTree, bool
                ignoreAccessibility)
                {
                    var return_v = this_param.GetSemanticModel(syntaxTree, ignoreAccessibility);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 142866, 142932);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 142730, 142944);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 142730, 142944);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        protected override IEnumerable<SyntaxTree> CommonSyntaxTrees
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 143041, 143116);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 143077, 143101);

                    return f_10038_143084_143100(this);
                    DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 143041, 143116);

                    System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.SyntaxTree>
                    f_10038_143084_143100(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                    this_param)
                    {
                        var return_v = this_param.SyntaxTrees;
                        DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 143084, 143100);
                        return return_v;
                    }

                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 142956, 143127);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 142956, 143127);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        protected override Compilation CommonAddSyntaxTrees(IEnumerable<SyntaxTree> trees)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 143139, 143291);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 143246, 143280);

                return f_10038_143253_143279(this, trees);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 143139, 143291);

                Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                f_10038_143253_143279(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param, System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.SyntaxTree>
                trees)
                {
                    var return_v = this_param.AddSyntaxTrees(trees);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 143253, 143279);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 143139, 143291);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 143139, 143291);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        protected override Compilation CommonRemoveSyntaxTrees(IEnumerable<SyntaxTree> trees)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 143303, 143461);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 143413, 143450);

                return f_10038_143420_143449(this, trees);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 143303, 143461);

                Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                f_10038_143420_143449(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param, System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.SyntaxTree>
                trees)
                {
                    var return_v = this_param.RemoveSyntaxTrees(trees);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 143420, 143449);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 143303, 143461);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 143303, 143461);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        protected override Compilation CommonRemoveAllSyntaxTrees()
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 143473, 143603);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 143557, 143592);

                return f_10038_143564_143591(this);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 143473, 143603);

                Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                f_10038_143564_143591(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param)
                {
                    var return_v = this_param.RemoveAllSyntaxTrees();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 143564, 143591);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 143473, 143603);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 143473, 143603);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        protected override Compilation CommonReplaceSyntaxTree(SyntaxTree oldTree, SyntaxTree? newTree)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 143615, 143794);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 143735, 143783);

                return f_10038_143742_143782(this, oldTree, newTree);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 143615, 143794);

                Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                f_10038_143742_143782(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param, Microsoft.CodeAnalysis.SyntaxTree
                oldTree, Microsoft.CodeAnalysis.SyntaxTree?
                newTree)
                {
                    var return_v = this_param.ReplaceSyntaxTree(oldTree, newTree);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 143742, 143782);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 143615, 143794);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 143615, 143794);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        protected override Compilation CommonWithOptions(CompilationOptions options)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 143806, 143977);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 143907, 143966);

                return f_10038_143914_143965(this, options);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 143806, 143977);

                Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                f_10038_143914_143965(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param, Microsoft.CodeAnalysis.CompilationOptions
                options)
                {
                    var return_v = this_param.WithOptions((Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions)options);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 143914, 143965);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 143806, 143977);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 143806, 143977);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        protected override Compilation CommonWithScriptCompilationInfo(ScriptCompilationInfo? info)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 143989, 144190);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 144105, 144179);

                return f_10038_144112_144178(this, info);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 143989, 144190);

                Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                f_10038_144112_144178(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param, Microsoft.CodeAnalysis.ScriptCompilationInfo?
                info)
                {
                    var return_v = this_param.WithScriptCompilationInfo((Microsoft.CodeAnalysis.CSharp.CSharpScriptCompilationInfo?)info);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 144112, 144178);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 143989, 144190);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 143989, 144190);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        protected override bool CommonContainsSyntaxTree(SyntaxTree? syntaxTree)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 144202, 144353);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 144299, 144342);

                return f_10038_144306_144341(this, syntaxTree);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 144202, 144353);

                bool
                f_10038_144306_144341(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param, Microsoft.CodeAnalysis.SyntaxTree?
                syntaxTree)
                {
                    var return_v = this_param.ContainsSyntaxTree(syntaxTree);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 144306, 144341);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 144202, 144353);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 144202, 144353);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        protected override ISymbol? CommonGetAssemblyOrModuleSymbol(MetadataReference reference)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 144365, 144556);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 144478, 144545);

                return f_10038_144485_144544(f_10038_144485_144526(this, reference));
                DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 144365, 144556);

                Microsoft.CodeAnalysis.CSharp.Symbol?
                f_10038_144485_144526(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param, Microsoft.CodeAnalysis.MetadataReference
                reference)
                {
                    var return_v = this_param.GetAssemblyOrModuleSymbol(reference);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 144485, 144526);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ISymbol?
                f_10038_144485_144544(Microsoft.CodeAnalysis.CSharp.Symbol?
                symbol)
                {
                    var return_v = symbol.GetPublicSymbol();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 144485, 144544);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 144365, 144556);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 144365, 144556);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        protected override Compilation CommonClone()
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 144568, 144668);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 144637, 144657);

                return f_10038_144644_144656(this);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 144568, 144668);

                Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                f_10038_144644_144656(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param)
                {
                    var return_v = this_param.Clone();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 144644, 144656);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 144568, 144668);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 144568, 144668);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        protected override IModuleSymbol CommonSourceModule
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 144756, 144807);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 144762, 144805);

                    return f_10038_144769_144804(f_10038_144769_144786(this));
                    DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 144756, 144807);

                    Microsoft.CodeAnalysis.CSharp.Symbols.ModuleSymbol
                    f_10038_144769_144786(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                    this_param)
                    {
                        var return_v = this_param.SourceModule;
                        DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 144769, 144786);
                        return return_v;
                    }


                    Microsoft.CodeAnalysis.IModuleSymbol?
                    f_10038_144769_144804(Microsoft.CodeAnalysis.CSharp.Symbols.ModuleSymbol
                    symbol)
                    {
                        var return_v = symbol.GetPublicSymbol();
                        DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 144769, 144804);
                        return return_v;
                    }

                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 144680, 144818);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 144680, 144818);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        private protected override INamedTypeSymbolInternal CommonGetSpecialType(SpecialType specialType)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 144830, 145003);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 144952, 144992);

                return f_10038_144959_144991(this, specialType);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 144830, 145003);

                Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                f_10038_144959_144991(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param, Microsoft.CodeAnalysis.SpecialType
                specialType)
                {
                    var return_v = this_param.GetSpecialType(specialType);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 144959, 144991);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 144830, 145003);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 144830, 145003);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        protected override INamespaceSymbol? CommonGetCompilationNamespace(INamespaceSymbol namespaceSymbol)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 145015, 145222);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 145140, 145211);

                return f_10038_145147_145210(f_10038_145147_145192(this, namespaceSymbol));
                DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 145015, 145222);

                Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceSymbol?
                f_10038_145147_145192(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param, Microsoft.CodeAnalysis.INamespaceSymbol
                namespaceSymbol)
                {
                    var return_v = this_param.GetCompilationNamespace(namespaceSymbol);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 145147, 145192);
                    return return_v;
                }


                Microsoft.CodeAnalysis.INamespaceSymbol?
                f_10038_145147_145210(Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceSymbol?
                symbol)
                {
                    var return_v = symbol.GetPublicSymbol();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 145147, 145210);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 145015, 145222);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 145015, 145222);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        protected override INamedTypeSymbol? CommonGetTypeByMetadataName(string metadataName)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 145234, 145421);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 145344, 145410);

                return f_10038_145351_145409(f_10038_145351_145391(this, metadataName));
                DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 145234, 145421);

                Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol?
                f_10038_145351_145391(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param, string
                fullyQualifiedMetadataName)
                {
                    var return_v = this_param.GetTypeByMetadataName(fullyQualifiedMetadataName);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 145351, 145391);
                    return return_v;
                }


                Microsoft.CodeAnalysis.INamedTypeSymbol?
                f_10038_145351_145409(Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol?
                symbol)
                {
                    var return_v = symbol.GetPublicSymbol();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 145351, 145409);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 145234, 145421);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 145234, 145421);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        protected override INamedTypeSymbol? CommonScriptClass
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 145512, 145562);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 145518, 145560);

                    return f_10038_145525_145559(f_10038_145525_145541(this));
                    DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 145512, 145562);

                    Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol?
                    f_10038_145525_145541(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                    this_param)
                    {
                        var return_v = this_param.ScriptClass;
                        DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 145525, 145541);
                        return return_v;
                    }


                    Microsoft.CodeAnalysis.INamedTypeSymbol?
                    f_10038_145525_145559(Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol?
                    symbol)
                    {
                        var return_v = symbol.GetPublicSymbol();
                        DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 145525, 145559);
                        return return_v;
                    }

                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 145433, 145573);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 145433, 145573);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        protected override IArrayTypeSymbol CommonCreateArrayTypeSymbol(ITypeSymbol elementType, int rank, CodeAnalysis.NullableAnnotation elementNullableAnnotation)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 145585, 145940);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 145767, 145929);

                return f_10038_145774_145928(f_10038_145774_145910(this, f_10038_145796_145853(elementType, nameof(elementType)), rank, f_10038_145861_145909(elementNullableAnnotation)));
                DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 145585, 145940);

                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?
                f_10038_145796_145853(Microsoft.CodeAnalysis.ITypeSymbol
                symbol, string
                paramName)
                {
                    var return_v = symbol.EnsureCSharpSymbolOrNull(paramName);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 145796, 145853);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.NullableAnnotation
                f_10038_145861_145909(Microsoft.CodeAnalysis.NullableAnnotation
                annotation)
                {
                    var return_v = annotation.ToInternalAnnotation();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 145861, 145909);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.ArrayTypeSymbol
                f_10038_145774_145910(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                elementType, int
                rank, Microsoft.CodeAnalysis.CSharp.NullableAnnotation
                elementNullableAnnotation)
                {
                    var return_v = this_param.CreateArrayTypeSymbol(elementType, rank, elementNullableAnnotation);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 145774, 145910);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IArrayTypeSymbol?
                f_10038_145774_145928(Microsoft.CodeAnalysis.CSharp.Symbols.ArrayTypeSymbol
                symbol)
                {
                    var return_v = symbol.GetPublicSymbol();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 145774, 145928);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 145585, 145940);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 145585, 145940);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        protected override IPointerTypeSymbol CommonCreatePointerTypeSymbol(ITypeSymbol elementType)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 145952, 146243);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 146069, 146232);

                return f_10038_146076_146231(f_10038_146076_146213(this, f_10038_146100_146157(elementType, nameof(elementType)), f_10038_146159_146212(f_10038_146159_146189(elementType))));
                DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 145952, 146243);

                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?
                f_10038_146100_146157(Microsoft.CodeAnalysis.ITypeSymbol
                symbol, string
                paramName)
                {
                    var return_v = symbol.EnsureCSharpSymbolOrNull(paramName);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 146100, 146157);
                    return return_v;
                }


                Microsoft.CodeAnalysis.NullableAnnotation
                f_10038_146159_146189(Microsoft.CodeAnalysis.ITypeSymbol
                this_param)
                {
                    var return_v = this_param.NullableAnnotation;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 146159, 146189);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.NullableAnnotation
                f_10038_146159_146212(Microsoft.CodeAnalysis.NullableAnnotation
                annotation)
                {
                    var return_v = annotation.ToInternalAnnotation();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 146159, 146212);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.PointerTypeSymbol
                f_10038_146076_146213(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                elementType, Microsoft.CodeAnalysis.CSharp.NullableAnnotation
                elementNullableAnnotation)
                {
                    var return_v = this_param.CreatePointerTypeSymbol(elementType, elementNullableAnnotation);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 146076, 146213);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IPointerTypeSymbol?
                f_10038_146076_146231(Microsoft.CodeAnalysis.CSharp.Symbols.PointerTypeSymbol
                symbol)
                {
                    var return_v = symbol.GetPublicSymbol();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 146076, 146231);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 145952, 146243);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 145952, 146243);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        protected override IFunctionPointerTypeSymbol CommonCreateFunctionPointerTypeSymbol(
                    ITypeSymbol returnType,
                    RefKind returnRefKind,
                    ImmutableArray<ITypeSymbol> parameterTypes,
                    ImmutableArray<RefKind> parameterRefKinds,
                    SignatureCallingConvention callingConvention,
                    ImmutableArray<INamedTypeSymbol> callingConventionTypes)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 146255, 150571);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 146679, 146802) || true) && (returnType is null)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 146679, 146802);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 146735, 146787);

                    throw f_10038_146741_146786(nameof(returnType));
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 146679, 146802);
                }

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 146818, 146951) || true) && (parameterTypes.IsDefault)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 146818, 146951);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 146880, 146936);

                    throw f_10038_146886_146935(nameof(parameterTypes));
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 146818, 146951);
                }
                try
                {
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 146976, 146981);

                    for (int
        i = 0
        ; (DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 146967, 147218) || true) && (i < parameterTypes.Length)
        ; DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 147010, 147013)
        , i++, DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 146967, 147218))

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 146967, 147218);

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 147047, 147203) || true) && (parameterTypes[i] is null)
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 147047, 147203);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 147118, 147184);

                            throw f_10038_147124_147183($"{nameof(parameterTypes)}[{i}]");
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 147047, 147203);
                        }
                    }
                }
                catch (System.Exception)
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoopByException(10038, 1, 252);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoop(10038, 1, 252);
                }
                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 147234, 147373) || true) && (parameterRefKinds.IsDefault)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 147234, 147373);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 147299, 147358);

                    throw f_10038_147305_147357(nameof(parameterRefKinds));
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 147234, 147373);
                }

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 147389, 147738) || true) && (parameterRefKinds.Length != parameterTypes.Length)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 147389, 147738);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 147575, 147723);

                    throw f_10038_147581_147722(f_10038_147603_147721(f_10038_147617_147671(), parameterTypes.Length, parameterRefKinds.Length));
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 147389, 147738);
                }

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 147754, 147979) || true) && (returnRefKind == RefKind.Out)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 147754, 147979);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 147896, 147964);

                    throw f_10038_147902_147963(f_10038_147924_147962());
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 147754, 147979);
                }

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 147995, 148307) || true) && (callingConvention != SignatureCallingConvention.Unmanaged && (DynAbs.Tracing.TraceSender.Expression_True(10038, 147999, 148100) && f_10038_148060_148100_M(!callingConventionTypes.IsDefaultOrEmpty)))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 147995, 148307);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 148134, 148292);

                    throw f_10038_148140_148291(f_10038_148162_148290(f_10038_148176_148230(), nameof(callingConventionTypes), nameof(callingConvention)));
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 147995, 148307);
                }

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 148323, 148469) || true) && (!f_10038_148328_148355(callingConvention))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 148323, 148469);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 148389, 148454);

                    throw f_10038_148395_148453(nameof(callingConvention));
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 148323, 148469);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 148485, 148655);

                var
                returnTypeWithAnnotations = TypeWithAnnotations.Create(f_10038_148544_148599(returnType, nameof(returnType)), f_10038_148601_148653(f_10038_148601_148630(returnType)))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 148669, 148891);

                var
                parameterTypesWithAnnotations = parameterTypes.SelectAsArray(type => TypeWithAnnotations.Create(type.EnsureCSharpSymbolOrNull(nameof(parameterTypes)), type.NullableAnnotation.ToInternalAnnotation()))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 148905, 148981);

                var
                internalCallingConvention = f_10038_148937_148980(callingConvention)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 148995, 149302);

                var
                conventionModifiers = (DynAbs.Tracing.TraceSender.Conditional_F1(10038, 149021, 149121) || ((internalCallingConvention == CallingConvention.Unmanaged && (DynAbs.Tracing.TraceSender.Expression_True(10038, 149021, 149121) && f_10038_149081_149121_M(!callingConventionTypes.IsDefaultOrEmpty)) && DynAbs.Tracing.TraceSender.Conditional_F2(10038, 149141, 149245)) || DynAbs.Tracing.TraceSender.Conditional_F3(10038, 149265, 149301))) ? callingConventionTypes.SelectAsArray((type, i, @this) => getCustomModifierForType(type, @this, i), this) : ImmutableArray<CustomModifier>.Empty
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 149318, 149714);

                return f_10038_149325_149713(f_10038_149325_149695(internalCallingConvention, conventionModifiers, returnTypeWithAnnotations, returnRefKind: returnRefKind, parameterTypes: parameterTypesWithAnnotations, parameterRefKinds: parameterRefKinds, compilation: this));

                static CustomModifier getCustomModifierForType(INamedTypeSymbol type, CSharpCompilation @this, int index)
                {
                    try
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterStaticMethod(10038, 149730, 150560);

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 149868, 150023) || true) && (type is null)
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 149868, 150023);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 149926, 150004);

                            throw f_10038_149932_150003($"{nameof(callingConventionTypes)}[{index}]");
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 149868, 150023);
                        }
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 150043, 150138);

                        var
                        internalType = f_10038_150062_150137(type, $"{nameof(callingConventionTypes)}[{index}]")
                        ;

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 150156, 150468) || true) && (!f_10038_150161_150228(internalType) || (DynAbs.Tracing.TraceSender.Expression_False(10038, 150160, 150292) || f_10038_150232_150257(f_10038_150232_150246(@this)) != f_10038_150261_150292(internalType)))
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 150156, 150468);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 150334, 150449);

                            throw f_10038_150340_150448(f_10038_150362_150447(f_10038_150376_150422(), f_10038_150424_150446(type)));
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 150156, 150468);
                        }
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 150488, 150545);

                        return f_10038_150495_150544(internalType);
                        DynAbs.Tracing.TraceSender.TraceExitStaticMethod(10038, 149730, 150560);

                        System.ArgumentNullException
                        f_10038_149932_150003(string
                        paramName)
                        {
                            var return_v = new System.ArgumentNullException(paramName);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 149932, 150003);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol?
                        f_10038_150062_150137(Microsoft.CodeAnalysis.INamedTypeSymbol
                        symbol, string
                        paramName)
                        {
                            var return_v = symbol.EnsureCSharpSymbolOrNull(paramName);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 150062, 150137);
                            return return_v;
                        }


                        bool
                        f_10038_150161_150228(Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                        modifierType)
                        {
                            var return_v = FunctionPointerTypeSymbol.IsCallingConventionModifier(modifierType);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 150161, 150228);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.CSharp.Symbols.AssemblySymbol
                        f_10038_150232_150246(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                        this_param)
                        {
                            var return_v = this_param.Assembly;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 150232, 150246);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.CSharp.Symbols.AssemblySymbol
                        f_10038_150232_150257(Microsoft.CodeAnalysis.CSharp.Symbols.AssemblySymbol
                        this_param)
                        {
                            var return_v = this_param.CorLibrary;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 150232, 150257);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.CSharp.Symbols.AssemblySymbol
                        f_10038_150261_150292(Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                        this_param)
                        {
                            var return_v = this_param.ContainingAssembly;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 150261, 150292);
                            return return_v;
                        }


                        string
                        f_10038_150376_150422()
                        {
                            var return_v = CSharpResources.CallingConventionTypeIsInvalid;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 150376, 150422);
                            return return_v;
                        }


                        string
                        f_10038_150424_150446(Microsoft.CodeAnalysis.INamedTypeSymbol
                        this_param)
                        {
                            var return_v = this_param.ToDisplayString();
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 150424, 150446);
                            return return_v;
                        }


                        string
                        f_10038_150362_150447(string
                        format, string
                        arg0)
                        {
                            var return_v = string.Format(format, (object)arg0);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 150362, 150447);
                            return return_v;
                        }


                        System.ArgumentException
                        f_10038_150340_150448(string
                        message)
                        {
                            var return_v = new System.ArgumentException(message);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 150340, 150448);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.CustomModifier
                        f_10038_150495_150544(Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                        modifier)
                        {
                            var return_v = CSharpCustomModifier.CreateOptional(modifier);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 150495, 150544);
                            return return_v;
                        }

                    }
                    catch
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 149730, 150560);
                        throw;
                    }
                    finally
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 149730, 150560);
                    }
                    throw new System.Exception("Slicer error: unreachable code");
                }
                DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 146255, 150571);

                System.ArgumentNullException
                f_10038_146741_146786(string
                paramName)
                {
                    var return_v = new System.ArgumentNullException(paramName);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 146741, 146786);
                    return return_v;
                }


                System.ArgumentNullException
                f_10038_146886_146935(string
                paramName)
                {
                    var return_v = new System.ArgumentNullException(paramName);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 146886, 146935);
                    return return_v;
                }


                System.ArgumentNullException
                f_10038_147124_147183(string
                paramName)
                {
                    var return_v = new System.ArgumentNullException(paramName);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 147124, 147183);
                    return return_v;
                }


                System.ArgumentNullException
                f_10038_147305_147357(string
                paramName)
                {
                    var return_v = new System.ArgumentNullException(paramName);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 147305, 147357);
                    return return_v;
                }


                string
                f_10038_147617_147671()
                {
                    var return_v = CSharpResources.NotSameNumberParameterTypesAndRefKinds;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 147617, 147671);
                    return return_v;
                }


                string
                f_10038_147603_147721(string
                format, int
                arg0, int
                arg1)
                {
                    var return_v = string.Format(format, (object)arg0, (object)arg1);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 147603, 147721);
                    return return_v;
                }


                System.ArgumentException
                f_10038_147581_147722(string
                message)
                {
                    var return_v = new System.ArgumentException(message);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 147581, 147722);
                    return return_v;
                }


                string
                f_10038_147924_147962()
                {
                    var return_v = CSharpResources.OutIsNotValidForReturn;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 147924, 147962);
                    return return_v;
                }


                System.ArgumentException
                f_10038_147902_147963(string
                message)
                {
                    var return_v = new System.ArgumentException(message);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 147902, 147963);
                    return return_v;
                }


                bool
                f_10038_148060_148100_M(bool
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 148060, 148100);
                    return return_v;
                }


                string
                f_10038_148176_148230()
                {
                    var return_v = CSharpResources.CallingConventionTypesRequireUnmanaged;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 148176, 148230);
                    return return_v;
                }


                string
                f_10038_148162_148290(string
                format, string
                arg0, string
                arg1)
                {
                    var return_v = string.Format(format, (object)arg0, (object)arg1);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 148162, 148290);
                    return return_v;
                }


                System.ArgumentException
                f_10038_148140_148291(string
                message)
                {
                    var return_v = new System.ArgumentException(message);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 148140, 148291);
                    return return_v;
                }


                bool
                f_10038_148328_148355(System.Reflection.Metadata.SignatureCallingConvention
                convention)
                {
                    var return_v = convention.IsValid();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 148328, 148355);
                    return return_v;
                }


                System.ArgumentOutOfRangeException
                f_10038_148395_148453(string
                paramName)
                {
                    var return_v = new System.ArgumentOutOfRangeException(paramName);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 148395, 148453);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?
                f_10038_148544_148599(Microsoft.CodeAnalysis.ITypeSymbol
                symbol, string
                paramName)
                {
                    var return_v = symbol.EnsureCSharpSymbolOrNull(paramName);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 148544, 148599);
                    return return_v;
                }


                Microsoft.CodeAnalysis.NullableAnnotation
                f_10038_148601_148630(Microsoft.CodeAnalysis.ITypeSymbol
                this_param)
                {
                    var return_v = this_param.NullableAnnotation;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 148601, 148630);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.NullableAnnotation
                f_10038_148601_148653(Microsoft.CodeAnalysis.NullableAnnotation
                annotation)
                {
                    var return_v = annotation.ToInternalAnnotation();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 148601, 148653);
                    return return_v;
                }


                Microsoft.Cci.CallingConvention
                f_10038_148937_148980(System.Reflection.Metadata.SignatureCallingConvention
                convention)
                {
                    var return_v = convention.FromSignatureConvention();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 148937, 148980);
                    return return_v;
                }


                bool
                f_10038_149081_149121_M(bool
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 149081, 149121);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.FunctionPointerTypeSymbol
                f_10038_149325_149695(Microsoft.Cci.CallingConvention
                callingConvention, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CustomModifier>
                callingConventionModifiers, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                returnType, Microsoft.CodeAnalysis.RefKind
                returnRefKind, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations>
                parameterTypes, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.RefKind>
                parameterRefKinds, Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                compilation)
                {
                    var return_v = FunctionPointerTypeSymbol.CreateFromParts(callingConvention, callingConventionModifiers, returnType, returnRefKind: returnRefKind, parameterTypes: parameterTypes, parameterRefKinds: parameterRefKinds, compilation: compilation);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 149325, 149695);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IFunctionPointerTypeSymbol?
                f_10038_149325_149713(Microsoft.CodeAnalysis.CSharp.Symbols.FunctionPointerTypeSymbol
                symbol)
                {
                    var return_v = symbol.GetPublicSymbol();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 149325, 149713);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 146255, 150571);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 146255, 150571);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        protected override INamedTypeSymbol CommonCreateNativeIntegerTypeSymbol(bool signed)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 150583, 150766);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 150692, 150755);

                return f_10038_150699_150754(f_10038_150699_150736(this, signed));
                DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 150583, 150766);

                Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                f_10038_150699_150736(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param, bool
                signed)
                {
                    var return_v = this_param.CreateNativeIntegerTypeSymbol(signed);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 150699, 150736);
                    return return_v;
                }


                Microsoft.CodeAnalysis.INamedTypeSymbol?
                f_10038_150699_150754(Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                symbol)
                {
                    var return_v = symbol.GetPublicSymbol();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 150699, 150754);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 150583, 150766);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 150583, 150766);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        internal new NamedTypeSymbol CreateNativeIntegerTypeSymbol(bool signed)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 150778, 150990);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 150874, 150979);

                return f_10038_150881_150978(f_10038_150881_150960(this, (DynAbs.Tracing.TraceSender.Conditional_F1(10038, 150896, 150902) || ((signed && DynAbs.Tracing.TraceSender.Conditional_F2(10038, 150905, 150930)) || DynAbs.Tracing.TraceSender.Conditional_F3(10038, 150933, 150959))) ? SpecialType.System_IntPtr : SpecialType.System_UIntPtr));
                DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 150778, 150990);

                Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                f_10038_150881_150960(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param, Microsoft.CodeAnalysis.SpecialType
                specialType)
                {
                    var return_v = this_param.GetSpecialType(specialType);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 150881, 150960);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                f_10038_150881_150978(Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                this_param)
                {
                    var return_v = this_param.AsNativeInteger();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 150881, 150978);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 150778, 150990);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 150778, 150990);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        protected override INamedTypeSymbol CommonCreateTupleTypeSymbol(
                    ImmutableArray<ITypeSymbol> elementTypes,
                    ImmutableArray<string?> elementNames,
                    ImmutableArray<Location?> elementLocations,
                    ImmutableArray<CodeAnalysis.NullableAnnotation> elementNullableAnnotations)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 151002, 152436);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 151343, 151429);

                var
                typesBuilder = f_10038_151362_151428(elementTypes.Length)
                ;
                try
                {
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 151452, 151457);
                    for (int
        i = 0
        ; (DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 151443, 151930) || true) && (i < elementTypes.Length)
        ; DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 151484, 151487)
        , i++, DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 151443, 151930))

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 151443, 151930);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 151521, 151562);

                        ITypeSymbol
                        typeSymbol = elementTypes[i]
                        ;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 151580, 151666);

                        var
                        elementType = f_10038_151598_151665(typeSymbol, $"{nameof(elementTypes)}[{i}]")
                        ;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 151684, 151827);

                        var
                        annotation = f_10038_151701_151826(((DynAbs.Tracing.TraceSender.Conditional_F1(10038, 151702, 151738) || ((elementNullableAnnotations.IsDefault && DynAbs.Tracing.TraceSender.Conditional_F2(10038, 151741, 151770)) || DynAbs.Tracing.TraceSender.Conditional_F3(10038, 151773, 151802))) ? f_10038_151741_151770(typeSymbol) : elementNullableAnnotations[i]))
                        ;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 151845, 151915);

                        f_10038_151845_151914(typesBuilder, TypeWithAnnotations.Create(elementType, annotation));
                    }
                }
                catch (System.Exception)
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoopByException(10038, 1, 488);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoop(10038, 1, 488);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 151946, 152425);

                return f_10038_151953_152424(f_10038_151953_152406(locationOpt: null, elementTypesWithAnnotations: f_10038_152104_152137(typesBuilder), elementLocations: elementLocations, elementNames: elementNames, compilation: this, shouldCheckConstraints: false, includeNullability: false, errorPositions: default));
                DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 151002, 152436);

                Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations>
                f_10038_151362_151428(int
                capacity)
                {
                    var return_v = ArrayBuilder<TypeWithAnnotations>.GetInstance(capacity);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 151362, 151428);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?
                f_10038_151598_151665(Microsoft.CodeAnalysis.ITypeSymbol
                symbol, string
                paramName)
                {
                    var return_v = symbol.EnsureCSharpSymbolOrNull(paramName);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 151598, 151665);
                    return return_v;
                }


                Microsoft.CodeAnalysis.NullableAnnotation
                f_10038_151741_151770(Microsoft.CodeAnalysis.ITypeSymbol
                this_param)
                {
                    var return_v = this_param.NullableAnnotation;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 151741, 151770);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.NullableAnnotation
                f_10038_151701_151826(Microsoft.CodeAnalysis.NullableAnnotation
                annotation)
                {
                    var return_v = annotation.ToInternalAnnotation();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 151701, 151826);
                    return return_v;
                }


                int
                f_10038_151845_151914(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations>
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                item)
                {
                    this_param.Add(item);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 151845, 151914);
                    return 0;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations>
                f_10038_152104_152137(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations>
                this_param)
                {
                    var return_v = this_param.ToImmutableAndFree();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 152104, 152137);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                f_10038_151953_152406(Microsoft.CodeAnalysis.Location?
                locationOpt, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations>
                elementTypesWithAnnotations, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Location?>
                elementLocations, System.Collections.Immutable.ImmutableArray<string?>
                elementNames, Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                compilation, bool
                shouldCheckConstraints, bool
                includeNullability, System.Collections.Immutable.ImmutableArray<bool>
                errorPositions)
                {
                    var return_v = NamedTypeSymbol.CreateTuple(locationOpt: locationOpt, elementTypesWithAnnotations: elementTypesWithAnnotations, elementLocations: elementLocations, elementNames: elementNames, compilation: compilation, shouldCheckConstraints: shouldCheckConstraints, includeNullability: includeNullability, errorPositions: errorPositions);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 151953, 152406);
                    return return_v;
                }


                Microsoft.CodeAnalysis.INamedTypeSymbol?
                f_10038_151953_152424(Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                symbol)
                {
                    var return_v = symbol.GetPublicSymbol();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 151953, 152424);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 151002, 152436);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 151002, 152436);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        protected override INamedTypeSymbol CommonCreateTupleTypeSymbol(
                    INamedTypeSymbol underlyingType,
                    ImmutableArray<string?> elementNames,
                    ImmutableArray<Location?> elementLocations,
                    ImmutableArray<CodeAnalysis.NullableAnnotation> elementNullableAnnotations)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 152448, 153965);
                int cardinality = default(int);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 152780, 152884);

                NamedTypeSymbol
                csharpUnderlyingTuple = f_10038_152820_152883(underlyingType, nameof(underlyingType))
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 152900, 153137) || true) && (!f_10038_152905_152972(csharpUnderlyingTuple, out cardinality))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 152900, 153137);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 153006, 153122);

                    throw f_10038_153012_153121(f_10038_153034_153096(), nameof(underlyingType));
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 152900, 153137);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 153153, 153218);

                elementNames = f_10038_153168_153217(cardinality, elementNames);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 153232, 153290);

                f_10038_153232_153289(cardinality, elementLocations);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 153304, 153382);

                f_10038_153304_153381(cardinality, elementNullableAnnotations);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 153398, 153534);

                var
                tupleType = f_10038_153414_153533(csharpUnderlyingTuple, elementNames, elementLocations: elementLocations!)
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 153548, 153905) || true) && (f_10038_153552_153589_M(!elementNullableAnnotations.IsDefault))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 153548, 153905);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 153623, 153890);

                    tupleType = f_10038_153635_153889(tupleType, tupleType.TupleElementTypesWithAnnotations.ZipAsArray(elementNullableAnnotations, (t, a) => TypeWithAnnotations.Create(t.Type, a.ToInternalAnnotation())));
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 153548, 153905);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 153919, 153954);

                return f_10038_153926_153953(tupleType);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 152448, 153965);

                Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol?
                f_10038_152820_152883(Microsoft.CodeAnalysis.INamedTypeSymbol
                symbol, string
                paramName)
                {
                    var return_v = symbol.EnsureCSharpSymbolOrNull(paramName);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 152820, 152883);
                    return return_v;
                }


                bool
                f_10038_152905_152972(Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                this_param, out int
                tupleCardinality)
                {
                    var return_v = this_param.IsTupleTypeOfCardinality(out tupleCardinality);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 152905, 152972);
                    return return_v;
                }


                string
                f_10038_153034_153096()
                {
                    var return_v = CodeAnalysisResources.TupleUnderlyingTypeMustBeTupleCompatible;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 153034, 153096);
                    return return_v;
                }


                System.ArgumentException
                f_10038_153012_153121(string
                message, string
                paramName)
                {
                    var return_v = new System.ArgumentException(message, paramName);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 153012, 153121);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<string?>
                f_10038_153168_153217(int
                cardinality, System.Collections.Immutable.ImmutableArray<string?>
                elementNames)
                {
                    var return_v = CheckTupleElementNames(cardinality, elementNames);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 153168, 153217);
                    return return_v;
                }


                int
                f_10038_153232_153289(int
                cardinality, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Location?>
                elementLocations)
                {
                    CheckTupleElementLocations(cardinality, elementLocations);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 153232, 153289);
                    return 0;
                }


                int
                f_10038_153304_153381(int
                cardinality, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.NullableAnnotation>
                elementNullableAnnotations)
                {
                    CheckTupleElementNullableAnnotations(cardinality, elementNullableAnnotations);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 153304, 153381);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                f_10038_153414_153533(Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                tupleCompatibleType, System.Collections.Immutable.ImmutableArray<string?>
                elementNames, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Location?>
                elementLocations)
                {
                    var return_v = NamedTypeSymbol.CreateTuple(tupleCompatibleType, elementNames, elementLocations: elementLocations);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 153414, 153533);
                    return return_v;
                }


                bool
                f_10038_153552_153589_M(bool
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 153552, 153589);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                f_10038_153635_153889(Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                this_param, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations>
                newElementTypes)
                {
                    var return_v = this_param.WithElementTypes(newElementTypes);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 153635, 153889);
                    return return_v;
                }


                Microsoft.CodeAnalysis.INamedTypeSymbol?
                f_10038_153926_153953(Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                symbol)
                {
                    var return_v = symbol.GetPublicSymbol();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 153926, 153953);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 152448, 153965);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 152448, 153965);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        protected override INamedTypeSymbol CommonCreateAnonymousTypeSymbol(
                    ImmutableArray<ITypeSymbol> memberTypes,
                    ImmutableArray<string> memberNames,
                    ImmutableArray<Location> memberLocations,
                    ImmutableArray<bool> memberIsReadOnly,
                    ImmutableArray<CodeAnalysis.NullableAnnotation> memberNullableAnnotations)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 153977, 155641);
                try
                {
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 154377, 154382);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 154384, 154406);
                    for (int
        i = 0
        ,
        n = memberTypes.Length
        ; (DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 154368, 154538) || true) && (i < n)
        ; DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 154415, 154418)
        , i++, DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 154368, 154538))

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 154368, 154538);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 154452, 154523);

                        f_10038_154452_154522(memberTypes[i], $"{nameof(memberTypes)}[{i}]");
                    }
                }
                catch (System.Exception)
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoopByException(10038, 1, 171);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoop(10038, 1, 171);
                }
                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 154554, 154761) || true) && (f_10038_154558_154585_M(!memberIsReadOnly.IsDefault) && (DynAbs.Tracing.TraceSender.Expression_True(10038, 154558, 154618) && memberIsReadOnly.Any(v => !v)))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 154554, 154761);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 154652, 154746);

                    throw f_10038_154658_154745($"Non-ReadOnly members are not supported in C# anonymous types.");
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 154554, 154761);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 154777, 154837);

                var
                fields = f_10038_154790_154836()
                ;
                try
                {
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 154862, 154867);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 154869, 154891);

                    for (int
        i = 0
        ,
        n = memberTypes.Length
        ; (DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 154853, 155417) || true) && (i < n)
        ; DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 154900, 154903)
        , i++, DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 154853, 155417))

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 154853, 155417);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 154937, 154975);

                        var
                        type = f_10038_154948_154974(memberTypes[i])
                        ;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 154993, 155019);

                        var
                        name = memberNames[i]
                        ;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 155037, 155115);

                        var
                        location = (DynAbs.Tracing.TraceSender.Conditional_F1(10038, 155052, 155077) || ((memberLocations.IsDefault && DynAbs.Tracing.TraceSender.Conditional_F2(10038, 155080, 155093)) || DynAbs.Tracing.TraceSender.Conditional_F3(10038, 155096, 155114))) ? f_10038_155080_155093() : memberLocations[i]
                        ;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 155133, 155279);

                        var
                        nullableAnnotation = (DynAbs.Tracing.TraceSender.Conditional_F1(10038, 155158, 155193) || ((memberNullableAnnotations.IsDefault && DynAbs.Tracing.TraceSender.Conditional_F2(10038, 155196, 155224)) || DynAbs.Tracing.TraceSender.Conditional_F3(10038, 155227, 155278))) ? NullableAnnotation.Oblivious : f_10038_155227_155278(memberNullableAnnotations[i])
                        ;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 155297, 155402);

                        f_10038_155297_155401(fields, f_10038_155308_155400(name, location, TypeWithAnnotations.Create(type, nullableAnnotation)));
                    }
                }
                catch (System.Exception)
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoopByException(10038, 1, 565);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoop(10038, 1, 565);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 155433, 155522);

                var
                descriptor = f_10038_155450_155521(f_10038_155478_155505(fields), f_10038_155507_155520())
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 155538, 155630);

                return f_10038_155545_155629(f_10038_155545_155611(f_10038_155545_155570(this), descriptor));
                DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 153977, 155641);

                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?
                f_10038_154452_154522(Microsoft.CodeAnalysis.ITypeSymbol
                symbol, string
                paramName)
                {
                    var return_v = symbol.EnsureCSharpSymbolOrNull(paramName);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 154452, 154522);
                    return return_v;
                }


                bool
                f_10038_154558_154585_M(bool
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 154558, 154585);
                    return return_v;
                }


                System.ArgumentException
                f_10038_154658_154745(string
                message)
                {
                    var return_v = new System.ArgumentException(message);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 154658, 154745);
                    return return_v;
                }


                Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbols.AnonymousTypeField>
                f_10038_154790_154836()
                {
                    var return_v = ArrayBuilder<AnonymousTypeField>.GetInstance();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 154790, 154836);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?
                f_10038_154948_154974(Microsoft.CodeAnalysis.ITypeSymbol
                symbol)
                {
                    var return_v = symbol.GetSymbol();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 154948, 154974);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Location
                f_10038_155080_155093()
                {
                    var return_v = Location.None;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 155080, 155093);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.NullableAnnotation
                f_10038_155227_155278(Microsoft.CodeAnalysis.NullableAnnotation
                annotation)
                {
                    var return_v = annotation.ToInternalAnnotation();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 155227, 155278);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.AnonymousTypeField
                f_10038_155308_155400(string
                name, Microsoft.CodeAnalysis.Location
                location, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                typeWithAnnotations)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.Symbols.AnonymousTypeField(name, location, typeWithAnnotations);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 155308, 155400);
                    return return_v;
                }


                int
                f_10038_155297_155401(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbols.AnonymousTypeField>
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.AnonymousTypeField
                item)
                {
                    this_param.Add(item);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 155297, 155401);
                    return 0;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.AnonymousTypeField>
                f_10038_155478_155505(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbols.AnonymousTypeField>
                this_param)
                {
                    var return_v = this_param.ToImmutableAndFree();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 155478, 155505);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Location
                f_10038_155507_155520()
                {
                    var return_v = Location.None;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 155507, 155520);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.AnonymousTypeDescriptor
                f_10038_155450_155521(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.AnonymousTypeField>
                fields, Microsoft.CodeAnalysis.Location
                location)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.Symbols.AnonymousTypeDescriptor(fields, location);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 155450, 155521);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.AnonymousTypeManager
                f_10038_155545_155570(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param)
                {
                    var return_v = this_param.AnonymousTypeManager;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 155545, 155570);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                f_10038_155545_155611(Microsoft.CodeAnalysis.CSharp.Symbols.AnonymousTypeManager
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.AnonymousTypeDescriptor
                typeDescr)
                {
                    var return_v = this_param.ConstructAnonymousTypeSymbol(typeDescr);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 155545, 155611);
                    return return_v;
                }


                Microsoft.CodeAnalysis.INamedTypeSymbol?
                f_10038_155545_155629(Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                symbol)
                {
                    var return_v = symbol.GetPublicSymbol();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 155545, 155629);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 153977, 155641);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 153977, 155641);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        protected override ITypeSymbol CommonDynamicType
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 155726, 155771);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 155732, 155769);

                    return f_10038_155739_155768(f_10038_155739_155750());
                    DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 155726, 155771);

                    Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                    f_10038_155739_155750()
                    {
                        var return_v = DynamicType;
                        DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 155739, 155750);
                        return return_v;
                    }


                    Microsoft.CodeAnalysis.ITypeSymbol?
                    f_10038_155739_155768(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                    symbol)
                    {
                        var return_v = symbol.GetPublicSymbol();
                        DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 155739, 155768);
                        return return_v;
                    }

                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 155653, 155782);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 155653, 155782);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        protected override INamedTypeSymbol CommonObjectType
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 155871, 155920);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 155877, 155918);

                    return f_10038_155884_155917(f_10038_155884_155899(this));
                    DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 155871, 155920);

                    Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                    f_10038_155884_155899(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                    this_param)
                    {
                        var return_v = this_param.ObjectType;
                        DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 155884, 155899);
                        return return_v;
                    }


                    Microsoft.CodeAnalysis.INamedTypeSymbol?
                    f_10038_155884_155917(Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                    symbol)
                    {
                        var return_v = symbol.GetPublicSymbol();
                        DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 155884, 155917);
                        return return_v;
                    }

                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 155794, 155931);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 155794, 155931);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        protected override IMethodSymbol? CommonGetEntryPoint(CancellationToken cancellationToken)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 155943, 156132);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 156058, 156121);

                return f_10038_156065_156120(f_10038_156065_156102(this, cancellationToken));
                DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 155943, 156132);

                Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol?
                f_10038_156065_156102(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param, System.Threading.CancellationToken
                cancellationToken)
                {
                    var return_v = this_param.GetEntryPoint(cancellationToken);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 156065, 156102);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IMethodSymbol?
                f_10038_156065_156120(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol?
                symbol)
                {
                    var return_v = symbol.GetPublicSymbol();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 156065, 156120);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 155943, 156132);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 155943, 156132);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        internal override int CompareSourceLocations(Location loc1, Location loc2)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 156144, 156592);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 156243, 156273);

                f_10038_156243_156272(f_10038_156256_156271(loc1));
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 156287, 156317);

                f_10038_156287_156316(f_10038_156300_156315(loc2));
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 156333, 156412);

                var
                comparison = f_10038_156350_156411(this, loc1.SourceTree!, loc2.SourceTree!)
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 156426, 156512) || true) && (comparison != 0)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 156426, 156512);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 156479, 156497);

                    return comparison;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 156426, 156512);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 156528, 156581);

                return loc1.SourceSpan.Start - loc2.SourceSpan.Start;
                DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 156144, 156592);

                bool
                f_10038_156256_156271(Microsoft.CodeAnalysis.Location
                this_param)
                {
                    var return_v = this_param.IsInSource;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 156256, 156271);
                    return return_v;
                }


                int
                f_10038_156243_156272(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 156243, 156272);
                    return 0;
                }


                bool
                f_10038_156300_156315(Microsoft.CodeAnalysis.Location
                this_param)
                {
                    var return_v = this_param.IsInSource;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 156300, 156315);
                    return return_v;
                }


                int
                f_10038_156287_156316(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 156287, 156316);
                    return 0;
                }


                int
                f_10038_156350_156411(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param, Microsoft.CodeAnalysis.SyntaxTree
                tree1, Microsoft.CodeAnalysis.SyntaxTree
                tree2)
                {
                    var return_v = this_param.CompareSyntaxTreeOrdering(tree1, tree2);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 156350, 156411);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 156144, 156592);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 156144, 156592);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        internal override int CompareSourceLocations(SyntaxReference loc1, SyntaxReference loc2)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 156604, 156962);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 156717, 156794);

                var
                comparison = f_10038_156734_156793(this, f_10038_156760_156775(loc1), f_10038_156777_156792(loc2))
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 156808, 156894) || true) && (comparison != 0)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 156808, 156894);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 156861, 156879);

                    return comparison;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 156808, 156894);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 156910, 156951);

                return loc1.Span.Start - loc2.Span.Start;
                DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 156604, 156962);

                Microsoft.CodeAnalysis.SyntaxTree
                f_10038_156760_156775(Microsoft.CodeAnalysis.SyntaxReference
                this_param)
                {
                    var return_v = this_param.SyntaxTree;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 156760, 156775);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SyntaxTree
                f_10038_156777_156792(Microsoft.CodeAnalysis.SyntaxReference
                this_param)
                {
                    var return_v = this_param.SyntaxTree;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 156777, 156792);
                    return return_v;
                }


                int
                f_10038_156734_156793(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param, Microsoft.CodeAnalysis.SyntaxTree
                tree1, Microsoft.CodeAnalysis.SyntaxTree
                tree2)
                {
                    var return_v = this_param.CompareSyntaxTreeOrdering(tree1, tree2);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 156734, 156793);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 156604, 156962);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 156604, 156962);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override bool ContainsSymbolsWithName(Func<string, bool> predicate, SymbolFilter filter = SymbolFilter.TypeAndMember, CancellationToken cancellationToken = default)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 157119, 157744);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 157315, 157436) || true) && (predicate == null)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 157315, 157436);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 157370, 157421);

                    throw f_10038_157376_157420(nameof(predicate));
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 157315, 157436);
                }

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 157452, 157614) || true) && (filter == SymbolFilter.None)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 157452, 157614);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 157517, 157599);

                    throw f_10038_157523_157598(f_10038_157545_157581(), nameof(filter));
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 157452, 157614);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 157630, 157733);

                return f_10038_157637_157732(f_10038_157667_157693(this), predicate, filter, cancellationToken);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 157119, 157744);

                System.ArgumentNullException
                f_10038_157376_157420(string
                paramName)
                {
                    var return_v = new System.ArgumentNullException(paramName);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 157376, 157420);
                    return return_v;
                }


                string
                f_10038_157545_157581()
                {
                    var return_v = CSharpResources.NoNoneSearchCriteria;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 157545, 157581);
                    return return_v;
                }


                System.ArgumentException
                f_10038_157523_157598(string
                message, string
                paramName)
                {
                    var return_v = new System.ArgumentException(message, paramName);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 157523, 157598);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.MergedNamespaceDeclaration
                f_10038_157667_157693(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param)
                {
                    var return_v = this_param.MergedRootDeclaration;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 157667, 157693);
                    return return_v;
                }


                bool
                f_10038_157637_157732(Microsoft.CodeAnalysis.CSharp.MergedNamespaceDeclaration
                mergedRoot, System.Func<string, bool>
                predicate, Microsoft.CodeAnalysis.SymbolFilter
                filter, System.Threading.CancellationToken
                cancellationToken)
                {
                    var return_v = DeclarationTable.ContainsName(mergedRoot, predicate, filter, cancellationToken);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 157637, 157732);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 157119, 157744);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 157119, 157744);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override IEnumerable<ISymbol> GetSymbolsWithName(Func<string, bool> predicate, SymbolFilter filter = SymbolFilter.TypeAndMember, CancellationToken cancellationToken = default)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 157884, 158537);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 158091, 158212) || true) && (predicate == null)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 158091, 158212);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 158146, 158197);

                    throw f_10038_158152_158196(nameof(predicate));
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 158091, 158212);
                }

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 158228, 158390) || true) && (filter == SymbolFilter.None)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 158228, 158390);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 158293, 158375);

                    throw f_10038_158299_158374(f_10038_158321_158357(), nameof(filter));
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 158228, 158390);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 158406, 158526);

                return f_10038_158413_158524(f_10038_158413_158505(f_10038_158413_158484(this, filter, predicate, cancellationToken)))!;
                DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 157884, 158537);

                System.ArgumentNullException
                f_10038_158152_158196(string
                paramName)
                {
                    var return_v = new System.ArgumentNullException(paramName);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 158152, 158196);
                    return return_v;
                }


                string
                f_10038_158321_158357()
                {
                    var return_v = CSharpResources.NoNoneSearchCriteria;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 158321, 158357);
                    return return_v;
                }


                System.ArgumentException
                f_10038_158299_158374(string
                message, string
                paramName)
                {
                    var return_v = new System.ArgumentException(message, paramName);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 158299, 158374);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSharpCompilation.PredicateSymbolSearcher
                f_10038_158413_158484(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                compilation, Microsoft.CodeAnalysis.SymbolFilter
                filter, System.Func<string, bool>
                predicate, System.Threading.CancellationToken
                cancellationToken)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.CSharpCompilation.PredicateSymbolSearcher(compilation, filter, predicate, cancellationToken);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 158413, 158484);
                    return return_v;
                }


                System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.CSharp.Symbol>
                f_10038_158413_158505(Microsoft.CodeAnalysis.CSharp.CSharpCompilation.PredicateSymbolSearcher
                this_param)
                {
                    var return_v = this_param.GetSymbolsWithName();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 158413, 158505);
                    return return_v;
                }


                System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.ISymbol?>
                f_10038_158413_158524(System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.CSharp.Symbol>
                symbols)
                {
                    var return_v = symbols.GetPublicSymbols();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 158413, 158524);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 157884, 158537);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 157884, 158537);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override bool ContainsSymbolsWithName(string name, SymbolFilter filter = SymbolFilter.TypeAndMember, CancellationToken cancellationToken = default)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 158983, 159576);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 159162, 159273) || true) && (name == null)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 159162, 159273);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 159212, 159258);

                    throw f_10038_159218_159257(nameof(name));
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 159162, 159273);
                }

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 159289, 159451) || true) && (filter == SymbolFilter.None)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 159289, 159451);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 159354, 159436);

                    throw f_10038_159360_159435(f_10038_159382_159418(), nameof(filter));
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 159289, 159451);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 159467, 159565);

                return f_10038_159474_159564(f_10038_159504_159530(this), name, filter, cancellationToken);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 158983, 159576);

                System.ArgumentNullException
                f_10038_159218_159257(string
                paramName)
                {
                    var return_v = new System.ArgumentNullException(paramName);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 159218, 159257);
                    return return_v;
                }


                string
                f_10038_159382_159418()
                {
                    var return_v = CSharpResources.NoNoneSearchCriteria;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 159382, 159418);
                    return return_v;
                }


                System.ArgumentException
                f_10038_159360_159435(string
                message, string
                paramName)
                {
                    var return_v = new System.ArgumentException(message, paramName);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 159360, 159435);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.MergedNamespaceDeclaration
                f_10038_159504_159530(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param)
                {
                    var return_v = this_param.MergedRootDeclaration;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 159504, 159530);
                    return return_v;
                }


                bool
                f_10038_159474_159564(Microsoft.CodeAnalysis.CSharp.MergedNamespaceDeclaration
                mergedRoot, string
                name, Microsoft.CodeAnalysis.SymbolFilter
                filter, System.Threading.CancellationToken
                cancellationToken)
                {
                    var return_v = DeclarationTable.ContainsName(mergedRoot, name, filter, cancellationToken);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 159474, 159564);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 158983, 159576);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 158983, 159576);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override IEnumerable<ISymbol> GetSymbolsWithName(string name, SymbolFilter filter = SymbolFilter.TypeAndMember, CancellationToken cancellationToken = default)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 159961, 160245);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 160151, 160234);

                return f_10038_160158_160232(f_10038_160158_160213(this, name, filter, cancellationToken))!;
                DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 159961, 160245);

                System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.CSharp.Symbol>
                f_10038_160158_160213(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param, string
                name, Microsoft.CodeAnalysis.SymbolFilter
                filter, System.Threading.CancellationToken
                cancellationToken)
                {
                    var return_v = this_param.GetSymbolsWithNameCore(name, filter, cancellationToken);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 160158, 160213);
                    return return_v;
                }


                System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.ISymbol?>
                f_10038_160158_160232(System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.CSharp.Symbol>
                symbols)
                {
                    var return_v = symbols.GetPublicSymbols();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 160158, 160232);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 159961, 160245);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 159961, 160245);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        internal IEnumerable<Symbol> GetSymbolsWithNameCore(string name, SymbolFilter filter = SymbolFilter.TypeAndMember, CancellationToken cancellationToken = default)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 160257, 160849);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 160443, 160554) || true) && (name == null)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 160443, 160554);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 160493, 160539);

                    throw f_10038_160499_160538(nameof(name));
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 160443, 160554);
                }

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 160570, 160732) || true) && (filter == SymbolFilter.None)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 160570, 160732);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 160635, 160717);

                    throw f_10038_160641_160716(f_10038_160663_160699(), nameof(filter));
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 160570, 160732);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 160748, 160838);

                return f_10038_160755_160837(f_10038_160755_160816(this, filter, name, cancellationToken));
                DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 160257, 160849);

                System.ArgumentNullException
                f_10038_160499_160538(string
                paramName)
                {
                    var return_v = new System.ArgumentNullException(paramName);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 160499, 160538);
                    return return_v;
                }


                string
                f_10038_160663_160699()
                {
                    var return_v = CSharpResources.NoNoneSearchCriteria;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 160663, 160699);
                    return return_v;
                }


                System.ArgumentException
                f_10038_160641_160716(string
                message, string
                paramName)
                {
                    var return_v = new System.ArgumentException(message, paramName);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 160641, 160716);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSharpCompilation.NameSymbolSearcher
                f_10038_160755_160816(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                compilation, Microsoft.CodeAnalysis.SymbolFilter
                filter, string
                name, System.Threading.CancellationToken
                cancellationToken)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.CSharpCompilation.NameSymbolSearcher(compilation, filter, name, cancellationToken);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 160755, 160816);
                    return return_v;
                }


                System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.CSharp.Symbol>
                f_10038_160755_160837(Microsoft.CodeAnalysis.CSharp.CSharpCompilation.NameSymbolSearcher
                this_param)
                {
                    var return_v = this_param.GetSymbolsWithName();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 160755, 160837);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 160257, 160849);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 160257, 160849);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }
        #endregion

        #region Middle methods
        internal bool HasDynamicEmitAttributes()
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 161184, 161528);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 161249, 161517);

                return
                f_10038_161273_161367(this, WellKnownMember.System_Runtime_CompilerServices_DynamicAttribute__ctor) is object && (DynAbs.Tracing.TraceSender.Expression_True(10038, 161273, 161516) && f_10038_161398_161506(this, WellKnownMember.System_Runtime_CompilerServices_DynamicAttribute__ctorTransformFlags) is object);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 161184, 161528);

                Microsoft.CodeAnalysis.CSharp.Symbol?
                f_10038_161273_161367(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param, Microsoft.CodeAnalysis.WellKnownMember
                member)
                {
                    var return_v = this_param.GetWellKnownTypeMember(member);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 161273, 161367);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbol?
                f_10038_161398_161506(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param, Microsoft.CodeAnalysis.WellKnownMember
                member)
                {
                    var return_v = this_param.GetWellKnownTypeMember(member);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 161398, 161506);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 161184, 161528);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 161184, 161528);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        internal bool HasTupleNamesAttributes
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 161578, 161722);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 161594, 161722);
                    return f_10038_161594_161712(this, WellKnownMember.System_Runtime_CompilerServices_TupleElementNamesAttribute__ctorTransformNames) is object; DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 161578, 161722);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 161578, 161722);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 161578, 161722);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        internal bool CanEmitBoolean()
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 161977, 162026);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 161980, 162026);
                return f_10038_161980_162026(this, SpecialType.System_Boolean); DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 161977, 162026);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 161977, 162026);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 161977, 162026);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        internal bool CanEmitSpecialType(SpecialType type)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 162039, 162323);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 162114, 162152);

                var
                typeSymbol = f_10038_162131_162151(this, type)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 162166, 162217);

                var
                diagnostic = f_10038_162183_162216(typeSymbol)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 162231, 162312);

                return (diagnostic == null) || (DynAbs.Tracing.TraceSender.Expression_False(10038, 162238, 162311) || (f_10038_162263_162282(diagnostic) != DiagnosticSeverity.Error));
                DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 162039, 162323);

                Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                f_10038_162131_162151(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param, Microsoft.CodeAnalysis.SpecialType
                specialType)
                {
                    var return_v = this_param.GetSpecialType(specialType);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 162131, 162151);
                    return return_v;
                }


                Microsoft.CodeAnalysis.DiagnosticInfo
                f_10038_162183_162216(Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                this_param)
                {
                    var return_v = this_param.GetUseSiteDiagnostic();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 162183, 162216);
                    return return_v;
                }


                Microsoft.CodeAnalysis.DiagnosticSeverity
                f_10038_162263_162282(Microsoft.CodeAnalysis.DiagnosticInfo
                this_param)
                {
                    var return_v = this_param.Severity;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 162263, 162282);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 162039, 162323);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 162039, 162323);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        internal bool EmitNullablePublicOnly
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 162396, 162994);

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 162432, 162918) || true) && (!f_10038_162437_162475(_lazyEmitNullablePublicOnly))
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 162432, 162918);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 162548, 162591);

                        var
                        firstSt = f_10038_162562_162573().FirstOrDefault()
                        ;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 162613, 162826);

                        bool
                        value = firstSt != null && (DynAbs.Tracing.TraceSender.Expression_True(10038, 162626, 162668) && f_10038_162645_162660(firstSt) != null) && (DynAbs.Tracing.TraceSender.Expression_True(10038, 162626, 162729) && f_10038_162697_162721(f_10038_162697_162712(firstSt)) != null) && (DynAbs.Tracing.TraceSender.Expression_True(10038, 162626, 162825) && f_10038_162759_162817(f_10038_162759_162783(f_10038_162759_162774(firstSt)), "nullablePublicOnly") == true)
                        ;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 162848, 162899);

                        _lazyEmitNullablePublicOnly = f_10038_162878_162898(value);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 162432, 162918);
                    }
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 162936, 162979);

                    return f_10038_162943_162978(_lazyEmitNullablePublicOnly);
                    DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 162396, 162994);

                    bool
                    f_10038_162437_162475(Microsoft.CodeAnalysis.ThreeState
                    value)
                    {
                        var return_v = value.HasValue();
                        DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 162437, 162475);
                        return return_v;
                    }


                    System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.SyntaxTree>
                    f_10038_162562_162573()
                    {
                        var return_v = SyntaxTrees;
                        DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 162562, 162573);
                        return return_v;
                    }


                    Microsoft.CodeAnalysis.ParseOptions
                    f_10038_162645_162660(Microsoft.CodeAnalysis.SyntaxTree
                    this_param)
                    {
                        var return_v = this_param.Options;
                        DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 162645, 162660);
                        return return_v;
                    }


                    Microsoft.CodeAnalysis.ParseOptions
                    f_10038_162697_162712(Microsoft.CodeAnalysis.SyntaxTree
                    this_param)
                    {
                        var return_v = this_param.Options;
                        DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 162697, 162712);
                        return return_v;
                    }


                    System.Collections.Generic.IReadOnlyDictionary<string, string>
                    f_10038_162697_162721(Microsoft.CodeAnalysis.ParseOptions
                    this_param)
                    {
                        var return_v = this_param.Features;
                        DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 162697, 162721);
                        return return_v;
                    }


                    Microsoft.CodeAnalysis.ParseOptions
                    f_10038_162759_162774(Microsoft.CodeAnalysis.SyntaxTree
                    this_param)
                    {
                        var return_v = this_param.Options;
                        DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 162759, 162774);
                        return return_v;
                    }


                    System.Collections.Generic.IReadOnlyDictionary<string, string>
                    f_10038_162759_162783(Microsoft.CodeAnalysis.ParseOptions
                    this_param)
                    {
                        var return_v = this_param.Features;
                        DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 162759, 162783);
                        return return_v;
                    }


                    bool
                    f_10038_162759_162817(System.Collections.Generic.IReadOnlyDictionary<string, string>
                    this_param, string
                    key)
                    {
                        var return_v = this_param.ContainsKey(key);
                        DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 162759, 162817);
                        return return_v;
                    }


                    Microsoft.CodeAnalysis.ThreeState
                    f_10038_162878_162898(bool
                    value)
                    {
                        var return_v = value.ToThreeState();
                        DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 162878, 162898);
                        return return_v;
                    }


                    bool
                    f_10038_162943_162978(Microsoft.CodeAnalysis.ThreeState
                    value)
                    {
                        var return_v = value.Value();
                        DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 162943, 162978);
                        return return_v;
                    }

                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 162335, 163005);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 162335, 163005);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        internal bool ShouldEmitNullableAttributes(Symbol symbol)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 163017, 164492);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 163099, 163136);

                f_10038_163099_163135(symbol is object);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 163150, 163184);

                f_10038_163150_163183(f_10038_163163_163182(symbol));

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 163200, 163305) || true) && (f_10038_163204_163227(symbol) != f_10038_163231_163243())
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 163200, 163305);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 163277, 163290);

                    return false;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 163200, 163305);
                }

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 163321, 163409) || true) && (f_10038_163325_163348_M(!EmitNullablePublicOnly))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 163321, 163409);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 163382, 163394);

                    return true;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 163321, 163409);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 163562, 163610);

                symbol = f_10038_163571_163609(symbol);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 163626, 163763) || true) && (!f_10038_163631_163701(symbol, out var isInternal))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 163626, 163763);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 163735, 163748);

                    return false;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 163626, 163763);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 163779, 163836);

                return !isInternal || (DynAbs.Tracing.TraceSender.Expression_False(10038, 163786, 163835) || f_10038_163801_163835(f_10038_163801_163815()));

                static Symbol getExplicitAccessibilitySymbol(Symbol symbol)
                {
                    try
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterStaticMethod(10038, 163852, 164481);
                        try
                        {
                            while ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 163944, 164466) || true) && (true)
                            )

                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 163944, 164466);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 163997, 164447);

                                switch (f_10038_164005_164016(symbol))
                                {

                                    case SymbolKind.Parameter:
                                    case SymbolKind.TypeParameter:
                                    case SymbolKind.Property:
                                    case SymbolKind.Event:
                                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 163997, 164447);
                                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 164277, 164310);

                                        symbol = f_10038_164286_164309(symbol);
                                        DynAbs.Tracing.TraceSender.TraceBreak(10038, 164340, 164346);

                                        break;
                                        DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 163997, 164447);

                                    default:
                                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 163997, 164447);
                                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 164410, 164424);

                                        return symbol;
                                        DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 163997, 164447);
                                }
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 163944, 164466);
                            }
                        }
                        catch (System.Exception)
                        {
                            DynAbs.Tracing.TraceSender.TraceExitLoopByException(10038, 163944, 164466);
                            throw;
                        }
                        finally
                        {
                            DynAbs.Tracing.TraceSender.TraceExitLoop(10038, 163944, 164466);
                        }
                        DynAbs.Tracing.TraceSender.TraceExitStaticMethod(10038, 163852, 164481);

                        Microsoft.CodeAnalysis.SymbolKind
                        f_10038_164005_164016(Microsoft.CodeAnalysis.CSharp.Symbol
                        this_param)
                        {
                            var return_v = this_param.Kind;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 164005, 164016);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.CSharp.Symbol
                        f_10038_164286_164309(Microsoft.CodeAnalysis.CSharp.Symbol
                        this_param)
                        {
                            var return_v = this_param.ContainingSymbol;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 164286, 164309);
                            return return_v;
                        }

                    }
                    catch
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 163852, 164481);
                        throw;
                    }
                    finally
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 163852, 164481);
                    }
                    throw new System.Exception("Slicer error: unreachable code");
                }
                DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 163017, 164492);

                int
                f_10038_163099_163135(bool
                b)
                {
                    RoslynDebug.Assert(b);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 163099, 163135);
                    return 0;
                }


                bool
                f_10038_163163_163182(Microsoft.CodeAnalysis.CSharp.Symbol
                this_param)
                {
                    var return_v = this_param.IsDefinition;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 163163, 163182);
                    return return_v;
                }


                int
                f_10038_163150_163183(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 163150, 163183);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.ModuleSymbol
                f_10038_163204_163227(Microsoft.CodeAnalysis.CSharp.Symbol
                this_param)
                {
                    var return_v = this_param.ContainingModule;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 163204, 163227);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.ModuleSymbol
                f_10038_163231_163243()
                {
                    var return_v = SourceModule;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 163231, 163243);
                    return return_v;
                }


                bool
                f_10038_163325_163348_M(bool
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 163325, 163348);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbol
                f_10038_163571_163609(Microsoft.CodeAnalysis.CSharp.Symbol
                symbol)
                {
                    var return_v = getExplicitAccessibilitySymbol(symbol);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 163571, 163609);
                    return return_v;
                }


                bool
                f_10038_163631_163701(Microsoft.CodeAnalysis.CSharp.Symbol
                symbol, out bool
                isInternal)
                {
                    var return_v = AccessCheck.IsEffectivelyPublicOrInternal(symbol, out isInternal);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 163631, 163701);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.SourceAssemblySymbol
                f_10038_163801_163815()
                {
                    var return_v = SourceAssembly;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 163801, 163815);
                    return return_v;
                }


                bool
                f_10038_163801_163835(Microsoft.CodeAnalysis.CSharp.Symbols.SourceAssemblySymbol
                this_param)
                {
                    var return_v = this_param.InternalsAreVisible;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 163801, 163835);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 163017, 164492);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 163017, 164492);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        internal override AnalyzerDriver CreateAnalyzerDriver(ImmutableArray<DiagnosticAnalyzer> analyzers, AnalyzerManager analyzerManager, SeverityFilter severityFilter)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 164504, 165045);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 164692, 164751);

                Func<SyntaxNode, SyntaxKind>
                getKind = node => node.Kind()
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 164765, 164918);

                Func<SyntaxTrivia, bool>
                isComment = trivia => trivia.Kind() == SyntaxKind.SingleLineCommentTrivia || trivia.Kind() == SyntaxKind.MultiLineCommentTrivia
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 164932, 165034);

                return f_10038_164939_165033(analyzers, getKind, analyzerManager, severityFilter, isComment);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 164504, 165045);

                Microsoft.CodeAnalysis.Diagnostics.AnalyzerDriver<Microsoft.CodeAnalysis.CSharp.SyntaxKind>
                f_10038_164939_165033(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzer>
                analyzers, System.Func<Microsoft.CodeAnalysis.SyntaxNode, Microsoft.CodeAnalysis.CSharp.SyntaxKind>
                getKind, Microsoft.CodeAnalysis.Diagnostics.AnalyzerManager
                analyzerManager, Microsoft.CodeAnalysis.Diagnostics.SeverityFilter
                severityFilter, System.Func<Microsoft.CodeAnalysis.SyntaxTrivia, bool>
                isComment)
                {
                    var return_v = new Microsoft.CodeAnalysis.Diagnostics.AnalyzerDriver<Microsoft.CodeAnalysis.CSharp.SyntaxKind>(analyzers, getKind, analyzerManager, severityFilter, isComment);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 164939, 165033);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 164504, 165045);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 164504, 165045);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        internal void SymbolDeclaredEvent(Symbol symbol)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 165057, 165232);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 165130, 165221);

                // LAFHIS
                //f_10038_165141_165220(DynAbs.Tracing.TraceSender.TraceConditionalAccessExpression(f_10038_165130_165140(), 10038, 165130, 165220), f_10038_165153_165219(this, f_10038_165194_165218(symbol)));

                f_10038_165130_165220_I(DynAbs.Tracing.TraceSender.TraceConditionalAccessExpression(f_10038_165130_165140(), 10202, 165130, 165220)?.TryEnqueue(f_10038_165153_165219(this, f_10038_165194_165218(symbol))));
                DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 165057, 165232);

                Microsoft.CodeAnalysis.Diagnostics.AsyncQueue<Microsoft.CodeAnalysis.Diagnostics.CompilationEvent>?
f_10038_165130_165140()
                {
                    var return_v = EventQueue;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 165130, 165140);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ISymbol?
                f_10038_165194_165218(Microsoft.CodeAnalysis.CSharp.Symbol
                symbol)
                {
                    var return_v = symbol.GetPublicSymbol();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 165194, 165218);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Diagnostics.SymbolDeclaredCompilationEvent
                f_10038_165153_165219(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                compilation, Microsoft.CodeAnalysis.ISymbol
                symbol)
                {
                    var return_v = new Microsoft.CodeAnalysis.Diagnostics.SymbolDeclaredCompilationEvent((Microsoft.CodeAnalysis.Compilation)compilation, symbol);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 165153, 165219);
                    return return_v;
                }


                bool?
                f_10038_165130_165220_I(bool?
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 165130, 165220);
                    return return_v;
                }



            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 165057, 165232);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 165057, 165232);
            }
        }

        internal override void SerializePdbEmbeddedCompilationOptions(BlobBuilder builder)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 165244, 166661);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 165430, 165512);

                f_10038_165430_165511(f_10038_165443_165458() == f_10038_165462_165510(f_10038_165462_165477()));
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 165526, 165612);

                f_10038_165526_165611(CompilationOptionNames.LanguageVersion, f_10038_165577_165610(f_10038_165577_165592()));

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 165628, 165779) || true) && (f_10038_165632_165653(f_10038_165632_165639()))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 165628, 165779);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 165687, 165764);

                    f_10038_165687_165763(CompilationOptionNames.Checked, f_10038_165730_165762(f_10038_165730_165751(f_10038_165730_165737())));
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 165628, 165779);
                }

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 165795, 165999) || true) && (f_10038_165799_165829(f_10038_165799_165806()) != NullableContextOptions.Disable)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 165795, 165999);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 165897, 165984);

                    f_10038_165897_165983(CompilationOptionNames.Nullable, f_10038_165941_165982(f_10038_165941_165971(f_10038_165941_165948())));
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 165795, 165999);
                }

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 166015, 166161) || true) && (f_10038_166019_166038(f_10038_166019_166026()))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 166015, 166161);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 166072, 166146);

                    f_10038_166072_166145(CompilationOptionNames.Unsafe, f_10038_166114_166144(f_10038_166114_166133(f_10038_166114_166121())));
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 166015, 166161);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 166177, 166228);

                var
                preprocessorSymbols = f_10038_166203_166227(this)
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 166242, 166401) || true) && (preprocessorSymbols.Any())
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 166242, 166401);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 166305, 166386);

                    f_10038_166305_166385(CompilationOptionNames.Define, f_10038_166347_166384(",", preprocessorSymbols));
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 166242, 166401);
                }

                void WriteValue(string key, string value)
                {
                    try
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 166417, 166650);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 166491, 166514);

                        f_10038_166491_166513(builder, key);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 166532, 166553);

                        f_10038_166532_166552(builder, 0);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 166571, 166596);

                        f_10038_166571_166595(builder, value);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 166614, 166635);

                        f_10038_166614_166634(builder, 0);
                        DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 166417, 166650);

                        int
                        f_10038_166491_166513(System.Reflection.Metadata.BlobBuilder
                        this_param, string
                        value)
                        {
                            this_param.WriteUTF8(value);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 166491, 166513);
                            return 0;
                        }


                        int
                        f_10038_166532_166552(System.Reflection.Metadata.BlobBuilder
                        this_param, int
                        value)
                        {
                            this_param.WriteByte((byte)value);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 166532, 166552);
                            return 0;
                        }


                        int
                        f_10038_166571_166595(System.Reflection.Metadata.BlobBuilder
                        this_param, string
                        value)
                        {
                            this_param.WriteUTF8(value);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 166571, 166595);
                            return 0;
                        }


                        int
                        f_10038_166614_166634(System.Reflection.Metadata.BlobBuilder
                        this_param, int
                        value)
                        {
                            this_param.WriteByte((byte)value);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 166614, 166634);
                            return 0;
                        }

                    }
                    catch
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 166417, 166650);
                        throw;
                    }
                    finally
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 166417, 166650);
                    }
                }
                DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 165244, 166661);

                Microsoft.CodeAnalysis.CSharp.LanguageVersion
                f_10038_165443_165458()
                {
                    var return_v = LanguageVersion;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 165443, 165458);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.LanguageVersion
                f_10038_165462_165477()
                {
                    var return_v = LanguageVersion;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 165462, 165477);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.LanguageVersion
                f_10038_165462_165510(Microsoft.CodeAnalysis.CSharp.LanguageVersion
                version)
                {
                    var return_v = version.MapSpecifiedToEffectiveVersion();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 165462, 165510);
                    return return_v;
                }


                int
                f_10038_165430_165511(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 165430, 165511);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.LanguageVersion
                f_10038_165577_165592()
                {
                    var return_v = LanguageVersion;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 165577, 165592);
                    return return_v;
                }


                string
                f_10038_165577_165610(Microsoft.CodeAnalysis.CSharp.LanguageVersion
                version)
                {
                    var return_v = version.ToDisplayString();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 165577, 165610);
                    return return_v;
                }


                int
                f_10038_165526_165611(string
                key, string
                value)
                {
                    WriteValue(key, value);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 165526, 165611);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions
                f_10038_165632_165639()
                {
                    var return_v = Options;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 165632, 165639);
                    return return_v;
                }


                bool
                f_10038_165632_165653(Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions
                this_param)
                {
                    var return_v = this_param.CheckOverflow;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 165632, 165653);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions
                f_10038_165730_165737()
                {
                    var return_v = Options;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 165730, 165737);
                    return return_v;
                }


                bool
                f_10038_165730_165751(Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions
                this_param)
                {
                    var return_v = this_param.CheckOverflow;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 165730, 165751);
                    return return_v;
                }


                string
                f_10038_165730_165762(bool
                this_param)
                {
                    var return_v = this_param.ToString();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 165730, 165762);
                    return return_v;
                }


                int
                f_10038_165687_165763(string
                key, string
                value)
                {
                    WriteValue(key, value);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 165687, 165763);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions
                f_10038_165799_165806()
                {
                    var return_v = Options;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 165799, 165806);
                    return return_v;
                }


                Microsoft.CodeAnalysis.NullableContextOptions
                f_10038_165799_165829(Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions
                this_param)
                {
                    var return_v = this_param.NullableContextOptions;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 165799, 165829);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions
                f_10038_165941_165948()
                {
                    var return_v = Options;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 165941, 165948);
                    return return_v;
                }


                Microsoft.CodeAnalysis.NullableContextOptions
                f_10038_165941_165971(Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions
                this_param)
                {
                    var return_v = this_param.NullableContextOptions;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 165941, 165971);
                    return return_v;
                }


                string
                f_10038_165941_165982(Microsoft.CodeAnalysis.NullableContextOptions
                this_param)
                {
                    var return_v = this_param.ToString();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 165941, 165982);
                    return return_v;
                }


                int
                f_10038_165897_165983(string
                key, string
                value)
                {
                    WriteValue(key, value);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 165897, 165983);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions
                f_10038_166019_166026()
                {
                    var return_v = Options;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 166019, 166026);
                    return return_v;
                }


                bool
                f_10038_166019_166038(Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions
                this_param)
                {
                    var return_v = this_param.AllowUnsafe;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 166019, 166038);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions
                f_10038_166114_166121()
                {
                    var return_v = Options;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 166114, 166121);
                    return return_v;
                }


                bool
                f_10038_166114_166133(Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions
                this_param)
                {
                    var return_v = this_param.AllowUnsafe;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 166114, 166133);
                    return return_v;
                }


                string
                f_10038_166114_166144(bool
                this_param)
                {
                    var return_v = this_param.ToString();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 166114, 166144);
                    return return_v;
                }


                int
                f_10038_166072_166145(string
                key, string
                value)
                {
                    WriteValue(key, value);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 166072, 166145);
                    return 0;
                }


                System.Collections.Immutable.ImmutableArray<string>
                f_10038_166203_166227(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param)
                {
                    var return_v = this_param.GetPreprocessorSymbols();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 166203, 166227);
                    return return_v;
                }


                string
                f_10038_166347_166384(string
                separator, System.Collections.Immutable.ImmutableArray<string>
                values)
                {
                    var return_v = string.Join(separator, (System.Collections.Generic.IEnumerable<string?>)values);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 166347, 166384);
                    return return_v;
                }


                int
                f_10038_166305_166385(string
                key, string
                value)
                {
                    WriteValue(key, value);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 166305, 166385);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 165244, 166661);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 165244, 166661);
            }
        }

        private ImmutableArray<string> GetPreprocessorSymbols()
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 166673, 167048);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 166753, 166831);

                CSharpSyntaxTree?
                firstTree = (CSharpSyntaxTree?)f_10038_166802_166813().FirstOrDefault()
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 166847, 166953) || true) && (firstTree is null)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 166847, 166953);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 166902, 166938);

                    return ImmutableArray<string>.Empty;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 166847, 166953);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 166969, 167037);

                return f_10038_166976_167036(f_10038_166976_167017(f_10038_166976_166993(firstTree)));
                DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 166673, 167048);

                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.SyntaxTree>
                f_10038_166802_166813()
                {
                    var return_v = SyntaxTrees;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 166802, 166813);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSharpParseOptions
                f_10038_166976_166993(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxTree
                this_param)
                {
                    var return_v = this_param.Options;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 166976, 166993);
                    return return_v;
                }


                System.Collections.Generic.IEnumerable<string>
                f_10038_166976_167017(Microsoft.CodeAnalysis.CSharp.CSharpParseOptions
                this_param)
                {
                    var return_v = this_param.PreprocessorSymbolNames;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 166976, 167017);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<string>
                f_10038_166976_167036(System.Collections.Generic.IEnumerable<string>
                items)
                {
                    var return_v = items.ToImmutableArray<string>();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 166976, 167036);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 166673, 167048);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 166673, 167048);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        internal bool EnableEnumArrayBlockInitialization
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 167794, 168079);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 167830, 167946);

                    var
                    sustainedLowLatency = f_10038_167856_167945(this, WellKnownMember.System_Runtime_GCLatencyMode__SustainedLowLatency)
                    ;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 167964, 168064);

                    return sustainedLowLatency != null && (DynAbs.Tracing.TraceSender.Expression_True(10038, 167971, 168063) && f_10038_168002_168040(sustainedLowLatency) == f_10038_168044_168063(f_10038_168044_168052()));
                    DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 167794, 168079);

                    Microsoft.CodeAnalysis.CSharp.Symbol?
                    f_10038_167856_167945(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                    this_param, Microsoft.CodeAnalysis.WellKnownMember
                    member)
                    {
                        var return_v = this_param.GetWellKnownTypeMember(member);
                        DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 167856, 167945);
                        return return_v;
                    }


                    Microsoft.CodeAnalysis.CSharp.Symbols.AssemblySymbol
                    f_10038_168002_168040(Microsoft.CodeAnalysis.CSharp.Symbol
                    this_param)
                    {
                        var return_v = this_param.ContainingAssembly;
                        DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 168002, 168040);
                        return return_v;
                    }


                    Microsoft.CodeAnalysis.CSharp.Symbols.AssemblySymbol
                    f_10038_168044_168052()
                    {
                        var return_v = Assembly;
                        DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 168044, 168052);
                        return return_v;
                    }


                    Microsoft.CodeAnalysis.CSharp.Symbols.AssemblySymbol
                    f_10038_168044_168063(Microsoft.CodeAnalysis.CSharp.Symbols.AssemblySymbol
                    this_param)
                    {
                        var return_v = this_param.CorLibrary;
                        DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 168044, 168063);
                        return return_v;
                    }

                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 167721, 168090);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 167721, 168090);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }
        #endregion

        #region Clases
        private abstract class AbstractSymbolSearcher
        {
            private readonly PooledDictionary<Declaration, NamespaceOrTypeSymbol> _cache;

            private readonly CSharpCompilation _compilation;

            private readonly bool _includeNamespace;

            private readonly bool _includeType;

            private readonly bool _includeMember;

            private readonly CancellationToken _cancellationToken;

            protected AbstractSymbolSearcher(
                            CSharpCompilation compilation, SymbolFilter filter, CancellationToken cancellationToken)
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterConstructor(10038, 168549, 169190);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 168242, 168248);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 168298, 168310);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 168347, 168364);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 168401, 168413);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 168450, 168464);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 168721, 168797);

                    _cache = f_10038_168730_168796();
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 168817, 168844);

                    _compilation = compilation;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 168864, 168944);

                    _includeNamespace = (filter & SymbolFilter.Namespace) == SymbolFilter.Namespace;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 168962, 169027);

                    _includeType = (filter & SymbolFilter.Type) == SymbolFilter.Type;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 169045, 169116);

                    _includeMember = (filter & SymbolFilter.Member) == SymbolFilter.Member;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 169136, 169175);

                    _cancellationToken = cancellationToken;
                    DynAbs.Tracing.TraceSender.TraceExitConstructor(10038, 168549, 169190);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 168549, 169190);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 168549, 169190);
                }
            }

            protected abstract bool Matches(string name);

            protected abstract bool ShouldCheckTypeForMembers(MergedTypeDeclaration current);

            public IEnumerable<Symbol> GetSymbolsWithName()
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 169362, 169773);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 169442, 169477);

                    var
                    result = f_10038_169455_169476()
                    ;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 169495, 169568);

                    var
                    spine = f_10038_169507_169567()
                    ;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 169588, 169661);

                    f_10038_169588_169660(this, spine, f_10038_169617_169651(_compilation), result);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 169681, 169694);

                    f_10038_169681_169693(
                                    spine);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 169712, 169726);

                    f_10038_169712_169725(_cache);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 169744, 169758);

                    return result;
                    DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 169362, 169773);

                    System.Collections.Generic.HashSet<Microsoft.CodeAnalysis.CSharp.Symbol>
                    f_10038_169455_169476()
                    {
                        var return_v = new System.Collections.Generic.HashSet<Microsoft.CodeAnalysis.CSharp.Symbol>();
                        DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 169455, 169476);
                        return return_v;
                    }


                    Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.MergedNamespaceOrTypeDeclaration>
                    f_10038_169507_169567()
                    {
                        var return_v = ArrayBuilder<MergedNamespaceOrTypeDeclaration>.GetInstance();
                        DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 169507, 169567);
                        return return_v;
                    }


                    Microsoft.CodeAnalysis.CSharp.MergedNamespaceDeclaration
                    f_10038_169617_169651(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                    this_param)
                    {
                        var return_v = this_param.MergedRootDeclaration;
                        DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 169617, 169651);
                        return return_v;
                    }


                    int
                    f_10038_169588_169660(Microsoft.CodeAnalysis.CSharp.CSharpCompilation.AbstractSymbolSearcher
                    this_param, Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.MergedNamespaceOrTypeDeclaration>
                    spine, Microsoft.CodeAnalysis.CSharp.MergedNamespaceDeclaration
                    current, System.Collections.Generic.HashSet<Microsoft.CodeAnalysis.CSharp.Symbol>
                    set)
                    {
                        this_param.AppendSymbolsWithName(spine, (Microsoft.CodeAnalysis.CSharp.MergedNamespaceOrTypeDeclaration)current, set);
                        DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 169588, 169660);
                        return 0;
                    }


                    int
                    f_10038_169681_169693(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.MergedNamespaceOrTypeDeclaration>
                    this_param)
                    {
                        this_param.Free();
                        DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 169681, 169693);
                        return 0;
                    }


                    int
                    f_10038_169712_169725(Microsoft.CodeAnalysis.PooledObjects.PooledDictionary<Microsoft.CodeAnalysis.CSharp.Declaration, Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceOrTypeSymbol>
                    this_param)
                    {
                        this_param.Free();
                        DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 169712, 169725);
                        return 0;
                    }

                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 169362, 169773);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 169362, 169773);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }

            private void AppendSymbolsWithName(
                            ArrayBuilder<MergedNamespaceOrTypeDeclaration> spine, MergedNamespaceOrTypeDeclaration current,
                            HashSet<Symbol> set)
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 169789, 171932);

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 170008, 171315) || true) && (f_10038_170012_170024(current) == DeclarationKind.Namespace)
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 170008, 171315);

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 170095, 170466) || true) && (_includeNamespace && (DynAbs.Tracing.TraceSender.Expression_True(10038, 170099, 170141) && f_10038_170120_170141(this, f_10038_170128_170140(current))))
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 170095, 170466);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 170191, 170229);

                            var
                            container = f_10038_170207_170228(this, spine)
                            ;
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 170255, 170298);

                            var
                            symbol = f_10038_170268_170297(this, container, current)
                            ;

                            if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 170324, 170443) || true) && (symbol != null)
                            )

                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 170324, 170443);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 170400, 170416);

                                f_10038_170400_170415(set, symbol);
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 170324, 170443);
                            }
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 170095, 170466);
                        }
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 170008, 171315);
                    }

                    else

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 170008, 171315);

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 170548, 170914) || true) && (_includeType && (DynAbs.Tracing.TraceSender.Expression_True(10038, 170552, 170589) && f_10038_170568_170589(this, f_10038_170576_170588(current))))
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 170548, 170914);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 170639, 170677);

                            var
                            container = f_10038_170655_170676(this, spine)
                            ;
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 170703, 170746);

                            var
                            symbol = f_10038_170716_170745(this, container, current)
                            ;

                            if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 170772, 170891) || true) && (symbol != null)
                            )

                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 170772, 170891);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 170848, 170864);

                                f_10038_170848_170863(set, symbol);
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 170772, 170891);
                            }
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 170548, 170914);
                        }

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 170938, 171296) || true) && (_includeMember)
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 170938, 171296);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 171006, 171059);

                            var
                            typeDeclaration = (MergedTypeDeclaration)current
                            ;

                            if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 171085, 171273) || true) && (f_10038_171089_171131(this, typeDeclaration))
                            )

                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 171085, 171273);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 171189, 171246);

                                f_10038_171189_171245(this, spine, typeDeclaration, set);
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 171085, 171273);
                            }
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 170938, 171296);
                        }
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 170008, 171315);
                    }
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 171335, 171354);

                    f_10038_171335_171353(
                                    spine, current);
                    try
                    {
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 171374, 171832);
                        foreach (var child in f_10038_171396_171412_I(f_10038_171396_171412(current)))
                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 171374, 171832);

                            if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 171454, 171813) || true) && (child is MergedNamespaceOrTypeDeclaration mergedNamespaceOrType)
                            )

                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 171454, 171813);

                                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 171571, 171790) || true) && (_includeMember || (DynAbs.Tracing.TraceSender.Expression_False(10038, 171575, 171605) || _includeType) || (DynAbs.Tracing.TraceSender.Expression_False(10038, 171575, 171648) || f_10038_171609_171619(child) == DeclarationKind.Namespace))
                                )

                                {
                                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 171571, 171790);
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 171706, 171763);

                                    f_10038_171706_171762(this, spine, mergedNamespaceOrType, set);
                                    DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 171571, 171790);
                                }
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 171454, 171813);
                            }
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 171374, 171832);
                        }
                    }
                    catch (System.Exception)
                    {
                        DynAbs.Tracing.TraceSender.TraceExitLoopByException(10038, 1, 459);
                        throw;
                    }
                    finally
                    {
                        DynAbs.Tracing.TraceSender.TraceExitLoop(10038, 1, 459);
                    }
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 171885, 171917);

                    f_10038_171885_171916(
                                    // pop last one
                                    spine, f_10038_171900_171911(spine) - 1);
                    DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 169789, 171932);

                    Microsoft.CodeAnalysis.CSharp.DeclarationKind
                    f_10038_170012_170024(Microsoft.CodeAnalysis.CSharp.MergedNamespaceOrTypeDeclaration
                    this_param)
                    {
                        var return_v = this_param.Kind;
                        DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 170012, 170024);
                        return return_v;
                    }


                    string
                    f_10038_170128_170140(Microsoft.CodeAnalysis.CSharp.MergedNamespaceOrTypeDeclaration
                    this_param)
                    {
                        var return_v = this_param.Name;
                        DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 170128, 170140);
                        return return_v;
                    }


                    bool
                    f_10038_170120_170141(Microsoft.CodeAnalysis.CSharp.CSharpCompilation.AbstractSymbolSearcher
                    this_param, string
                    name)
                    {
                        var return_v = this_param.Matches(name);
                        DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 170120, 170141);
                        return return_v;
                    }


                    Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceOrTypeSymbol?
                    f_10038_170207_170228(Microsoft.CodeAnalysis.CSharp.CSharpCompilation.AbstractSymbolSearcher
                    this_param, Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.MergedNamespaceOrTypeDeclaration>
                    spine)
                    {
                        var return_v = this_param.GetSpineSymbol(spine);
                        DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 170207, 170228);
                        return return_v;
                    }


                    Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceOrTypeSymbol?
                    f_10038_170268_170297(Microsoft.CodeAnalysis.CSharp.CSharpCompilation.AbstractSymbolSearcher
                    this_param, Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceOrTypeSymbol?
                    container, Microsoft.CodeAnalysis.CSharp.MergedNamespaceOrTypeDeclaration
                    declaration)
                    {
                        var return_v = this_param.GetSymbol(container, declaration);
                        DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 170268, 170297);
                        return return_v;
                    }


                    bool
                    f_10038_170400_170415(System.Collections.Generic.HashSet<Microsoft.CodeAnalysis.CSharp.Symbol>
                    this_param, Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceOrTypeSymbol
                    item)
                    {
                        var return_v = this_param.Add((Microsoft.CodeAnalysis.CSharp.Symbol)item);
                        DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 170400, 170415);
                        return return_v;
                    }


                    string
                    f_10038_170576_170588(Microsoft.CodeAnalysis.CSharp.MergedNamespaceOrTypeDeclaration
                    this_param)
                    {
                        var return_v = this_param.Name;
                        DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 170576, 170588);
                        return return_v;
                    }


                    bool
                    f_10038_170568_170589(Microsoft.CodeAnalysis.CSharp.CSharpCompilation.AbstractSymbolSearcher
                    this_param, string
                    name)
                    {
                        var return_v = this_param.Matches(name);
                        DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 170568, 170589);
                        return return_v;
                    }


                    Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceOrTypeSymbol?
                    f_10038_170655_170676(Microsoft.CodeAnalysis.CSharp.CSharpCompilation.AbstractSymbolSearcher
                    this_param, Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.MergedNamespaceOrTypeDeclaration>
                    spine)
                    {
                        var return_v = this_param.GetSpineSymbol(spine);
                        DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 170655, 170676);
                        return return_v;
                    }


                    Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceOrTypeSymbol?
                    f_10038_170716_170745(Microsoft.CodeAnalysis.CSharp.CSharpCompilation.AbstractSymbolSearcher
                    this_param, Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceOrTypeSymbol?
                    container, Microsoft.CodeAnalysis.CSharp.MergedNamespaceOrTypeDeclaration
                    declaration)
                    {
                        var return_v = this_param.GetSymbol(container, declaration);
                        DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 170716, 170745);
                        return return_v;
                    }


                    bool
                    f_10038_170848_170863(System.Collections.Generic.HashSet<Microsoft.CodeAnalysis.CSharp.Symbol>
                    this_param, Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceOrTypeSymbol
                    item)
                    {
                        var return_v = this_param.Add((Microsoft.CodeAnalysis.CSharp.Symbol)item);
                        DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 170848, 170863);
                        return return_v;
                    }


                    bool
                    f_10038_171089_171131(Microsoft.CodeAnalysis.CSharp.CSharpCompilation.AbstractSymbolSearcher
                    this_param, Microsoft.CodeAnalysis.CSharp.MergedTypeDeclaration
                    current)
                    {
                        var return_v = this_param.ShouldCheckTypeForMembers(current);
                        DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 171089, 171131);
                        return return_v;
                    }


                    int
                    f_10038_171189_171245(Microsoft.CodeAnalysis.CSharp.CSharpCompilation.AbstractSymbolSearcher
                    this_param, Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.MergedNamespaceOrTypeDeclaration>
                    spine, Microsoft.CodeAnalysis.CSharp.MergedTypeDeclaration
                    current, System.Collections.Generic.HashSet<Microsoft.CodeAnalysis.CSharp.Symbol>
                    set)
                    {
                        this_param.AppendMemberSymbolsWithName(spine, current, set);
                        DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 171189, 171245);
                        return 0;
                    }


                    int
                    f_10038_171335_171353(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.MergedNamespaceOrTypeDeclaration>
                    this_param, Microsoft.CodeAnalysis.CSharp.MergedNamespaceOrTypeDeclaration
                    item)
                    {
                        this_param.Add(item);
                        DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 171335, 171353);
                        return 0;
                    }


                    System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Declaration>
                    f_10038_171396_171412(Microsoft.CodeAnalysis.CSharp.MergedNamespaceOrTypeDeclaration
                    this_param)
                    {
                        var return_v = this_param.Children;
                        DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 171396, 171412);
                        return return_v;
                    }


                    Microsoft.CodeAnalysis.CSharp.DeclarationKind
                    f_10038_171609_171619(Microsoft.CodeAnalysis.CSharp.Declaration
                    this_param)
                    {
                        var return_v = this_param.Kind;
                        DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 171609, 171619);
                        return return_v;
                    }


                    int
                    f_10038_171706_171762(Microsoft.CodeAnalysis.CSharp.CSharpCompilation.AbstractSymbolSearcher
                    this_param, Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.MergedNamespaceOrTypeDeclaration>
                    spine, Microsoft.CodeAnalysis.CSharp.MergedNamespaceOrTypeDeclaration
                    current, System.Collections.Generic.HashSet<Microsoft.CodeAnalysis.CSharp.Symbol>
                    set)
                    {
                        this_param.AppendSymbolsWithName(spine, current, set);
                        DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 171706, 171762);
                        return 0;
                    }


                    System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Declaration>
                    f_10038_171396_171412_I(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Declaration>
                    i)
                    {
                        var return_v = i;
                        DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 171396, 171412);
                        return return_v;
                    }


                    int
                    f_10038_171900_171911(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.MergedNamespaceOrTypeDeclaration>
                    this_param)
                    {
                        var return_v = this_param.Count;
                        DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 171900, 171911);
                        return return_v;
                    }


                    int
                    f_10038_171885_171916(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.MergedNamespaceOrTypeDeclaration>
                    this_param, int
                    index)
                    {
                        this_param.RemoveAt(index);
                        DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 171885, 171916);
                        return 0;
                    }

                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 169789, 171932);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 169789, 171932);
                }
            }

            private void AppendMemberSymbolsWithName(
                            ArrayBuilder<MergedNamespaceOrTypeDeclaration> spine, MergedTypeDeclaration current, HashSet<Symbol> set)
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 171948, 172891);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 172145, 172195);

                    _cancellationToken.ThrowIfCancellationRequested();
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 172213, 172232);

                    f_10038_172213_172231(spine, current);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 172252, 172290);

                    var
                    container = f_10038_172268_172289(this, spine)
                    ;

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 172308, 172824) || true) && (container != null)
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 172308, 172824);
                        try
                        {
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 172371, 172805);
                            foreach (var member in f_10038_172394_172416_I(f_10038_172394_172416(container)))
                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 172371, 172805);

                                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 172466, 172782) || true) && (!f_10038_172471_172497(member) && (DynAbs.Tracing.TraceSender.Expression_True(10038, 172470, 172628) && (f_10038_172531_172559(member) || (DynAbs.Tracing.TraceSender.Expression_False(10038, 172531, 172605) || f_10038_172563_172605(member)) || (DynAbs.Tracing.TraceSender.Expression_False(10038, 172531, 172627) || f_10038_172609_172627(member)))) && (DynAbs.Tracing.TraceSender.Expression_True(10038, 172470, 172681) && f_10038_172661_172681(this, f_10038_172669_172680(member))))
                                )

                                {
                                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 172466, 172782);
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 172739, 172755);

                                    f_10038_172739_172754(set, member);
                                    DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 172466, 172782);
                                }
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 172371, 172805);
                            }
                        }
                        catch (System.Exception)
                        {
                            DynAbs.Tracing.TraceSender.TraceExitLoopByException(10038, 1, 435);
                            throw;
                        }
                        finally
                        {
                            DynAbs.Tracing.TraceSender.TraceExitLoop(10038, 1, 435);
                        }
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 172308, 172824);
                    }
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 172844, 172876);

                    f_10038_172844_172875(
                                    spine, f_10038_172859_172870(spine) - 1);
                    DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 171948, 172891);

                    int
                    f_10038_172213_172231(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.MergedNamespaceOrTypeDeclaration>
                    this_param, Microsoft.CodeAnalysis.CSharp.MergedTypeDeclaration
                    item)
                    {
                        this_param.Add((Microsoft.CodeAnalysis.CSharp.MergedNamespaceOrTypeDeclaration)item);
                        DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 172213, 172231);
                        return 0;
                    }


                    Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceOrTypeSymbol?
                    f_10038_172268_172289(Microsoft.CodeAnalysis.CSharp.CSharpCompilation.AbstractSymbolSearcher
                    this_param, Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.MergedNamespaceOrTypeDeclaration>
                    spine)
                    {
                        var return_v = this_param.GetSpineSymbol(spine);
                        DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 172268, 172289);
                        return return_v;
                    }


                    System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>
                    f_10038_172394_172416(Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceOrTypeSymbol
                    this_param)
                    {
                        var return_v = this_param.GetMembers();
                        DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 172394, 172416);
                        return return_v;
                    }


                    bool
                    f_10038_172471_172497(Microsoft.CodeAnalysis.CSharp.Symbol
                    symbol)
                    {
                        var return_v = symbol.IsTypeOrTypeAlias();
                        DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 172471, 172497);
                        return return_v;
                    }


                    bool
                    f_10038_172531_172559(Microsoft.CodeAnalysis.CSharp.Symbol
                    this_param)
                    {
                        var return_v = this_param.CanBeReferencedByName;
                        DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 172531, 172559);
                        return return_v;
                    }


                    bool
                    f_10038_172563_172605(Microsoft.CodeAnalysis.CSharp.Symbol
                    member)
                    {
                        var return_v = member.IsExplicitInterfaceImplementation();
                        DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 172563, 172605);
                        return return_v;
                    }


                    bool
                    f_10038_172609_172627(Microsoft.CodeAnalysis.CSharp.Symbol
                    symbol)
                    {
                        var return_v = symbol.IsIndexer();
                        DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 172609, 172627);
                        return return_v;
                    }


                    string
                    f_10038_172669_172680(Microsoft.CodeAnalysis.CSharp.Symbol
                    this_param)
                    {
                        var return_v = this_param.Name;
                        DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 172669, 172680);
                        return return_v;
                    }


                    bool
                    f_10038_172661_172681(Microsoft.CodeAnalysis.CSharp.CSharpCompilation.AbstractSymbolSearcher
                    this_param, string
                    name)
                    {
                        var return_v = this_param.Matches(name);
                        DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 172661, 172681);
                        return return_v;
                    }


                    bool
                    f_10038_172739_172754(System.Collections.Generic.HashSet<Microsoft.CodeAnalysis.CSharp.Symbol>
                    this_param, Microsoft.CodeAnalysis.CSharp.Symbol
                    item)
                    {
                        var return_v = this_param.Add(item);
                        DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 172739, 172754);
                        return return_v;
                    }


                    System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>
                    f_10038_172394_172416_I(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>
                    i)
                    {
                        var return_v = i;
                        DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 172394, 172416);
                        return return_v;
                    }


                    int
                    f_10038_172859_172870(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.MergedNamespaceOrTypeDeclaration>
                    this_param)
                    {
                        var return_v = this_param.Count;
                        DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 172859, 172870);
                        return return_v;
                    }


                    int
                    f_10038_172844_172875(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.MergedNamespaceOrTypeDeclaration>
                    this_param, int
                    index)
                    {
                        this_param.RemoveAt(index);
                        DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 172844, 172875);
                        return 0;
                    }

                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 171948, 172891);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 171948, 172891);
                }
            }

            protected NamespaceOrTypeSymbol? GetSpineSymbol(ArrayBuilder<MergedNamespaceOrTypeDeclaration> spine)
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 172907, 173604);

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 173041, 173134) || true) && (f_10038_173045_173056(spine) == 0)
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 173041, 173134);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 173103, 173115);

                        return null;
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 173041, 173134);
                    }
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 173154, 173207);

                    var
                    symbol = f_10038_173167_173206(this, f_10038_173183_173205(spine, f_10038_173189_173200(spine) - 1))
                    ;

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 173225, 173318) || true) && (symbol != null)
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 173225, 173318);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 173285, 173299);

                        return symbol;
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 173225, 173318);
                    }
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 173338, 173400);

                    NamespaceOrTypeSymbol?
                    current = f_10038_173371_173399(_compilation)
                    ;
                    try
                    {
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 173427, 173432);
                        for (var
        i = 1
        ; (DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 173418, 173554) || true) && (i < f_10038_173438_173449(spine))
        ; DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 173451, 173454)
        , i++, DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 173418, 173554))

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 173418, 173554);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 173496, 173535);

                            current = f_10038_173506_173534(this, current, f_10038_173525_173533(spine, i));
                        }
                    }
                    catch (System.Exception)
                    {
                        DynAbs.Tracing.TraceSender.TraceExitLoopByException(10038, 1, 137);
                        throw;
                    }
                    finally
                    {
                        DynAbs.Tracing.TraceSender.TraceExitLoop(10038, 1, 137);
                    }
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 173574, 173589);

                    return current;
                    DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 172907, 173604);

                    int
                    f_10038_173045_173056(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.MergedNamespaceOrTypeDeclaration>
                    this_param)
                    {
                        var return_v = this_param.Count;
                        DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 173045, 173056);
                        return return_v;
                    }


                    int
                    f_10038_173189_173200(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.MergedNamespaceOrTypeDeclaration>
                    this_param)
                    {
                        var return_v = this_param.Count;
                        DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 173189, 173200);
                        return return_v;
                    }


                    Microsoft.CodeAnalysis.CSharp.MergedNamespaceOrTypeDeclaration
                    f_10038_173183_173205(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.MergedNamespaceOrTypeDeclaration>
                    this_param, int
                    i0)
                    {
                        var return_v = this_param[i0];
                        DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 173183, 173205);
                        return return_v;
                    }


                    Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceOrTypeSymbol?
                    f_10038_173167_173206(Microsoft.CodeAnalysis.CSharp.CSharpCompilation.AbstractSymbolSearcher
                    this_param, Microsoft.CodeAnalysis.CSharp.MergedNamespaceOrTypeDeclaration
                    declaration)
                    {
                        var return_v = this_param.GetCachedSymbol(declaration);
                        DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 173167, 173206);
                        return return_v;
                    }


                    Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceSymbol
                    f_10038_173371_173399(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                    this_param)
                    {
                        var return_v = this_param.GlobalNamespace;
                        DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 173371, 173399);
                        return return_v;
                    }


                    int
                    f_10038_173438_173449(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.MergedNamespaceOrTypeDeclaration>
                    this_param)
                    {
                        var return_v = this_param.Count;
                        DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 173438, 173449);
                        return return_v;
                    }


                    Microsoft.CodeAnalysis.CSharp.MergedNamespaceOrTypeDeclaration
                    f_10038_173525_173533(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.MergedNamespaceOrTypeDeclaration>
                    this_param, int
                    i0)
                    {
                        var return_v = this_param[i0];
                        DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 173525, 173533);
                        return return_v;
                    }


                    Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceOrTypeSymbol?
                    f_10038_173506_173534(Microsoft.CodeAnalysis.CSharp.CSharpCompilation.AbstractSymbolSearcher
                    this_param, Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceOrTypeSymbol?
                    container, Microsoft.CodeAnalysis.CSharp.MergedNamespaceOrTypeDeclaration
                    declaration)
                    {
                        var return_v = this_param.GetSymbol(container, declaration);
                        DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 173506, 173534);
                        return return_v;
                    }

                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 172907, 173604);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 172907, 173604);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }

            private NamespaceOrTypeSymbol? GetCachedSymbol(MergedNamespaceOrTypeDeclaration declaration)
            {
                try
                {
                    Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceOrTypeSymbol? symbol = null;
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 173730, 173865);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 173733, 173865);
                    return (DynAbs.Tracing.TraceSender.Conditional_F1(10038, 173733, 173799) || ((f_10038_173733_173799(_cache, declaration, out symbol) && DynAbs.Tracing.TraceSender.Conditional_F2(10038, 173827, 173833)) || DynAbs.Tracing.TraceSender.Conditional_F3(10038, 173861, 173865))) ? symbol
                    : null; DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 173730, 173865);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 173730, 173865);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 173730, 173865);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }

            private NamespaceOrTypeSymbol? GetSymbol(NamespaceOrTypeSymbol? container, MergedNamespaceOrTypeDeclaration declaration)
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 173882, 174570);

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 174035, 174153) || true) && (container == null)
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 174035, 174153);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 174098, 174134);

                        return f_10038_174105_174133(_compilation);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 174035, 174153);
                    }

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 174173, 174499) || true) && (f_10038_174177_174193(declaration) == DeclarationKind.Namespace)
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 174173, 174499);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 174264, 174345);

                        f_10038_174264_174344(this, f_10038_174273_174311(container, f_10038_174294_174310(declaration)).OfType<NamespaceOrTypeSymbol>());
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 174173, 174499);
                    }

                    else

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 174173, 174499);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 174427, 174480);

                        f_10038_174427_174479(this, f_10038_174436_174478(container, f_10038_174461_174477(declaration)));
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 174173, 174499);
                    }
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 174519, 174555);

                    return f_10038_174526_174554(this, declaration);
                    DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 173882, 174570);

                    Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceSymbol
                    f_10038_174105_174133(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                    this_param)
                    {
                        var return_v = this_param.GlobalNamespace;
                        DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 174105, 174133);
                        return return_v;
                    }


                    Microsoft.CodeAnalysis.CSharp.DeclarationKind
                    f_10038_174177_174193(Microsoft.CodeAnalysis.CSharp.MergedNamespaceOrTypeDeclaration
                    this_param)
                    {
                        var return_v = this_param.Kind;
                        DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 174177, 174193);
                        return return_v;
                    }


                    string
                    f_10038_174294_174310(Microsoft.CodeAnalysis.CSharp.MergedNamespaceOrTypeDeclaration
                    this_param)
                    {
                        var return_v = this_param.Name;
                        DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 174294, 174310);
                        return return_v;
                    }


                    System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>
                    f_10038_174273_174311(Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceOrTypeSymbol
                    this_param, string
                    name)
                    {
                        var return_v = this_param.GetMembers(name);
                        DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 174273, 174311);
                        return return_v;
                    }


                    int
                    f_10038_174264_174344(Microsoft.CodeAnalysis.CSharp.CSharpCompilation.AbstractSymbolSearcher
                    this_param, System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceOrTypeSymbol>
                    symbols)
                    {
                        this_param.AddCache(symbols);
                        DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 174264, 174344);
                        return 0;
                    }


                    string
                    f_10038_174461_174477(Microsoft.CodeAnalysis.CSharp.MergedNamespaceOrTypeDeclaration
                    this_param)
                    {
                        var return_v = this_param.Name;
                        DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 174461, 174477);
                        return return_v;
                    }


                    System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol>
                    f_10038_174436_174478(Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceOrTypeSymbol
                    this_param, string
                    name)
                    {
                        var return_v = this_param.GetTypeMembers(name);
                        DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 174436, 174478);
                        return return_v;
                    }


                    int
                    f_10038_174427_174479(Microsoft.CodeAnalysis.CSharp.CSharpCompilation.AbstractSymbolSearcher
                    this_param, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol>
                    symbols)
                    {
                        this_param.AddCache((System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceOrTypeSymbol>)symbols);
                        DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 174427, 174479);
                        return 0;
                    }


                    Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceOrTypeSymbol?
                    f_10038_174526_174554(Microsoft.CodeAnalysis.CSharp.CSharpCompilation.AbstractSymbolSearcher
                    this_param, Microsoft.CodeAnalysis.CSharp.MergedNamespaceOrTypeDeclaration
                    declaration)
                    {
                        var return_v = this_param.GetCachedSymbol(declaration);
                        DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 174526, 174554);
                        return return_v;
                    }

                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 173882, 174570);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 173882, 174570);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }

            private void AddCache(IEnumerable<NamespaceOrTypeSymbol> symbols)
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 174586, 175661);
                    try
                    {
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 174684, 175646);
                        foreach (var symbol in f_10038_174707_174714_I(symbols))
                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 174684, 175646);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 174756, 174810);

                            var
                            mergedNamespace = symbol as MergedNamespaceSymbol
                            ;

                            if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 174832, 175080) || true) && (mergedNamespace != null)
                            )

                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 174832, 175080);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 174909, 175022);

                                _cache[f_10038_174916_175011(f_10038_174916_174993(mergedNamespace.ConstituentNamespaces.OfType<SourceNamespaceSymbol>()))] = symbol;
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 175048, 175057);

                                continue;
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 174832, 175080);
                            }
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 175104, 175158);

                            var
                            sourceNamespace = symbol as SourceNamespaceSymbol
                            ;

                            if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 175180, 175375) || true) && (sourceNamespace != null)
                            )

                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 175180, 175375);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 175257, 175317);

                                _cache[f_10038_175264_175297(sourceNamespace)] = sourceNamespace;
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 175343, 175352);

                                continue;
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 175180, 175375);
                            }
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 175399, 175458);

                            var
                            sourceType = symbol as SourceMemberContainerTypeSymbol
                            ;

                            if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 175480, 175627) || true) && (sourceType is object)
                            )

                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 175480, 175627);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 175554, 175604);

                                _cache[f_10038_175561_175589(sourceType)] = sourceType;
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 175480, 175627);
                            }
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 174684, 175646);
                        }
                    }
                    catch (System.Exception)
                    {
                        DynAbs.Tracing.TraceSender.TraceExitLoopByException(10038, 1, 963);
                        throw;
                    }
                    finally
                    {
                        DynAbs.Tracing.TraceSender.TraceExitLoop(10038, 1, 963);
                    }
                    DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 174586, 175661);

                    Microsoft.CodeAnalysis.CSharp.Symbols.SourceNamespaceSymbol
                    f_10038_174916_174993(System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.CSharp.Symbols.SourceNamespaceSymbol>
                    source)
                    {
                        var return_v = source.First<Microsoft.CodeAnalysis.CSharp.Symbols.SourceNamespaceSymbol>();
                        DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 174916, 174993);
                        return return_v;
                    }


                    Microsoft.CodeAnalysis.CSharp.MergedNamespaceDeclaration
                    f_10038_174916_175011(Microsoft.CodeAnalysis.CSharp.Symbols.SourceNamespaceSymbol
                    this_param)
                    {
                        var return_v = this_param.MergedDeclaration;
                        DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 174916, 175011);
                        return return_v;
                    }


                    Microsoft.CodeAnalysis.CSharp.MergedNamespaceDeclaration
                    f_10038_175264_175297(Microsoft.CodeAnalysis.CSharp.Symbols.SourceNamespaceSymbol
                    this_param)
                    {
                        var return_v = this_param.MergedDeclaration;
                        DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 175264, 175297);
                        return return_v;
                    }


                    Microsoft.CodeAnalysis.CSharp.MergedTypeDeclaration
                    f_10038_175561_175589(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                    this_param)
                    {
                        var return_v = this_param.MergedDeclaration;
                        DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 175561, 175589);
                        return return_v;
                    }


                    System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceOrTypeSymbol>
                    f_10038_174707_174714_I(System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceOrTypeSymbol>
                    i)
                    {
                        var return_v = i;
                        DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 174707, 174714);
                        return return_v;
                    }

                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 174586, 175661);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 174586, 175661);
                }
            }

            static AbstractSymbolSearcher()
            {
                DynAbs.Tracing.TraceSender.TraceEnterStaticConstructor(10038, 168102, 175672);
                DynAbs.Tracing.TraceSender.TraceExitStaticConstructor(10038, 168102, 175672);

                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 168102, 175672);
            }

            int ___ignore_me___ = DynAbs.Tracing.TraceSender.TraceBeforeConstructor(10038, 168102, 175672);

            Microsoft.CodeAnalysis.PooledObjects.PooledDictionary<Microsoft.CodeAnalysis.CSharp.Declaration, Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceOrTypeSymbol>
            f_10038_168730_168796()
            {
                var return_v = PooledDictionary<Declaration, NamespaceOrTypeSymbol>.GetInstance();
                DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 168730, 168796);
                return return_v;
            }


            bool
            f_10038_173733_173799(Microsoft.CodeAnalysis.PooledObjects.PooledDictionary<Microsoft.CodeAnalysis.CSharp.Declaration, Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceOrTypeSymbol>
            this_param, Microsoft.CodeAnalysis.CSharp.MergedNamespaceOrTypeDeclaration
            key, out Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceOrTypeSymbol?
            value)
            {
                var return_v = this_param.TryGetValue((Microsoft.CodeAnalysis.CSharp.Declaration)key, out value);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 173733, 173799);
                return return_v;
            }

        }
        private class PredicateSymbolSearcher : AbstractSymbolSearcher
        {
            private readonly Func<string, bool> _predicate;

            public PredicateSymbolSearcher(
                            CSharpCompilation compilation, SymbolFilter filter, Func<string, bool> predicate, CancellationToken cancellationToken)
            : base(f_10038_176026_176037_C(compilation), filter, cancellationToken)
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterConstructor(10038, 175834, 176136);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 175807, 175817);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 176098, 176121);

                    _predicate = predicate;
                    DynAbs.Tracing.TraceSender.TraceExitConstructor(10038, 175834, 176136);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 175834, 176136);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 175834, 176136);
                }
            }

            protected override bool ShouldCheckTypeForMembers(MergedTypeDeclaration current)
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 176152, 176568);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 176541, 176553);

                    return true;
                    DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 176152, 176568);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 176152, 176568);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 176152, 176568);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }

            protected override bool Matches(string name)
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 176646, 176665);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 176649, 176665);
                    return f_10038_176649_176665(this, name); DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 176646, 176665);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 176646, 176665);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 176646, 176665);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }

            static PredicateSymbolSearcher()
            {
                DynAbs.Tracing.TraceSender.TraceEnterStaticConstructor(10038, 175684, 176677);
                DynAbs.Tracing.TraceSender.TraceExitStaticConstructor(10038, 175684, 176677);

                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 175684, 176677);
            }

            int ___ignore_me___ = DynAbs.Tracing.TraceSender.TraceBeforeConstructor(10038, 175684, 176677);

            static Microsoft.CodeAnalysis.CSharp.CSharpCompilation
            f_10038_176026_176037_C(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
            i)
            {
                var return_v = i;
                DynAbs.Tracing.TraceSender.TraceBaseCall(10038, 175834, 176136);
                return return_v;
            }


            bool
            f_10038_176649_176665(Microsoft.CodeAnalysis.CSharp.CSharpCompilation.PredicateSymbolSearcher
            this_param, string
            arg)
            {
                var return_v = this_param._predicate(arg);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 176649, 176665);
                return return_v;
            }

        }
        private class NameSymbolSearcher : AbstractSymbolSearcher
        {
            private readonly string _name;

            public NameSymbolSearcher(
                            CSharpCompilation compilation, SymbolFilter filter, string name, CancellationToken cancellationToken)
            : base(f_10038_176987_176998_C(compilation), filter, cancellationToken)
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterConstructor(10038, 176817, 177087);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 176795, 176800);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 177059, 177072);

                    _name = name;
                    DynAbs.Tracing.TraceSender.TraceExitConstructor(10038, 176817, 177087);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 176817, 177087);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 176817, 177087);
                }
            }

            protected override bool ShouldCheckTypeForMembers(MergedTypeDeclaration current)
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 177103, 177513);
                    try
                    {
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 177216, 177465);
                        foreach (SingleTypeDeclaration typeDecl in f_10038_177259_177279_I(f_10038_177259_177279(current)))
                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 177216, 177465);

                            if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 177321, 177446) || true) && (f_10038_177325_177361(f_10038_177325_177345(typeDecl), _name))
                            )

                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10038, 177321, 177446);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 177411, 177423);

                                return true;
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 177321, 177446);
                            }
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10038, 177216, 177465);
                        }
                    }
                    catch (System.Exception)
                    {
                        DynAbs.Tracing.TraceSender.TraceExitLoopByException(10038, 1, 250);
                        throw;
                    }
                    finally
                    {
                        DynAbs.Tracing.TraceSender.TraceExitLoop(10038, 1, 250);
                    }
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 177485, 177498);

                    return false;
                    DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 177103, 177513);

                    System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.SingleTypeDeclaration>
                    f_10038_177259_177279(Microsoft.CodeAnalysis.CSharp.MergedTypeDeclaration
                    this_param)
                    {
                        var return_v = this_param.Declarations;
                        DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 177259, 177279);
                        return return_v;
                    }


                    System.Collections.Immutable.ImmutableHashSet<string>
                    f_10038_177325_177345(Microsoft.CodeAnalysis.CSharp.SingleTypeDeclaration
                    this_param)
                    {
                        var return_v = this_param.MemberNames;
                        DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 177325, 177345);
                        return return_v;
                    }


                    bool
                    f_10038_177325_177361(System.Collections.Immutable.ImmutableHashSet<string>
                    this_param, string
                    item)
                    {
                        var return_v = this_param.Contains(item);
                        DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 177325, 177361);
                        return return_v;
                    }


                    System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.SingleTypeDeclaration>
                    f_10038_177259_177279_I(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.SingleTypeDeclaration>
                    i)
                    {
                        var return_v = i;
                        DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 177259, 177279);
                        return return_v;
                    }

                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 177103, 177513);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 177103, 177513);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }

            protected override bool Matches(string name)
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(10038, 177591, 177607);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 177594, 177607);
                    return _name == name; DynAbs.Tracing.TraceSender.TraceExitMethod(10038, 177591, 177607);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10038, 177591, 177607);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 177591, 177607);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }

            static NameSymbolSearcher()
            {
                DynAbs.Tracing.TraceSender.TraceEnterStaticConstructor(10038, 176689, 177619);
                DynAbs.Tracing.TraceSender.TraceExitStaticConstructor(10038, 176689, 177619);

                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 176689, 177619);
            }

            int ___ignore_me___ = DynAbs.Tracing.TraceSender.TraceBeforeConstructor(10038, 176689, 177619);

            static Microsoft.CodeAnalysis.CSharp.CSharpCompilation
            f_10038_176987_176998_C(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
            i)
            {
                var return_v = i;
                DynAbs.Tracing.TraceSender.TraceBaseCall(10038, 176817, 177087);
                return return_v;
            }

        }

        #endregion

        #region Slicer methods
        static CSharpCompilation()
        {
            DynAbs.Tracing.TraceSender.TraceEnterStaticConstructor(10038, 1665, 177626);
            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 12777, 12855);
            s_defaultOptions = f_10038_12796_12855(OutputKind.ConsoleApplication); 
            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10038, 12915, 13052);
            s_defaultSubmissionOptions = f_10038_12944_13052(f_10038_12944_13009(OutputKind.DynamicallyLinkedLibrary), true); 
            DynAbs.Tracing.TraceSender.TraceExitStaticConstructor(10038, 1665, 177626);

            DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10038, 1665, 177626);
        }

        int ___ignore_me___ = DynAbs.Tracing.TraceSender.TraceBeforeConstructor(10038, 1665, 177626);

        string?
        f_10038_7737_7754(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
        this_param, string
        p)
        {
            var return_v = this_param.Feature(p);
            DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 7737, 7754);
            return return_v;
        }


        Microsoft.CodeAnalysis.CSharp.LanguageVersion
        f_10038_8236_8251()
        {
            var return_v = LanguageVersion;
            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 8236, 8251);
            return return_v;
        }


        string?
        f_10038_8283_8309(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
        this_param, string
        p)
        {
            var return_v = this_param.Feature(p);
            DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 8283, 8309);
            return return_v;
        }


        static Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions
        f_10038_12796_12855(Microsoft.CodeAnalysis.OutputKind
        outputKind)
        {
            var return_v = new Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions(outputKind);
            DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 12796, 12855);
            return return_v;
        }


        static Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions
        f_10038_12944_13009(Microsoft.CodeAnalysis.OutputKind
        outputKind)
        {
            var return_v = new Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions(outputKind);
            DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 12944, 13009);
            return return_v;
        }


        static Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions
        f_10038_12944_13052(Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions
        this_param, bool
        value)
        {
            var return_v = this_param.WithReferencesSupersedeLowerVersions(value);
            DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 12944, 13052);
            return return_v;
        }


        static System.Collections.Generic.IReadOnlyDictionary<string, string>
        f_10038_18532_18599(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.SyntaxTree>
        trees)
        {
            var return_v = SyntaxTreeCommonFeatures((System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.SyntaxTree>)trees);
            DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 18532, 18599);
            return return_v;
        }


        static string?
        f_10038_18361_18373_C(string?
        i)
        {
            var return_v = i;
            DynAbs.Tracing.TraceSender.TraceBaseCall(10038, 17738, 18657);
            return return_v;
        }


        Microsoft.CodeAnalysis.CSharp.CSharpCompilation.WellKnownMembersSignatureComparer
        f_10038_19495_19538(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
        compilation)
        {
            var return_v = new Microsoft.CodeAnalysis.CSharp.CSharpCompilation.WellKnownMembersSignatureComparer(compilation);
            DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 19495, 19538);
            return return_v;
        }


        Microsoft.CodeAnalysis.CSharp.BuiltInOperators
        f_10038_19612_19638(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
        compilation)
        {
            var return_v = new Microsoft.CodeAnalysis.CSharp.BuiltInOperators(compilation);
            DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 19612, 19638);
            return return_v;
        }


        System.Lazy<Microsoft.CodeAnalysis.CSharp.Symbols.ImplicitNamedTypeSymbol?>
        f_10038_19668_19719(System.Func<Microsoft.CodeAnalysis.CSharp.Symbols.ImplicitNamedTypeSymbol?>
        valueFactory)
        {
            var return_v = new System.Lazy<Microsoft.CodeAnalysis.CSharp.Symbols.ImplicitNamedTypeSymbol?>(valueFactory);
            DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 19668, 19719);
            return return_v;
        }


        System.Lazy<Microsoft.CodeAnalysis.CSharp.Imports>
        f_10038_19751_19787(System.Func<Microsoft.CodeAnalysis.CSharp.Imports>
        valueFactory)
        {
            var return_v = new System.Lazy<Microsoft.CodeAnalysis.CSharp.Imports>(valueFactory);
            DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 19751, 19787);
            return return_v;
        }


        System.Lazy<Microsoft.CodeAnalysis.CSharp.Imports>
        f_10038_19831_19881(System.Func<Microsoft.CodeAnalysis.CSharp.Imports>
        valueFactory)
        {
            var return_v = new System.Lazy<Microsoft.CodeAnalysis.CSharp.Imports>(valueFactory);
            DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 19831, 19881);
            return return_v;
        }


        System.Lazy<Microsoft.CodeAnalysis.CSharp.Symbols.AliasSymbol>
        f_10038_19920_19969(System.Func<Microsoft.CodeAnalysis.CSharp.Symbols.AliasSymbol>
        valueFactory)
        {
            var return_v = new System.Lazy<Microsoft.CodeAnalysis.CSharp.Symbols.AliasSymbol>(valueFactory);
            DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 19920, 19969);
            return return_v;
        }


        Microsoft.CodeAnalysis.CSharp.Symbols.AnonymousTypeManager
        f_10038_20008_20038(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
        compilation)
        {
            var return_v = new Microsoft.CodeAnalysis.CSharp.Symbols.AnonymousTypeManager(compilation);
            DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 20008, 20038);
            return return_v;
        }


        Microsoft.CodeAnalysis.CSharp.LanguageVersion
        f_10038_20076_20140(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.SyntaxTree>
        syntaxTrees)
        {
            var return_v = CommonLanguageVersion(syntaxTrees);
            DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 20076, 20140);
            return return_v;
        }


        System.Type?
        f_10038_20250_20283(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
        this_param)
        {
            var return_v = this_param.HostObjectType;
            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 20250, 20283);
            return return_v;
        }


        int
        f_10038_20207_20302(bool
        condition)
        {
            Debug.Assert(condition);
            DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 20207, 20302);
            return 0;
        }


        Microsoft.CodeAnalysis.CSharp.CSharpScriptCompilationInfo
        f_10038_20350_20439(Microsoft.CodeAnalysis.CSharp.CSharpCompilation?
        previousCompilationOpt, System.Type?
        returnType, System.Type?
        globalsType)
        {
            var return_v = new Microsoft.CodeAnalysis.CSharp.CSharpScriptCompilationInfo(previousCompilationOpt, returnType, globalsType);
            DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 20350, 20439);
            return return_v;
        }


        int
        f_10038_20506_20604(bool
        condition)
        {
            Debug.Assert(condition);
            DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 20506, 20604);
            return 0;
        }


        System.ArgumentNullException
        f_10038_20771_20822(string
        paramName)
        {
            var return_v = new System.ArgumentNullException(paramName);
            DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 20771, 20822);
            return return_v;
        }


        int
        f_10038_20862_20913(Microsoft.CodeAnalysis.CSharp.CSharpCompilation.ReferenceManager
        this_param, Microsoft.CodeAnalysis.CSharp.CSharpCompilation
        compilation)
        {
            this_param.AssertCanReuseForCompilation(compilation);
            DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 20862, 20913);
            return 0;
        }


        string
        f_10038_21098_21128(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
        this_param)
        {
            var return_v = this_param.MakeSourceAssemblySimpleName();
            DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 21098, 21128);
            return return_v;
        }


        Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions
        f_10038_21151_21163(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
        this_param)
        {
            var return_v = this_param.Options;
            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 21151, 21163);
            return return_v;
        }


        Microsoft.CodeAnalysis.AssemblyIdentityComparer
        f_10038_21151_21188(Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions
        this_param)
        {
            var return_v = this_param.AssemblyIdentityComparer;
            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 21151, 21188);
            return return_v;
        }


        Microsoft.CodeAnalysis.CSharp.CSharpCompilation.ReferenceManager
        f_10038_21055_21264(string
        simpleAssemblyName, Microsoft.CodeAnalysis.AssemblyIdentityComparer
        identityComparer, System.Collections.Generic.Dictionary<Microsoft.CodeAnalysis.MetadataReference, object>?
        observedMetadata)
        {
            var return_v = new Microsoft.CodeAnalysis.CSharp.CSharpCompilation.ReferenceManager(simpleAssemblyName, identityComparer, observedMetadata: observedMetadata);
            DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 21055, 21264);
            return return_v;
        }


        int
        f_10038_21359_21400(bool
        condition)
        {
            Debug.Assert(condition);
            DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 21359, 21400);
            return 0;
        }


        Microsoft.CodeAnalysis.Diagnostics.AsyncQueue<Microsoft.CodeAnalysis.Diagnostics.CompilationEvent>?
        f_10038_21419_21429()
        {
            var return_v = EventQueue;
            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 21419, 21429);
            return return_v;
        }


        Microsoft.CodeAnalysis.Diagnostics.AsyncQueue<Microsoft.CodeAnalysis.Diagnostics.CompilationEvent>
        f_10038_21439_21449()
        {
            var return_v = EventQueue;
            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 21439, 21449);
            return return_v;
        }


        Microsoft.CodeAnalysis.Diagnostics.CompilationStartedEvent
        f_10038_21461_21494(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
        compilation)
        {
            var return_v = new Microsoft.CodeAnalysis.Diagnostics.CompilationStartedEvent((Microsoft.CodeAnalysis.Compilation)compilation);
            DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 21461, 21494);
            return return_v;
        }


        bool
        f_10038_21439_21495(Microsoft.CodeAnalysis.Diagnostics.AsyncQueue<Microsoft.CodeAnalysis.Diagnostics.CompilationEvent>
        this_param, Microsoft.CodeAnalysis.Diagnostics.CompilationStartedEvent
        value)
        {
            var return_v = this_param.TryEnqueue((Microsoft.CodeAnalysis.Diagnostics.CompilationEvent)value);
            DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 21439, 21495);
            return return_v;
        }


        static string?
        f_10038_19351_19363_C(string?
        i)
        {
            var return_v = i;
            DynAbs.Tracing.TraceSender.TraceBaseCall(10038, 18669, 21507);
            return return_v;
        }


        Microsoft.CodeAnalysis.CSharp.CSharpScriptCompilationInfo?
        f_10038_31929_31950()
        {
            var return_v = ScriptCompilationInfo;
            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 31929, 31950);
            return return_v;
        }


        Microsoft.CodeAnalysis.CSharp.CSharpScriptCompilationInfo?
        f_10038_32013_32034()
        {
            var return_v = ScriptCompilationInfo;
            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 32013, 32034);
            return return_v;
        }


        Microsoft.CodeAnalysis.CSharp.CSharpCompilation?
        f_10038_32013_32061_M(Microsoft.CodeAnalysis.CSharp.CSharpCompilation?
        i)
        {
            var return_v = i;
            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 32013, 32061);
            return return_v;
        }


        Microsoft.CodeAnalysis.CSharp.CSharpCompilation.ReferenceManager
        f_10038_44967_44993(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
        this_param)
        {
            var return_v = this_param.GetBoundReferenceManager();
            DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 44967, 44993);
            return return_v;
        }


        System.Collections.Generic.IDictionary<(string, string), Microsoft.CodeAnalysis.MetadataReference>
        f_10038_44967_45015(Microsoft.CodeAnalysis.CSharp.CSharpCompilation.ReferenceManager
        this_param)
        {
            var return_v = this_param.ReferenceDirectiveMap;
            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 44967, 45015);
            return return_v;
        }


        Microsoft.CodeAnalysis.CSharp.Imports
        f_10038_60688_60708(System.Lazy<Microsoft.CodeAnalysis.CSharp.Imports>
        this_param)
        {
            var return_v = this_param.Value;
            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 60688, 60708);
            return return_v;
        }


        Microsoft.CodeAnalysis.CSharp.Imports
        f_10038_60760_60790(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
        compilation)
        {
            var return_v = Imports.FromGlobalUsings(compilation);
            DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 60760, 60790);
            return return_v;
        }


        Microsoft.CodeAnalysis.CSharp.Imports
        f_10038_61713_61745(System.Lazy<Microsoft.CodeAnalysis.CSharp.Imports>
        this_param)
        {
            var return_v = this_param.Value;
            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10038, 61713, 61745);
            return return_v;
        }


        Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?
        f_10038_65173_65198(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
        this_param)
        {
            var return_v = this_param?.GetHostObjectTypeSymbol();
            DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 65173, 65198);
            return return_v;
        }


        Microsoft.CodeAnalysis.ITypeSymbol?
        f_10038_65199_65217(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
        symbol)
        {
            var return_v = symbol?.GetPublicSymbol();
            DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 65199, 65217);
            return return_v;
        }


        Microsoft.CodeAnalysis.CSharp.SyntaxTreeSemanticModel
        f_10038_95273_95339(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
        compilation, Microsoft.CodeAnalysis.SyntaxTree
        syntaxTree, bool
        ignoreAccessibility)
        {
            var return_v = new Microsoft.CodeAnalysis.CSharp.SyntaxTreeSemanticModel(compilation, syntaxTree, ignoreAccessibility);
            DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 95273, 95339);
            return return_v;
        }


        Microsoft.CodeAnalysis.DiagnosticBag
        f_10038_105865_105884()
        {
            var return_v = new Microsoft.CodeAnalysis.DiagnosticBag();
            DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 105865, 105884);
            return return_v;
        }


        Microsoft.CodeAnalysis.CSharp.Symbol?
        f_10038_161594_161712(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
        this_param, Microsoft.CodeAnalysis.WellKnownMember
        member)
        {
            var return_v = this_param.GetWellKnownTypeMember(member);
            DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 161594, 161712);
            return return_v;
        }


        bool
        f_10038_161980_162026(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
        this_param, Microsoft.CodeAnalysis.SpecialType
        type)
        {
            var return_v = this_param.CanEmitSpecialType(type);
            DynAbs.Tracing.TraceSender.TraceEndInvocation(10038, 161980, 162026);
            return return_v;
        }


        #endregion

    }
}
