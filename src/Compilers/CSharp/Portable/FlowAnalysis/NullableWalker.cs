// Licensed to the .NET Foundation under one or more agreements.
// The .NET Foundation licenses this file to you under the MIT license.
// See the LICENSE file in the project root for more information.

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Diagnostics;
using System.Diagnostics.CodeAnalysis;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Text;
using Microsoft.CodeAnalysis.CSharp.Symbols;
using Microsoft.CodeAnalysis.CSharp.Syntax;
using Microsoft.CodeAnalysis.PooledObjects;
using Roslyn.Utilities;

namespace Microsoft.CodeAnalysis.CSharp
{
    [DebuggerDisplay("{GetDebuggerDisplay(), nq}")]
    internal sealed partial class NullableWalker
            : LocalDataFlowPass<NullableWalker.LocalState, NullableWalker.LocalFunctionState>
    {
        internal sealed class VariableState
        {
            internal readonly VariablesSnapshot Variables;

            internal readonly LocalStateSnapshot VariableNullableStates;

            internal VariableState(VariablesSnapshot variables, LocalStateSnapshot variableNullableStates)
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterConstructor(10899, 1858, 2088);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 1643, 1652);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 1819, 1841);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 1985, 2007);

                    Variables = variables;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 2025, 2073);

                    VariableNullableStates = variableNullableStates;
                    DynAbs.Tracing.TraceSender.TraceExitConstructor(10899, 1858, 2088);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 1858, 2088);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 1858, 2088);
                }
            }

            static VariableState()
            {
                DynAbs.Tracing.TraceSender.TraceEnterStaticConstructor(10899, 1173, 2099);
                DynAbs.Tracing.TraceSender.TraceExitStaticConstructor(10899, 1173, 2099);

                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 1173, 2099);
            }

            int ___ignore_me___ = DynAbs.Tracing.TraceSender.TraceBeforeConstructor(10899, 1173, 2099);
        }

        internal readonly struct Data
        {

            internal readonly int TrackedEntries;

            internal readonly bool RequiredAnalysis;

            internal Data(int trackedEntries, bool requiredAnalysis)
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterConstructor(10899, 2649, 2839);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 2738, 2770);

                    TrackedEntries = trackedEntries;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 2788, 2824);

                    RequiredAnalysis = requiredAnalysis;
                    DynAbs.Tracing.TraceSender.TraceExitConstructor(10899, 2649, 2839);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 2649, 2839);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 2649, 2839);
                }
            }
            static Data()
            {
                DynAbs.Tracing.TraceSender.TraceEnterStaticConstructor(10899, 2216, 2850);
                DynAbs.Tracing.TraceSender.TraceExitStaticConstructor(10899, 2216, 2850);

                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 2216, 2850);
            }
        }

        [DebuggerDisplay("{GetDebuggerDisplay(), nq}")]
        private readonly struct VisitResult
        {

            public readonly TypeWithState RValueType;

            public readonly TypeWithAnnotations LValueType;

            public VisitResult(TypeWithState rValueType, TypeWithAnnotations lValueType)
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterConstructor(10899, 3387, 3964);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 3496, 3520);

                    RValueType = rValueType;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 3538, 3562);

                    LValueType = lValueType;
                    DynAbs.Tracing.TraceSender.TraceExitConstructor(10899, 3387, 3964);
                    // https://github.com/dotnet/roslyn/issues/34993: Doesn't hold true for Tuple_Assignment_10. See if we can make it hold true
                    //Debug.Assert((RValueType.Type is null && LValueType.TypeSymbol is null) ||
                    //             RValueType.Type.Equals(LValueType.TypeSymbol, TypeCompareKind.ConsiderEverything | TypeCompareKind.AllIgnoreOptions));
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 3387, 3964);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 3387, 3964);
                }
            }

            public VisitResult(TypeSymbol? type, NullableAnnotation annotation, NullableFlowState state)
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterConstructor(10899, 3980, 4363);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 4105, 4152);

                    RValueType = TypeWithState.Create(type, state);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 4170, 4228);

                    LValueType = TypeWithAnnotations.Create(type, annotation);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 4246, 4348);

                    f_10899_4246_4347(f_10899_4259_4346(RValueType.Type, LValueType.Type, TypeCompareKind.ConsiderEverything));
                    DynAbs.Tracing.TraceSender.TraceExitConstructor(10899, 3980, 4363);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 3980, 4363);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 3980, 4363);
                }
            }

            internal string GetDebuggerDisplay()
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 4416, 4510);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 4419, 4510);
                    return $"{{LValue: {LValueType.GetDebuggerDisplay()}, RValue: {RValueType.GetDebuggerDisplay()}}}"; DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 4416, 4510);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 4416, 4510);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 4416, 4510);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
            static VisitResult()
            {
                DynAbs.Tracing.TraceSender.TraceEnterStaticConstructor(10899, 3152, 4522);
                DynAbs.Tracing.TraceSender.TraceExitStaticConstructor(10899, 3152, 4522);

                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 3152, 4522);
            }

            bool
            f_10899_4259_4346(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?
            left, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
            right, Microsoft.CodeAnalysis.TypeCompareKind
            comparison)
            {
                var return_v = TypeSymbol.Equals(left, right, comparison);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 4259, 4346);
                return return_v;
            }


            int
            f_10899_4246_4347(bool
            condition)
            {
                Debug.Assert(condition);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 4246, 4347);
                return 0;
            }

        }

        [DebuggerDisplay("{VisitResult.GetDebuggerDisplay(), nq}")]
        private readonly struct VisitArgumentResult
        {

            public readonly VisitResult VisitResult;

            public readonly Optional<LocalState> StateForLambda;

            public TypeWithState RValueType
            {
                get
                {
                    try
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 5090, 5115);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 5093, 5115);
                        return VisitResult.RValueType; DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 5090, 5115);
                    }
                    catch
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 5090, 5115);
                        throw;
                    }
                    finally
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 5090, 5115);
                    }
                    throw new System.Exception("Slicer error: unreachable code");
                }
            }

            public TypeWithAnnotations LValueType
            {
                get
                {
                    try
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 5168, 5193);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 5171, 5193);
                        return VisitResult.LValueType; DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 5168, 5193);
                    }
                    catch
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 5168, 5193);
                        throw;
                    }
                    finally
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 5168, 5193);
                    }
                    throw new System.Exception("Slicer error: unreachable code");
                }
            }

            public VisitArgumentResult(VisitResult visitResult, Optional<LocalState> stateForLambda)
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterConstructor(10899, 5210, 5422);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 5331, 5357);

                    VisitResult = visitResult;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 5375, 5407);

                    StateForLambda = stateForLambda;
                    DynAbs.Tracing.TraceSender.TraceExitConstructor(10899, 5210, 5422);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 5210, 5422);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 5210, 5422);
                }
            }
            static VisitArgumentResult()
            {
                DynAbs.Tracing.TraceSender.TraceEnterStaticConstructor(10899, 4799, 5433);
                DynAbs.Tracing.TraceSender.TraceExitStaticConstructor(10899, 4799, 5433);

                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 4799, 5433);
            }
        }

        private Variables _variables;

        private readonly Binder _binder;

        private readonly Conversions _conversions;

        private readonly bool _useConstructorExitWarnings;

        private bool _useDelegateInvokeParameterTypes;

        private MethodSymbol? _delegateInvokeMethod;

        private ArrayBuilder<(BoundReturnStatement, TypeWithAnnotations)>? _returnTypesOpt;

        private static readonly TypeWithState _invalidType;

        private readonly ImmutableDictionary<BoundExpression, (NullabilityInfo Info, TypeSymbol? Type)>.Builder? _analyzedNullabilityMapOpt;

        private readonly SnapshotManager.Builder? _snapshotBuilderOpt;

        private bool _disableNullabilityAnalysis;

        private PooledDictionary<BoundExpression, TypeWithState>? _methodGroupReceiverMapOpt;

        private PooledDictionary<BoundAwaitableValuePlaceholder, (BoundExpression AwaitableExpression, VisitResult Result)>? _awaitablePlaceholdersOpt;

        private PooledDictionary<MethodSymbol, Variables>? _nestedFunctionVariables;

        private readonly bool _isSpeculative;

        private readonly bool _hasInitialState;

        private static readonly ImmutableArray<BoundKind> s_skippedExpressions;

        private VisitResult _visitResult;

        private VisitResult _currentConditionalReceiverVisitResult;

        private TypeWithState ResultType
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 10662, 10688);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 10665, 10688);
                    return _visitResult.RValueType; DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 10662, 10688);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 10601, 10700);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 10601, 10700);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        private void SetResultType(BoundExpression? expression, TypeWithState type, bool updateAnalyzedNullability = true)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 10712, 11009);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 10851, 10998);

                f_10899_10851_10997(this, expression, resultType: type, lvalueType: type.ToTypeWithAnnotations(compilation), updateAnalyzedNullability: updateAnalyzedNullability);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 10712, 11009);

                int
                f_10899_10851_10997(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression?
                expression, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                resultType, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                lvalueType, bool
                updateAnalyzedNullability)
                {
                    this_param.SetResult(expression, resultType: resultType, lvalueType: lvalueType, updateAnalyzedNullability: updateAnalyzedNullability);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 10851, 10997);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 10712, 11009);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 10712, 11009);
            }
        }

        private void UseRvalueOnly(BoundExpression? expression)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 11142, 11331);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 11222, 11320);

                f_10899_11222_11319(this, expression, f_10899_11244_11254(), f_10899_11256_11266().ToTypeWithAnnotations(compilation), isLvalue: false);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 11142, 11331);

                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                f_10899_11244_11254()
                {
                    var return_v = ResultType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 11244, 11254);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                f_10899_11256_11266()
                {
                    var return_v = ResultType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 11256, 11266);
                    return return_v;
                }


                int
                f_10899_11222_11319(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression?
                expression, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                resultType, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                lvalueType, bool
                isLvalue)
                {
                    this_param.SetResult(expression, resultType, lvalueType, isLvalue: (bool?)isLvalue);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 11222, 11319);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 11142, 11331);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 11142, 11331);
            }
        }

        private TypeWithAnnotations LvalueResultType
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 11416, 11442);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 11419, 11442);
                    return _visitResult.LValueType; DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 11416, 11442);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 11343, 11454);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 11343, 11454);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        private void SetLvalueResultType(BoundExpression? expression, TypeWithAnnotations type)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 11466, 11665);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 11578, 11654);

                f_10899_11578_11653(this, expression, resultType: type.ToTypeWithState(), lvalueType: type);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 11466, 11665);

                int
                f_10899_11578_11653(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression?
                expression, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                resultType, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                lvalueType)
                {
                    this_param.SetResult(expression, resultType: resultType, lvalueType: lvalueType);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 11578, 11653);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 11466, 11665);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 11466, 11665);
            }
        }

        private void UseLvalueOnly(BoundExpression? expression)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 11798, 11981);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 11878, 11970);

                f_10899_11878_11969(this, expression, f_10899_11900_11916().ToTypeWithState(), f_10899_11936_11952(), isLvalue: true);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 11798, 11981);

                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                f_10899_11900_11916()
                {
                    var return_v = LvalueResultType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 11900, 11916);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                f_10899_11936_11952()
                {
                    var return_v = LvalueResultType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 11936, 11952);
                    return return_v;
                }


                int
                f_10899_11878_11969(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression?
                expression, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                resultType, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                lvalueType, bool
                isLvalue)
                {
                    this_param.SetResult(expression, resultType, lvalueType, isLvalue: (bool?)isLvalue);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 11878, 11969);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 11798, 11981);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 11798, 11981);
            }
        }

        private void SetInvalidResult()
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 12025, 12152);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 12028, 12152);
                f_10899_12028_12152(this, expression: null, _invalidType, _invalidType.ToTypeWithAnnotations(compilation), updateAnalyzedNullability: false); DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 12025, 12152);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 12025, 12152);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 12025, 12152);
            }

            int
            f_10899_12028_12152(Microsoft.CodeAnalysis.CSharp.NullableWalker
            this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression?
            expression, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
            resultType, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
            lvalueType, bool
            updateAnalyzedNullability)
            {
                this_param.SetResult(expression: expression, resultType, lvalueType, updateAnalyzedNullability: updateAnalyzedNullability);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 12028, 12152);
                return 0;
            }

        }

        private void SetResult(BoundExpression? expression, TypeWithState resultType, TypeWithAnnotations lvalueType, bool updateAnalyzedNullability = true, bool? isLvalue = null)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 12165, 12578);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 12361, 12416);

                _visitResult = f_10899_12376_12415(resultType, lvalueType);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 12430, 12567) || true) && (updateAnalyzedNullability)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 12430, 12567);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 12493, 12552);

                    f_10899_12493_12551(this, expression, _visitResult, isLvalue);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 12430, 12567);
                }
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 12165, 12578);

                Microsoft.CodeAnalysis.CSharp.NullableWalker.VisitResult
                f_10899_12376_12415(Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                rValueType, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                lValueType)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.NullableWalker.VisitResult(rValueType, lValueType);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 12376, 12415);
                    return return_v;
                }


                int
                f_10899_12493_12551(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression?
                expr, Microsoft.CodeAnalysis.CSharp.NullableWalker.VisitResult
                result, bool?
                isLvalue)
                {
                    this_param.SetAnalyzedNullability(expr, result, isLvalue);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 12493, 12551);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 12165, 12578);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 12165, 12578);
            }
        }

        private bool ShouldMakeNotNullRvalue(BoundExpression node)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 12649, 12708);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 12652, 12708);
                return f_10899_12652_12669(node) || (DynAbs.Tracing.TraceSender.Expression_False(10899, 12652, 12690) || f_10899_12673_12690(node)) || (DynAbs.Tracing.TraceSender.Expression_False(10899, 12652, 12708) || !f_10899_12695_12708(this)); DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 12649, 12708);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 12649, 12708);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 12649, 12708);
            }
            throw new System.Exception("Slicer error: unreachable code");

            bool
            f_10899_12652_12669(Microsoft.CodeAnalysis.CSharp.BoundExpression
            this_param)
            {
                var return_v = this_param.IsSuppressed;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 12652, 12669);
                return return_v;
            }


            bool
            f_10899_12673_12690(Microsoft.CodeAnalysis.CSharp.BoundExpression
            this_param)
            {
                var return_v = this_param.HasAnyErrors;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 12673, 12690);
                return return_v;
            }


            bool
            f_10899_12695_12708(Microsoft.CodeAnalysis.CSharp.NullableWalker
            this_param)
            {
                var return_v = this_param.IsReachable();
                DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 12695, 12708);
                return return_v;
            }

        }

        private void SetAnalyzedNullability(BoundExpression? expr, VisitResult result, bool? isLvalue = null)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 12853, 15741);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 12979, 13035) || true) && (expr == null || (DynAbs.Tracing.TraceSender.Expression_False(10899, 12983, 13026) || _disableNullabilityAnalysis))
                )
                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 12979, 13035);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 13028, 13035);

                    return;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 12979, 13035);
                }

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 13473, 15730) || true) && (_analyzedNullabilityMapOpt != null)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 13473, 15730);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 15151, 15715);

                    _analyzedNullabilityMapOpt[expr] = (f_10899_15187_15291(result.LValueType.ToPublicAnnotation(), f_10899_15247_15290(result.RValueType.State)),
                    (DynAbs.Tracing.TraceSender.Conditional_F1(10899, 15593, 15676) || ((f_10899_15593_15668_I(DynAbs.Tracing.TraceSender.TraceConditionalAccessExpression(f_10899_15593_15602(expr), 10899, 15593, 15668).Equals(result.RValueType.Type, TypeCompareKind.AllIgnoreOptions)) == true && DynAbs.Tracing.TraceSender.Conditional_F2(10899, 15679, 15701)) || DynAbs.Tracing.TraceSender.Conditional_F3(10899, 15704, 15713))) ? result.RValueType.Type : f_10899_15704_15713(expr));
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 13473, 15730);
                }
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 12853, 15741);

                Microsoft.CodeAnalysis.NullableFlowState
                f_10899_15247_15290(Microsoft.CodeAnalysis.CSharp.NullableFlowState
                nullableFlowState)
                {
                    var return_v = nullableFlowState.ToPublicFlowState();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 15247, 15290);
                    return return_v;
                }


                Microsoft.CodeAnalysis.NullabilityInfo
                f_10899_15187_15291(Microsoft.CodeAnalysis.NullableAnnotation
                annotation, Microsoft.CodeAnalysis.NullableFlowState
                flowState)
                {
                    var return_v = new Microsoft.CodeAnalysis.NullabilityInfo(annotation, flowState);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 15187, 15291);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?
                f_10899_15593_15602(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 15593, 15602);
                    return return_v;
                }


                bool?
                f_10899_15593_15668_I(bool?
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 15593, 15668);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?
                f_10899_15704_15713(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 15704, 15713);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 12853, 15741);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 12853, 15741);
            }
        }

        private PooledDictionary<object, PlaceholderLocal>? _placeholderLocalsOpt;

        private bool _disableDiagnostics;

        private bool _expressionIsRead;

        private int _lastConditionalAccessSlot;

        private bool IsAnalyzingAttribute
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 16717, 16762);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 16720, 16762);
                    return f_10899_16720_16739(methodMainNode) == BoundKind.Attribute; DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 16717, 16762);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 16717, 16762);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 16717, 16762);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        protected override void Free()
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 16775, 17073);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 16830, 16863);

                DynAbs.Tracing.TraceSender.TraceInvocationWrapper(() => DynAbs.Tracing.TraceSender.TraceConditionalAccessExpression(_nestedFunctionVariables, 10899, 16830, 16862)?.Free(), 10899, 16855, 16862);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 16877, 16911);

                DynAbs.Tracing.TraceSender.TraceInvocationWrapper(() => DynAbs.Tracing.TraceSender.TraceConditionalAccessExpression(_awaitablePlaceholdersOpt, 10899, 16877, 16910)?.Free(), 10899, 16903, 16910);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 16925, 16960);

                DynAbs.Tracing.TraceSender.TraceInvocationWrapper(() => DynAbs.Tracing.TraceSender.TraceConditionalAccessExpression(_methodGroupReceiverMapOpt, 10899, 16925, 16959)?.Free(), 10899, 16952, 16959);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 16974, 17004);

                DynAbs.Tracing.TraceSender.TraceInvocationWrapper(() => DynAbs.Tracing.TraceSender.TraceConditionalAccessExpression(_placeholderLocalsOpt, 10899, 16974, 17003)?.Free(), 10899, 16996, 17003);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 17018, 17036);

                f_10899_17018_17035(_variables);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 17050, 17062);

                DynAbs.Tracing.TraceSender.TraceInvocationWrapper(() => base.Free(), 10899, 17050, 17061);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 16775, 17073);

                int
                f_10899_17018_17035(Microsoft.CodeAnalysis.CSharp.NullableWalker.Variables
                this_param)
                {
                    this_param.Free();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 17018, 17035);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 16775, 17073);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 16775, 17073);
            }
        }

        private NullableWalker(
                    CSharpCompilation compilation,
                    Symbol? symbol,
                    bool useConstructorExitWarnings,
                    bool useDelegateInvokeParameterTypes,
                    MethodSymbol? delegateInvokeMethodOpt,
                    BoundNode node,
                    Binder binder,
                    Conversions conversions,
                    Variables? variables,
                    ArrayBuilder<(BoundReturnStatement, TypeWithAnnotations)>? returnTypesOpt,
                    ImmutableDictionary<BoundExpression, (NullabilityInfo, TypeSymbol?)>.Builder? analyzedNullabilityMapOpt,
                    SnapshotManager.Builder? snapshotBuilderOpt,
                    bool isSpeculative = false)
        : base(f_10899_17786_17797_C(compilation), symbol, node, f_10899_17813_17849(), trackUnassignments: true)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterConstructor(10899, 17085, 18650);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 5463, 5473);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 5604, 5611);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 5768, 5780);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 6089, 6116);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 6382, 6414);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 6690, 6711);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 6993, 7008);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 7656, 7682);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 7918, 7937);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 8068, 8095);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 8411, 8437);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 8717, 8742);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 8956, 8980);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 9202, 9216);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 9367, 9383);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 15921, 15942);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 16188, 16215);
                this._disableDiagnostics = false; DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 16364, 16388);
                this._expressionIsRead = true; DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 16639, 16670);
                this._lastConditionalAccessSlot = -1; DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 17901, 17985);

                f_10899_17901_17984(!useDelegateInvokeParameterTypes || (DynAbs.Tracing.TraceSender.Expression_False(10899, 17914, 17983) || delegateInvokeMethodOpt is object));
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 18001, 18052);

                _variables = variables ?? (DynAbs.Tracing.TraceSender.Expression_Null<Microsoft.CodeAnalysis.CSharp.NullableWalker.Variables?>(10899, 18014, 18051) ?? f_10899_18027_18051(symbol));
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 18066, 18083);

                _binder = binder;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 18097, 18159);

                _conversions = (Conversions)f_10899_18125_18158(conversions, true);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 18173, 18230);

                _useConstructorExitWarnings = useConstructorExitWarnings;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 18244, 18311);

                _useDelegateInvokeParameterTypes = useDelegateInvokeParameterTypes;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 18325, 18373);

                _delegateInvokeMethod = delegateInvokeMethodOpt;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 18387, 18442);

                _analyzedNullabilityMapOpt = analyzedNullabilityMapOpt;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 18456, 18489);

                _returnTypesOpt = returnTypesOpt;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 18503, 18544);

                _snapshotBuilderOpt = snapshotBuilderOpt;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 18558, 18589);

                _isSpeculative = isSpeculative;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 18603, 18639);

                _hasInitialState = variables is { };
                DynAbs.Tracing.TraceSender.TraceExitConstructor(10899, 17085, 18650);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 17085, 18650);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 17085, 18650);
            }
        }

        public string GetDebuggerDisplay()
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 18662, 19020);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 18721, 19009) || true) && (this.IsConditionalState)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 18721, 19009);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 18782, 18880);

                    return $"{{{f_10899_18794_18808(f_10899_18794_18803(this))} WhenTrue:{f_10899_18820_18839(this, StateWhenTrue)} WhenFalse:{f_10899_18852_18872(this, StateWhenFalse)}{"}"}";
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 18721, 19009);
                }

                else

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 18721, 19009);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 18946, 18994);

                    return $"{{{f_10899_18958_18972(f_10899_18958_18967(this))} {f_10899_18975_18986(this, State)}{"}"}";
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 18721, 19009);
                }
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 18662, 19020);

                System.Type
                f_10899_18794_18803(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param)
                {
                    var return_v = this_param.GetType();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 18794, 18803);
                    return return_v;
                }


                string
                f_10899_18794_18808(System.Type
                this_param)
                {
                    var return_v = this_param.Name;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 18794, 18808);
                    return return_v;
                }


                string
                f_10899_18820_18839(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState
                state)
                {
                    var return_v = this_param.Dump(state);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 18820, 18839);
                    return return_v;
                }


                string
                f_10899_18852_18872(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState
                state)
                {
                    var return_v = this_param.Dump(state);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 18852, 18872);
                    return return_v;
                }


                System.Type
                f_10899_18958_18967(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param)
                {
                    var return_v = this_param.GetType();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 18958, 18967);
                    return return_v;
                }


                string
                f_10899_18958_18972(System.Type
                this_param)
                {
                    var return_v = this_param.Name;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 18958, 18972);
                    return return_v;
                }


                string
                f_10899_18975_18986(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState
                state)
                {
                    var return_v = this_param.Dump(state);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 18975, 18986);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 18662, 19020);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 18662, 19020);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public sealed override bool AwaitUsingAndForeachAddsPendingBranch
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 19215, 19222);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 19218, 19222);
                    return true; DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 19215, 19222);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 19215, 19222);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 19215, 19222);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        protected override bool ConvertInsufficientExecutionStackExceptionToCancelledByStackGuardException()
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 19235, 19383);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 19360, 19372);

                return true;
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 19235, 19383);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 19235, 19383);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 19235, 19383);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        protected override bool TryGetVariable(VariableIdentifier identifier, out int slot)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 19395, 19566);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 19503, 19555);

                return f_10899_19510_19554(_variables, identifier, out slot);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 19395, 19566);

                bool
                f_10899_19510_19554(Microsoft.CodeAnalysis.CSharp.NullableWalker.Variables
                this_param, Microsoft.CodeAnalysis.CSharp.LocalDataFlowPass<Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState, Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalFunctionState>.VariableIdentifier
                identifier, out int
                slot)
                {
                    var return_v = this_param.TryGetValue(identifier, out slot);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 19510, 19554);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 19395, 19566);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 19395, 19566);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        protected override int AddVariable(VariableIdentifier identifier)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 19578, 19713);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 19668, 19702);

                return f_10899_19675_19701(_variables, identifier);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 19578, 19713);

                int
                f_10899_19675_19701(Microsoft.CodeAnalysis.CSharp.NullableWalker.Variables
                this_param, Microsoft.CodeAnalysis.CSharp.LocalDataFlowPass<Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState, Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalFunctionState>.VariableIdentifier
                identifier)
                {
                    var return_v = this_param.Add(identifier);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 19675, 19701);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 19578, 19713);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 19578, 19713);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        protected override ImmutableArray<PendingBranch> Scan(ref bool badRegion)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 19725, 45004);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 19823, 19923) || true) && (_returnTypesOpt != null)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 19823, 19923);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 19884, 19908);

                    f_10899_19884_19907(_returnTypesOpt);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 19823, 19923);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 19937, 19962);

                f_10899_19937_19961(f_10899_19937_19953(this));
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 19976, 20014);

                this.regionPlace = RegionPlace.Before;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 20028, 20670) || true) && (!_isSpeculative)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 20028, 20670);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 20081, 20139);

                    ParameterSymbol
                    methodThisParameter = f_10899_20119_20138()
                    ;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 20157, 20175);

                    f_10899_20157_20174(this);

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 20214, 20385) || true) && (methodThisParameter is object)
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 20214, 20385);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 20289, 20366);

                        f_10899_20289_20365(this, methodThisParameter, f_10899_20325_20364(methodThisParameter));
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 20214, 20385);
                    }
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 20405, 20435);

                    f_10899_20405_20434();
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 20587, 20655);

                    DynAbs.Tracing.TraceSender.TraceInvocationWrapper(() => DynAbs.Tracing.TraceSender.TraceConditionalAccessExpression(_snapshotBuilderOpt, 10899, 20587, 20654)?.TakeIncrementalSnapshot(methodMainNode, State), 10899, 20607, 20654);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 20028, 20670);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 20686, 20758);

                // LAFHIS
                //ImmutableArray<PendingBranch>
                //pendingReturns = DynAbs.Tracing.TraceSender.TraceInvocationWrapper(() => base.Scan(ref badRegion), 10899, 20733, 20757)
                //;
                ImmutableArray<PendingBranch> pendingReturns = base.Scan(ref badRegion);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 20733, 20757);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 20795, 20830);

                var
                temp = _symbol as MethodSymbol
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 20844, 21749) || true) && (temp == null || (DynAbs.Tracing.TraceSender.Expression_False(10899, 20848, 20892) || f_10899_20864_20884(temp) != true) || (DynAbs.Tracing.TraceSender.Expression_False(10899, 20848, 20923) || _useConstructorExitWarnings))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 20844, 21749);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 20957, 20995);

                    f_10899_20957_20994(this, syntaxOpt: null);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 21013, 21063);

                    f_10899_21013_21062(syntaxOpt: null, this.State);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 21081, 21114);

                    f_10899_21081_21113(null, this.State);
                    try
                    {
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 21134, 21734);
                        foreach (var pendingReturn in f_10899_21164_21178_I(pendingReturns))
                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 21134, 21734);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 21220, 21302);

                            f_10899_21220_21301(syntaxOpt: pendingReturn.Branch.Syntax, pendingReturn.State);

                            if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 21326, 21715) || true) && (pendingReturn.Branch is BoundReturnStatement returnStatement)
                            )

                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 21326, 21715);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 21440, 21500);

                                f_10899_21440_21499(returnStatement.Syntax, pendingReturn.State);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 21526, 21593);

                                f_10899_21526_21592(pendingReturn, returnStatement);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 21619, 21692);

                                f_10899_21619_21691(pendingReturn, returnStatement);
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 21326, 21715);
                            }
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 21134, 21734);
                        }
                    }
                    catch (System.Exception)
                    {
                        DynAbs.Tracing.TraceSender.TraceExitLoopByException(10899, 1, 601);
                        throw;
                    }
                    finally
                    {
                        DynAbs.Tracing.TraceSender.TraceExitLoop(10899, 1, 601);
                    }
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 20844, 21749);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 21765, 21787);

                return pendingReturns;

                void enforceMemberNotNull(SyntaxNode? syntaxOpt, LocalState state)
                {
                    try
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 21803, 23714);
                        Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol thisParameter = default(Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol);

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 21902, 21990) || true) && (f_10899_21906_21922_M(!state.Reachable))
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 21902, 21990);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 21964, 21971);

                            return;
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 21902, 21990);
                        }
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 22010, 22047);

                        var
                        method = _symbol as MethodSymbol
                        ;

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 22065, 23699) || true) && (method is object)
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 22065, 23699);

                            if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 22127, 23680) || true) && (f_10899_22131_22153(method))
                            )

                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 22127, 23680);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 22203, 22245);

                                f_10899_22203_22244(_useConstructorExitWarnings);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 22271, 22288);

                                var
                                thisSlot = 0
                                ;

                                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 22314, 22624) || true) && (f_10899_22318_22349(method))
                                )

                                {
                                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 22314, 22624);
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 22407, 22457);

                                    f_10899_22407_22456(method, out thisParameter);
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 22487, 22525);

                                    f_10899_22487_22524(thisParameter is object);
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 22555, 22597);

                                    thisSlot = f_10899_22566_22596(this, thisParameter);
                                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 22314, 22624);
                                }
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 22786, 22889);

                                var
                                exitLocation = (DynAbs.Tracing.TraceSender.Conditional_F1(10899, 22805, 22845) || ((method.DeclaringSyntaxReferences.IsEmpty && DynAbs.Tracing.TraceSender.Conditional_F2(10899, 22848, 22852)) || DynAbs.Tracing.TraceSender.Conditional_F3(10899, 22855, 22888))) ? null : method.Locations.FirstOrDefault()
                                ;
                                try
                                {
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 22915, 23147);
                                    foreach (var member in f_10899_22938_22981_I(f_10899_22938_22981(f_10899_22938_22959(method))))
                                    {
                                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 22915, 23147);
                                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 23039, 23120);

                                        f_10899_23039_23119(method, member, state, thisSlot, exitLocation);
                                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 22915, 23147);
                                    }
                                }
                                catch (System.Exception)
                                {
                                    DynAbs.Tracing.TraceSender.TraceExitLoopByException(10899, 1, 233);
                                    throw;
                                }
                                finally
                                {
                                    DynAbs.Tracing.TraceSender.TraceExitLoop(10899, 1, 233);
                                }
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 22127, 23680);
                            }

                            else

                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 22127, 23680);
                                {
                                    try
                                    {
                                        do

                                        {
                                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 23245, 23657);
                                            try
                                            {
                                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 23304, 23516);
                                                foreach (var memberName in f_10899_23331_23352_I(f_10899_23331_23352(method)))
                                                {
                                                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 23304, 23516);
                                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 23418, 23485);

                                                    f_10899_23418_23484(syntaxOpt, state, method, memberName);
                                                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 23304, 23516);
                                                }
                                            }
                                            catch (System.Exception)
                                            {
                                                DynAbs.Tracing.TraceSender.TraceExitLoopByException(10899, 1, 213);
                                                throw;
                                            }
                                            finally
                                            {
                                                DynAbs.Tracing.TraceSender.TraceExitLoop(10899, 1, 213);
                                            }
                                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 23548, 23581);

                                            method = f_10899_23557_23580(method);
                                            DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 23245, 23657);
                                        }
                                        while ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 23245, 23657) || true) && (method != null)
                                        );
                                    }
                                    catch (System.Exception)
                                    {
                                        DynAbs.Tracing.TraceSender.TraceExitLoopByException(10899, 23245, 23657);
                                        throw;
                                    }
                                    finally
                                    {
                                        DynAbs.Tracing.TraceSender.TraceExitLoop(10899, 23245, 23657);
                                    }
                                }
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 22127, 23680);
                            }
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 22065, 23699);
                        }
                        DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 21803, 23714);

                        bool
                        f_10899_21906_21922_M(bool
                        i)
                        {
                            var return_v = i;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 21906, 21922);
                            return return_v;
                        }


                        bool
                        f_10899_22131_22153(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                        method)
                        {
                            var return_v = method.IsConstructor();
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 22131, 22153);
                            return return_v;
                        }


                        int
                        f_10899_22203_22244(bool
                        condition)
                        {
                            Debug.Assert(condition);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 22203, 22244);
                            return 0;
                        }


                        bool
                        f_10899_22318_22349(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                        this_param)
                        {
                            var return_v = this_param.RequiresInstanceReceiver;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 22318, 22349);
                            return return_v;
                        }


                        bool
                        f_10899_22407_22456(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                        this_param, out Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol?
                        thisParameter)
                        {
                            var return_v = this_param.TryGetThisParameter(out thisParameter);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 22407, 22456);
                            return return_v;
                        }


                        int
                        f_10899_22487_22524(bool
                        condition)
                        {
                            Debug.Assert(condition);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 22487, 22524);
                            return 0;
                        }


                        int
                        f_10899_22566_22596(Microsoft.CodeAnalysis.CSharp.NullableWalker
                        this_param, Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol
                        symbol)
                        {
                            var return_v = this_param.GetOrCreateSlot((Microsoft.CodeAnalysis.CSharp.Symbol)symbol);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 22566, 22596);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                        f_10899_22938_22959(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                        this_param)
                        {
                            var return_v = this_param.ContainingType;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 22938, 22959);
                            return return_v;
                        }


                        System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>
                        f_10899_22938_22981(Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                        this_param)
                        {
                            var return_v = this_param.GetMembersUnordered();
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 22938, 22981);
                            return return_v;
                        }


                        int
                        f_10899_23039_23119(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                        constructor, Microsoft.CodeAnalysis.CSharp.Symbol
                        member, Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState
                        state, int
                        thisSlot, Microsoft.CodeAnalysis.Location?
                        exitLocation)
                        {
                            checkMemberStateOnConstructorExit(constructor, member, state, thisSlot, exitLocation);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 23039, 23119);
                            return 0;
                        }


                        System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>
                        f_10899_22938_22981_I(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>
                        i)
                        {
                            var return_v = i;
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 22938, 22981);
                            return return_v;
                        }


                        System.Collections.Immutable.ImmutableArray<string>
                        f_10899_23331_23352(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                        this_param)
                        {
                            var return_v = this_param.NotNullMembers;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 23331, 23352);
                            return return_v;
                        }


                        int
                        f_10899_23418_23484(Microsoft.CodeAnalysis.SyntaxNode?
                        syntaxOpt, Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState
                        state, Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                        method, string
                        memberName)
                        {
                            enforceMemberNotNullOnMember(syntaxOpt, state, method, memberName);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 23418, 23484);
                            return 0;
                        }


                        System.Collections.Immutable.ImmutableArray<string>
                        f_10899_23331_23352_I(System.Collections.Immutable.ImmutableArray<string>
                        i)
                        {
                            var return_v = i;
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 23331, 23352);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                        f_10899_23557_23580(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                        this_param)
                        {
                            var return_v = this_param.OverriddenMethod;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 23557, 23580);
                            return return_v;
                        }

                    }
                    catch
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 21803, 23714);
                        throw;
                    }
                    finally
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 21803, 23714);
                    }
                }

                void checkMemberStateOnConstructorExit(MethodSymbol constructor, Symbol member, LocalState state, int thisSlot, Location? exitLocation)
                {
                    try
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 23730, 27057);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 23898, 23953);

                        var
                        isStatic = !f_10899_23914_23952(constructor)
                        ;

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 23971, 24070) || true) && (f_10899_23975_23990(member) != isStatic)
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 23971, 24070);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 24044, 24051);

                            return;
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 23971, 24070);
                        }

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 24446, 24540) || true) && (f_10899_24450_24472(member))
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 24446, 24540);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 24514, 24521);

                            return;
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 24446, 24540);
                        }
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 24560, 24590);

                        TypeWithAnnotations
                        fieldType
                        = default(TypeWithAnnotations);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 24608, 24627);

                        FieldSymbol?
                        field
                        = default(FieldSymbol?);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 24645, 24659);

                        Symbol
                        symbol
                        = default(Symbol);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 24677, 25407);

                        switch (member)
                        {

                            case FieldSymbol f:
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 24677, 25407);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 24778, 24812);

                                fieldType = f_10899_24790_24811(f);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 24838, 24848);

                                field = f;
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 24874, 24936);

                                symbol = (Symbol?)(f_10899_24893_24911(f) as PropertySymbol) ?? (DynAbs.Tracing.TraceSender.Expression_Null<Microsoft.CodeAnalysis.CSharp.Symbol?>(10899, 24883, 24935) ?? f);
                                DynAbs.Tracing.TraceSender.TraceBreak(10899, 24962, 24968);

                                break;
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 24677, 25407);

                            case EventSymbol e:
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 24677, 25407);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 25035, 25069);

                                fieldType = f_10899_25047_25068(e);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 25095, 25121);

                                field = f_10899_25103_25120(e);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 25147, 25158);

                                symbol = e;

                                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 25184, 25293) || true) && (field is null)
                                )

                                {
                                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 25184, 25293);
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 25259, 25266);

                                    return;
                                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 25184, 25293);
                                }
                                DynAbs.Tracing.TraceSender.TraceBreak(10899, 25319, 25325);

                                break;
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 24677, 25407);

                            default:
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 24677, 25407);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 25381, 25388);

                                return;
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 24677, 25407);
                        }

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 25425, 25510) || true) && (f_10899_25429_25442(field))
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 25425, 25510);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 25484, 25491);

                            return;
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 25425, 25510);
                        }

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 25528, 25658) || true) && (f_10899_25532_25558(fieldType.Type) || (DynAbs.Tracing.TraceSender.Expression_False(10899, 25532, 25590) || f_10899_25562_25590(fieldType.Type)))
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 25528, 25658);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 25632, 25639);

                            return;
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 25528, 25658);
                        }
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 25676, 25730);

                        var
                        annotations = f_10899_25694_25729(symbol)
                        ;

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 25748, 26047) || true) && ((annotations & FlowAnalysisAnnotations.AllowNull) != 0)
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 25748, 26047);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 26021, 26028);

                            return;
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 25748, 26047);
                        }
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 26065, 26131);

                        fieldType = f_10899_26077_26130(fieldType, annotations);

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 26149, 26267) || true) && (!f_10899_26154_26199(fieldType.NullableAnnotation))
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 26149, 26267);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 26241, 26248);

                            return;
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 26149, 26267);
                        }
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 26285, 26330);

                        var
                        slot = f_10899_26296_26329(this, symbol, thisSlot)
                        ;

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 26348, 26428) || true) && (slot < 0)
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 26348, 26428);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 26402, 26409);

                            return;
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 26348, 26428);
                        }
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 26448, 26478);

                        var
                        memberState = state[slot]
                        ;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 26496, 26734);

                        var
                        badState = (DynAbs.Tracing.TraceSender.Conditional_F1(10899, 26511, 26628) || ((f_10899_26511_26572(fieldType.Type) && (DynAbs.Tracing.TraceSender.Expression_True(10899, 26511, 26628) && (annotations & FlowAnalysisAnnotations.NotNull) == 0
                        ) && DynAbs.Tracing.TraceSender.Conditional_F2(10899, 26652, 26682)) || DynAbs.Tracing.TraceSender.Conditional_F3(10899, 26706, 26733))) ? NullableFlowState.MaybeDefault
                        : NullableFlowState.MaybeNull
                        ;

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 26752, 27042) || true) && (memberState >= badState)
                        ) // is 'memberState' as bad as or worse than 'badState'?

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 26752, 27042);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 26877, 27023);

                            f_10899_26877_27022(f_10899_26877_26888(), ErrorCode.WRN_UninitializedNonNullableField, exitLocation ?? (DynAbs.Tracing.TraceSender.Expression_Null<Microsoft.CodeAnalysis.Location?>(10899, 26938, 26984) ?? symbol.Locations.FirstOrNone()), f_10899_26986_27008(f_10899_26986_26997(symbol)), f_10899_27010_27021(symbol));
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 26752, 27042);
                        }
                        DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 23730, 27057);

                        bool
                        f_10899_23914_23952(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                        symbol)
                        {
                            var return_v = symbol.RequiresInstanceReceiver();
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 23914, 23952);
                            return return_v;
                        }


                        bool
                        f_10899_23975_23990(Microsoft.CodeAnalysis.CSharp.Symbol
                        this_param)
                        {
                            var return_v = this_param.IsStatic;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 23975, 23990);
                            return return_v;
                        }


                        bool
                        f_10899_24450_24472(Microsoft.CodeAnalysis.CSharp.Symbol
                        field)
                        {
                            var return_v = HasInitializer(field);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 24450, 24472);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                        f_10899_24790_24811(Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol
                        this_param)
                        {
                            var return_v = this_param.TypeWithAnnotations;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 24790, 24811);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.CSharp.Symbol
                        f_10899_24893_24911(Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol
                        this_param)
                        {
                            var return_v = this_param.AssociatedSymbol;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 24893, 24911);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                        f_10899_25047_25068(Microsoft.CodeAnalysis.CSharp.Symbols.EventSymbol
                        this_param)
                        {
                            var return_v = this_param.TypeWithAnnotations;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 25047, 25068);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol?
                        f_10899_25103_25120(Microsoft.CodeAnalysis.CSharp.Symbols.EventSymbol
                        this_param)
                        {
                            var return_v = this_param.AssociatedField;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 25103, 25120);
                            return return_v;
                        }


                        bool
                        f_10899_25429_25442(Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol
                        this_param)
                        {
                            var return_v = this_param.IsConst;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 25429, 25442);
                            return return_v;
                        }


                        bool
                        f_10899_25532_25558(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                        this_param)
                        {
                            var return_v = this_param.IsValueType;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 25532, 25558);
                            return return_v;
                        }


                        bool
                        f_10899_25562_25590(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                        type)
                        {
                            var return_v = type.IsErrorType();
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 25562, 25590);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.CSharp.Symbols.FlowAnalysisAnnotations
                        f_10899_25694_25729(Microsoft.CodeAnalysis.CSharp.Symbol
                        symbol)
                        {
                            var return_v = symbol.GetFlowAnalysisAnnotations();
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 25694, 25729);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                        f_10899_26077_26130(Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                        declaredType, Microsoft.CodeAnalysis.CSharp.Symbols.FlowAnalysisAnnotations
                        annotations)
                        {
                            var return_v = ApplyUnconditionalAnnotations(declaredType, annotations);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 26077, 26130);
                            return return_v;
                        }


                        bool
                        f_10899_26154_26199(Microsoft.CodeAnalysis.CSharp.NullableAnnotation
                        annotation)
                        {
                            var return_v = annotation.IsNotAnnotated();
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 26154, 26199);
                            return return_v;
                        }


                        int
                        f_10899_26296_26329(Microsoft.CodeAnalysis.CSharp.NullableWalker
                        this_param, Microsoft.CodeAnalysis.CSharp.Symbol
                        symbol, int
                        containingSlot)
                        {
                            var return_v = this_param.GetOrCreateSlot(symbol, containingSlot);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 26296, 26329);
                            return return_v;
                        }


                        bool
                        f_10899_26511_26572(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                        type)
                        {
                            var return_v = type.IsPossiblyNullableReferenceTypeTypeParameter();
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 26511, 26572);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.DiagnosticBag
                        f_10899_26877_26888()
                        {
                            var return_v = Diagnostics;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 26877, 26888);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.SymbolKind
                        f_10899_26986_26997(Microsoft.CodeAnalysis.CSharp.Symbol
                        this_param)
                        {
                            var return_v = this_param.Kind;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 26986, 26997);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.CSharp.LocalizableErrorArgument
                        f_10899_26986_27008(Microsoft.CodeAnalysis.SymbolKind
                        kind)
                        {
                            var return_v = kind.Localize();
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 26986, 27008);
                            return return_v;
                        }


                        string
                        f_10899_27010_27021(Microsoft.CodeAnalysis.CSharp.Symbol
                        this_param)
                        {
                            var return_v = this_param.Name;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 27010, 27021);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo
                        f_10899_26877_27022(Microsoft.CodeAnalysis.DiagnosticBag
                        diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                        code, Microsoft.CodeAnalysis.Location
                        location, params object[]
                        args)
                        {
                            var return_v = diagnostics.Add(code, location, args);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 26877, 27022);
                            return return_v;
                        }

                    }
                    catch
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 23730, 27057);
                        throw;
                    }
                    finally
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 23730, 27057);
                    }
                }

                void enforceMemberNotNullOnMember(SyntaxNode? syntaxOpt, LocalState state, MethodSymbol method, string memberName)
                {
                    try
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 27073, 27695);
                        try
                        {
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 27220, 27680);
                            foreach (var member in f_10899_27243_27287_I(f_10899_27243_27287(f_10899_27243_27264(method), memberName)))
                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 27220, 27680);

                                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 27329, 27661) || true) && (f_10899_27333_27365(member, state))
                                )

                                {
                                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 27329, 27661);
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 27500, 27638);

                                    f_10899_27500_27637(f_10899_27500_27511(), ErrorCode.WRN_MemberNotNull, f_10899_27545_27569_I(DynAbs.Tracing.TraceSender.TraceConditionalAccessExpression(syntaxOpt, 10899, 27545, 27569)?.GetLocation()) ?? (DynAbs.Tracing.TraceSender.Expression_Null<Microsoft.CodeAnalysis.Location?>(10899, 27545, 27623) ?? f_10899_27573_27609(methodMainNode.Syntax).GetLocation()), f_10899_27625_27636(member));
                                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 27329, 27661);
                                }
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 27220, 27680);
                            }
                        }
                        catch (System.Exception)
                        {
                            DynAbs.Tracing.TraceSender.TraceExitLoopByException(10899, 1, 461);
                            throw;
                        }
                        finally
                        {
                            DynAbs.Tracing.TraceSender.TraceExitLoop(10899, 1, 461);
                        }
                        DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 27073, 27695);

                        Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                        f_10899_27243_27264(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                        this_param)
                        {
                            var return_v = this_param.ContainingType;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 27243, 27264);
                            return return_v;
                        }


                        System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>
                        f_10899_27243_27287(Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                        this_param, string
                        name)
                        {
                            var return_v = this_param.GetMembers(name);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 27243, 27287);
                            return return_v;
                        }


                        bool
                        f_10899_27333_27365(Microsoft.CodeAnalysis.CSharp.Symbol
                        member, Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState
                        state)
                        {
                            var return_v = memberHasBadState(member, state);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 27333, 27365);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.DiagnosticBag
                        f_10899_27500_27511()
                        {
                            var return_v = Diagnostics;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 27500, 27511);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.Location?
                        f_10899_27545_27569_I(Microsoft.CodeAnalysis.Location?
                        i)
                        {
                            var return_v = i;
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 27545, 27569);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.SyntaxToken
                        f_10899_27573_27609(Microsoft.CodeAnalysis.SyntaxNode
                        this_param)
                        {
                            var return_v = this_param.GetLastToken();
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 27573, 27609);
                            return return_v;
                        }


                        string
                        f_10899_27625_27636(Microsoft.CodeAnalysis.CSharp.Symbol
                        this_param)
                        {
                            var return_v = this_param.Name;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 27625, 27636);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo
                        f_10899_27500_27637(Microsoft.CodeAnalysis.DiagnosticBag
                        diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                        code, Microsoft.CodeAnalysis.Location
                        location, params object[]
                        args)
                        {
                            var return_v = diagnostics.Add(code, location, args);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 27500, 27637);
                            return return_v;
                        }


                        System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>
                        f_10899_27243_27287_I(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>
                        i)
                        {
                            var return_v = i;
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 27243, 27287);
                            return return_v;
                        }

                    }
                    catch
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 27073, 27695);
                        throw;
                    }
                    finally
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 27073, 27695);
                    }
                }

                void enforceMemberNotNullWhenForPendingReturn(PendingBranch pendingReturn, BoundReturnStatement returnStatement)
                {
                    try
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 27711, 29514);

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 27856, 29499) || true) && (pendingReturn.IsConditionalState)
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 27856, 29499);

                            if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 27934, 28225) || true) && (f_10899_27938_27967(returnStatement) is { ConstantValue: { IsBoolean: true, BooleanValue: bool value } })
                            )

                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 27934, 28225);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 28085, 28169);

                                f_10899_28085_28168(returnStatement.Syntax, sense: value, pendingReturn.State);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 28195, 28202);

                                return;
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 27934, 28225);
                            }

                            if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 28249, 28414) || true) && (f_10899_28253_28291_M(!pendingReturn.StateWhenTrue.Reachable) || (DynAbs.Tracing.TraceSender.Expression_False(10899, 28253, 28334) || f_10899_28295_28334_M(!pendingReturn.StateWhenFalse.Reachable)))
                            )

                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 28249, 28414);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 28384, 28391);

                                return;
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 28249, 28414);
                            }

                            if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 28438, 29211) || true) && (_symbol is MethodSymbol method)
                            )

                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 28438, 29211);
                                try
                                {
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 28522, 28840);
                                    foreach (var memberName in f_10899_28549_28578_I(f_10899_28549_28578(method)))
                                    {
                                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 28522, 28840);
                                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 28636, 28813);

                                        f_10899_28636_28812(returnStatement.Syntax, sense: true, f_10899_28708_28752(f_10899_28708_28729(method), memberName), pendingReturn.StateWhenTrue, pendingReturn.StateWhenFalse);
                                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 28522, 28840);
                                    }
                                }
                                catch (System.Exception)
                                {
                                    DynAbs.Tracing.TraceSender.TraceExitLoopByException(10899, 1, 319);
                                    throw;
                                }
                                finally
                                {
                                    DynAbs.Tracing.TraceSender.TraceExitLoop(10899, 1, 319);
                                }
                                try
                                {
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 28868, 29188);
                                    foreach (var memberName in f_10899_28895_28925_I(f_10899_28895_28925(method)))
                                    {
                                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 28868, 29188);
                                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 28983, 29161);

                                        f_10899_28983_29160(returnStatement.Syntax, sense: false, f_10899_29056_29100(f_10899_29056_29077(method), memberName), pendingReturn.StateWhenFalse, pendingReturn.StateWhenTrue);
                                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 28868, 29188);
                                    }
                                }
                                catch (System.Exception)
                                {
                                    DynAbs.Tracing.TraceSender.TraceExitLoopByException(10899, 1, 321);
                                    throw;
                                }
                                finally
                                {
                                    DynAbs.Tracing.TraceSender.TraceExitLoop(10899, 1, 321);
                                }
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 28438, 29211);
                            }
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 27856, 29499);
                        }

                        else
                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 27856, 29499);

                            if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 29253, 29499) || true) && (f_10899_29257_29286(returnStatement) is { ConstantValue: { IsBoolean: true, BooleanValue: bool value } })
                            )

                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 29253, 29499);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 29396, 29480);

                                f_10899_29396_29479(returnStatement.Syntax, sense: value, pendingReturn.State);
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 29253, 29499);
                            }
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 27856, 29499);
                        }
                        DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 27711, 29514);

                        Microsoft.CodeAnalysis.CSharp.BoundExpression?
                        f_10899_27938_27967(Microsoft.CodeAnalysis.CSharp.BoundReturnStatement
                        this_param)
                        {
                            var return_v = this_param.ExpressionOpt;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 27938, 27967);
                            return return_v;
                        }


                        int
                        f_10899_28085_28168(Microsoft.CodeAnalysis.SyntaxNode
                        syntaxOpt, bool
                        sense, Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState
                        state)
                        {
                            enforceMemberNotNullWhen(syntaxOpt, sense: sense, state);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 28085, 28168);
                            return 0;
                        }


                        bool
                        f_10899_28253_28291_M(bool
                        i)
                        {
                            var return_v = i;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 28253, 28291);
                            return return_v;
                        }


                        bool
                        f_10899_28295_28334_M(bool
                        i)
                        {
                            var return_v = i;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 28295, 28334);
                            return return_v;
                        }


                        System.Collections.Immutable.ImmutableArray<string>
                        f_10899_28549_28578(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                        this_param)
                        {
                            var return_v = this_param.NotNullWhenTrueMembers;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 28549, 28578);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                        f_10899_28708_28729(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                        this_param)
                        {
                            var return_v = this_param.ContainingType;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 28708, 28729);
                            return return_v;
                        }


                        System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>
                        f_10899_28708_28752(Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                        this_param, string
                        name)
                        {
                            var return_v = this_param.GetMembers(name);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 28708, 28752);
                            return return_v;
                        }


                        int
                        f_10899_28636_28812(Microsoft.CodeAnalysis.SyntaxNode
                        syntaxOpt, bool
                        sense, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>
                        members, Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState
                        state, Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState
                        otherState)
                        {
                            enforceMemberNotNullWhenIfAffected(syntaxOpt, sense: sense, members, state, otherState);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 28636, 28812);
                            return 0;
                        }


                        System.Collections.Immutable.ImmutableArray<string>
                        f_10899_28549_28578_I(System.Collections.Immutable.ImmutableArray<string>
                        i)
                        {
                            var return_v = i;
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 28549, 28578);
                            return return_v;
                        }


                        System.Collections.Immutable.ImmutableArray<string>
                        f_10899_28895_28925(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                        this_param)
                        {
                            var return_v = this_param.NotNullWhenFalseMembers;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 28895, 28925);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                        f_10899_29056_29077(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                        this_param)
                        {
                            var return_v = this_param.ContainingType;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 29056, 29077);
                            return return_v;
                        }


                        System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>
                        f_10899_29056_29100(Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                        this_param, string
                        name)
                        {
                            var return_v = this_param.GetMembers(name);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 29056, 29100);
                            return return_v;
                        }


                        int
                        f_10899_28983_29160(Microsoft.CodeAnalysis.SyntaxNode
                        syntaxOpt, bool
                        sense, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>
                        members, Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState
                        state, Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState
                        otherState)
                        {
                            enforceMemberNotNullWhenIfAffected(syntaxOpt, sense: sense, members, state, otherState);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 28983, 29160);
                            return 0;
                        }


                        System.Collections.Immutable.ImmutableArray<string>
                        f_10899_28895_28925_I(System.Collections.Immutable.ImmutableArray<string>
                        i)
                        {
                            var return_v = i;
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 28895, 28925);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.CSharp.BoundExpression?
                        f_10899_29257_29286(Microsoft.CodeAnalysis.CSharp.BoundReturnStatement
                        this_param)
                        {
                            var return_v = this_param.ExpressionOpt;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 29257, 29286);
                            return return_v;
                        }


                        int
                        f_10899_29396_29479(Microsoft.CodeAnalysis.SyntaxNode
                        syntaxOpt, bool
                        sense, Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState
                        state)
                        {
                            enforceMemberNotNullWhen(syntaxOpt, sense: sense, state);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 29396, 29479);
                            return 0;
                        }

                    }
                    catch
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 27711, 29514);
                        throw;
                    }
                    finally
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 27711, 29514);
                    }
                }

                void enforceMemberNotNullWhenIfAffected(SyntaxNode? syntaxOpt, bool sense, ImmutableArray<Symbol> members, LocalState state, LocalState otherState)
                {
                    try
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 29530, 30173);
                        try
                        {
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 29710, 30158);
                            foreach (var member in f_10899_29733_29740_I(members))
                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 29710, 30158);

                                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 29922, 30139) || true) && (f_10899_29926_29958(member, state) != f_10899_29962_29999(member, otherState))
                                )

                                {
                                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 29922, 30139);
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 30049, 30116);

                                    f_10899_30049_30115(syntaxOpt, sense, member, state);
                                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 29922, 30139);
                                }
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 29710, 30158);
                            }
                        }
                        catch (System.Exception)
                        {
                            DynAbs.Tracing.TraceSender.TraceExitLoopByException(10899, 1, 449);
                            throw;
                        }
                        finally
                        {
                            DynAbs.Tracing.TraceSender.TraceExitLoop(10899, 1, 449);
                        }
                        DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 29530, 30173);

                        bool
                        f_10899_29926_29958(Microsoft.CodeAnalysis.CSharp.Symbol
                        member, Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState
                        state)
                        {
                            var return_v = memberHasBadState(member, state);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 29926, 29958);
                            return return_v;
                        }


                        bool
                        f_10899_29962_29999(Microsoft.CodeAnalysis.CSharp.Symbol
                        member, Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState
                        state)
                        {
                            var return_v = memberHasBadState(member, state);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 29962, 29999);
                            return return_v;
                        }


                        int
                        f_10899_30049_30115(Microsoft.CodeAnalysis.SyntaxNode?
                        syntaxOpt, bool
                        sense, Microsoft.CodeAnalysis.CSharp.Symbol
                        member, Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState
                        state)
                        {
                            reportMemberIfBadConditionalState(syntaxOpt, sense, member, state);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 30049, 30115);
                            return 0;
                        }


                        System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>
                        f_10899_29733_29740_I(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>
                        i)
                        {
                            var return_v = i;
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 29733, 29740);
                            return return_v;
                        }

                    }
                    catch
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 29530, 30173);
                        throw;
                    }
                    finally
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 29530, 30173);
                    }
                }

                void enforceMemberNotNullWhen(SyntaxNode? syntaxOpt, bool sense, LocalState state)
                {
                    try
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 30189, 30861);

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 30304, 30846) || true) && (_symbol is MethodSymbol method)
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 30304, 30846);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 30380, 30472);

                            var
                            notNullMembers = (DynAbs.Tracing.TraceSender.Conditional_F1(10899, 30401, 30406) || ((sense && DynAbs.Tracing.TraceSender.Conditional_F2(10899, 30409, 30438)) || DynAbs.Tracing.TraceSender.Conditional_F3(10899, 30441, 30471))) ? f_10899_30409_30438(method) : f_10899_30441_30471(method)
                            ;
                            try
                            {
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 30494, 30827);
                                foreach (var memberName in f_10899_30521_30535_I(notNullMembers))
                                {
                                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 30494, 30827);
                                    try
                                    {
                                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 30585, 30804);
                                        foreach (var member in f_10899_30608_30652_I(f_10899_30608_30652(f_10899_30608_30629(method), memberName)))
                                        {
                                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 30585, 30804);
                                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 30710, 30777);

                                            f_10899_30710_30776(syntaxOpt, sense, member, state);
                                            DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 30585, 30804);
                                        }
                                    }
                                    catch (System.Exception)
                                    {
                                        DynAbs.Tracing.TraceSender.TraceExitLoopByException(10899, 1, 220);
                                        throw;
                                    }
                                    finally
                                    {
                                        DynAbs.Tracing.TraceSender.TraceExitLoop(10899, 1, 220);
                                    }
                                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 30494, 30827);
                                }
                            }
                            catch (System.Exception)
                            {
                                DynAbs.Tracing.TraceSender.TraceExitLoopByException(10899, 1, 334);
                                throw;
                            }
                            finally
                            {
                                DynAbs.Tracing.TraceSender.TraceExitLoop(10899, 1, 334);
                            }
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 30304, 30846);
                        }
                        DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 30189, 30861);

                        System.Collections.Immutable.ImmutableArray<string>
                        f_10899_30409_30438(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                        this_param)
                        {
                            var return_v = this_param.NotNullWhenTrueMembers;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 30409, 30438);
                            return return_v;
                        }


                        System.Collections.Immutable.ImmutableArray<string>
                        f_10899_30441_30471(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                        this_param)
                        {
                            var return_v = this_param.NotNullWhenFalseMembers;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 30441, 30471);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                        f_10899_30608_30629(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                        this_param)
                        {
                            var return_v = this_param.ContainingType;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 30608, 30629);
                            return return_v;
                        }


                        System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>
                        f_10899_30608_30652(Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                        this_param, string
                        name)
                        {
                            var return_v = this_param.GetMembers(name);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 30608, 30652);
                            return return_v;
                        }


                        int
                        f_10899_30710_30776(Microsoft.CodeAnalysis.SyntaxNode?
                        syntaxOpt, bool
                        sense, Microsoft.CodeAnalysis.CSharp.Symbol
                        member, Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState
                        state)
                        {
                            reportMemberIfBadConditionalState(syntaxOpt, sense, member, state);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 30710, 30776);
                            return 0;
                        }


                        System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>
                        f_10899_30608_30652_I(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>
                        i)
                        {
                            var return_v = i;
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 30608, 30652);
                            return return_v;
                        }


                        System.Collections.Immutable.ImmutableArray<string>
                        f_10899_30521_30535_I(System.Collections.Immutable.ImmutableArray<string>
                        i)
                        {
                            var return_v = i;
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 30521, 30535);
                            return return_v;
                        }

                    }
                    catch
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 30189, 30861);
                        throw;
                    }
                    finally
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 30189, 30861);
                    }
                }

                void reportMemberIfBadConditionalState(SyntaxNode? syntaxOpt, bool sense, Symbol member, LocalState state)
                {
                    try
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 30877, 31392);

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 31016, 31377) || true) && (f_10899_31020_31052(member, state))
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 31016, 31377);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 31190, 31358);

                            f_10899_31190_31357(f_10899_31190_31201(), ErrorCode.WRN_MemberNotNullWhen, f_10899_31239_31263_I(DynAbs.Tracing.TraceSender.TraceConditionalAccessExpression(syntaxOpt, 10899, 31239, 31263)?.GetLocation()) ?? (DynAbs.Tracing.TraceSender.Expression_Null<Microsoft.CodeAnalysis.Location?>(10899, 31239, 31317) ?? f_10899_31267_31303(methodMainNode.Syntax).GetLocation()), f_10899_31319_31330(member), (DynAbs.Tracing.TraceSender.Conditional_F1(10899, 31332, 31337) || ((sense && DynAbs.Tracing.TraceSender.Conditional_F2(10899, 31340, 31346)) || DynAbs.Tracing.TraceSender.Conditional_F3(10899, 31349, 31356))) ? "true" : "false");
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 31016, 31377);
                        }
                        DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 30877, 31392);

                        bool
                        f_10899_31020_31052(Microsoft.CodeAnalysis.CSharp.Symbol
                        member, Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState
                        state)
                        {
                            var return_v = memberHasBadState(member, state);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 31020, 31052);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.DiagnosticBag
                        f_10899_31190_31201()
                        {
                            var return_v = Diagnostics;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 31190, 31201);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.Location?
                        f_10899_31239_31263_I(Microsoft.CodeAnalysis.Location?
                        i)
                        {
                            var return_v = i;
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 31239, 31263);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.SyntaxToken
                        f_10899_31267_31303(Microsoft.CodeAnalysis.SyntaxNode
                        this_param)
                        {
                            var return_v = this_param.GetLastToken();
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 31267, 31303);
                            return return_v;
                        }


                        string
                        f_10899_31319_31330(Microsoft.CodeAnalysis.CSharp.Symbol
                        this_param)
                        {
                            var return_v = this_param.Name;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 31319, 31330);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo
                        f_10899_31190_31357(Microsoft.CodeAnalysis.DiagnosticBag
                        diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                        code, Microsoft.CodeAnalysis.Location
                        location, params object[]
                        args)
                        {
                            var return_v = diagnostics.Add(code, location, args);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 31190, 31357);
                            return return_v;
                        }

                    }
                    catch
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 30877, 31392);
                        throw;
                    }
                    finally
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 30877, 31392);
                    }
                }

                bool memberHasBadState(Symbol member, LocalState state)
                {
                    try
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 31408, 32267);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 31496, 32219);

                        switch (f_10899_31504_31515(member))
                        {

                            case SymbolKind.Field:
                            case SymbolKind.Property:
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 31496, 32219);

                                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 31652, 32077) || true) && (f_10899_31656_31696(member) is int memberSlot && (DynAbs.Tracing.TraceSender.Expression_True(10899, 31656, 31761) && memberSlot > 0))
                                )

                                {
                                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 31652, 32077);
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 31819, 31858);

                                    var
                                    parameterState = state[memberSlot]
                                    ;
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 31888, 31923);

                                    return !f_10899_31896_31922(parameterState);
                                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 31652, 32077);
                                }

                                else

                                {
                                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 31652, 32077);
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 32037, 32050);

                                    return false;
                                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 31652, 32077);
                                }
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 31496, 32219);

                            case SymbolKind.Event:
                            case SymbolKind.Method:
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 31496, 32219);
                                DynAbs.Tracing.TraceSender.TraceBreak(10899, 32194, 32200);

                                break;
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 31496, 32219);
                        }
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 32239, 32252);

                        return false;
                        DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 31408, 32267);

                        Microsoft.CodeAnalysis.SymbolKind
                        f_10899_31504_31515(Microsoft.CodeAnalysis.CSharp.Symbol
                        this_param)
                        {
                            var return_v = this_param.Kind;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 31504, 31515);
                            return return_v;
                        }


                        int
                        f_10899_31656_31696(Microsoft.CodeAnalysis.CSharp.Symbol
                        member)
                        {
                            var return_v = getSlotForFieldOrPropertyOrEvent(member);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 31656, 31696);
                            return return_v;
                        }


                        bool
                        f_10899_31896_31922(Microsoft.CodeAnalysis.CSharp.NullableFlowState
                        state)
                        {
                            var return_v = state.IsNotNull();
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 31896, 31922);
                            return return_v;
                        }

                    }
                    catch
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 31408, 32267);
                        throw;
                    }
                    finally
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 31408, 32267);
                    }
                    throw new System.Exception("Slicer error: unreachable code");
                }

                void makeNotNullMembersMaybeNull()
                {
                    try
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 32283, 36671);

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 32350, 35661) || true) && (_symbol is MethodSymbol method)
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 32350, 35661);

                            if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 32426, 35642) || true) && (f_10899_32430_32452(method))
                            )

                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 32426, 35642);

                                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 32502, 35090) || true) && (f_10899_32506_32542())
                                )

                                {
                                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 32502, 35090);
                                    try
                                    {
                                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 32600, 35063);
                                        foreach (var member in f_10899_32623_32666_I(f_10899_32623_32666(f_10899_32623_32644(method))))
                                        {
                                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 32600, 35063);

                                            if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 32732, 32888) || true) && (f_10899_32736_32751(member) != f_10899_32755_32770(method))
                                            )

                                            {
                                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 32732, 32888);
                                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 32844, 32853);

                                                continue;
                                                DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 32732, 32888);
                                            }
                                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 32924, 32956);

                                            var
                                            memberToInitialize = member
                                            ;
                                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 32990, 34369);

                                            switch (member)
                                            {

                                                case PropertySymbol:
                                                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 32990, 34369);
                                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 33226, 33235);

                                                    continue;
                                                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 32990, 34369);

                                                case FieldSymbol { IsConst: true }:
                                                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 32990, 34369);
                                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 33350, 33359);

                                                    continue;
                                                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 32990, 34369);

                                                case FieldSymbol { AssociatedSymbol: PropertySymbol prop }:
                                                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 32990, 34369);

                                                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 33798, 33985) || true) && (f_10899_33802_33843(this, prop))
                                                    )

                                                    {
                                                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 33798, 33985);
                                                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 33933, 33942);

                                                        continue;
                                                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 33798, 33985);
                                                    }
                                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 34166, 34192);

                                                    memberToInitialize = prop;
                                                    DynAbs.Tracing.TraceSender.TraceBreak(10899, 34234, 34240);

                                                    break;
                                                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 32990, 34369);

                                                default:
                                                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 32990, 34369);
                                                    DynAbs.Tracing.TraceSender.TraceBreak(10899, 34328, 34334);

                                                    break;
                                                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 32990, 34369);
                                            }
                                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 34403, 34473);

                                            var
                                            memberSlot = f_10899_34420_34472(memberToInitialize)
                                            ;

                                            if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 34507, 35032) || true) && (memberSlot > 0)
                                            )

                                            {
                                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 34507, 35032);
                                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 34599, 34651);

                                                var
                                                type = f_10899_34610_34650(memberToInitialize)
                                                ;

                                                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 34689, 34997) || true) && (!f_10899_34694_34731(type.NullableAnnotation))
                                                )

                                                {
                                                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 34689, 34997);
                                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 34813, 34958);

                                                    this.State[memberSlot] = (DynAbs.Tracing.TraceSender.Conditional_F1(10899, 34838, 34894) || ((f_10899_34838_34894(type.Type) && DynAbs.Tracing.TraceSender.Conditional_F2(10899, 34897, 34927)) || DynAbs.Tracing.TraceSender.Conditional_F3(10899, 34930, 34957))) ? NullableFlowState.MaybeDefault : NullableFlowState.MaybeNull;
                                                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 34689, 34997);
                                                }
                                                DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 34507, 35032);
                                            }
                                            DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 32600, 35063);
                                        }
                                    }
                                    catch (System.Exception)
                                    {
                                        DynAbs.Tracing.TraceSender.TraceExitLoopByException(10899, 1, 2464);
                                        throw;
                                    }
                                    finally
                                    {
                                        DynAbs.Tracing.TraceSender.TraceExitLoop(10899, 1, 2464);
                                    }
                                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 32502, 35090);
                                }
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 32426, 35642);
                            }

                            else

                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 32426, 35642);
                                {
                                    try
                                    {
                                        do

                                        {
                                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 35188, 35619);
                                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 35247, 35299);

                                            f_10899_35247_35298(method, f_10899_35276_35297(method));
                                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 35329, 35389);

                                            f_10899_35329_35388(method, f_10899_35358_35387(method));
                                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 35419, 35480);

                                            f_10899_35419_35479(method, f_10899_35448_35478(method));
                                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 35510, 35543);

                                            method = f_10899_35519_35542(method);
                                            DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 35188, 35619);
                                        }
                                        while ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 35188, 35619) || true) && (method != null)
                                        );
                                    }
                                    catch (System.Exception)
                                    {
                                        DynAbs.Tracing.TraceSender.TraceExitLoopByException(10899, 35188, 35619);
                                        throw;
                                    }
                                    finally
                                    {
                                        DynAbs.Tracing.TraceSender.TraceExitLoop(10899, 35188, 35619);
                                    }
                                }
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 32426, 35642);
                            }
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 32350, 35661);
                        }

                        bool needsDefaultInitialStateForMembers()
                        {
                            try
                            {
                                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 35681, 36656);

                                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 35763, 35869) || true) && (_hasInitialState)
                                )

                                {
                                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 35763, 35869);
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 35833, 35846);

                                    return false;
                                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 35763, 35869);
                                }

                                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 36121, 36308) || true) && (!f_10899_36126_36164(method) && (DynAbs.Tracing.TraceSender.Expression_True(10899, 36125, 36223) && (f_10899_36169_36203_M(!f_10899_36170_36191(method).IsValueType) || (DynAbs.Tracing.TraceSender.Expression_False(10899, 36169, 36222) || f_10899_36207_36222(method)))))
                                )

                                {
                                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 36121, 36308);
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 36273, 36285);

                                    return true;
                                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 36121, 36308);
                                }
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 36363, 36637);

                                return methodMainNode is BoundConstructorMethodBody ctorBody
                                && (DynAbs.Tracing.TraceSender.Expression_True(10899, 36370, 36480) && f_10899_36452_36472(ctorBody) != null) && (DynAbs.Tracing.TraceSender.Expression_True(10899, 36370, 36562) && f_10899_36484_36532(f_10899_36484_36515(f_10899_36484_36504(ctorBody))) is MethodSymbol delegatedCtor
                                ) && (DynAbs.Tracing.TraceSender.Expression_True(10899, 36370, 36636) && f_10899_36591_36636(delegatedCtor));
                                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 35681, 36656);

                                bool
                                f_10899_36126_36164(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                                method)
                                {
                                    var return_v = method.HasThisConstructorInitializer();
                                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 36126, 36164);
                                    return return_v;
                                }


                                Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                                f_10899_36170_36191(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                                this_param)
                                {
                                    var return_v = this_param.ContainingType;
                                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 36170, 36191);
                                    return return_v;
                                }


                                bool
                                f_10899_36169_36203_M(bool
                                i)
                                {
                                    var return_v = i;
                                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 36169, 36203);
                                    return return_v;
                                }


                                bool
                                f_10899_36207_36222(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                                this_param)
                                {
                                    var return_v = this_param.IsStatic;
                                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 36207, 36222);
                                    return return_v;
                                }


                                Microsoft.CodeAnalysis.CSharp.BoundExpressionStatement?
                                f_10899_36452_36472(Microsoft.CodeAnalysis.CSharp.BoundConstructorMethodBody
                                this_param)
                                {
                                    var return_v = this_param.Initializer;
                                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 36452, 36472);
                                    return return_v;
                                }


                                Microsoft.CodeAnalysis.CSharp.BoundExpressionStatement
                                f_10899_36484_36504(Microsoft.CodeAnalysis.CSharp.BoundConstructorMethodBody
                                this_param)
                                {
                                    var return_v = this_param.Initializer;
                                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 36484, 36504);
                                    return return_v;
                                }


                                Microsoft.CodeAnalysis.CSharp.BoundExpression
                                f_10899_36484_36515(Microsoft.CodeAnalysis.CSharp.BoundExpressionStatement
                                this_param)
                                {
                                    var return_v = this_param.Expression;
                                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 36484, 36515);
                                    return return_v;
                                }


                                Microsoft.CodeAnalysis.CSharp.Symbol?
                                f_10899_36484_36532(Microsoft.CodeAnalysis.CSharp.BoundExpression
                                this_param)
                                {
                                    var return_v = this_param.ExpressionSymbol;
                                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 36484, 36532);
                                    return return_v;
                                }


                                bool
                                f_10899_36591_36636(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                                method)
                                {
                                    var return_v = method.IsDefaultValueTypeConstructor();
                                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 36591, 36636);
                                    return return_v;
                                }

                            }
                            catch
                            {
                                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 35681, 36656);
                                throw;
                            }
                            finally
                            {
                                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 35681, 36656);
                            }
                            throw new System.Exception("Slicer error: unreachable code");
                        }
                        DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 32283, 36671);

                        bool
                        f_10899_32430_32452(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                        method)
                        {
                            var return_v = method.IsConstructor();
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 32430, 32452);
                            return return_v;
                        }


                        bool
                        f_10899_32506_32542()
                        {
                            var return_v = needsDefaultInitialStateForMembers();
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 32506, 32542);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                        f_10899_32623_32644(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                        this_param)
                        {
                            var return_v = this_param.ContainingType;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 32623, 32644);
                            return return_v;
                        }


                        System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>
                        f_10899_32623_32666(Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                        this_param)
                        {
                            var return_v = this_param.GetMembersUnordered();
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 32623, 32666);
                            return return_v;
                        }


                        bool
                        f_10899_32736_32751(Microsoft.CodeAnalysis.CSharp.Symbol
                        this_param)
                        {
                            var return_v = this_param.IsStatic;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 32736, 32751);
                            return return_v;
                        }


                        bool
                        f_10899_32755_32770(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                        this_param)
                        {
                            var return_v = this_param.IsStatic;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 32755, 32770);
                            return return_v;
                        }


                        bool
                        f_10899_33802_33843(Microsoft.CodeAnalysis.CSharp.NullableWalker
                        this_param, Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol
                        property)
                        {
                            var return_v = this_param.IsPropertyOutputMoreStrictThanInput(property);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 33802, 33843);
                            return return_v;
                        }


                        int
                        f_10899_34420_34472(Microsoft.CodeAnalysis.CSharp.Symbol
                        member)
                        {
                            var return_v = getSlotForFieldOrPropertyOrEvent(member);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 34420, 34472);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                        f_10899_34610_34650(Microsoft.CodeAnalysis.CSharp.Symbol
                        symbol)
                        {
                            var return_v = symbol.GetTypeOrReturnType();
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 34610, 34650);
                            return return_v;
                        }


                        bool
                        f_10899_34694_34731(Microsoft.CodeAnalysis.CSharp.NullableAnnotation
                        annotation)
                        {
                            var return_v = annotation.IsOblivious();
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 34694, 34731);
                            return return_v;
                        }


                        bool
                        f_10899_34838_34894(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                        type)
                        {
                            var return_v = type.IsPossiblyNullableReferenceTypeTypeParameter();
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 34838, 34894);
                            return return_v;
                        }


                        System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>
                        f_10899_32623_32666_I(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>
                        i)
                        {
                            var return_v = i;
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 32623, 32666);
                            return return_v;
                        }


                        System.Collections.Immutable.ImmutableArray<string>
                        f_10899_35276_35297(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                        this_param)
                        {
                            var return_v = this_param.NotNullMembers;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 35276, 35297);
                            return return_v;
                        }


                        int
                        f_10899_35247_35298(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                        method, System.Collections.Immutable.ImmutableArray<string>
                        members)
                        {
                            makeMembersMaybeNull(method, members);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 35247, 35298);
                            return 0;
                        }


                        System.Collections.Immutable.ImmutableArray<string>
                        f_10899_35358_35387(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                        this_param)
                        {
                            var return_v = this_param.NotNullWhenTrueMembers;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 35358, 35387);
                            return return_v;
                        }


                        int
                        f_10899_35329_35388(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                        method, System.Collections.Immutable.ImmutableArray<string>
                        members)
                        {
                            makeMembersMaybeNull(method, members);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 35329, 35388);
                            return 0;
                        }


                        System.Collections.Immutable.ImmutableArray<string>
                        f_10899_35448_35478(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                        this_param)
                        {
                            var return_v = this_param.NotNullWhenFalseMembers;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 35448, 35478);
                            return return_v;
                        }


                        int
                        f_10899_35419_35479(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                        method, System.Collections.Immutable.ImmutableArray<string>
                        members)
                        {
                            makeMembersMaybeNull(method, members);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 35419, 35479);
                            return 0;
                        }


                        Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                        f_10899_35519_35542(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                        this_param)
                        {
                            var return_v = this_param.OverriddenMethod;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 35519, 35542);
                            return return_v;
                        }

                    }
                    catch
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 32283, 36671);
                        throw;
                    }
                    finally
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 32283, 36671);
                    }
                }

                void makeMembersMaybeNull(MethodSymbol method, ImmutableArray<string> members)
                {
                    try
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 36687, 36948);
                        try
                        {
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 36798, 36933);
                            foreach (var memberName in f_10899_36825_36832_I(members))
                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 36798, 36933);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 36874, 36914);

                                f_10899_36874_36913(method, memberName);
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 36798, 36933);
                            }
                        }
                        catch (System.Exception)
                        {
                            DynAbs.Tracing.TraceSender.TraceExitLoopByException(10899, 1, 136);
                            throw;
                        }
                        finally
                        {
                            DynAbs.Tracing.TraceSender.TraceExitLoop(10899, 1, 136);
                        }
                        DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 36687, 36948);

                        int
                        f_10899_36874_36913(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                        method, string
                        memberName)
                        {
                            makeMemberMaybeNull(method, memberName);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 36874, 36913);
                            return 0;
                        }


                        System.Collections.Immutable.ImmutableArray<string>
                        f_10899_36825_36832_I(System.Collections.Immutable.ImmutableArray<string>
                        i)
                        {
                            var return_v = i;
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 36825, 36832);
                            return return_v;
                        }

                    }
                    catch
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 36687, 36948);
                        throw;
                    }
                    finally
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 36687, 36948);
                    }
                }

                void makeMemberMaybeNull(MethodSymbol method, string memberName)
                {
                    try
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 36964, 37469);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 37061, 37094);

                        var
                        type = f_10899_37072_37093(method)
                        ;
                        try
                        {
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 37112, 37454);
                            foreach (var member in f_10899_37135_37162_I(f_10899_37135_37162(type, memberName)))
                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 37112, 37454);

                                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 37204, 37435) || true) && (f_10899_37208_37248(member) is int memberSlot && (DynAbs.Tracing.TraceSender.Expression_True(10899, 37208, 37309) && memberSlot > 0))
                                )

                                {
                                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 37204, 37435);
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 37359, 37412);

                                    this.State[memberSlot] = NullableFlowState.MaybeNull;
                                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 37204, 37435);
                                }
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 37112, 37454);
                            }
                        }
                        catch (System.Exception)
                        {
                            DynAbs.Tracing.TraceSender.TraceExitLoopByException(10899, 1, 343);
                            throw;
                        }
                        finally
                        {
                            DynAbs.Tracing.TraceSender.TraceExitLoop(10899, 1, 343);
                        }
                        DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 36964, 37469);

                        Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                        f_10899_37072_37093(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                        this_param)
                        {
                            var return_v = this_param.ContainingType;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 37072, 37093);
                            return return_v;
                        }


                        System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>
                        f_10899_37135_37162(Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                        this_param, string
                        name)
                        {
                            var return_v = this_param.GetMembers(name);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 37135, 37162);
                            return return_v;
                        }


                        int
                        f_10899_37208_37248(Microsoft.CodeAnalysis.CSharp.Symbol
                        member)
                        {
                            var return_v = getSlotForFieldOrPropertyOrEvent(member);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 37208, 37248);
                            return return_v;
                        }


                        System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>
                        f_10899_37135_37162_I(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>
                        i)
                        {
                            var return_v = i;
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 37135, 37162);
                            return return_v;
                        }

                    }
                    catch
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 36964, 37469);
                        throw;
                    }
                    finally
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 36964, 37469);
                    }
                }

                void enforceNotNullWhenForPendingReturn(PendingBranch pendingReturn, BoundReturnStatement returnStatement)
                {
                    try
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 37485, 39637);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 37624, 37663);

                        var
                        parameters = f_10899_37641_37662(this)
                        ;

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 37683, 39622) || true) && (f_10899_37687_37706_M(!parameters.IsEmpty))
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 37683, 39622);

                            if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 37748, 39603) || true) && (pendingReturn.IsConditionalState)
                            )

                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 37748, 39603);

                                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 37834, 38167) || true) && (f_10899_37838_37867(returnStatement) is { ConstantValue: { IsBoolean: true, BooleanValue: bool value } })
                                )

                                {
                                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 37834, 38167);
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 37993, 38103);

                                    f_10899_37993_38102(returnStatement.Syntax, parameters, sense: value, stateWhen: pendingReturn.State);
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 38133, 38140);

                                    return;
                                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 37834, 38167);
                                }

                                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 38195, 38372) || true) && (f_10899_38199_38237_M(!pendingReturn.StateWhenTrue.Reachable) || (DynAbs.Tracing.TraceSender.Expression_False(10899, 38199, 38280) || f_10899_38241_38280_M(!pendingReturn.StateWhenFalse.Reachable)))
                                )

                                {
                                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 38195, 38372);
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 38338, 38345);

                                    return;
                                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 38195, 38372);
                                }
                                try
                                {
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 38400, 39180);
                                    foreach (var parameter in f_10899_38426_38436_I(parameters))
                                    {
                                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 38400, 39180);

                                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 38645, 39153) || true) && (f_10899_38649_38675(this, parameter) is > 0 and var slot && (DynAbs.Tracing.TraceSender.Expression_True(10899, 38649, 38770) && pendingReturn.StateWhenTrue[slot] != pendingReturn.StateWhenFalse[slot]))
                                        )

                                        {
                                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 38645, 39153);
                                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 38836, 38961);

                                            f_10899_38836_38960(returnStatement.Syntax, parameter, sense: true, stateWhen: pendingReturn.StateWhenTrue);
                                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 38995, 39122);

                                            f_10899_38995_39121(returnStatement.Syntax, parameter, sense: false, stateWhen: pendingReturn.StateWhenFalse);
                                            DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 38645, 39153);
                                        }
                                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 38400, 39180);
                                    }
                                }
                                catch (System.Exception)
                                {
                                    DynAbs.Tracing.TraceSender.TraceExitLoopByException(10899, 1, 781);
                                    throw;
                                }
                                finally
                                {
                                    DynAbs.Tracing.TraceSender.TraceExitLoop(10899, 1, 781);
                                }
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 37748, 39603);
                            }

                            else
                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 37748, 39603);

                                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 39230, 39603) || true) && (f_10899_39234_39263(returnStatement) is { ConstantValue: { IsBoolean: true, BooleanValue: bool value } })
                                )

                                {
                                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 39230, 39603);
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 39437, 39547);

                                    f_10899_39437_39546(returnStatement.Syntax, parameters, sense: value, stateWhen: pendingReturn.State);
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 39573, 39580);

                                    return;
                                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 39230, 39603);
                                }
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 37748, 39603);
                            }
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 37683, 39622);
                        }
                        DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 37485, 39637);

                        System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol>
                        f_10899_37641_37662(Microsoft.CodeAnalysis.CSharp.NullableWalker
                        this_param)
                        {
                            var return_v = this_param.MethodParameters;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 37641, 37662);
                            return return_v;
                        }


                        bool
                        f_10899_37687_37706_M(bool
                        i)
                        {
                            var return_v = i;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 37687, 37706);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.CSharp.BoundExpression?
                        f_10899_37838_37867(Microsoft.CodeAnalysis.CSharp.BoundReturnStatement
                        this_param)
                        {
                            var return_v = this_param.ExpressionOpt;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 37838, 37867);
                            return return_v;
                        }


                        int
                        f_10899_37993_38102(Microsoft.CodeAnalysis.SyntaxNode
                        syntax, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol>
                        parameters, bool
                        sense, Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState
                        stateWhen)
                        {
                            enforceParameterNotNullWhen(syntax, parameters, sense: sense, stateWhen: stateWhen);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 37993, 38102);
                            return 0;
                        }


                        bool
                        f_10899_38199_38237_M(bool
                        i)
                        {
                            var return_v = i;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 38199, 38237);
                            return return_v;
                        }


                        bool
                        f_10899_38241_38280_M(bool
                        i)
                        {
                            var return_v = i;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 38241, 38280);
                            return return_v;
                        }


                        int
                        f_10899_38649_38675(Microsoft.CodeAnalysis.CSharp.NullableWalker
                        this_param, Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol
                        symbol)
                        {
                            var return_v = this_param.GetOrCreateSlot((Microsoft.CodeAnalysis.CSharp.Symbol)symbol);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 38649, 38675);
                            return return_v;
                        }


                        int
                        f_10899_38836_38960(Microsoft.CodeAnalysis.SyntaxNode
                        syntax, Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol
                        parameter, bool
                        sense, Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState
                        stateWhen)
                        {
                            reportParameterIfBadConditionalState(syntax, parameter, sense: sense, stateWhen: stateWhen);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 38836, 38960);
                            return 0;
                        }


                        int
                        f_10899_38995_39121(Microsoft.CodeAnalysis.SyntaxNode
                        syntax, Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol
                        parameter, bool
                        sense, Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState
                        stateWhen)
                        {
                            reportParameterIfBadConditionalState(syntax, parameter, sense: sense, stateWhen: stateWhen);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 38995, 39121);
                            return 0;
                        }


                        System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol>
                        f_10899_38426_38436_I(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol>
                        i)
                        {
                            var return_v = i;
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 38426, 38436);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.CSharp.BoundExpression?
                        f_10899_39234_39263(Microsoft.CodeAnalysis.CSharp.BoundReturnStatement
                        this_param)
                        {
                            var return_v = this_param.ExpressionOpt;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 39234, 39263);
                            return return_v;
                        }


                        int
                        f_10899_39437_39546(Microsoft.CodeAnalysis.SyntaxNode
                        syntax, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol>
                        parameters, bool
                        sense, Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState
                        stateWhen)
                        {
                            enforceParameterNotNullWhen(syntax, parameters, sense: sense, stateWhen: stateWhen);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 39437, 39546);
                            return 0;
                        }

                    }
                    catch
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 37485, 39637);
                        throw;
                    }
                    finally
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 37485, 39637);
                    }
                }

                void reportParameterIfBadConditionalState(SyntaxNode syntax, ParameterSymbol parameter, bool sense, LocalState stateWhen)
                {
                    try
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 39653, 40172);

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 39807, 40157) || true) && (f_10899_39811_39871(parameter, sense, stateWhen))
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 39807, 40157);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 40012, 40138);

                            f_10899_40012_40137(f_10899_40012_40023(), ErrorCode.WRN_ParameterConditionallyDisallowsNull, f_10899_40079_40094(syntax), f_10899_40096_40110(parameter), (DynAbs.Tracing.TraceSender.Conditional_F1(10899, 40112, 40117) || ((sense && DynAbs.Tracing.TraceSender.Conditional_F2(10899, 40120, 40126)) || DynAbs.Tracing.TraceSender.Conditional_F3(10899, 40129, 40136))) ? "true" : "false");
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 39807, 40157);
                        }
                        DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 39653, 40172);

                        bool
                        f_10899_39811_39871(Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol
                        parameter, bool
                        sense, Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState
                        stateWhen)
                        {
                            var return_v = parameterHasBadConditionalState(parameter, sense, stateWhen);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 39811, 39871);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.DiagnosticBag
                        f_10899_40012_40023()
                        {
                            var return_v = Diagnostics;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 40012, 40023);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.Location
                        f_10899_40079_40094(Microsoft.CodeAnalysis.SyntaxNode
                        this_param)
                        {
                            var return_v = this_param.Location;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 40079, 40094);
                            return return_v;
                        }


                        string
                        f_10899_40096_40110(Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol
                        this_param)
                        {
                            var return_v = this_param.Name;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 40096, 40110);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo
                        f_10899_40012_40137(Microsoft.CodeAnalysis.DiagnosticBag
                        diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                        code, Microsoft.CodeAnalysis.Location
                        location, params object[]
                        args)
                        {
                            var return_v = diagnostics.Add(code, location, args);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 40012, 40137);
                            return return_v;
                        }

                    }
                    catch
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 39653, 40172);
                        throw;
                    }
                    finally
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 39653, 40172);
                    }
                }

                void enforceNotNull(SyntaxNode? syntaxOpt, LocalState state)
                {
                    try
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 40188, 41524);

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 40281, 40369) || true) && (f_10899_40285_40301_M(!state.Reachable))
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 40281, 40369);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 40343, 40350);

                            return;
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 40281, 40369);
                        }
                        try
                        {
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 40389, 41509);
                            foreach (var parameter in f_10899_40415_40436_I(f_10899_40415_40436(this)))
                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 40389, 41509);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 40478, 40516);

                                var
                                slot = f_10899_40489_40515(this, parameter)
                                ;

                                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 40538, 40633) || true) && (slot <= 0)
                                )

                                {
                                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 40538, 40633);
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 40601, 40610);

                                    continue;
                                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 40538, 40633);
                                }
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 40657, 40709);

                                var
                                annotations = f_10899_40675_40708(parameter)
                                ;
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 40731, 40831);

                                var
                                hasNotNull = (annotations & FlowAnalysisAnnotations.NotNull) == FlowAnalysisAnnotations.NotNull
                                ;
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 40853, 40886);

                                var
                                parameterState = state[slot]
                                ;

                                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 40908, 41490) || true) && (hasNotNull && (DynAbs.Tracing.TraceSender.Expression_True(10899, 40912, 40952) && f_10899_40926_40952(parameterState)))
                                )

                                {
                                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 40908, 41490);
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 41090, 41240);

                                    f_10899_41090_41239(f_10899_41090_41101(), ErrorCode.WRN_ParameterDisallowsNull, f_10899_41144_41168_I(DynAbs.Tracing.TraceSender.TraceConditionalAccessExpression(syntaxOpt, 10899, 41144, 41168)?.GetLocation()) ?? (DynAbs.Tracing.TraceSender.Expression_Null<Microsoft.CodeAnalysis.Location?>(10899, 41144, 41222) ?? f_10899_41172_41208(methodMainNode.Syntax).GetLocation()), f_10899_41224_41238(parameter));
                                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 40908, 41490);
                                }

                                else

                                {
                                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 40908, 41490);
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 41338, 41467);

                                    f_10899_41338_41466(this, syntaxOpt, state, f_10899_41380_41401(this), f_10899_41403_41438(parameter), parameterState, parameter);
                                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 40908, 41490);
                                }
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 40389, 41509);
                            }
                        }
                        catch (System.Exception)
                        {
                            DynAbs.Tracing.TraceSender.TraceExitLoopByException(10899, 1, 1121);
                            throw;
                        }
                        finally
                        {
                            DynAbs.Tracing.TraceSender.TraceExitLoop(10899, 1, 1121);
                        }
                        DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 40188, 41524);

                        bool
                        f_10899_40285_40301_M(bool
                        i)
                        {
                            var return_v = i;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 40285, 40301);
                            return return_v;
                        }


                        System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol>
                        f_10899_40415_40436(Microsoft.CodeAnalysis.CSharp.NullableWalker
                        this_param)
                        {
                            var return_v = this_param.MethodParameters;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 40415, 40436);
                            return return_v;
                        }


                        int
                        f_10899_40489_40515(Microsoft.CodeAnalysis.CSharp.NullableWalker
                        this_param, Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol
                        symbol)
                        {
                            var return_v = this_param.GetOrCreateSlot((Microsoft.CodeAnalysis.CSharp.Symbol)symbol);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 40489, 40515);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.CSharp.Symbols.FlowAnalysisAnnotations
                        f_10899_40675_40708(Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol
                        this_param)
                        {
                            var return_v = this_param.FlowAnalysisAnnotations;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 40675, 40708);
                            return return_v;
                        }


                        bool
                        f_10899_40926_40952(Microsoft.CodeAnalysis.CSharp.NullableFlowState
                        state)
                        {
                            var return_v = state.MayBeNull();
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 40926, 40952);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.DiagnosticBag
                        f_10899_41090_41101()
                        {
                            var return_v = Diagnostics;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 41090, 41101);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.Location?
                        f_10899_41144_41168_I(Microsoft.CodeAnalysis.Location?
                        i)
                        {
                            var return_v = i;
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 41144, 41168);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.SyntaxToken
                        f_10899_41172_41208(Microsoft.CodeAnalysis.SyntaxNode
                        this_param)
                        {
                            var return_v = this_param.GetLastToken();
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 41172, 41208);
                            return return_v;
                        }


                        string
                        f_10899_41224_41238(Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol
                        this_param)
                        {
                            var return_v = this_param.Name;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 41224, 41238);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo
                        f_10899_41090_41239(Microsoft.CodeAnalysis.DiagnosticBag
                        diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                        code, Microsoft.CodeAnalysis.Location
                        location, params object[]
                        args)
                        {
                            var return_v = diagnostics.Add(code, location, args);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 41090, 41239);
                            return return_v;
                        }


                        System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol>
                        f_10899_41380_41401(Microsoft.CodeAnalysis.CSharp.NullableWalker
                        this_param)
                        {
                            var return_v = this_param.MethodParameters;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 41380, 41401);
                            return return_v;
                        }


                        System.Collections.Immutable.ImmutableHashSet<string>
                        f_10899_41403_41438(Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol
                        this_param)
                        {
                            var return_v = this_param.NotNullIfParameterNotNull;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 41403, 41438);
                            return return_v;
                        }


                        int
                        f_10899_41338_41466(Microsoft.CodeAnalysis.CSharp.NullableWalker
                        this_param, Microsoft.CodeAnalysis.SyntaxNode?
                        syntaxOpt, Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState
                        state, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol>
                        parameters, System.Collections.Immutable.ImmutableHashSet<string>
                        inputParamNames, Microsoft.CodeAnalysis.CSharp.NullableFlowState
                        outputState, Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol
                        outputParam)
                        {
                            this_param.EnforceNotNullIfNotNull(syntaxOpt, state, parameters, inputParamNames, outputState, outputParam);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 41338, 41466);
                            return 0;
                        }


                        System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol>
                        f_10899_40415_40436_I(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol>
                        i)
                        {
                            var return_v = i;
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 40415, 40436);
                            return return_v;
                        }

                    }
                    catch
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 40188, 41524);
                        throw;
                    }
                    finally
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 40188, 41524);
                    }
                }

                void enforceParameterNotNullWhen(SyntaxNode syntax, ImmutableArray<ParameterSymbol> parameters, bool sense, LocalState stateWhen)
                {
                    try
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 41540, 42000);

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 41702, 41794) || true) && (f_10899_41706_41726_M(!stateWhen.Reachable))
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 41702, 41794);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 41768, 41775);

                            return;
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 41702, 41794);
                        }
                        try
                        {
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 41814, 41985);
                            foreach (var parameter in f_10899_41840_41850_I(parameters))
                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 41814, 41985);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 41892, 41966);

                                f_10899_41892_41965(syntax, parameter, sense, stateWhen);
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 41814, 41985);
                            }
                        }
                        catch (System.Exception)
                        {
                            DynAbs.Tracing.TraceSender.TraceExitLoopByException(10899, 1, 172);
                            throw;
                        }
                        finally
                        {
                            DynAbs.Tracing.TraceSender.TraceExitLoop(10899, 1, 172);
                        }
                        DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 41540, 42000);

                        bool
                        f_10899_41706_41726_M(bool
                        i)
                        {
                            var return_v = i;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 41706, 41726);
                            return return_v;
                        }


                        int
                        f_10899_41892_41965(Microsoft.CodeAnalysis.SyntaxNode
                        syntax, Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol
                        parameter, bool
                        sense, Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState
                        stateWhen)
                        {
                            reportParameterIfBadConditionalState(syntax, parameter, sense, stateWhen);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 41892, 41965);
                            return 0;
                        }


                        System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol>
                        f_10899_41840_41850_I(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol>
                        i)
                        {
                            var return_v = i;
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 41840, 41850);
                            return return_v;
                        }

                    }
                    catch
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 41540, 42000);
                        throw;
                    }
                    finally
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 41540, 42000);
                    }
                }

                bool parameterHasBadConditionalState(ParameterSymbol parameter, bool sense, LocalState stateWhen)
                {
                    try
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 42016, 44076);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 42146, 42178);

                        var
                        refKind = f_10899_42160_42177(parameter)
                        ;

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 42196, 42322) || true) && (refKind != RefKind.Out && (DynAbs.Tracing.TraceSender.Expression_True(10899, 42200, 42248) && refKind != RefKind.Ref))
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 42196, 42322);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 42290, 42303);

                            return false;
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 42196, 42322);
                        }
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 42342, 42380);

                        var
                        slot = f_10899_42353_42379(this, parameter)
                        ;

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 42398, 44028) || true) && (slot > 0)
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 42398, 44028);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 42452, 42489);

                            var
                            parameterState = stateWhen[slot]
                            ;
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 42753, 42825);

                            FlowAnalysisAnnotations
                            annotations = f_10899_42791_42824(parameter)
                            ;

                            if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 42847, 44009) || true) && (sense)
                            )

                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 42847, 44009);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 42906, 43023);

                                bool
                                hasNotNullWhenTrue = (annotations & FlowAnalysisAnnotations.NotNull) == FlowAnalysisAnnotations.NotNullWhenTrue
                                ;
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 43049, 43174);

                                bool
                                hasMaybeNullWhenFalse = (annotations & FlowAnalysisAnnotations.MaybeNull) == FlowAnalysisAnnotations.MaybeNullWhenFalse
                                ;
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 43202, 43397);

                                return (hasNotNullWhenTrue && (DynAbs.Tracing.TraceSender.Expression_True(10899, 43210, 43258) && f_10899_43232_43258(parameterState))) || (DynAbs.Tracing.TraceSender.Expression_False(10899, 43209, 43396) || (hasMaybeNullWhenFalse && (DynAbs.Tracing.TraceSender.Expression_True(10899, 43293, 43395) && f_10899_43318_43395(f_10899_43349_43378(parameter), parameterState))));
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 42847, 44009);
                            }

                            else

                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 42847, 44009);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 43495, 43614);

                                bool
                                hasNotNullWhenFalse = (annotations & FlowAnalysisAnnotations.NotNull) == FlowAnalysisAnnotations.NotNullWhenFalse
                                ;
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 43640, 43763);

                                bool
                                hasMaybeNullWhenTrue = (annotations & FlowAnalysisAnnotations.MaybeNull) == FlowAnalysisAnnotations.MaybeNullWhenTrue
                                ;
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 43791, 43986);

                                return (hasNotNullWhenFalse && (DynAbs.Tracing.TraceSender.Expression_True(10899, 43799, 43848) && f_10899_43822_43848(parameterState))) || (DynAbs.Tracing.TraceSender.Expression_False(10899, 43798, 43985) || (hasMaybeNullWhenTrue && (DynAbs.Tracing.TraceSender.Expression_True(10899, 43883, 43984) && f_10899_43907_43984(f_10899_43938_43967(parameter), parameterState))));
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 42847, 44009);
                            }
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 42398, 44028);
                        }
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 44048, 44061);

                        return false;
                        DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 42016, 44076);

                        Microsoft.CodeAnalysis.RefKind
                        f_10899_42160_42177(Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol
                        this_param)
                        {
                            var return_v = this_param.RefKind;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 42160, 42177);
                            return return_v;
                        }


                        int
                        f_10899_42353_42379(Microsoft.CodeAnalysis.CSharp.NullableWalker
                        this_param, Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol
                        symbol)
                        {
                            var return_v = this_param.GetOrCreateSlot((Microsoft.CodeAnalysis.CSharp.Symbol)symbol);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 42353, 42379);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.CSharp.Symbols.FlowAnalysisAnnotations
                        f_10899_42791_42824(Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol
                        this_param)
                        {
                            var return_v = this_param.FlowAnalysisAnnotations;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 42791, 42824);
                            return return_v;
                        }


                        bool
                        f_10899_43232_43258(Microsoft.CodeAnalysis.CSharp.NullableFlowState
                        state)
                        {
                            var return_v = state.MayBeNull();
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 43232, 43258);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                        f_10899_43349_43378(Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol
                        this_param)
                        {
                            var return_v = this_param.TypeWithAnnotations;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 43349, 43378);
                            return return_v;
                        }


                        bool
                        f_10899_43318_43395(Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                        type, Microsoft.CodeAnalysis.CSharp.NullableFlowState
                        state)
                        {
                            var return_v = ShouldReportNullableAssignment(type, state);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 43318, 43395);
                            return return_v;
                        }


                        bool
                        f_10899_43822_43848(Microsoft.CodeAnalysis.CSharp.NullableFlowState
                        state)
                        {
                            var return_v = state.MayBeNull();
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 43822, 43848);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                        f_10899_43938_43967(Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol
                        this_param)
                        {
                            var return_v = this_param.TypeWithAnnotations;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 43938, 43967);
                            return return_v;
                        }


                        bool
                        f_10899_43907_43984(Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                        type, Microsoft.CodeAnalysis.CSharp.NullableFlowState
                        state)
                        {
                            var return_v = ShouldReportNullableAssignment(type, state);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 43907, 43984);
                            return return_v;
                        }

                    }
                    catch
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 42016, 44076);
                        throw;
                    }
                    finally
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 42016, 44076);
                    }
                    throw new System.Exception("Slicer error: unreachable code");
                }

                int getSlotForFieldOrPropertyOrEvent(Symbol member)
                {
                    try
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 44092, 44993);

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 44176, 44397) || true) && (f_10899_44180_44191(member) != SymbolKind.Field && (DynAbs.Tracing.TraceSender.Expression_True(10899, 44180, 44270) && f_10899_44236_44247(member) != SymbolKind.Property) && (DynAbs.Tracing.TraceSender.Expression_True(10899, 44180, 44326) && f_10899_44295_44306(member) != SymbolKind.Event))
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 44176, 44397);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 44368, 44378);

                            return -1;
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 44176, 44397);
                        }
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 44417, 44440);

                        int
                        containingSlot = 0
                        ;

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 44458, 44911) || true) && (f_10899_44462_44478_M(!member.IsStatic))
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 44458, 44911);

                            if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 44520, 44634) || true) && (f_10899_44524_44543() is null)
                            )

                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 44520, 44634);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 44601, 44611);

                                return -1;
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 44520, 44634);
                            }
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 44656, 44710);

                            containingSlot = f_10899_44673_44709(this, f_10899_44689_44708());

                            if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 44732, 44837) || true) && (containingSlot < 0)
                            )

                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 44732, 44837);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 44804, 44814);

                                return -1;
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 44732, 44837);
                            }
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 44859, 44892);

                            f_10899_44859_44891(containingSlot > 0);
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 44458, 44911);
                        }
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 44931, 44978);

                        return f_10899_44938_44977(this, member, containingSlot);
                        DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 44092, 44993);

                        Microsoft.CodeAnalysis.SymbolKind
                        f_10899_44180_44191(Microsoft.CodeAnalysis.CSharp.Symbol
                        this_param)
                        {
                            var return_v = this_param.Kind;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 44180, 44191);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.SymbolKind
                        f_10899_44236_44247(Microsoft.CodeAnalysis.CSharp.Symbol
                        this_param)
                        {
                            var return_v = this_param.Kind;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 44236, 44247);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.SymbolKind
                        f_10899_44295_44306(Microsoft.CodeAnalysis.CSharp.Symbol
                        this_param)
                        {
                            var return_v = this_param.Kind;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 44295, 44306);
                            return return_v;
                        }


                        bool
                        f_10899_44462_44478_M(bool
                        i)
                        {
                            var return_v = i;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 44462, 44478);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol?
                        f_10899_44524_44543()
                        {
                            var return_v = MethodThisParameter;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 44524, 44543);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol
                        f_10899_44689_44708()
                        {
                            var return_v = MethodThisParameter;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 44689, 44708);
                            return return_v;
                        }


                        int
                        f_10899_44673_44709(Microsoft.CodeAnalysis.CSharp.NullableWalker
                        this_param, Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol
                        symbol)
                        {
                            var return_v = this_param.GetOrCreateSlot((Microsoft.CodeAnalysis.CSharp.Symbol)symbol);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 44673, 44709);
                            return return_v;
                        }


                        int
                        f_10899_44859_44891(bool
                        condition)
                        {
                            Debug.Assert(condition);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 44859, 44891);
                            return 0;
                        }


                        int
                        f_10899_44938_44977(Microsoft.CodeAnalysis.CSharp.NullableWalker
                        this_param, Microsoft.CodeAnalysis.CSharp.Symbol
                        symbol, int
                        containingSlot)
                        {
                            var return_v = this_param.GetOrCreateSlot(symbol, containingSlot);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 44938, 44977);
                            return return_v;
                        }

                    }
                    catch
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 44092, 44993);
                        throw;
                    }
                    finally
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 44092, 44993);
                    }
                    throw new System.Exception("Slicer error: unreachable code");
                }
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 19725, 45004);

                int
                f_10899_19884_19907(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<(Microsoft.CodeAnalysis.CSharp.BoundReturnStatement, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations)>
                this_param)
                {
                    this_param.Clear();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 19884, 19907);
                    return 0;
                }


                Microsoft.CodeAnalysis.DiagnosticBag
                f_10899_19937_19953(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param)
                {
                    var return_v = this_param.Diagnostics;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 19937, 19953);
                    return return_v;
                }


                int
                f_10899_19937_19961(Microsoft.CodeAnalysis.DiagnosticBag
                this_param)
                {
                    this_param.Clear();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 19937, 19961);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol
                f_10899_20119_20138()
                {
                    var return_v = MethodThisParameter;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 20119, 20138);
                    return return_v;
                }


                int
                f_10899_20157_20174(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param)
                {
                    this_param.EnterParameters();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 20157, 20174);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                f_10899_20325_20364(Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol
                this_param)
                {
                    var return_v = this_param.TypeWithAnnotations;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 20325, 20364);
                    return return_v;
                }


                int
                f_10899_20289_20365(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol
                parameter, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                parameterType)
                {
                    this_param.EnterParameter(parameter, parameterType);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 20289, 20365);
                    return 0;
                }


                int
                f_10899_20405_20434()
                {
                    makeNotNullMembersMaybeNull();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 20405, 20434);
                    return 0;
                }


                bool
                f_10899_20864_20884(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                method)
                {
                    var return_v = method.IsConstructor();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 20864, 20884);
                    return return_v;
                }


                int
                f_10899_20957_20994(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.SyntaxNode?
                syntaxOpt)
                {
                    this_param.EnforceDoesNotReturn(syntaxOpt: syntaxOpt);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 20957, 20994);
                    return 0;
                }


                int
                f_10899_21013_21062(Microsoft.CodeAnalysis.SyntaxNode?
                syntaxOpt, Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState
                state)
                {
                    enforceMemberNotNull(syntaxOpt: syntaxOpt, state);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 21013, 21062);
                    return 0;
                }


                int
                f_10899_21081_21113(Microsoft.CodeAnalysis.SyntaxNode?
                syntaxOpt, Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState
                state)
                {
                    enforceNotNull(syntaxOpt, state);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 21081, 21113);
                    return 0;
                }


                int
                f_10899_21220_21301(Microsoft.CodeAnalysis.SyntaxNode
                syntaxOpt, Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState
                state)
                {
                    enforceMemberNotNull(syntaxOpt: syntaxOpt, state);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 21220, 21301);
                    return 0;
                }


                int
                f_10899_21440_21499(Microsoft.CodeAnalysis.SyntaxNode
                syntaxOpt, Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState
                state)
                {
                    enforceNotNull(syntaxOpt, state);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 21440, 21499);
                    return 0;
                }


                int
                f_10899_21526_21592(Microsoft.CodeAnalysis.CSharp.AbstractFlowPass<Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState, Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalFunctionState>.PendingBranch
                pendingReturn, Microsoft.CodeAnalysis.CSharp.BoundReturnStatement
                returnStatement)
                {
                    enforceNotNullWhenForPendingReturn(pendingReturn, returnStatement);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 21526, 21592);
                    return 0;
                }


                int
                f_10899_21619_21691(Microsoft.CodeAnalysis.CSharp.AbstractFlowPass<Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState, Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalFunctionState>.PendingBranch
                pendingReturn, Microsoft.CodeAnalysis.CSharp.BoundReturnStatement
                returnStatement)
                {
                    enforceMemberNotNullWhenForPendingReturn(pendingReturn, returnStatement);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 21619, 21691);
                    return 0;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.AbstractFlowPass<Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState, Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalFunctionState>.PendingBranch>
                f_10899_21164_21178_I(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.AbstractFlowPass<Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState, Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalFunctionState>.PendingBranch>
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 21164, 21178);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 19725, 45004);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 19725, 45004);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private void EnforceNotNullIfNotNull(SyntaxNode? syntaxOpt, LocalState state, ImmutableArray<ParameterSymbol> parameters, ImmutableHashSet<string> inputParamNames, NullableFlowState outputState, ParameterSymbol? outputParam)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 45016, 46517);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 45265, 45375) || true) && (f_10899_45269_45292(inputParamNames) || (DynAbs.Tracing.TraceSender.Expression_False(10899, 45269, 45319) || f_10899_45296_45319(outputState)))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 45265, 45375);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 45353, 45360);

                    return;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 45265, 45375);
                }
                try
                {
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 45391, 46506);
                    foreach (var inputParam in f_10899_45418_45428_I(parameters))
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 45391, 46506);

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 45462, 46491) || true) && (f_10899_45466_45507(inputParamNames, f_10899_45491_45506(inputParam)) && (DynAbs.Tracing.TraceSender.Expression_True(10899, 45466, 45584) && f_10899_45532_45559(this, inputParam) is > 0 and int inputSlot
                        ) && (DynAbs.Tracing.TraceSender.Expression_True(10899, 45466, 45637) && f_10899_45609_45637(state[inputSlot])))
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 45462, 46491);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 45679, 45773);

                            var
                            location = f_10899_45694_45718_I(DynAbs.Tracing.TraceSender.TraceConditionalAccessExpression(syntaxOpt, 10899, 45694, 45718)?.GetLocation()) ?? (DynAbs.Tracing.TraceSender.Expression_Null<Microsoft.CodeAnalysis.Location?>(10899, 45694, 45772) ?? f_10899_45722_45758(methodMainNode.Syntax).GetLocation())
                            ;

                            if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 45795, 46444) || true) && (outputParam is object)
                            )

                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 45795, 46444);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 45991, 46093);

                                f_10899_45991_46092(f_10899_45991_46002(), ErrorCode.WRN_ParameterNotNullIfNotNull, location, f_10899_46058_46074(outputParam), f_10899_46076_46091(inputParam));
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 45795, 46444);
                            }

                            else
                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 45795, 46444);

                                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 46143, 46444) || true) && (CurrentSymbol is MethodSymbol { IsAsync: false })
                                )

                                {
                                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 46143, 46444);
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 46340, 46421);

                                    f_10899_46340_46420(f_10899_46340_46351(), ErrorCode.WRN_ReturnNotNullIfNotNull, location, f_10899_46404_46419(inputParam));
                                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 46143, 46444);
                                }
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 45795, 46444);
                            }
                            DynAbs.Tracing.TraceSender.TraceBreak(10899, 46466, 46472);

                            break;
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 45462, 46491);
                        }
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 45391, 46506);
                    }
                }
                catch (System.Exception)
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoopByException(10899, 1, 1116);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoop(10899, 1, 1116);
                }
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 45016, 46517);

                bool
                f_10899_45269_45292(System.Collections.Immutable.ImmutableHashSet<string>
                this_param)
                {
                    var return_v = this_param.IsEmpty;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 45269, 45292);
                    return return_v;
                }


                bool
                f_10899_45296_45319(Microsoft.CodeAnalysis.CSharp.NullableFlowState
                state)
                {
                    var return_v = state.IsNotNull();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 45296, 45319);
                    return return_v;
                }


                string
                f_10899_45491_45506(Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol
                this_param)
                {
                    var return_v = this_param.Name;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 45491, 45506);
                    return return_v;
                }


                bool
                f_10899_45466_45507(System.Collections.Immutable.ImmutableHashSet<string>
                this_param, string
                item)
                {
                    var return_v = this_param.Contains(item);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 45466, 45507);
                    return return_v;
                }


                int
                f_10899_45532_45559(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol
                symbol)
                {
                    var return_v = this_param.GetOrCreateSlot((Microsoft.CodeAnalysis.CSharp.Symbol)symbol);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 45532, 45559);
                    return return_v;
                }


                bool
                f_10899_45609_45637(Microsoft.CodeAnalysis.CSharp.NullableFlowState
                state)
                {
                    var return_v = state.IsNotNull();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 45609, 45637);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Location?
                f_10899_45694_45718_I(Microsoft.CodeAnalysis.Location?
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 45694, 45718);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SyntaxToken
                f_10899_45722_45758(Microsoft.CodeAnalysis.SyntaxNode
                this_param)
                {
                    var return_v = this_param.GetLastToken();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 45722, 45758);
                    return return_v;
                }


                Microsoft.CodeAnalysis.DiagnosticBag
                f_10899_45991_46002()
                {
                    var return_v = Diagnostics;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 45991, 46002);
                    return return_v;
                }


                string
                f_10899_46058_46074(Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol
                this_param)
                {
                    var return_v = this_param.Name;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 46058, 46074);
                    return return_v;
                }


                string
                f_10899_46076_46091(Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol
                this_param)
                {
                    var return_v = this_param.Name;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 46076, 46091);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo
                f_10899_45991_46092(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, Microsoft.CodeAnalysis.Location
                location, params object[]
                args)
                {
                    var return_v = diagnostics.Add(code, location, args);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 45991, 46092);
                    return return_v;
                }


                Microsoft.CodeAnalysis.DiagnosticBag
                f_10899_46340_46351()
                {
                    var return_v = Diagnostics;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 46340, 46351);
                    return return_v;
                }


                string
                f_10899_46404_46419(Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol
                this_param)
                {
                    var return_v = this_param.Name;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 46404, 46419);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo
                f_10899_46340_46420(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, Microsoft.CodeAnalysis.Location
                location, params object[]
                args)
                {
                    var return_v = diagnostics.Add(code, location, args);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 46340, 46420);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol>
                f_10899_45418_45428_I(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol>
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 45418, 45428);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 45016, 46517);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 45016, 46517);
            }
        }

        private void EnforceDoesNotReturn(SyntaxNode? syntaxOpt)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 46529, 47185);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 46676, 47174) || true) && (CurrentSymbol is MethodSymbol { ContainingSymbol: TypeSymbol _ } method && (DynAbs.Tracing.TraceSender.Expression_True(10899, 46680, 46887) && ((f_10899_46774_46804(method) & FlowAnalysisAnnotations.DoesNotReturn) == FlowAnalysisAnnotations.DoesNotReturn)) && (DynAbs.Tracing.TraceSender.Expression_True(10899, 46680, 46926) && f_10899_46908_46926(this)))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 46676, 47174);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 47031, 47159);

                    f_10899_47031_47158(this, ErrorCode.WRN_ShouldNotReturn, f_10899_47079_47103_I(DynAbs.Tracing.TraceSender.TraceConditionalAccessExpression(syntaxOpt, 10899, 47079, 47103)?.GetLocation()) ?? (DynAbs.Tracing.TraceSender.Expression_Null<Microsoft.CodeAnalysis.Location?>(10899, 47079, 47157) ?? f_10899_47107_47143(methodMainNode.Syntax).GetLocation()));
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 46676, 47174);
                }
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 46529, 47185);

                Microsoft.CodeAnalysis.CSharp.Symbols.FlowAnalysisAnnotations
                f_10899_46774_46804(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                this_param)
                {
                    var return_v = this_param.FlowAnalysisAnnotations;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 46774, 46804);
                    return return_v;
                }


                bool
                f_10899_46908_46926(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param)
                {
                    var return_v = this_param.IsReachable();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 46908, 46926);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Location?
                f_10899_47079_47103_I(Microsoft.CodeAnalysis.Location?
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 47079, 47103);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SyntaxToken
                f_10899_47107_47143(Microsoft.CodeAnalysis.SyntaxNode
                this_param)
                {
                    var return_v = this_param.GetLastToken();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 47107, 47143);
                    return return_v;
                }


                int
                f_10899_47031_47158(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.ErrorCode
                errorCode, Microsoft.CodeAnalysis.Location
                location, params object[]
                arguments)
                {
                    this_param.ReportDiagnostic(errorCode, location, arguments);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 47031, 47158);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 46529, 47185);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 46529, 47185);
            }
        }

        internal static void AnalyzeIfNeeded(
                    CSharpCompilation compilation,
                    MethodSymbol method,
                    BoundNode node,
                    DiagnosticBag diagnostics,
                    bool useConstructorExitWarnings,
                    VariableState? initialNullableState,
                    bool getFinalNullableState,
                    out VariableState? finalNullableState)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterStaticMethod(10899, 47312, 48778);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 47710, 48606) || true) && (!f_10899_47715_47754(compilation) || (DynAbs.Tracing.TraceSender.Expression_False(10899, 47714, 47806) || !f_10899_47759_47806(compilation, method)))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 47710, 48606);

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 47840, 48522) || true) && (f_10899_47844_47887(compilation))
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 47840, 48522);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 48322, 48503);

                        f_10899_48322_48502(compilation, method, node, f_10899_48357_48376(), useConstructorExitWarnings: false, initialNullableState: null, getFinalNullableState: false, out _, requiresAnalysis: false);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 47840, 48522);
                    }
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 48540, 48566);

                    finalNullableState = null;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 48584, 48591);

                    return;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 47710, 48606);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 48622, 48767);

                f_10899_48622_48766(compilation, method, node, diagnostics, useConstructorExitWarnings, initialNullableState, getFinalNullableState, out finalNullableState);
                DynAbs.Tracing.TraceSender.TraceExitStaticMethod(10899, 47312, 48778);

                bool
                f_10899_47715_47754(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                compilation)
                {
                    var return_v = HasRequiredLanguageVersion(compilation);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 47715, 47754);
                    return return_v;
                }


                bool
                f_10899_47759_47806(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                method)
                {
                    var return_v = this_param.IsNullableAnalysisEnabledIn(method);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 47759, 47806);
                    return return_v;
                }


                bool
                f_10899_47844_47887(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param)
                {
                    var return_v = this_param.IsNullableAnalysisEnabledAlways;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 47844, 47887);
                    return return_v;
                }


                Microsoft.CodeAnalysis.DiagnosticBag
                f_10899_48357_48376()
                {
                    var return_v = new Microsoft.CodeAnalysis.DiagnosticBag();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 48357, 48376);
                    return return_v;
                }


                int
                f_10899_48322_48502(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                compilation, Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                method, Microsoft.CodeAnalysis.CSharp.BoundNode
                node, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, bool
                useConstructorExitWarnings, Microsoft.CodeAnalysis.CSharp.NullableWalker.VariableState?
                initialNullableState, bool
                getFinalNullableState, out Microsoft.CodeAnalysis.CSharp.NullableWalker.VariableState?
                finalNullableState, bool
                requiresAnalysis)
                {
                    Analyze(compilation, method, node, diagnostics, useConstructorExitWarnings: useConstructorExitWarnings, initialNullableState: initialNullableState, getFinalNullableState: getFinalNullableState, out finalNullableState, requiresAnalysis: requiresAnalysis);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 48322, 48502);
                    return 0;
                }


                int
                f_10899_48622_48766(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                compilation, Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                method, Microsoft.CodeAnalysis.CSharp.BoundNode
                node, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, bool
                useConstructorExitWarnings, Microsoft.CodeAnalysis.CSharp.NullableWalker.VariableState?
                initialNullableState, bool
                getFinalNullableState, out Microsoft.CodeAnalysis.CSharp.NullableWalker.VariableState?
                finalNullableState)
                {
                    Analyze(compilation, method, node, diagnostics, useConstructorExitWarnings, initialNullableState, getFinalNullableState, out finalNullableState);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 48622, 48766);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 47312, 48778);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 47312, 48778);
            }
        }

        private static void Analyze(
                    CSharpCompilation compilation,
                    MethodSymbol method,
                    BoundNode node,
                    DiagnosticBag diagnostics,
                    bool useConstructorExitWarnings,
                    VariableState? initialNullableState,
                    bool getFinalNullableState,
                    out VariableState? finalNullableState,
                    bool requiresAnalysis = true)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterStaticMethod(10899, 48790, 50447);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 49222, 49417) || true) && (f_10899_49226_49253(method) && (DynAbs.Tracing.TraceSender.Expression_True(10899, 49226, 49286) && f_10899_49257_49286_M(!method.IsImplicitConstructor)) && (DynAbs.Tracing.TraceSender.Expression_True(10899, 49226, 49317) && f_10899_49290_49317_M(!method.IsScriptInitializer)))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 49222, 49417);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 49351, 49377);

                    finalNullableState = null;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 49395, 49402);

                    return;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 49222, 49417);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 49431, 49471);

                f_10899_49431_49470(f_10899_49444_49459(node) is object);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 49485, 49746);

                var
                binder = (DynAbs.Tracing.TraceSender.Conditional_F1(10899, 49498, 49559) || ((method is SynthesizedSimpleProgramEntryPointSymbol && DynAbs.Tracing.TraceSender.Conditional_F2(10899, 49592, 49644)) || DynAbs.Tracing.TraceSender.Conditional_F3(10899, 49677, 49745))) ? f_10899_49592_49644(((SynthesizedSimpleProgramEntryPointSymbol)method), ignoreAccessibility: false) : f_10899_49677_49745(f_10899_49677_49722(compilation, f_10899_49706_49721(node)), node.Syntax)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 49760, 49797);

                var
                conversions = f_10899_49778_49796(binder)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 49811, 50436);

                f_10899_49811_50435(compilation, method, node, binder, conversions, diagnostics, useConstructorExitWarnings, useDelegateInvokeParameterTypes: false, delegateInvokeMethodOpt: null, initialState: initialNullableState, analyzedNullabilityMapOpt: null, snapshotBuilderOpt: null, returnTypesOpt: null, getFinalNullableState, finalNullableState: out finalNullableState, requiresAnalysis);
                DynAbs.Tracing.TraceSender.TraceExitStaticMethod(10899, 48790, 50447);

                bool
                f_10899_49226_49253(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                this_param)
                {
                    var return_v = this_param.IsImplicitlyDeclared;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 49226, 49253);
                    return return_v;
                }


                bool
                f_10899_49257_49286_M(bool
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 49257, 49286);
                    return return_v;
                }


                bool
                f_10899_49290_49317_M(bool
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 49290, 49317);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SyntaxTree?
                f_10899_49444_49459(Microsoft.CodeAnalysis.CSharp.BoundNode
                this_param)
                {
                    var return_v = this_param.SyntaxTree;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 49444, 49459);
                    return return_v;
                }


                int
                f_10899_49431_49470(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 49431, 49470);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.ExecutableCodeBinder
                f_10899_49592_49644(Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedSimpleProgramEntryPointSymbol
                this_param, bool
                ignoreAccessibility)
                {
                    var return_v = this_param.GetBodyBinder(ignoreAccessibility: ignoreAccessibility);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 49592, 49644);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SyntaxTree
                f_10899_49706_49721(Microsoft.CodeAnalysis.CSharp.BoundNode
                this_param)
                {
                    var return_v = this_param.SyntaxTree;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 49706, 49721);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BinderFactory
                f_10899_49677_49722(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param, Microsoft.CodeAnalysis.SyntaxTree
                syntaxTree)
                {
                    var return_v = this_param.GetBinderFactory(syntaxTree);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 49677, 49722);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Binder
                f_10899_49677_49745(Microsoft.CodeAnalysis.CSharp.BinderFactory
                this_param, Microsoft.CodeAnalysis.SyntaxNode
                node)
                {
                    var return_v = this_param.GetBinder(node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 49677, 49745);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Conversions
                f_10899_49778_49796(Microsoft.CodeAnalysis.CSharp.Binder
                this_param)
                {
                    var return_v = this_param.Conversions;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 49778, 49796);
                    return return_v;
                }


                int
                f_10899_49811_50435(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                compilation, Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                symbol, Microsoft.CodeAnalysis.CSharp.BoundNode
                node, Microsoft.CodeAnalysis.CSharp.Binder
                binder, Microsoft.CodeAnalysis.CSharp.Conversions
                conversions, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, bool
                useConstructorExitWarnings, bool
                useDelegateInvokeParameterTypes, Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol?
                delegateInvokeMethodOpt, Microsoft.CodeAnalysis.CSharp.NullableWalker.VariableState?
                initialState, System.Collections.Immutable.ImmutableDictionary<Microsoft.CodeAnalysis.CSharp.BoundExpression, (Microsoft.CodeAnalysis.NullabilityInfo, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?)>.Builder?
                analyzedNullabilityMapOpt, Microsoft.CodeAnalysis.CSharp.NullableWalker.SnapshotManager.Builder?
                snapshotBuilderOpt, Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<(Microsoft.CodeAnalysis.CSharp.BoundReturnStatement, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations)>?
                returnTypesOpt, bool
                getFinalNullableState, out Microsoft.CodeAnalysis.CSharp.NullableWalker.VariableState?
                finalNullableState, bool
                requiresAnalysis)
                {
                    Analyze(compilation, (Microsoft.CodeAnalysis.CSharp.Symbol)symbol, node, binder, conversions, diagnostics, useConstructorExitWarnings, useDelegateInvokeParameterTypes: useDelegateInvokeParameterTypes, delegateInvokeMethodOpt: delegateInvokeMethodOpt, initialState: initialState, analyzedNullabilityMapOpt: analyzedNullabilityMapOpt, snapshotBuilderOpt: snapshotBuilderOpt, returnTypesOpt: returnTypesOpt, getFinalNullableState, out finalNullableState, requiresAnalysis);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 49811, 50435);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 48790, 50447);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 48790, 50447);
            }
        }

        internal static VariableState? GetAfterInitializersState(CSharpCompilation compilation, Symbol? symbol)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterStaticMethod(10899, 50705, 51986);
                Microsoft.CodeAnalysis.CSharp.NullableWalker.VariableState? afterInitializersState = default(Microsoft.CodeAnalysis.CSharp.NullableWalker.VariableState?);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 50833, 51947) || true) && (symbol is MethodSymbol method
                && (DynAbs.Tracing.TraceSender.Expression_True(10899, 50837, 50926) && f_10899_50887_50926(method)) && (DynAbs.Tracing.TraceSender.Expression_True(10899, 50837, 51018) && f_10899_50947_50968(method) is SourceMemberContainerTypeSymbol containingType))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 50833, 51947);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 51052, 51104);

                    var
                    unusedDiagnostics = f_10899_51076_51103()
                    ;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 51124, 51181);

                    Binder.ProcessedFieldInitializers
                    initializers = default
                    ;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 51199, 51375);

                    f_10899_51199_51374(compilation, null, (DynAbs.Tracing.TraceSender.Conditional_F1(10899, 51247, 51262) || ((f_10899_51247_51262(method) && DynAbs.Tracing.TraceSender.Conditional_F2(10899, 51265, 51298)) || DynAbs.Tracing.TraceSender.Conditional_F3(10899, 51301, 51336))) ? f_10899_51265_51298(containingType) : f_10899_51301_51336(containingType), unusedDiagnostics, ref initializers);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 51393, 51837);

                    f_10899_51393_51836(compilation, method, f_10899_51509_51587(initializers.BoundInitializers, method), unusedDiagnostics, useConstructorExitWarnings: false, initialNullableState: null, getFinalNullableState: true, out afterInitializersState);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 51857, 51882);

                    f_10899_51857_51881(
                                    unusedDiagnostics);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 51902, 51932);

                    return afterInitializersState;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 50833, 51947);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 51963, 51975);

                return null;
                DynAbs.Tracing.TraceSender.TraceExitStaticMethod(10899, 50705, 51986);

                bool
                f_10899_50887_50926(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                methodSymbol)
                {
                    var return_v = methodSymbol.IncludeFieldInitializersInBody();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 50887, 50926);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                f_10899_50947_50968(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                this_param)
                {
                    var return_v = this_param.ContainingType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 50947, 50968);
                    return return_v;
                }


                Microsoft.CodeAnalysis.DiagnosticBag
                f_10899_51076_51103()
                {
                    var return_v = DiagnosticBag.GetInstance();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 51076, 51103);
                    return return_v;
                }


                bool
                f_10899_51247_51262(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                this_param)
                {
                    var return_v = this_param.IsStatic;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 51247, 51262);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.FieldOrPropertyInitializer>>
                f_10899_51265_51298(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                this_param)
                {
                    var return_v = this_param.StaticInitializers;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 51265, 51298);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.FieldOrPropertyInitializer>>
                f_10899_51301_51336(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                this_param)
                {
                    var return_v = this_param.InstanceInitializers;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 51301, 51336);
                    return return_v;
                }


                int
                f_10899_51199_51374(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                compilation, Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedInteractiveInitializerMethod?
                scriptInitializerOpt, System.Collections.Immutable.ImmutableArray<System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.FieldOrPropertyInitializer>>
                fieldInitializers, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, ref Microsoft.CodeAnalysis.CSharp.Binder.ProcessedFieldInitializers
                processedInitializers)
                {
                    Binder.BindFieldInitializers(compilation, scriptInitializerOpt, fieldInitializers, diagnostics, ref processedInitializers);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 51199, 51374);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.BoundTypeOrInstanceInitializers
                f_10899_51509_51587(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundInitializer>
                boundInitializers, Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                method)
                {
                    var return_v = InitializerRewriter.RewriteConstructor(boundInitializers, method);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 51509, 51587);
                    return return_v;
                }


                int
                f_10899_51393_51836(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                compilation, Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                method, Microsoft.CodeAnalysis.CSharp.BoundTypeOrInstanceInitializers
                node, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, bool
                useConstructorExitWarnings, Microsoft.CodeAnalysis.CSharp.NullableWalker.VariableState?
                initialNullableState, bool
                getFinalNullableState, out Microsoft.CodeAnalysis.CSharp.NullableWalker.VariableState?
                finalNullableState)
                {
                    NullableWalker.AnalyzeIfNeeded(compilation, method, (Microsoft.CodeAnalysis.CSharp.BoundNode)node, diagnostics, useConstructorExitWarnings: useConstructorExitWarnings, initialNullableState: initialNullableState, getFinalNullableState: getFinalNullableState, out finalNullableState);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 51393, 51836);
                    return 0;
                }


                int
                f_10899_51857_51881(Microsoft.CodeAnalysis.DiagnosticBag
                this_param)
                {
                    this_param.Free();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 51857, 51881);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 50705, 51986);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 50705, 51986);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        internal static void AnalyzeWithoutRewrite(
                    CSharpCompilation compilation,
                    Symbol? symbol,
                    BoundNode node,
                    Binder binder,
                    DiagnosticBag diagnostics,
                    bool createSnapshots)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterStaticMethod(10899, 52370, 52834);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 52643, 52823);

                _ = f_10899_52647_52822(compilation, symbol, node, binder, initialState: f_10899_52720_52766(compilation, symbol), diagnostics, createSnapshots, requiresAnalysis: false);
                DynAbs.Tracing.TraceSender.TraceExitStaticMethod(10899, 52370, 52834);

                Microsoft.CodeAnalysis.CSharp.NullableWalker.VariableState?
                f_10899_52720_52766(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                compilation, Microsoft.CodeAnalysis.CSharp.Symbol?
                symbol)
                {
                    var return_v = GetAfterInitializersState(compilation, symbol);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 52720, 52766);
                    return return_v;
                }


                (Microsoft.CodeAnalysis.CSharp.NullableWalker.SnapshotManager?, System.Collections.Immutable.ImmutableDictionary<Microsoft.CodeAnalysis.CSharp.BoundExpression, (Microsoft.CodeAnalysis.NullabilityInfo, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?)>)
                f_10899_52647_52822(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                compilation, Microsoft.CodeAnalysis.CSharp.Symbol?
                symbol, Microsoft.CodeAnalysis.CSharp.BoundNode
                node, Microsoft.CodeAnalysis.CSharp.Binder
                binder, Microsoft.CodeAnalysis.CSharp.NullableWalker.VariableState?
                initialState, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, bool
                createSnapshots, bool
                requiresAnalysis)
                {
                    var return_v = AnalyzeWithSemanticInfo(compilation, symbol, node, binder, initialState: initialState, diagnostics, createSnapshots, requiresAnalysis: requiresAnalysis);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 52647, 52822);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 52370, 52834);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 52370, 52834);
            }
        }

        internal static BoundNode AnalyzeAndRewrite(
                    CSharpCompilation compilation,
                    Symbol? symbol,
                    BoundNode node,
                    Binder binder,
                    VariableState? initialState,
                    DiagnosticBag diagnostics,
                    bool createSnapshots,
                    out SnapshotManager? snapshotManager,
                    ref ImmutableDictionary<Symbol, Symbol>? remappedSymbols)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterStaticMethod(10899, 53058, 53887);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 53496, 53590);

                ImmutableDictionary<BoundExpression, (NullabilityInfo, TypeSymbol?)>
                analyzedNullabilitiesMap
                = default(ImmutableDictionary<BoundExpression, (NullabilityInfo, TypeSymbol?)>);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 53604, 53777);

                (snapshotManager, analyzedNullabilitiesMap) = f_10899_53650_53776(compilation, symbol, node, binder, initialState, diagnostics, createSnapshots, requiresAnalysis: true);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 53791, 53876);

                return f_10899_53798_53875(analyzedNullabilitiesMap, snapshotManager, node, ref remappedSymbols);
                DynAbs.Tracing.TraceSender.TraceExitStaticMethod(10899, 53058, 53887);

                (Microsoft.CodeAnalysis.CSharp.NullableWalker.SnapshotManager?, System.Collections.Immutable.ImmutableDictionary<Microsoft.CodeAnalysis.CSharp.BoundExpression, (Microsoft.CodeAnalysis.NullabilityInfo, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?)>)
                f_10899_53650_53776(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                compilation, Microsoft.CodeAnalysis.CSharp.Symbol
                symbol, Microsoft.CodeAnalysis.CSharp.BoundNode
                node, Microsoft.CodeAnalysis.CSharp.Binder
                binder, Microsoft.CodeAnalysis.CSharp.NullableWalker.VariableState
                initialState, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, bool
                createSnapshots, bool
                requiresAnalysis)
                {
                    var return_v = AnalyzeWithSemanticInfo(compilation, symbol, node, binder, initialState, diagnostics, createSnapshots, requiresAnalysis: requiresAnalysis);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 53650, 53776);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundNode
                f_10899_53798_53875(System.Collections.Immutable.ImmutableDictionary<Microsoft.CodeAnalysis.CSharp.BoundExpression, (Microsoft.CodeAnalysis.NullabilityInfo, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?)>
                updatedNullabilities, Microsoft.CodeAnalysis.CSharp.NullableWalker.SnapshotManager?
                snapshotManager, Microsoft.CodeAnalysis.CSharp.BoundNode
                node, ref System.Collections.Immutable.ImmutableDictionary<Microsoft.CodeAnalysis.CSharp.Symbol, Microsoft.CodeAnalysis.CSharp.Symbol>?
                remappedSymbols)
                {
                    var return_v = Rewrite(updatedNullabilities, snapshotManager, node, ref remappedSymbols);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 53798, 53875);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 53058, 53887);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 53058, 53887);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private static (SnapshotManager?, ImmutableDictionary<BoundExpression, (NullabilityInfo, TypeSymbol?)>) AnalyzeWithSemanticInfo(
                    CSharpCompilation compilation,
                    Symbol? symbol,
                    BoundNode node,
                    Binder binder,
                    VariableState? initialState,
                    DiagnosticBag diagnostics,
                    bool createSnapshots,
                    bool requiresAnalysis)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterStaticMethod(10899, 53899, 56482);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 54335, 54527);

                var
                analyzedNullabilities = f_10899_54363_54526(f_10899_54446_54487(), NullabilityInfoTypeComparer.Instance)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 54819, 54914);

                var
                snapshotBuilder = (DynAbs.Tracing.TraceSender.Conditional_F1(10899, 54841, 54874) || ((createSnapshots && (DynAbs.Tracing.TraceSender.Expression_True(10899, 54841, 54874) && symbol != null) && DynAbs.Tracing.TraceSender.Conditional_F2(10899, 54877, 54906)) || DynAbs.Tracing.TraceSender.Conditional_F3(10899, 54909, 54913))) ? f_10899_54877_54906() : null
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 54928, 55513);

                f_10899_54928_55512(compilation, symbol, node, binder, f_10899_55057_55075(binder), diagnostics, useConstructorExitWarnings: true, useDelegateInvokeParameterTypes: false, delegateInvokeMethodOpt: null, initialState, analyzedNullabilities, snapshotBuilder, returnTypesOpt: null, getFinalNullableState: false, out _, requiresAnalysis);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 55529, 55596);

                var
                analyzedNullabilitiesMap = f_10899_55560_55595(analyzedNullabilities)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 55610, 55668);

                var
                snapshotManager = f_10899_55632_55667_I(DynAbs.Tracing.TraceSender.TraceConditionalAccessExpression(snapshotBuilder, 10899, 55632, 55667)?.ToManagerAndFree())
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 55778, 55947) || true) && (f_10899_55782_55828(compilation))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 55778, 55947);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 55862, 55932);

                    f_10899_55862_55931(analyzedNullabilitiesMap, snapshotManager, node);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 55778, 55947);
                }

                static bool isNullableAnalysisEnabledAnywhere(CSharpCompilation compilation)
                {
                    try
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterStaticMethod(10899, 55963, 56396);

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 56072, 56225) || true) && (f_10899_56076_56118(f_10899_56076_56095(compilation)) != NullableContextOptions.Disable)
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 56072, 56225);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 56194, 56206);

                            return true;
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 56072, 56225);
                        }
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 56243, 56381);

                        return compilation.SyntaxTrees.Any(tree => ((CSharpSyntaxTree)tree).IsNullableAnalysisEnabled(new Text.TextSpan(0, tree.Length)) == true);
                        DynAbs.Tracing.TraceSender.TraceExitStaticMethod(10899, 55963, 56396);

                        Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions
                        f_10899_56076_56095(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                        this_param)
                        {
                            var return_v = this_param.Options;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 56076, 56095);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.NullableContextOptions
                        f_10899_56076_56118(Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions
                        this_param)
                        {
                            var return_v = this_param.NullableContextOptions;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 56076, 56118);
                            return return_v;
                        }

                    }
                    catch
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 55963, 56396);
                        throw;
                    }
                    finally
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 55963, 56396);
                    }
                    throw new System.Exception("Slicer error: unreachable code");
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 56420, 56471);

                return (snapshotManager, analyzedNullabilitiesMap);
                DynAbs.Tracing.TraceSender.TraceExitStaticMethod(10899, 53899, 56482);

                System.Collections.Generic.EqualityComparer<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                f_10899_54446_54487()
                {
                    var return_v = EqualityComparer<BoundExpression>.Default;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 54446, 54487);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableDictionary<Microsoft.CodeAnalysis.CSharp.BoundExpression, (Microsoft.CodeAnalysis.NullabilityInfo, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?)>.Builder
                f_10899_54363_54526(System.Collections.Generic.EqualityComparer<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                keyComparer, Microsoft.CodeAnalysis.CSharp.NullableWalker.NullabilityInfoTypeComparer
                valueComparer)
                {
                    var return_v = ImmutableDictionary.CreateBuilder<BoundExpression, (NullabilityInfo, TypeSymbol?)>((System.Collections.Generic.IEqualityComparer<Microsoft.CodeAnalysis.CSharp.BoundExpression>)keyComparer, (System.Collections.Generic.IEqualityComparer<(Microsoft.CodeAnalysis.NullabilityInfo, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?)>)valueComparer);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 54363, 54526);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.NullableWalker.SnapshotManager.Builder
                f_10899_54877_54906()
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.NullableWalker.SnapshotManager.Builder();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 54877, 54906);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Conversions
                f_10899_55057_55075(Microsoft.CodeAnalysis.CSharp.Binder
                this_param)
                {
                    var return_v = this_param.Conversions;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 55057, 55075);
                    return return_v;
                }


                int
                f_10899_54928_55512(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                compilation, Microsoft.CodeAnalysis.CSharp.Symbol?
                symbol, Microsoft.CodeAnalysis.CSharp.BoundNode
                node, Microsoft.CodeAnalysis.CSharp.Binder
                binder, Microsoft.CodeAnalysis.CSharp.Conversions
                conversions, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, bool
                useConstructorExitWarnings, bool
                useDelegateInvokeParameterTypes, Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol?
                delegateInvokeMethodOpt, Microsoft.CodeAnalysis.CSharp.NullableWalker.VariableState?
                initialState, System.Collections.Immutable.ImmutableDictionary<Microsoft.CodeAnalysis.CSharp.BoundExpression, (Microsoft.CodeAnalysis.NullabilityInfo, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?)>.Builder
                analyzedNullabilityMapOpt, Microsoft.CodeAnalysis.CSharp.NullableWalker.SnapshotManager.Builder?
                snapshotBuilderOpt, Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<(Microsoft.CodeAnalysis.CSharp.BoundReturnStatement, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations)>?
                returnTypesOpt, bool
                getFinalNullableState, out Microsoft.CodeAnalysis.CSharp.NullableWalker.VariableState?
                finalNullableState, bool
                requiresAnalysis)
                {
                    Analyze(compilation, symbol, node, binder, conversions, diagnostics, useConstructorExitWarnings: useConstructorExitWarnings, useDelegateInvokeParameterTypes: useDelegateInvokeParameterTypes, delegateInvokeMethodOpt: delegateInvokeMethodOpt, initialState, analyzedNullabilityMapOpt, snapshotBuilderOpt, returnTypesOpt: returnTypesOpt, getFinalNullableState: getFinalNullableState, out finalNullableState, requiresAnalysis);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 54928, 55512);
                    return 0;
                }


                System.Collections.Immutable.ImmutableDictionary<Microsoft.CodeAnalysis.CSharp.BoundExpression, (Microsoft.CodeAnalysis.NullabilityInfo, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?)>
                f_10899_55560_55595(System.Collections.Immutable.ImmutableDictionary<Microsoft.CodeAnalysis.CSharp.BoundExpression, (Microsoft.CodeAnalysis.NullabilityInfo, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?)>.Builder
                this_param)
                {
                    var return_v = this_param.ToImmutable();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 55560, 55595);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.NullableWalker.SnapshotManager?
                f_10899_55632_55667_I(Microsoft.CodeAnalysis.CSharp.NullableWalker.SnapshotManager?
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 55632, 55667);
                    return return_v;
                }


                bool
                f_10899_55782_55828(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                compilation)
                {
                    var return_v = isNullableAnalysisEnabledAnywhere(compilation);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 55782, 55828);
                    return return_v;
                }


                int
                f_10899_55862_55931(System.Collections.Immutable.ImmutableDictionary<Microsoft.CodeAnalysis.CSharp.BoundExpression, (Microsoft.CodeAnalysis.NullabilityInfo, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?)>
                analyzedNullabilityMap, Microsoft.CodeAnalysis.CSharp.NullableWalker.SnapshotManager?
                snapshotManagerOpt, Microsoft.CodeAnalysis.CSharp.BoundNode
                node)
                {
                    DebugVerifier.Verify(analyzedNullabilityMap, snapshotManagerOpt, node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 55862, 55931);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 53899, 56482);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 53899, 56482);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        internal static BoundNode AnalyzeAndRewriteSpeculation(
                    int position,
                    BoundNode node,
                    Binder binder,
                    SnapshotManager originalSnapshots,
                    out SnapshotManager newSnapshots,
                    ref ImmutableDictionary<Symbol, Symbol>? remappedSymbols)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterStaticMethod(10899, 56494, 58387);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 56824, 57016);

                var
                analyzedNullabilities = f_10899_56852_57015(f_10899_56935_56976(), NullabilityInfoTypeComparer.Instance)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 57030, 57085);

                var
                newSnapshotBuilder = f_10899_57055_57084()
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 57099, 57169);

                var (variables, localState) = f_10899_57129_57168(originalSnapshots, position);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 57183, 57213);

                var
                symbol = variables.Symbol
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 57227, 57764);

                var
                walker = f_10899_57240_57763(f_10899_57277_57295(binder), symbol, useConstructorExitWarnings: false, useDelegateInvokeParameterTypes: false, delegateInvokeMethodOpt: null, node, binder, f_10899_57544_57562(binder), f_10899_57581_57608(variables), returnTypesOpt: null, analyzedNullabilities, newSnapshotBuilder, isSpeculative: true)
                ;
                try
                {
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 57814, 57928);

                    f_10899_57814_57927(walker, symbol, diagnostics: null, LocalState.Create(localState), snapshotBuilderOpt: newSnapshotBuilder);
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinally(10899, 57957, 58026);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 57997, 58011);

                    f_10899_57997_58010(walker);
                    DynAbs.Tracing.TraceSender.TraceExitFinally(10899, 57957, 58026);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 58042, 58109);

                var
                analyzedNullabilitiesMap = f_10899_58073_58108(analyzedNullabilities)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 58123, 58176);

                newSnapshots = f_10899_58138_58175(newSnapshotBuilder);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 58203, 58270);

                f_10899_58203_58269(analyzedNullabilitiesMap, newSnapshots, node);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 58294, 58376);

                return f_10899_58301_58375(analyzedNullabilitiesMap, newSnapshots, node, ref remappedSymbols);
                DynAbs.Tracing.TraceSender.TraceExitStaticMethod(10899, 56494, 58387);

                System.Collections.Generic.EqualityComparer<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                f_10899_56935_56976()
                {
                    var return_v = EqualityComparer<BoundExpression>.Default;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 56935, 56976);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableDictionary<Microsoft.CodeAnalysis.CSharp.BoundExpression, (Microsoft.CodeAnalysis.NullabilityInfo, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?)>.Builder
                f_10899_56852_57015(System.Collections.Generic.EqualityComparer<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                keyComparer, Microsoft.CodeAnalysis.CSharp.NullableWalker.NullabilityInfoTypeComparer
                valueComparer)
                {
                    var return_v = ImmutableDictionary.CreateBuilder<BoundExpression, (NullabilityInfo, TypeSymbol?)>((System.Collections.Generic.IEqualityComparer<Microsoft.CodeAnalysis.CSharp.BoundExpression>)keyComparer, (System.Collections.Generic.IEqualityComparer<(Microsoft.CodeAnalysis.NullabilityInfo, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?)>)valueComparer);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 56852, 57015);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.NullableWalker.SnapshotManager.Builder
                f_10899_57055_57084()
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.NullableWalker.SnapshotManager.Builder();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 57055, 57084);
                    return return_v;
                }


                (Microsoft.CodeAnalysis.CSharp.NullableWalker.VariablesSnapshot, Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalStateSnapshot)
                f_10899_57129_57168(Microsoft.CodeAnalysis.CSharp.NullableWalker.SnapshotManager
                this_param, int
                position)
                {
                    var return_v = this_param.GetSnapshot(position);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 57129, 57168);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                f_10899_57277_57295(Microsoft.CodeAnalysis.CSharp.Binder
                this_param)
                {
                    var return_v = this_param.Compilation;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 57277, 57295);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Conversions
                f_10899_57544_57562(Microsoft.CodeAnalysis.CSharp.Binder
                this_param)
                {
                    var return_v = this_param.Conversions;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 57544, 57562);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.NullableWalker.Variables
                f_10899_57581_57608(Microsoft.CodeAnalysis.CSharp.NullableWalker.VariablesSnapshot
                snapshot)
                {
                    var return_v = Variables.Create(snapshot);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 57581, 57608);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.NullableWalker
                f_10899_57240_57763(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                compilation, Microsoft.CodeAnalysis.CSharp.Symbol?
                symbol, bool
                useConstructorExitWarnings, bool
                useDelegateInvokeParameterTypes, Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol?
                delegateInvokeMethodOpt, Microsoft.CodeAnalysis.CSharp.BoundNode
                node, Microsoft.CodeAnalysis.CSharp.Binder
                binder, Microsoft.CodeAnalysis.CSharp.Conversions
                conversions, Microsoft.CodeAnalysis.CSharp.NullableWalker.Variables
                variables, Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<(Microsoft.CodeAnalysis.CSharp.BoundReturnStatement, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations)>?
                returnTypesOpt, System.Collections.Immutable.ImmutableDictionary<Microsoft.CodeAnalysis.CSharp.BoundExpression, (Microsoft.CodeAnalysis.NullabilityInfo, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?)>.Builder
                analyzedNullabilityMapOpt, Microsoft.CodeAnalysis.CSharp.NullableWalker.SnapshotManager.Builder
                snapshotBuilderOpt, bool
                isSpeculative)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.NullableWalker(compilation, symbol, useConstructorExitWarnings: useConstructorExitWarnings, useDelegateInvokeParameterTypes: useDelegateInvokeParameterTypes, delegateInvokeMethodOpt: delegateInvokeMethodOpt, node, binder, conversions, variables, returnTypesOpt: returnTypesOpt, analyzedNullabilityMapOpt, snapshotBuilderOpt, isSpeculative: isSpeculative);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 57240, 57763);
                    return return_v;
                }


                int
                f_10899_57814_57927(Microsoft.CodeAnalysis.CSharp.NullableWalker
                walker, Microsoft.CodeAnalysis.CSharp.Symbol?
                symbol, Microsoft.CodeAnalysis.DiagnosticBag?
                diagnostics, Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState
                initialState, Microsoft.CodeAnalysis.CSharp.NullableWalker.SnapshotManager.Builder
                snapshotBuilderOpt)
                {
                    Analyze(walker, symbol, diagnostics: diagnostics, (Microsoft.CodeAnalysis.Optional<Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState>)initialState, snapshotBuilderOpt: snapshotBuilderOpt);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 57814, 57927);
                    return 0;
                }


                int
                f_10899_57997_58010(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param)
                {
                    this_param.Free();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 57997, 58010);
                    return 0;
                }


                System.Collections.Immutable.ImmutableDictionary<Microsoft.CodeAnalysis.CSharp.BoundExpression, (Microsoft.CodeAnalysis.NullabilityInfo, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?)>
                f_10899_58073_58108(System.Collections.Immutable.ImmutableDictionary<Microsoft.CodeAnalysis.CSharp.BoundExpression, (Microsoft.CodeAnalysis.NullabilityInfo, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?)>.Builder
                this_param)
                {
                    var return_v = this_param.ToImmutable();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 58073, 58108);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.NullableWalker.SnapshotManager
                f_10899_58138_58175(Microsoft.CodeAnalysis.CSharp.NullableWalker.SnapshotManager.Builder
                this_param)
                {
                    var return_v = this_param.ToManagerAndFree();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 58138, 58175);
                    return return_v;
                }


                int
                f_10899_58203_58269(System.Collections.Immutable.ImmutableDictionary<Microsoft.CodeAnalysis.CSharp.BoundExpression, (Microsoft.CodeAnalysis.NullabilityInfo, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?)>
                analyzedNullabilityMap, Microsoft.CodeAnalysis.CSharp.NullableWalker.SnapshotManager
                snapshotManagerOpt, Microsoft.CodeAnalysis.CSharp.BoundNode
                node)
                {
                    DebugVerifier.Verify(analyzedNullabilityMap, snapshotManagerOpt, node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 58203, 58269);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.BoundNode
                f_10899_58301_58375(System.Collections.Immutable.ImmutableDictionary<Microsoft.CodeAnalysis.CSharp.BoundExpression, (Microsoft.CodeAnalysis.NullabilityInfo, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?)>
                updatedNullabilities, Microsoft.CodeAnalysis.CSharp.NullableWalker.SnapshotManager
                snapshotManager, Microsoft.CodeAnalysis.CSharp.BoundNode
                node, ref System.Collections.Immutable.ImmutableDictionary<Microsoft.CodeAnalysis.CSharp.Symbol, Microsoft.CodeAnalysis.CSharp.Symbol>?
                remappedSymbols)
                {
                    var return_v = Rewrite(updatedNullabilities, snapshotManager, node, ref remappedSymbols);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 58301, 58375);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 56494, 58387);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 56494, 58387);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private static BoundNode Rewrite(ImmutableDictionary<BoundExpression, (NullabilityInfo, TypeSymbol?)> updatedNullabilities, SnapshotManager? snapshotManager, BoundNode node, ref ImmutableDictionary<Symbol, Symbol>? remappedSymbols)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterStaticMethod(10899, 58399, 59490);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 58655, 58836);

                var
                remappedSymbolsBuilder = f_10899_58684_58835(Symbols.SymbolEqualityComparer.ConsiderEverything, Symbols.SymbolEqualityComparer.ConsiderEverything)
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 58850, 59204) || true) && (remappedSymbols is object)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 58850, 59204);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 59140, 59189);

                    f_10899_59140_59188(                // When we're rewriting for the speculative model, there will be a set of originally-mapped symbols, and we need to
                                                        // use them in addition to any symbols found during this pass of the walker.
                                    remappedSymbolsBuilder, remappedSymbols);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 58850, 59204);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 59218, 59320);

                var
                rewriter = f_10899_59233_59319(updatedNullabilities, snapshotManager, remappedSymbolsBuilder)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 59334, 59375);

                var
                rewrittenNode = f_10899_59354_59374(rewriter, node)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 59389, 59444);

                remappedSymbols = f_10899_59407_59443(remappedSymbolsBuilder);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 59458, 59479);

                return rewrittenNode;
                DynAbs.Tracing.TraceSender.TraceExitStaticMethod(10899, 58399, 59490);

                System.Collections.Immutable.ImmutableDictionary<Microsoft.CodeAnalysis.CSharp.Symbol, Microsoft.CodeAnalysis.CSharp.Symbol>.Builder
                f_10899_58684_58835(System.Collections.Generic.EqualityComparer<Microsoft.CodeAnalysis.CSharp.Symbol>
                keyComparer, System.Collections.Generic.EqualityComparer<Microsoft.CodeAnalysis.CSharp.Symbol>
                valueComparer)
                {
                    var return_v = ImmutableDictionary.CreateBuilder<Symbol, Symbol>((System.Collections.Generic.IEqualityComparer<Microsoft.CodeAnalysis.CSharp.Symbol>)keyComparer, (System.Collections.Generic.IEqualityComparer<Microsoft.CodeAnalysis.CSharp.Symbol>)valueComparer);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 58684, 58835);
                    return return_v;
                }


                int
                f_10899_59140_59188(System.Collections.Immutable.ImmutableDictionary<Microsoft.CodeAnalysis.CSharp.Symbol, Microsoft.CodeAnalysis.CSharp.Symbol>.Builder
                this_param, System.Collections.Immutable.ImmutableDictionary<Microsoft.CodeAnalysis.CSharp.Symbol, Microsoft.CodeAnalysis.CSharp.Symbol>
                items)
                {
                    this_param.AddRange((System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<Microsoft.CodeAnalysis.CSharp.Symbol, Microsoft.CodeAnalysis.CSharp.Symbol>>)items);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 59140, 59188);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.NullabilityRewriter
                f_10899_59233_59319(System.Collections.Immutable.ImmutableDictionary<Microsoft.CodeAnalysis.CSharp.BoundExpression, (Microsoft.CodeAnalysis.NullabilityInfo, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?)>
                updatedNullabilities, Microsoft.CodeAnalysis.CSharp.NullableWalker.SnapshotManager?
                snapshotManager, System.Collections.Immutable.ImmutableDictionary<Microsoft.CodeAnalysis.CSharp.Symbol, Microsoft.CodeAnalysis.CSharp.Symbol>.Builder
                remappedSymbols)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.NullabilityRewriter(updatedNullabilities, snapshotManager, remappedSymbols);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 59233, 59319);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundNode
                f_10899_59354_59374(Microsoft.CodeAnalysis.CSharp.NullabilityRewriter
                this_param, Microsoft.CodeAnalysis.CSharp.BoundNode
                node)
                {
                    var return_v = this_param.Visit(node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 59354, 59374);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableDictionary<Microsoft.CodeAnalysis.CSharp.Symbol, Microsoft.CodeAnalysis.CSharp.Symbol>
                f_10899_59407_59443(System.Collections.Immutable.ImmutableDictionary<Microsoft.CodeAnalysis.CSharp.Symbol, Microsoft.CodeAnalysis.CSharp.Symbol>.Builder
                this_param)
                {
                    var return_v = this_param.ToImmutable();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 59407, 59443);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 58399, 59490);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 58399, 59490);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private static bool HasRequiredLanguageVersion(CSharpCompilation compilation)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterStaticMethod(10899, 59502, 59715);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 59604, 59704);

                return f_10899_59611_59638(compilation) >= f_10899_59642_59703(MessageID.IDS_FeatureNullableReferenceTypes);
                DynAbs.Tracing.TraceSender.TraceExitStaticMethod(10899, 59502, 59715);

                Microsoft.CodeAnalysis.CSharp.LanguageVersion
                f_10899_59611_59638(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param)
                {
                    var return_v = this_param.LanguageVersion;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 59611, 59638);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.LanguageVersion
                f_10899_59642_59703(Microsoft.CodeAnalysis.CSharp.MessageID
                feature)
                {
                    var return_v = feature.RequiredVersion();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 59642, 59703);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 59502, 59715);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 59502, 59715);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        internal static bool NeedsAnalysis(CSharpCompilation compilation, SyntaxNode syntaxNode)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterStaticMethod(10899, 59991, 60283);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 60104, 60272);

                return f_10899_60111_60150(compilation) && (DynAbs.Tracing.TraceSender.Expression_True(10899, 60111, 60271) && (f_10899_60172_60223(compilation, syntaxNode) || (DynAbs.Tracing.TraceSender.Expression_False(10899, 60172, 60270) || f_10899_60227_60270(compilation))));
                DynAbs.Tracing.TraceSender.TraceExitStaticMethod(10899, 59991, 60283);

                bool
                f_10899_60111_60150(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                compilation)
                {
                    var return_v = HasRequiredLanguageVersion(compilation);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 60111, 60150);
                    return return_v;
                }


                bool
                f_10899_60172_60223(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param, Microsoft.CodeAnalysis.SyntaxNode
                syntax)
                {
                    var return_v = this_param.IsNullableAnalysisEnabledIn(syntax);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 60172, 60223);
                    return return_v;
                }


                bool
                f_10899_60227_60270(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param)
                {
                    var return_v = this_param.IsNullableAnalysisEnabledAlways;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 60227, 60270);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 59991, 60283);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 59991, 60283);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        internal static void AnalyzeIfNeeded(
                    Binder binder,
                    BoundNode node,
                    SyntaxNode syntax,
                    DiagnosticBag diagnostics)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterStaticMethod(10899, 60544, 61829);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 60735, 60764);

                bool
                requiresAnalysis = true
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 60778, 60815);

                var
                compilation = f_10899_60796_60814(binder)
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 60829, 61185) || true) && (!f_10899_60834_60873(compilation) || (DynAbs.Tracing.TraceSender.Expression_False(10899, 60833, 60925) || !f_10899_60878_60925(compilation, syntax)))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 60829, 61185);

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 60959, 61075) || true) && (f_10899_60963_61007_M(!compilation.IsNullableAnalysisEnabledAlways))
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 60959, 61075);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 61049, 61056);

                        return;
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 60959, 61075);
                    }
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 61093, 61127);

                    diagnostics = f_10899_61107_61126();
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 61145, 61170);

                    requiresAnalysis = false;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 60829, 61185);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 61201, 61818);

                f_10899_61201_61817(compilation, symbol: null, node, binder, f_10899_61336_61354(binder), diagnostics, useConstructorExitWarnings: false, useDelegateInvokeParameterTypes: false, delegateInvokeMethodOpt: null, initialState: null, analyzedNullabilityMapOpt: null, snapshotBuilderOpt: null, returnTypesOpt: null, getFinalNullableState: false, out _, requiresAnalysis);
                DynAbs.Tracing.TraceSender.TraceExitStaticMethod(10899, 60544, 61829);

                Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                f_10899_60796_60814(Microsoft.CodeAnalysis.CSharp.Binder
                this_param)
                {
                    var return_v = this_param.Compilation;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 60796, 60814);
                    return return_v;
                }


                bool
                f_10899_60834_60873(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                compilation)
                {
                    var return_v = HasRequiredLanguageVersion(compilation);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 60834, 60873);
                    return return_v;
                }


                bool
                f_10899_60878_60925(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param, Microsoft.CodeAnalysis.SyntaxNode
                syntax)
                {
                    var return_v = this_param.IsNullableAnalysisEnabledIn(syntax);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 60878, 60925);
                    return return_v;
                }


                bool
                f_10899_60963_61007_M(bool
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 60963, 61007);
                    return return_v;
                }


                Microsoft.CodeAnalysis.DiagnosticBag
                f_10899_61107_61126()
                {
                    var return_v = new Microsoft.CodeAnalysis.DiagnosticBag();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 61107, 61126);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Conversions
                f_10899_61336_61354(Microsoft.CodeAnalysis.CSharp.Binder
                this_param)
                {
                    var return_v = this_param.Conversions;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 61336, 61354);
                    return return_v;
                }


                int
                f_10899_61201_61817(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                compilation, Microsoft.CodeAnalysis.CSharp.Symbol?
                symbol, Microsoft.CodeAnalysis.CSharp.BoundNode
                node, Microsoft.CodeAnalysis.CSharp.Binder
                binder, Microsoft.CodeAnalysis.CSharp.Conversions
                conversions, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, bool
                useConstructorExitWarnings, bool
                useDelegateInvokeParameterTypes, Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol?
                delegateInvokeMethodOpt, Microsoft.CodeAnalysis.CSharp.NullableWalker.VariableState?
                initialState, System.Collections.Immutable.ImmutableDictionary<Microsoft.CodeAnalysis.CSharp.BoundExpression, (Microsoft.CodeAnalysis.NullabilityInfo, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?)>.Builder?
                analyzedNullabilityMapOpt, Microsoft.CodeAnalysis.CSharp.NullableWalker.SnapshotManager.Builder?
                snapshotBuilderOpt, Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<(Microsoft.CodeAnalysis.CSharp.BoundReturnStatement, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations)>?
                returnTypesOpt, bool
                getFinalNullableState, out Microsoft.CodeAnalysis.CSharp.NullableWalker.VariableState?
                finalNullableState, bool
                requiresAnalysis)
                {
                    Analyze(compilation, symbol: symbol, node, binder, conversions, diagnostics, useConstructorExitWarnings: useConstructorExitWarnings, useDelegateInvokeParameterTypes: useDelegateInvokeParameterTypes, delegateInvokeMethodOpt: delegateInvokeMethodOpt, initialState: initialState, analyzedNullabilityMapOpt: analyzedNullabilityMapOpt, snapshotBuilderOpt: snapshotBuilderOpt, returnTypesOpt: returnTypesOpt, getFinalNullableState: getFinalNullableState, out finalNullableState, requiresAnalysis);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 61201, 61817);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 60544, 61829);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 60544, 61829);
            }
        }

        internal static void Analyze(
                    CSharpCompilation compilation,
                    BoundLambda lambda,
                    Conversions conversions,
                    DiagnosticBag diagnostics,
                    MethodSymbol? delegateInvokeMethodOpt,
                    VariableState initialState,
                    ArrayBuilder<(BoundReturnStatement, TypeWithAnnotations)>? returnTypesOpt)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterStaticMethod(10899, 61841, 63303);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 62231, 62258);

                var
                symbol = f_10899_62244_62257(lambda)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 62272, 62361);

                var
                variables = f_10899_62288_62360(f_10899_62288_62328(initialState.Variables), symbol)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 62375, 62944);

                var
                walker = f_10899_62388_62943(compilation, symbol, useConstructorExitWarnings: false, useDelegateInvokeParameterTypes: f_10899_62565_62629(lambda, delegateInvokeMethodOpt), delegateInvokeMethodOpt: delegateInvokeMethodOpt, f_10899_62715_62726(lambda), f_10899_62745_62758(lambda), conversions, variables, returnTypesOpt, analyzedNullabilityMapOpt: null, snapshotBuilderOpt: null)
                ;
                try
                {
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 62994, 63101);

                    var
                    localState = LocalState.Create(initialState.VariableNullableStates).CreateNestedMethodState(variables)
                    ;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 63119, 63194);

                    f_10899_63119_63193(walker, symbol, diagnostics, localState, snapshotBuilderOpt: null);
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinally(10899, 63223, 63292);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 63263, 63277);

                    f_10899_63263_63276(walker);
                    DynAbs.Tracing.TraceSender.TraceExitFinally(10899, 63223, 63292);
                }
                DynAbs.Tracing.TraceSender.TraceExitStaticMethod(10899, 61841, 63303);

                Microsoft.CodeAnalysis.CSharp.Symbols.LambdaSymbol
                f_10899_62244_62257(Microsoft.CodeAnalysis.CSharp.BoundLambda
                this_param)
                {
                    var return_v = this_param.Symbol;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 62244, 62257);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.NullableWalker.Variables
                f_10899_62288_62328(Microsoft.CodeAnalysis.CSharp.NullableWalker.VariablesSnapshot
                snapshot)
                {
                    var return_v = Variables.Create(snapshot);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 62288, 62328);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.NullableWalker.Variables
                f_10899_62288_62360(Microsoft.CodeAnalysis.CSharp.NullableWalker.Variables
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.LambdaSymbol
                method)
                {
                    var return_v = this_param.CreateNestedMethodScope((Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol)method);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 62288, 62360);
                    return return_v;
                }


                bool
                f_10899_62565_62629(Microsoft.CodeAnalysis.CSharp.BoundLambda
                lambda, Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol?
                delegateInvokeMethod)
                {
                    var return_v = UseDelegateInvokeParameterTypes(lambda, delegateInvokeMethod);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 62565, 62629);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundBlock
                f_10899_62715_62726(Microsoft.CodeAnalysis.CSharp.BoundLambda
                this_param)
                {
                    var return_v = this_param.Body;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 62715, 62726);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Binder
                f_10899_62745_62758(Microsoft.CodeAnalysis.CSharp.BoundLambda
                this_param)
                {
                    var return_v = this_param.Binder;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 62745, 62758);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.NullableWalker
                f_10899_62388_62943(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                compilation, Microsoft.CodeAnalysis.CSharp.Symbols.LambdaSymbol
                symbol, bool
                useConstructorExitWarnings, bool
                useDelegateInvokeParameterTypes, Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol?
                delegateInvokeMethodOpt, Microsoft.CodeAnalysis.CSharp.BoundBlock
                node, Microsoft.CodeAnalysis.CSharp.Binder
                binder, Microsoft.CodeAnalysis.CSharp.Conversions
                conversions, Microsoft.CodeAnalysis.CSharp.NullableWalker.Variables
                variables, Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<(Microsoft.CodeAnalysis.CSharp.BoundReturnStatement, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations)>?
                returnTypesOpt, System.Collections.Immutable.ImmutableDictionary<Microsoft.CodeAnalysis.CSharp.BoundExpression, (Microsoft.CodeAnalysis.NullabilityInfo, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?)>.Builder?
                analyzedNullabilityMapOpt, Microsoft.CodeAnalysis.CSharp.NullableWalker.SnapshotManager.Builder?
                snapshotBuilderOpt)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.NullableWalker(compilation, (Microsoft.CodeAnalysis.CSharp.Symbol)symbol, useConstructorExitWarnings: useConstructorExitWarnings, useDelegateInvokeParameterTypes: useDelegateInvokeParameterTypes, delegateInvokeMethodOpt: delegateInvokeMethodOpt, (Microsoft.CodeAnalysis.CSharp.BoundNode)node, binder, conversions, variables, returnTypesOpt, analyzedNullabilityMapOpt: analyzedNullabilityMapOpt, snapshotBuilderOpt: snapshotBuilderOpt);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 62388, 62943);
                    return return_v;
                }


                int
                f_10899_63119_63193(Microsoft.CodeAnalysis.CSharp.NullableWalker
                walker, Microsoft.CodeAnalysis.CSharp.Symbols.LambdaSymbol
                symbol, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState
                initialState, Microsoft.CodeAnalysis.CSharp.NullableWalker.SnapshotManager.Builder?
                snapshotBuilderOpt)
                {
                    Analyze(walker, (Microsoft.CodeAnalysis.CSharp.Symbol)symbol, diagnostics, (Microsoft.CodeAnalysis.Optional<Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState>)initialState, snapshotBuilderOpt: snapshotBuilderOpt);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 63119, 63193);
                    return 0;
                }


                int
                f_10899_63263_63276(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param)
                {
                    this_param.Free();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 63263, 63276);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 61841, 63303);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 61841, 63303);
            }
        }

        private static void Analyze(
                    CSharpCompilation compilation,
                    Symbol? symbol,
                    BoundNode node,
                    Binder binder,
                    Conversions conversions,
                    DiagnosticBag diagnostics,
                    bool useConstructorExitWarnings,
                    bool useDelegateInvokeParameterTypes,
                    MethodSymbol? delegateInvokeMethodOpt,
                    VariableState? initialState,
                    ImmutableDictionary<BoundExpression, (NullabilityInfo, TypeSymbol?)>.Builder? analyzedNullabilityMapOpt,
                    SnapshotManager.Builder? snapshotBuilderOpt,
                    ArrayBuilder<(BoundReturnStatement, TypeWithAnnotations)>? returnTypesOpt,
                    bool getFinalNullableState,
                    out VariableState? finalNullableState,
                    bool requiresAnalysis = true)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterStaticMethod(10899, 63315, 65636);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 64167, 64201);

                f_10899_64167_64200(diagnostics != null);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 64215, 65011);

                var
                walker = f_10899_64228_65010(compilation, symbol, useConstructorExitWarnings, useDelegateInvokeParameterTypes, delegateInvokeMethodOpt, node, binder, conversions, (DynAbs.Tracing.TraceSender.Conditional_F1(10899, 64741, 64761) || ((initialState is null && DynAbs.Tracing.TraceSender.Conditional_F2(10899, 64764, 64768)) || DynAbs.Tracing.TraceSender.Conditional_F3(10899, 64771, 64811))) ? null : f_10899_64771_64811(initialState.Variables), returnTypesOpt, analyzedNullabilityMapOpt, snapshotBuilderOpt)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 65027, 65053);

                finalNullableState = null;
                try
                {
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 65103, 65289);

                    f_10899_65103_65288(walker, symbol, diagnostics, (DynAbs.Tracing.TraceSender.Conditional_F1(10899, 65140, 65160) || ((initialState is null && DynAbs.Tracing.TraceSender.Conditional_F2(10899, 65163, 65192)) || DynAbs.Tracing.TraceSender.Conditional_F3(10899, 65195, 65249))) ? (Optional<LocalState>)default : LocalState.Create(initialState.VariableNullableStates), snapshotBuilderOpt, requiresAnalysis);

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 65307, 65527) || true) && (getFinalNullableState)
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 65307, 65527);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 65374, 65415);

                        f_10899_65374_65414(!walker.IsConditionalState);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 65437, 65508);

                        finalNullableState = f_10899_65458_65507(walker._variables, walker.State);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 65307, 65527);
                    }
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinally(10899, 65556, 65625);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 65596, 65610);

                    f_10899_65596_65609(walker);
                    DynAbs.Tracing.TraceSender.TraceExitFinally(10899, 65556, 65625);
                }
                DynAbs.Tracing.TraceSender.TraceExitStaticMethod(10899, 63315, 65636);

                int
                f_10899_64167_64200(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 64167, 64200);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.NullableWalker.Variables
                f_10899_64771_64811(Microsoft.CodeAnalysis.CSharp.NullableWalker.VariablesSnapshot
                snapshot)
                {
                    var return_v = Variables.Create(snapshot);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 64771, 64811);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.NullableWalker
                f_10899_64228_65010(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                compilation, Microsoft.CodeAnalysis.CSharp.Symbol?
                symbol, bool
                useConstructorExitWarnings, bool
                useDelegateInvokeParameterTypes, Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol?
                delegateInvokeMethodOpt, Microsoft.CodeAnalysis.CSharp.BoundNode
                node, Microsoft.CodeAnalysis.CSharp.Binder
                binder, Microsoft.CodeAnalysis.CSharp.Conversions
                conversions, Microsoft.CodeAnalysis.CSharp.NullableWalker.Variables?
                variables, Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<(Microsoft.CodeAnalysis.CSharp.BoundReturnStatement, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations)>?
                returnTypesOpt, System.Collections.Immutable.ImmutableDictionary<Microsoft.CodeAnalysis.CSharp.BoundExpression, (Microsoft.CodeAnalysis.NullabilityInfo, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?)>.Builder?
                analyzedNullabilityMapOpt, Microsoft.CodeAnalysis.CSharp.NullableWalker.SnapshotManager.Builder?
                snapshotBuilderOpt)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.NullableWalker(compilation, symbol, useConstructorExitWarnings, useDelegateInvokeParameterTypes, delegateInvokeMethodOpt, node, binder, conversions, variables, returnTypesOpt, analyzedNullabilityMapOpt, snapshotBuilderOpt);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 64228, 65010);
                    return return_v;
                }


                int
                f_10899_65103_65288(Microsoft.CodeAnalysis.CSharp.NullableWalker
                walker, Microsoft.CodeAnalysis.CSharp.Symbol?
                symbol, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.Optional<Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState>
                initialState, Microsoft.CodeAnalysis.CSharp.NullableWalker.SnapshotManager.Builder?
                snapshotBuilderOpt, bool
                requiresAnalysis)
                {
                    Analyze(walker, symbol, diagnostics, initialState, snapshotBuilderOpt, requiresAnalysis);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 65103, 65288);
                    return 0;
                }


                int
                f_10899_65374_65414(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 65374, 65414);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.NullableWalker.VariableState
                f_10899_65458_65507(Microsoft.CodeAnalysis.CSharp.NullableWalker.Variables
                variables, Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState
                localState)
                {
                    var return_v = GetVariableState(variables, localState);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 65458, 65507);
                    return return_v;
                }


                int
                f_10899_65596_65609(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param)
                {
                    this_param.Free();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 65596, 65609);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 63315, 65636);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 63315, 65636);
            }
        }

        private static void Analyze(
                    NullableWalker walker,
                    Symbol? symbol,
                    DiagnosticBag? diagnostics,
                    Optional<LocalState> initialState,
                    SnapshotManager.Builder? snapshotBuilderOpt,
                    bool requiresAnalysis = true)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterStaticMethod(10899, 65648, 66730);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 65956, 66017);

                f_10899_65956_66016(snapshotBuilderOpt is null || (DynAbs.Tracing.TraceSender.Expression_False(10899, 65969, 66015) || symbol is object));
                try
                {
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 66067, 66090);

                    bool
                    badRegion = false
                    ;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 66108, 66177);

                    var
                    previousSlot = f_10899_66127_66170_I(DynAbs.Tracing.TraceSender.TraceConditionalAccessExpression(snapshotBuilderOpt, 10899, 66127, 66170)?.EnterNewWalker(symbol!)) ?? (DynAbs.Tracing.TraceSender.Expression_Null<int?>(10899, 66127, 66176) ?? -1)
                    ;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 66195, 66279);

                    ImmutableArray<PendingBranch>
                    returns = f_10899_66235_66278(walker, ref badRegion, initialState)
                    ;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 66297, 66368);

                    DynAbs.Tracing.TraceSender.TraceInvocationWrapper(() => DynAbs.Tracing.TraceSender.TraceConditionalAccessExpression(snapshotBuilderOpt, 10899, 66297, 66367)?.ExitWalker(f_10899_66328_66352(walker), previousSlot), 10899, 66316, 66367);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 66386, 66428);

                    DynAbs.Tracing.TraceSender.TraceInvocationWrapper(() => DynAbs.Tracing.TraceSender.TraceConditionalAccessExpression(diagnostics, 10899, 66386, 66427)?.AddRange(f_10899_66408_66426(walker)), 10899, 66398, 66427);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 66446, 66471);

                    f_10899_66446_66470(!badRegion);
                }
                catch (CancelledByStackGuardException ex) when (diagnostics != null)
                {
                    DynAbs.Tracing.TraceSender.TraceEnterCatch(10899, 66500, 66643);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 66601, 66628);

                    f_10899_66601_66627(ex, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceExitCatch(10899, 66500, 66643);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 66659, 66719);

                f_10899_66659_66718(
                            walker, symbol, requiresAnalysis);
                DynAbs.Tracing.TraceSender.TraceExitStaticMethod(10899, 65648, 66730);

                int
                f_10899_65956_66016(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 65956, 66016);
                    return 0;
                }


                int?
                f_10899_66127_66170_I(int?
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 66127, 66170);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.AbstractFlowPass<Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState, Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalFunctionState>.PendingBranch>
                f_10899_66235_66278(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, ref bool
                badRegion, Microsoft.CodeAnalysis.Optional<Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState>
                initialState)
                {
                    var return_v = this_param.Analyze(ref badRegion, initialState);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 66235, 66278);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.NullableWalker.SharedWalkerState
                f_10899_66328_66352(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param)
                {
                    var return_v = this_param.SaveSharedState();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 66328, 66352);
                    return return_v;
                }


                Microsoft.CodeAnalysis.DiagnosticBag
                f_10899_66408_66426(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param)
                {
                    var return_v = this_param.Diagnostics;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 66408, 66426);
                    return return_v;
                }


                int
                f_10899_66446_66470(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 66446, 66470);
                    return 0;
                }


                int
                f_10899_66601_66627(Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor.CancelledByStackGuardException
                this_param, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    this_param.AddAnError(diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 66601, 66627);
                    return 0;
                }


                int
                f_10899_66659_66718(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.Symbol?
                symbol, bool
                requiredAnalysis)
                {
                    this_param.RecordNullableAnalysisData(symbol, requiredAnalysis);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 66659, 66718);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 65648, 66730);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 65648, 66730);
            }
        }

        private void RecordNullableAnalysisData(Symbol? symbol, bool requiredAnalysis)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 66742, 67348);
                Microsoft.CodeAnalysis.CSharp.NullableWalker.Data result = default(Microsoft.CodeAnalysis.CSharp.NullableWalker.Data);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 66845, 67337) || true) && (compilation.NullableAnalysisData is { } state)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 66845, 67337);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 66928, 66979);

                    var
                    key = (object?)symbol ?? (DynAbs.Tracing.TraceSender.Expression_Null<object?>(10899, 66938, 66978) ?? methodMainNode.Syntax)
                    ;

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 66997, 67322) || true) && (f_10899_67001_67039(state, key, out result))
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 66997, 67322);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 67081, 67139);

                        f_10899_67081_67138(result.RequiredAnalysis == requiredAnalysis);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 66997, 67322);
                    }

                    else

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 66997, 67322);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 67221, 67303);

                        f_10899_67221_67302(state, key, f_10899_67239_67301(f_10899_67248_67282(_variables), requiredAnalysis));
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 66997, 67322);
                    }
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 66845, 67337);
                }
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 66742, 67348);

                bool
                f_10899_67001_67039(System.Collections.Concurrent.ConcurrentDictionary<object, Microsoft.CodeAnalysis.CSharp.NullableWalker.Data>
                this_param, object
                key, out Microsoft.CodeAnalysis.CSharp.NullableWalker.Data
                value)
                {
                    var return_v = this_param.TryGetValue(key, out value);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 67001, 67039);
                    return return_v;
                }


                int
                f_10899_67081_67138(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 67081, 67138);
                    return 0;
                }


                int
                f_10899_67248_67282(Microsoft.CodeAnalysis.CSharp.NullableWalker.Variables
                this_param)
                {
                    var return_v = this_param.GetTotalVariableCount();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 67248, 67282);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.NullableWalker.Data
                f_10899_67239_67301(int
                trackedEntries, bool
                requiredAnalysis)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.NullableWalker.Data(trackedEntries, requiredAnalysis);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 67239, 67301);
                    return return_v;
                }


                bool
                f_10899_67221_67302(System.Collections.Concurrent.ConcurrentDictionary<object, Microsoft.CodeAnalysis.CSharp.NullableWalker.Data>
                this_param, object
                key, Microsoft.CodeAnalysis.CSharp.NullableWalker.Data
                value)
                {
                    var return_v = this_param.TryAdd(key, value);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 67221, 67302);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 66742, 67348);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 66742, 67348);
            }
        }

        private SharedWalkerState SaveSharedState()
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 67360, 67497);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 67428, 67486);

                return f_10899_67435_67485(f_10899_67457_67484(_variables));
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 67360, 67497);

                Microsoft.CodeAnalysis.CSharp.NullableWalker.VariablesSnapshot
                f_10899_67457_67484(Microsoft.CodeAnalysis.CSharp.NullableWalker.Variables
                this_param)
                {
                    var return_v = this_param.CreateSnapshot();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 67457, 67484);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.NullableWalker.SharedWalkerState
                f_10899_67435_67485(Microsoft.CodeAnalysis.CSharp.NullableWalker.VariablesSnapshot
                variables)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.NullableWalker.SharedWalkerState(variables);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 67435, 67485);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 67360, 67497);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 67360, 67497);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private void TakeIncrementalSnapshot(BoundNode? node)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 67509, 67704);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 67587, 67621);

                f_10899_67587_67620(!IsConditionalState);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 67635, 67693);

                DynAbs.Tracing.TraceSender.TraceInvocationWrapper(() => DynAbs.Tracing.TraceSender.TraceConditionalAccessExpression(_snapshotBuilderOpt, 10899, 67635, 67692)?.TakeIncrementalSnapshot(node, State), 10899, 67655, 67692);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 67509, 67704);

                int
                f_10899_67587_67620(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 67587, 67620);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 67509, 67704);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 67509, 67704);
            }
        }

        private void SetUpdatedSymbol(BoundNode node, Symbol originalSymbol, Symbol updatedSymbol)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 67716, 69281);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 67831, 67918) || true) && (_snapshotBuilderOpt is null)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 67831, 67918);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 67896, 67903);

                    return;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 67831, 67918);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 67934, 67965);

                var
                lambdaIsExactMatch = false
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 67979, 68381) || true) && (node is BoundLambda boundLambda && (DynAbs.Tracing.TraceSender.Expression_True(10899, 67983, 68050) && originalSymbol is LambdaSymbol l) && (DynAbs.Tracing.TraceSender.Expression_True(10899, 67983, 68088) && updatedSymbol is NamedTypeSymbol n))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 67979, 68381);

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 68122, 68231) || true) && (!f_10899_68127_68163(l, n))
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 68122, 68231);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 68205, 68212);

                        return;
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 68122, 68231);
                    }
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 68251, 68366);

                    lambdaIsExactMatch = f_10899_68272_68365(updatedSymbol, f_10899_68293_68328(boundLambda.Type!), TypeCompareKind.ConsiderEverything);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 67979, 68381);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 68408, 68437);

                f_10899_68408_68436(node is object);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 68451, 68624);

                f_10899_68451_68623(f_10899_68464_68509(originalSymbol, updatedSymbol), $"Attempting to set {node.Syntax} from {f_10899_68551_68583(originalSymbol)} to {f_10899_68589_68620(updatedSymbol)}");

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 68648, 69270) || true) && (lambdaIsExactMatch || (DynAbs.Tracing.TraceSender.Expression_False(10899, 68652, 68754) || f_10899_68674_68754(originalSymbol, updatedSymbol, TypeCompareKind.ConsiderEverything)))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 68648, 69270);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 69051, 69115);

                    f_10899_69051_69114(                // If the symbol is reset, remove the updated symbol so we don't needlessly update the
                                                        // bound node later on. We do this unconditionally, as Remove will just return false
                                                        // if the key wasn't in the dictionary.
                                    _snapshotBuilderOpt, node, originalSymbol);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 68648, 69270);
                }

                else

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 68648, 69270);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 69181, 69255);

                    f_10899_69181_69254(_snapshotBuilderOpt, node, originalSymbol, updatedSymbol);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 68648, 69270);
                }
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 67716, 69281);

                bool
                f_10899_68127_68163(Microsoft.CodeAnalysis.CSharp.Symbols.LambdaSymbol
                l, Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                n)
                {
                    var return_v = AreLambdaAndNewDelegateSimilar(l, n);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 68127, 68163);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol?
                f_10899_68293_68328(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                type)
                {
                    var return_v = type.GetDelegateType();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 68293, 68328);
                    return return_v;
                }


                bool
                f_10899_68272_68365(Microsoft.CodeAnalysis.CSharp.Symbol
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol?
                other, Microsoft.CodeAnalysis.TypeCompareKind
                compareKind)
                {
                    var return_v = this_param.Equals((Microsoft.CodeAnalysis.CSharp.Symbol?)other, compareKind);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 68272, 68365);
                    return return_v;
                }


                int
                f_10899_68408_68436(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 68408, 68436);
                    return 0;
                }


                bool
                f_10899_68464_68509(Microsoft.CodeAnalysis.CSharp.Symbol
                original, Microsoft.CodeAnalysis.CSharp.Symbol
                updated)
                {
                    var return_v = AreCloseEnough(original, updated);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 68464, 68509);
                    return return_v;
                }


                string
                f_10899_68551_68583(Microsoft.CodeAnalysis.CSharp.Symbol
                this_param)
                {
                    var return_v = this_param.ToDisplayString();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 68551, 68583);
                    return return_v;
                }


                string
                f_10899_68589_68620(Microsoft.CodeAnalysis.CSharp.Symbol
                this_param)
                {
                    var return_v = this_param.ToDisplayString();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 68589, 68620);
                    return return_v;
                }


                int
                f_10899_68451_68623(bool
                condition, string
                message)
                {
                    Debug.Assert(condition, message);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 68451, 68623);
                    return 0;
                }


                bool
                f_10899_68674_68754(Microsoft.CodeAnalysis.CSharp.Symbol
                first, Microsoft.CodeAnalysis.CSharp.Symbol
                second, Microsoft.CodeAnalysis.TypeCompareKind
                compareKind)
                {
                    var return_v = Symbol.Equals(first, second, compareKind);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 68674, 68754);
                    return return_v;
                }


                int
                f_10899_69051_69114(Microsoft.CodeAnalysis.CSharp.NullableWalker.SnapshotManager.Builder
                this_param, Microsoft.CodeAnalysis.CSharp.BoundNode
                node, Microsoft.CodeAnalysis.CSharp.Symbol
                symbol)
                {
                    this_param.RemoveSymbolIfPresent(node, symbol);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 69051, 69114);
                    return 0;
                }


                int
                f_10899_69181_69254(Microsoft.CodeAnalysis.CSharp.NullableWalker.SnapshotManager.Builder
                this_param, Microsoft.CodeAnalysis.CSharp.BoundNode
                node, Microsoft.CodeAnalysis.CSharp.Symbol
                originalSymbol, Microsoft.CodeAnalysis.CSharp.Symbol
                updatedSymbol)
                {
                    this_param.SetUpdatedSymbol(node, originalSymbol, updatedSymbol);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 69181, 69254);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 67716, 69281);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 67716, 69281);
            }
        }

        protected override void Normalize(ref LocalState state)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 69293, 69480);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 69373, 69419) || true) && (f_10899_69377_69393_M(!state.Reachable))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 69373, 69419);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 69412, 69419);

                    return;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 69373, 69419);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 69435, 69469);

                state.Normalize(this, _variables);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 69293, 69480);

                bool
                f_10899_69377_69393_M(bool
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 69377, 69393);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 69293, 69480);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 69293, 69480);
            }
        }

        private NullableFlowState GetDefaultState(ref LocalState state, int slot)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 69492, 71170);
                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations localType = default(Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations);
                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations parameterType = default(Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 69590, 69613);

                f_10899_69590_69612(slot > 0);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 69629, 69701) || true) && (f_10899_69633_69649_M(!state.Reachable))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 69629, 69701);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 69668, 69701);

                    return NullableFlowState.NotNull;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 69629, 69701);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 69717, 69749);

                var
                variable = f_10899_69732_69748(_variables, slot)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 69763, 69792);

                var
                symbol = variable.Symbol
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 69808, 71159);

                switch (f_10899_69816_69827(symbol))
                {

                    case SymbolKind.Local:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 69808, 71159);
                        {
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 69932, 69964);

                            var
                            local = (LocalSymbol)symbol
                            ;

                            if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 69990, 70181) || true) && (!f_10899_69995_70058(_variables, local, out localType))
                            )

                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 69990, 70181);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 70116, 70154);

                                localType = f_10899_70128_70153(local);
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 69990, 70181);
                            }
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 70207, 70248);

                            return localType.ToTypeWithState().State;
                        }
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 69808, 71159);

                    case SymbolKind.Parameter:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 69808, 71159);
                        {
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 70364, 70404);

                            var
                            parameter = (ParameterSymbol)symbol
                            ;

                            if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 70430, 70637) || true) && (!f_10899_70435_70506(_variables, parameter, out parameterType))
                            )

                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 70430, 70637);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 70564, 70610);

                                parameterType = f_10899_70580_70609(parameter);
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 70430, 70637);
                            }
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 70663, 70744);

                            return f_10899_70670_70737(parameterType, f_10899_70703_70736(parameter)).State;
                        }
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 69808, 71159);

                    case SymbolKind.Field:
                    case SymbolKind.Property:
                    case SymbolKind.Event:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 69808, 71159);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 70912, 70943);

                        return f_10899_70919_70942(this, symbol);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 69808, 71159);

                    case SymbolKind.ErrorType:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 69808, 71159);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 71009, 71042);

                        return NullableFlowState.NotNull;
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 69808, 71159);

                    default:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 69808, 71159);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 71090, 71144);

                        throw f_10899_71096_71143(f_10899_71131_71142(symbol));
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 69808, 71159);
                }
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 69492, 71170);

                int
                f_10899_69590_69612(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 69590, 69612);
                    return 0;
                }


                bool
                f_10899_69633_69649_M(bool
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 69633, 69649);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.LocalDataFlowPass<Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState, Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalFunctionState>.VariableIdentifier
                f_10899_69732_69748(Microsoft.CodeAnalysis.CSharp.NullableWalker.Variables
                this_param, int
                i0)
                {
                    var return_v = this_param[i0];
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 69732, 69748);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SymbolKind
                f_10899_69816_69827(Microsoft.CodeAnalysis.CSharp.Symbol
                this_param)
                {
                    var return_v = this_param.Kind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 69816, 69827);
                    return return_v;
                }


                bool
                f_10899_69995_70058(Microsoft.CodeAnalysis.CSharp.NullableWalker.Variables
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.LocalSymbol
                symbol, out Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                type)
                {
                    var return_v = this_param.TryGetType((Microsoft.CodeAnalysis.CSharp.Symbol)symbol, out type);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 69995, 70058);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                f_10899_70128_70153(Microsoft.CodeAnalysis.CSharp.Symbols.LocalSymbol
                this_param)
                {
                    var return_v = this_param.TypeWithAnnotations;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 70128, 70153);
                    return return_v;
                }


                bool
                f_10899_70435_70506(Microsoft.CodeAnalysis.CSharp.NullableWalker.Variables
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol
                symbol, out Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                type)
                {
                    var return_v = this_param.TryGetType((Microsoft.CodeAnalysis.CSharp.Symbol)symbol, out type);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 70435, 70506);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                f_10899_70580_70609(Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol
                this_param)
                {
                    var return_v = this_param.TypeWithAnnotations;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 70580, 70609);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.FlowAnalysisAnnotations
                f_10899_70703_70736(Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol
                this_param)
                {
                    var return_v = this_param.FlowAnalysisAnnotations;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 70703, 70736);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                f_10899_70670_70737(Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                parameterType, Microsoft.CodeAnalysis.CSharp.Symbols.FlowAnalysisAnnotations
                parameterAnnotations)
                {
                    var return_v = GetParameterState(parameterType, parameterAnnotations);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 70670, 70737);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.NullableFlowState
                f_10899_70919_70942(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.Symbol
                symbol)
                {
                    var return_v = this_param.GetDefaultState(symbol);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 70919, 70942);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SymbolKind
                f_10899_71131_71142(Microsoft.CodeAnalysis.CSharp.Symbol
                this_param)
                {
                    var return_v = this_param.Kind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 71131, 71142);
                    return return_v;
                }


                System.Exception
                f_10899_71096_71143(Microsoft.CodeAnalysis.SymbolKind
                o)
                {
                    var return_v = ExceptionUtilities.UnexpectedValue((object)o);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 71096, 71143);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 69492, 71170);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 69492, 71170);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        protected override bool TryGetReceiverAndMember(BoundExpression expr, out BoundExpression? receiver, [NotNullWhen(true)] out Symbol? member)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 71182, 73606);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 71347, 71363);

                receiver = null;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 71377, 71391);

                member = null;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 71407, 73271);

                switch (f_10899_71415_71424(expr))
                {

                    case BoundKind.FieldAccess:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 71407, 73271);
                        {
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 71534, 71575);

                            var
                            fieldAccess = (BoundFieldAccess)expr
                            ;
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 71601, 71643);

                            var
                            fieldSymbol = f_10899_71619_71642(fieldAccess)
                            ;
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 71669, 71690);

                            member = fieldSymbol;

                            if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 71716, 71847) || true) && (f_10899_71720_71749(fieldSymbol))
                            )

                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 71716, 71847);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 71807, 71820);

                                return false;
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 71716, 71847);
                            }

                            if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 71873, 71994) || true) && (f_10899_71877_71897(fieldSymbol))
                            )

                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 71873, 71994);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 71955, 71967);

                                return true;
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 71873, 71994);
                            }
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 72020, 72055);

                            receiver = f_10899_72031_72054(fieldAccess);
                            DynAbs.Tracing.TraceSender.TraceBreak(10899, 72081, 72087);

                            break;
                        }
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 71407, 73271);

                    case BoundKind.EventAccess:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 71407, 73271);
                        {
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 72204, 72245);

                            var
                            eventAccess = (BoundEventAccess)expr
                            ;
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 72271, 72313);

                            var
                            eventSymbol = f_10899_72289_72312(eventAccess)
                            ;
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 72456, 72477);

                            member = eventSymbol;

                            if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 72503, 72624) || true) && (f_10899_72507_72527(eventSymbol))
                            )

                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 72503, 72624);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 72585, 72597);

                                return true;
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 72503, 72624);
                            }
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 72650, 72685);

                            receiver = f_10899_72661_72684(eventAccess);
                            DynAbs.Tracing.TraceSender.TraceBreak(10899, 72711, 72717);

                            break;
                        }
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 71407, 73271);

                    case BoundKind.PropertyAccess:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 71407, 73271);
                        {
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 72837, 72880);

                            var
                            propAccess = (BoundPropertyAccess)expr
                            ;
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 72906, 72949);

                            var
                            propSymbol = f_10899_72923_72948(propAccess)
                            ;
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 72975, 72995);

                            member = propSymbol;

                            if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 73021, 73141) || true) && (f_10899_73025_73044(propSymbol))
                            )

                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 73021, 73141);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 73102, 73114);

                                return true;
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 73021, 73141);
                            }
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 73167, 73201);

                            receiver = f_10899_73178_73200(propAccess);
                            DynAbs.Tracing.TraceSender.TraceBreak(10899, 73227, 73233);

                            break;
                        }
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 71407, 73271);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 73310, 73410);

                f_10899_73310_73409(((DynAbs.Tracing.TraceSender.Conditional_F1(10899, 73324, 73342) || ((member is not null && DynAbs.Tracing.TraceSender.Conditional_F2(10899, 73345, 73385)) || DynAbs.Tracing.TraceSender.Conditional_F3(10899, 73388, 73399))) ? (bool?)f_10899_73352_73385(member) : (bool?)null) ?? (DynAbs.Tracing.TraceSender.Expression_Null<bool?>(10899, 73323, 73408) ?? true));
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 73426, 73595);

                return member is object && (DynAbs.Tracing.TraceSender.Expression_True(10899, 73433, 73488) && receiver is object) && (DynAbs.Tracing.TraceSender.Expression_True(10899, 73433, 73550) && f_10899_73509_73522(receiver) != BoundKind.TypeExpression) && (DynAbs.Tracing.TraceSender.Expression_True(10899, 73433, 73594) && f_10899_73571_73584(receiver) is object);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 71182, 73606);

                Microsoft.CodeAnalysis.CSharp.BoundKind
                f_10899_71415_71424(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.Kind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 71415, 71424);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol
                f_10899_71619_71642(Microsoft.CodeAnalysis.CSharp.BoundFieldAccess
                this_param)
                {
                    var return_v = this_param.FieldSymbol;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 71619, 71642);
                    return return_v;
                }


                bool
                f_10899_71720_71749(Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol
                this_param)
                {
                    var return_v = this_param.IsFixedSizeBuffer;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 71720, 71749);
                    return return_v;
                }


                bool
                f_10899_71877_71897(Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol
                this_param)
                {
                    var return_v = this_param.IsStatic;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 71877, 71897);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression?
                f_10899_72031_72054(Microsoft.CodeAnalysis.CSharp.BoundFieldAccess
                this_param)
                {
                    var return_v = this_param.ReceiverOpt;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 72031, 72054);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.EventSymbol
                f_10899_72289_72312(Microsoft.CodeAnalysis.CSharp.BoundEventAccess
                this_param)
                {
                    var return_v = this_param.EventSymbol;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 72289, 72312);
                    return return_v;
                }


                bool
                f_10899_72507_72527(Microsoft.CodeAnalysis.CSharp.Symbols.EventSymbol
                this_param)
                {
                    var return_v = this_param.IsStatic;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 72507, 72527);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression?
                f_10899_72661_72684(Microsoft.CodeAnalysis.CSharp.BoundEventAccess
                this_param)
                {
                    var return_v = this_param.ReceiverOpt;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 72661, 72684);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol
                f_10899_72923_72948(Microsoft.CodeAnalysis.CSharp.BoundPropertyAccess
                this_param)
                {
                    var return_v = this_param.PropertySymbol;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 72923, 72948);
                    return return_v;
                }


                bool
                f_10899_73025_73044(Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol
                this_param)
                {
                    var return_v = this_param.IsStatic;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 73025, 73044);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression?
                f_10899_73178_73200(Microsoft.CodeAnalysis.CSharp.BoundPropertyAccess
                this_param)
                {
                    var return_v = this_param.ReceiverOpt;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 73178, 73200);
                    return return_v;
                }


                bool
                f_10899_73352_73385(Microsoft.CodeAnalysis.CSharp.Symbol
                symbol)
                {
                    var return_v = symbol.RequiresInstanceReceiver();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 73352, 73385);
                    return return_v;
                }


                int
                f_10899_73310_73409(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 73310, 73409);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.BoundKind
                f_10899_73509_73522(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.Kind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 73509, 73522);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?
                f_10899_73571_73584(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 73571, 73584);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 71182, 73606);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 71182, 73606);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        protected override int MakeSlot(BoundExpression node)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 73618, 79595);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 73696, 73724);

                int
                result = f_10899_73709_73723(node)
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 73749, 74520) || true) && (result != -1)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 73749, 74520);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 73892, 73938);

                    TypeSymbol
                    slotType = f_10899_73914_73937(this, result)
                    ;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 73956, 73989);

                    TypeSymbol?
                    nodeType = f_10899_73979_73988(node)
                    ;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 74007, 74067);

                    HashSet<DiagnosticInfo>?
                    discardedUseSiteDiagnostics = null
                    ;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 74085, 74150);

                    var
                    conversionsWithoutNullability = f_10899_74121_74149(this.compilation)
                    ;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 74168, 74505);

                    f_10899_74168_74504(f_10899_74181_74195(node) || (DynAbs.Tracing.TraceSender.Expression_False(10899, 74181, 74222) || f_10899_74199_74222(nodeType!)) || (DynAbs.Tracing.TraceSender.Expression_False(10899, 74181, 74373) || f_10899_74250_74373(conversionsWithoutNullability, slotType, nodeType, ref discardedUseSiteDiagnostics)) || (DynAbs.Tracing.TraceSender.Expression_False(10899, 74181, 74503) || f_10899_74401_74503(conversionsWithoutNullability, slotType, nodeType, ref discardedUseSiteDiagnostics)));
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 73749, 74520);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 74542, 74556);

                return result;

                int makeSlot(BoundExpression node)
                {
                    try
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 74572, 78768);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 74639, 78723);

                        switch (f_10899_74647_74656(node))
                        {

                            case BoundKind.ThisReference:
                            case BoundKind.BaseReference:
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 74639, 78723);
                                {
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 74835, 74891);

                                    var
                                    method = f_10899_74848_74890(_symbol as MethodSymbol)
                                    ;
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 74921, 74963);

                                    var
                                    thisParameter = f_10899_74941_74962_M(DynAbs.Tracing.TraceSender.TraceConditionalAccessExpression(method, 10899, 74941, 74962)?.ThisParameter)
                                    ;
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 74993, 75062);

                                    return (DynAbs.Tracing.TraceSender.Conditional_F1(10899, 75000, 75023) || ((thisParameter is object && DynAbs.Tracing.TraceSender.Conditional_F2(10899, 75026, 75056)) || DynAbs.Tracing.TraceSender.Conditional_F3(10899, 75059, 75061))) ? f_10899_75026_75056(this, thisParameter) : -1;
                                }
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 74639, 78723);

                            case BoundKind.Conversion:
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 74639, 78723);
                                {
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 75194, 75230);

                                    int
                                    slot = f_10899_75205_75229(node)
                                    ;

                                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 75260, 75381) || true) && (slot > 0)
                                    )

                                    {
                                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 75260, 75381);
                                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 75338, 75350);

                                        return slot;
                                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 75260, 75381);
                                    }
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 75411, 75444);

                                    var
                                    conv = (BoundConversion)node
                                    ;
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 75474, 77670);

                                    switch (conv.Conversion.Kind)
                                    {

                                        case ConversionKind.ExplicitNullable:
                                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 75474, 77670);
                                            {
                                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 75686, 75713);

                                                var
                                                operand = f_10899_75700_75712(conv)
                                                ;
                                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 75755, 75786);

                                                var
                                                operandType = f_10899_75773_75785(operand)
                                                ;
                                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 75828, 75858);

                                                var
                                                convertedType = f_10899_75848_75857(conv)
                                                ;

                                                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 75900, 76893) || true) && (f_10899_75904_75968(operandType, convertedType, out _))
                                                )

                                                {
                                                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 75900, 76893);
                                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 76672, 76711);

                                                    int
                                                    containingSlot = f_10899_76693_76710(this, operand)
                                                    ;
                                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 76757, 76850);

                                                    return (DynAbs.Tracing.TraceSender.Conditional_F1(10899, 76764, 76782) || ((containingSlot < 0 && DynAbs.Tracing.TraceSender.Conditional_F2(10899, 76785, 76787)) || DynAbs.Tracing.TraceSender.Conditional_F3(10899, 76790, 76849))) ? -1 : f_10899_76790_76849(this, operandType, containingSlot, out _);
                                                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 75900, 76893);
                                                }
                                            }
                                            DynAbs.Tracing.TraceSender.TraceBreak(10899, 76970, 76976);

                                            break;
                                            DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 75474, 77670);

                                        case ConversionKind.Identity:
                                        case ConversionKind.DefaultLiteral:
                                        case ConversionKind.ImplicitReference:
                                        case ConversionKind.ImplicitTupleLiteral:
                                        case ConversionKind.Boxing:
                                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 75474, 77670);
                                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 77609, 77639);

                                            return f_10899_77616_77638(this, f_10899_77625_77637(conv));
                                            DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 75474, 77670);
                                    }
                                }
                                DynAbs.Tracing.TraceSender.TraceBreak(10899, 77723, 77729);

                                break;
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 74639, 78723);

                            case BoundKind.DefaultLiteral:
                            case BoundKind.DefaultExpression:
                            case BoundKind.ObjectCreationExpression:
                            case BoundKind.DynamicObjectCreationExpression:
                            case BoundKind.AnonymousObjectCreationExpression:
                            case BoundKind.NewT:
                            case BoundKind.TupleLiteral:
                            case BoundKind.ConvertedTupleLiteral:
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 74639, 78723);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 78215, 78247);

                                return f_10899_78222_78246(node);
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 74639, 78723);

                            case BoundKind.ConditionalAccess:
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 74639, 78723);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 78328, 78360);

                                return f_10899_78335_78359(node);
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 74639, 78723);

                            case BoundKind.ConditionalReceiver:
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 74639, 78723);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 78443, 78477);

                                return _lastConditionalAccessSlot;
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 74639, 78723);

                            default:
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 74639, 78723);
                                {
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 78564, 78600);

                                    int
                                    slot = f_10899_78575_78599(node)
                                    ;
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 78630, 78677);

                                    return (DynAbs.Tracing.TraceSender.Conditional_F1(10899, 78637, 78647) || (((slot > 0) && DynAbs.Tracing.TraceSender.Conditional_F2(10899, 78650, 78654)) || DynAbs.Tracing.TraceSender.Conditional_F3(10899, 78657, 78676))) ? slot : DynAbs.Tracing.TraceSender.TraceInvocationWrapper(() => base.MakeSlot(node), 10899, 78657, 78676);
                                }
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 74639, 78723);
                        }
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 78743, 78753);

                        return -1;
                        DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 74572, 78768);

                        Microsoft.CodeAnalysis.CSharp.BoundKind
                        f_10899_74647_74656(Microsoft.CodeAnalysis.CSharp.BoundExpression
                        this_param)
                        {
                            var return_v = this_param.Kind;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 74647, 74656);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol?
                        f_10899_74848_74890(Microsoft.CodeAnalysis.CSharp.Symbol
                        method)
                        {
                            var return_v = getTopLevelMethod((Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol?)method);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 74848, 74890);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol?
                        f_10899_74941_74962_M(Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol?
                        i)
                        {
                            var return_v = i;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 74941, 74962);
                            return return_v;
                        }


                        int
                        f_10899_75026_75056(Microsoft.CodeAnalysis.CSharp.NullableWalker
                        this_param, Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol
                        symbol)
                        {
                            var return_v = this_param.GetOrCreateSlot((Microsoft.CodeAnalysis.CSharp.Symbol)symbol);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 75026, 75056);
                            return return_v;
                        }


                        int
                        f_10899_75205_75229(Microsoft.CodeAnalysis.CSharp.BoundExpression
                        expr)
                        {
                            var return_v = getPlaceholderSlot(expr);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 75205, 75229);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.CSharp.BoundExpression
                        f_10899_75700_75712(Microsoft.CodeAnalysis.CSharp.BoundConversion
                        this_param)
                        {
                            var return_v = this_param.Operand;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 75700, 75712);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?
                        f_10899_75773_75785(Microsoft.CodeAnalysis.CSharp.BoundExpression
                        this_param)
                        {
                            var return_v = this_param.Type;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 75773, 75785);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                        f_10899_75848_75857(Microsoft.CodeAnalysis.CSharp.BoundConversion
                        this_param)
                        {
                            var return_v = this_param.Type;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 75848, 75857);
                            return return_v;
                        }


                        bool
                        f_10899_75904_75968(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?
                        nullableTypeOpt, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                        underlyingTypeOpt, out Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                        underlyingTypeWithAnnotations)
                        {
                            var return_v = AreNullableAndUnderlyingTypes(nullableTypeOpt, underlyingTypeOpt, out underlyingTypeWithAnnotations);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 75904, 75968);
                            return return_v;
                        }


                        int
                        f_10899_76693_76710(Microsoft.CodeAnalysis.CSharp.NullableWalker
                        this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                        node)
                        {
                            var return_v = this_param.MakeSlot(node);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 76693, 76710);
                            return return_v;
                        }


                        int
                        f_10899_76790_76849(Microsoft.CodeAnalysis.CSharp.NullableWalker
                        this_param, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                        containingType, int
                        containingSlot, out Microsoft.CodeAnalysis.CSharp.Symbol?
                        valueProperty)
                        {
                            var return_v = this_param.GetNullableOfTValueSlot(containingType, containingSlot, out valueProperty);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 76790, 76849);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.CSharp.BoundExpression
                        f_10899_77625_77637(Microsoft.CodeAnalysis.CSharp.BoundConversion
                        this_param)
                        {
                            var return_v = this_param.Operand;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 77625, 77637);
                            return return_v;
                        }


                        int
                        f_10899_77616_77638(Microsoft.CodeAnalysis.CSharp.NullableWalker
                        this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                        node)
                        {
                            var return_v = this_param.MakeSlot(node);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 77616, 77638);
                            return return_v;
                        }


                        int
                        f_10899_78222_78246(Microsoft.CodeAnalysis.CSharp.BoundExpression
                        expr)
                        {
                            var return_v = getPlaceholderSlot(expr);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 78222, 78246);
                            return return_v;
                        }


                        int
                        f_10899_78335_78359(Microsoft.CodeAnalysis.CSharp.BoundExpression
                        expr)
                        {
                            var return_v = getPlaceholderSlot(expr);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 78335, 78359);
                            return return_v;
                        }


                        int
                        f_10899_78575_78599(Microsoft.CodeAnalysis.CSharp.BoundExpression
                        expr)
                        {
                            var return_v = getPlaceholderSlot(expr);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 78575, 78599);
                            return return_v;
                        }

                    }
                    catch
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 74572, 78768);
                        throw;
                    }
                    finally
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 74572, 78768);
                    }
                    throw new System.Exception("Slicer error: unreachable code");
                }

                int getPlaceholderSlot(BoundExpression expr)
                {
                    try
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 78784, 79098);
                        Microsoft.CodeAnalysis.CSharp.NullableWalker.PlaceholderLocal placeholder = default(Microsoft.CodeAnalysis.CSharp.NullableWalker.PlaceholderLocal);

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 78861, 79055) || true) && (_placeholderLocalsOpt != null && (DynAbs.Tracing.TraceSender.Expression_True(10899, 78865, 78958) && f_10899_78898_78958(_placeholderLocalsOpt, expr, out placeholder)))
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 78861, 79055);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 79000, 79036);

                            return f_10899_79007_79035(this, placeholder);
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 78861, 79055);
                        }
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 79073, 79083);

                        return -1;
                        DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 78784, 79098);

                        bool
                        f_10899_78898_78958(Microsoft.CodeAnalysis.PooledObjects.PooledDictionary<object, Microsoft.CodeAnalysis.CSharp.NullableWalker.PlaceholderLocal>
                        this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                        key, out Microsoft.CodeAnalysis.CSharp.NullableWalker.PlaceholderLocal
                        value)
                        {
                            var return_v = this_param.TryGetValue((object)key, out value);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 78898, 78958);
                            return return_v;
                        }


                        int
                        f_10899_79007_79035(Microsoft.CodeAnalysis.CSharp.NullableWalker
                        this_param, Microsoft.CodeAnalysis.CSharp.NullableWalker.PlaceholderLocal
                        symbol)
                        {
                            var return_v = this_param.GetOrCreateSlot((Microsoft.CodeAnalysis.CSharp.Symbol)symbol);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 79007, 79035);
                            return return_v;
                        }

                    }
                    catch
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 78784, 79098);
                        throw;
                    }
                    finally
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 78784, 79098);
                    }
                    throw new System.Exception("Slicer error: unreachable code");
                }

                static MethodSymbol? getTopLevelMethod(MethodSymbol? method)
                {
                    try
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterStaticMethod(10899, 79114, 79584);
                        try
                        {
                            while ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 79207, 79539) || true) && (method is object)
                            )

                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 79207, 79539);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 79272, 79312);

                                var
                                container = f_10899_79288_79311(method)
                                ;

                                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 79334, 79463) || true) && (f_10899_79338_79352(container) == SymbolKind.NamedType)
                                )

                                {
                                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 79334, 79463);
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 79426, 79440);

                                    return method;
                                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 79334, 79463);
                                }
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 79485, 79520);

                                method = container as MethodSymbol;
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 79207, 79539);
                            }
                        }
                        catch (System.Exception)
                        {
                            DynAbs.Tracing.TraceSender.TraceExitLoopByException(10899, 79207, 79539);
                            throw;
                        }
                        finally
                        {
                            DynAbs.Tracing.TraceSender.TraceExitLoop(10899, 79207, 79539);
                        }
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 79557, 79569);

                        return null;
                        DynAbs.Tracing.TraceSender.TraceExitStaticMethod(10899, 79114, 79584);

                        Microsoft.CodeAnalysis.CSharp.Symbol
                        f_10899_79288_79311(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                        this_param)
                        {
                            var return_v = this_param.ContainingSymbol;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 79288, 79311);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.SymbolKind
                        f_10899_79338_79352(Microsoft.CodeAnalysis.CSharp.Symbol
                        this_param)
                        {
                            var return_v = this_param.Kind;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 79338, 79352);
                            return return_v;
                        }

                    }
                    catch
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 79114, 79584);
                        throw;
                    }
                    finally
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 79114, 79584);
                    }
                    throw new System.Exception("Slicer error: unreachable code");
                }
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 73618, 79595);

                int
                f_10899_73709_73723(Microsoft.CodeAnalysis.CSharp.BoundExpression
                node)
                {
                    var return_v = makeSlot(node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 73709, 73723);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                f_10899_73914_73937(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, int
                slot)
                {
                    var return_v = this_param.NominalSlotType(slot);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 73914, 73937);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?
                f_10899_73979_73988(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 73979, 73988);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Conversions
                f_10899_74121_74149(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param)
                {
                    var return_v = this_param.Conversions;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 74121, 74149);
                    return return_v;
                }


                bool
                f_10899_74181_74195(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.HasErrors;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 74181, 74195);
                    return return_v;
                }


                bool
                f_10899_74199_74222(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                type)
                {
                    var return_v = type.IsErrorType();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 74199, 74222);
                    return return_v;
                }


                bool
                f_10899_74250_74373(Microsoft.CodeAnalysis.CSharp.Conversions
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                source, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?
                destination, ref System.Collections.Generic.HashSet<Microsoft.CodeAnalysis.DiagnosticInfo>?
                useSiteDiagnostics)
                {
                    var return_v = this_param.HasIdentityOrImplicitReferenceConversion(source, destination, ref useSiteDiagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 74250, 74373);
                    return return_v;
                }


                bool
                f_10899_74401_74503(Microsoft.CodeAnalysis.CSharp.Conversions
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                source, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?
                destination, ref System.Collections.Generic.HashSet<Microsoft.CodeAnalysis.DiagnosticInfo>
                useSiteDiagnostics)
                {
                    var return_v = this_param.HasBoxingConversion(source, destination, ref useSiteDiagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 74401, 74503);
                    return return_v;
                }


                int
                f_10899_74168_74504(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 74168, 74504);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 73618, 79595);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 73618, 79595);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        protected override int GetOrCreateSlot(Symbol symbol, int containingSlot = 0, bool forceSlotEvenIfEmpty = false, bool createIfMissing = true)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 79607, 79983);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 79773, 79865) || true) && (containingSlot > 0 && (DynAbs.Tracing.TraceSender.Expression_True(10899, 79777, 79836) && !f_10899_79800_79836(this, containingSlot, symbol)))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 79773, 79865);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 79855, 79865);

                    return -1;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 79773, 79865);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 79881, 79972);

                return DynAbs.Tracing.TraceSender.TraceInvocationWrapper(() => base.GetOrCreateSlot(symbol, containingSlot, forceSlotEvenIfEmpty, createIfMissing), 10899, 79888, 79971);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 79607, 79983);

                bool
                f_10899_79800_79836(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, int
                slot, Microsoft.CodeAnalysis.CSharp.Symbol
                possibleMember)
                {
                    var return_v = this_param.IsSlotMember(slot, possibleMember);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 79800, 79836);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 79607, 79983);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 79607, 79983);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private void VisitAndUnsplitAll<T>(ImmutableArray<T> nodes) where T : BoundNode
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 79995, 80316);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 80099, 80174) || true) && (nodes.IsDefault)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 80099, 80174);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 80152, 80159);

                    return;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 80099, 80174);
                }
                try
                {
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 80190, 80305);
                    foreach (var node in f_10899_80211_80216_I<T>(nodes))
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 80190, 80305);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 80250, 80262);

                        f_10899_80250_80261<T>(this, node);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 80280, 80290);

                        f_10899_80280_80289<T>(this);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 80190, 80305);
                    }
                }
                catch (System.Exception)
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoopByException(10899, 1, 116);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoop(10899, 1, 116);
                }
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 79995, 80316);

                Microsoft.CodeAnalysis.CSharp.BoundNode?
                f_10899_80250_80261<T>(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, T
                node) where T : BoundNode

                {
                    var return_v = this_param.Visit((Microsoft.CodeAnalysis.CSharp.BoundNode)node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 80250, 80261);
                    return return_v;
                }


                int
                f_10899_80280_80289<T>(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param) where T : BoundNode

                {
                    this_param.Unsplit();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 80280, 80289);
                    return 0;
                }


                System.Collections.Immutable.ImmutableArray<T>
                f_10899_80211_80216_I<T>(System.Collections.Immutable.ImmutableArray<T>
                i) where T : BoundNode

                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 80211, 80216);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 79995, 80316);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 79995, 80316);
            }
        }

        private void VisitWithoutDiagnostics(BoundNode? node)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 80328, 80586);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 80406, 80452);

                var
                previousDiagnostics = _disableDiagnostics
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 80466, 80493);

                _disableDiagnostics = true;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 80507, 80519);

                f_10899_80507_80518(this, node);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 80533, 80575);

                _disableDiagnostics = previousDiagnostics;
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 80328, 80586);

                Microsoft.CodeAnalysis.CSharp.BoundNode?
                f_10899_80507_80518(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundNode?
                node)
                {
                    var return_v = this_param.Visit(node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 80507, 80518);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 80328, 80586);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 80328, 80586);
            }
        }

        protected override void VisitRvalue(BoundExpression? node, bool isKnownToBeAnLvalue = false)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 80598, 80778);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 80715, 80727);

                f_10899_80715_80726(this, node);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 80741, 80767);

                f_10899_80741_80766(this, node);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 80598, 80778);

                Microsoft.CodeAnalysis.CSharp.BoundNode?
                f_10899_80715_80726(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression?
                node)
                {
                    var return_v = this_param.Visit((Microsoft.CodeAnalysis.CSharp.BoundNode?)node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 80715, 80726);
                    return return_v;
                }


                int
                f_10899_80741_80766(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression?
                node)
                {
                    this_param.VisitRvalueEpilogue(node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 80741, 80766);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 80598, 80778);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 80598, 80778);
            }
        }

        [MethodImpl(MethodImplOptions.NoInlining)]
        private void VisitRvalueEpilogue(BoundExpression? node)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 81331, 81538);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 81463, 81473);

                f_10899_81463_81472(this);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 81487, 81507);

                f_10899_81487_81506(this, node);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 81331, 81538);

                int
                f_10899_81463_81472(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param)
                {
                    this_param.Unsplit();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 81463, 81472);
                    return 0;
                }


                int
                f_10899_81487_81506(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression?
                expression)
                {
                    this_param.UseRvalueOnly(expression);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 81487, 81506);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 81331, 81538);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 81331, 81538);
            }
        }

        private TypeWithState VisitRvalueWithState(BoundExpression? node)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 81550, 81701);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 81640, 81658);

                f_10899_81640_81657(this, node);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 81672, 81690);

                return f_10899_81679_81689();
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 81550, 81701);

                int
                f_10899_81640_81657(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression?
                node)
                {
                    this_param.VisitRvalue(node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 81640, 81657);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                f_10899_81679_81689()
                {
                    var return_v = ResultType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 81679, 81689);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 81550, 81701);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 81550, 81701);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private TypeWithAnnotations VisitLvalueWithAnnotations(BoundExpression node)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 81713, 81905);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 81814, 81832);

                f_10899_81814_81831(this, node);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 81846, 81856);

                f_10899_81846_81855(this);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 81870, 81894);

                return f_10899_81877_81893();
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 81713, 81905);

                Microsoft.CodeAnalysis.CSharp.BoundNode
                f_10899_81814_81831(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                node)
                {
                    var return_v = this_param.VisitLValue((Microsoft.CodeAnalysis.CSharp.BoundNode)node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 81814, 81831);
                    return return_v;
                }


                int
                f_10899_81846_81855(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param)
                {
                    this_param.Unsplit();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 81846, 81855);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                f_10899_81877_81893()
                {
                    var return_v = LvalueResultType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 81877, 81893);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 81713, 81905);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 81713, 81905);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private static object GetTypeAsDiagnosticArgument(TypeSymbol? typeOpt)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterStaticMethod(10899, 81917, 82058);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 82012, 82047);

                return typeOpt ?? (DynAbs.Tracing.TraceSender.Expression_Null<Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?>(10899, 82019, 82046) ?? (object)"<null>");
                DynAbs.Tracing.TraceSender.TraceExitStaticMethod(10899, 81917, 82058);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 81917, 82058);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 81917, 82058);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private static object GetParameterAsDiagnosticArgument(ParameterSymbol? parameterOpt)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterStaticMethod(10899, 82070, 82335);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 82180, 82324);

                return (DynAbs.Tracing.TraceSender.Conditional_F1(10899, 82187, 82207) || ((parameterOpt is null && DynAbs.Tracing.TraceSender.Conditional_F2(10899, 82227, 82237)) || DynAbs.Tracing.TraceSender.Conditional_F3(10899, 82257, 82323))) ? (object)"" : f_10899_82257_82323(parameterOpt, SymbolDisplayFormat.ShortFormat);
                DynAbs.Tracing.TraceSender.TraceExitStaticMethod(10899, 82070, 82335);

                Microsoft.CodeAnalysis.FormattedSymbol
                f_10899_82257_82323(Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol
                symbol, Microsoft.CodeAnalysis.SymbolDisplayFormat
                symbolDisplayFormat)
                {
                    var return_v = new Microsoft.CodeAnalysis.FormattedSymbol((Microsoft.CodeAnalysis.Symbols.ISymbolInternal)symbol, symbolDisplayFormat);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 82257, 82323);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 82070, 82335);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 82070, 82335);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private static object GetContainingSymbolAsDiagnosticArgument(ParameterSymbol? parameterOpt)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterStaticMethod(10899, 82347, 82708);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 82464, 82518);

                var
                containingSymbol = f_10899_82487_82517_M(DynAbs.Tracing.TraceSender.TraceConditionalAccessExpression(parameterOpt, 10899, 82487, 82517)?.ContainingSymbol)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 82532, 82697);

                return (DynAbs.Tracing.TraceSender.Conditional_F1(10899, 82539, 82563) || ((containingSymbol is null && DynAbs.Tracing.TraceSender.Conditional_F2(10899, 82583, 82593)) || DynAbs.Tracing.TraceSender.Conditional_F3(10899, 82613, 82696))) ? (object)"" : f_10899_82613_82696(containingSymbol, f_10899_82651_82695());
                DynAbs.Tracing.TraceSender.TraceExitStaticMethod(10899, 82347, 82708);

                Microsoft.CodeAnalysis.CSharp.Symbol?
                f_10899_82487_82517_M(Microsoft.CodeAnalysis.CSharp.Symbol?
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 82487, 82517);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SymbolDisplayFormat
                f_10899_82651_82695()
                {
                    var return_v = SymbolDisplayFormat.MinimallyQualifiedFormat;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 82651, 82695);
                    return return_v;
                }


                Microsoft.CodeAnalysis.FormattedSymbol
                f_10899_82613_82696(Microsoft.CodeAnalysis.CSharp.Symbol
                symbol, Microsoft.CodeAnalysis.SymbolDisplayFormat
                symbolDisplayFormat)
                {
                    var return_v = new Microsoft.CodeAnalysis.FormattedSymbol((Microsoft.CodeAnalysis.Symbols.ISymbolInternal)symbol, symbolDisplayFormat);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 82613, 82696);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 82347, 82708);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 82347, 82708);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private enum AssignmentKind
        {
            Assignment,
            Return,
            Argument,
            ForEachIterationVariable
        }

        private static bool ShouldReportNullableAssignment(TypeWithAnnotations type, NullableFlowState state)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterStaticMethod(10899, 83306, 84264);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 83432, 83553) || true) && (f_10899_83436_83449_M(!type.HasType) || (DynAbs.Tracing.TraceSender.Expression_False(10899, 83436, 83491) || f_10899_83470_83491(type.Type)))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 83432, 83553);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 83525, 83538);

                    return false;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 83432, 83553);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 83569, 83770);

                switch (type.NullableAnnotation)
                {

                    case NullableAnnotation.Oblivious:
                    case NullableAnnotation.Annotated:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 83569, 83770);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 83742, 83755);

                        return false;
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 83569, 83770);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 83786, 84225);

                switch (state)
                {

                    case NullableFlowState.NotNull:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 83786, 84225);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 83886, 83899);

                        return false;
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 83786, 84225);

                    case NullableFlowState.MaybeNull:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 83786, 84225);

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 83972, 84182) || true) && (f_10899_83976_84033(type.Type) && (DynAbs.Tracing.TraceSender.Expression_True(10899, 83976, 84096) && !(type.Type is TypeParameterSymbol { IsNotNullable: true })))
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 83972, 84182);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 84146, 84159);

                            return false;
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 83972, 84182);
                        }
                        DynAbs.Tracing.TraceSender.TraceBreak(10899, 84204, 84210);

                        break;
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 83786, 84225);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 84241, 84253);

                return true;
                DynAbs.Tracing.TraceSender.TraceExitStaticMethod(10899, 83306, 84264);

                bool
                f_10899_83436_83449_M(bool
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 83436, 83449);
                    return return_v;
                }


                bool
                f_10899_83470_83491(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                this_param)
                {
                    var return_v = this_param.IsValueType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 83470, 83491);
                    return return_v;
                }


                bool
                f_10899_83976_84033(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                type)
                {
                    var return_v = type.IsTypeParameterDisallowingAnnotationInCSharp8();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 83976, 84033);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 83306, 84264);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 83306, 84264);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private void ReportNullableAssignmentIfNecessary(
                    BoundExpression? value,
                    TypeWithAnnotations targetType,
                    TypeWithState valueType,
                    bool useLegacyWarnings,
                    AssignmentKind assignmentKind = AssignmentKind.Assignment,
                    ParameterSymbol? parameterOpt = null,
                    Location? location = null)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 84456, 88285);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 84999, 85171) || true) && (targetType.HasType && (DynAbs.Tracing.TraceSender.Expression_True(10899, 85003, 85115) && !f_10899_85043_85115(targetType.Type, valueType.Type, TypeCompareKind.AllIgnoreOptions)))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 84999, 85171);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 85149, 85156);

                    return;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 84999, 85171);
                }

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 85187, 85712) || true) && (value == null || (DynAbs.Tracing.TraceSender.Expression_False(10899, 85191, 85575) ||                // This prevents us from giving undesired warnings for synthesized arguments for optional parameters,
                                                                                                                                                                                                            // but allows us to give warnings for synthesized assignments to record properties and for parameter default values at the declaration site.
                                (f_10899_85503_85529(value) && (DynAbs.Tracing.TraceSender.Expression_True(10899, 85503, 85574) && assignmentKind == AssignmentKind.Argument))) || (DynAbs.Tracing.TraceSender.Expression_False(10899, 85191, 85656) || !f_10899_85597_85656(targetType, valueType.State)))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 85187, 85712);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 85690, 85697);

                    return;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 85187, 85712);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 85728, 85768);

                if (location is null)
                    DynAbs.Tracing.TraceSender.TraceEnterExpression(10899, 85728, 85768);

                location ??= f_10899_85741_85767(value.Syntax);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 85782, 85835);

                var
                unwrappedValue = f_10899_85803_85834(value)
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 85849, 85936) || true) && (f_10899_85853_85880(unwrappedValue))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 85849, 85936);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 85914, 85921);

                    return;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 85849, 85936);
                }

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 85952, 87479) || true) && (f_10899_85956_85983_M(DynAbs.Tracing.TraceSender.TraceConditionalAccessExpression(f_10899_85956_85975(value), 10899, 85956, 85983)?.IsNull) == true && (DynAbs.Tracing.TraceSender.Expression_True(10899, 85956, 86013) && !useLegacyWarnings))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 85952, 87479);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 86241, 86379);

                    f_10899_86241_86378(this, (DynAbs.Tracing.TraceSender.Conditional_F1(10899, 86258, 86297) || ((assignmentKind == AssignmentKind.Return && DynAbs.Tracing.TraceSender.Conditional_F2(10899, 86300, 86333)) || DynAbs.Tracing.TraceSender.Conditional_F3(10899, 86336, 86367))) ? ErrorCode.WRN_NullReferenceReturn : ErrorCode.WRN_NullAsNonNullable, location);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 85952, 87479);
                }

                else
                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 85952, 87479);

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 86413, 87479) || true) && (assignmentKind == AssignmentKind.Argument)
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 86413, 87479);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 86492, 86701);

                        f_10899_86492_86700(this, ErrorCode.WRN_NullReferenceArgument, location, f_10899_86577_86623(parameterOpt), f_10899_86646_86699(parameterOpt));
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 86721, 86760);

                        f_10899_86721_86759(this, value, ref State);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 86413, 87479);
                    }

                    else
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 86413, 87479);

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 86794, 87479) || true) && (useLegacyWarnings)
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 86794, 87479);

                            if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 86849, 87200) || true) && (f_10899_86853_86883(valueType) && (DynAbs.Tracing.TraceSender.Expression_True(10899, 86853, 86943) && !f_10899_86888_86943(compilation)))
                            )

                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 86849, 87200);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 87174, 87181);

                                return;
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 86849, 87200);
                            }
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 87218, 87254);

                            f_10899_87218_87253(this, location);
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 86794, 87479);
                        }

                        else

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 86794, 87479);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 87320, 87464);

                            f_10899_87320_87463(this, (DynAbs.Tracing.TraceSender.Conditional_F1(10899, 87337, 87376) || ((assignmentKind == AssignmentKind.Return && DynAbs.Tracing.TraceSender.Conditional_F2(10899, 87379, 87412)) || DynAbs.Tracing.TraceSender.Conditional_F3(10899, 87415, 87452))) ? ErrorCode.WRN_NullReferenceReturn : ErrorCode.WRN_NullReferenceAssignment, location);
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 86794, 87479);
                        }
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 86413, 87479);
                    }
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 85952, 87479);
                }

                static bool isMaybeDefaultValue(TypeWithState valueType)
                {
                    try
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterStaticMethod(10899, 87495, 87731);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 87584, 87716);

                        return f_10899_87591_87615_M(DynAbs.Tracing.TraceSender.TraceConditionalAccessExpression(valueType.Type, 10899, 87591, 87615)?.TypeKind) == TypeKind.TypeParameter && (DynAbs.Tracing.TraceSender.Expression_True(10899, 87591, 87715) && valueType.State == NullableFlowState.MaybeDefault);
                        DynAbs.Tracing.TraceSender.TraceExitStaticMethod(10899, 87495, 87731);

                        Microsoft.CodeAnalysis.TypeKind?
                        f_10899_87591_87615_M(Microsoft.CodeAnalysis.TypeKind?
                        i)
                        {
                            var return_v = i;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 87591, 87615);
                            return return_v;
                        }

                    }
                    catch
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 87495, 87731);
                        throw;
                    }
                    finally
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 87495, 87731);
                    }
                    throw new System.Exception("Slicer error: unreachable code");
                }

                static bool allowUnconstrainedTypeParameterAnnotations(CSharpCompilation compilation)
                {
                    try
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterStaticMethod(10899, 87747, 88274);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 88095, 88187);

                        var
                        requiredVersion = f_10899_88117_88186(MessageID.IDS_FeatureDefaultTypeParameterConstraint)
                        ;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 88205, 88259);

                        return requiredVersion <= f_10899_88231_88258(compilation);
                        DynAbs.Tracing.TraceSender.TraceExitStaticMethod(10899, 87747, 88274);

                        Microsoft.CodeAnalysis.CSharp.LanguageVersion
                        f_10899_88117_88186(Microsoft.CodeAnalysis.CSharp.MessageID
                        feature)
                        {
                            var return_v = feature.RequiredVersion();
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 88117, 88186);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.CSharp.LanguageVersion
                        f_10899_88231_88258(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                        this_param)
                        {
                            var return_v = this_param.LanguageVersion;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 88231, 88258);
                            return return_v;
                        }

                    }
                    catch
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 87747, 88274);
                        throw;
                    }
                    finally
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 87747, 88274);
                    }
                    throw new System.Exception("Slicer error: unreachable code");
                }
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 84456, 88285);

                bool
                f_10899_85043_85115(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?
                t2, Microsoft.CodeAnalysis.TypeCompareKind
                compareKind)
                {
                    var return_v = this_param.Equals(t2, compareKind);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 85043, 85115);
                    return return_v;
                }


                bool
                f_10899_85503_85529(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.WasCompilerGenerated;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 85503, 85529);
                    return return_v;
                }


                bool
                f_10899_85597_85656(Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                type, Microsoft.CodeAnalysis.CSharp.NullableFlowState
                state)
                {
                    var return_v = ShouldReportNullableAssignment(type, state);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 85597, 85656);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Location
                f_10899_85741_85767(Microsoft.CodeAnalysis.SyntaxNode
                this_param)
                {
                    var return_v = this_param.GetLocation();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 85741, 85767);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10899_85803_85834(Microsoft.CodeAnalysis.CSharp.BoundExpression
                possiblyConversion)
                {
                    var return_v = SkipReferenceConversions(possiblyConversion);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 85803, 85834);
                    return return_v;
                }


                bool
                f_10899_85853_85880(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.IsSuppressed;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 85853, 85880);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ConstantValue?
                f_10899_85956_85975(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.ConstantValue;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 85956, 85975);
                    return return_v;
                }


                bool?
                f_10899_85956_85983_M(bool?
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 85956, 85983);
                    return return_v;
                }


                int
                f_10899_86241_86378(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.ErrorCode
                errorCode, Microsoft.CodeAnalysis.Location
                location, params object[]
                arguments)
                {
                    this_param.ReportDiagnostic(errorCode, location, arguments);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 86241, 86378);
                    return 0;
                }


                object
                f_10899_86577_86623(Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol?
                parameterOpt)
                {
                    var return_v = GetParameterAsDiagnosticArgument(parameterOpt);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 86577, 86623);
                    return return_v;
                }


                object
                f_10899_86646_86699(Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol?
                parameterOpt)
                {
                    var return_v = GetContainingSymbolAsDiagnosticArgument(parameterOpt);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 86646, 86699);
                    return return_v;
                }


                int
                f_10899_86492_86700(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.ErrorCode
                errorCode, Microsoft.CodeAnalysis.Location
                location, params object[]
                arguments)
                {
                    this_param.ReportDiagnostic(errorCode, location, arguments);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 86492, 86700);
                    return 0;
                }


                int
                f_10899_86721_86759(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                expression, ref Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState
                state)
                {
                    this_param.LearnFromNonNullTest(expression, ref state);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 86721, 86759);
                    return 0;
                }


                bool
                f_10899_86853_86883(Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                valueType)
                {
                    var return_v = isMaybeDefaultValue(valueType);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 86853, 86883);
                    return return_v;
                }


                bool
                f_10899_86888_86943(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                compilation)
                {
                    var return_v = allowUnconstrainedTypeParameterAnnotations(compilation);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 86888, 86943);
                    return return_v;
                }


                int
                f_10899_87218_87253(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.Location
                location)
                {
                    this_param.ReportNonSafetyDiagnostic(location);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 87218, 87253);
                    return 0;
                }


                int
                f_10899_87320_87463(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.ErrorCode
                errorCode, Microsoft.CodeAnalysis.Location
                location, params object[]
                arguments)
                {
                    this_param.ReportDiagnostic(errorCode, location, arguments);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 87320, 87463);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 84456, 88285);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 84456, 88285);
            }
        }

        internal static bool AreParameterAnnotationsCompatible(
                    RefKind refKind,
                    TypeWithAnnotations overriddenType,
                    FlowAnalysisAnnotations overriddenAnnotations,
                    TypeWithAnnotations overridingType,
                    FlowAnalysisAnnotations overridingAnnotations,
                    bool forRef = false)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterStaticMethod(10899, 88297, 94208);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 88862, 89281) || true) && (refKind == RefKind.Ref)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 88862, 89281);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 88970, 89266);

                    return f_10899_88977_89116(RefKind.None, overriddenType, overriddenAnnotations, overridingType, overridingAnnotations, forRef: true) && (DynAbs.Tracing.TraceSender.Expression_True(10899, 88977, 89265) && f_10899_89141_89265(RefKind.Out, overriddenType, overriddenAnnotations, overridingType, overridingAnnotations));
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 88862, 89281);
                }

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 89297, 90978) || true) && (refKind == RefKind.None || (DynAbs.Tracing.TraceSender.Expression_False(10899, 89301, 89349) || refKind == RefKind.In))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 89297, 90978);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 89524, 89598);

                    var
                    valueState = f_10899_89541_89597(overriddenType, overriddenAnnotations)
                    ;

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 89616, 89760) || true) && (f_10899_89620_89686(valueState, overridingType, overridingAnnotations))
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 89616, 89760);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 89728, 89741);

                        return false;
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 89616, 89760);
                    }
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 89850, 89971);

                    bool
                    overridingHasNotNull = (overridingAnnotations & FlowAnalysisAnnotations.NotNull) == FlowAnalysisAnnotations.NotNull
                    ;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 89989, 90110);

                    bool
                    overriddenHasNotNull = (overriddenAnnotations & FlowAnalysisAnnotations.NotNull) == FlowAnalysisAnnotations.NotNull
                    ;

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 90128, 90388) || true) && (overriddenHasNotNull && (DynAbs.Tracing.TraceSender.Expression_True(10899, 90132, 90177) && !overridingHasNotNull) && (DynAbs.Tracing.TraceSender.Expression_True(10899, 90132, 90188) && !forRef))
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 90128, 90388);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 90356, 90369);

                        return false;
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 90128, 90388);
                    }
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 90408, 90535);

                    bool
                    overridingHasMaybeNull = (overridingAnnotations & FlowAnalysisAnnotations.MaybeNull) == FlowAnalysisAnnotations.MaybeNull
                    ;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 90553, 90680);

                    bool
                    overriddenHasMaybeNull = (overriddenAnnotations & FlowAnalysisAnnotations.MaybeNull) == FlowAnalysisAnnotations.MaybeNull
                    ;

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 90698, 90963) || true) && (overriddenHasMaybeNull && (DynAbs.Tracing.TraceSender.Expression_True(10899, 90702, 90751) && !overridingHasMaybeNull) && (DynAbs.Tracing.TraceSender.Expression_True(10899, 90702, 90762) && !forRef))
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 90698, 90963);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 90931, 90944);

                        return false;
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 90698, 90963);
                    }
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 89297, 90978);
                }

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 90994, 91302) || true) && (refKind == RefKind.Out)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 90994, 91302);

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 91142, 91287) || true) && (!f_10899_91147_91177(true) || (DynAbs.Tracing.TraceSender.Expression_False(10899, 91146, 91213) || !f_10899_91182_91213(false)))
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 91142, 91287);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 91255, 91268);

                        return false;
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 91142, 91287);
                    }
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 90994, 91302);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 91318, 91330);

                return true;

                bool canAssignOutputValueWhen(bool sense)
                {
                    try
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 91346, 92022);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 91420, 91602);

                        var
                        valueWhen = f_10899_91436_91601(overridingType.ToTypeWithState(), f_10899_91543_91600(overridingAnnotations, sense))
                        ;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 91622, 91727);

                        var
                        destAnnotationsWhen = f_10899_91648_91726(f_10899_91668_91725(overriddenAnnotations, sense))
                        ;

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 91745, 91975) || true) && (f_10899_91749_91812(valueWhen, overriddenType, destAnnotationsWhen))
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 91745, 91975);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 91943, 91956);

                            return false;
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 91745, 91975);
                        }
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 91995, 92007);

                        return true;
                        DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 91346, 92022);

                        Microsoft.CodeAnalysis.CSharp.Symbols.FlowAnalysisAnnotations
                        f_10899_91543_91600(Microsoft.CodeAnalysis.CSharp.Symbols.FlowAnalysisAnnotations
                        annotations, bool
                        sense)
                        {
                            var return_v = makeUnconditionalAnnotation(annotations, sense);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 91543, 91600);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                        f_10899_91436_91601(Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                        typeWithState, Microsoft.CodeAnalysis.CSharp.Symbols.FlowAnalysisAnnotations
                        annotations)
                        {
                            var return_v = ApplyUnconditionalAnnotations(typeWithState, annotations);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 91436, 91601);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.CSharp.Symbols.FlowAnalysisAnnotations
                        f_10899_91668_91725(Microsoft.CodeAnalysis.CSharp.Symbols.FlowAnalysisAnnotations
                        annotations, bool
                        sense)
                        {
                            var return_v = makeUnconditionalAnnotation(annotations, sense);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 91668, 91725);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.CSharp.Symbols.FlowAnalysisAnnotations
                        f_10899_91648_91726(Microsoft.CodeAnalysis.CSharp.Symbols.FlowAnalysisAnnotations
                        outwardAnnotations)
                        {
                            var return_v = ToInwardAnnotations(outwardAnnotations);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 91648, 91726);
                            return return_v;
                        }


                        bool
                        f_10899_91749_91812(Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                        valueState, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                        destinationType, Microsoft.CodeAnalysis.CSharp.Symbols.FlowAnalysisAnnotations
                        destinationAnnotations)
                        {
                            var return_v = isBadAssignment(valueState, destinationType, destinationAnnotations);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 91749, 91812);
                            return return_v;
                        }

                    }
                    catch
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 91346, 92022);
                        throw;
                    }
                    finally
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 91346, 92022);
                    }
                    throw new System.Exception("Slicer error: unreachable code");
                }

                static bool isBadAssignment(TypeWithState valueState, TypeWithAnnotations destinationType, FlowAnalysisAnnotations destinationAnnotations)
                {
                    try
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterStaticMethod(10899, 92038, 92649);

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 92209, 92442) || true) && (f_10899_92213_92369(f_10899_92266_92329(destinationType, destinationAnnotations), valueState.State))
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 92209, 92442);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 92411, 92423);

                            return true;
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 92209, 92442);
                        }

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 92462, 92601) || true) && (f_10899_92466_92528(valueState, destinationAnnotations))
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 92462, 92601);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 92570, 92582);

                            return true;
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 92462, 92601);
                        }
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 92621, 92634);

                        return false;
                        DynAbs.Tracing.TraceSender.TraceExitStaticMethod(10899, 92038, 92649);

                        Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                        f_10899_92266_92329(Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                        declaredType, Microsoft.CodeAnalysis.CSharp.Symbols.FlowAnalysisAnnotations
                        flowAnalysisAnnotations)
                        {
                            var return_v = ApplyLValueAnnotations(declaredType, flowAnalysisAnnotations);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 92266, 92329);
                            return return_v;
                        }


                        bool
                        f_10899_92213_92369(Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                        type, Microsoft.CodeAnalysis.CSharp.NullableFlowState
                        state)
                        {
                            var return_v = ShouldReportNullableAssignment(type, state);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 92213, 92369);
                            return return_v;
                        }


                        bool
                        f_10899_92466_92528(Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                        valueState, Microsoft.CodeAnalysis.CSharp.Symbols.FlowAnalysisAnnotations
                        targetAnnotations)
                        {
                            var return_v = IsDisallowedNullAssignment(valueState, targetAnnotations);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 92466, 92528);
                            return return_v;
                        }

                    }
                    catch
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 92038, 92649);
                        throw;
                    }
                    finally
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 92038, 92649);
                    }
                    throw new System.Exception("Slicer error: unreachable code");
                }

                static FlowAnalysisAnnotations makeUnconditionalAnnotation(FlowAnalysisAnnotations annotations, bool sense)
                {
                    try
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterStaticMethod(10899, 92751, 93654);

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 92891, 93290) || true) && (sense)
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 92891, 93290);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 92942, 93099);

                            var
                            unconditionalAnnotationWhenTrue = f_10899_92980_93098(annotations, FlowAnalysisAnnotations.NotNullWhenTrue, FlowAnalysisAnnotations.NotNull)
                            ;
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 93121, 93271);

                            return f_10899_93128_93270(unconditionalAnnotationWhenTrue, FlowAnalysisAnnotations.MaybeNullWhenTrue, FlowAnalysisAnnotations.MaybeNull);
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 92891, 93290);
                        }
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 93310, 93469);

                        var
                        unconditionalAnnotationWhenFalse = f_10899_93349_93468(annotations, FlowAnalysisAnnotations.NotNullWhenFalse, FlowAnalysisAnnotations.NotNull)
                        ;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 93487, 93639);

                        return f_10899_93494_93638(unconditionalAnnotationWhenFalse, FlowAnalysisAnnotations.MaybeNullWhenFalse, FlowAnalysisAnnotations.MaybeNull);
                        DynAbs.Tracing.TraceSender.TraceExitStaticMethod(10899, 92751, 93654);

                        Microsoft.CodeAnalysis.CSharp.Symbols.FlowAnalysisAnnotations
                        f_10899_92980_93098(Microsoft.CodeAnalysis.CSharp.Symbols.FlowAnalysisAnnotations
                        annotations, Microsoft.CodeAnalysis.CSharp.Symbols.FlowAnalysisAnnotations
                        conditionalAnnotation, Microsoft.CodeAnalysis.CSharp.Symbols.FlowAnalysisAnnotations
                        replacementAnnotation)
                        {
                            var return_v = makeUnconditionalAnnotationCore(annotations, conditionalAnnotation, replacementAnnotation);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 92980, 93098);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.CSharp.Symbols.FlowAnalysisAnnotations
                        f_10899_93128_93270(Microsoft.CodeAnalysis.CSharp.Symbols.FlowAnalysisAnnotations
                        annotations, Microsoft.CodeAnalysis.CSharp.Symbols.FlowAnalysisAnnotations
                        conditionalAnnotation, Microsoft.CodeAnalysis.CSharp.Symbols.FlowAnalysisAnnotations
                        replacementAnnotation)
                        {
                            var return_v = makeUnconditionalAnnotationCore(annotations, conditionalAnnotation, replacementAnnotation);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 93128, 93270);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.CSharp.Symbols.FlowAnalysisAnnotations
                        f_10899_93349_93468(Microsoft.CodeAnalysis.CSharp.Symbols.FlowAnalysisAnnotations
                        annotations, Microsoft.CodeAnalysis.CSharp.Symbols.FlowAnalysisAnnotations
                        conditionalAnnotation, Microsoft.CodeAnalysis.CSharp.Symbols.FlowAnalysisAnnotations
                        replacementAnnotation)
                        {
                            var return_v = makeUnconditionalAnnotationCore(annotations, conditionalAnnotation, replacementAnnotation);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 93349, 93468);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.CSharp.Symbols.FlowAnalysisAnnotations
                        f_10899_93494_93638(Microsoft.CodeAnalysis.CSharp.Symbols.FlowAnalysisAnnotations
                        annotations, Microsoft.CodeAnalysis.CSharp.Symbols.FlowAnalysisAnnotations
                        conditionalAnnotation, Microsoft.CodeAnalysis.CSharp.Symbols.FlowAnalysisAnnotations
                        replacementAnnotation)
                        {
                            var return_v = makeUnconditionalAnnotationCore(annotations, conditionalAnnotation, replacementAnnotation);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 93494, 93638);
                            return return_v;
                        }

                    }
                    catch
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 92751, 93654);
                        throw;
                    }
                    finally
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 92751, 93654);
                    }
                    throw new System.Exception("Slicer error: unreachable code");
                }

                static FlowAnalysisAnnotations makeUnconditionalAnnotationCore(FlowAnalysisAnnotations annotations, FlowAnalysisAnnotations conditionalAnnotation, FlowAnalysisAnnotations replacementAnnotation)
                {
                    try
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterStaticMethod(10899, 93742, 94197);

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 93968, 94118) || true) && ((annotations & conditionalAnnotation) != 0)
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 93968, 94118);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 94056, 94099);

                            return annotations | replacementAnnotation;
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 93968, 94118);
                        }
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 94138, 94182);

                        return annotations & ~replacementAnnotation;
                        DynAbs.Tracing.TraceSender.TraceExitStaticMethod(10899, 93742, 94197);
                    }
                    catch
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 93742, 94197);
                        throw;
                    }
                    finally
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 93742, 94197);
                    }
                    throw new System.Exception("Slicer error: unreachable code");
                }
                DynAbs.Tracing.TraceSender.TraceExitStaticMethod(10899, 88297, 94208);

                bool
                f_10899_88977_89116(Microsoft.CodeAnalysis.RefKind
                refKind, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                overriddenType, Microsoft.CodeAnalysis.CSharp.Symbols.FlowAnalysisAnnotations
                overriddenAnnotations, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                overridingType, Microsoft.CodeAnalysis.CSharp.Symbols.FlowAnalysisAnnotations
                overridingAnnotations, bool
                forRef)
                {
                    var return_v = AreParameterAnnotationsCompatible(refKind, overriddenType, overriddenAnnotations, overridingType, overridingAnnotations, forRef: forRef);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 88977, 89116);
                    return return_v;
                }


                bool
                f_10899_89141_89265(Microsoft.CodeAnalysis.RefKind
                refKind, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                overriddenType, Microsoft.CodeAnalysis.CSharp.Symbols.FlowAnalysisAnnotations
                overriddenAnnotations, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                overridingType, Microsoft.CodeAnalysis.CSharp.Symbols.FlowAnalysisAnnotations
                overridingAnnotations)
                {
                    var return_v = AreParameterAnnotationsCompatible(refKind, overriddenType, overriddenAnnotations, overridingType, overridingAnnotations);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 89141, 89265);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                f_10899_89541_89597(Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                parameterType, Microsoft.CodeAnalysis.CSharp.Symbols.FlowAnalysisAnnotations
                parameterAnnotations)
                {
                    var return_v = GetParameterState(parameterType, parameterAnnotations);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 89541, 89597);
                    return return_v;
                }


                bool
                f_10899_89620_89686(Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                valueState, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                destinationType, Microsoft.CodeAnalysis.CSharp.Symbols.FlowAnalysisAnnotations
                destinationAnnotations)
                {
                    var return_v = isBadAssignment(valueState, destinationType, destinationAnnotations);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 89620, 89686);
                    return return_v;
                }


                bool
                f_10899_91147_91177(bool
                sense)
                {
                    var return_v = canAssignOutputValueWhen(sense);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 91147, 91177);
                    return return_v;
                }


                bool
                f_10899_91182_91213(bool
                sense)
                {
                    var return_v = canAssignOutputValueWhen(sense);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 91182, 91213);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 88297, 94208);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 88297, 94208);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private static bool IsDefaultValue(BoundExpression expr)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterStaticMethod(10899, 94220, 94981);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 94301, 94970);

                switch (f_10899_94309_94318(expr))
                {

                    case BoundKind.Conversion:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 94301, 94970);
                        {
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 94427, 94466);

                            var
                            conversion = (BoundConversion)expr
                            ;
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 94492, 94540);

                            var
                            conversionKind = conversion.Conversion.Kind
                            ;
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 94566, 94738);

                            return (conversionKind == ConversionKind.DefaultLiteral || (DynAbs.Tracing.TraceSender.Expression_False(10899, 94574, 94669) || conversionKind == ConversionKind.NullLiteral)) && (DynAbs.Tracing.TraceSender.Expression_True(10899, 94573, 94737) && f_10899_94703_94737(f_10899_94718_94736(conversion)));
                        }
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 94301, 94970);

                    case BoundKind.DefaultLiteral:
                    case BoundKind.DefaultExpression:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 94301, 94970);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 94882, 94894);

                        return true;
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 94301, 94970);

                    default:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 94301, 94970);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 94942, 94955);

                        return false;
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 94301, 94970);
                }
                DynAbs.Tracing.TraceSender.TraceExitStaticMethod(10899, 94220, 94981);

                Microsoft.CodeAnalysis.CSharp.BoundKind
                f_10899_94309_94318(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.Kind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 94309, 94318);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10899_94718_94736(Microsoft.CodeAnalysis.CSharp.BoundConversion
                this_param)
                {
                    var return_v = this_param.Operand;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 94718, 94736);
                    return return_v;
                }


                bool
                f_10899_94703_94737(Microsoft.CodeAnalysis.CSharp.BoundExpression
                expr)
                {
                    var return_v = IsDefaultValue(expr);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 94703, 94737);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 94220, 94981);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 94220, 94981);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private void ReportNullabilityMismatchInAssignment(SyntaxNode syntaxNode, object sourceType, object destinationType)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 94993, 95250);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 95134, 95239);

                f_10899_95134_95238(this, ErrorCode.WRN_NullabilityMismatchInAssignment, syntaxNode, sourceType, destinationType);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 94993, 95250);

                int
                f_10899_95134_95238(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.ErrorCode
                errorCode, Microsoft.CodeAnalysis.SyntaxNode
                syntaxNode, params object[]
                arguments)
                {
                    this_param.ReportDiagnostic(errorCode, syntaxNode, arguments);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 95134, 95238);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 94993, 95250);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 94993, 95250);
            }
        }

        private void ReportNullabilityMismatchInAssignment(Location location, object sourceType, object destinationType)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 95262, 95513);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 95399, 95502);

                f_10899_95399_95501(this, ErrorCode.WRN_NullabilityMismatchInAssignment, location, sourceType, destinationType);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 95262, 95513);

                int
                f_10899_95399_95501(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.ErrorCode
                errorCode, Microsoft.CodeAnalysis.Location
                location, params object[]
                arguments)
                {
                    this_param.ReportDiagnostic(errorCode, location, arguments);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 95399, 95501);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 95262, 95513);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 95262, 95513);
            }
        }

        private void TrackNullableStateForAssignment(
                    BoundExpression? valueOpt,
                    TypeWithAnnotations targetType,
                    int targetSlot,
                    TypeWithState valueType,
                    int valueSlot = -1)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 95621, 97805);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 95876, 95910);

                f_10899_95876_95909(!IsConditionalState);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 95926, 97597) || true) && (this.State.Reachable)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 95926, 97597);

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 95984, 96075) || true) && (f_10899_95988_96007_M(!targetType.HasType))
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 95984, 96075);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 96049, 96056);

                        return;
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 95984, 96075);
                    }

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 96095, 96209) || true) && (targetSlot <= 0 || (DynAbs.Tracing.TraceSender.Expression_False(10899, 96099, 96141) || targetSlot == valueSlot))
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 96095, 96209);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 96183, 96190);

                        return;
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 96095, 96209);
                    }

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 96229, 96293) || true) && (!this.State.HasValue(targetSlot))
                    )
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 96229, 96293);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 96267, 96293);

                        f_10899_96267_96292(this, ref this.State);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 96229, 96293);
                    }
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 96313, 96344);

                    var
                    newState = valueType.State
                    ;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 96362, 96427);

                    f_10899_96362_96426(this, ref this.State, targetSlot, newState);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 96445, 96494);

                    f_10899_96445_96493(this, targetType.Type, targetSlot);

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 96727, 97582) || true) && (f_10899_96731_96772(targetType, valueType))
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 96727, 97582);

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 96814, 97563) || true) && (f_10899_96818_96849(targetType.Type) || (DynAbs.Tracing.TraceSender.Expression_False(10899, 96818, 96923) || targetType.TypeKind == TypeKind.TypeParameter) || (DynAbs.Tracing.TraceSender.Expression_False(10899, 96818, 96979) || targetType.IsNullableType()))
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 96814, 97563);

                            if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 97029, 97212) || true) && (valueSlot > 0)
                            )

                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 97029, 97212);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 97104, 97185);

                                f_10899_97104_97184(this, targetSlot, valueSlot, skipSlot: targetSlot);
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 97029, 97212);
                            }
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 96814, 97563);
                        }

                        else
                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 96814, 97563);

                            if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 97262, 97563) || true) && (f_10899_97266_97325(targetType.Type))
                            )

                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 97262, 97563);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 97375, 97540);

                                f_10899_97375_97539(this, targetType.Type, targetSlot, valueSlot, isDefaultValue: !(valueOpt is null) && (DynAbs.Tracing.TraceSender.Expression_True(10899, 97469, 97516) && f_10899_97492_97516(valueOpt)), skipSlot: targetSlot);
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 97262, 97563);
                            }
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 96814, 97563);
                        }
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 96727, 97582);
                    }
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 95926, 97597);
                }

                static bool areEquivalentTypes(TypeWithAnnotations target, TypeWithState assignedValue)
                {
                    try
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 97701, 97793);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 97721, 97793);
                        return f_10899_97721_97793(target.Type, assignedValue.Type, TypeCompareKind.AllIgnoreOptions); DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 97701, 97793);
                    }
                    catch
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 97701, 97793);
                        throw;
                    }
                    finally
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 97701, 97793);
                    }
                    throw new System.Exception("Slicer error: unreachable code");
                }
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 95621, 97805);

                int
                f_10899_95876_95909(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 95876, 95909);
                    return 0;
                }


                bool
                f_10899_95988_96007_M(bool
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 95988, 96007);
                    return return_v;
                }


                int
                f_10899_96267_96292(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, ref Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState
                state)
                {
                    this_param.Normalize(ref state);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 96267, 96292);
                    return 0;
                }


                int
                f_10899_96362_96426(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, ref Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState
                state, int
                slot, Microsoft.CodeAnalysis.CSharp.NullableFlowState
                newState)
                {
                    this_param.SetStateAndTrackForFinally(ref state, slot, newState);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 96362, 96426);
                    return 0;
                }


                int
                f_10899_96445_96493(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                targetType, int
                targetSlot)
                {
                    this_param.InheritDefaultState(targetType, targetSlot);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 96445, 96493);
                    return 0;
                }


                bool
                f_10899_96731_96772(Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                target, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                assignedValue)
                {
                    var return_v = areEquivalentTypes(target, assignedValue);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 96731, 96772);
                    return return_v;
                }


                bool
                f_10899_96818_96849(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                this_param)
                {
                    var return_v = this_param.IsReferenceType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 96818, 96849);
                    return return_v;
                }


                int
                f_10899_97104_97184(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, int
                targetSlot, int
                valueSlot, int
                skipSlot)
                {
                    this_param.InheritNullableStateOfTrackableType(targetSlot, valueSlot, skipSlot: skipSlot);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 97104, 97184);
                    return 0;
                }


                bool
                f_10899_97266_97325(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                type)
                {
                    var return_v = EmptyStructTypeCache.IsTrackableStructType(type);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 97266, 97325);
                    return return_v;
                }


                bool
                f_10899_97492_97516(Microsoft.CodeAnalysis.CSharp.BoundExpression
                expr)
                {
                    var return_v = IsDefaultValue(expr);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 97492, 97516);
                    return return_v;
                }


                int
                f_10899_97375_97539(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                targetType, int
                targetSlot, int
                valueSlot, bool
                isDefaultValue, int
                skipSlot)
                {
                    this_param.InheritNullableStateOfTrackableStruct(targetType, targetSlot, valueSlot, isDefaultValue: isDefaultValue, skipSlot: skipSlot);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 97375, 97539);
                    return 0;
                }


                static bool
                f_10899_97721_97793(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?
                t2, Microsoft.CodeAnalysis.TypeCompareKind
                compareKind)
                {
                    var return_v = this_param.Equals(t2, compareKind);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 97721, 97793);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 95621, 97805);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 95621, 97805);
            }
        }

        private void ReportNonSafetyDiagnostic(Location location)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 97817, 97984);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 97899, 97973);

                f_10899_97899_97972(this, ErrorCode.WRN_ConvertingNullableToNonNullable, location);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 97817, 97984);

                int
                f_10899_97899_97972(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.ErrorCode
                errorCode, Microsoft.CodeAnalysis.Location
                location, params object[]
                arguments)
                {
                    this_param.ReportDiagnostic(errorCode, location, arguments);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 97899, 97972);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 97817, 97984);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 97817, 97984);
            }
        }

        private void ReportDiagnostic(ErrorCode errorCode, SyntaxNode syntaxNode, params object[] arguments)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 97996, 98197);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 98121, 98186);

                f_10899_98121_98185(this, errorCode, f_10899_98149_98173(syntaxNode), arguments);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 97996, 98197);

                Microsoft.CodeAnalysis.Location
                f_10899_98149_98173(Microsoft.CodeAnalysis.SyntaxNode
                this_param)
                {
                    var return_v = this_param.GetLocation();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 98149, 98173);
                    return return_v;
                }


                int
                f_10899_98121_98185(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.ErrorCode
                errorCode, Microsoft.CodeAnalysis.Location
                location, params object[]
                arguments)
                {
                    this_param.ReportDiagnostic(errorCode, location, arguments);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 98121, 98185);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 97996, 98197);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 97996, 98197);
            }
        }

        private void ReportDiagnostic(ErrorCode errorCode, Location location, params object[] arguments)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 98209, 98604);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 98330, 98441);

                f_10899_98330_98440(f_10899_98343_98439(ErrorFacts.NullableWarnings, f_10899_98380_98438(MessageProvider.Instance, errorCode)));

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 98455, 98593) || true) && (f_10899_98459_98472(this) && (DynAbs.Tracing.TraceSender.Expression_True(10899, 98459, 98496) && !_disableDiagnostics))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 98455, 98593);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 98530, 98578);

                    f_10899_98530_98577(f_10899_98530_98541(), errorCode, location, arguments);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 98455, 98593);
                }
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 98209, 98604);

                string
                f_10899_98380_98438(Microsoft.CodeAnalysis.CSharp.MessageProvider
                this_param, Microsoft.CodeAnalysis.CSharp.ErrorCode
                errorCode)
                {
                    var return_v = this_param.GetIdForErrorCode((int)errorCode);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 98380, 98438);
                    return return_v;
                }


                bool
                f_10899_98343_98439(System.Collections.Immutable.ImmutableHashSet<string>
                this_param, string
                item)
                {
                    var return_v = this_param.Contains(item);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 98343, 98439);
                    return return_v;
                }


                int
                f_10899_98330_98440(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 98330, 98440);
                    return 0;
                }


                bool
                f_10899_98459_98472(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param)
                {
                    var return_v = this_param.IsReachable();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 98459, 98472);
                    return return_v;
                }


                Microsoft.CodeAnalysis.DiagnosticBag
                f_10899_98530_98541()
                {
                    var return_v = Diagnostics;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 98530, 98541);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo
                f_10899_98530_98577(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, Microsoft.CodeAnalysis.Location
                location, params object[]
                args)
                {
                    var return_v = diagnostics.Add(code, location, args);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 98530, 98577);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 98209, 98604);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 98209, 98604);
            }
        }

        private void InheritNullableStateOfTrackableStruct(TypeSymbol targetType, int targetSlot, int valueSlot, bool isDefaultValue, int skipSlot = -1)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 98616, 99488);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 98785, 98814);

                f_10899_98785_98813(targetSlot > 0);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 98828, 98897);

                f_10899_98828_98896(f_10899_98841_98895(targetType));

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 98913, 99000) || true) && (skipSlot < 0)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 98913, 99000);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 98963, 98985);

                    skipSlot = targetSlot;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 98913, 99000);
                }

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 99016, 99477) || true) && (!isDefaultValue && (DynAbs.Tracing.TraceSender.Expression_True(10899, 99020, 99052) && valueSlot > 0))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 99016, 99477);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 99086, 99155);

                    f_10899_99086_99154(this, targetSlot, valueSlot, skipSlot);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 99016, 99477);
                }

                else

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 99016, 99477);
                    try
                    {
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 99221, 99462);
                        foreach (var field in f_10899_99243_99300_I(f_10899_99243_99300(_emptyStructTypeCache, targetType)))
                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 99221, 99462);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 99342, 99443);

                            f_10899_99342_99442(this, targetSlot, valueSlot, field, isDefaultValue: isDefaultValue, skipSlot);
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 99221, 99462);
                        }
                    }
                    catch (System.Exception)
                    {
                        DynAbs.Tracing.TraceSender.TraceExitLoopByException(10899, 1, 242);
                        throw;
                    }
                    finally
                    {
                        DynAbs.Tracing.TraceSender.TraceExitLoop(10899, 1, 242);
                    }
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 99016, 99477);
                }
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 98616, 99488);

                int
                f_10899_98785_98813(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 98785, 98813);
                    return 0;
                }


                bool
                f_10899_98841_98895(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                type)
                {
                    var return_v = EmptyStructTypeCache.IsTrackableStructType(type);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 98841, 98895);
                    return return_v;
                }


                int
                f_10899_98828_98896(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 98828, 98896);
                    return 0;
                }


                int
                f_10899_99086_99154(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, int
                targetSlot, int
                valueSlot, int
                skipSlot)
                {
                    this_param.InheritNullableStateOfTrackableType(targetSlot, valueSlot, skipSlot);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 99086, 99154);
                    return 0;
                }


                System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol>
                f_10899_99243_99300(Microsoft.CodeAnalysis.CSharp.EmptyStructTypeCache
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                type)
                {
                    var return_v = this_param.GetStructInstanceFields(type);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 99243, 99300);
                    return return_v;
                }


                int
                f_10899_99342_99442(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, int
                targetContainerSlot, int
                valueContainerSlot, Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol
                member, bool
                isDefaultValue, int
                skipSlot)
                {
                    this_param.InheritNullableStateOfMember(targetContainerSlot, valueContainerSlot, (Microsoft.CodeAnalysis.CSharp.Symbol)member, isDefaultValue: isDefaultValue, skipSlot);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 99342, 99442);
                    return 0;
                }


                System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol>
                f_10899_99243_99300_I(System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol>
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 99243, 99300);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 98616, 99488);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 98616, 99488);
            }
        }

        private bool IsSlotMember(int slot, Symbol possibleMember)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 99500, 100182);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 99583, 99639);

                TypeSymbol
                possibleBase = f_10899_99609_99638(possibleMember)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 99653, 99704);

                TypeSymbol
                possibleDerived = f_10899_99682_99703(this, slot)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 99718, 99778);

                HashSet<DiagnosticInfo>?
                discardedUseSiteDiagnostics = null
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 99792, 99864);

                var
                conversionsWithoutNullability = f_10899_99828_99863(_conversions, false)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 99878, 100171);

                return
                f_10899_99902_100036(conversionsWithoutNullability, possibleDerived, possibleBase, ref discardedUseSiteDiagnostics) || (DynAbs.Tracing.TraceSender.Expression_False(10899, 99902, 100170) || f_10899_100057_100170(conversionsWithoutNullability, possibleDerived, possibleBase, ref discardedUseSiteDiagnostics));
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 99500, 100182);

                Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                f_10899_99609_99638(Microsoft.CodeAnalysis.CSharp.Symbol
                this_param)
                {
                    var return_v = this_param.ContainingType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 99609, 99638);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                f_10899_99682_99703(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, int
                slot)
                {
                    var return_v = this_param.NominalSlotType(slot);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 99682, 99703);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.ConversionsBase
                f_10899_99828_99863(Microsoft.CodeAnalysis.CSharp.Conversions
                this_param, bool
                includeNullability)
                {
                    var return_v = this_param.WithNullability(includeNullability);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 99828, 99863);
                    return return_v;
                }


                bool
                f_10899_99902_100036(Microsoft.CodeAnalysis.CSharp.ConversionsBase
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                source, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                destination, ref System.Collections.Generic.HashSet<Microsoft.CodeAnalysis.DiagnosticInfo>?
                useSiteDiagnostics)
                {
                    var return_v = this_param.HasIdentityOrImplicitReferenceConversion(source, destination, ref useSiteDiagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 99902, 100036);
                    return return_v;
                }


                bool
                f_10899_100057_100170(Microsoft.CodeAnalysis.CSharp.ConversionsBase
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                source, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                destination, ref System.Collections.Generic.HashSet<Microsoft.CodeAnalysis.DiagnosticInfo>
                useSiteDiagnostics)
                {
                    var return_v = this_param.HasBoxingConversion(source, destination, ref useSiteDiagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 100057, 100170);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 99500, 100182);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 99500, 100182);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private void InheritNullableStateOfMember(int targetContainerSlot, int valueContainerSlot, Symbol member, bool isDefaultValue, int skipSlot)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 100287, 102868);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 100452, 100490);

                f_10899_100452_100489(targetContainerSlot > 0);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 100504, 100531);

                f_10899_100504_100530(skipSlot > 0);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 100608, 100680) || true) && (!f_10899_100613_100654(this, targetContainerSlot, member))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 100608, 100680);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 100673, 100680);

                    return;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 100608, 100680);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 100696, 100767);

                TypeWithAnnotations
                fieldOrPropertyType = f_10899_100738_100766(member)
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 100783, 102857) || true) && (f_10899_100787_100827(fieldOrPropertyType.Type) || (DynAbs.Tracing.TraceSender.Expression_False(10899, 100787, 100902) || fieldOrPropertyType.TypeKind == TypeKind.TypeParameter) || (DynAbs.Tracing.TraceSender.Expression_False(10899, 100787, 100959) || fieldOrPropertyType.IsNullableType()))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 100783, 102857);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 100993, 101061);

                    int
                    targetMemberSlot = f_10899_101016_101060(this, member, targetContainerSlot)
                    ;

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 101079, 102137) || true) && (targetMemberSlot > 0)
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 101079, 102137);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 101145, 101262);

                        NullableFlowState
                        value = (DynAbs.Tracing.TraceSender.Conditional_F1(10899, 101171, 101185) || ((isDefaultValue && DynAbs.Tracing.TraceSender.Conditional_F2(10899, 101188, 101215)) || DynAbs.Tracing.TraceSender.Conditional_F3(10899, 101218, 101261))) ? NullableFlowState.MaybeNull : fieldOrPropertyType.ToTypeWithState().State
                        ;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 101284, 101309);

                        int
                        valueMemberSlot = -1
                        ;

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 101333, 101827) || true) && (valueContainerSlot > 0)
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 101333, 101827);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 101409, 101468);

                            valueMemberSlot = f_10899_101427_101467(this, member, valueContainerSlot);

                            if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 101494, 101617) || true) && (valueMemberSlot == skipSlot)
                            )

                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 101494, 101617);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 101583, 101590);

                                return;
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 101494, 101617);
                            }
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 101643, 101804);

                            value = (DynAbs.Tracing.TraceSender.Conditional_F1(10899, 101651, 101687) || ((this.State.HasValue(valueMemberSlot) && DynAbs.Tracing.TraceSender.Conditional_F2(10899, 101719, 101746)) || DynAbs.Tracing.TraceSender.Conditional_F3(10899, 101778, 101803))) ? this.State[valueMemberSlot] : NullableFlowState.NotNull;
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 101333, 101827);
                        }
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 101851, 101919);

                        f_10899_101851_101918(this, ref this.State, targetMemberSlot, value);

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 101941, 102118) || true) && (valueMemberSlot > 0)
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 101941, 102118);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 102014, 102095);

                            f_10899_102014_102094(this, targetMemberSlot, valueMemberSlot, skipSlot);
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 101941, 102118);
                        }
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 101079, 102137);
                    }
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 100783, 102857);
                }

                else
                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 100783, 102857);

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 102171, 102857) || true) && (f_10899_102175_102243(fieldOrPropertyType.Type))
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 102171, 102857);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 102277, 102345);

                        int
                        targetMemberSlot = f_10899_102300_102344(this, member, targetContainerSlot)
                        ;

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 102363, 102842) || true) && (targetMemberSlot > 0)
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 102363, 102842);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 102429, 102527);

                            int
                            valueMemberSlot = (DynAbs.Tracing.TraceSender.Conditional_F1(10899, 102451, 102475) || (((valueContainerSlot > 0) && DynAbs.Tracing.TraceSender.Conditional_F2(10899, 102478, 102521)) || DynAbs.Tracing.TraceSender.Conditional_F3(10899, 102524, 102526))) ? f_10899_102478_102521(this, member, valueContainerSlot) : -1
                            ;

                            if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 102549, 102660) || true) && (valueMemberSlot == skipSlot)
                            )

                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 102549, 102660);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 102630, 102637);

                                return;
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 102549, 102660);
                            }
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 102682, 102823);

                            f_10899_102682_102822(this, fieldOrPropertyType.Type, targetMemberSlot, valueMemberSlot, isDefaultValue: isDefaultValue, skipSlot);
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 102363, 102842);
                        }
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 102171, 102857);
                    }
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 100783, 102857);
                }
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 100287, 102868);

                int
                f_10899_100452_100489(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 100452, 100489);
                    return 0;
                }


                int
                f_10899_100504_100530(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 100504, 100530);
                    return 0;
                }


                bool
                f_10899_100613_100654(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, int
                slot, Microsoft.CodeAnalysis.CSharp.Symbol
                possibleMember)
                {
                    var return_v = this_param.IsSlotMember(slot, possibleMember);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 100613, 100654);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                f_10899_100738_100766(Microsoft.CodeAnalysis.CSharp.Symbol
                symbol)
                {
                    var return_v = symbol.GetTypeOrReturnType();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 100738, 100766);
                    return return_v;
                }


                bool
                f_10899_100787_100827(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                this_param)
                {
                    var return_v = this_param.IsReferenceType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 100787, 100827);
                    return return_v;
                }


                int
                f_10899_101016_101060(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.Symbol
                symbol, int
                containingSlot)
                {
                    var return_v = this_param.GetOrCreateSlot(symbol, containingSlot);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 101016, 101060);
                    return return_v;
                }


                int
                f_10899_101427_101467(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.Symbol
                symbol, int
                containingSlot)
                {
                    var return_v = this_param.VariableSlot(symbol, containingSlot);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 101427, 101467);
                    return return_v;
                }


                int
                f_10899_101851_101918(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, ref Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState
                state, int
                slot, Microsoft.CodeAnalysis.CSharp.NullableFlowState
                newState)
                {
                    this_param.SetStateAndTrackForFinally(ref state, slot, newState);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 101851, 101918);
                    return 0;
                }


                int
                f_10899_102014_102094(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, int
                targetSlot, int
                valueSlot, int
                skipSlot)
                {
                    this_param.InheritNullableStateOfTrackableType(targetSlot, valueSlot, skipSlot);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 102014, 102094);
                    return 0;
                }


                bool
                f_10899_102175_102243(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                type)
                {
                    var return_v = EmptyStructTypeCache.IsTrackableStructType(type);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 102175, 102243);
                    return return_v;
                }


                int
                f_10899_102300_102344(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.Symbol
                symbol, int
                containingSlot)
                {
                    var return_v = this_param.GetOrCreateSlot(symbol, containingSlot);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 102300, 102344);
                    return return_v;
                }


                int
                f_10899_102478_102521(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.Symbol
                symbol, int
                containingSlot)
                {
                    var return_v = this_param.GetOrCreateSlot(symbol, containingSlot);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 102478, 102521);
                    return return_v;
                }


                int
                f_10899_102682_102822(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                targetType, int
                targetSlot, int
                valueSlot, bool
                isDefaultValue, int
                skipSlot)
                {
                    this_param.InheritNullableStateOfTrackableStruct(targetType, targetSlot, valueSlot, isDefaultValue: isDefaultValue, skipSlot);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 102682, 102822);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 100287, 102868);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 100287, 102868);
            }
        }

        private TypeSymbol NominalSlotType(int slot)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 102880, 103018);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 102949, 103007);

                return f_10899_102956_103001(_variables[slot].Symbol).Type;
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 102880, 103018);

                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                f_10899_102956_103001(Microsoft.CodeAnalysis.CSharp.Symbol
                symbol)
                {
                    var return_v = symbol.GetTypeOrReturnType();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 102956, 103001);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 102880, 103018);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 102880, 103018);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private void SetStateAndTrackForFinally(ref LocalState state, int slot, NullableFlowState newState)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 103464, 104002);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 103588, 103611);

                state[slot] = newState;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 103625, 103991) || true) && (newState != NullableFlowState.NotNull && (DynAbs.Tracing.TraceSender.Expression_True(10899, 103629, 103696) && NonMonotonicState.HasValue))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 103625, 103991);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 103730, 103769);

                    var
                    tryState = NonMonotonicState.Value
                    ;

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 103787, 103976) || true) && (tryState.HasVariable(slot))
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 103787, 103976);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 103859, 103906);

                        tryState[slot] = f_10899_103876_103905(newState, tryState[slot]);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 103928, 103957);

                        NonMonotonicState = tryState;
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 103787, 103976);
                    }
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 103625, 103991);
                }
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 103464, 104002);

                Microsoft.CodeAnalysis.CSharp.NullableFlowState
                f_10899_103876_103905(Microsoft.CodeAnalysis.CSharp.NullableFlowState
                a, Microsoft.CodeAnalysis.CSharp.NullableFlowState
                b)
                {
                    var return_v = a.Join(b);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 103876, 103905);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 103464, 104002);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 103464, 104002);
            }
        }

        protected override void JoinTryBlockState(ref LocalState self, ref LocalState other)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 104014, 104228);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 104123, 104174);

                var
                tryState = other.GetStateForVariables(self.Id)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 104188, 104217);

                f_10899_104188_104216(this, ref self, ref tryState);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 104014, 104228);

                bool
                f_10899_104188_104216(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, ref Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState
                self, ref Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState
                other)
                {
                    var return_v = this_param.Join(ref self, ref other);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 104188, 104216);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 104014, 104228);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 104014, 104228);
            }
        }

        private void InheritDefaultState(TypeSymbol targetType, int targetSlot)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 104240, 104939);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 104336, 104365);

                f_10899_104336_104364(targetSlot > 0);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 104443, 104511);

                var
                members = f_10899_104457_104510()
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 104525, 104568);

                f_10899_104525_104567(_variables, members, targetSlot);
                foreach (var (variable, slot) in members)
                {
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 104656, 104713);

                    var
                    symbol = f_10899_104669_104712(targetType, variable.Symbol)
                    ;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 104731, 104805);

                    f_10899_104731_104804(this, ref this.State, slot, f_10899_104780_104803(this, symbol));
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 104823, 104884);

                    f_10899_104823_104883(this, f_10899_104843_104871(symbol).Type, slot);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 104913, 104928);

                f_10899_104913_104927(members);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 104240, 104939);

                int
                f_10899_104336_104364(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 104336, 104364);
                    return 0;
                }


                Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<(Microsoft.CodeAnalysis.CSharp.LocalDataFlowPass<Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState, Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalFunctionState>.VariableIdentifier, int)>
                f_10899_104457_104510()
                {
                    var return_v = ArrayBuilder<(VariableIdentifier, int)>.GetInstance();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 104457, 104510);
                    return return_v;
                }


                int
                f_10899_104525_104567(Microsoft.CodeAnalysis.CSharp.NullableWalker.Variables
                this_param, Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<(Microsoft.CodeAnalysis.CSharp.LocalDataFlowPass<Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState, Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalFunctionState>.VariableIdentifier, int)>
                builder, int
                containingSlot)
                {
                    this_param.GetMembers(builder, containingSlot);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 104525, 104567);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.Symbol
                f_10899_104669_104712(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                type, Microsoft.CodeAnalysis.CSharp.Symbol
                symbol)
                {
                    var return_v = AsMemberOfType(type, symbol);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 104669, 104712);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.NullableFlowState
                f_10899_104780_104803(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.Symbol
                symbol)
                {
                    var return_v = this_param.GetDefaultState(symbol);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 104780, 104803);
                    return return_v;
                }


                int
                f_10899_104731_104804(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, ref Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState
                state, int
                slot, Microsoft.CodeAnalysis.CSharp.NullableFlowState
                newState)
                {
                    this_param.SetStateAndTrackForFinally(ref state, slot, newState);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 104731, 104804);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                f_10899_104843_104871(Microsoft.CodeAnalysis.CSharp.Symbol
                symbol)
                {
                    var return_v = symbol.GetTypeOrReturnType();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 104843, 104871);
                    return return_v;
                }


                int
                f_10899_104823_104883(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                targetType, int
                targetSlot)
                {
                    this_param.InheritDefaultState(targetType, targetSlot);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 104823, 104883);
                    return 0;
                }


                int
                f_10899_104913_104927(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<(Microsoft.CodeAnalysis.CSharp.LocalDataFlowPass<Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState, Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalFunctionState>.VariableIdentifier, int)>
                this_param)
                {
                    this_param.Free();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 104913, 104927);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 104240, 104939);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 104240, 104939);
            }
        }

        private NullableFlowState GetDefaultState(Symbol symbol)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 105021, 105137);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 105024, 105137);
                return f_10899_105024_105131(f_10899_105054_105082(symbol).ToTypeWithState(), f_10899_105102_105130(this, symbol)).State; DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 105021, 105137);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 105021, 105137);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 105021, 105137);
            }
            throw new System.Exception("Slicer error: unreachable code");

            Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
            f_10899_105054_105082(Microsoft.CodeAnalysis.CSharp.Symbol
            symbol)
            {
                var return_v = symbol.GetTypeOrReturnType();
                DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 105054, 105082);
                return return_v;
            }


            Microsoft.CodeAnalysis.CSharp.Symbols.FlowAnalysisAnnotations
            f_10899_105102_105130(Microsoft.CodeAnalysis.CSharp.NullableWalker
            this_param, Microsoft.CodeAnalysis.CSharp.Symbol
            symbol)
            {
                var return_v = this_param.GetRValueAnnotations(symbol);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 105102, 105130);
                return return_v;
            }


            Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
            f_10899_105024_105131(Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
            typeWithState, Microsoft.CodeAnalysis.CSharp.Symbols.FlowAnalysisAnnotations
            annotations)
            {
                var return_v = ApplyUnconditionalAnnotations(typeWithState, annotations);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 105024, 105131);
                return return_v;
            }

        }

        private void InheritNullableStateOfTrackableType(int targetSlot, int valueSlot, int skipSlot)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 105150, 105976);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 105268, 105297);

                f_10899_105268_105296(targetSlot > 0);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 105311, 105339);

                f_10899_105311_105338(valueSlot > 0);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 105432, 105500);

                var
                members = f_10899_105446_105499()
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 105514, 105556);

                f_10899_105514_105555(_variables, members, valueSlot);
                foreach (var (variable, slot) in members)
                {
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 105644, 105673);

                    var
                    member = variable.Symbol
                    ;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 105691, 105810);

                    f_10899_105691_105809(f_10899_105704_105715(member) == SymbolKind.Field || (DynAbs.Tracing.TraceSender.Expression_False(10899, 105704, 105773) || f_10899_105739_105750(member) == SymbolKind.Property) || (DynAbs.Tracing.TraceSender.Expression_False(10899, 105704, 105808) || f_10899_105777_105788(member) == SymbolKind.Event));
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 105828, 105921);

                    f_10899_105828_105920(this, targetSlot, valueSlot, member, isDefaultValue: false, skipSlot);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 105950, 105965);

                f_10899_105950_105964(members);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 105150, 105976);

                int
                f_10899_105268_105296(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 105268, 105296);
                    return 0;
                }


                int
                f_10899_105311_105338(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 105311, 105338);
                    return 0;
                }


                Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<(Microsoft.CodeAnalysis.CSharp.LocalDataFlowPass<Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState, Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalFunctionState>.VariableIdentifier, int)>
                f_10899_105446_105499()
                {
                    var return_v = ArrayBuilder<(VariableIdentifier, int)>.GetInstance();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 105446, 105499);
                    return return_v;
                }


                int
                f_10899_105514_105555(Microsoft.CodeAnalysis.CSharp.NullableWalker.Variables
                this_param, Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<(Microsoft.CodeAnalysis.CSharp.LocalDataFlowPass<Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState, Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalFunctionState>.VariableIdentifier, int)>
                builder, int
                containingSlot)
                {
                    this_param.GetMembers(builder, containingSlot);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 105514, 105555);
                    return 0;
                }


                Microsoft.CodeAnalysis.SymbolKind
                f_10899_105704_105715(Microsoft.CodeAnalysis.CSharp.Symbol
                this_param)
                {
                    var return_v = this_param.Kind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 105704, 105715);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SymbolKind
                f_10899_105739_105750(Microsoft.CodeAnalysis.CSharp.Symbol
                this_param)
                {
                    var return_v = this_param.Kind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 105739, 105750);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SymbolKind
                f_10899_105777_105788(Microsoft.CodeAnalysis.CSharp.Symbol
                this_param)
                {
                    var return_v = this_param.Kind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 105777, 105788);
                    return return_v;
                }


                int
                f_10899_105691_105809(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 105691, 105809);
                    return 0;
                }


                int
                f_10899_105828_105920(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, int
                targetContainerSlot, int
                valueContainerSlot, Microsoft.CodeAnalysis.CSharp.Symbol
                member, bool
                isDefaultValue, int
                skipSlot)
                {
                    this_param.InheritNullableStateOfMember(targetContainerSlot, valueContainerSlot, member, isDefaultValue: isDefaultValue, skipSlot);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 105828, 105920);
                    return 0;
                }


                int
                f_10899_105950_105964(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<(Microsoft.CodeAnalysis.CSharp.LocalDataFlowPass<Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState, Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalFunctionState>.VariableIdentifier, int)>
                this_param)
                {
                    this_param.Free();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 105950, 105964);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 105150, 105976);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 105150, 105976);
            }
        }

        protected override LocalState TopState()
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 105988, 106179);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 106053, 106103);

                var
                state = LocalState.ReachableState(_variables)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 106117, 106141);

                state.PopulateAll(this);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 106155, 106168);

                return state;
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 105988, 106179);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 105988, 106179);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 105988, 106179);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        protected override LocalState UnreachableState()
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 106191, 106322);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 106264, 106311);

                return LocalState.UnreachableState(_variables);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 106191, 106322);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 106191, 106322);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 106191, 106322);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        protected override LocalState ReachableBottomState()
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 106334, 106557);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 106501, 106546);

                return LocalState.ReachableState(_variables);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 106334, 106557);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 106334, 106557);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 106334, 106557);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private void EnterParameters()
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 106569, 108746);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 106624, 106729) || true) && (!(CurrentSymbol is MethodSymbol methodSymbol))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 106624, 106729);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 106707, 106714);

                    return;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 106624, 106729);
                }

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 106745, 107502) || true) && (methodSymbol is SynthesizedRecordConstructor)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 106745, 107502);

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 106827, 107196) || true) && (_hasInitialState)
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 106827, 107196);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 107170, 107177);

                        return;
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 106827, 107196);
                    }
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 106745, 107502);
                }

                else
                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 106745, 107502);

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 107230, 107502) || true) && (f_10899_107234_107262(methodSymbol))
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 107230, 107502);

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 107296, 107487) || true) && (!_hasInitialState)
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 107296, 107487);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 107461, 107468);

                            return;
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 107296, 107487);
                        }
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 107230, 107502);
                    }
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 106745, 107502);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 107676, 107742);

                methodSymbol = f_10899_107691_107725(methodSymbol) ?? (DynAbs.Tracing.TraceSender.Expression_Null<Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol>(10899, 107691, 107741) ?? methodSymbol);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 107758, 107805);

                var
                methodParameters = f_10899_107781_107804(methodSymbol)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 107819, 107931);

                var
                signatureParameters = f_10899_107845_107930(((DynAbs.Tracing.TraceSender.Conditional_F1(10899, 107846, 107878) || ((_useDelegateInvokeParameterTypes && DynAbs.Tracing.TraceSender.Conditional_F2(10899, 107881, 107903)) || DynAbs.Tracing.TraceSender.Conditional_F3(10899, 107906, 107918))) ? _delegateInvokeMethod! : methodSymbol))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 108072, 108126);

                var
                parameterDefaultsNotAssignedState = State.Clone()
                ;
                try
                {
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 108149, 108154);
                    for (int
        i = 0
        ; (DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 108140, 108666) || true) && (i < methodParameters.Length)
        ; DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 108185, 108188)
        , i++, DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 108140, 108666))

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 108140, 108666);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 108222, 108258);

                        var
                        parameter = methodParameters[i]
                        ;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 108463, 108592);

                        var
                        parameterType = (DynAbs.Tracing.TraceSender.Conditional_F1(10899, 108483, 108514) || ((i >= signatureParameters.Length && DynAbs.Tracing.TraceSender.Conditional_F2(10899, 108517, 108546)) || DynAbs.Tracing.TraceSender.Conditional_F3(10899, 108549, 108591))) ? f_10899_108517_108546(parameter) : f_10899_108549_108591(signatureParameters[i])
                        ;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 108610, 108651);

                        f_10899_108610_108650(this, parameter, parameterType);
                    }
                }
                catch (System.Exception)
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoopByException(10899, 1, 527);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoop(10899, 1, 527);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 108680, 108735);

                f_10899_108680_108734(this, ref State, ref parameterDefaultsNotAssignedState);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 106569, 108746);

                bool
                f_10899_107234_107262(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                method)
                {
                    var return_v = method.IsConstructor();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 107234, 107262);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                f_10899_107691_107725(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                this_param)
                {
                    var return_v = this_param.PartialDefinitionPart;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 107691, 107725);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol>
                f_10899_107781_107804(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                this_param)
                {
                    var return_v = this_param.Parameters;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 107781, 107804);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol>
                f_10899_107845_107930(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                this_param)
                {
                    var return_v = this_param.Parameters;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 107845, 107930);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                f_10899_108517_108546(Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol
                this_param)
                {
                    var return_v = this_param.TypeWithAnnotations;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 108517, 108546);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                f_10899_108549_108591(Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol
                this_param)
                {
                    var return_v = this_param.TypeWithAnnotations;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 108549, 108591);
                    return return_v;
                }


                int
                f_10899_108610_108650(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol
                parameter, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                parameterType)
                {
                    this_param.EnterParameter(parameter, parameterType);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 108610, 108650);
                    return 0;
                }


                bool
                f_10899_108680_108734(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, ref Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState
                self, ref Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState
                other)
                {
                    var return_v = this_param.Join(ref self, ref other);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 108680, 108734);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 106569, 108746);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 106569, 108746);
            }
        }

        private void EnterParameter(ParameterSymbol parameter, TypeWithAnnotations parameterType)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 108758, 109631);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 108872, 108917);

                f_10899_108872_108916(_variables, parameter, parameterType);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 108931, 108969);

                int
                slot = f_10899_108942_108968(this, parameter)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 108985, 109019);

                f_10899_108985_109018(!IsConditionalState);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 109033, 109620) || true) && (slot > 0)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 109033, 109620);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 109079, 109165);

                    var
                    state = f_10899_109091_109158(parameterType, f_10899_109124_109157(parameter)).State
                    ;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 109183, 109208);

                    this.State[slot] = state;

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 109226, 109605) || true) && (f_10899_109230_109292(parameterType.Type))
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 109226, 109605);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 109334, 109586);

                        f_10899_109334_109585(this, parameterType.Type, slot, valueSlot: -1, isDefaultValue: f_10899_109530_109576_M(DynAbs.Tracing.TraceSender.TraceConditionalAccessExpression(f_10899_109530_109568(parameter), 10899, 109530, 109576)?.IsNull) == true);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 109226, 109605);
                    }
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 109033, 109620);
                }
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 108758, 109631);

                int
                f_10899_108872_108916(Microsoft.CodeAnalysis.CSharp.NullableWalker.Variables
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol
                symbol, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                type)
                {
                    this_param.SetType((Microsoft.CodeAnalysis.CSharp.Symbol)symbol, type);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 108872, 108916);
                    return 0;
                }


                int
                f_10899_108942_108968(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol
                symbol)
                {
                    var return_v = this_param.GetOrCreateSlot((Microsoft.CodeAnalysis.CSharp.Symbol)symbol);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 108942, 108968);
                    return return_v;
                }


                int
                f_10899_108985_109018(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 108985, 109018);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.FlowAnalysisAnnotations
                f_10899_109124_109157(Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol
                this_param)
                {
                    var return_v = this_param.FlowAnalysisAnnotations;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 109124, 109157);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                f_10899_109091_109158(Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                parameterType, Microsoft.CodeAnalysis.CSharp.Symbols.FlowAnalysisAnnotations
                parameterAnnotations)
                {
                    var return_v = GetParameterState(parameterType, parameterAnnotations);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 109091, 109158);
                    return return_v;
                }


                bool
                f_10899_109230_109292(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                type)
                {
                    var return_v = EmptyStructTypeCache.IsTrackableStructType(type);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 109230, 109292);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ConstantValue?
                f_10899_109530_109568(Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol
                this_param)
                {
                    var return_v = this_param.ExplicitDefaultConstantValue;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 109530, 109568);
                    return return_v;
                }


                bool?
                f_10899_109530_109576_M(bool?
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 109530, 109576);
                    return return_v;
                }


                int
                f_10899_109334_109585(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                targetType, int
                targetSlot, int
                valueSlot, bool
                isDefaultValue)
                {
                    this_param.InheritNullableStateOfTrackableStruct(targetType, targetSlot, valueSlot: valueSlot, isDefaultValue: isDefaultValue);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 109334, 109585);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 108758, 109631);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 108758, 109631);
            }
        }

        public override BoundNode? VisitParameterEqualsValue(BoundParameterEqualsValue equalsValue)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 109643, 110524);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 109759, 109797);

                var
                parameter = f_10899_109775_109796(equalsValue)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 109811, 109873);

                var
                parameterAnnotations = f_10899_109838_109872(this, parameter)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 109887, 109989);

                var
                parameterLValueType = f_10899_109913_109988(f_10899_109936_109965(parameter), parameterAnnotations)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 110005, 110270);

                var
                resultType = f_10899_110022_110269(this, f_10899_110072_110089(equalsValue), parameterLValueType, useLegacyWarnings: false, trackMembers: false, assignmentKind: AssignmentKind.Assignment)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 110386, 110485);

                f_10899_110386_110484(this, resultType, parameterAnnotations, f_10899_110450_110483(f_10899_110450_110467(equalsValue).Syntax));
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 110501, 110513);

                return null;
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 109643, 110524);

                Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol
                f_10899_109775_109796(Microsoft.CodeAnalysis.CSharp.BoundParameterEqualsValue
                this_param)
                {
                    var return_v = this_param.Parameter;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 109775, 109796);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.FlowAnalysisAnnotations
                f_10899_109838_109872(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol
                parameter)
                {
                    var return_v = this_param.GetParameterAnnotations(parameter);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 109838, 109872);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                f_10899_109936_109965(Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol
                this_param)
                {
                    var return_v = this_param.TypeWithAnnotations;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 109936, 109965);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                f_10899_109913_109988(Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                declaredType, Microsoft.CodeAnalysis.CSharp.Symbols.FlowAnalysisAnnotations
                flowAnalysisAnnotations)
                {
                    var return_v = ApplyLValueAnnotations(declaredType, flowAnalysisAnnotations);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 109913, 109988);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10899_110072_110089(Microsoft.CodeAnalysis.CSharp.BoundParameterEqualsValue
                this_param)
                {
                    var return_v = this_param.Value;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 110072, 110089);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                f_10899_110022_110269(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                expr, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                targetTypeOpt, bool
                useLegacyWarnings, bool
                trackMembers, Microsoft.CodeAnalysis.CSharp.NullableWalker.AssignmentKind
                assignmentKind)
                {
                    var return_v = this_param.VisitOptionalImplicitConversion(expr, targetTypeOpt, useLegacyWarnings: useLegacyWarnings, trackMembers: trackMembers, assignmentKind: assignmentKind);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 110022, 110269);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10899_110450_110467(Microsoft.CodeAnalysis.CSharp.BoundParameterEqualsValue
                this_param)
                {
                    var return_v = this_param.Value;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 110450, 110467);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Location
                f_10899_110450_110483(Microsoft.CodeAnalysis.SyntaxNode
                this_param)
                {
                    var return_v = this_param.Location;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 110450, 110483);
                    return return_v;
                }


                bool
                f_10899_110386_110484(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                state, Microsoft.CodeAnalysis.CSharp.Symbols.FlowAnalysisAnnotations
                annotations, Microsoft.CodeAnalysis.Location
                location)
                {
                    var return_v = this_param.CheckDisallowedNullAssignment(state, annotations, location);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 110386, 110484);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 109643, 110524);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 109643, 110524);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private static TypeWithState GetParameterState(TypeWithAnnotations parameterType, FlowAnalysisAnnotations parameterAnnotations)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterStaticMethod(10899, 110536, 111160);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 110688, 110884) || true) && ((parameterAnnotations & FlowAnalysisAnnotations.AllowNull) != 0)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 110688, 110884);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 110789, 110869);

                    return TypeWithState.Create(parameterType.Type, NullableFlowState.MaybeDefault);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 110688, 110884);
                }

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 110900, 111094) || true) && ((parameterAnnotations & FlowAnalysisAnnotations.DisallowNull) != 0)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 110900, 111094);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 111004, 111079);

                    return TypeWithState.Create(parameterType.Type, NullableFlowState.NotNull);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 110900, 111094);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 111110, 111149);

                return parameterType.ToTypeWithState();
                DynAbs.Tracing.TraceSender.TraceExitStaticMethod(10899, 110536, 111160);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 110536, 111160);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 110536, 111160);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public sealed override BoundNode? VisitReturnStatement(BoundReturnStatement node)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 111172, 114255);
                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations returnType = default(Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations);
                Microsoft.CodeAnalysis.CSharp.Symbols.FlowAnalysisAnnotations returnAnnotations = default(Microsoft.CodeAnalysis.CSharp.Symbols.FlowAnalysisAnnotations);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 111278, 111312);

                f_10899_111278_111311(!IsConditionalState);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 111328, 111358);

                var
                expr = f_10899_111339_111357(node)
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 111372, 111624) || true) && (expr == null)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 111372, 111624);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 111422, 111456);

                    f_10899_111422_111455(this, node.Syntax);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 111474, 111544);

                    f_10899_111474_111543(f_10899_111474_111489(), f_10899_111494_111542(node, this.State, label: null));
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 111562, 111579);

                    f_10899_111562_111578(this);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 111597, 111609);

                    return null;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 111372, 111624);
                }

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 111756, 113371) || true) && (_returnTypesOpt == null && (DynAbs.Tracing.TraceSender.Expression_True(10899, 111760, 111903) && f_10899_111804_111903(this, out returnType, out returnAnnotations)))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 111756, 113371);

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 111937, 113073) || true) && (f_10899_111941_111953(node) == RefKind.None && (DynAbs.Tracing.TraceSender.Expression_True(10899, 111941, 112051) && f_10899_111994_112021(returnType.Type) == SpecialType.System_Boolean))
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 111937, 113073);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 112218, 112230);

                        f_10899_112218_112229(this, expr);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 111937, 113073);
                    }

                    else

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 111937, 113073);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 112312, 112338);

                        TypeWithState
                        returnState
                        = default(TypeWithState);

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 112360, 112793) || true) && (f_10899_112364_112376(node) == RefKind.None)
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 112360, 112793);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 112442, 112576);

                            returnState = f_10899_112456_112575(this, expr, returnType, useLegacyWarnings: false, trackMembers: false, AssignmentKind.Return);
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 112360, 112793);
                        }

                        else

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 112360, 112793);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 112719, 112770);

                            returnState = f_10899_112733_112769(this, expr, returnType);
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 112360, 112793);
                        }
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 112928, 113054);

                        f_10899_112928_113053(this, returnState, f_10899_112971_113009(returnAnnotations), f_10899_113011_113031(node.Syntax), boundValueOpt: expr);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 111937, 113073);
                    }
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 111756, 113371);
                }

                else

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 111756, 113371);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 113139, 113179);

                    var
                    result = f_10899_113152_113178(this, expr)
                    ;

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 113197, 113356) || true) && (_returnTypesOpt != null)
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 113197, 113356);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 113266, 113337);

                        f_10899_113266_113336(_returnTypesOpt, (node, result.ToTypeWithAnnotations(compilation)));
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 113197, 113356);
                    }
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 111756, 113371);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 113387, 113421);

                f_10899_113387_113420(this, node.Syntax);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 113437, 113909) || true) && (IsConditionalState)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 113437, 113909);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 113493, 113538);

                    var
                    joinedState = this.StateWhenTrue.Clone()
                    ;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 113556, 113603);

                    f_10899_113556_113602(this, ref joinedState, ref this.StateWhenFalse);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 113621, 113758);

                    f_10899_113621_113757(f_10899_113621_113636(), f_10899_113641_113756(node, joinedState, label: null, this.IsConditionalState, this.StateWhenTrue, this.StateWhenFalse));
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 113437, 113909);
                }

                else

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 113437, 113909);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 113824, 113894);

                    f_10899_113824_113893(f_10899_113824_113839(), f_10899_113844_113892(node, this.State, label: null));
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 113437, 113909);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 113925, 113935);

                f_10899_113925_113934(this);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 113949, 114183) || true) && (CurrentSymbol is MethodSymbol method)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 113949, 114183);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 114023, 114168);

                    f_10899_114023_114167(this, node.Syntax, this.State, f_10899_114072_114089(method), f_10899_114091_114129(method), f_10899_114131_114141().State, outputParam: null);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 113949, 114183);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 114199, 114216);

                f_10899_114199_114215(this);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 114232, 114244);

                return null;
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 111172, 114255);

                int
                f_10899_111278_111311(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 111278, 111311);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression?
                f_10899_111339_111357(Microsoft.CodeAnalysis.CSharp.BoundReturnStatement
                this_param)
                {
                    var return_v = this_param.ExpressionOpt;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 111339, 111357);
                    return return_v;
                }


                int
                f_10899_111422_111455(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.SyntaxNode
                syntaxOpt)
                {
                    this_param.EnforceDoesNotReturn(syntaxOpt);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 111422, 111455);
                    return 0;
                }


                Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.AbstractFlowPass<Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState, Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalFunctionState>.PendingBranch>
                f_10899_111474_111489()
                {
                    var return_v = PendingBranches;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 111474, 111489);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.AbstractFlowPass<Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState, Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalFunctionState>.PendingBranch
                f_10899_111494_111542(Microsoft.CodeAnalysis.CSharp.BoundReturnStatement
                branch, Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState
                state, Microsoft.CodeAnalysis.CSharp.Symbols.LabelSymbol
                label)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.AbstractFlowPass<Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState, Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalFunctionState>.PendingBranch((Microsoft.CodeAnalysis.CSharp.BoundNode)branch, state, label: label);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 111494, 111542);
                    return return_v;
                }


                int
                f_10899_111474_111543(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.AbstractFlowPass<Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState, Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalFunctionState>.PendingBranch>
                this_param, Microsoft.CodeAnalysis.CSharp.AbstractFlowPass<Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState, Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalFunctionState>.PendingBranch
                item)
                {
                    this_param.Add(item);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 111474, 111543);
                    return 0;
                }


                int
                f_10899_111562_111578(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param)
                {
                    this_param.SetUnreachable();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 111562, 111578);
                    return 0;
                }


                bool
                f_10899_111804_111903(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, out Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                type, out Microsoft.CodeAnalysis.CSharp.Symbols.FlowAnalysisAnnotations
                annotations)
                {
                    var return_v = this_param.TryGetReturnType(out type, out annotations);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 111804, 111903);
                    return return_v;
                }


                Microsoft.CodeAnalysis.RefKind
                f_10899_111941_111953(Microsoft.CodeAnalysis.CSharp.BoundReturnStatement
                this_param)
                {
                    var return_v = this_param.RefKind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 111941, 111953);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SpecialType
                f_10899_111994_112021(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                this_param)
                {
                    var return_v = this_param.SpecialType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 111994, 112021);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundNode?
                f_10899_112218_112229(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                node)
                {
                    var return_v = this_param.Visit((Microsoft.CodeAnalysis.CSharp.BoundNode)node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 112218, 112229);
                    return return_v;
                }


                Microsoft.CodeAnalysis.RefKind
                f_10899_112364_112376(Microsoft.CodeAnalysis.CSharp.BoundReturnStatement
                this_param)
                {
                    var return_v = this_param.RefKind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 112364, 112376);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                f_10899_112456_112575(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                expr, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                targetTypeOpt, bool
                useLegacyWarnings, bool
                trackMembers, Microsoft.CodeAnalysis.CSharp.NullableWalker.AssignmentKind
                assignmentKind)
                {
                    var return_v = this_param.VisitOptionalImplicitConversion(expr, targetTypeOpt, useLegacyWarnings: useLegacyWarnings, trackMembers: trackMembers, assignmentKind);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 112456, 112575);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                f_10899_112733_112769(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                expr, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                destinationType)
                {
                    var return_v = this_param.VisitRefExpression(expr, destinationType);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 112733, 112769);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.FlowAnalysisAnnotations
                f_10899_112971_113009(Microsoft.CodeAnalysis.CSharp.Symbols.FlowAnalysisAnnotations
                outwardAnnotations)
                {
                    var return_v = ToInwardAnnotations(outwardAnnotations);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 112971, 113009);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Location
                f_10899_113011_113031(Microsoft.CodeAnalysis.SyntaxNode
                this_param)
                {
                    var return_v = this_param.Location;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 113011, 113031);
                    return return_v;
                }


                bool
                f_10899_112928_113053(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                state, Microsoft.CodeAnalysis.CSharp.Symbols.FlowAnalysisAnnotations
                annotations, Microsoft.CodeAnalysis.Location
                location, Microsoft.CodeAnalysis.CSharp.BoundExpression
                boundValueOpt)
                {
                    var return_v = this_param.CheckDisallowedNullAssignment(state, annotations, location, boundValueOpt: boundValueOpt);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 112928, 113053);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                f_10899_113152_113178(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                node)
                {
                    var return_v = this_param.VisitRvalueWithState(node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 113152, 113178);
                    return return_v;
                }


                int
                f_10899_113266_113336(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<(Microsoft.CodeAnalysis.CSharp.BoundReturnStatement, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations)>
                this_param, (Microsoft.CodeAnalysis.CSharp.BoundReturnStatement node, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations)
                item)
                {
                    this_param.Add(((Microsoft.CodeAnalysis.CSharp.BoundReturnStatement, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations))item);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 113266, 113336);
                    return 0;
                }


                int
                f_10899_113387_113420(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.SyntaxNode
                syntaxOpt)
                {
                    this_param.EnforceDoesNotReturn(syntaxOpt);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 113387, 113420);
                    return 0;
                }


                bool
                f_10899_113556_113602(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, ref Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState
                self, ref Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState
                other)
                {
                    var return_v = this_param.Join(ref self, ref other);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 113556, 113602);
                    return return_v;
                }


                Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.AbstractFlowPass<Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState, Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalFunctionState>.PendingBranch>
                f_10899_113621_113636()
                {
                    var return_v = PendingBranches;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 113621, 113636);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.AbstractFlowPass<Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState, Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalFunctionState>.PendingBranch
                f_10899_113641_113756(Microsoft.CodeAnalysis.CSharp.BoundReturnStatement
                branch, Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState
                state, Microsoft.CodeAnalysis.CSharp.Symbols.LabelSymbol
                label, bool
                isConditionalState, Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState
                stateWhenTrue, Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState
                stateWhenFalse)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.AbstractFlowPass<Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState, Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalFunctionState>.PendingBranch((Microsoft.CodeAnalysis.CSharp.BoundNode)branch, state, label: label, isConditionalState, stateWhenTrue, stateWhenFalse);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 113641, 113756);
                    return return_v;
                }


                int
                f_10899_113621_113757(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.AbstractFlowPass<Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState, Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalFunctionState>.PendingBranch>
                this_param, Microsoft.CodeAnalysis.CSharp.AbstractFlowPass<Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState, Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalFunctionState>.PendingBranch
                item)
                {
                    this_param.Add(item);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 113621, 113757);
                    return 0;
                }


                Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.AbstractFlowPass<Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState, Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalFunctionState>.PendingBranch>
                f_10899_113824_113839()
                {
                    var return_v = PendingBranches;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 113824, 113839);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.AbstractFlowPass<Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState, Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalFunctionState>.PendingBranch
                f_10899_113844_113892(Microsoft.CodeAnalysis.CSharp.BoundReturnStatement
                branch, Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState
                state, Microsoft.CodeAnalysis.CSharp.Symbols.LabelSymbol
                label)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.AbstractFlowPass<Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState, Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalFunctionState>.PendingBranch((Microsoft.CodeAnalysis.CSharp.BoundNode)branch, state, label: label);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 113844, 113892);
                    return return_v;
                }


                int
                f_10899_113824_113893(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.AbstractFlowPass<Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState, Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalFunctionState>.PendingBranch>
                this_param, Microsoft.CodeAnalysis.CSharp.AbstractFlowPass<Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState, Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalFunctionState>.PendingBranch
                item)
                {
                    this_param.Add(item);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 113824, 113893);
                    return 0;
                }


                int
                f_10899_113925_113934(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param)
                {
                    this_param.Unsplit();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 113925, 113934);
                    return 0;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol>
                f_10899_114072_114089(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                this_param)
                {
                    var return_v = this_param.Parameters;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 114072, 114089);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableHashSet<string>
                f_10899_114091_114129(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                this_param)
                {
                    var return_v = this_param.ReturnNotNullIfParameterNotNull;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 114091, 114129);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                f_10899_114131_114141()
                {
                    var return_v = ResultType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 114131, 114141);
                    return return_v;
                }


                int
                f_10899_114023_114167(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.SyntaxNode
                syntaxOpt, Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState
                state, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol>
                parameters, System.Collections.Immutable.ImmutableHashSet<string>
                inputParamNames, Microsoft.CodeAnalysis.CSharp.NullableFlowState
                outputState, Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol?
                outputParam)
                {
                    this_param.EnforceNotNullIfNotNull(syntaxOpt, state, parameters, inputParamNames, outputState, outputParam: outputParam);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 114023, 114167);
                    return 0;
                }


                int
                f_10899_114199_114215(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param)
                {
                    this_param.SetUnreachable();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 114199, 114215);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 111172, 114255);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 111172, 114255);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private TypeWithState VisitRefExpression(BoundExpression expr, TypeWithAnnotations destinationType)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 114267, 115252);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 114391, 114403);

                f_10899_114391_114402(this, expr);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 114417, 114455);

                TypeWithState
                resultType = f_10899_114444_114454()
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 114469, 115207) || true) && (f_10899_114473_114491_M(!expr.IsSuppressed) && (DynAbs.Tracing.TraceSender.Expression_True(10899, 114473, 114597) && f_10899_114495_114568(f_10899_114495_114552(expr, includeExplicitConversions: false).expression) != BoundKind.ThrowExpression))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 114469, 115207);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 114631, 114671);

                    var
                    lvalueResultType = f_10899_114654_114670()
                    ;

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 114689, 115192) || true) && (f_10899_114693_114749(lvalueResultType, destinationType))
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 114689, 115192);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 114841, 114927);

                        f_10899_114841_114926(this, expr.Syntax, lvalueResultType, destinationType);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 114689, 115192);
                    }

                    else

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 114689, 115192);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 115076, 115173);

                        f_10899_115076_115172(this, expr, destinationType, resultType, useLegacyWarnings: false);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 114689, 115192);
                    }
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 114469, 115207);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 115223, 115241);

                return resultType;
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 114267, 115252);

                Microsoft.CodeAnalysis.CSharp.BoundNode?
                f_10899_114391_114402(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                node)
                {
                    var return_v = this_param.Visit((Microsoft.CodeAnalysis.CSharp.BoundNode)node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 114391, 114402);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                f_10899_114444_114454()
                {
                    var return_v = ResultType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 114444, 114454);
                    return return_v;
                }


                bool
                f_10899_114473_114491_M(bool
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 114473, 114491);
                    return return_v;
                }


                (Microsoft.CodeAnalysis.CSharp.BoundExpression expression, Microsoft.CodeAnalysis.CSharp.Conversion conversion)
                f_10899_114495_114552(Microsoft.CodeAnalysis.CSharp.BoundExpression
                expr, bool
                includeExplicitConversions)
                {
                    var return_v = RemoveConversion(expr, includeExplicitConversions: includeExplicitConversions);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 114495, 114552);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundKind
                f_10899_114495_114568(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.Kind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 114495, 114568);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                f_10899_114654_114670()
                {
                    var return_v = LvalueResultType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 114654, 114670);
                    return return_v;
                }


                bool
                f_10899_114693_114749(Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                type1, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                type2)
                {
                    var return_v = IsNullabilityMismatch(type1, type2);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 114693, 114749);
                    return return_v;
                }


                int
                f_10899_114841_114926(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.SyntaxNode
                syntaxNode, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                sourceType, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                destinationType)
                {
                    this_param.ReportNullabilityMismatchInAssignment(syntaxNode, (object)sourceType, (object)destinationType);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 114841, 114926);
                    return 0;
                }


                int
                f_10899_115076_115172(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                value, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                targetType, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                valueType, bool
                useLegacyWarnings)
                {
                    this_param.ReportNullableAssignmentIfNecessary(value, targetType, valueType, useLegacyWarnings: useLegacyWarnings);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 115076, 115172);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 114267, 115252);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 114267, 115252);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private bool TryGetReturnType(out TypeWithAnnotations type, out FlowAnalysisAnnotations annotations)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 115264, 116744);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 115389, 115432);

                var
                method = CurrentSymbol as MethodSymbol
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 115446, 115620) || true) && (method is null)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 115446, 115620);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 115498, 115513);

                    type = default;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 115531, 115574);

                    annotations = FlowAnalysisAnnotations.None;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 115592, 115605);

                    return false;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 115446, 115620);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 115636, 115691);

                var
                delegateOrMethod = _delegateInvokeMethod ?? (DynAbs.Tracing.TraceSender.Expression_Null<Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol?>(10899, 115659, 115690) ?? method)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 115705, 115765);

                var
                returnType = f_10899_115722_115764(delegateOrMethod)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 115779, 115854);

                f_10899_115779_115853((object)returnType != LambdaSymbol.ReturnTypeIsBeingInferred);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 115870, 116053) || true) && (returnType.IsVoidType())
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 115870, 116053);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 115931, 115946);

                    type = default;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 115964, 116007);

                    annotations = FlowAnalysisAnnotations.None;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 116025, 116038);

                    return false;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 115870, 116053);
                }

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 116069, 116312) || true) && (f_10899_116073_116088_M(!method.IsAsync))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 116069, 116312);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 116122, 116187);

                    annotations = f_10899_116136_116186(delegateOrMethod);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 116205, 116267);

                    type = f_10899_116212_116266(returnType, annotations);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 116285, 116297);

                    return true;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 116069, 116312);
                }

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 116328, 116618) || true) && (f_10899_116332_116378(returnType.Type, compilation))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 116328, 116618);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 116412, 116512);

                    type = ((NamedTypeSymbol)returnType.Type).TypeArgumentsWithAnnotationsNoUseSiteDiagnostics.Single();
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 116530, 116573);

                    annotations = FlowAnalysisAnnotations.None;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 116591, 116603);

                    return true;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 116328, 116618);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 116634, 116649);

                type = default;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 116663, 116706);

                annotations = FlowAnalysisAnnotations.None;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 116720, 116733);

                return false;
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 115264, 116744);

                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                f_10899_115722_115764(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                this_param)
                {
                    var return_v = this_param.ReturnTypeWithAnnotations;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 115722, 115764);
                    return return_v;
                }


                int
                f_10899_115779_115853(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 115779, 115853);
                    return 0;
                }


                bool
                f_10899_116073_116088_M(bool
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 116073, 116088);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.FlowAnalysisAnnotations
                f_10899_116136_116186(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                this_param)
                {
                    var return_v = this_param.ReturnTypeFlowAnalysisAnnotations;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 116136, 116186);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                f_10899_116212_116266(Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                declaredType, Microsoft.CodeAnalysis.CSharp.Symbols.FlowAnalysisAnnotations
                annotations)
                {
                    var return_v = ApplyUnconditionalAnnotations(declaredType, annotations);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 116212, 116266);
                    return return_v;
                }


                bool
                f_10899_116332_116378(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                type, Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                compilation)
                {
                    var return_v = type.IsGenericTaskType(compilation);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 116332, 116378);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 115264, 116744);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 115264, 116744);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override BoundNode? VisitLocal(BoundLocal node)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 116756, 117871);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 116835, 116864);

                var
                local = f_10899_116847_116863(node)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 116878, 116912);

                int
                slot = f_10899_116889_116911(this, local)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 116926, 116967);

                var
                type = f_10899_116937_116966(this, local)
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 116983, 117704) || true) && (!f_10899_116988_117155(f_10899_116988_116997(node), type.Type, TypeCompareKind.ConsiderEverything | TypeCompareKind.IgnoreNullableModifiersForReferenceTypes | TypeCompareKind.IgnoreDynamicAndTupleNames))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 116983, 117704);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 117536, 117601);

                    f_10899_117536_117600(f_10899_117549_117572(f_10899_117549_117558(node)) || (DynAbs.Tracing.TraceSender.Expression_False(10899, 117549, 117599) || f_10899_117576_117599(type.Type)));
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 117619, 117689);

                    type = TypeWithAnnotations.Create(f_10899_117653_117662(node), type.NullableAnnotation);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 116983, 117704);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 117720, 117791);

                f_10899_117720_117790(this, node, f_10899_117736_117783(this, type.ToTypeWithState(), slot), type);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 117805, 117834);

                f_10899_117805_117833(this, node);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 117848, 117860);

                return null;
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 116756, 117871);

                Microsoft.CodeAnalysis.CSharp.Symbols.LocalSymbol
                f_10899_116847_116863(Microsoft.CodeAnalysis.CSharp.BoundLocal
                this_param)
                {
                    var return_v = this_param.LocalSymbol;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 116847, 116863);
                    return return_v;
                }


                int
                f_10899_116889_116911(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.LocalSymbol
                symbol)
                {
                    var return_v = this_param.GetOrCreateSlot((Microsoft.CodeAnalysis.CSharp.Symbol)symbol);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 116889, 116911);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                f_10899_116937_116966(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.LocalSymbol
                local)
                {
                    var return_v = this_param.GetDeclaredLocalResult(local);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 116937, 116966);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                f_10899_116988_116997(Microsoft.CodeAnalysis.CSharp.BoundLocal
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 116988, 116997);
                    return return_v;
                }


                bool
                f_10899_116988_117155(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                t2, Microsoft.CodeAnalysis.TypeCompareKind
                compareKind)
                {
                    var return_v = this_param.Equals(t2, compareKind);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 116988, 117155);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                f_10899_117549_117558(Microsoft.CodeAnalysis.CSharp.BoundLocal
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 117549, 117558);
                    return return_v;
                }


                bool
                f_10899_117549_117572(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                type)
                {
                    var return_v = type.IsErrorType();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 117549, 117572);
                    return return_v;
                }


                bool
                f_10899_117576_117599(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                type)
                {
                    var return_v = type.IsErrorType();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 117576, 117599);
                    return return_v;
                }


                int
                f_10899_117536_117600(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 117536, 117600);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                f_10899_117653_117662(Microsoft.CodeAnalysis.CSharp.BoundLocal
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 117653, 117662);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                f_10899_117736_117783(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                type, int
                slot)
                {
                    var return_v = this_param.GetAdjustedResult(type, slot);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 117736, 117783);
                    return return_v;
                }


                int
                f_10899_117720_117790(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundLocal
                expression, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                resultType, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                lvalueType)
                {
                    this_param.SetResult((Microsoft.CodeAnalysis.CSharp.BoundExpression)expression, resultType, lvalueType);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 117720, 117790);
                    return 0;
                }


                int
                f_10899_117805_117833(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundLocal
                node)
                {
                    this_param.SplitIfBooleanConstant((Microsoft.CodeAnalysis.CSharp.BoundExpression)node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 117805, 117833);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 116756, 117871);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 116756, 117871);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override BoundNode? VisitBlock(BoundBlock node)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 117883, 118082);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 117962, 117989);

                f_10899_117962_117988(this, f_10899_117976_117987(node));
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 118003, 118043);

                f_10899_118003_118042(this, node);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 118059, 118071);

                return null;
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 117883, 118082);

                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.LocalSymbol>
                f_10899_117976_117987(Microsoft.CodeAnalysis.CSharp.BoundBlock
                this_param)
                {
                    var return_v = this_param.Locals;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 117976, 117987);
                    return return_v;
                }


                int
                f_10899_117962_117988(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.LocalSymbol>
                locals)
                {
                    this_param.DeclareLocals(locals);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 117962, 117988);
                    return 0;
                }


                int
                f_10899_118003_118042(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundBlock
                block)
                {
                    this_param.VisitStatementsWithLocalFunctions(block);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 118003, 118042);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 117883, 118082);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 117883, 118082);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private void VisitStatementsWithLocalFunctions(BoundBlock block)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 118094, 120065);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 119134, 120054) || true) && (!TrackingRegions && (DynAbs.Tracing.TraceSender.Expression_True(10899, 119138, 119196) && f_10899_119158_119196_M(!block.LocalFunctions.IsDefaultOrEmpty)))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 119134, 120054);
                    try
                    {
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 119278, 119519);
                        foreach (var stmt in f_10899_119299_119315_I(f_10899_119299_119315(block)))
                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 119278, 119519);

                            if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 119357, 119500) || true) && (f_10899_119361_119370(stmt) != BoundKind.LocalFunctionStatement)
                            )

                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 119357, 119500);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 119456, 119477);

                                f_10899_119456_119476(this, stmt);
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 119357, 119500);
                            }
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 119278, 119519);
                        }
                    }
                    catch (System.Exception)
                    {
                        DynAbs.Tracing.TraceSender.TraceExitLoopByException(10899, 1, 242);
                        throw;
                    }
                    finally
                    {
                        DynAbs.Tracing.TraceSender.TraceExitLoop(10899, 1, 242);
                    }
                    try
                    {
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 119595, 119854);
                        foreach (var stmt in f_10899_119616_119632_I(f_10899_119616_119632(block)))
                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 119595, 119854);

                            if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 119674, 119835) || true) && (stmt is BoundLocalFunctionStatement localFunc)
                            )

                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 119674, 119835);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 119773, 119812);

                                f_10899_119773_119811(this, localFunc);
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 119674, 119835);
                            }
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 119595, 119854);
                        }
                    }
                    catch (System.Exception)
                    {
                        DynAbs.Tracing.TraceSender.TraceExitLoopByException(10899, 1, 260);
                        throw;
                    }
                    finally
                    {
                        DynAbs.Tracing.TraceSender.TraceExitLoop(10899, 1, 260);
                    }
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 119134, 120054);
                }

                else

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 119134, 120054);
                    try
                    {
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 119920, 120039);
                        foreach (var stmt in f_10899_119941_119957_I(f_10899_119941_119957(block)))
                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 119920, 120039);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 119999, 120020);

                            f_10899_119999_120019(this, stmt);
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 119920, 120039);
                        }
                    }
                    catch (System.Exception)
                    {
                        DynAbs.Tracing.TraceSender.TraceExitLoopByException(10899, 1, 120);
                        throw;
                    }
                    finally
                    {
                        DynAbs.Tracing.TraceSender.TraceExitLoop(10899, 1, 120);
                    }
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 119134, 120054);
                }
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 118094, 120065);

                bool
                f_10899_119158_119196_M(bool
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 119158, 119196);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundStatement>
                f_10899_119299_119315(Microsoft.CodeAnalysis.CSharp.BoundBlock
                this_param)
                {
                    var return_v = this_param.Statements;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 119299, 119315);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundKind
                f_10899_119361_119370(Microsoft.CodeAnalysis.CSharp.BoundStatement
                this_param)
                {
                    var return_v = this_param.Kind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 119361, 119370);
                    return return_v;
                }


                int
                f_10899_119456_119476(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundStatement
                statement)
                {
                    this_param.VisitStatement(statement);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 119456, 119476);
                    return 0;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundStatement>
                f_10899_119299_119315_I(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundStatement>
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 119299, 119315);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundStatement>
                f_10899_119616_119632(Microsoft.CodeAnalysis.CSharp.BoundBlock
                this_param)
                {
                    var return_v = this_param.Statements;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 119616, 119632);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundNode?
                f_10899_119773_119811(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundLocalFunctionStatement
                node)
                {
                    var return_v = this_param.VisitLocalFunctionStatement(node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 119773, 119811);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundStatement>
                f_10899_119616_119632_I(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundStatement>
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 119616, 119632);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundStatement>
                f_10899_119941_119957(Microsoft.CodeAnalysis.CSharp.BoundBlock
                this_param)
                {
                    var return_v = this_param.Statements;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 119941, 119957);
                    return return_v;
                }


                int
                f_10899_119999_120019(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundStatement
                statement)
                {
                    this_param.VisitStatement(statement);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 119999, 120019);
                    return 0;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundStatement>
                f_10899_119941_119957_I(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundStatement>
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 119941, 119957);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 118094, 120065);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 118094, 120065);
            }
        }

        public override BoundNode? VisitLocalFunctionStatement(BoundLocalFunctionStatement node)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 120077, 121318);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 120190, 120218);

                var
                localFunc = f_10899_120206_120217(node)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 120232, 120295);

                var
                localFunctionState = f_10899_120257_120294(this, localFunc)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 120493, 120516);

                var
                state = f_10899_120505_120515(this)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 120530, 120583);

                var
                startingState = localFunctionState.StartingState
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 120597, 120973);

                startingState.ForEach((slot, variables) =>
                {
                    var symbol = variables[variables.RootSlot(slot)].Symbol;
                    if (Symbol.IsCaptured(symbol, localFunc))
                    {
                        state[slot] = startingState[slot];
                    }
                }, _variables);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 120987, 121021);

                localFunctionState.Visited = true;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 121037, 121244);

                f_10899_121037_121243(this, node, localFunc, state, delegateInvokeMethod: null, useDelegateInvokeParameterTypes: false);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 121260, 121279);

                f_10899_121260_121278(this);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 121295, 121307);

                return null;
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 120077, 121318);

                Microsoft.CodeAnalysis.CSharp.Symbols.LocalFunctionSymbol
                f_10899_120206_120217(Microsoft.CodeAnalysis.CSharp.BoundLocalFunctionStatement
                this_param)
                {
                    var return_v = this_param.Symbol;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 120206, 120217);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalFunctionState
                f_10899_120257_120294(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.LocalFunctionSymbol
                localFunc)
                {
                    var return_v = this_param.GetOrCreateLocalFuncUsages(localFunc);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 120257, 120294);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState
                f_10899_120505_120515(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param)
                {
                    var return_v = this_param.TopState();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 120505, 120515);
                    return return_v;
                }


                int
                f_10899_121037_121243(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundLocalFunctionStatement
                lambdaOrFunction, Microsoft.CodeAnalysis.CSharp.Symbols.LocalFunctionSymbol
                lambdaOrFunctionSymbol, Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState
                state, Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol?
                delegateInvokeMethod, bool
                useDelegateInvokeParameterTypes)
                {
                    this_param.AnalyzeLocalFunctionOrLambda((Microsoft.CodeAnalysis.CSharp.IBoundLambdaOrFunction)lambdaOrFunction, (Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol)lambdaOrFunctionSymbol, state, delegateInvokeMethod: delegateInvokeMethod, useDelegateInvokeParameterTypes: useDelegateInvokeParameterTypes);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 121037, 121243);
                    return 0;
                }


                int
                f_10899_121260_121278(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param)
                {
                    this_param.SetInvalidResult();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 121260, 121278);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 120077, 121318);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 120077, 121318);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private Variables GetOrCreateNestedFunctionVariables(Variables container, MethodSymbol lambdaOrLocalFunction)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 121330, 121957);
                Microsoft.CodeAnalysis.CSharp.NullableWalker.Variables variables = default(Microsoft.CodeAnalysis.CSharp.NullableWalker.Variables);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 121464, 121549);

                if (_nestedFunctionVariables is null)
                    DynAbs.Tracing.TraceSender.TraceEnterExpression(10899, 121464, 121549);

                _nestedFunctionVariables ??= f_10899_121493_121548();

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 121563, 121845) || true) && (!f_10899_121568_121646(_nestedFunctionVariables, lambdaOrLocalFunction, out variables))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 121563, 121845);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 121680, 121749);

                    variables = f_10899_121692_121748(container, lambdaOrLocalFunction);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 121767, 121830);

                    f_10899_121767_121829(_nestedFunctionVariables, lambdaOrLocalFunction, variables);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 121563, 121845);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 121859, 121915);

                f_10899_121859_121914((object?)variables.Container == container);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 121929, 121946);

                return variables;
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 121330, 121957);

                Microsoft.CodeAnalysis.PooledObjects.PooledDictionary<Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol, Microsoft.CodeAnalysis.CSharp.NullableWalker.Variables>
                f_10899_121493_121548()
                {
                    var return_v = PooledDictionary<MethodSymbol, Variables>.GetInstance();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 121493, 121548);
                    return return_v;
                }


                bool
                f_10899_121568_121646(Microsoft.CodeAnalysis.PooledObjects.PooledDictionary<Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol, Microsoft.CodeAnalysis.CSharp.NullableWalker.Variables>
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                key, out Microsoft.CodeAnalysis.CSharp.NullableWalker.Variables
                value)
                {
                    var return_v = this_param.TryGetValue(key, out value);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 121568, 121646);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.NullableWalker.Variables
                f_10899_121692_121748(Microsoft.CodeAnalysis.CSharp.NullableWalker.Variables
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                method)
                {
                    var return_v = this_param.CreateNestedMethodScope(method);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 121692, 121748);
                    return return_v;
                }


                int
                f_10899_121767_121829(Microsoft.CodeAnalysis.PooledObjects.PooledDictionary<Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol, Microsoft.CodeAnalysis.CSharp.NullableWalker.Variables>
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                key, Microsoft.CodeAnalysis.CSharp.NullableWalker.Variables
                value)
                {
                    this_param.Add(key, value);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 121767, 121829);
                    return 0;
                }


                int
                f_10899_121859_121914(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 121859, 121914);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 121330, 121957);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 121330, 121957);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private void AnalyzeLocalFunctionOrLambda(
                    IBoundLambdaOrFunction lambdaOrFunction,
                    MethodSymbol lambdaOrFunctionSymbol,
                    LocalState state,
                    MethodSymbol? delegateInvokeMethod,
                    bool useDelegateInvokeParameterTypes)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 121969, 124293);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 122271, 122306);

                var
                oldSymbol = this.CurrentSymbol
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 122320, 122364);

                this.CurrentSymbol = lambdaOrFunctionSymbol;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 122380, 122461);

                f_10899_122380_122460(!useDelegateInvokeParameterTypes || (DynAbs.Tracing.TraceSender.Expression_False(10899, 122393, 122459) || delegateInvokeMethod is object));
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 122475, 122527);

                var
                oldDelegateInvokeMethod = _delegateInvokeMethod
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 122541, 122586);

                _delegateInvokeMethod = delegateInvokeMethod;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 122600, 122674);

                var
                oldUseDelegateInvokeParameterTypes = _useDelegateInvokeParameterTypes
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 122688, 122755);

                _useDelegateInvokeParameterTypes = useDelegateInvokeParameterTypes;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 122771, 122808);

                var
                oldReturnTypes = _returnTypesOpt
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 122822, 122845);

                _returnTypesOpt = null;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 122861, 122887);

                var
                oldState = this.State
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 122901, 122985);

                _variables = f_10899_122914_122984(this, _variables, lambdaOrFunctionSymbol);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 122999, 123054);

                this.State = state.CreateNestedMethodState(_variables);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 123068, 123153);

                var
                previousSlot = f_10899_123087_123146_I(DynAbs.Tracing.TraceSender.TraceConditionalAccessExpression(_snapshotBuilderOpt, 10899, 123087, 123146)?.EnterNewWalker(lambdaOrFunctionSymbol)) ?? (DynAbs.Tracing.TraceSender.Expression_Null<int?>(10899, 123087, 123152) ?? -1)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 123169, 123200);

                var
                oldPending = f_10899_123186_123199(this)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 123216, 123234);

                f_10899_123216_123233(this);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 123250, 123282);

                var
                oldPending2 = f_10899_123268_123281(this)
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 123458, 123607) || true) && (f_10899_123462_123495(lambdaOrFunctionSymbol))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 123458, 123607);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 123529, 123592);

                    f_10899_123529_123591(f_10899_123529_123544(), f_10899_123549_123590(null, this.State, null));
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 123458, 123607);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 123623, 123658);

                f_10899_123623_123657(this, f_10899_123635_123656(lambdaOrFunction));
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 123672, 123700);

                f_10899_123672_123699(this, oldPending2);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 123769, 123832);

                ImmutableArray<PendingBranch>
                pendingReturns = f_10899_123816_123831(this)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 123846, 123873);

                f_10899_123846_123872(this, oldPending);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 123889, 123959);

                DynAbs.Tracing.TraceSender.TraceInvocationWrapper(() => DynAbs.Tracing.TraceSender.TraceConditionalAccessExpression(_snapshotBuilderOpt, 10899, 123889, 123958)?.ExitWalker(f_10899_123921_123943(this), previousSlot), 10899, 123909, 123958);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 123973, 124008);

                _variables = _variables.Container!;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 124022, 124044);

                this.State = oldState;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 124058, 124091);

                _returnTypesOpt = oldReturnTypes;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 124105, 124175);

                _useDelegateInvokeParameterTypes = oldUseDelegateInvokeParameterTypes;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 124189, 124237);

                _delegateInvokeMethod = oldDelegateInvokeMethod;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 124251, 124282);

                this.CurrentSymbol = oldSymbol;
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 121969, 124293);

                int
                f_10899_122380_122460(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 122380, 122460);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.NullableWalker.Variables
                f_10899_122914_122984(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.NullableWalker.Variables
                container, Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                lambdaOrLocalFunction)
                {
                    var return_v = this_param.GetOrCreateNestedFunctionVariables(container, lambdaOrLocalFunction);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 122914, 122984);
                    return return_v;
                }


                int?
                f_10899_123087_123146_I(int?
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 123087, 123146);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.AbstractFlowPass<Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState, Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalFunctionState>.SavedPending
                f_10899_123186_123199(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param)
                {
                    var return_v = this_param.SavePending();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 123186, 123199);
                    return return_v;
                }


                int
                f_10899_123216_123233(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param)
                {
                    this_param.EnterParameters();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 123216, 123233);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.AbstractFlowPass<Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState, Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalFunctionState>.SavedPending
                f_10899_123268_123281(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param)
                {
                    var return_v = this_param.SavePending();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 123268, 123281);
                    return return_v;
                }


                bool
                f_10899_123462_123495(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                this_param)
                {
                    var return_v = this_param.IsIterator;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 123462, 123495);
                    return return_v;
                }


                Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.AbstractFlowPass<Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState, Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalFunctionState>.PendingBranch>
                f_10899_123529_123544()
                {
                    var return_v = PendingBranches;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 123529, 123544);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.AbstractFlowPass<Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState, Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalFunctionState>.PendingBranch
                f_10899_123549_123590(Microsoft.CodeAnalysis.CSharp.BoundNode
                branch, Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState
                state, Microsoft.CodeAnalysis.CSharp.Symbols.LabelSymbol
                label)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.AbstractFlowPass<Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState, Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalFunctionState>.PendingBranch(branch, state, label);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 123549, 123590);
                    return return_v;
                }


                int
                f_10899_123529_123591(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.AbstractFlowPass<Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState, Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalFunctionState>.PendingBranch>
                this_param, Microsoft.CodeAnalysis.CSharp.AbstractFlowPass<Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState, Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalFunctionState>.PendingBranch
                item)
                {
                    this_param.Add(item);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 123529, 123591);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.BoundBlock
                f_10899_123635_123656(Microsoft.CodeAnalysis.CSharp.IBoundLambdaOrFunction
                this_param)
                {
                    var return_v = this_param.Body;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 123635, 123656);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundNode
                f_10899_123623_123657(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundBlock
                node)
                {
                    var return_v = this_param.VisitAlways((Microsoft.CodeAnalysis.CSharp.BoundNode)node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 123623, 123657);
                    return return_v;
                }


                int
                f_10899_123672_123699(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.AbstractFlowPass<Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState, Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalFunctionState>.SavedPending
                oldPending)
                {
                    this_param.RestorePending(oldPending);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 123672, 123699);
                    return 0;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.AbstractFlowPass<Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState, Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalFunctionState>.PendingBranch>
                f_10899_123816_123831(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param)
                {
                    var return_v = this_param.RemoveReturns();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 123816, 123831);
                    return return_v;
                }


                int
                f_10899_123846_123872(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.AbstractFlowPass<Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState, Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalFunctionState>.SavedPending
                oldPending)
                {
                    this_param.RestorePending(oldPending);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 123846, 123872);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.NullableWalker.SharedWalkerState
                f_10899_123921_123943(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param)
                {
                    var return_v = this_param.SaveSharedState();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 123921, 123943);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 121969, 124293);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 121969, 124293);
            }
        }

        protected override void VisitLocalFunctionUse(
                    LocalFunctionSymbol symbol,
                    LocalFunctionState localFunctionState,
                    SyntaxNode syntax,
                    bool isCall)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 124305, 124667);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 124619, 124656);

                throw f_10899_124625_124655();
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 124305, 124667);

                System.Exception
                f_10899_124625_124655()
                {
                    var return_v = ExceptionUtilities.Unreachable;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 124625, 124655);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 124305, 124667);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 124305, 124667);
            }
        }

        private void VisitLocalFunctionUse(LocalFunctionSymbol symbol)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 124679, 125333);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 124766, 124800);

                f_10899_124766_124799(!IsConditionalState);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 124814, 124874);

                var
                localFunctionState = f_10899_124839_124873(this, symbol)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 124888, 124964);

                var
                state = State.GetStateForVariables(localFunctionState.StartingState.Id)
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 124978, 125322) || true) && (f_10899_124982_125035(this, ref localFunctionState.StartingState, ref state) && (DynAbs.Tracing.TraceSender.Expression_True(10899, 124982, 125082) && localFunctionState.Visited))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 124978, 125322);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 125279, 125307);

                    stateChangedAfterUse = true;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 124978, 125322);
                }
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 124679, 125333);

                int
                f_10899_124766_124799(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 124766, 124799);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalFunctionState
                f_10899_124839_124873(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.LocalFunctionSymbol
                localFunc)
                {
                    var return_v = this_param.GetOrCreateLocalFuncUsages(localFunc);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 124839, 124873);
                    return return_v;
                }


                bool
                f_10899_124982_125035(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, ref Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState
                self, ref Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState
                other)
                {
                    var return_v = this_param.Join(ref self, ref other);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 124982, 125035);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 124679, 125333);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 124679, 125333);
            }
        }

        public override BoundNode? VisitDoStatement(BoundDoStatement node)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 125345, 125523);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 125436, 125463);

                f_10899_125436_125462(this, f_10899_125450_125461(node));
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 125477, 125512);

                return DynAbs.Tracing.TraceSender.TraceInvocationWrapper(() => base.VisitDoStatement(node), 10899, 125484, 125511);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 125345, 125523);

                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.LocalSymbol>
                f_10899_125450_125461(Microsoft.CodeAnalysis.CSharp.BoundDoStatement
                this_param)
                {
                    var return_v = this_param.Locals;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 125450, 125461);
                    return return_v;
                }


                int
                f_10899_125436_125462(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.LocalSymbol>
                locals)
                {
                    this_param.DeclareLocals(locals);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 125436, 125462);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 125345, 125523);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 125345, 125523);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override BoundNode? VisitWhileStatement(BoundWhileStatement node)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 125535, 125722);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 125632, 125659);

                f_10899_125632_125658(this, f_10899_125646_125657(node));
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 125673, 125711);

                return DynAbs.Tracing.TraceSender.TraceInvocationWrapper(() => base.VisitWhileStatement(node), 10899, 125680, 125710);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 125535, 125722);

                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.LocalSymbol>
                f_10899_125646_125657(Microsoft.CodeAnalysis.CSharp.BoundWhileStatement
                this_param)
                {
                    var return_v = this_param.Locals;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 125646, 125657);
                    return return_v;
                }


                int
                f_10899_125632_125658(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.LocalSymbol>
                locals)
                {
                    this_param.DeclareLocals(locals);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 125632, 125658);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 125535, 125722);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 125535, 125722);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override BoundNode? VisitWithExpression(BoundWithExpression withExpr)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 125734, 127140);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 125835, 125869);

                f_10899_125835_125868(!IsConditionalState);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 125885, 125918);

                var
                receiver = f_10899_125900_125917(withExpr)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 125932, 125954);

                f_10899_125932_125953(this, receiver);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 125968, 126008);

                _ = f_10899_125972_126007(this, receiver);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 126024, 126138);

                var
                resultType = f_10899_126041_126088_M(DynAbs.Tracing.TraceSender.TraceConditionalAccessExpression(f_10899_126041_126061(withExpr), 10899, 126041, 126088)?.ReturnTypeWithAnnotations) ?? (DynAbs.Tracing.TraceSender.Expression_Null<Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations?>(10899, 126041, 126137) ?? f_10899_126092_126102().ToTypeWithAnnotations(compilation))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 126152, 126274);

                var
                resultState = f_10899_126170_126273(resultType.ToTypeWithState(), f_10899_126230_126272(this, f_10899_126251_126271(withExpr)))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 126288, 126342);

                var
                resultSlot = f_10899_126305_126341(this, withExpr)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 126461, 126560);

                f_10899_126461_126559(this, receiver, resultType, resultSlot, resultState, f_10899_126540_126558(this, receiver));
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 126698, 126743);

                f_10899_126698_126742(this, withExpr, resultState, resultType);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 126757, 126886);

                f_10899_126757_126885(this, containingSymbol: null, resultSlot, f_10899_126824_126854(withExpr), FlowAnalysisAnnotations.None);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 127117, 127129);

                return null;
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 125734, 127140);

                int
                f_10899_125835_125868(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 125835, 125868);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10899_125900_125917(Microsoft.CodeAnalysis.CSharp.BoundWithExpression
                this_param)
                {
                    var return_v = this_param.Receiver;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 125900, 125917);
                    return return_v;
                }


                int
                f_10899_125932_125953(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                node)
                {
                    this_param.VisitRvalue(node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 125932, 125953);
                    return 0;
                }


                bool
                f_10899_125972_126007(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                receiverOpt)
                {
                    var return_v = this_param.CheckPossibleNullReceiver(receiverOpt);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 125972, 126007);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol?
                f_10899_126041_126061(Microsoft.CodeAnalysis.CSharp.BoundWithExpression
                this_param)
                {
                    var return_v = this_param.CloneMethod;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 126041, 126061);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations?
                f_10899_126041_126088_M(Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations?
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 126041, 126088);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                f_10899_126092_126102()
                {
                    var return_v = ResultType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 126092, 126102);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol?
                f_10899_126251_126271(Microsoft.CodeAnalysis.CSharp.BoundWithExpression
                this_param)
                {
                    var return_v = this_param.CloneMethod;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 126251, 126271);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.FlowAnalysisAnnotations
                f_10899_126230_126272(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol?
                symbol)
                {
                    var return_v = this_param.GetRValueAnnotations((Microsoft.CodeAnalysis.CSharp.Symbol?)symbol);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 126230, 126272);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                f_10899_126170_126273(Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                typeWithState, Microsoft.CodeAnalysis.CSharp.Symbols.FlowAnalysisAnnotations
                annotations)
                {
                    var return_v = ApplyUnconditionalAnnotations(typeWithState, annotations);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 126170, 126273);
                    return return_v;
                }


                int
                f_10899_126305_126341(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundWithExpression
                node)
                {
                    var return_v = this_param.GetOrCreatePlaceholderSlot((Microsoft.CodeAnalysis.CSharp.BoundExpression)node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 126305, 126341);
                    return return_v;
                }


                int
                f_10899_126540_126558(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                node)
                {
                    var return_v = this_param.MakeSlot(node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 126540, 126558);
                    return return_v;
                }


                int
                f_10899_126461_126559(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                valueOpt, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                targetType, int
                targetSlot, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                valueType, int
                valueSlot)
                {
                    this_param.TrackNullableStateForAssignment(valueOpt, targetType, targetSlot, valueType, valueSlot);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 126461, 126559);
                    return 0;
                }


                int
                f_10899_126698_126742(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundWithExpression
                expression, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                resultType, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                lvalueType)
                {
                    this_param.SetResult((Microsoft.CodeAnalysis.CSharp.BoundExpression)expression, resultType, lvalueType);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 126698, 126742);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.BoundObjectInitializerExpressionBase
                f_10899_126824_126854(Microsoft.CodeAnalysis.CSharp.BoundWithExpression
                this_param)
                {
                    var return_v = this_param.InitializerExpression;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 126824, 126854);
                    return return_v;
                }


                int
                f_10899_126757_126885(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.Symbol?
                containingSymbol, int
                containingSlot, Microsoft.CodeAnalysis.CSharp.BoundObjectInitializerExpressionBase
                node, Microsoft.CodeAnalysis.CSharp.Symbols.FlowAnalysisAnnotations
                leftAnnotations)
                {
                    this_param.VisitObjectCreationInitializer(containingSymbol: containingSymbol, containingSlot, (Microsoft.CodeAnalysis.CSharp.BoundExpression)node, leftAnnotations);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 126757, 126885);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 125734, 127140);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 125734, 127140);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override BoundNode? VisitForStatement(BoundForStatement node)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 127152, 127384);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 127245, 127277);

                f_10899_127245_127276(this, f_10899_127259_127275(node));
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 127291, 127323);

                f_10899_127291_127322(this, f_10899_127305_127321(node));
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 127337, 127373);

                return DynAbs.Tracing.TraceSender.TraceInvocationWrapper(() => base.VisitForStatement(node), 10899, 127344, 127372);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 127152, 127384);

                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.LocalSymbol>
                f_10899_127259_127275(Microsoft.CodeAnalysis.CSharp.BoundForStatement
                this_param)
                {
                    var return_v = this_param.OuterLocals;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 127259, 127275);
                    return return_v;
                }


                int
                f_10899_127245_127276(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.LocalSymbol>
                locals)
                {
                    this_param.DeclareLocals(locals);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 127245, 127276);
                    return 0;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.LocalSymbol>
                f_10899_127305_127321(Microsoft.CodeAnalysis.CSharp.BoundForStatement
                this_param)
                {
                    var return_v = this_param.InnerLocals;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 127305, 127321);
                    return return_v;
                }


                int
                f_10899_127291_127322(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.LocalSymbol>
                locals)
                {
                    this_param.DeclareLocals(locals);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 127291, 127322);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 127152, 127384);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 127152, 127384);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override BoundNode? VisitForEachStatement(BoundForEachStatement node)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 127396, 127601);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 127497, 127536);

                f_10899_127497_127535(this, f_10899_127511_127534(node));
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 127550, 127590);

                return DynAbs.Tracing.TraceSender.TraceInvocationWrapper(() => base.VisitForEachStatement(node), 10899, 127557, 127589);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 127396, 127601);

                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.LocalSymbol>
                f_10899_127511_127534(Microsoft.CodeAnalysis.CSharp.BoundForEachStatement
                this_param)
                {
                    var return_v = this_param.IterationVariables;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 127511, 127534);
                    return return_v;
                }


                int
                f_10899_127497_127535(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.LocalSymbol>
                locals)
                {
                    this_param.DeclareLocals(locals);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 127497, 127535);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 127396, 127601);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 127396, 127601);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override BoundNode? VisitUsingStatement(BoundUsingStatement node)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 127613, 127835);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 127710, 127737);

                f_10899_127710_127736(this, f_10899_127724_127735(node));
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 127751, 127772);

                f_10899_127751_127771(this, f_10899_127757_127770(node));
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 127786, 127824);

                return DynAbs.Tracing.TraceSender.TraceInvocationWrapper(() => base.VisitUsingStatement(node), 10899, 127793, 127823);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 127613, 127835);

                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.LocalSymbol>
                f_10899_127724_127735(Microsoft.CodeAnalysis.CSharp.BoundUsingStatement
                this_param)
                {
                    var return_v = this_param.Locals;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 127724, 127735);
                    return return_v;
                }


                int
                f_10899_127710_127736(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.LocalSymbol>
                locals)
                {
                    this_param.DeclareLocals(locals);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 127710, 127736);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.BoundAwaitableInfo?
                f_10899_127757_127770(Microsoft.CodeAnalysis.CSharp.BoundUsingStatement
                this_param)
                {
                    var return_v = this_param.AwaitOpt;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 127757, 127770);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundNode?
                f_10899_127751_127771(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundAwaitableInfo?
                node)
                {
                    var return_v = this_param.Visit((Microsoft.CodeAnalysis.CSharp.BoundNode?)node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 127751, 127771);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 127613, 127835);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 127613, 127835);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override BoundNode? VisitUsingLocalDeclarations(BoundUsingLocalDeclarations node)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 127847, 128052);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 127960, 127981);

                f_10899_127960_127980(this, f_10899_127966_127979(node));
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 127995, 128041);

                return DynAbs.Tracing.TraceSender.TraceInvocationWrapper(() => base.VisitUsingLocalDeclarations(node), 10899, 128002, 128040);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 127847, 128052);

                Microsoft.CodeAnalysis.CSharp.BoundAwaitableInfo?
                f_10899_127966_127979(Microsoft.CodeAnalysis.CSharp.BoundUsingLocalDeclarations
                this_param)
                {
                    var return_v = this_param.AwaitOpt;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 127966, 127979);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundNode?
                f_10899_127960_127980(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundAwaitableInfo?
                node)
                {
                    var return_v = this_param.Visit((Microsoft.CodeAnalysis.CSharp.BoundNode?)node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 127960, 127980);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 127847, 128052);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 127847, 128052);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override BoundNode? VisitFixedStatement(BoundFixedStatement node)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 128064, 128251);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 128161, 128188);

                f_10899_128161_128187(this, f_10899_128175_128186(node));
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 128202, 128240);

                return DynAbs.Tracing.TraceSender.TraceInvocationWrapper(() => base.VisitFixedStatement(node), 10899, 128209, 128239);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 128064, 128251);

                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.LocalSymbol>
                f_10899_128175_128186(Microsoft.CodeAnalysis.CSharp.BoundFixedStatement
                this_param)
                {
                    var return_v = this_param.Locals;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 128175, 128186);
                    return return_v;
                }


                int
                f_10899_128161_128187(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.LocalSymbol>
                locals)
                {
                    this_param.DeclareLocals(locals);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 128161, 128187);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 128064, 128251);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 128064, 128251);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override BoundNode? VisitConstructorMethodBody(BoundConstructorMethodBody node)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 128263, 128471);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 128374, 128401);

                f_10899_128374_128400(this, f_10899_128388_128399(node));
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 128415, 128460);

                return DynAbs.Tracing.TraceSender.TraceInvocationWrapper(() => base.VisitConstructorMethodBody(node), 10899, 128422, 128459);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 128263, 128471);

                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.LocalSymbol>
                f_10899_128388_128399(Microsoft.CodeAnalysis.CSharp.BoundConstructorMethodBody
                this_param)
                {
                    var return_v = this_param.Locals;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 128388, 128399);
                    return return_v;
                }


                int
                f_10899_128374_128400(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.LocalSymbol>
                locals)
                {
                    this_param.DeclareLocals(locals);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 128374, 128400);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 128263, 128471);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 128263, 128471);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private void DeclareLocal(LocalSymbol local)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 128483, 128932);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 128552, 128921) || true) && (f_10899_128556_128577(local) != LocalDeclarationKind.None)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 128552, 128921);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 128640, 128674);

                    int
                    slot = f_10899_128651_128673(this, local)
                    ;

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 128692, 128906) || true) && (slot > 0)
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 128692, 128906);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 128746, 128803);

                        this.State[slot] = f_10899_128765_128802(this, ref this.State, slot);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 128825, 128887);

                        f_10899_128825_128886(this, f_10899_128845_128874(this, local).Type, slot);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 128692, 128906);
                    }
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 128552, 128921);
                }
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 128483, 128932);

                Microsoft.CodeAnalysis.CSharp.Symbols.LocalDeclarationKind
                f_10899_128556_128577(Microsoft.CodeAnalysis.CSharp.Symbols.LocalSymbol
                this_param)
                {
                    var return_v = this_param.DeclarationKind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 128556, 128577);
                    return return_v;
                }


                int
                f_10899_128651_128673(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.LocalSymbol
                symbol)
                {
                    var return_v = this_param.GetOrCreateSlot((Microsoft.CodeAnalysis.CSharp.Symbol)symbol);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 128651, 128673);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.NullableFlowState
                f_10899_128765_128802(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, ref Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState
                state, int
                slot)
                {
                    var return_v = this_param.GetDefaultState(ref state, slot);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 128765, 128802);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                f_10899_128845_128874(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.LocalSymbol
                local)
                {
                    var return_v = this_param.GetDeclaredLocalResult(local);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 128845, 128874);
                    return return_v;
                }


                int
                f_10899_128825_128886(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                targetType, int
                targetSlot)
                {
                    this_param.InheritDefaultState(targetType, targetSlot);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 128825, 128886);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 128483, 128932);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 128483, 128932);
            }
        }

        private void DeclareLocals(ImmutableArray<LocalSymbol> locals)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 128944, 129139);
                try
                {
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 129031, 129128);
                    foreach (var local in f_10899_129053_129059_I(locals))
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 129031, 129128);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 129093, 129113);

                        f_10899_129093_129112(this, local);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 129031, 129128);
                    }
                }
                catch (System.Exception)
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoopByException(10899, 1, 98);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoop(10899, 1, 98);
                }
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 128944, 129139);

                int
                f_10899_129093_129112(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.LocalSymbol
                local)
                {
                    this_param.DeclareLocal(local);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 129093, 129112);
                    return 0;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.LocalSymbol>
                f_10899_129053_129059_I(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.LocalSymbol>
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 129053, 129059);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 128944, 129139);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 128944, 129139);
            }
        }

        public override BoundNode? VisitLocalDeclaration(BoundLocalDeclaration node)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 129151, 131676);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 129252, 129281);

                var
                local = f_10899_129264_129280(node)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 129295, 129329);

                int
                slot = f_10899_129306_129328(this, local)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 129810, 129844);

                f_10899_129810_129843(!IsConditionalState);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 129858, 129895);

                var
                oldDisable = _disableDiagnostics
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 129909, 129936);

                _disableDiagnostics = true;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 129950, 129975);

                var
                currentState = State
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 129989, 130027);

                f_10899_129989_130026(this, f_10899_130008_130025(node));
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 130041, 130074);

                _disableDiagnostics = oldDisable;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 130088, 130111);

                f_10899_130088_130110(this, currentState);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 130125, 130248) || true) && (f_10899_130129_130149(node) != null)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 130125, 130248);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 130191, 130233);

                    f_10899_130191_130232(this, f_10899_130211_130231(node));
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 130125, 130248);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 130264, 130302);

                var
                initializer = f_10899_130282_130301(node)
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 130316, 130400) || true) && (initializer is null)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 130316, 130400);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 130373, 130385);

                    return null;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 130316, 130400);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 130416, 130469);

                TypeWithAnnotations
                type = f_10899_130443_130468(local)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 130483, 130507);

                TypeWithState
                valueType
                = default(TypeWithState);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 130521, 130559);

                bool
                inferredType = f_10899_130541_130558(node)
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 130573, 130928) || true) && (f_10899_130577_130588(local))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 130573, 130928);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 130622, 130672);

                    valueType = f_10899_130634_130671(this, initializer, type);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 130573, 130928);
                }

                else

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 130573, 130928);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 130738, 130913);

                    valueType = f_10899_130750_130912(this, initializer, targetTypeOpt: (DynAbs.Tracing.TraceSender.Conditional_F1(10899, 130810, 130822) || ((inferredType && DynAbs.Tracing.TraceSender.Conditional_F2(10899, 130825, 130832)) || DynAbs.Tracing.TraceSender.Conditional_F3(10899, 130835, 130839))) ? default : type, useLegacyWarnings: true, trackMembers: true, AssignmentKind.Assignment);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 130573, 130928);
                }

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 130944, 131532) || true) && (inferredType)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 130944, 131532);

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 130994, 131175) || true) && (valueType.HasNullType)
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 130994, 131175);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 131061, 131099);

                        f_10899_131061_131098(f_10899_131074_131097(type.Type));
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 131121, 131156);

                        valueType = type.ToTypeWithState();
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 130994, 131175);
                    }
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 131195, 131256);

                    type = valueType.ToAnnotatedTypeWithAnnotations(compilation);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 131274, 131306);

                    f_10899_131274_131305(_variables, local, type);

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 131326, 131517) || true) && (f_10899_131330_131350(node) != null)
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 131326, 131517);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 131400, 131498);

                        f_10899_131400_131497(this, f_10899_131423_131443(node), f_10899_131445_131490(type.ToTypeWithState(), type), true);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 131326, 131517);
                    }
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 130944, 131532);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 131548, 131639);

                f_10899_131548_131638(this, initializer, type, slot, valueType, f_10899_131616_131637(this, initializer));
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 131653, 131665);

                return null;
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 129151, 131676);

                Microsoft.CodeAnalysis.CSharp.Symbols.LocalSymbol
                f_10899_129264_129280(Microsoft.CodeAnalysis.CSharp.BoundLocalDeclaration
                this_param)
                {
                    var return_v = this_param.LocalSymbol;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 129264, 129280);
                    return return_v;
                }


                int
                f_10899_129306_129328(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.LocalSymbol
                symbol)
                {
                    var return_v = this_param.GetOrCreateSlot((Microsoft.CodeAnalysis.CSharp.Symbol)symbol);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 129306, 129328);
                    return return_v;
                }


                int
                f_10899_129810_129843(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 129810, 129843);
                    return 0;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                f_10899_130008_130025(Microsoft.CodeAnalysis.CSharp.BoundLocalDeclaration
                this_param)
                {
                    var return_v = this_param.ArgumentsOpt;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 130008, 130025);
                    return return_v;
                }


                int
                f_10899_129989_130026(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                nodes)
                {
                    this_param.VisitAndUnsplitAll<Microsoft.CodeAnalysis.CSharp.BoundExpression>(nodes);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 129989, 130026);
                    return 0;
                }


                int
                f_10899_130088_130110(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState
                newState)
                {
                    this_param.SetState(newState);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 130088, 130110);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.BoundTypeExpression?
                f_10899_130129_130149(Microsoft.CodeAnalysis.CSharp.BoundLocalDeclaration
                this_param)
                {
                    var return_v = this_param.DeclaredTypeOpt;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 130129, 130149);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundTypeExpression
                f_10899_130211_130231(Microsoft.CodeAnalysis.CSharp.BoundLocalDeclaration
                this_param)
                {
                    var return_v = this_param.DeclaredTypeOpt;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 130211, 130231);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundNode?
                f_10899_130191_130232(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundTypeExpression
                node)
                {
                    var return_v = this_param.VisitTypeExpression(node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 130191, 130232);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression?
                f_10899_130282_130301(Microsoft.CodeAnalysis.CSharp.BoundLocalDeclaration
                this_param)
                {
                    var return_v = this_param.InitializerOpt;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 130282, 130301);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                f_10899_130443_130468(Microsoft.CodeAnalysis.CSharp.Symbols.LocalSymbol
                this_param)
                {
                    var return_v = this_param.TypeWithAnnotations;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 130443, 130468);
                    return return_v;
                }


                bool
                f_10899_130541_130558(Microsoft.CodeAnalysis.CSharp.BoundLocalDeclaration
                this_param)
                {
                    var return_v = this_param.InferredType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 130541, 130558);
                    return return_v;
                }


                bool
                f_10899_130577_130588(Microsoft.CodeAnalysis.CSharp.Symbols.LocalSymbol
                this_param)
                {
                    var return_v = this_param.IsRef;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 130577, 130588);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                f_10899_130634_130671(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                expr, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                destinationType)
                {
                    var return_v = this_param.VisitRefExpression(expr, destinationType);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 130634, 130671);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                f_10899_130750_130912(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                expr, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                targetTypeOpt, bool
                useLegacyWarnings, bool
                trackMembers, Microsoft.CodeAnalysis.CSharp.NullableWalker.AssignmentKind
                assignmentKind)
                {
                    var return_v = this_param.VisitOptionalImplicitConversion(expr, targetTypeOpt: targetTypeOpt, useLegacyWarnings: useLegacyWarnings, trackMembers: trackMembers, assignmentKind);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 130750, 130912);
                    return return_v;
                }


                bool
                f_10899_131074_131097(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                type)
                {
                    var return_v = type.IsErrorType();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 131074, 131097);
                    return return_v;
                }


                int
                f_10899_131061_131098(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 131061, 131098);
                    return 0;
                }


                int
                f_10899_131274_131305(Microsoft.CodeAnalysis.CSharp.NullableWalker.Variables
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.LocalSymbol
                symbol, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                type)
                {
                    this_param.SetType((Microsoft.CodeAnalysis.CSharp.Symbol)symbol, type);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 131274, 131305);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.BoundTypeExpression?
                f_10899_131330_131350(Microsoft.CodeAnalysis.CSharp.BoundLocalDeclaration
                this_param)
                {
                    var return_v = this_param.DeclaredTypeOpt;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 131330, 131350);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundTypeExpression
                f_10899_131423_131443(Microsoft.CodeAnalysis.CSharp.BoundLocalDeclaration
                this_param)
                {
                    var return_v = this_param.DeclaredTypeOpt;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 131423, 131443);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.NullableWalker.VisitResult
                f_10899_131445_131490(Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                rValueType, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                lValueType)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.NullableWalker.VisitResult(rValueType, lValueType);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 131445, 131490);
                    return return_v;
                }


                int
                f_10899_131400_131497(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundTypeExpression
                expr, Microsoft.CodeAnalysis.CSharp.NullableWalker.VisitResult
                result, bool
                isLvalue)
                {
                    this_param.SetAnalyzedNullability((Microsoft.CodeAnalysis.CSharp.BoundExpression)expr, result, (bool?)isLvalue);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 131400, 131497);
                    return 0;
                }


                int
                f_10899_131616_131637(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                node)
                {
                    var return_v = this_param.MakeSlot(node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 131616, 131637);
                    return return_v;
                }


                int
                f_10899_131548_131638(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                valueOpt, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                targetType, int
                targetSlot, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                valueType, int
                valueSlot)
                {
                    this_param.TrackNullableStateForAssignment(valueOpt, targetType, targetSlot, valueType, valueSlot);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 131548, 131638);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 129151, 131676);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 129151, 131676);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        protected override BoundExpression? VisitExpressionWithoutStackGuard(BoundExpression node)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 131688, 132437);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 131803, 131837);

                f_10899_131803_131836(!IsConditionalState);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 131851, 131870);

                f_10899_131851_131869(this);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 131884, 131932);

                _ = DynAbs.Tracing.TraceSender.TraceInvocationWrapper(() => base.VisitExpressionWithoutStackGuard(node), 10899, 131888, 131931);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 131946, 131984);

                TypeWithState
                resultType = f_10899_131973_131983()
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 132060, 132120);

                f_10899_132060_132119((object?)resultType.Type != _invalidType.Type);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 132134, 132191);

                f_10899_132134_132190(f_10899_132147_132189(resultType.Type, f_10899_132179_132188(node)));

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 132215, 132400) || true) && (f_10899_132219_132248(this, node))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 132215, 132400);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 132282, 132325);

                    var
                    result = resultType.WithNotNullState()
                    ;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 132343, 132385);

                    f_10899_132343_132384(this, node, result, f_10899_132367_132383());
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 132215, 132400);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 132414, 132426);

                return null;
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 131688, 132437);

                int
                f_10899_131803_131836(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 131803, 131836);
                    return 0;
                }


                int
                f_10899_131851_131869(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param)
                {
                    this_param.SetInvalidResult();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 131851, 131869);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                f_10899_131973_131983()
                {
                    var return_v = ResultType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 131973, 131983);
                    return return_v;
                }


                int
                f_10899_132060_132119(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 132060, 132119);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?
                f_10899_132179_132188(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 132179, 132188);
                    return return_v;
                }


                bool
                f_10899_132147_132189(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?
                typeA, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?
                typeB)
                {
                    var return_v = AreCloseEnough(typeA, typeB);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 132147, 132189);
                    return return_v;
                }


                int
                f_10899_132134_132190(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 132134, 132190);
                    return 0;
                }


                bool
                f_10899_132219_132248(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                node)
                {
                    var return_v = this_param.ShouldMakeNotNullRvalue(node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 132219, 132248);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                f_10899_132367_132383()
                {
                    var return_v = LvalueResultType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 132367, 132383);
                    return return_v;
                }


                int
                f_10899_132343_132384(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                expression, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                resultType, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                lvalueType)
                {
                    this_param.SetResult(expression, resultType, lvalueType);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 132343, 132384);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 131688, 132437);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 131688, 132437);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private static bool AreCloseEnough(TypeSymbol? typeA, TypeSymbol? typeB)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterStaticMethod(10899, 132490, 134163);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 132813, 132901) || true) && ((object?)typeA == typeB)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 132813, 132901);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 132874, 132886);

                    return true;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 132813, 132901);
                }

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 132915, 133113) || true) && (typeA is null || (DynAbs.Tracing.TraceSender.Expression_False(10899, 132919, 132949) || typeB is null))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 132915, 133113);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 133010, 133098);

                    return (typeA is null || (DynAbs.Tracing.TraceSender.Expression_False(10899, 133018, 133054) || f_10899_133035_133054(typeA))) && (DynAbs.Tracing.TraceSender.Expression_True(10899, 133017, 133097) && (typeB is null || (DynAbs.Tracing.TraceSender.Expression_False(10899, 133060, 133096) || f_10899_133077_133096(typeB))));
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 132915, 133113);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 133127, 133412);

                return f_10899_133134_133157(typeA) || (DynAbs.Tracing.TraceSender.Expression_False(10899, 133134, 133201) || f_10899_133178_133201(typeB)) || (DynAbs.Tracing.TraceSender.Expression_False(10899, 133134, 133411) || f_10899_133222_133411(typeA, typeB, TypeCompareKind.IgnoreCustomModifiersAndArraySizesAndLowerBounds | TypeCompareKind.IgnoreNullableModifiersForReferenceTypes | TypeCompareKind.IgnoreDynamicAndTupleNames));

                bool canIgnoreAnyType(TypeSymbol type)
                {
                    try
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 133509, 133685);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 133580, 133670);

                        return f_10899_133587_133659(type, (t, unused1, unused2) => canIgnoreType(t), null) is object;
                        DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 133509, 133685);

                        Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?
                        f_10899_133587_133659(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                        type, System.Func<Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol, object, bool, bool>
                        predicate, object?
                        arg)
                        {
                            var return_v = type.VisitType<object?>(predicate, arg);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 133587, 133659);
                            return return_v;
                        }

                    }
                    catch
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 133509, 133685);
                        throw;
                    }
                    finally
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 133509, 133685);
                    }
                    throw new System.Exception("Slicer error: unreachable code");
                }

                bool canIgnoreType(TypeSymbol type)
                {
                    try
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 133699, 133927);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 133767, 133912);

                        return f_10899_133774_133792(type) || (DynAbs.Tracing.TraceSender.Expression_False(10899, 133774, 133812) || f_10899_133796_133812(type)) || (DynAbs.Tracing.TraceSender.Expression_False(10899, 133774, 133836) || f_10899_133816_133836(type)) || (DynAbs.Tracing.TraceSender.Expression_False(10899, 133774, 133911) || (f_10899_133841_133861(type) && (DynAbs.Tracing.TraceSender.Expression_True(10899, 133841, 133910) && f_10899_133865_133910(type))));
                        DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 133699, 133927);

                        bool
                        f_10899_133774_133792(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                        type)
                        {
                            var return_v = type.IsErrorType();
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 133774, 133792);
                            return return_v;
                        }


                        bool
                        f_10899_133796_133812(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                        type)
                        {
                            var return_v = type.IsDynamic();
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 133796, 133812);
                            return return_v;
                        }


                        bool
                        f_10899_133816_133836(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                        this_param)
                        {
                            var return_v = this_param.HasUseSiteError;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 133816, 133836);
                            return return_v;
                        }


                        bool
                        f_10899_133841_133861(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                        this_param)
                        {
                            var return_v = this_param.IsAnonymousType;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 133841, 133861);
                            return return_v;
                        }


                        bool
                        f_10899_133865_133910(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                        type)
                        {
                            var return_v = canIgnoreAnonymousType((Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol)type);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 133865, 133910);
                            return return_v;
                        }

                    }
                    catch
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 133699, 133927);
                        throw;
                    }
                    finally
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 133699, 133927);
                    }
                    throw new System.Exception("Slicer error: unreachable code");
                }

                bool canIgnoreAnonymousType(NamedTypeSymbol type)
                {
                    try
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 133941, 134152);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 134023, 134137);

                        return f_10899_134030_134101(type).Any(t => canIgnoreAnyType(t.Type));
                        DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 133941, 134152);

                        System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations>
                        f_10899_134030_134101(Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                        type)
                        {
                            var return_v = AnonymousTypeManager.GetAnonymousTypePropertyTypesWithAnnotations(type);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 134030, 134101);
                            return return_v;
                        }

                    }
                    catch
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 133941, 134152);
                        throw;
                    }
                    finally
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 133941, 134152);
                    }
                    throw new System.Exception("Slicer error: unreachable code");
                }
                DynAbs.Tracing.TraceSender.TraceExitStaticMethod(10899, 132490, 134163);

                bool
                f_10899_133035_133054(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                type)
                {
                    var return_v = type.IsErrorType();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 133035, 133054);
                    return return_v;
                }


                bool
                f_10899_133077_133096(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                type)
                {
                    var return_v = type.IsErrorType();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 133077, 133096);
                    return return_v;
                }


                bool
                f_10899_133134_133157(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                type)
                {
                    var return_v = canIgnoreAnyType(type);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 133134, 133157);
                    return return_v;
                }


                bool
                f_10899_133178_133201(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                type)
                {
                    var return_v = canIgnoreAnyType(type);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 133178, 133201);
                    return return_v;
                }


                bool
                f_10899_133222_133411(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                t2, Microsoft.CodeAnalysis.TypeCompareKind
                compareKind)
                {
                    var return_v = this_param.Equals(t2, compareKind);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 133222, 133411);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 132490, 134163);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 132490, 134163);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private static bool AreCloseEnough(Symbol original, Symbol updated)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterStaticMethod(10899, 134175, 135288);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 134380, 134585) || true) && (original is ConstructedMethodSymbol || (DynAbs.Tracing.TraceSender.Expression_False(10899, 134384, 134457) || updated is ConstructedMethodSymbol))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 134380, 134585);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 134491, 134570);

                    return f_10899_134498_134569(f_10899_134513_134540(original), f_10899_134542_134568(updated));
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 134380, 134585);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 134601, 135277);

                return (original, updated) switch
                {
                    (LambdaSymbol l, NamedTypeSymbol n) _ when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 134705, 134728) || true) && (f_10899_134710_134728(n)) && (DynAbs.Tracing.TraceSender.Expression_True(10899, 134705, 134728) || true)
    => f_10899_134732_134768(l, n),
                    (FieldSymbol { ContainingType: { IsTupleType: true }, TupleElementIndex: var oi } originalField, FieldSymbol { ContainingType: { IsTupleType: true }, TupleElementIndex: var ui } updatedField) when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 134787, 135136) && DynAbs.Tracing.TraceSender.Expression_True(10899, 134787, 135136))
    =>
    f_10899_135003_135124(f_10899_135003_135021(originalField), f_10899_135029_135046(updatedField), TypeCompareKind.AllNullableIgnoreOptions | TypeCompareKind.IgnoreTupleNames) && (DynAbs.Tracing.TraceSender.Expression_True(10899, 135003, 135136) && oi == ui),
                    _ when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 135155, 135261) && DynAbs.Tracing.TraceSender.Expression_True(10899, 135155, 135261))
    => f_10899_135160_135261(original, updated, TypeCompareKind.AllNullableIgnoreOptions | TypeCompareKind.IgnoreTupleNames)
                };
                DynAbs.Tracing.TraceSender.TraceExitStaticMethod(10899, 134175, 135288);

                Microsoft.CodeAnalysis.CSharp.Symbol
                f_10899_134513_134540(Microsoft.CodeAnalysis.CSharp.Symbol
                this_param)
                {
                    var return_v = this_param.OriginalDefinition;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 134513, 134540);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbol
                f_10899_134542_134568(Microsoft.CodeAnalysis.CSharp.Symbol
                this_param)
                {
                    var return_v = this_param.OriginalDefinition;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 134542, 134568);
                    return return_v;
                }


                bool
                f_10899_134498_134569(Microsoft.CodeAnalysis.CSharp.Symbol
                original, Microsoft.CodeAnalysis.CSharp.Symbol
                updated)
                {
                    var return_v = AreCloseEnough(original, updated);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 134498, 134569);
                    return return_v;
                }


                bool
                f_10899_134710_134728(Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                type)
                {
                    var return_v = type.IsDelegateType();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 134710, 134728);
                    return return_v;
                }


                bool
                f_10899_134732_134768(Microsoft.CodeAnalysis.CSharp.Symbols.LambdaSymbol
                l, Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                n)
                {
                    var return_v = AreLambdaAndNewDelegateSimilar(l, n);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 134732, 134768);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                f_10899_135003_135021(Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 135003, 135021);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                f_10899_135029_135046(Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 135029, 135046);
                    return return_v;
                }


                bool
                f_10899_135003_135124(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                t2, Microsoft.CodeAnalysis.TypeCompareKind
                compareKind)
                {
                    var return_v = this_param.Equals(t2, compareKind);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 135003, 135124);
                    return return_v;
                }


                bool
                f_10899_135160_135261(Microsoft.CodeAnalysis.CSharp.Symbol
                this_param, Microsoft.CodeAnalysis.CSharp.Symbol
                other, Microsoft.CodeAnalysis.TypeCompareKind
                compareKind)
                {
                    var return_v = this_param.Equals(other, compareKind);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 135160, 135261);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 134175, 135288);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 134175, 135288);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private static bool AreLambdaAndNewDelegateSimilar(LambdaSymbol l, NamedTypeSymbol n)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterStaticMethod(10899, 135308, 135828);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 135418, 135460);

                var
                invokeMethod = f_10899_135437_135459(n)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 135474, 135817);

                return invokeMethod.Parameters.SequenceEqual(f_10899_135519_135531(l), (p1, p2) => p1.Type.Equals(p2.Type, TypeCompareKind.AllNullableIgnoreOptions | TypeCompareKind.IgnoreTupleNames)) && (DynAbs.Tracing.TraceSender.Expression_True(10899, 135481, 135816) && f_10899_135695_135816(f_10899_135695_135718(invokeMethod), f_10899_135726_135738(l), TypeCompareKind.AllNullableIgnoreOptions | TypeCompareKind.IgnoreTupleNames));
                DynAbs.Tracing.TraceSender.TraceExitStaticMethod(10899, 135308, 135828);

                Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                f_10899_135437_135459(Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                this_param)
                {
                    var return_v = this_param.DelegateInvokeMethod;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 135437, 135459);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol>
                f_10899_135519_135531(Microsoft.CodeAnalysis.CSharp.Symbols.LambdaSymbol
                this_param)
                {
                    var return_v = this_param.Parameters;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 135519, 135531);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                f_10899_135695_135718(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                this_param)
                {
                    var return_v = this_param.ReturnType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 135695, 135718);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                f_10899_135726_135738(Microsoft.CodeAnalysis.CSharp.Symbols.LambdaSymbol
                this_param)
                {
                    var return_v = this_param.ReturnType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 135726, 135738);
                    return return_v;
                }


                bool
                f_10899_135695_135816(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                t2, Microsoft.CodeAnalysis.TypeCompareKind
                compareKind)
                {
                    var return_v = this_param.Equals(t2, compareKind);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 135695, 135816);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 135308, 135828);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 135308, 135828);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override BoundNode? Visit(BoundNode? node)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 135840, 135968);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 135914, 135957);

                return f_10899_135921_135956(this, node, expressionIsRead: true);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 135840, 135968);

                Microsoft.CodeAnalysis.CSharp.BoundNode
                f_10899_135921_135956(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundNode?
                node, bool
                expressionIsRead)
                {
                    var return_v = this_param.Visit(node, expressionIsRead: expressionIsRead);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 135921, 135956);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 135840, 135968);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 135840, 135968);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private BoundNode VisitLValue(BoundNode node)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 135980, 136105);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 136050, 136094);

                return f_10899_136057_136093(this, node, expressionIsRead: false);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 135980, 136105);

                Microsoft.CodeAnalysis.CSharp.BoundNode
                f_10899_136057_136093(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundNode
                node, bool
                expressionIsRead)
                {
                    var return_v = this_param.Visit(node, expressionIsRead: expressionIsRead);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 136057, 136093);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 135980, 136105);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 135980, 136105);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private BoundNode Visit(BoundNode? node, bool expressionIsRead)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 136117, 136496);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 136205, 136255);

                bool
                originalExpressionIsRead = _expressionIsRead
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 136269, 136306);

                _expressionIsRead = expressionIsRead;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 136322, 136352);

                f_10899_136322_136351(this, node);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 136366, 136396);

                var
                result = DynAbs.Tracing.TraceSender.TraceInvocationWrapper(() => base.Visit(node), 10899, 136379, 136395)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 136412, 136457);

                _expressionIsRead = originalExpressionIsRead;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 136471, 136485);

                return result;
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 136117, 136496);

                int
                f_10899_136322_136351(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundNode?
                node)
                {
                    this_param.TakeIncrementalSnapshot(node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 136322, 136351);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 136117, 136496);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 136117, 136496);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        protected override void VisitStatement(BoundStatement statement)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 136508, 136705);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 136597, 136616);

                f_10899_136597_136615(this);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 136630, 136661);

                DynAbs.Tracing.TraceSender.TraceInvocationWrapper(() => base.VisitStatement(statement), 10899, 136630, 136660);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 136675, 136694);

                f_10899_136675_136693(this);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 136508, 136705);

                int
                f_10899_136597_136615(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param)
                {
                    this_param.SetInvalidResult();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 136597, 136615);
                    return 0;
                }


                int
                f_10899_136675_136693(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param)
                {
                    this_param.SetInvalidResult();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 136675, 136693);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 136508, 136705);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 136508, 136705);
            }
        }

        public override BoundNode? VisitObjectCreationExpression(BoundObjectCreationExpression node)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 136717, 137277);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 136834, 136868);

                f_10899_136834_136867(!IsConditionalState);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 136882, 136913);

                var
                arguments = f_10899_136898_136912(node)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 136927, 137126);

                var
                argumentResults = f_10899_136949_137117(this, node, arguments, f_10899_136981_137005(node), f_10899_137007_137023(node), f_10899_137025_137045(node), f_10899_137047_137068(node), f_10899_137070_137083(node), invokedAsExtensionMethod: false).results
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 137140, 137240);

                f_10899_137140_137239(this, node, arguments, argumentResults, f_10899_137209_137238(node));
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 137254, 137266);

                return null;
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 136717, 137277);

                int
                f_10899_136834_136867(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 136834, 136867);
                    return 0;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                f_10899_136898_136912(Microsoft.CodeAnalysis.CSharp.BoundObjectCreationExpression
                this_param)
                {
                    var return_v = this_param.Arguments;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 136898, 136912);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.RefKind>
                f_10899_136981_137005(Microsoft.CodeAnalysis.CSharp.BoundObjectCreationExpression
                this_param)
                {
                    var return_v = this_param.ArgumentRefKindsOpt;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 136981, 137005);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                f_10899_137007_137023(Microsoft.CodeAnalysis.CSharp.BoundObjectCreationExpression
                this_param)
                {
                    var return_v = this_param.Constructor;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 137007, 137023);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<int>
                f_10899_137025_137045(Microsoft.CodeAnalysis.CSharp.BoundObjectCreationExpression
                this_param)
                {
                    var return_v = this_param.ArgsToParamsOpt;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 137025, 137045);
                    return return_v;
                }


                Microsoft.CodeAnalysis.BitVector
                f_10899_137047_137068(Microsoft.CodeAnalysis.CSharp.BoundObjectCreationExpression
                this_param)
                {
                    var return_v = this_param.DefaultArguments;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 137047, 137068);
                    return return_v;
                }


                bool
                f_10899_137070_137083(Microsoft.CodeAnalysis.CSharp.BoundObjectCreationExpression
                this_param)
                {
                    var return_v = this_param.Expanded;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 137070, 137083);
                    return return_v;
                }


                (Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol? method, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.NullableWalker.VisitArgumentResult> results, bool returnNotNull)
                f_10899_136949_137117(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundObjectCreationExpression
                node, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                arguments, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.RefKind>
                refKindsOpt, Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                method, System.Collections.Immutable.ImmutableArray<int>
                argsToParamsOpt, Microsoft.CodeAnalysis.BitVector
                defaultArguments, bool
                expanded, bool
                invokedAsExtensionMethod)
                {
                    var return_v = this_param.VisitArguments((Microsoft.CodeAnalysis.CSharp.BoundExpression)node, arguments, refKindsOpt, method, argsToParamsOpt, defaultArguments, expanded, invokedAsExtensionMethod: invokedAsExtensionMethod);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 136949, 137117);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundObjectInitializerExpressionBase?
                f_10899_137209_137238(Microsoft.CodeAnalysis.CSharp.BoundObjectCreationExpression
                this_param)
                {
                    var return_v = this_param.InitializerExpressionOpt;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 137209, 137238);
                    return return_v;
                }


                int
                f_10899_137140_137239(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundObjectCreationExpression
                node, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                arguments, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.NullableWalker.VisitArgumentResult>
                argumentResults, Microsoft.CodeAnalysis.CSharp.BoundObjectInitializerExpressionBase?
                initializerOpt)
                {
                    this_param.VisitObjectOrDynamicObjectCreation((Microsoft.CodeAnalysis.CSharp.BoundExpression)node, arguments, argumentResults, (Microsoft.CodeAnalysis.CSharp.BoundExpression?)initializerOpt);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 137140, 137239);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 136717, 137277);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 136717, 137277);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override BoundNode? VisitUnconvertedObjectCreationExpression(BoundUnconvertedObjectCreationExpression node)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 137289, 137719);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 137607, 137682);

                f_10899_137607_137681(this, node, TypeWithState.Create(null, NullableFlowState.NotNull));
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 137696, 137708);

                return null;
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 137289, 137719);

                int
                f_10899_137607_137681(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundUnconvertedObjectCreationExpression
                expression, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                type)
                {
                    this_param.SetResultType((Microsoft.CodeAnalysis.CSharp.BoundExpression)expression, type);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 137607, 137681);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 137289, 137719);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 137289, 137719);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private void VisitObjectOrDynamicObjectCreation(
                    BoundExpression node,
                    ImmutableArray<BoundExpression> arguments,
                    ImmutableArray<VisitArgumentResult> argumentResults,
                    BoundExpression? initializerOpt)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 137731, 141589);
                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations underlyingType = default(Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 138007, 138192);

                f_10899_138007_138191(f_10899_138020_138029(node) == BoundKind.ObjectCreationExpression || (DynAbs.Tracing.TraceSender.Expression_False(10899, 138020, 138142) || f_10899_138088_138097(node) == BoundKind.DynamicObjectCreationExpression) || (DynAbs.Tracing.TraceSender.Expression_False(10899, 138020, 138190) || f_10899_138163_138172(node) == BoundKind.NewT));
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 138206, 138277);

                var
                argumentTypes = argumentResults.SelectAsArray(ar => ar.RValueType)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 138293, 138307);

                int
                slot = -1
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 138321, 138342);

                var
                type = f_10899_138332_138341(node)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 138356, 138400);

                var
                resultState = NullableFlowState.NotNull
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 138414, 141286) || true) && (type is object)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 138414, 141286);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 138466, 138506);

                    slot = f_10899_138473_138505(this, node);

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 138524, 141271) || true) && (slot > 0)
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 138524, 141271);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 138578, 138652);

                        var
                        boundObjectCreationExpression = node as BoundObjectCreationExpression
                        ;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 138674, 138735);

                        var
                        constructor = f_10899_138692_138734_M(DynAbs.Tracing.TraceSender.TraceConditionalAccessExpression(boundObjectCreationExpression, 10899, 138692, 138734)?.Constructor)
                        ;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 138788, 138892);

                        bool
                        isDefaultValueTypeConstructor = constructor != null && (DynAbs.Tracing.TraceSender.Expression_True(10899, 138825, 138891) && f_10899_138848_138891(constructor))
                        ;

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 138916, 141197) || true) && (f_10899_138920_138968(type))
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 138916, 141197);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 139018, 139067);

                            var
                            containingType = f_10899_139039_139066_M(DynAbs.Tracing.TraceSender.TraceConditionalAccessExpression(constructor, 10899, 139039, 139066)?.ContainingType)
                            ;

                            if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 139093, 139840) || true) && (f_10899_139097_139124_M(DynAbs.Tracing.TraceSender.TraceConditionalAccessExpression(containingType, 10899, 139097, 139124)?.IsTupleType) == true && (DynAbs.Tracing.TraceSender.Expression_True(10899, 139097, 139166) && !isDefaultValueTypeConstructor))
                            )

                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 139093, 139840);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 139304, 139454);

                                f_10899_139304_139453(this, slot, containingType, arguments, argumentTypes, f_10899_139386_139432(boundObjectCreationExpression!), useRestField: true);
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 139093, 139840);
                            }

                            else

                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 139093, 139840);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 139568, 139813);

                                f_10899_139568_139812(this, type, slot, valueSlot: -1, isDefaultValue: isDefaultValueTypeConstructor);
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 139093, 139840);
                            }
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 138916, 141197);
                        }

                        else
                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 138916, 141197);

                            if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 139890, 141197) || true) && (f_10899_139894_139915(type))
                            )

                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 139890, 141197);

                                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 139965, 141174) || true) && (isDefaultValueTypeConstructor)
                                )

                                {
                                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 139965, 141174);
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 140169, 140211);

                                    resultState = NullableFlowState.MaybeNull;
                                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 139965, 141174);
                                }

                                else
                                {
                                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 139965, 141174);

                                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 140269, 141174) || true) && (f_10899_140273_140300_M(DynAbs.Tracing.TraceSender.TraceConditionalAccessExpression(constructor, 10899, 140273, 140300)?.ParameterCount) == 1)
                                    )

                                    {
                                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 140269, 141174);
                                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 140501, 140566);

                                        var
                                        parameterType = f_10899_140521_140562(constructor)[0]
                                        ;

                                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 140596, 141147) || true) && (f_10899_140600_140695(type, parameterType.Type, out underlyingType))
                                        )

                                        {
                                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 140596, 141147);
                                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 140761, 140788);

                                            var
                                            operand = arguments[0]
                                            ;
                                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 140822, 140856);

                                            int
                                            valueSlot = f_10899_140838_140855(this, operand)
                                            ;

                                            if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 140890, 141116) || true) && (valueSlot > 0)
                                            )

                                            {
                                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 140890, 141116);
                                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 140981, 141081);

                                                f_10899_140981_141080(this, slot, type, operand, underlyingType.ToTypeWithState(), valueSlot);
                                                DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 140890, 141116);
                                            }
                                            DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 140596, 141147);
                                        }
                                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 140269, 141174);
                                    }
                                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 139965, 141174);
                                }
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 139890, 141197);
                            }
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 138916, 141197);
                        }
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 141221, 141252);

                        this.State[slot] = resultState;
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 138524, 141271);
                    }
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 138414, 141286);
                }

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 141302, 141501) || true) && (initializerOpt != null)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 141302, 141501);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 141362, 141486);

                    f_10899_141362_141485(this, containingSymbol: null, slot, initializerOpt, leftAnnotations: FlowAnalysisAnnotations.None);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 141302, 141501);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 141517, 141578);

                f_10899_141517_141577(this, node, TypeWithState.Create(type, resultState));
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 137731, 141589);

                Microsoft.CodeAnalysis.CSharp.BoundKind
                f_10899_138020_138029(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.Kind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 138020, 138029);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundKind
                f_10899_138088_138097(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.Kind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 138088, 138097);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundKind
                f_10899_138163_138172(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.Kind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 138163, 138172);
                    return return_v;
                }


                int
                f_10899_138007_138191(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 138007, 138191);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?
                f_10899_138332_138341(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 138332, 138341);
                    return return_v;
                }


                int
                f_10899_138473_138505(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                node)
                {
                    var return_v = this_param.GetOrCreatePlaceholderSlot(node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 138473, 138505);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol?
                f_10899_138692_138734_M(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol?
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 138692, 138734);
                    return return_v;
                }


                bool
                f_10899_138848_138891(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                method)
                {
                    var return_v = method.IsDefaultValueTypeConstructor();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 138848, 138891);
                    return return_v;
                }


                bool
                f_10899_138920_138968(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                type)
                {
                    var return_v = EmptyStructTypeCache.IsTrackableStructType(type);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 138920, 138968);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol?
                f_10899_139039_139066_M(Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol?
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 139039, 139066);
                    return return_v;
                }


                bool?
                f_10899_139097_139124_M(bool?
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 139097, 139124);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<int>
                f_10899_139386_139432(Microsoft.CodeAnalysis.CSharp.BoundObjectCreationExpression
                this_param)
                {
                    var return_v = this_param.ArgsToParamsOpt;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 139386, 139432);
                    return return_v;
                }


                int
                f_10899_139304_139453(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, int
                slot, Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                tupleType, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                values, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState>
                types, System.Collections.Immutable.ImmutableArray<int>
                argsToParamsOpt, bool
                useRestField)
                {
                    this_param.TrackNullableStateOfTupleElements(slot, tupleType, values, types, argsToParamsOpt, useRestField: useRestField);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 139304, 139453);
                    return 0;
                }


                int
                f_10899_139568_139812(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                targetType, int
                targetSlot, int
                valueSlot, bool
                isDefaultValue)
                {
                    this_param.InheritNullableStateOfTrackableStruct(targetType, targetSlot, valueSlot: valueSlot, isDefaultValue: isDefaultValue);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 139568, 139812);
                    return 0;
                }


                bool
                f_10899_139894_139915(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                type)
                {
                    var return_v = type.IsNullableType();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 139894, 139915);
                    return return_v;
                }


                int?
                f_10899_140273_140300_M(int?
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 140273, 140300);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations>
                f_10899_140521_140562(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                this_param)
                {
                    var return_v = this_param.ParameterTypesWithAnnotations;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 140521, 140562);
                    return return_v;
                }


                bool
                f_10899_140600_140695(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                nullableTypeOpt, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                underlyingTypeOpt, out Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                underlyingTypeWithAnnotations)
                {
                    var return_v = AreNullableAndUnderlyingTypes(nullableTypeOpt, underlyingTypeOpt, out underlyingTypeWithAnnotations);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 140600, 140695);
                    return return_v;
                }


                int
                f_10899_140838_140855(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                node)
                {
                    var return_v = this_param.MakeSlot(node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 140838, 140855);
                    return return_v;
                }


                int
                f_10899_140981_141080(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, int
                containingSlot, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                containingType, Microsoft.CodeAnalysis.CSharp.BoundExpression
                value, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                valueType, int
                valueSlot)
                {
                    this_param.TrackNullableStateOfNullableValue(containingSlot, containingType, value, valueType, valueSlot);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 140981, 141080);
                    return 0;
                }


                int
                f_10899_141362_141485(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.Symbol?
                containingSymbol, int
                containingSlot, Microsoft.CodeAnalysis.CSharp.BoundExpression
                node, Microsoft.CodeAnalysis.CSharp.Symbols.FlowAnalysisAnnotations
                leftAnnotations)
                {
                    this_param.VisitObjectCreationInitializer(containingSymbol: containingSymbol, containingSlot, node, leftAnnotations: leftAnnotations);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 141362, 141485);
                    return 0;
                }


                int
                f_10899_141517_141577(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                expression, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                type)
                {
                    this_param.SetResultType(expression, type);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 141517, 141577);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 137731, 141589);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 137731, 141589);
            }
        }

        private void VisitObjectCreationInitializer(Symbol? containingSymbol, int containingSlot, BoundExpression node, FlowAnalysisAnnotations leftAnnotations)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 141601, 144938);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 141778, 141808);

                f_10899_141778_141807(this, node);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 141822, 144162);

                switch (node)
                {

                    case BoundObjectInitializerExpression objectInitializer:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 141822, 144162);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 141946, 141987);

                        f_10899_141946_141986(objectInitializer);
                        try
                        {
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 142009, 142578);
                            foreach (var initializer in f_10899_142037_142067_I(f_10899_142037_142067(objectInitializer)))
                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 142009, 142578);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 142117, 142555);

                                switch (f_10899_142125_142141(initializer))
                                {

                                    case BoundKind.AssignmentOperator:
                                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 142117, 142555);
                                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 142267, 142351);

                                        f_10899_142267_142350(this, containingSlot, initializer);
                                        DynAbs.Tracing.TraceSender.TraceBreak(10899, 142385, 142391);

                                        break;
                                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 142117, 142555);

                                    default:
                                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 142117, 142555);
                                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 142463, 142488);

                                        f_10899_142463_142487(this, initializer);
                                        DynAbs.Tracing.TraceSender.TraceBreak(10899, 142522, 142528);

                                        break;
                                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 142117, 142555);
                                }
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 142009, 142578);
                            }
                        }
                        catch (System.Exception)
                        {
                            DynAbs.Tracing.TraceSender.TraceExitLoopByException(10899, 1, 570);
                            throw;
                        }
                        finally
                        {
                            DynAbs.Tracing.TraceSender.TraceExitLoop(10899, 1, 570);
                        }
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 142600, 142648);

                        f_10899_142600_142647(this, f_10899_142617_142646(objectInitializer));
                        DynAbs.Tracing.TraceSender.TraceBreak(10899, 142670, 142676);

                        break;
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 141822, 144162);

                    case BoundCollectionInitializerExpression collectionInitializer:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 141822, 144162);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 142780, 142825);

                        f_10899_142780_142824(collectionInitializer);
                        try
                        {
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 142847, 143428);
                            foreach (var initializer in f_10899_142875_142909_I(f_10899_142875_142909(collectionInitializer)))
                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 142847, 143428);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 142959, 143405);

                                switch (f_10899_142967_142983(initializer))
                                {

                                    case BoundKind.CollectionElementInitializer:
                                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 142959, 143405);
                                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 143119, 143201);

                                        f_10899_143119_143200(this, initializer);
                                        DynAbs.Tracing.TraceSender.TraceBreak(10899, 143235, 143241);

                                        break;
                                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 142959, 143405);

                                    default:
                                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 142959, 143405);
                                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 143313, 143338);

                                        f_10899_143313_143337(this, initializer);
                                        DynAbs.Tracing.TraceSender.TraceBreak(10899, 143372, 143378);

                                        break;
                                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 142959, 143405);
                                }
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 142847, 143428);
                            }
                        }
                        catch (System.Exception)
                        {
                            DynAbs.Tracing.TraceSender.TraceExitLoopByException(10899, 1, 582);
                            throw;
                        }
                        finally
                        {
                            DynAbs.Tracing.TraceSender.TraceExitLoop(10899, 1, 582);
                        }
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 143450, 143502);

                        f_10899_143450_143501(this, f_10899_143467_143500(collectionInitializer));
                        DynAbs.Tracing.TraceSender.TraceBreak(10899, 143524, 143530);

                        break;
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 141822, 144162);

                    default:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 141822, 144162);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 143578, 143619);

                        f_10899_143578_143618(containingSymbol is object);

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 143641, 144119) || true) && (containingSymbol is object)
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 143641, 144119);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 143721, 143812);

                            var
                            type = f_10899_143732_143811(f_10899_143755_143793(containingSymbol), leftAnnotations)
                            ;
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 143838, 143982);

                            TypeWithState
                            resultType = f_10899_143865_143981(this, node, type, useLegacyWarnings: false, trackMembers: true, AssignmentKind.Assignment)
                            ;
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 144008, 144096);

                            f_10899_144008_144095(this, node, type, containingSlot, resultType, f_10899_144080_144094(this, node));
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 143641, 144119);
                        }
                        DynAbs.Tracing.TraceSender.TraceBreak(10899, 144141, 144147);

                        break;
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 141822, 144162);
                }

                void checkImplicitReceiver(BoundObjectInitializerExpressionBase node)
                {
                    try
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 144178, 144927);

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 144280, 144912) || true) && (containingSlot >= 0 && (DynAbs.Tracing.TraceSender.Expression_True(10899, 144284, 144333) && f_10899_144307_144333_M(!node.Initializers.IsEmpty)))
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 144280, 144912);

                            if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 144375, 144893) || true) && (f_10899_144379_144401_M(!f_10899_144380_144389(node).IsValueType) && (DynAbs.Tracing.TraceSender.Expression_True(10899, 144379, 144438) && f_10899_144405_144438(State[containingSlot])))
                            )

                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 144375, 144893);

                                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 144488, 144870) || true) && (containingSymbol is null)
                                )

                                {
                                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 144488, 144870);
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 144574, 144641);

                                    f_10899_144574_144640(this, ErrorCode.WRN_NullReferenceReceiver, node.Syntax);
                                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 144488, 144870);
                                }

                                else

                                {
                                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 144488, 144870);
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 144755, 144843);

                                    f_10899_144755_144842(this, ErrorCode.WRN_NullReferenceInitializer, node.Syntax, containingSymbol);
                                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 144488, 144870);
                                }
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 144375, 144893);
                            }
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 144280, 144912);
                        }
                        DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 144178, 144927);

                        bool
                        f_10899_144307_144333_M(bool
                        i)
                        {
                            var return_v = i;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 144307, 144333);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                        f_10899_144380_144389(Microsoft.CodeAnalysis.CSharp.BoundObjectInitializerExpressionBase
                        this_param)
                        {
                            var return_v = this_param.Type;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 144380, 144389);
                            return return_v;
                        }


                        bool
                        f_10899_144379_144401_M(bool
                        i)
                        {
                            var return_v = i;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 144379, 144401);
                            return return_v;
                        }


                        bool
                        f_10899_144405_144438(Microsoft.CodeAnalysis.CSharp.NullableFlowState
                        state)
                        {
                            var return_v = state.MayBeNull();
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 144405, 144438);
                            return return_v;
                        }


                        int
                        f_10899_144574_144640(Microsoft.CodeAnalysis.CSharp.NullableWalker
                        this_param, Microsoft.CodeAnalysis.CSharp.ErrorCode
                        errorCode, Microsoft.CodeAnalysis.SyntaxNode
                        syntaxNode, params object[]
                        arguments)
                        {
                            this_param.ReportDiagnostic(errorCode, syntaxNode, arguments);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 144574, 144640);
                            return 0;
                        }


                        int
                        f_10899_144755_144842(Microsoft.CodeAnalysis.CSharp.NullableWalker
                        this_param, Microsoft.CodeAnalysis.CSharp.ErrorCode
                        errorCode, Microsoft.CodeAnalysis.SyntaxNode
                        syntaxNode, params object[]
                        arguments)
                        {
                            this_param.ReportDiagnostic(errorCode, syntaxNode, arguments);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 144755, 144842);
                            return 0;
                        }

                    }
                    catch
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 144178, 144927);
                        throw;
                    }
                    finally
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 144178, 144927);
                    }
                }
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 141601, 144938);

                int
                f_10899_141778_141807(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                node)
                {
                    this_param.TakeIncrementalSnapshot((Microsoft.CodeAnalysis.CSharp.BoundNode)node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 141778, 141807);
                    return 0;
                }


                int
                f_10899_141946_141986(Microsoft.CodeAnalysis.CSharp.BoundObjectInitializerExpression
                node)
                {
                    checkImplicitReceiver((Microsoft.CodeAnalysis.CSharp.BoundObjectInitializerExpressionBase)node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 141946, 141986);
                    return 0;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                f_10899_142037_142067(Microsoft.CodeAnalysis.CSharp.BoundObjectInitializerExpression
                this_param)
                {
                    var return_v = this_param.Initializers;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 142037, 142067);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundKind
                f_10899_142125_142141(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.Kind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 142125, 142141);
                    return return_v;
                }


                int
                f_10899_142267_142350(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, int
                containingSlot, Microsoft.CodeAnalysis.CSharp.BoundExpression
                node)
                {
                    this_param.VisitObjectElementInitializer(containingSlot, (Microsoft.CodeAnalysis.CSharp.BoundAssignmentOperator)node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 142267, 142350);
                    return 0;
                }


                int
                f_10899_142463_142487(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                node)
                {
                    this_param.VisitRvalue(node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 142463, 142487);
                    return 0;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                f_10899_142037_142067_I(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 142037, 142067);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundObjectOrCollectionValuePlaceholder
                f_10899_142617_142646(Microsoft.CodeAnalysis.CSharp.BoundObjectInitializerExpression
                this_param)
                {
                    var return_v = this_param.Placeholder;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 142617, 142646);
                    return return_v;
                }


                int
                f_10899_142600_142647(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundObjectOrCollectionValuePlaceholder
                node)
                {
                    this_param.SetNotNullResult((Microsoft.CodeAnalysis.CSharp.BoundExpression)node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 142600, 142647);
                    return 0;
                }


                int
                f_10899_142780_142824(Microsoft.CodeAnalysis.CSharp.BoundCollectionInitializerExpression
                node)
                {
                    checkImplicitReceiver((Microsoft.CodeAnalysis.CSharp.BoundObjectInitializerExpressionBase)node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 142780, 142824);
                    return 0;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                f_10899_142875_142909(Microsoft.CodeAnalysis.CSharp.BoundCollectionInitializerExpression
                this_param)
                {
                    var return_v = this_param.Initializers;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 142875, 142909);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundKind
                f_10899_142967_142983(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.Kind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 142967, 142983);
                    return return_v;
                }


                int
                f_10899_143119_143200(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                node)
                {
                    this_param.VisitCollectionElementInitializer((Microsoft.CodeAnalysis.CSharp.BoundCollectionElementInitializer)node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 143119, 143200);
                    return 0;
                }


                int
                f_10899_143313_143337(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                node)
                {
                    this_param.VisitRvalue(node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 143313, 143337);
                    return 0;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                f_10899_142875_142909_I(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 142875, 142909);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundObjectOrCollectionValuePlaceholder
                f_10899_143467_143500(Microsoft.CodeAnalysis.CSharp.BoundCollectionInitializerExpression
                this_param)
                {
                    var return_v = this_param.Placeholder;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 143467, 143500);
                    return return_v;
                }


                int
                f_10899_143450_143501(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundObjectOrCollectionValuePlaceholder
                node)
                {
                    this_param.SetNotNullResult((Microsoft.CodeAnalysis.CSharp.BoundExpression)node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 143450, 143501);
                    return 0;
                }


                int
                f_10899_143578_143618(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 143578, 143618);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                f_10899_143755_143793(Microsoft.CodeAnalysis.CSharp.Symbol
                symbol)
                {
                    var return_v = symbol.GetTypeOrReturnType();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 143755, 143793);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                f_10899_143732_143811(Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                declaredType, Microsoft.CodeAnalysis.CSharp.Symbols.FlowAnalysisAnnotations
                flowAnalysisAnnotations)
                {
                    var return_v = ApplyLValueAnnotations(declaredType, flowAnalysisAnnotations);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 143732, 143811);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                f_10899_143865_143981(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                expr, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                targetTypeOpt, bool
                useLegacyWarnings, bool
                trackMembers, Microsoft.CodeAnalysis.CSharp.NullableWalker.AssignmentKind
                assignmentKind)
                {
                    var return_v = this_param.VisitOptionalImplicitConversion(expr, targetTypeOpt, useLegacyWarnings: useLegacyWarnings, trackMembers: trackMembers, assignmentKind);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 143865, 143981);
                    return return_v;
                }


                int
                f_10899_144080_144094(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                node)
                {
                    var return_v = this_param.MakeSlot(node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 144080, 144094);
                    return return_v;
                }


                int
                f_10899_144008_144095(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                valueOpt, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                targetType, int
                targetSlot, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                valueType, int
                valueSlot)
                {
                    this_param.TrackNullableStateForAssignment(valueOpt, targetType, targetSlot, valueType, valueSlot);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 144008, 144095);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 141601, 144938);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 141601, 144938);
            }
        }

        private void VisitObjectElementInitializer(int containingSlot, BoundAssignmentOperator node)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 144950, 146908);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 145067, 145097);

                f_10899_145067_145096(this, node);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 145111, 145132);

                var
                left = f_10899_145122_145131(node)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 145146, 146897);

                switch (f_10899_145154_145163(left))
                {

                    case BoundKind.ObjectInitializerMember:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 145146, 146897);
                        {
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 145285, 145344);

                            var
                            objectInitializer = (BoundObjectInitializerMember)left
                            ;
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 145370, 145400);

                            f_10899_145370_145399(this, left);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 145426, 145470);

                            var
                            symbol = f_10899_145439_145469(objectInitializer)
                            ;

                            if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 145496, 145856) || true) && (f_10899_145500_145545_M(!objectInitializer.Arguments.IsDefaultOrEmpty))
                            )

                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 145496, 145856);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 145603, 145829);

                                f_10899_145603_145828(this, objectInitializer, f_10899_145637_145664(objectInitializer), f_10899_145666_145703(objectInitializer), symbol, f_10899_145730_145763(objectInitializer), f_10899_145765_145799(objectInitializer), f_10899_145801_145827(objectInitializer));
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 145496, 145856);
                            }

                            if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 145884, 146463) || true) && (symbol is object)
                            )

                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 145884, 146463);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 145962, 146082);

                                int
                                slot = (DynAbs.Tracing.TraceSender.Conditional_F1(10899, 145973, 146034) || (((containingSlot < 0 || (DynAbs.Tracing.TraceSender.Expression_False(10899, 145974, 146033) || !f_10899_145997_146033(this, containingSlot, symbol))) && DynAbs.Tracing.TraceSender.Conditional_F2(10899, 146037, 146039)) || DynAbs.Tracing.TraceSender.Conditional_F3(10899, 146042, 146081))) ? -1 : f_10899_146042_146081(this, symbol, containingSlot)
                                ;
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 146112, 146202);

                                f_10899_146112_146201(this, symbol, slot, f_10899_146157_146167(node), f_10899_146169_146200(this, f_10899_146190_146199(node)));
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 145884, 146463);
                            }
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 146491, 146604);

                            var
                            result = f_10899_146504_146603(f_10899_146520_146542(objectInitializer), NullableAnnotation.NotAnnotated, NullableFlowState.NotNull)
                            ;
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 146630, 146680);

                            f_10899_146630_146679(this, objectInitializer, result);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 146706, 146743);

                            f_10899_146706_146742(this, node, result);
                        }
                        DynAbs.Tracing.TraceSender.TraceBreak(10899, 146788, 146794);

                        break;
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 145146, 146897);

                    default:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 145146, 146897);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 146842, 146854);

                        f_10899_146842_146853(this, node);
                        DynAbs.Tracing.TraceSender.TraceBreak(10899, 146876, 146882);

                        break;
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 145146, 146897);
                }
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 144950, 146908);

                int
                f_10899_145067_145096(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundAssignmentOperator
                node)
                {
                    this_param.TakeIncrementalSnapshot((Microsoft.CodeAnalysis.CSharp.BoundNode)node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 145067, 145096);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10899_145122_145131(Microsoft.CodeAnalysis.CSharp.BoundAssignmentOperator
                this_param)
                {
                    var return_v = this_param.Left;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 145122, 145131);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundKind
                f_10899_145154_145163(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.Kind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 145154, 145163);
                    return return_v;
                }


                int
                f_10899_145370_145399(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                node)
                {
                    this_param.TakeIncrementalSnapshot((Microsoft.CodeAnalysis.CSharp.BoundNode)node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 145370, 145399);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.Symbol?
                f_10899_145439_145469(Microsoft.CodeAnalysis.CSharp.BoundObjectInitializerMember
                this_param)
                {
                    var return_v = this_param.MemberSymbol;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 145439, 145469);
                    return return_v;
                }


                bool
                f_10899_145500_145545_M(bool
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 145500, 145545);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                f_10899_145637_145664(Microsoft.CodeAnalysis.CSharp.BoundObjectInitializerMember
                this_param)
                {
                    var return_v = this_param.Arguments;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 145637, 145664);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.RefKind>
                f_10899_145666_145703(Microsoft.CodeAnalysis.CSharp.BoundObjectInitializerMember
                this_param)
                {
                    var return_v = this_param.ArgumentRefKindsOpt;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 145666, 145703);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<int>
                f_10899_145730_145763(Microsoft.CodeAnalysis.CSharp.BoundObjectInitializerMember
                this_param)
                {
                    var return_v = this_param.ArgsToParamsOpt;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 145730, 145763);
                    return return_v;
                }


                Microsoft.CodeAnalysis.BitVector
                f_10899_145765_145799(Microsoft.CodeAnalysis.CSharp.BoundObjectInitializerMember
                this_param)
                {
                    var return_v = this_param.DefaultArguments;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 145765, 145799);
                    return return_v;
                }


                bool
                f_10899_145801_145827(Microsoft.CodeAnalysis.CSharp.BoundObjectInitializerMember
                this_param)
                {
                    var return_v = this_param.Expanded;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 145801, 145827);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.NullableWalker.VisitArgumentResult>
                f_10899_145603_145828(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundObjectInitializerMember
                node, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                arguments, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.RefKind>
                refKindsOpt, Microsoft.CodeAnalysis.CSharp.Symbol?
                property, System.Collections.Immutable.ImmutableArray<int>
                argsToParamsOpt, Microsoft.CodeAnalysis.BitVector
                defaultArguments, bool
                expanded)
                {
                    var return_v = this_param.VisitArguments((Microsoft.CodeAnalysis.CSharp.BoundExpression)node, arguments, refKindsOpt, (Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol?)property, argsToParamsOpt, defaultArguments, expanded);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 145603, 145828);
                    return return_v;
                }


                bool
                f_10899_145997_146033(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, int
                slot, Microsoft.CodeAnalysis.CSharp.Symbol
                possibleMember)
                {
                    var return_v = this_param.IsSlotMember(slot, possibleMember);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 145997, 146033);
                    return return_v;
                }


                int
                f_10899_146042_146081(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.Symbol
                symbol, int
                containingSlot)
                {
                    var return_v = this_param.GetOrCreateSlot(symbol, containingSlot);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 146042, 146081);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10899_146157_146167(Microsoft.CodeAnalysis.CSharp.BoundAssignmentOperator
                this_param)
                {
                    var return_v = this_param.Right;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 146157, 146167);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10899_146190_146199(Microsoft.CodeAnalysis.CSharp.BoundAssignmentOperator
                this_param)
                {
                    var return_v = this_param.Left;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 146190, 146199);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.FlowAnalysisAnnotations
                f_10899_146169_146200(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                expr)
                {
                    var return_v = this_param.GetLValueAnnotations(expr);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 146169, 146200);
                    return return_v;
                }


                int
                f_10899_146112_146201(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.Symbol
                containingSymbol, int
                containingSlot, Microsoft.CodeAnalysis.CSharp.BoundExpression
                node, Microsoft.CodeAnalysis.CSharp.Symbols.FlowAnalysisAnnotations
                leftAnnotations)
                {
                    this_param.VisitObjectCreationInitializer(containingSymbol, containingSlot, node, leftAnnotations);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 146112, 146201);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                f_10899_146520_146542(Microsoft.CodeAnalysis.CSharp.BoundObjectInitializerMember
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 146520, 146542);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.NullableWalker.VisitResult
                f_10899_146504_146603(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                type, Microsoft.CodeAnalysis.CSharp.NullableAnnotation
                annotation, Microsoft.CodeAnalysis.CSharp.NullableFlowState
                state)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.NullableWalker.VisitResult(type, annotation, state);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 146504, 146603);
                    return return_v;
                }


                int
                f_10899_146630_146679(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundObjectInitializerMember
                expr, Microsoft.CodeAnalysis.CSharp.NullableWalker.VisitResult
                result)
                {
                    this_param.SetAnalyzedNullability((Microsoft.CodeAnalysis.CSharp.BoundExpression)expr, result);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 146630, 146679);
                    return 0;
                }


                int
                f_10899_146706_146742(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundAssignmentOperator
                expr, Microsoft.CodeAnalysis.CSharp.NullableWalker.VisitResult
                result)
                {
                    this_param.SetAnalyzedNullability((Microsoft.CodeAnalysis.CSharp.BoundExpression)expr, result);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 146706, 146742);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.BoundNode?
                f_10899_146842_146853(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundAssignmentOperator
                node)
                {
                    var return_v = this_param.Visit((Microsoft.CodeAnalysis.CSharp.BoundNode)node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 146842, 146853);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 144950, 146908);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 144950, 146908);
            }
        }

        private new void VisitCollectionElementInitializer(BoundCollectionElementInitializer node)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 146920, 147835);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 147087, 147284);

                (var reinferredMethod, _, _) = f_10899_147118_147283(this, node, f_10899_147139_147153(node), refKindsOpt: default, f_10899_147177_147191(node), f_10899_147193_147213(node), f_10899_147215_147236(node), f_10899_147238_147251(node), f_10899_147253_147282(node));
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 147298, 147339);

                f_10899_147298_147338(reinferredMethod is object);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 147353, 147705) || true) && (f_10899_147357_147381(node) != null)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 147353, 147705);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 147423, 147515);

                    f_10899_147423_147514(f_10899_147436_147465(f_10899_147436_147460(node)) == BoundKind.ObjectOrCollectionValuePlaceholder);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 147533, 147690);

                    f_10899_147533_147689(this, f_10899_147556_147580(node), f_10899_147582_147688(f_10899_147598_147627(f_10899_147598_147622(node)), NullableAnnotation.NotAnnotated, NullableFlowState.NotNull));
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 147353, 147705);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 147719, 147753);

                f_10899_147719_147752(this, node);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 147767, 147824);

                f_10899_147767_147823(this, node, f_10899_147790_147804(node), reinferredMethod);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 146920, 147835);

                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                f_10899_147139_147153(Microsoft.CodeAnalysis.CSharp.BoundCollectionElementInitializer
                this_param)
                {
                    var return_v = this_param.Arguments;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 147139, 147153);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                f_10899_147177_147191(Microsoft.CodeAnalysis.CSharp.BoundCollectionElementInitializer
                this_param)
                {
                    var return_v = this_param.AddMethod;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 147177, 147191);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<int>
                f_10899_147193_147213(Microsoft.CodeAnalysis.CSharp.BoundCollectionElementInitializer
                this_param)
                {
                    var return_v = this_param.ArgsToParamsOpt;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 147193, 147213);
                    return return_v;
                }


                Microsoft.CodeAnalysis.BitVector
                f_10899_147215_147236(Microsoft.CodeAnalysis.CSharp.BoundCollectionElementInitializer
                this_param)
                {
                    var return_v = this_param.DefaultArguments;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 147215, 147236);
                    return return_v;
                }


                bool
                f_10899_147238_147251(Microsoft.CodeAnalysis.CSharp.BoundCollectionElementInitializer
                this_param)
                {
                    var return_v = this_param.Expanded;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 147238, 147251);
                    return return_v;
                }


                bool
                f_10899_147253_147282(Microsoft.CodeAnalysis.CSharp.BoundCollectionElementInitializer
                this_param)
                {
                    var return_v = this_param.InvokedAsExtensionMethod;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 147253, 147282);
                    return return_v;
                }


                (Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol? method, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.NullableWalker.VisitArgumentResult> results, bool returnNotNull)
                f_10899_147118_147283(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundCollectionElementInitializer
                node, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                arguments, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.RefKind>
                refKindsOpt, Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                method, System.Collections.Immutable.ImmutableArray<int>
                argsToParamsOpt, Microsoft.CodeAnalysis.BitVector
                defaultArguments, bool
                expanded, bool
                invokedAsExtensionMethod)
                {
                    var return_v = this_param.VisitArguments((Microsoft.CodeAnalysis.CSharp.BoundExpression)node, arguments, refKindsOpt: refKindsOpt, method, argsToParamsOpt, defaultArguments, expanded, invokedAsExtensionMethod);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 147118, 147283);
                    return return_v;
                }


                int
                f_10899_147298_147338(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 147298, 147338);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression?
                f_10899_147357_147381(Microsoft.CodeAnalysis.CSharp.BoundCollectionElementInitializer
                this_param)
                {
                    var return_v = this_param.ImplicitReceiverOpt;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 147357, 147381);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10899_147436_147460(Microsoft.CodeAnalysis.CSharp.BoundCollectionElementInitializer
                this_param)
                {
                    var return_v = this_param.ImplicitReceiverOpt;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 147436, 147460);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundKind
                f_10899_147436_147465(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.Kind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 147436, 147465);
                    return return_v;
                }


                int
                f_10899_147423_147514(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 147423, 147514);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10899_147556_147580(Microsoft.CodeAnalysis.CSharp.BoundCollectionElementInitializer
                this_param)
                {
                    var return_v = this_param.ImplicitReceiverOpt;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 147556, 147580);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10899_147598_147622(Microsoft.CodeAnalysis.CSharp.BoundCollectionElementInitializer
                this_param)
                {
                    var return_v = this_param.ImplicitReceiverOpt;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 147598, 147622);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?
                f_10899_147598_147627(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 147598, 147627);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.NullableWalker.VisitResult
                f_10899_147582_147688(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?
                type, Microsoft.CodeAnalysis.CSharp.NullableAnnotation
                annotation, Microsoft.CodeAnalysis.CSharp.NullableFlowState
                state)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.NullableWalker.VisitResult(type, annotation, state);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 147582, 147688);
                    return return_v;
                }


                int
                f_10899_147533_147689(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                expr, Microsoft.CodeAnalysis.CSharp.NullableWalker.VisitResult
                result)
                {
                    this_param.SetAnalyzedNullability(expr, result);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 147533, 147689);
                    return 0;
                }


                int
                f_10899_147719_147752(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundCollectionElementInitializer
                expression)
                {
                    this_param.SetUnknownResultNullability((Microsoft.CodeAnalysis.CSharp.BoundExpression)expression);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 147719, 147752);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                f_10899_147790_147804(Microsoft.CodeAnalysis.CSharp.BoundCollectionElementInitializer
                this_param)
                {
                    var return_v = this_param.AddMethod;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 147790, 147804);
                    return return_v;
                }


                int
                f_10899_147767_147823(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundCollectionElementInitializer
                node, Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                originalSymbol, Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                updatedSymbol)
                {
                    this_param.SetUpdatedSymbol((Microsoft.CodeAnalysis.CSharp.BoundNode)node, (Microsoft.CodeAnalysis.CSharp.Symbol)originalSymbol, (Microsoft.CodeAnalysis.CSharp.Symbol)updatedSymbol);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 147767, 147823);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 146920, 147835);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 146920, 147835);
            }
        }

        private void SetNotNullResult(BoundExpression node)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 147847, 148014);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 147923, 148003);

                f_10899_147923_148002(this, node, TypeWithState.Create(f_10899_147964_147973(node), NullableFlowState.NotNull));
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 147847, 148014);

                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?
                f_10899_147964_147973(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 147964, 147973);
                    return return_v;
                }


                int
                f_10899_147923_148002(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                expression, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                type)
                {
                    this_param.SetResultType(expression, type);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 147923, 148002);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 147847, 148014);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 147847, 148014);
            }
        }

        protected override bool IsEmptyStructType(TypeSymbol type)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 148153, 149313);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 148236, 148334) || true) && (f_10899_148240_148253(type) != TypeKind.Struct)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 148236, 148334);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 148306, 148319);

                    return false;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 148236, 148334);
                }

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 148469, 148581) || true) && (!f_10899_148474_148519(_emptyStructTypeCache, type))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 148469, 148581);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 148553, 148566);

                    return false;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 148469, 148581);
                }

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 148597, 148698) || true) && (f_10899_148601_148617(type) != SpecialType.None)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 148597, 148698);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 148671, 148683);

                    return true;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 148597, 148698);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 148714, 148774);

                var
                members = f_10899_148728_148773(((NamedTypeSymbol)type))
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 148972, 149081) || true) && (members.Any(m => m.Kind == SymbolKind.Field))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 148972, 149081);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 149054, 149066);

                    return true;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 148972, 149081);
                }

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 149161, 149274) || true) && (members.Any(m => m.Kind == SymbolKind.Property))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 149161, 149274);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 149246, 149259);

                    return false;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 149161, 149274);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 149290, 149302);

                return true;
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 148153, 149313);

                Microsoft.CodeAnalysis.TypeKind
                f_10899_148240_148253(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                this_param)
                {
                    var return_v = this_param.TypeKind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 148240, 148253);
                    return return_v;
                }


                bool
                f_10899_148474_148519(Microsoft.CodeAnalysis.CSharp.EmptyStructTypeCache
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                type)
                {
                    var return_v = this_param.IsEmptyStructType(type);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 148474, 148519);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SpecialType
                f_10899_148601_148617(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                this_param)
                {
                    var return_v = this_param.SpecialType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 148601, 148617);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>
                f_10899_148728_148773(Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                this_param)
                {
                    var return_v = this_param.GetMembersUnordered();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 148728, 148773);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 148153, 149313);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 148153, 149313);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private int GetOrCreatePlaceholderSlot(BoundExpression node)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 149325, 149688);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 149410, 149444);

                f_10899_149410_149443(f_10899_149423_149432(node) is object);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 149458, 149549) || true) && (f_10899_149462_149490(this, f_10899_149480_149489(node)))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 149458, 149549);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 149524, 149534);

                    return -1;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 149458, 149549);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 149565, 149677);

                return f_10899_149572_149676(this, node, TypeWithAnnotations.Create(f_10899_149632_149641(node), NullableAnnotation.NotAnnotated));
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 149325, 149688);

                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?
                f_10899_149423_149432(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 149423, 149432);
                    return return_v;
                }


                int
                f_10899_149410_149443(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 149410, 149443);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                f_10899_149480_149489(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 149480, 149489);
                    return return_v;
                }


                bool
                f_10899_149462_149490(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                type)
                {
                    var return_v = this_param.IsEmptyStructType(type);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 149462, 149490);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                f_10899_149632_149641(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 149632, 149641);
                    return return_v;
                }


                int
                f_10899_149572_149676(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                identifier, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                type)
                {
                    var return_v = this_param.GetOrCreatePlaceholderSlot((object)identifier, type);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 149572, 149676);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 149325, 149688);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 149325, 149688);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private int GetOrCreatePlaceholderSlot(object identifier, TypeWithAnnotations type)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 149700, 150309);
                Microsoft.CodeAnalysis.CSharp.NullableWalker.PlaceholderLocal placeholder = default(Microsoft.CodeAnalysis.CSharp.NullableWalker.PlaceholderLocal);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 149808, 149891);

                if (_placeholderLocalsOpt is null)
                    DynAbs.Tracing.TraceSender.TraceEnterExpression(10899, 149808, 149891);

                _placeholderLocalsOpt ??= f_10899_149834_149890();

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 149905, 150162) || true) && (!f_10899_149910_149976(_placeholderLocalsOpt, identifier, out placeholder))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 149905, 150162);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 150010, 150078);

                    placeholder = f_10899_150024_150077(CurrentSymbol, identifier, type);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 150096, 150147);

                    f_10899_150096_150146(_placeholderLocalsOpt, identifier, placeholder);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 149905, 150162);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 150178, 150220);

                f_10899_150178_150219((object)placeholder != null);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 150234, 150298);

                return f_10899_150241_150297(this, placeholder, forceSlotEvenIfEmpty: true);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 149700, 150309);

                Microsoft.CodeAnalysis.PooledObjects.PooledDictionary<object, Microsoft.CodeAnalysis.CSharp.NullableWalker.PlaceholderLocal>
                f_10899_149834_149890()
                {
                    var return_v = PooledDictionary<object, PlaceholderLocal>.GetInstance();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 149834, 149890);
                    return return_v;
                }


                bool
                f_10899_149910_149976(Microsoft.CodeAnalysis.PooledObjects.PooledDictionary<object, Microsoft.CodeAnalysis.CSharp.NullableWalker.PlaceholderLocal>
                this_param, object
                key, out Microsoft.CodeAnalysis.CSharp.NullableWalker.PlaceholderLocal
                value)
                {
                    var return_v = this_param.TryGetValue(key, out value);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 149910, 149976);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.NullableWalker.PlaceholderLocal
                f_10899_150024_150077(Microsoft.CodeAnalysis.CSharp.Symbol
                containingSymbol, object
                identifier, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                type)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.NullableWalker.PlaceholderLocal(containingSymbol, identifier, type);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 150024, 150077);
                    return return_v;
                }


                int
                f_10899_150096_150146(Microsoft.CodeAnalysis.PooledObjects.PooledDictionary<object, Microsoft.CodeAnalysis.CSharp.NullableWalker.PlaceholderLocal>
                this_param, object
                key, Microsoft.CodeAnalysis.CSharp.NullableWalker.PlaceholderLocal
                value)
                {
                    this_param.Add(key, value);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 150096, 150146);
                    return 0;
                }


                int
                f_10899_150178_150219(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 150178, 150219);
                    return 0;
                }


                int
                f_10899_150241_150297(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.NullableWalker.PlaceholderLocal
                symbol, bool
                forceSlotEvenIfEmpty)
                {
                    var return_v = this_param.GetOrCreateSlot((Microsoft.CodeAnalysis.CSharp.Symbol)symbol, forceSlotEvenIfEmpty: forceSlotEvenIfEmpty);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 150241, 150297);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 149700, 150309);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 149700, 150309);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override BoundNode? VisitAnonymousObjectCreationExpression(BoundAnonymousObjectCreationExpression node)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 150321, 153406);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 150456, 150490);

                f_10899_150456_150489(!IsConditionalState);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 150504, 150544);

                f_10899_150504_150543(f_10899_150517_150542(f_10899_150517_150526(node)));
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 150560, 150607);

                var
                anonymousType = (NamedTypeSymbol)f_10899_150597_150606(node)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 150621, 150652);

                var
                arguments = f_10899_150637_150651(node)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 150666, 150780);

                var
                argumentTypes = arguments.SelectAsArray((arg, self) =>
                                self.VisitRvalueWithState(arg), this)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 150794, 150917);

                var
                argumentsWithAnnotations = argumentTypes.SelectAsArray(arg =>
                                arg.ToTypeWithAnnotations(compilation))
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 150933, 152556) || true) && (argumentsWithAnnotations.All(argType => argType.HasType))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 150933, 152556);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 151027, 151134);

                    anonymousType = f_10899_151043_151133(anonymousType, argumentsWithAnnotations);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 151152, 151204);

                    int
                    receiverSlot = f_10899_151171_151203(this, node)
                    ;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 151222, 151254);

                    int
                    currentDeclarationIndex = 0
                    ;
                    try
                    {
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 151281, 151286);
                        for (int
        i = 0
        ; (DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 151272, 152541) || true) && (i < arguments.Length)
        ; DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 151310, 151313)
        , i++, DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 151272, 152541))

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 151272, 152541);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 151355, 151383);

                            var
                            argument = arguments[i]
                            ;
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 151405, 151441);

                            var
                            argumentType = argumentTypes[i]
                            ;
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 151463, 151542);

                            var
                            property = f_10899_151478_151541(anonymousType, i)
                            ;

                            if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 151564, 152522) || true) && (f_10899_151568_151593(f_10899_151568_151581(property)) != SpecialType.System_Void)
                            )

                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 151564, 152522);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 151876, 151927);

                                var
                                slot = f_10899_151887_151926(this, property, receiverSlot)
                                ;
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 151953, 152065);

                                f_10899_151953_152064(this, argument, f_10899_151995_152023(property), slot, argumentType, f_10899_152045_152063(this, argument));
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 152093, 152178);

                                var
                                currentDeclaration = f_10899_152118_152177(node, property, ref currentDeclarationIndex)
                                ;

                                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 152204, 152499) || true) && (currentDeclaration is object)
                                )

                                {
                                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 152204, 152499);
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 152294, 152338);

                                    f_10899_152294_152337(this, currentDeclaration);
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 152368, 152472);

                                    f_10899_152368_152471(this, currentDeclaration, f_10899_152411_152470(argumentType, f_10899_152441_152469(property)));
                                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 152204, 152499);
                                }
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 151564, 152522);
                            }
                        }
                    }
                    catch (System.Exception)
                    {
                        DynAbs.Tracing.TraceSender.TraceExitLoopByException(10899, 1, 1270);
                        throw;
                    }
                    finally
                    {
                        DynAbs.Tracing.TraceSender.TraceExitLoop(10899, 1, 1270);
                    }
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 150933, 152556);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 152572, 152656);

                f_10899_152572_152655(this, node, TypeWithState.Create(anonymousType, NullableFlowState.NotNull));
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 152670, 152682);

                return null;

                static BoundAnonymousPropertyDeclaration? getDeclaration(BoundAnonymousObjectCreationExpression node, PropertySymbol currentProperty, ref int currentDeclarationIndex)
                {
                    try
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterStaticMethod(10899, 152698, 153395);

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 152897, 153025) || true) && (currentDeclarationIndex >= node.Declarations.Length)
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 152897, 153025);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 152994, 153006);

                            return null;
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 152897, 153025);
                        }
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 153045, 153113);

                        var
                        currentDeclaration = f_10899_153070_153087(node)[currentDeclarationIndex]
                        ;

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 153133, 153348) || true) && (f_10899_153137_153179(f_10899_153137_153164(currentDeclaration)) == f_10899_153183_153213(currentProperty))
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 153133, 153348);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 153255, 153281);

                            currentDeclarationIndex++;
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 153303, 153329);

                            return currentDeclaration;
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 153133, 153348);
                        }
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 153368, 153380);

                        return null;
                        DynAbs.Tracing.TraceSender.TraceExitStaticMethod(10899, 152698, 153395);

                        System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundAnonymousPropertyDeclaration>
                        f_10899_153070_153087(Microsoft.CodeAnalysis.CSharp.BoundAnonymousObjectCreationExpression
                        this_param)
                        {
                            var return_v = this_param.Declarations;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 153070, 153087);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol
                        f_10899_153137_153164(Microsoft.CodeAnalysis.CSharp.BoundAnonymousPropertyDeclaration
                        this_param)
                        {
                            var return_v = this_param.Property;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 153137, 153164);
                            return return_v;
                        }


                        int?
                        f_10899_153137_153179(Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol
                        this_param)
                        {
                            var return_v = this_param.MemberIndexOpt;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 153137, 153179);
                            return return_v;
                        }


                        int?
                        f_10899_153183_153213(Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol
                        this_param)
                        {
                            var return_v = this_param.MemberIndexOpt;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 153183, 153213);
                            return return_v;
                        }

                    }
                    catch
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 152698, 153395);
                        throw;
                    }
                    finally
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 152698, 153395);
                    }
                    throw new System.Exception("Slicer error: unreachable code");
                }
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 150321, 153406);

                int
                f_10899_150456_150489(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 150456, 150489);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                f_10899_150517_150526(Microsoft.CodeAnalysis.CSharp.BoundAnonymousObjectCreationExpression
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 150517, 150526);
                    return return_v;
                }


                bool
                f_10899_150517_150542(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                this_param)
                {
                    var return_v = this_param.IsAnonymousType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 150517, 150542);
                    return return_v;
                }


                int
                f_10899_150504_150543(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 150504, 150543);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                f_10899_150597_150606(Microsoft.CodeAnalysis.CSharp.BoundAnonymousObjectCreationExpression
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 150597, 150606);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                f_10899_150637_150651(Microsoft.CodeAnalysis.CSharp.BoundAnonymousObjectCreationExpression
                this_param)
                {
                    var return_v = this_param.Arguments;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 150637, 150651);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                f_10899_151043_151133(Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                type, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations>
                newFieldTypes)
                {
                    var return_v = AnonymousTypeManager.ConstructAnonymousTypeSymbol(type, newFieldTypes);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 151043, 151133);
                    return return_v;
                }


                int
                f_10899_151171_151203(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundAnonymousObjectCreationExpression
                node)
                {
                    var return_v = this_param.GetOrCreatePlaceholderSlot((Microsoft.CodeAnalysis.CSharp.BoundExpression)node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 151171, 151203);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol
                f_10899_151478_151541(Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                type, int
                index)
                {
                    var return_v = AnonymousTypeManager.GetAnonymousTypeProperty(type, index);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 151478, 151541);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                f_10899_151568_151581(Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 151568, 151581);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SpecialType
                f_10899_151568_151593(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                this_param)
                {
                    var return_v = this_param.SpecialType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 151568, 151593);
                    return return_v;
                }


                int
                f_10899_151887_151926(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol
                symbol, int
                containingSlot)
                {
                    var return_v = this_param.GetOrCreateSlot((Microsoft.CodeAnalysis.CSharp.Symbol)symbol, containingSlot);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 151887, 151926);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                f_10899_151995_152023(Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol
                this_param)
                {
                    var return_v = this_param.TypeWithAnnotations;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 151995, 152023);
                    return return_v;
                }


                int
                f_10899_152045_152063(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                node)
                {
                    var return_v = this_param.MakeSlot(node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 152045, 152063);
                    return return_v;
                }


                int
                f_10899_151953_152064(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                valueOpt, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                targetType, int
                targetSlot, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                valueType, int
                valueSlot)
                {
                    this_param.TrackNullableStateForAssignment(valueOpt, targetType, targetSlot, valueType, valueSlot);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 151953, 152064);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.BoundAnonymousPropertyDeclaration?
                f_10899_152118_152177(Microsoft.CodeAnalysis.CSharp.BoundAnonymousObjectCreationExpression
                node, Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol
                currentProperty, ref int
                currentDeclarationIndex)
                {
                    var return_v = getDeclaration(node, currentProperty, ref currentDeclarationIndex);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 152118, 152177);
                    return return_v;
                }


                int
                f_10899_152294_152337(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundAnonymousPropertyDeclaration
                node)
                {
                    this_param.TakeIncrementalSnapshot((Microsoft.CodeAnalysis.CSharp.BoundNode)node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 152294, 152337);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                f_10899_152441_152469(Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol
                this_param)
                {
                    var return_v = this_param.TypeWithAnnotations;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 152441, 152469);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.NullableWalker.VisitResult
                f_10899_152411_152470(Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                rValueType, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                lValueType)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.NullableWalker.VisitResult(rValueType, lValueType);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 152411, 152470);
                    return return_v;
                }


                int
                f_10899_152368_152471(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundAnonymousPropertyDeclaration
                expr, Microsoft.CodeAnalysis.CSharp.NullableWalker.VisitResult
                result)
                {
                    this_param.SetAnalyzedNullability((Microsoft.CodeAnalysis.CSharp.BoundExpression)expr, result);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 152368, 152471);
                    return 0;
                }


                int
                f_10899_152572_152655(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundAnonymousObjectCreationExpression
                expression, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                type)
                {
                    this_param.SetResultType((Microsoft.CodeAnalysis.CSharp.BoundExpression)expression, type);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 152572, 152655);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 150321, 153406);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 150321, 153406);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override BoundNode? VisitArrayCreation(BoundArrayCreation node)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 153418, 159117);
                try
                {
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 153513, 153612);
                    foreach (var expr in f_10899_153534_153545_I(f_10899_153534_153545(node)))
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 153513, 153612);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 153579, 153597);

                        f_10899_153579_153596(this, expr);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 153513, 153612);
                    }
                }
                catch (System.Exception)
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoopByException(10899, 1, 100);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoop(10899, 1, 100);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 153628, 153669);

                var
                initialization = f_10899_153649_153668(node)
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 153683, 153868) || true) && (initialization is null)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 153683, 153868);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 153743, 153823);

                    f_10899_153743_153822(this, node, TypeWithState.Create(f_10899_153784_153793(node), NullableFlowState.NotNull));
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 153841, 153853);

                    return null;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 153683, 153868);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 153884, 153924);

                f_10899_153884_153923(this, initialization);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 153938, 154034);

                var
                expressions = f_10899_153956_154033(initialization.Initializers.Length)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 154048, 154094);

                f_10899_154048_154093(initialization, expressions);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 154108, 154134);

                int
                n = f_10899_154116_154133(expressions)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 154298, 154381);

                bool
                isInferred = f_10899_154316_154334(node.Syntax) == SyntaxKind.ImplicitArrayCreationExpression
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 154395, 154438);

                var
                arrayType = (ArrayTypeSymbol)f_10899_154428_154437(node)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 154452, 154507);

                var
                elementType = f_10899_154470_154506(arrayType)
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 154521, 158951) || true) && (!isInferred)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 154521, 158951);
                    try
                    {
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 154570, 154792);
                        foreach (var expr in f_10899_154591_154602_I(expressions))
                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 154570, 154792);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 154644, 154773);

                            _ = f_10899_154648_154772(this, expr, elementType, useLegacyWarnings: false, trackMembers: false, AssignmentKind.Assignment);
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 154570, 154792);
                        }
                    }
                    catch (System.Exception)
                    {
                        DynAbs.Tracing.TraceSender.TraceExitLoopByException(10899, 1, 223);
                        throw;
                    }
                    finally
                    {
                        DynAbs.Tracing.TraceSender.TraceExitLoop(10899, 1, 223);
                    }
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 154521, 158951);
                }

                else

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 154521, 158951);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 154858, 154934);

                    var
                    expressionsNoConversions = f_10899_154889_154933(n)
                    ;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 154952, 155010);

                    var
                    conversions = f_10899_154970_155009(n)
                    ;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 155028, 155089);

                    var
                    resultTypes = f_10899_155046_155088(n)
                    ;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 155107, 155177);

                    var
                    placeholderBuilder = f_10899_155132_155176(n)
                    ;
                    try
                    {
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 155195, 155998);
                        foreach (var expression in f_10899_155222_155233_I(expressions))
                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 155195, 155998);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 155349, 155479);

                            (BoundExpression expressionNoConversion, Conversion conversion) = f_10899_155415_155478(expression, includeExplicitConversions: false);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 155501, 155554);

                            f_10899_155501_155553(expressionsNoConversions, expressionNoConversion);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 155576, 155604);

                            f_10899_155576_155603(conversions, conversion);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 155626, 155699);

                            f_10899_155626_155698(this, expression, expressionNoConversion);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 155721, 155783);

                            var
                            resultType = f_10899_155738_155782(this, expressionNoConversion)
                            ;
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 155805, 155833);

                            f_10899_155805_155832(resultTypes, resultType);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 155855, 155979);

                            f_10899_155855_155978(placeholderBuilder, f_10899_155878_155977(expressionNoConversion, resultType.ToTypeWithAnnotations(compilation)));
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 155195, 155998);
                        }
                    }
                    catch (System.Exception)
                    {
                        DynAbs.Tracing.TraceSender.TraceExitLoopByException(10899, 1, 804);
                        throw;
                    }
                    finally
                    {
                        DynAbs.Tracing.TraceSender.TraceExitLoop(10899, 1, 804);
                    }
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 156018, 156077);

                    var
                    placeholders = f_10899_156037_156076(placeholderBuilder)
                    ;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 156097, 156125);

                    TypeSymbol?
                    bestType = null
                    ;

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 156143, 156390) || true) && (f_10899_156147_156162_M(!node.HasErrors))
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 156143, 156390);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 156204, 156255);

                        HashSet<DiagnosticInfo>?
                        useSiteDiagnostics = null
                        ;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 156277, 156371);

                        bestType = f_10899_156288_156370(placeholders, _conversions, ref useSiteDiagnostics);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 156143, 156390);
                    }
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 156410, 156600);

                    TypeWithAnnotations
                    inferredType = (DynAbs.Tracing.TraceSender.Conditional_F1(10899, 156445, 156463) || (((bestType is null)
                    && DynAbs.Tracing.TraceSender.Conditional_F2(10899, 156487, 156539)) || DynAbs.Tracing.TraceSender.Conditional_F3(10899, 156563, 156599))) ? elementType.SetUnknownNullabilityForReferenceTypes() : TypeWithAnnotations.Create(bestType)
                    ;

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 156620, 158738) || true) && (bestType is object)
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 156620, 158738);
                        try
                        {
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 156832, 156837);
                            // Convert elements to best type to determine element top-level nullability and to report nested nullability warnings
                            for (int
        i = 0
        ; (DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 156823, 157421) || true) && (i < n)
        ; DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 156846, 156849)
        , i++, DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 156823, 157421))

                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 156823, 157421);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 156899, 156956);

                                var
                                expressionNoConversion = f_10899_156928_156955(expressionsNoConversions, i)
                                ;
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 156982, 157065);

                                var
                                expression = f_10899_156999_157064(f_10899_157025_157039(expressions, i), expressionNoConversion)
                                ;
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 157091, 157398);

                                resultTypes[i] = f_10899_157108_157397(this, expression, expressionNoConversion, f_10899_157160_157174(conversions, i), inferredType, f_10899_157190_157204(resultTypes, i), checkConversion: true, fromExplicitCast: false, useLegacyWarnings: false, AssignmentKind.Assignment, reportRemainingWarnings: true, reportTopLevelWarnings: false);
                            }
                        }
                        catch (System.Exception)
                        {
                            DynAbs.Tracing.TraceSender.TraceExitLoopByException(10899, 1, 599);
                            throw;
                        }
                        finally
                        {
                            DynAbs.Tracing.TraceSender.TraceExitLoop(10899, 1, 599);
                        }
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 157520, 157586);

                        var
                        elementState = f_10899_157539_157585(resultTypes)
                        ;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 157608, 157712);

                        inferredType = TypeWithState.Create(inferredType.Type, elementState).ToTypeWithAnnotations(compilation);
                        try
                        {
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 157745, 157750);

                            for (int
        i = 0
        ; (DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 157736, 158231) || true) && (i < n)
        ; DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 157759, 157762)
        , i++, DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 157736, 158231))

                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 157736, 158231);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 157866, 158208);

                                _ = f_10899_157870_158207(this, conversionOpt: null, conversionOperand: f_10899_157926_157953(expressionsNoConversions, i), Conversion.Identity, targetTypeWithNullability: inferredType, operandType: f_10899_158030_158044(resultTypes, i), checkConversion: true, fromExplicitCast: false, useLegacyWarnings: false, AssignmentKind.Assignment, reportRemainingWarnings: false);
                            }
                        }
                        catch (System.Exception)
                        {
                            DynAbs.Tracing.TraceSender.TraceExitLoopByException(10899, 1, 496);
                            throw;
                        }
                        finally
                        {
                            DynAbs.Tracing.TraceSender.TraceExitLoop(10899, 1, 496);
                        }
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 156620, 158738);
                    }

                    else

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 156620, 158738);
                        try
                        {
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 158486, 158491);
                            // We need to ensure that we're tracking the inferred type with nullability of any conversions that
                            // were stripped off.
                            for (int
        i = 0
        ; (DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 158477, 158719) || true) && (i < n)
        ; DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 158500, 158503)
        , i++, DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 158477, 158719))

                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 158477, 158719);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 158553, 158696);

                                f_10899_158553_158695(this, inferredType.ToTypeWithState(), f_10899_158632_158646(expressions, i) as BoundConversion, f_10899_158667_158694(expressionsNoConversions, i));
                            }
                        }
                        catch (System.Exception)
                        {
                            DynAbs.Tracing.TraceSender.TraceExitLoopByException(10899, 1, 243);
                            throw;
                        }
                        finally
                        {
                            DynAbs.Tracing.TraceSender.TraceExitLoop(10899, 1, 243);
                        }
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 156620, 158738);
                    }
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 158758, 158790);

                    f_10899_158758_158789(
                                    expressionsNoConversions);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 158808, 158827);

                    f_10899_158808_158826(conversions);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 158845, 158864);

                    f_10899_158845_158863(resultTypes);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 158884, 158936);

                    arrayType = f_10899_158896_158935(arrayType, inferredType);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 154521, 158951);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 158967, 158986);

                f_10899_158967_158985(
                            expressions);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 159000, 159080);

                f_10899_159000_159079(this, node, TypeWithState.Create(arrayType, NullableFlowState.NotNull));
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 159094, 159106);

                return null;
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 153418, 159117);

                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                f_10899_153534_153545(Microsoft.CodeAnalysis.CSharp.BoundArrayCreation
                this_param)
                {
                    var return_v = this_param.Bounds;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 153534, 153545);
                    return return_v;
                }


                int
                f_10899_153579_153596(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                node)
                {
                    this_param.VisitRvalue(node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 153579, 153596);
                    return 0;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                f_10899_153534_153545_I(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 153534, 153545);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundArrayInitialization?
                f_10899_153649_153668(Microsoft.CodeAnalysis.CSharp.BoundArrayCreation
                this_param)
                {
                    var return_v = this_param.InitializerOpt;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 153649, 153668);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                f_10899_153784_153793(Microsoft.CodeAnalysis.CSharp.BoundArrayCreation
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 153784, 153793);
                    return return_v;
                }


                int
                f_10899_153743_153822(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundArrayCreation
                expression, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                type)
                {
                    this_param.SetResultType((Microsoft.CodeAnalysis.CSharp.BoundExpression)expression, type);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 153743, 153822);
                    return 0;
                }


                int
                f_10899_153884_153923(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundArrayInitialization
                node)
                {
                    this_param.TakeIncrementalSnapshot((Microsoft.CodeAnalysis.CSharp.BoundNode)node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 153884, 153923);
                    return 0;
                }


                Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                f_10899_153956_154033(int
                capacity)
                {
                    var return_v = ArrayBuilder<BoundExpression>.GetInstance(capacity);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 153956, 154033);
                    return return_v;
                }


                int
                f_10899_154048_154093(Microsoft.CodeAnalysis.CSharp.BoundArrayInitialization
                node, Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                builder)
                {
                    GetArrayElements(node, builder);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 154048, 154093);
                    return 0;
                }


                int
                f_10899_154116_154133(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                this_param)
                {
                    var return_v = this_param.Count;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 154116, 154133);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.SyntaxKind
                f_10899_154316_154334(Microsoft.CodeAnalysis.SyntaxNode
                node)
                {
                    var return_v = node.Kind();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 154316, 154334);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                f_10899_154428_154437(Microsoft.CodeAnalysis.CSharp.BoundArrayCreation
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 154428, 154437);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                f_10899_154470_154506(Microsoft.CodeAnalysis.CSharp.Symbols.ArrayTypeSymbol
                this_param)
                {
                    var return_v = this_param.ElementTypeWithAnnotations;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 154470, 154506);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                f_10899_154648_154772(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                expr, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                targetTypeOpt, bool
                useLegacyWarnings, bool
                trackMembers, Microsoft.CodeAnalysis.CSharp.NullableWalker.AssignmentKind
                assignmentKind)
                {
                    var return_v = this_param.VisitOptionalImplicitConversion(expr, targetTypeOpt, useLegacyWarnings: useLegacyWarnings, trackMembers: trackMembers, assignmentKind);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 154648, 154772);
                    return return_v;
                }


                Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                f_10899_154591_154602_I(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 154591, 154602);
                    return return_v;
                }


                Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                f_10899_154889_154933(int
                capacity)
                {
                    var return_v = ArrayBuilder<BoundExpression>.GetInstance(capacity);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 154889, 154933);
                    return return_v;
                }


                Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Conversion>
                f_10899_154970_155009(int
                capacity)
                {
                    var return_v = ArrayBuilder<Conversion>.GetInstance(capacity);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 154970, 155009);
                    return return_v;
                }


                Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState>
                f_10899_155046_155088(int
                capacity)
                {
                    var return_v = ArrayBuilder<TypeWithState>.GetInstance(capacity);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 155046, 155088);
                    return return_v;
                }


                Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                f_10899_155132_155176(int
                capacity)
                {
                    var return_v = ArrayBuilder<BoundExpression>.GetInstance(capacity);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 155132, 155176);
                    return return_v;
                }


                (Microsoft.CodeAnalysis.CSharp.BoundExpression expression, Microsoft.CodeAnalysis.CSharp.Conversion conversion)
                f_10899_155415_155478(Microsoft.CodeAnalysis.CSharp.BoundExpression
                expr, bool
                includeExplicitConversions)
                {
                    var return_v = RemoveConversion(expr, includeExplicitConversions: includeExplicitConversions);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 155415, 155478);
                    return return_v;
                }


                int
                f_10899_155501_155553(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                item)
                {
                    this_param.Add(item);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 155501, 155553);
                    return 0;
                }


                int
                f_10899_155576_155603(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Conversion>
                this_param, Microsoft.CodeAnalysis.CSharp.Conversion
                item)
                {
                    this_param.Add(item);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 155576, 155603);
                    return 0;
                }


                int
                f_10899_155626_155698(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                conversionExpression, Microsoft.CodeAnalysis.CSharp.BoundExpression
                convertedNode)
                {
                    this_param.SnapshotWalkerThroughConversionGroup(conversionExpression, convertedNode);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 155626, 155698);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                f_10899_155738_155782(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                node)
                {
                    var return_v = this_param.VisitRvalueWithState(node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 155738, 155782);
                    return return_v;
                }


                int
                f_10899_155805_155832(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState>
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                item)
                {
                    this_param.Add(item);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 155805, 155832);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10899_155878_155977(Microsoft.CodeAnalysis.CSharp.BoundExpression
                expr, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                type)
                {
                    var return_v = CreatePlaceholderIfNecessary(expr, type);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 155878, 155977);
                    return return_v;
                }


                int
                f_10899_155855_155978(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                item)
                {
                    this_param.Add(item);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 155855, 155978);
                    return 0;
                }


                Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                f_10899_155222_155233_I(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 155222, 155233);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                f_10899_156037_156076(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                this_param)
                {
                    var return_v = this_param.ToImmutableAndFree();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 156037, 156076);
                    return return_v;
                }


                bool
                f_10899_156147_156162_M(bool
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 156147, 156162);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                f_10899_156288_156370(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                exprs, Microsoft.CodeAnalysis.CSharp.Conversions
                conversions, ref System.Collections.Generic.HashSet<Microsoft.CodeAnalysis.DiagnosticInfo>?
                useSiteDiagnostics)
                {
                    var return_v = BestTypeInferrer.InferBestType(exprs, (Microsoft.CodeAnalysis.CSharp.ConversionsBase)conversions, ref useSiteDiagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 156288, 156370);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10899_156928_156955(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                this_param, int
                i0)
                {
                    var return_v = this_param[i0];
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 156928, 156955);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10899_157025_157039(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                this_param, int
                i0)
                {
                    var return_v = this_param[i0];
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 157025, 157039);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundConversion?
                f_10899_156999_157064(Microsoft.CodeAnalysis.CSharp.BoundExpression
                conversionOpt, Microsoft.CodeAnalysis.CSharp.BoundExpression
                convertedNode)
                {
                    var return_v = GetConversionIfApplicable(conversionOpt, convertedNode);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 156999, 157064);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Conversion
                f_10899_157160_157174(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Conversion>
                this_param, int
                i0)
                {
                    var return_v = this_param[i0];
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 157160, 157174);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                f_10899_157190_157204(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState>
                this_param, int
                i0)
                {
                    var return_v = this_param[i0];
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 157190, 157204);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                f_10899_157108_157397(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundConversion?
                conversionOpt, Microsoft.CodeAnalysis.CSharp.BoundExpression
                conversionOperand, Microsoft.CodeAnalysis.CSharp.Conversion
                conversion, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                targetTypeWithNullability, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                operandType, bool
                checkConversion, bool
                fromExplicitCast, bool
                useLegacyWarnings, Microsoft.CodeAnalysis.CSharp.NullableWalker.AssignmentKind
                assignmentKind, bool
                reportRemainingWarnings, bool
                reportTopLevelWarnings)
                {
                    var return_v = this_param.VisitConversion(conversionOpt, conversionOperand, conversion, targetTypeWithNullability, operandType, checkConversion: checkConversion, fromExplicitCast: fromExplicitCast, useLegacyWarnings: useLegacyWarnings, assignmentKind, reportRemainingWarnings: reportRemainingWarnings, reportTopLevelWarnings: reportTopLevelWarnings);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 157108, 157397);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.NullableFlowState
                f_10899_157539_157585(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState>
                types)
                {
                    var return_v = BestTypeInferrer.GetNullableState(types);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 157539, 157585);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10899_157926_157953(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                this_param, int
                i0)
                {
                    var return_v = this_param[i0];
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 157926, 157953);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                f_10899_158030_158044(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState>
                this_param, int
                i0)
                {
                    var return_v = this_param[i0];
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 158030, 158044);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                f_10899_157870_158207(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundConversion?
                conversionOpt, Microsoft.CodeAnalysis.CSharp.BoundExpression
                conversionOperand, Microsoft.CodeAnalysis.CSharp.Conversion
                conversion, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                targetTypeWithNullability, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                operandType, bool
                checkConversion, bool
                fromExplicitCast, bool
                useLegacyWarnings, Microsoft.CodeAnalysis.CSharp.NullableWalker.AssignmentKind
                assignmentKind, bool
                reportRemainingWarnings)
                {
                    var return_v = this_param.VisitConversion(conversionOpt: conversionOpt, conversionOperand: conversionOperand, conversion, targetTypeWithNullability: targetTypeWithNullability, operandType: operandType, checkConversion: checkConversion, fromExplicitCast: fromExplicitCast, useLegacyWarnings: useLegacyWarnings, assignmentKind, reportRemainingWarnings: reportRemainingWarnings);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 157870, 158207);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10899_158632_158646(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                this_param, int
                i0)
                {
                    var return_v = this_param[i0];
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 158632, 158646);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10899_158667_158694(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                this_param, int
                i0)
                {
                    var return_v = this_param[i0];
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 158667, 158694);
                    return return_v;
                }


                int
                f_10899_158553_158695(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                resultType, Microsoft.CodeAnalysis.CSharp.BoundExpression
                conversionOpt, Microsoft.CodeAnalysis.CSharp.BoundExpression
                convertedNode)
                {
                    this_param.TrackAnalyzedNullabilityThroughConversionGroup(resultType, (Microsoft.CodeAnalysis.CSharp.BoundConversion?)conversionOpt, convertedNode);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 158553, 158695);
                    return 0;
                }


                int
                f_10899_158758_158789(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                this_param)
                {
                    this_param.Free();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 158758, 158789);
                    return 0;
                }


                int
                f_10899_158808_158826(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Conversion>
                this_param)
                {
                    this_param.Free();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 158808, 158826);
                    return 0;
                }


                int
                f_10899_158845_158863(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState>
                this_param)
                {
                    this_param.Free();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 158845, 158863);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.ArrayTypeSymbol
                f_10899_158896_158935(Microsoft.CodeAnalysis.CSharp.Symbols.ArrayTypeSymbol
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                elementTypeWithAnnotations)
                {
                    var return_v = this_param.WithElementType(elementTypeWithAnnotations);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 158896, 158935);
                    return return_v;
                }


                int
                f_10899_158967_158985(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                this_param)
                {
                    this_param.Free();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 158967, 158985);
                    return 0;
                }


                int
                f_10899_159000_159079(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundArrayCreation
                expression, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                type)
                {
                    this_param.SetResultType((Microsoft.CodeAnalysis.CSharp.BoundExpression)expression, type);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 159000, 159079);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 153418, 159117);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 153418, 159117);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        internal static TypeWithAnnotations BestTypeForLambdaReturns(
                    ArrayBuilder<(BoundExpression, TypeWithAnnotations)> returns,
                    Binder binder,
                    BoundNode node,
                    Conversions conversions)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterStaticMethod(10899, 159506, 162831);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 159762, 160567);

                var
                walker = f_10899_159775_160566(f_10899_159794_159812(binder), symbol: null, useConstructorExitWarnings: false, useDelegateInvokeParameterTypes: false, delegateInvokeMethodOpt: null, node, binder, conversions: conversions, variables: null, returnTypesOpt: null, analyzedNullabilityMapOpt: null, snapshotBuilderOpt: null)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 160583, 160605);

                int
                n = f_10899_160591_160604(returns)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 160619, 160686);

                var
                resultTypes = f_10899_160637_160685(n)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 160700, 160771);

                var
                placeholdersBuilder = f_10899_160726_160770(n)
                ;
                try
                {
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 160794, 160799);
                    for (int
        i = 0
        ; (DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 160785, 161044) || true) && (i < n)
        ; DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 160808, 160811)
        , i++, DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 160785, 161044))

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 160785, 161044);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 160845, 160887);

                        var (returnExpr, resultType) = f_10899_160876_160886(returns, i);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 160905, 160933);

                        f_10899_160905_160932(resultTypes, resultType);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 160951, 161029);

                        f_10899_160951_161028(placeholdersBuilder, f_10899_160975_161027(returnExpr, resultType));
                    }
                }
                catch (System.Exception)
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoopByException(10899, 1, 260);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoop(10899, 1, 260);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 161060, 161111);

                HashSet<DiagnosticInfo>?
                useSiteDiagnostics = null
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 161125, 161185);

                var
                placeholders = f_10899_161144_161184(placeholdersBuilder)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 161199, 161311);

                TypeSymbol
                bestType = f_10899_161221_161310(placeholders, walker._conversions, ref useSiteDiagnostics)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 161327, 161360);

                TypeWithAnnotations
                inferredType
                = default(TypeWithAnnotations);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 161374, 162721) || true) && ((object)bestType != null)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 161374, 162721);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 161510, 161585);

                    var
                    bestTypeWithObliviousAnnotation = TypeWithAnnotations.Create(bestType)
                    ;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 161603, 161694);

                    ConversionsBase
                    conversionsWithoutNullability = f_10899_161651_161693(walker._conversions, false)
                    ;
                    try
                    {
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 161721, 161726);
                        for (int
        i = 0
        ; (DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 161712, 162429) || true) && (i < n)
        ; DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 161735, 161738)
        , i++, DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 161712, 162429))

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 161712, 162429);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 161780, 161826);

                            BoundExpression
                            placeholder = placeholders[i]
                            ;
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 161848, 161982);

                            Conversion
                            conversion = f_10899_161872_161981(conversionsWithoutNullability, placeholder, bestType, ref useSiteDiagnostics)
                            ;
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 162004, 162410);

                            resultTypes[i] = f_10899_162021_162367(walker, conversionOpt: null, placeholder, conversion, bestTypeWithObliviousAnnotation, resultTypes[i].ToTypeWithState(), checkConversion: false, fromExplicitCast: false, useLegacyWarnings: false, AssignmentKind.Return, reportRemainingWarnings: false, reportTopLevelWarnings: false).ToTypeWithAnnotations(f_10899_162390_162408(binder));
                        }
                    }
                    catch (System.Exception)
                    {
                        DynAbs.Tracing.TraceSender.TraceExitLoopByException(10899, 1, 718);
                        throw;
                    }
                    finally
                    {
                        DynAbs.Tracing.TraceSender.TraceExitLoop(10899, 1, 718);
                    }
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 162512, 162617);

                    inferredType = TypeWithAnnotations.Create(bestType, f_10899_162564_162615(resultTypes));
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 161374, 162721);
                }

                else

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 161374, 162721);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 162683, 162706);

                    inferredType = default;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 161374, 162721);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 162737, 162756);

                f_10899_162737_162755(
                            resultTypes);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 162770, 162784);

                f_10899_162770_162783(walker);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 162800, 162820);

                return inferredType;
                DynAbs.Tracing.TraceSender.TraceExitStaticMethod(10899, 159506, 162831);

                Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                f_10899_159794_159812(Microsoft.CodeAnalysis.CSharp.Binder
                this_param)
                {
                    var return_v = this_param.Compilation;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 159794, 159812);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.NullableWalker
                f_10899_159775_160566(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                compilation, Microsoft.CodeAnalysis.CSharp.Symbol?
                symbol, bool
                useConstructorExitWarnings, bool
                useDelegateInvokeParameterTypes, Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol?
                delegateInvokeMethodOpt, Microsoft.CodeAnalysis.CSharp.BoundNode
                node, Microsoft.CodeAnalysis.CSharp.Binder
                binder, Microsoft.CodeAnalysis.CSharp.Conversions
                conversions, Microsoft.CodeAnalysis.CSharp.NullableWalker.Variables?
                variables, Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<(Microsoft.CodeAnalysis.CSharp.BoundReturnStatement, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations)>?
                returnTypesOpt, System.Collections.Immutable.ImmutableDictionary<Microsoft.CodeAnalysis.CSharp.BoundExpression, (Microsoft.CodeAnalysis.NullabilityInfo, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?)>.Builder?
                analyzedNullabilityMapOpt, Microsoft.CodeAnalysis.CSharp.NullableWalker.SnapshotManager.Builder?
                snapshotBuilderOpt)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.NullableWalker(compilation, symbol: symbol, useConstructorExitWarnings: useConstructorExitWarnings, useDelegateInvokeParameterTypes: useDelegateInvokeParameterTypes, delegateInvokeMethodOpt: delegateInvokeMethodOpt, node, binder, conversions: conversions, variables: variables, returnTypesOpt: returnTypesOpt, analyzedNullabilityMapOpt: analyzedNullabilityMapOpt, snapshotBuilderOpt: snapshotBuilderOpt);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 159775, 160566);
                    return return_v;
                }


                int
                f_10899_160591_160604(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<(Microsoft.CodeAnalysis.CSharp.BoundExpression, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations)>
                this_param)
                {
                    var return_v = this_param.Count;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 160591, 160604);
                    return return_v;
                }


                Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations>
                f_10899_160637_160685(int
                capacity)
                {
                    var return_v = ArrayBuilder<TypeWithAnnotations>.GetInstance(capacity);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 160637, 160685);
                    return return_v;
                }


                Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                f_10899_160726_160770(int
                capacity)
                {
                    var return_v = ArrayBuilder<BoundExpression>.GetInstance(capacity);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 160726, 160770);
                    return return_v;
                }


                (Microsoft.CodeAnalysis.CSharp.BoundExpression, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations)
                f_10899_160876_160886(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<(Microsoft.CodeAnalysis.CSharp.BoundExpression, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations)>
                this_param, int
                i0)
                {
                    var return_v = this_param[i0];
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 160876, 160886);
                    return return_v;
                }


                int
                f_10899_160905_160932(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations>
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                item)
                {
                    this_param.Add(item);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 160905, 160932);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10899_160975_161027(Microsoft.CodeAnalysis.CSharp.BoundExpression
                expr, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                type)
                {
                    var return_v = CreatePlaceholderIfNecessary(expr, type);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 160975, 161027);
                    return return_v;
                }


                int
                f_10899_160951_161028(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                item)
                {
                    this_param.Add(item);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 160951, 161028);
                    return 0;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                f_10899_161144_161184(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                this_param)
                {
                    var return_v = this_param.ToImmutableAndFree();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 161144, 161184);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                f_10899_161221_161310(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                exprs, Microsoft.CodeAnalysis.CSharp.Conversions
                conversions, ref System.Collections.Generic.HashSet<Microsoft.CodeAnalysis.DiagnosticInfo>?
                useSiteDiagnostics)
                {
                    var return_v = BestTypeInferrer.InferBestType(exprs, (Microsoft.CodeAnalysis.CSharp.ConversionsBase)conversions, ref useSiteDiagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 161221, 161310);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.ConversionsBase
                f_10899_161651_161693(Microsoft.CodeAnalysis.CSharp.Conversions
                this_param, bool
                includeNullability)
                {
                    var return_v = this_param.WithNullability(includeNullability);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 161651, 161693);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Conversion
                f_10899_161872_161981(Microsoft.CodeAnalysis.CSharp.ConversionsBase
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                sourceExpression, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                destination, ref System.Collections.Generic.HashSet<Microsoft.CodeAnalysis.DiagnosticInfo>
                useSiteDiagnostics)
                {
                    var return_v = this_param.ClassifyConversionFromExpression(sourceExpression, destination, ref useSiteDiagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 161872, 161981);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                f_10899_162021_162367(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundConversion?
                conversionOpt, Microsoft.CodeAnalysis.CSharp.BoundExpression
                conversionOperand, Microsoft.CodeAnalysis.CSharp.Conversion
                conversion, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                targetTypeWithNullability, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                operandType, bool
                checkConversion, bool
                fromExplicitCast, bool
                useLegacyWarnings, Microsoft.CodeAnalysis.CSharp.NullableWalker.AssignmentKind
                assignmentKind, bool
                reportRemainingWarnings, bool
                reportTopLevelWarnings)
                {
                    var return_v = this_param.VisitConversion(conversionOpt: conversionOpt, conversionOperand, conversion, targetTypeWithNullability, operandType, checkConversion: checkConversion, fromExplicitCast: fromExplicitCast, useLegacyWarnings: useLegacyWarnings, assignmentKind, reportRemainingWarnings: reportRemainingWarnings, reportTopLevelWarnings: reportTopLevelWarnings);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 162021, 162367);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                f_10899_162390_162408(Microsoft.CodeAnalysis.CSharp.Binder
                this_param)
                {
                    var return_v = this_param.Compilation;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 162390, 162408);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.NullableAnnotation
                f_10899_162564_162615(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations>
                types)
                {
                    var return_v = BestTypeInferrer.GetNullableAnnotation(types);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 162564, 162615);
                    return return_v;
                }


                int
                f_10899_162737_162755(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations>
                this_param)
                {
                    this_param.Free();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 162737, 162755);
                    return 0;
                }


                int
                f_10899_162770_162783(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param)
                {
                    this_param.Free();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 162770, 162783);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 159506, 162831);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 159506, 162831);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private static void GetArrayElements(BoundArrayInitialization node, ArrayBuilder<BoundExpression> builder)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterStaticMethod(10899, 162843, 163341);
                try
                {
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 162974, 163330);
                    foreach (var child in f_10899_162996_163013_I(f_10899_162996_163013(node)))
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 162974, 163330);

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 163047, 163315) || true) && (f_10899_163051_163061(child) == BoundKind.ArrayInitialization)
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 163047, 163315);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 163136, 163195);

                            f_10899_163136_163194(child, builder);
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 163047, 163315);
                        }

                        else

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 163047, 163315);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 163277, 163296);

                            f_10899_163277_163295(builder, child);
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 163047, 163315);
                        }
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 162974, 163330);
                    }
                }
                catch (System.Exception)
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoopByException(10899, 1, 357);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoop(10899, 1, 357);
                }
                DynAbs.Tracing.TraceSender.TraceExitStaticMethod(10899, 162843, 163341);

                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                f_10899_162996_163013(Microsoft.CodeAnalysis.CSharp.BoundArrayInitialization
                this_param)
                {
                    var return_v = this_param.Initializers;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 162996, 163013);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundKind
                f_10899_163051_163061(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.Kind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 163051, 163061);
                    return return_v;
                }


                int
                f_10899_163136_163194(Microsoft.CodeAnalysis.CSharp.BoundExpression
                node, Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                builder)
                {
                    GetArrayElements((Microsoft.CodeAnalysis.CSharp.BoundArrayInitialization)node, builder);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 163136, 163194);
                    return 0;
                }


                int
                f_10899_163277_163295(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                item)
                {
                    this_param.Add(item);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 163277, 163295);
                    return 0;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                f_10899_162996_163013_I(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 162996, 163013);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 162843, 163341);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 162843, 163341);
            }
        }

        public override BoundNode? VisitArrayAccess(BoundArrayAccess node)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 163353, 164580);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 163444, 163478);

                f_10899_163444_163477(!IsConditionalState);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 163494, 163517);

                f_10899_163494_163516(this, f_10899_163500_163515(node));
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 163533, 163567);

                f_10899_163533_163566(!IsConditionalState);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 163581, 163630);

                f_10899_163581_163629(f_10899_163594_163628_M(!f_10899_163595_163610(node).Type!.IsValueType));
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 163824, 163871);

                _ = f_10899_163828_163870(this, f_10899_163854_163869(node));
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 163887, 163933);

                var
                type = f_10899_163898_163908().Type as ArrayTypeSymbol
                ;
                try
                {
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 163949, 164043);
                    foreach (var i in f_10899_163967_163979_I(f_10899_163967_163979(node)))
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 163949, 164043);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 164013, 164028);

                        f_10899_164013_164027(this, i);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 163949, 164043);
                    }
                }
                catch (System.Exception)
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoopByException(10899, 1, 95);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoop(10899, 1, 95);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 164059, 164086);

                TypeWithAnnotations
                result
                = default(TypeWithAnnotations);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 164100, 164493) || true) && (node.Indices.Length == 1 && (DynAbs.Tracing.TraceSender.Expression_True(10899, 164104, 164283) && f_10899_164149_164283(f_10899_164167_164187(f_10899_164167_164179(node)[0]), f_10899_164189_164245(compilation, WellKnownType.System_Range), TypeCompareKind.ConsiderEverything2)))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 164100, 164493);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 164317, 164359);

                    result = TypeWithAnnotations.Create(type);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 164100, 164493);
                }

                else

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 164100, 164493);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 164425, 164478);

                    result = f_10899_164434_164466_M(DynAbs.Tracing.TraceSender.TraceConditionalAccessExpression(type, 10899, 164434, 164466)?.ElementTypeWithAnnotations) ?? (DynAbs.Tracing.TraceSender.Expression_Null<Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations?>(10899, 164434, 164477) ?? default);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 164100, 164493);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 164507, 164541);

                f_10899_164507_164540(this, node, result);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 164557, 164569);

                return null;
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 163353, 164580);

                int
                f_10899_163444_163477(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 163444, 163477);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10899_163500_163515(Microsoft.CodeAnalysis.CSharp.BoundArrayAccess
                this_param)
                {
                    var return_v = this_param.Expression;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 163500, 163515);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundNode?
                f_10899_163494_163516(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                node)
                {
                    var return_v = this_param.Visit((Microsoft.CodeAnalysis.CSharp.BoundNode)node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 163494, 163516);
                    return return_v;
                }


                int
                f_10899_163533_163566(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 163533, 163566);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10899_163595_163610(Microsoft.CodeAnalysis.CSharp.BoundArrayAccess
                this_param)
                {
                    var return_v = this_param.Expression;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 163595, 163610);
                    return return_v;
                }


                bool
                f_10899_163594_163628_M(bool
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 163594, 163628);
                    return return_v;
                }


                int
                f_10899_163581_163629(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 163581, 163629);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10899_163854_163869(Microsoft.CodeAnalysis.CSharp.BoundArrayAccess
                this_param)
                {
                    var return_v = this_param.Expression;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 163854, 163869);
                    return return_v;
                }


                bool
                f_10899_163828_163870(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                receiverOpt)
                {
                    var return_v = this_param.CheckPossibleNullReceiver(receiverOpt);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 163828, 163870);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                f_10899_163898_163908()
                {
                    var return_v = ResultType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 163898, 163908);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                f_10899_163967_163979(Microsoft.CodeAnalysis.CSharp.BoundArrayAccess
                this_param)
                {
                    var return_v = this_param.Indices;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 163967, 163979);
                    return return_v;
                }


                int
                f_10899_164013_164027(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                node)
                {
                    this_param.VisitRvalue(node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 164013, 164027);
                    return 0;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                f_10899_163967_163979_I(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 163967, 163979);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                f_10899_164167_164179(Microsoft.CodeAnalysis.CSharp.BoundArrayAccess
                this_param)
                {
                    var return_v = this_param.Indices;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 164167, 164179);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?
                f_10899_164167_164187(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 164167, 164187);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                f_10899_164189_164245(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param, Microsoft.CodeAnalysis.WellKnownType
                type)
                {
                    var return_v = this_param.GetWellKnownType(type);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 164189, 164245);
                    return return_v;
                }


                bool
                f_10899_164149_164283(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?
                left, Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                right, Microsoft.CodeAnalysis.TypeCompareKind
                comparison)
                {
                    var return_v = TypeSymbol.Equals(left, (Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol)right, comparison);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 164149, 164283);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations?
                f_10899_164434_164466_M(Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations?
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 164434, 164466);
                    return return_v;
                }


                int
                f_10899_164507_164540(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundArrayAccess
                expression, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                type)
                {
                    this_param.SetLvalueResultType((Microsoft.CodeAnalysis.CSharp.BoundExpression)expression, type);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 164507, 164540);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 163353, 164580);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 163353, 164580);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private TypeWithState InferResultNullability(BinaryOperatorKind operatorKind, MethodSymbol? methodOpt, TypeSymbol resultType, TypeWithState leftType, TypeWithState rightType)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 164592, 166788);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 164791, 164849);

                NullableFlowState
                resultState = NullableFlowState.NotNull
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 164863, 166533) || true) && (f_10899_164867_164895(operatorKind))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 164863, 166533);

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 164929, 165791) || true) && (f_10899_164933_164958_M(DynAbs.Tracing.TraceSender.TraceConditionalAccessExpression(methodOpt, 10899, 164933, 164958)?.ParameterCount) == 2)
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 164929, 165791);

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 165005, 165239) || true) && (f_10899_165009_165032(operatorKind) && (DynAbs.Tracing.TraceSender.Expression_True(10899, 165009, 165064) && !f_10899_165037_165064(operatorKind)))
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 165005, 165239);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 165114, 165216);

                            return f_10899_165121_165215(this, f_10899_165141_165176(methodOpt), f_10899_165178_165214(leftType.State, rightType.State));
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 165005, 165239);
                        }
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 165263, 165323);

                        var
                        resultTypeWithState = f_10899_165289_165322(this, methodOpt)
                        ;

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 165345, 165721) || true) && ((leftType.IsNotNull && (DynAbs.Tracing.TraceSender.Expression_True(10899, 165350, 165452) && f_10899_165372_165452(f_10899_165372_165413(methodOpt), f_10899_165423_165451(f_10899_165423_165443(methodOpt)[0])))) || (DynAbs.Tracing.TraceSender.Expression_False(10899, 165349, 165587) || (rightType.IsNotNull && (DynAbs.Tracing.TraceSender.Expression_True(10899, 165483, 165586) && f_10899_165506_165586(f_10899_165506_165547(methodOpt), f_10899_165557_165585(f_10899_165557_165577(methodOpt)[1]))))))
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 165345, 165721);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 165637, 165698);

                            resultTypeWithState = resultTypeWithState.WithNotNullState();
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 165345, 165721);
                        }
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 165745, 165772);

                        return resultTypeWithState;
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 164929, 165791);
                    }
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 164863, 166533);
                }

                else
                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 164863, 166533);

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 165825, 166533) || true) && (!f_10899_165830_165854(operatorKind) && (DynAbs.Tracing.TraceSender.Expression_True(10899, 165829, 165881) && f_10899_165858_165881_M(!resultType.IsValueType)))
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 165825, 166533);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 165915, 166518);

                        switch (f_10899_165923_165946(operatorKind) | f_10899_165949_165976(operatorKind))
                        {

                            case BinaryOperatorKind.DelegateCombination:
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 165915, 166518);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 166088, 166139);

                                resultState = f_10899_166102_166138(leftType.State, rightType.State);
                                DynAbs.Tracing.TraceSender.TraceBreak(10899, 166165, 166171);

                                break;
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 165915, 166518);

                            case BinaryOperatorKind.DelegateRemoval:
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 165915, 166518);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 166259, 166301);

                                resultState = NullableFlowState.MaybeNull;
                                DynAbs.Tracing.TraceSender.TraceBreak(10899, 166365, 166371);

                                break;
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 165915, 166518);

                            default:
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 165915, 166518);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 166427, 166467);

                                resultState = NullableFlowState.NotNull;
                                DynAbs.Tracing.TraceSender.TraceBreak(10899, 166493, 166499);

                                break;
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 165915, 166518);
                        }
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 165825, 166533);
                    }
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 164863, 166533);
                }

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 166549, 166708) || true) && (f_10899_166553_166576(operatorKind) && (DynAbs.Tracing.TraceSender.Expression_True(10899, 166553, 166608) && !f_10899_166581_166608(operatorKind)))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 166549, 166708);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 166642, 166693);

                    resultState = f_10899_166656_166692(leftType.State, rightType.State);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 166549, 166708);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 166724, 166777);

                return TypeWithState.Create(resultType, resultState);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 164592, 166788);

                bool
                f_10899_164867_164895(Microsoft.CodeAnalysis.CSharp.BinaryOperatorKind
                kind)
                {
                    var return_v = kind.IsUserDefined();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 164867, 164895);
                    return return_v;
                }


                int?
                f_10899_164933_164958_M(int?
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 164933, 164958);
                    return return_v;
                }


                bool
                f_10899_165009_165032(Microsoft.CodeAnalysis.CSharp.BinaryOperatorKind
                kind)
                {
                    var return_v = kind.IsLifted();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 165009, 165032);
                    return return_v;
                }


                bool
                f_10899_165037_165064(Microsoft.CodeAnalysis.CSharp.BinaryOperatorKind
                kind)
                {
                    var return_v = kind.IsComparison();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 165037, 165064);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                f_10899_165141_165176(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                this_param)
                {
                    var return_v = this_param.ReturnTypeWithAnnotations;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 165141, 165176);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.NullableFlowState
                f_10899_165178_165214(Microsoft.CodeAnalysis.CSharp.NullableFlowState
                a, Microsoft.CodeAnalysis.CSharp.NullableFlowState
                b)
                {
                    var return_v = a.Join(b);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 165178, 165214);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                f_10899_165121_165215(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                returnType, Microsoft.CodeAnalysis.CSharp.NullableFlowState
                operandState)
                {
                    var return_v = this_param.GetLiftedReturnType(returnType, operandState);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 165121, 165215);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                f_10899_165289_165322(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                method)
                {
                    var return_v = this_param.GetReturnTypeWithState(method);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 165289, 165322);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableHashSet<string>
                f_10899_165372_165413(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                this_param)
                {
                    var return_v = this_param.ReturnNotNullIfParameterNotNull;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 165372, 165413);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol>
                f_10899_165423_165443(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                this_param)
                {
                    var return_v = this_param.Parameters;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 165423, 165443);
                    return return_v;
                }


                string
                f_10899_165423_165451(Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol
                this_param)
                {
                    var return_v = this_param.Name;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 165423, 165451);
                    return return_v;
                }


                bool
                f_10899_165372_165452(System.Collections.Immutable.ImmutableHashSet<string>
                this_param, string
                item)
                {
                    var return_v = this_param.Contains(item);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 165372, 165452);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableHashSet<string>
                f_10899_165506_165547(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                this_param)
                {
                    var return_v = this_param.ReturnNotNullIfParameterNotNull;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 165506, 165547);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol>
                f_10899_165557_165577(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                this_param)
                {
                    var return_v = this_param.Parameters;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 165557, 165577);
                    return return_v;
                }


                string
                f_10899_165557_165585(Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol
                this_param)
                {
                    var return_v = this_param.Name;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 165557, 165585);
                    return return_v;
                }


                bool
                f_10899_165506_165586(System.Collections.Immutable.ImmutableHashSet<string>
                this_param, string
                item)
                {
                    var return_v = this_param.Contains(item);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 165506, 165586);
                    return return_v;
                }


                bool
                f_10899_165830_165854(Microsoft.CodeAnalysis.CSharp.BinaryOperatorKind
                kind)
                {
                    var return_v = kind.IsDynamic();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 165830, 165854);
                    return return_v;
                }


                bool
                f_10899_165858_165881_M(bool
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 165858, 165881);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BinaryOperatorKind
                f_10899_165923_165946(Microsoft.CodeAnalysis.CSharp.BinaryOperatorKind
                kind)
                {
                    var return_v = kind.Operator();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 165923, 165946);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BinaryOperatorKind
                f_10899_165949_165976(Microsoft.CodeAnalysis.CSharp.BinaryOperatorKind
                kind)
                {
                    var return_v = kind.OperandTypes();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 165949, 165976);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.NullableFlowState
                f_10899_166102_166138(Microsoft.CodeAnalysis.CSharp.NullableFlowState
                a, Microsoft.CodeAnalysis.CSharp.NullableFlowState
                b)
                {
                    var return_v = a.Meet(b);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 166102, 166138);
                    return return_v;
                }


                bool
                f_10899_166553_166576(Microsoft.CodeAnalysis.CSharp.BinaryOperatorKind
                kind)
                {
                    var return_v = kind.IsLifted();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 166553, 166576);
                    return return_v;
                }


                bool
                f_10899_166581_166608(Microsoft.CodeAnalysis.CSharp.BinaryOperatorKind
                kind)
                {
                    var return_v = kind.IsComparison();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 166581, 166608);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.NullableFlowState
                f_10899_166656_166692(Microsoft.CodeAnalysis.CSharp.NullableFlowState
                a, Microsoft.CodeAnalysis.CSharp.NullableFlowState
                b)
                {
                    var return_v = a.Join(b);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 166656, 166692);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 164592, 166788);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 164592, 166788);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        protected override void VisitBinaryOperatorChildren(ArrayBuilder<BoundBinaryOperator> stack)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 166800, 170010);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 166917, 166942);

                var
                binary = f_10899_166930_166941(stack)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 166958, 167059);

                var (leftOperand, leftConversion) = f_10899_166994_167058(f_10899_167011_167022(binary), includeExplicitConversions: false);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 167073, 167092);

                f_10899_167073_167091(this, leftOperand);
                try
                {
                    while ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 167108, 167700) || true) && (true)
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 167108, 167700);

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 167153, 167443) || true) && (!f_10899_167158_167188())
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 167153, 167443);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 167230, 167240);

                            f_10899_167230_167239(this);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 167287, 167314);

                            f_10899_167287_167313(this, leftOperand);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 167358, 167424);

                            f_10899_167358_167423(this, leftOperand, leftConversion, binary);
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 167153, 167443);
                        }

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 167463, 167550) || true) && (f_10899_167467_167478(stack) == 0)
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 167463, 167550);
                            DynAbs.Tracing.TraceSender.TraceBreak(10899, 167525, 167531);

                            break;
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 167463, 167550);
                        }
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 167570, 167591);

                        leftOperand = binary;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 167609, 167646);

                        leftConversion = Conversion.Identity;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 167664, 167685);

                        binary = f_10899_167673_167684(stack);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 167108, 167700);
                    }
                }
                catch (System.Exception)
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoopByException(10899, 167108, 167700);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoop(10899, 167108, 167700);
                }
                bool learnFromBooleanConstantTest()
                {
                    try
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 167763, 169999);

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 167831, 167928) || true) && (!IsConditionalState)
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 167831, 167928);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 167896, 167909);

                            return false;
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 167831, 167928);
                        }

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 167948, 168052) || true) && (f_10899_167952_167978_M(!leftConversion.IsIdentity))
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 167948, 168052);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 168020, 168033);

                            return false;
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 167948, 168052);
                        }
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 168072, 168127);

                        BinaryOperatorKind
                        op = f_10899_168096_168126(f_10899_168096_168115(binary))
                        ;

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 168145, 168290) || true) && (op != BinaryOperatorKind.Equal && (DynAbs.Tracing.TraceSender.Expression_True(10899, 168149, 168216) && op != BinaryOperatorKind.NotEqual))
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 168145, 168290);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 168258, 168271);

                            return false;
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 168145, 168290);
                        }
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 168310, 168323);

                        bool
                        isSense
                        = default(bool);

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 168341, 169538) || true) && (f_10899_168345_168382_M(DynAbs.Tracing.TraceSender.TraceConditionalAccessExpression(f_10899_168345_168371(f_10899_168345_168357(binary)), 10899, 168345, 168382)?.IsBoolean) == true)
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 168341, 169538);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 168432, 168459);

                            f_10899_168432_168458(this, leftOperand);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 168513, 168560);

                            var
                            stateWhenTrue = this.StateWhenTrue.Clone()
                            ;
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 168582, 168631);

                            var
                            stateWhenFalse = this.StateWhenFalse.Clone()
                            ;
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 168655, 168665);

                            f_10899_168655_168664(this);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 168687, 168707);

                            f_10899_168687_168706(this, f_10899_168693_168705(binary));
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 168729, 168757);

                            f_10899_168729_168756(this, f_10899_168743_168755(binary));
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 168812, 168863);

                            f_10899_168812_168862(this, stateWhenTrue, stateWhenFalse);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 168885, 168971);

                            isSense = (op == BinaryOperatorKind.Equal) == f_10899_168931_168970(f_10899_168931_168957(f_10899_168931_168943(binary)));
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 168341, 169538);
                        }

                        else
                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 168341, 169538);

                            if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 169013, 169538) || true) && (f_10899_169017_169053_M(DynAbs.Tracing.TraceSender.TraceConditionalAccessExpression(f_10899_169017_169042(f_10899_169017_169028(binary)), 10899, 169017, 169053)?.IsBoolean) == true)
                            )

                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 169013, 169538);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 169103, 169113);

                                f_10899_169103_169112(this);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 169135, 169162);

                                f_10899_169135_169161(this, leftOperand);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 169216, 169236);

                                f_10899_169216_169235(this, f_10899_169222_169234(binary));
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 169258, 169286);

                                f_10899_169258_169285(this, f_10899_169272_169284(binary));
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 169339, 169424);

                                isSense = (op == BinaryOperatorKind.Equal) == f_10899_169385_169423(f_10899_169385_169410(f_10899_169385_169396(binary)));
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 169013, 169538);
                            }

                            else

                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 169013, 169538);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 169506, 169519);

                                return false;
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 169013, 169538);
                            }
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 168341, 169538);
                        }

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 169558, 169704) || true) && (!isSense && (DynAbs.Tracing.TraceSender.Expression_True(10899, 169562, 169592) && IsConditionalState))
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 169558, 169704);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 169634, 169685);

                            f_10899_169634_169684(this, StateWhenFalse, StateWhenTrue);
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 169558, 169704);
                        }
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 169773, 169841);

                        f_10899_169773_169840(f_10899_169786_169809(f_10899_169786_169797(binary)) == SpecialType.System_Boolean);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 169859, 169954);

                        f_10899_169859_169953(this, binary, TypeWithState.ForType(f_10899_169899_169910(binary)), TypeWithAnnotations.Create(f_10899_169940_169951(binary)));
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 169972, 169984);

                        return true;
                        DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 167763, 169999);

                        bool
                        f_10899_167952_167978_M(bool
                        i)
                        {
                            var return_v = i;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 167952, 167978);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.CSharp.BinaryOperatorKind
                        f_10899_168096_168115(Microsoft.CodeAnalysis.CSharp.BoundBinaryOperator
                        this_param)
                        {
                            var return_v = this_param.OperatorKind;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 168096, 168115);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.CSharp.BinaryOperatorKind
                        f_10899_168096_168126(Microsoft.CodeAnalysis.CSharp.BinaryOperatorKind
                        kind)
                        {
                            var return_v = kind.Operator();
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 168096, 168126);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.CSharp.BoundExpression
                        f_10899_168345_168357(Microsoft.CodeAnalysis.CSharp.BoundBinaryOperator
                        this_param)
                        {
                            var return_v = this_param.Right;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 168345, 168357);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.ConstantValue?
                        f_10899_168345_168371(Microsoft.CodeAnalysis.CSharp.BoundExpression
                        this_param)
                        {
                            var return_v = this_param.ConstantValue;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 168345, 168371);
                            return return_v;
                        }


                        bool?
                        f_10899_168345_168382_M(bool?
                        i)
                        {
                            var return_v = i;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 168345, 168382);
                            return return_v;
                        }


                        int
                        f_10899_168432_168458(Microsoft.CodeAnalysis.CSharp.NullableWalker
                        this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                        expression)
                        {
                            this_param.UseRvalueOnly(expression);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 168432, 168458);
                            return 0;
                        }


                        int
                        f_10899_168655_168664(Microsoft.CodeAnalysis.CSharp.NullableWalker
                        this_param)
                        {
                            this_param.Unsplit();
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 168655, 168664);
                            return 0;
                        }


                        Microsoft.CodeAnalysis.CSharp.BoundExpression
                        f_10899_168693_168705(Microsoft.CodeAnalysis.CSharp.BoundBinaryOperator
                        this_param)
                        {
                            var return_v = this_param.Right;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 168693, 168705);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.CSharp.BoundNode?
                        f_10899_168687_168706(Microsoft.CodeAnalysis.CSharp.NullableWalker
                        this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                        node)
                        {
                            var return_v = this_param.Visit((Microsoft.CodeAnalysis.CSharp.BoundNode)node);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 168687, 168706);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.CSharp.BoundExpression
                        f_10899_168743_168755(Microsoft.CodeAnalysis.CSharp.BoundBinaryOperator
                        this_param)
                        {
                            var return_v = this_param.Right;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 168743, 168755);
                            return return_v;
                        }


                        int
                        f_10899_168729_168756(Microsoft.CodeAnalysis.CSharp.NullableWalker
                        this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                        expression)
                        {
                            this_param.UseRvalueOnly(expression);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 168729, 168756);
                            return 0;
                        }


                        int
                        f_10899_168812_168862(Microsoft.CodeAnalysis.CSharp.NullableWalker
                        this_param, Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState
                        whenTrue, Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState
                        whenFalse)
                        {
                            this_param.SetConditionalState(whenTrue, whenFalse);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 168812, 168862);
                            return 0;
                        }


                        Microsoft.CodeAnalysis.CSharp.BoundExpression
                        f_10899_168931_168943(Microsoft.CodeAnalysis.CSharp.BoundBinaryOperator
                        this_param)
                        {
                            var return_v = this_param.Right;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 168931, 168943);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.ConstantValue
                        f_10899_168931_168957(Microsoft.CodeAnalysis.CSharp.BoundExpression
                        this_param)
                        {
                            var return_v = this_param.ConstantValue;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 168931, 168957);
                            return return_v;
                        }


                        bool
                        f_10899_168931_168970(Microsoft.CodeAnalysis.ConstantValue
                        this_param)
                        {
                            var return_v = this_param.BooleanValue;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 168931, 168970);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.CSharp.BoundExpression
                        f_10899_169017_169028(Microsoft.CodeAnalysis.CSharp.BoundBinaryOperator
                        this_param)
                        {
                            var return_v = this_param.Left;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 169017, 169028);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.ConstantValue?
                        f_10899_169017_169042(Microsoft.CodeAnalysis.CSharp.BoundExpression
                        this_param)
                        {
                            var return_v = this_param.ConstantValue;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 169017, 169042);
                            return return_v;
                        }


                        bool?
                        f_10899_169017_169053_M(bool?
                        i)
                        {
                            var return_v = i;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 169017, 169053);
                            return return_v;
                        }


                        int
                        f_10899_169103_169112(Microsoft.CodeAnalysis.CSharp.NullableWalker
                        this_param)
                        {
                            this_param.Unsplit();
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 169103, 169112);
                            return 0;
                        }


                        int
                        f_10899_169135_169161(Microsoft.CodeAnalysis.CSharp.NullableWalker
                        this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                        expression)
                        {
                            this_param.UseRvalueOnly(expression);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 169135, 169161);
                            return 0;
                        }


                        Microsoft.CodeAnalysis.CSharp.BoundExpression
                        f_10899_169222_169234(Microsoft.CodeAnalysis.CSharp.BoundBinaryOperator
                        this_param)
                        {
                            var return_v = this_param.Right;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 169222, 169234);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.CSharp.BoundNode?
                        f_10899_169216_169235(Microsoft.CodeAnalysis.CSharp.NullableWalker
                        this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                        node)
                        {
                            var return_v = this_param.Visit((Microsoft.CodeAnalysis.CSharp.BoundNode)node);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 169216, 169235);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.CSharp.BoundExpression
                        f_10899_169272_169284(Microsoft.CodeAnalysis.CSharp.BoundBinaryOperator
                        this_param)
                        {
                            var return_v = this_param.Right;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 169272, 169284);
                            return return_v;
                        }


                        int
                        f_10899_169258_169285(Microsoft.CodeAnalysis.CSharp.NullableWalker
                        this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                        expression)
                        {
                            this_param.UseRvalueOnly(expression);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 169258, 169285);
                            return 0;
                        }


                        Microsoft.CodeAnalysis.CSharp.BoundExpression
                        f_10899_169385_169396(Microsoft.CodeAnalysis.CSharp.BoundBinaryOperator
                        this_param)
                        {
                            var return_v = this_param.Left;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 169385, 169396);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.ConstantValue
                        f_10899_169385_169410(Microsoft.CodeAnalysis.CSharp.BoundExpression
                        this_param)
                        {
                            var return_v = this_param.ConstantValue;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 169385, 169410);
                            return return_v;
                        }


                        bool
                        f_10899_169385_169423(Microsoft.CodeAnalysis.ConstantValue
                        this_param)
                        {
                            var return_v = this_param.BooleanValue;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 169385, 169423);
                            return return_v;
                        }


                        int
                        f_10899_169634_169684(Microsoft.CodeAnalysis.CSharp.NullableWalker
                        this_param, Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState
                        whenTrue, Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState
                        whenFalse)
                        {
                            this_param.SetConditionalState(whenTrue, whenFalse);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 169634, 169684);
                            return 0;
                        }


                        Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                        f_10899_169786_169797(Microsoft.CodeAnalysis.CSharp.BoundBinaryOperator
                        this_param)
                        {
                            var return_v = this_param.Type;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 169786, 169797);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.SpecialType
                        f_10899_169786_169809(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                        this_param)
                        {
                            var return_v = this_param.SpecialType;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 169786, 169809);
                            return return_v;
                        }


                        int
                        f_10899_169773_169840(bool
                        condition)
                        {
                            Debug.Assert(condition);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 169773, 169840);
                            return 0;
                        }


                        Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                        f_10899_169899_169910(Microsoft.CodeAnalysis.CSharp.BoundBinaryOperator
                        this_param)
                        {
                            var return_v = this_param.Type;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 169899, 169910);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                        f_10899_169940_169951(Microsoft.CodeAnalysis.CSharp.BoundBinaryOperator
                        this_param)
                        {
                            var return_v = this_param.Type;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 169940, 169951);
                            return return_v;
                        }


                        int
                        f_10899_169859_169953(Microsoft.CodeAnalysis.CSharp.NullableWalker
                        this_param, Microsoft.CodeAnalysis.CSharp.BoundBinaryOperator
                        expression, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                        resultType, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                        lvalueType)
                        {
                            this_param.SetResult((Microsoft.CodeAnalysis.CSharp.BoundExpression)expression, resultType, lvalueType);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 169859, 169953);
                            return 0;
                        }

                    }
                    catch
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 167763, 169999);
                        throw;
                    }
                    finally
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 167763, 169999);
                    }
                    throw new System.Exception("Slicer error: unreachable code");
                }
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 166800, 170010);

                Microsoft.CodeAnalysis.CSharp.BoundBinaryOperator
                f_10899_166930_166941(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.BoundBinaryOperator>
                builder)
                {
                    var return_v = builder.Pop<Microsoft.CodeAnalysis.CSharp.BoundBinaryOperator>();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 166930, 166941);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10899_167011_167022(Microsoft.CodeAnalysis.CSharp.BoundBinaryOperator
                this_param)
                {
                    var return_v = this_param.Left;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 167011, 167022);
                    return return_v;
                }


                (Microsoft.CodeAnalysis.CSharp.BoundExpression expression, Microsoft.CodeAnalysis.CSharp.Conversion conversion)
                f_10899_166994_167058(Microsoft.CodeAnalysis.CSharp.BoundExpression
                expr, bool
                includeExplicitConversions)
                {
                    var return_v = RemoveConversion(expr, includeExplicitConversions: includeExplicitConversions);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 166994, 167058);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundNode?
                f_10899_167073_167091(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                node)
                {
                    var return_v = this_param.Visit((Microsoft.CodeAnalysis.CSharp.BoundNode)node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 167073, 167091);
                    return return_v;
                }


                bool
                f_10899_167158_167188()
                {
                    var return_v = learnFromBooleanConstantTest();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 167158, 167188);
                    return return_v;
                }


                int
                f_10899_167230_167239(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param)
                {
                    this_param.Unsplit();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 167230, 167239);
                    return 0;
                }


                int
                f_10899_167287_167313(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                expression)
                {
                    this_param.UseRvalueOnly(expression);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 167287, 167313);
                    return 0;
                }


                int
                f_10899_167358_167423(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                leftOperand, Microsoft.CodeAnalysis.CSharp.Conversion
                leftConversion, Microsoft.CodeAnalysis.CSharp.BoundBinaryOperator
                binary)
                {
                    this_param.AfterLeftChildHasBeenVisited(leftOperand, leftConversion, binary);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 167358, 167423);
                    return 0;
                }


                int
                f_10899_167467_167478(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.BoundBinaryOperator>
                this_param)
                {
                    var return_v = this_param.Count;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 167467, 167478);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundBinaryOperator
                f_10899_167673_167684(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.BoundBinaryOperator>
                builder)
                {
                    var return_v = builder.Pop<Microsoft.CodeAnalysis.CSharp.BoundBinaryOperator>();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 167673, 167684);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 166800, 170010);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 166800, 170010);
            }
        }

        private void AfterLeftChildHasBeenVisited(BoundExpression leftOperand, Conversion leftConversion, BoundBinaryOperator binary)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 170022, 179162);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 170172, 170206);

                f_10899_170172_170205(!IsConditionalState);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 170220, 170256);

                TypeWithState
                leftType = f_10899_170245_170255()
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 170272, 170376);

                var (rightOperand, rightConversion) = f_10899_170310_170375(f_10899_170327_170339(binary), includeExplicitConversions: false);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 170390, 170441);

                var
                rightType = f_10899_170406_170440(this, rightOperand)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 170457, 170491);

                f_10899_170457_170490(!IsConditionalState);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 170637, 170667);

                var
                method = f_10899_170650_170666(binary)
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 170683, 174628) || true) && (f_10899_170687_170722(f_10899_170687_170706(binary)) && (DynAbs.Tracing.TraceSender.Expression_True(10899, 170687, 170770) && f_10899_170743_170765_M(DynAbs.Tracing.TraceSender.TraceConditionalAccessExpression(method, 10899, 170743, 170765)?.ParameterCount) == 2))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 170683, 174628);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 170870, 170921);

                    TypeSymbol
                    methodContainer = f_10899_170899_170920(method)
                    ;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 170939, 170986);

                    bool
                    isLifted = f_10899_170955_170985(f_10899_170955_170974(binary))
                    ;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 171004, 171096);

                    TypeWithState
                    leftUnderlyingType = f_10899_171039_171095(isLifted, leftType)
                    ;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 171114, 171208);

                    TypeWithState
                    rightUnderlyingType = f_10899_171150_171207(isLifted, rightType)
                    ;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 171226, 171412);

                    TypeSymbol?
                    asMemberOfType = f_10899_171255_171320(methodContainer, leftUnderlyingType.Type) ?? (DynAbs.Tracing.TraceSender.Expression_Null<Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?>(10899, 171255, 171411) ?? f_10899_171345_171411(methodContainer, rightUnderlyingType.Type))
                    ;

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 171430, 171581) || true) && (asMemberOfType is object)
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 171430, 171581);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 171500, 171562);

                        method = (MethodSymbol)f_10899_171523_171561(asMemberOfType, method);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 171430, 171581);
                    }
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 171762, 171797);

                    var
                    parameters = f_10899_171779_171796(method)
                    ;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 171815, 171915);

                    f_10899_171815_171914(f_10899_171838_171849(binary), leftOperand, leftConversion, parameters[0], leftUnderlyingType);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 171933, 172037);

                    f_10899_171933_172036(f_10899_171956_171968(binary), rightOperand, rightConversion, parameters[1], rightUnderlyingType);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 172055, 172107);

                    f_10899_172055_172106(this, binary, binary.MethodOpt!, method);


                    int
                    f_10899_171933_172036(Microsoft.CodeAnalysis.CSharp.BoundExpression
                    expr, Microsoft.CodeAnalysis.CSharp.BoundExpression
                    operand, Microsoft.CodeAnalysis.CSharp.Conversion
                    conversion, Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol
                    parameter, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                    operandType)
                    {
                        visitOperandConversion(expr, operand, conversion, parameter, operandType);
                        DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 171933, 172036);
                        return 0;
                    }

                    int
                    f_10899_171815_171914(Microsoft.CodeAnalysis.CSharp.BoundExpression
                    expr, Microsoft.CodeAnalysis.CSharp.BoundExpression
                    operand, Microsoft.CodeAnalysis.CSharp.Conversion
                    conversion, Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol
                    parameter, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                    operandType)
                    {
                        visitOperandConversion(expr, operand, conversion, parameter, operandType);
                        DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 171815, 171914);
                        return 0;
                    }

                    void visitOperandConversion(
                                        BoundExpression expr,
                                        BoundExpression operand,
                                        Conversion conversion,
                                        ParameterSymbol parameter,
                                        TypeWithState operandType)
                    {
                        try
                        {
                            DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 172127, 173279);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 172425, 172503);

                            TypeWithAnnotations
                            targetTypeWithNullability = f_10899_172473_172502(parameter)
                            ;

                            if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 172527, 172769) || true) && (isLifted && (DynAbs.Tracing.TraceSender.Expression_True(10899, 172531, 172598) && f_10899_172543_172598(targetTypeWithNullability.Type)))
                            )

                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 172527, 172769);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 172648, 172746);

                                targetTypeWithNullability = TypeWithAnnotations.Create(f_10899_172703_172744(this, targetTypeWithNullability));
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 172527, 172769);
                            }
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 172793, 173260);

                            _ = f_10899_172797_173259(this, expr as BoundConversion, operand, conversion, targetTypeWithNullability, operandType, checkConversion: true, fromExplicitCast: false, useLegacyWarnings: false, AssignmentKind.Argument, parameter);
                            DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 172127, 173279);

                            Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                            f_10899_172473_172502(Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol
                            this_param)
                            {
                                var return_v = this_param.TypeWithAnnotations;
                                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 172473, 172502);
                                return return_v;
                            }


                            bool
                            f_10899_172543_172598(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                            typeArgument)
                            {
                                var return_v = typeArgument.IsNonNullableValueType();
                                DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 172543, 172598);
                                return return_v;
                            }


                            Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                            f_10899_172703_172744(Microsoft.CodeAnalysis.CSharp.NullableWalker
                            this_param, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                            underlying)
                            {
                                var return_v = this_param.MakeNullableOf(underlying);
                                DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 172703, 172744);
                                return return_v;
                            }


                            Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                            f_10899_172797_173259(Microsoft.CodeAnalysis.CSharp.NullableWalker
                            this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                            conversionOpt, Microsoft.CodeAnalysis.CSharp.BoundExpression
                            conversionOperand, Microsoft.CodeAnalysis.CSharp.Conversion
                            conversion, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                            targetTypeWithNullability, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                            operandType, bool
                            checkConversion, bool
                            fromExplicitCast, bool
                            useLegacyWarnings, Microsoft.CodeAnalysis.CSharp.NullableWalker.AssignmentKind
                            assignmentKind, Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol
                            parameterOpt)
                            {
                                var return_v = this_param.VisitConversion((Microsoft.CodeAnalysis.CSharp.BoundConversion?)conversionOpt, conversionOperand, conversion, targetTypeWithNullability, operandType, checkConversion: checkConversion, fromExplicitCast: fromExplicitCast, useLegacyWarnings: useLegacyWarnings, assignmentKind, parameterOpt);
                                DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 172797, 173259);
                                return return_v;
                            }

                        }
                        catch
                        {
                            DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 172127, 173279);
                            throw;
                        }
                        finally
                        {
                            DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 172127, 173279);
                        }
                    }
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 170683, 174628);
                }

                else

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 170683, 174628);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 173451, 173526);

                    f_10899_173451_173525(f_10899_173474_173485(binary), leftOperand, leftConversion, leftType);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 173544, 173623);

                    f_10899_173544_173622(f_10899_173567_173579(binary), rightOperand, rightConversion, rightType);


                    int
                    f_10899_173544_173622(Microsoft.CodeAnalysis.CSharp.BoundExpression
                    expr, Microsoft.CodeAnalysis.CSharp.BoundExpression
                    operand, Microsoft.CodeAnalysis.CSharp.Conversion
                    conversion, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                    operandType)
                    {
                        visitOperandConversion(expr, operand, conversion, operandType);
                        DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 173544, 173622);
                        return 0;
                    }

                    int
                    f_10899_173451_173525(Microsoft.CodeAnalysis.CSharp.BoundExpression
                    expr, Microsoft.CodeAnalysis.CSharp.BoundExpression
                    operand, Microsoft.CodeAnalysis.CSharp.Conversion
                    conversion, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                    operandType)
                    {
                        visitOperandConversion(expr, operand, conversion, operandType);
                        DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 173451, 173525);
                        return 0;
                    }

                    void visitOperandConversion(
                                        BoundExpression expr,
                                        BoundExpression operand,
                                        Conversion conversion,
                                        TypeWithState operandType)
                    {
                        try
                        {
                            DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 173643, 174613);

                            if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 173893, 174594) || true) && (f_10899_173897_173906(expr) is null)
                            )

                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 173893, 174594);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 173964, 173994);

                                f_10899_173964_173993(operand == expr);
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 173893, 174594);
                            }

                            else

                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 173893, 174594);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 174092, 174571);

                                _ = f_10899_174096_174570(this, expr as BoundConversion, operand, conversion, TypeWithAnnotations.Create(f_10899_174302_174311(expr)), operandType, checkConversion: true, fromExplicitCast: false, useLegacyWarnings: false, AssignmentKind.Argument);
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 173893, 174594);
                            }
                            DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 173643, 174613);

                            Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?
                            f_10899_173897_173906(Microsoft.CodeAnalysis.CSharp.BoundExpression
                            this_param)
                            {
                                var return_v = this_param.Type;
                                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 173897, 173906);
                                return return_v;
                            }


                            int
                            f_10899_173964_173993(bool
                            condition)
                            {
                                Debug.Assert(condition);
                                DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 173964, 173993);
                                return 0;
                            }


                            Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                            f_10899_174302_174311(Microsoft.CodeAnalysis.CSharp.BoundExpression
                            this_param)
                            {
                                var return_v = this_param.Type;
                                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 174302, 174311);
                                return return_v;
                            }


                            Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                            f_10899_174096_174570(Microsoft.CodeAnalysis.CSharp.NullableWalker
                            this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                            conversionOpt, Microsoft.CodeAnalysis.CSharp.BoundExpression
                            conversionOperand, Microsoft.CodeAnalysis.CSharp.Conversion
                            conversion, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                            targetTypeWithNullability, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                            operandType, bool
                            checkConversion, bool
                            fromExplicitCast, bool
                            useLegacyWarnings, Microsoft.CodeAnalysis.CSharp.NullableWalker.AssignmentKind
                            assignmentKind)
                            {
                                var return_v = this_param.VisitConversion((Microsoft.CodeAnalysis.CSharp.BoundConversion?)conversionOpt, conversionOperand, conversion, targetTypeWithNullability, operandType, checkConversion: checkConversion, fromExplicitCast: fromExplicitCast, useLegacyWarnings: useLegacyWarnings, assignmentKind);
                                DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 174096, 174570);
                                return return_v;
                            }

                        }
                        catch
                        {
                            DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 173643, 174613);
                            throw;
                        }
                        finally
                        {
                            DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 173643, 174613);
                        }
                    }
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 170683, 174628);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 174644, 174678);

                f_10899_174644_174677(!IsConditionalState);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 174910, 175017);

                var
                inferredResult = f_10899_174931_175016(this, f_10899_174954_174973(binary), method, f_10899_174983_174994(binary), leftType, rightType)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 175031, 175116);

                f_10899_175031_175115(this, binary, inferredResult, inferredResult.ToTypeWithAnnotations(compilation));
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 175132, 175187);

                BinaryOperatorKind
                op = f_10899_175156_175186(f_10899_175156_175175(binary))
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 175203, 176413) || true) && (op == BinaryOperatorKind.Equal || (DynAbs.Tracing.TraceSender.Expression_False(10899, 175207, 175274) || op == BinaryOperatorKind.NotEqual))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 175203, 176413);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 175353, 175399);

                    BoundExpression?
                    operandComparedToNull = null
                    ;

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 175417, 175726) || true) && (f_10899_175421_175455_M(DynAbs.Tracing.TraceSender.TraceConditionalAccessExpression(f_10899_175421_175447(f_10899_175421_175433(binary)), 10899, 175421, 175455)?.IsNull) == true)
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 175417, 175726);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 175505, 175541);

                        operandComparedToNull = f_10899_175529_175540(binary);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 175417, 175726);
                    }

                    else
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 175417, 175726);

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 175583, 175726) || true) && (f_10899_175587_175620_M(DynAbs.Tracing.TraceSender.TraceConditionalAccessExpression(f_10899_175587_175612(f_10899_175587_175598(binary)), 10899, 175587, 175620)?.IsNull) == true)
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 175583, 175726);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 175670, 175707);

                            operandComparedToNull = f_10899_175694_175706(binary);
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 175583, 175726);
                        }
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 175417, 175726);
                    }

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 175746, 176398) || true) && (operandComparedToNull != null)
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 175746, 176398);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 175925, 175975);

                        bool
                        nonNullCase = op != BinaryOperatorKind.Equal
                        ;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 176025, 176100);

                        f_10899_176025_176099(operandComparedToNull, whenTrue: nonNullCase);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 176251, 176350);

                        f_10899_176251_176349(this, operandComparedToNull, ref (DynAbs.Tracing.TraceSender.Conditional_F1(10899, 176296, 176307) || ((nonNullCase && DynAbs.Tracing.TraceSender.Conditional_F2(10899, 176310, 176328)) || DynAbs.Tracing.TraceSender.Conditional_F3(10899, 176331, 176348))) ? ref StateWhenFalse : ref StateWhenTrue);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 176372, 176379);

                        return;
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 175746, 176398);
                    }
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 175203, 176413);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 176541, 176590);

                BoundExpression?
                operandComparedToNonNull = null
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 176604, 176890) || true) && (leftType.IsNotNull && (DynAbs.Tracing.TraceSender.Expression_True(10899, 176608, 176649) && rightType.MayBeNull))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 176604, 176890);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 176683, 176723);

                    operandComparedToNonNull = f_10899_176710_176722(binary);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 176604, 176890);
                }

                else
                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 176604, 176890);

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 176757, 176890) || true) && (rightType.IsNotNull && (DynAbs.Tracing.TraceSender.Expression_True(10899, 176761, 176802) && leftType.MayBeNull))
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 176757, 176890);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 176836, 176875);

                        operandComparedToNonNull = f_10899_176863_176874(binary);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 176757, 176890);
                    }
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 176604, 176890);
                }

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 176906, 177857) || true) && (operandComparedToNonNull != null)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 176906, 177857);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 176976, 177841);

                    switch (op)
                    {

                        case BinaryOperatorKind.Equal:
                        case BinaryOperatorKind.GreaterThan:
                        case BinaryOperatorKind.LessThan:
                        case BinaryOperatorKind.GreaterThanOrEqual:
                        case BinaryOperatorKind.LessThanOrEqual:
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 176976, 177841);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 177324, 177402);

                            operandComparedToNonNull = f_10899_177351_177401(operandComparedToNonNull);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 177428, 177499);

                            f_10899_177428_177498(operandComparedToNonNull, whenTrue: true);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 177525, 177532);

                            return;
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 176976, 177841);

                        case BinaryOperatorKind.NotEqual:
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 176976, 177841);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 177613, 177691);

                            operandComparedToNonNull = f_10899_177640_177690(operandComparedToNonNull);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 177717, 177789);

                            f_10899_177717_177788(operandComparedToNonNull, whenTrue: false);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 177815, 177822);

                            return;
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 176976, 177841);
                    }
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 177841, 177842);
                    ;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 176906, 177857);
                }

                void splitAndLearnFromNonNullTest(BoundExpression operandComparedToNonNull, bool whenTrue)
                {
                    try
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 177873, 178486);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 177996, 178046);

                        var
                        slotBuilder = f_10899_178014_178045()
                        ;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 178064, 178131);

                        f_10899_178064_178130(this, operandComparedToNonNull, slotBuilder);

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 178149, 178434) || true) && (f_10899_178153_178170(slotBuilder) != 0)
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 178149, 178434);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 178217, 178225);

                            f_10899_178217_178224(this);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 178247, 178342);

                            ref LocalState
                            stateToUpdate = ref (DynAbs.Tracing.TraceSender.Conditional_F1(10899, 178282, 178290) || ((whenTrue && DynAbs.Tracing.TraceSender.Conditional_F2(10899, 178293, 178315)) || DynAbs.Tracing.TraceSender.Conditional_F3(10899, 178318, 178341))) ? ref this.StateWhenTrue : ref this.StateWhenFalse
                            ;
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 178364, 178415);

                            f_10899_178364_178414(slotBuilder, ref stateToUpdate);
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 178149, 178434);
                        }
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 178452, 178471);

                        f_10899_178452_178470(slotBuilder);
                        DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 177873, 178486);

                        Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<int>
                        f_10899_178014_178045()
                        {
                            var return_v = ArrayBuilder<int>.GetInstance();
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 178014, 178045);
                            return return_v;
                        }


                        int
                        f_10899_178064_178130(Microsoft.CodeAnalysis.CSharp.NullableWalker
                        this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                        operand, Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<int>
                        slotBuilder)
                        {
                            this_param.GetSlotsToMarkAsNotNullable(operand, slotBuilder);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 178064, 178130);
                            return 0;
                        }


                        int
                        f_10899_178153_178170(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<int>
                        this_param)
                        {
                            var return_v = this_param.Count;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 178153, 178170);
                            return return_v;
                        }


                        int
                        f_10899_178217_178224(Microsoft.CodeAnalysis.CSharp.NullableWalker
                        this_param)
                        {
                            this_param.Split();
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 178217, 178224);
                            return 0;
                        }


                        int
                        f_10899_178364_178414(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<int>
                        slots, ref Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState
                        stateToUpdate)
                        {
                            MarkSlotsAsNotNull(slots, ref stateToUpdate);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 178364, 178414);
                            return 0;
                        }


                        int
                        f_10899_178452_178470(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<int>
                        this_param)
                        {
                            this_param.Free();
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 178452, 178470);
                            return 0;
                        }

                    }
                    catch
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 177873, 178486);
                        throw;
                    }
                    finally
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 177873, 178486);
                    }
                }

                TypeSymbol? getTypeIfContainingType(TypeSymbol baseType, TypeSymbol? derivedType)
                {
                    try
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 178502, 179151);

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 178616, 178712) || true) && (derivedType is null)
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 178616, 178712);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 178681, 178693);

                            return null;
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 178616, 178712);
                        }
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 178730, 178771);

                        derivedType = f_10899_178744_178770(derivedType);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 178789, 178840);

                        HashSet<DiagnosticInfo>?
                        useSiteDiagnostics = null
                        ;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 178858, 178961);

                        var
                        conversion = f_10899_178875_178960(_conversions, derivedType, baseType, ref useSiteDiagnostics)
                        ;

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 178979, 179106) || true) && (conversion.Exists && (DynAbs.Tracing.TraceSender.Expression_True(10899, 178983, 179026) && f_10899_179004_179026_M(!conversion.IsExplicit)))
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 178979, 179106);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 179068, 179087);

                            return derivedType;
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 178979, 179106);
                        }
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 179124, 179136);

                        return null;
                        DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 178502, 179151);

                        Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                        f_10899_178744_178770(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                        type)
                        {
                            var return_v = type.StrippedType();
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 178744, 178770);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.CSharp.Conversion
                        f_10899_178875_178960(Microsoft.CodeAnalysis.CSharp.Conversions
                        this_param, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                        source, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                        destination, ref System.Collections.Generic.HashSet<Microsoft.CodeAnalysis.DiagnosticInfo>?
                        useSiteDiagnostics)
                        {
                            var return_v = this_param.ClassifyBuiltInConversion(source, destination, ref useSiteDiagnostics);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 178875, 178960);
                            return return_v;
                        }


                        bool
                        f_10899_179004_179026_M(bool
                        i)
                        {
                            var return_v = i;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 179004, 179026);
                            return return_v;
                        }

                    }
                    catch
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 178502, 179151);
                        throw;
                    }
                    finally
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 178502, 179151);
                    }
                    throw new System.Exception("Slicer error: unreachable code");
                }
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 170022, 179162);

                int
                f_10899_170172_170205(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 170172, 170205);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                f_10899_170245_170255()
                {
                    var return_v = ResultType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 170245, 170255);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10899_170327_170339(Microsoft.CodeAnalysis.CSharp.BoundBinaryOperator
                this_param)
                {
                    var return_v = this_param.Right;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 170327, 170339);
                    return return_v;
                }


                (Microsoft.CodeAnalysis.CSharp.BoundExpression expression, Microsoft.CodeAnalysis.CSharp.Conversion conversion)
                f_10899_170310_170375(Microsoft.CodeAnalysis.CSharp.BoundExpression
                expr, bool
                includeExplicitConversions)
                {
                    var return_v = RemoveConversion(expr, includeExplicitConversions: includeExplicitConversions);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 170310, 170375);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                f_10899_170406_170440(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                node)
                {
                    var return_v = this_param.VisitRvalueWithState(node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 170406, 170440);
                    return return_v;
                }


                int
                f_10899_170457_170490(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 170457, 170490);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol?
                f_10899_170650_170666(Microsoft.CodeAnalysis.CSharp.BoundBinaryOperator
                this_param)
                {
                    var return_v = this_param.MethodOpt;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 170650, 170666);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BinaryOperatorKind
                f_10899_170687_170706(Microsoft.CodeAnalysis.CSharp.BoundBinaryOperator
                this_param)
                {
                    var return_v = this_param.OperatorKind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 170687, 170706);
                    return return_v;
                }


                bool
                f_10899_170687_170722(Microsoft.CodeAnalysis.CSharp.BinaryOperatorKind
                kind)
                {
                    var return_v = kind.IsUserDefined();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 170687, 170722);
                    return return_v;
                }


                int?
                f_10899_170743_170765_M(int?
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 170743, 170765);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                f_10899_170899_170920(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                this_param)
                {
                    var return_v = this_param.ContainingType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 170899, 170920);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BinaryOperatorKind
                f_10899_170955_170974(Microsoft.CodeAnalysis.CSharp.BoundBinaryOperator
                this_param)
                {
                    var return_v = this_param.OperatorKind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 170955, 170974);
                    return return_v;
                }


                bool
                f_10899_170955_170985(Microsoft.CodeAnalysis.CSharp.BinaryOperatorKind
                kind)
                {
                    var return_v = kind.IsLifted();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 170955, 170985);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                f_10899_171039_171095(bool
                isLifted, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                typeWithState)
                {
                    var return_v = GetNullableUnderlyingTypeIfNecessary(isLifted, typeWithState);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 171039, 171095);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                f_10899_171150_171207(bool
                isLifted, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                typeWithState)
                {
                    var return_v = GetNullableUnderlyingTypeIfNecessary(isLifted, typeWithState);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 171150, 171207);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?
                f_10899_171255_171320(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                baseType, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?
                derivedType)
                {
                    var return_v = getTypeIfContainingType(baseType, derivedType);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 171255, 171320);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?
                f_10899_171345_171411(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                baseType, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?
                derivedType)
                {
                    var return_v = getTypeIfContainingType(baseType, derivedType);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 171345, 171411);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbol
                f_10899_171523_171561(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                type, Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                symbol)
                {
                    var return_v = AsMemberOfType(type, (Microsoft.CodeAnalysis.CSharp.Symbol)symbol);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 171523, 171561);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol>
                f_10899_171779_171796(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                this_param)
                {
                    var return_v = this_param.Parameters;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 171779, 171796);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10899_171838_171849(Microsoft.CodeAnalysis.CSharp.BoundBinaryOperator
                this_param)
                {
                    var return_v = this_param.Left;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 171838, 171849);
                    return return_v;
                }



                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10899_171956_171968(Microsoft.CodeAnalysis.CSharp.BoundBinaryOperator
                this_param)
                {
                    var return_v = this_param.Right;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 171956, 171968);
                    return return_v;
                }



                int
                f_10899_172055_172106(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundBinaryOperator
                node, Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                originalSymbol, Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                updatedSymbol)
                {
                    this_param.SetUpdatedSymbol((Microsoft.CodeAnalysis.CSharp.BoundNode)node, (Microsoft.CodeAnalysis.CSharp.Symbol)originalSymbol, (Microsoft.CodeAnalysis.CSharp.Symbol)updatedSymbol);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 172055, 172106);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10899_173474_173485(Microsoft.CodeAnalysis.CSharp.BoundBinaryOperator
                this_param)
                {
                    var return_v = this_param.Left;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 173474, 173485);
                    return return_v;
                }



                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10899_173567_173579(Microsoft.CodeAnalysis.CSharp.BoundBinaryOperator
                this_param)
                {
                    var return_v = this_param.Right;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 173567, 173579);
                    return return_v;
                }


                int
                f_10899_174644_174677(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 174644, 174677);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.BinaryOperatorKind
                f_10899_174954_174973(Microsoft.CodeAnalysis.CSharp.BoundBinaryOperator
                this_param)
                {
                    var return_v = this_param.OperatorKind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 174954, 174973);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                f_10899_174983_174994(Microsoft.CodeAnalysis.CSharp.BoundBinaryOperator
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 174983, 174994);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                f_10899_174931_175016(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BinaryOperatorKind
                operatorKind, Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol?
                methodOpt, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                resultType, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                leftType, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                rightType)
                {
                    var return_v = this_param.InferResultNullability(operatorKind, methodOpt, resultType, leftType, rightType);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 174931, 175016);
                    return return_v;
                }


                int
                f_10899_175031_175115(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundBinaryOperator
                expression, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                resultType, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                lvalueType)
                {
                    this_param.SetResult((Microsoft.CodeAnalysis.CSharp.BoundExpression)expression, resultType, lvalueType);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 175031, 175115);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.BinaryOperatorKind
                f_10899_175156_175175(Microsoft.CodeAnalysis.CSharp.BoundBinaryOperator
                this_param)
                {
                    var return_v = this_param.OperatorKind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 175156, 175175);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BinaryOperatorKind
                f_10899_175156_175186(Microsoft.CodeAnalysis.CSharp.BinaryOperatorKind
                kind)
                {
                    var return_v = kind.Operator();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 175156, 175186);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10899_175421_175433(Microsoft.CodeAnalysis.CSharp.BoundBinaryOperator
                this_param)
                {
                    var return_v = this_param.Right;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 175421, 175433);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ConstantValue?
                f_10899_175421_175447(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.ConstantValue;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 175421, 175447);
                    return return_v;
                }


                bool?
                f_10899_175421_175455_M(bool?
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 175421, 175455);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10899_175529_175540(Microsoft.CodeAnalysis.CSharp.BoundBinaryOperator
                this_param)
                {
                    var return_v = this_param.Left;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 175529, 175540);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10899_175587_175598(Microsoft.CodeAnalysis.CSharp.BoundBinaryOperator
                this_param)
                {
                    var return_v = this_param.Left;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 175587, 175598);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ConstantValue?
                f_10899_175587_175612(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.ConstantValue;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 175587, 175612);
                    return return_v;
                }


                bool?
                f_10899_175587_175620_M(bool?
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 175587, 175620);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10899_175694_175706(Microsoft.CodeAnalysis.CSharp.BoundBinaryOperator
                this_param)
                {
                    var return_v = this_param.Right;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 175694, 175706);
                    return return_v;
                }


                int
                f_10899_176025_176099(Microsoft.CodeAnalysis.CSharp.BoundExpression
                operandComparedToNonNull, bool
                whenTrue)
                {
                    splitAndLearnFromNonNullTest(operandComparedToNonNull, whenTrue: whenTrue);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 176025, 176099);
                    return 0;
                }


                int
                f_10899_176251_176349(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                expression, ref Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState
                state)
                {
                    this_param.LearnFromNullTest(expression, ref state);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 176251, 176349);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10899_176710_176722(Microsoft.CodeAnalysis.CSharp.BoundBinaryOperator
                this_param)
                {
                    var return_v = this_param.Right;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 176710, 176722);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10899_176863_176874(Microsoft.CodeAnalysis.CSharp.BoundBinaryOperator
                this_param)
                {
                    var return_v = this_param.Left;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 176863, 176874);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10899_177351_177401(Microsoft.CodeAnalysis.CSharp.BoundExpression
                possiblyConversion)
                {
                    var return_v = SkipReferenceConversions(possiblyConversion);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 177351, 177401);
                    return return_v;
                }


                int
                f_10899_177428_177498(Microsoft.CodeAnalysis.CSharp.BoundExpression
                operandComparedToNonNull, bool
                whenTrue)
                {
                    splitAndLearnFromNonNullTest(operandComparedToNonNull, whenTrue: whenTrue);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 177428, 177498);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10899_177640_177690(Microsoft.CodeAnalysis.CSharp.BoundExpression
                possiblyConversion)
                {
                    var return_v = SkipReferenceConversions(possiblyConversion);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 177640, 177690);
                    return return_v;
                }


                int
                f_10899_177717_177788(Microsoft.CodeAnalysis.CSharp.BoundExpression
                operandComparedToNonNull, bool
                whenTrue)
                {
                    splitAndLearnFromNonNullTest(operandComparedToNonNull, whenTrue: whenTrue);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 177717, 177788);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 170022, 179162);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 170022, 179162);
            }
        }

        private void GetSlotsToMarkAsNotNullable(BoundExpression operand, ArrayBuilder<int> slotBuilder)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 179527, 184328);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 179648, 179678);

                f_10899_179648_179677(operand != null);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 179692, 179755);

                var
                previousConditionalAccessSlot = _lastConditionalAccessSlot
                ;

                try
                {
                    try
                    {
                        while ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 179807, 184174) || true) && (true)
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 179807, 184174);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 180956, 180965);

                            int
                            slot
                            = default(int);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 180987, 184124);

                            switch (f_10899_180995_181007(operand))
                            {

                                case BoundKind.Conversion:
                                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 180987, 184124);
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 181237, 181282);

                                    operand = f_10899_181247_181281(((BoundConversion)operand));
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 181312, 181321);

                                    continue;
                                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 180987, 184124);

                                case BoundKind.AsOperator:
                                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 180987, 184124);
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 181403, 181448);

                                    operand = f_10899_181413_181447(((BoundAsOperator)operand));
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 181478, 181487);

                                    continue;
                                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 180987, 184124);

                                case BoundKind.ConditionalAccess:
                                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 180987, 184124);
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 181576, 181626);

                                    var
                                    conditional = (BoundConditionalAccess)operand
                                    ;
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 181658, 181721);

                                    f_10899_181658_181720(this, f_10899_181686_181706(conditional), slotBuilder);
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 181751, 181789);

                                    slot = f_10899_181758_181788(this, f_10899_181767_181787(conditional));

                                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 181819, 182257) || true) && (slot > 0)
                                    )

                                    {
                                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 181819, 182257);
                                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 182016, 182062);

                                        var
                                        receiverType = f_10899_182035_182055(conditional).Type!
                                        ;

                                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 182096, 182226) || true) && (f_10899_182100_182129(receiverType))
                                        )

                                        {
                                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 182096, 182226);
                                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 182168, 182226);

                                            slot = f_10899_182175_182225(this, receiverType, slot, out _);
                                            DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 182096, 182226);
                                        }
                                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 181819, 182257);
                                    }

                                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 182289, 182998) || true) && (slot > 0)
                                    )

                                    {
                                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 182289, 182998);
                                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 182817, 182851);

                                        _lastConditionalAccessSlot = slot;
                                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 182885, 182924);

                                        operand = f_10899_182895_182923(conditional);
                                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 182958, 182967);

                                        continue;
                                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 182289, 182998);
                                    }
                                    DynAbs.Tracing.TraceSender.TraceBreak(10899, 183206, 183212);

                                    break;
                                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 180987, 184124);

                                default:
                                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 180987, 184124);
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 183839, 183864);

                                    slot = f_10899_183846_183863(this, operand);

                                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 183894, 184063) || true) && (slot > 0 && (DynAbs.Tracing.TraceSender.Expression_True(10899, 183898, 183944) && f_10899_183910_183944(f_10899_183931_183943(operand))))
                                    )

                                    {
                                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 183894, 184063);
                                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 184010, 184032);

                                        f_10899_184010_184031(slotBuilder, slot);
                                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 183894, 184063);
                                    }
                                    DynAbs.Tracing.TraceSender.TraceBreak(10899, 184095, 184101);

                                    break;
                                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 180987, 184124);
                            }
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 184148, 184155);

                            return;
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 179807, 184174);
                        }
                    }
                    catch (System.Exception)
                    {
                        DynAbs.Tracing.TraceSender.TraceExitLoopByException(10899, 179807, 184174);
                        throw;
                    }
                    finally
                    {
                        DynAbs.Tracing.TraceSender.TraceExitLoop(10899, 179807, 184174);
                    }
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinally(10899, 184203, 184317);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 184243, 184302);

                    _lastConditionalAccessSlot = previousConditionalAccessSlot;
                    DynAbs.Tracing.TraceSender.TraceExitFinally(10899, 184203, 184317);
                }
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 179527, 184328);

                int
                f_10899_179648_179677(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 179648, 179677);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.BoundKind
                f_10899_180995_181007(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.Kind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 180995, 181007);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10899_181247_181281(Microsoft.CodeAnalysis.CSharp.BoundConversion
                this_param)
                {
                    var return_v = this_param.Operand;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 181247, 181281);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10899_181413_181447(Microsoft.CodeAnalysis.CSharp.BoundAsOperator
                this_param)
                {
                    var return_v = this_param.Operand;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 181413, 181447);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10899_181686_181706(Microsoft.CodeAnalysis.CSharp.BoundConditionalAccess
                this_param)
                {
                    var return_v = this_param.Receiver;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 181686, 181706);
                    return return_v;
                }


                int
                f_10899_181658_181720(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                operand, Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<int>
                slotBuilder)
                {
                    this_param.GetSlotsToMarkAsNotNullable(operand, slotBuilder);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 181658, 181720);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10899_181767_181787(Microsoft.CodeAnalysis.CSharp.BoundConditionalAccess
                this_param)
                {
                    var return_v = this_param.Receiver;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 181767, 181787);
                    return return_v;
                }


                int
                f_10899_181758_181788(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                node)
                {
                    var return_v = this_param.MakeSlot(node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 181758, 181788);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10899_182035_182055(Microsoft.CodeAnalysis.CSharp.BoundConditionalAccess
                this_param)
                {
                    var return_v = this_param.Receiver;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 182035, 182055);
                    return return_v;
                }


                bool
                f_10899_182100_182129(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                type)
                {
                    var return_v = type.IsNullableType();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 182100, 182129);
                    return return_v;
                }


                int
                f_10899_182175_182225(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                containingType, int
                containingSlot, out Microsoft.CodeAnalysis.CSharp.Symbol?
                valueProperty)
                {
                    var return_v = this_param.GetNullableOfTValueSlot(containingType, containingSlot, out valueProperty);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 182175, 182225);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10899_182895_182923(Microsoft.CodeAnalysis.CSharp.BoundConditionalAccess
                this_param)
                {
                    var return_v = this_param.AccessExpression;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 182895, 182923);
                    return return_v;
                }


                int
                f_10899_183846_183863(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                node)
                {
                    var return_v = this_param.MakeSlot(node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 183846, 183863);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?
                f_10899_183931_183943(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 183931, 183943);
                    return return_v;
                }


                bool
                f_10899_183910_183944(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?
                operandType)
                {
                    var return_v = PossiblyNullableType(operandType);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 183910, 183944);
                    return return_v;
                }


                int
                f_10899_184010_184031(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<int>
                this_param, int
                item)
                {
                    this_param.Add(item);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 184010, 184031);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 179527, 184328);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 179527, 184328);
            }
        }

        private static bool PossiblyNullableType([NotNullWhen(true)] TypeSymbol? operandType)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 184445, 184503);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 184448, 184503);
                return operandType is not null && (DynAbs.Tracing.TraceSender.Expression_True(10899, 184448, 184503) && f_10899_184475_184503(operandType)); DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 184445, 184503);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 184445, 184503);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 184445, 184503);
            }
            throw new System.Exception("Slicer error: unreachable code");

            bool
            f_10899_184475_184503(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
            type)
            {
                var return_v = type.CanContainNull();
                DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 184475, 184503);
                return return_v;
            }

        }

        private static void MarkSlotsAsNotNull(ArrayBuilder<int> slots, ref LocalState stateToUpdate)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterStaticMethod(10899, 184516, 184768);
                try
                {
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 184634, 184757);
                    foreach (int slot in f_10899_184655_184660_I(slots))
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 184634, 184757);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 184694, 184742);

                        stateToUpdate[slot] = NullableFlowState.NotNull;
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 184634, 184757);
                    }
                }
                catch (System.Exception)
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoopByException(10899, 1, 124);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoop(10899, 1, 124);
                }
                DynAbs.Tracing.TraceSender.TraceExitStaticMethod(10899, 184516, 184768);

                Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<int>
                f_10899_184655_184660_I(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<int>
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 184655, 184660);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 184516, 184768);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 184516, 184768);
            }
        }

        private void LearnFromNonNullTest(BoundExpression expression, ref LocalState state)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 184780, 185555);
                (Microsoft.CodeAnalysis.CSharp.BoundExpression AwaitableExpression, Microsoft.CodeAnalysis.CSharp.NullableWalker.VisitResult Result) value = default((Microsoft.CodeAnalysis.CSharp.BoundExpression AwaitableExpression, Microsoft.CodeAnalysis.CSharp.NullableWalker.VisitResult Result));

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 184888, 185321) || true) && (f_10899_184892_184907(expression) == BoundKind.AwaitableValuePlaceholder)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 184888, 185321);

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 184980, 185306) || true) && (_awaitablePlaceholdersOpt != null && (DynAbs.Tracing.TraceSender.Expression_True(10899, 184984, 185117) && f_10899_185021_185117(_awaitablePlaceholdersOpt, expression, out value)))
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 184980, 185306);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 185159, 185198);

                        expression = value.AwaitableExpression;
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 184980, 185306);
                    }

                    else

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 184980, 185306);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 185280, 185287);

                        return;
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 184980, 185306);
                    }
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 184888, 185321);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 185337, 185387);

                var
                slotBuilder = f_10899_185355_185386()
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 185401, 185454);

                f_10899_185401_185453(this, expression, slotBuilder);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 185468, 185511);

                f_10899_185468_185510(slotBuilder, ref state);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 185525, 185544);

                f_10899_185525_185543(slotBuilder);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 184780, 185555);

                Microsoft.CodeAnalysis.CSharp.BoundKind
                f_10899_184892_184907(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.Kind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 184892, 184907);
                    return return_v;
                }


                bool
                f_10899_185021_185117(Microsoft.CodeAnalysis.PooledObjects.PooledDictionary<Microsoft.CodeAnalysis.CSharp.BoundAwaitableValuePlaceholder, (Microsoft.CodeAnalysis.CSharp.BoundExpression AwaitableExpression, Microsoft.CodeAnalysis.CSharp.NullableWalker.VisitResult Result)>
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                key, out (Microsoft.CodeAnalysis.CSharp.BoundExpression AwaitableExpression, Microsoft.CodeAnalysis.CSharp.NullableWalker.VisitResult Result)
                value)
                {
                    var return_v = this_param.TryGetValue((Microsoft.CodeAnalysis.CSharp.BoundAwaitableValuePlaceholder)key, out value);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 185021, 185117);
                    return return_v;
                }


                Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<int>
                f_10899_185355_185386()
                {
                    var return_v = ArrayBuilder<int>.GetInstance();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 185355, 185386);
                    return return_v;
                }


                int
                f_10899_185401_185453(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                operand, Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<int>
                slotBuilder)
                {
                    this_param.GetSlotsToMarkAsNotNullable(operand, slotBuilder);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 185401, 185453);
                    return 0;
                }


                int
                f_10899_185468_185510(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<int>
                slots, ref Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState
                stateToUpdate)
                {
                    MarkSlotsAsNotNull(slots, ref stateToUpdate);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 185468, 185510);
                    return 0;
                }


                int
                f_10899_185525_185543(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<int>
                this_param)
                {
                    this_param.Free();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 185525, 185543);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 184780, 185555);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 184780, 185555);
            }
        }

        private void LearnFromNonNullTest(int slot, ref LocalState state)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 185567, 185708);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 185657, 185697);

                state[slot] = NullableFlowState.NotNull;
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 185567, 185708);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 185567, 185708);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 185567, 185708);
            }
        }

        private void LearnFromNullTest(BoundExpression expression, ref LocalState state)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 185720, 186943);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 185875, 185937) || true) && (f_10899_185879_185903(expression) != null)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 185875, 185937);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 185930, 185937);

                    return;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 185875, 185937);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 186072, 186180);

                var
                expressionWithoutConversion = f_10899_186106_186168(expression, includeExplicitConversions: true).expression
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 186194, 186243);

                var
                slot = f_10899_186205_186242(this, expressionWithoutConversion)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 186829, 186932);

                f_10899_186829_186931(this, slot, f_10899_186853_186885(expressionWithoutConversion), ref state, markDependentSlotsNotNull: false);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 185720, 186943);

                Microsoft.CodeAnalysis.ConstantValue?
                f_10899_185879_185903(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.ConstantValue;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 185879, 185903);
                    return return_v;
                }


                (Microsoft.CodeAnalysis.CSharp.BoundExpression expression, Microsoft.CodeAnalysis.CSharp.Conversion conversion)
                f_10899_186106_186168(Microsoft.CodeAnalysis.CSharp.BoundExpression
                expr, bool
                includeExplicitConversions)
                {
                    var return_v = RemoveConversion(expr, includeExplicitConversions: includeExplicitConversions);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 186106, 186168);
                    return return_v;
                }


                int
                f_10899_186205_186242(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                node)
                {
                    var return_v = this_param.MakeSlot(node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 186205, 186242);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?
                f_10899_186853_186885(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 186853, 186885);
                    return return_v;
                }


                int
                f_10899_186829_186931(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, int
                slot, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?
                expressionType, ref Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState
                state, bool
                markDependentSlotsNotNull)
                {
                    this_param.LearnFromNullTest(slot, expressionType, ref state, markDependentSlotsNotNull: markDependentSlotsNotNull);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 186829, 186931);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 185720, 186943);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 185720, 186943);
            }
        }

        private void LearnFromNullTest(int slot, TypeSymbol? expressionType, ref LocalState state, bool markDependentSlotsNotNull)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 186955, 187596);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 187102, 187585) || true) && (slot > 0 && (DynAbs.Tracing.TraceSender.Expression_True(10899, 187106, 187154) && f_10899_187118_187154(expressionType)))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 187102, 187585);

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 187188, 187401) || true) && (state[slot] == NullableFlowState.NotNull)
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 187188, 187401);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 187340, 187382);

                        state[slot] = NullableFlowState.MaybeNull;
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 187188, 187401);
                    }

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 187421, 187570) || true) && (markDependentSlotsNotNull)
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 187421, 187570);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 187492, 187551);

                        f_10899_187492_187550(this, slot, expressionType, ref state);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 187421, 187570);
                    }
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 187102, 187585);
                }
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 186955, 187596);

                bool
                f_10899_187118_187154(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?
                operandType)
                {
                    var return_v = PossiblyNullableType(operandType);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 187118, 187154);
                    return return_v;
                }


                int
                f_10899_187492_187550(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, int
                slot, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                expressionType, ref Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState
                state)
                {
                    this_param.MarkDependentSlotsNotNull(slot, expressionType, ref state);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 187492, 187550);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 186955, 187596);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 186955, 187596);
            }
        }

        private void MarkDependentSlotsNotNull(int slot, TypeSymbol expressionType, ref LocalState state, int depth = 2)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 187926, 190698);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 188063, 188103) || true) && (depth <= 0)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 188063, 188103);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 188096, 188103);

                    return;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 188063, 188103);
                }
                try
                {
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 188119, 189091);
                    foreach (var member in f_10899_188142_188168_I(f_10899_188142_188168(expressionType)))
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 188119, 189091);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 188202, 188262);

                        HashSet<DiagnosticInfo>?
                        discardedUseSiteDiagnostics = null
                        ;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 188280, 188330);

                        var
                        containingType = f_10899_188301_188329_M(DynAbs.Tracing.TraceSender.TraceConditionalAccessExpression(this._symbol, 10899, 188301, 188329)?.ContainingType)
                        ;

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 188348, 189076) || true) && ((member is PropertySymbol { IsIndexedProperty: false } || (DynAbs.Tracing.TraceSender.Expression_False(10899, 188353, 188441) || f_10899_188410_188421(member) == SymbolKind.Field)) && (DynAbs.Tracing.TraceSender.Expression_True(10899, 188352, 188500) && f_10899_188467_188500(member)) && (DynAbs.Tracing.TraceSender.Expression_True(10899, 188352, 188640) && (containingType is null || (DynAbs.Tracing.TraceSender.Expression_False(10899, 188526, 188639) || f_10899_188552_188639(member, containingType, ref discardedUseSiteDiagnostics)))))
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 188348, 189076);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 188682, 188780);

                            int
                            childSlot = f_10899_188698_188779(this, member, slot, forceSlotEvenIfEmpty: true, createIfMissing: false)
                            ;

                            if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 188802, 189057) || true) && (childSlot > 0)
                            )

                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 188802, 189057);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 188869, 188914);

                                state[childSlot] = NullableFlowState.NotNull;
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 188940, 189034);

                                f_10899_188940_189033(this, childSlot, f_10899_188977_189005(member).Type, ref state, depth - 1);
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 188802, 189057);
                            }
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 188348, 189076);
                        }
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 188119, 189091);
                    }
                }
                catch (System.Exception)
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoopByException(10899, 1, 973);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoop(10899, 1, 973);
                }
                static IEnumerable<Symbol> getMembers(TypeSymbol type)
                {
                    try
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterStaticMethod(10899, 189107, 190687);

                        var listYield = new List<Symbol>();
                        try
                        {
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 189247, 189330);
                            foreach (var member in f_10899_189270_189287_I(f_10899_189270_189287(type)))
                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 189247, 189330);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 189310, 189330);

                                listYield.Add(member);
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 189247, 189330);
                            }
                        }
                        catch (System.Exception)
                        {
                            DynAbs.Tracing.TraceSender.TraceExitLoopByException(10899, 1, 84);
                            throw;
                        }
                        finally
                        {
                            DynAbs.Tracing.TraceSender.TraceExitLoop(10899, 1, 84);
                        }
                        try
                        {
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 189444, 189474);

                            // All types inherit members from their effective bases
                            for (NamedTypeSymbol
            baseType = f_10899_189455_189474(type)
            ; (DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 189423, 189659) || true) && (!(baseType is null))
            ; DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 189497, 189545)
            , baseType = f_10899_189508_189545(baseType), DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 189423, 189659))

                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 189423, 189659);
                                try
                                {
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 189568, 189659);
                                    foreach (var member in f_10899_189591_189612_I(f_10899_189591_189612(baseType)))
                                    {
                                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 189568, 189659);
                                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 189639, 189659);

                                        listYield.Add(member);
                                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 189568, 189659);
                                    }
                                }
                                catch (System.Exception)
                                {
                                    DynAbs.Tracing.TraceSender.TraceExitLoopByException(10899, 1, 92);
                                    throw;
                                }
                                finally
                                {
                                    DynAbs.Tracing.TraceSender.TraceExitLoop(10899, 1, 92);
                                }
                            }
                        }
                        catch (System.Exception)
                        {
                            DynAbs.Tracing.TraceSender.TraceExitLoopByException(10899, 1, 237);
                            throw;
                        }
                        finally
                        {
                            DynAbs.Tracing.TraceSender.TraceExitLoop(10899, 1, 237);
                        }
                        try
                        {
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 189770, 189956);
                            foreach (NamedTypeSymbol interfaceType in f_10899_189812_189837_I(f_10899_189812_189837(type)))
                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 189770, 189956);
                                try
                                {
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 189860, 189956);
                                    foreach (var member in f_10899_189883_189909_I(f_10899_189883_189909(interfaceType)))
                                    {
                                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 189860, 189956);
                                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 189936, 189956);

                                        listYield.Add(member);
                                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 189860, 189956);
                                    }
                                }
                                catch (System.Exception)
                                {
                                    DynAbs.Tracing.TraceSender.TraceExitLoopByException(10899, 1, 97);
                                    throw;
                                }
                                finally
                                {
                                    DynAbs.Tracing.TraceSender.TraceExitLoop(10899, 1, 97);
                                }
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 189770, 189956);
                            }
                        }
                        catch (System.Exception)
                        {
                            DynAbs.Tracing.TraceSender.TraceExitLoopByException(10899, 1, 187);
                            throw;
                        }
                        finally
                        {
                            DynAbs.Tracing.TraceSender.TraceExitLoop(10899, 1, 187);
                        }
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 189976, 189988);

                        return listYield;

                        static NamedTypeSymbol effectiveBase(TypeSymbol type)
                        {
                            try
                            {
                                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 190062, 190266);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 190065, 190266);
                                return type switch
                                {
                                    TypeParameterSymbol tp when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 190117, 190184) && DynAbs.Tracing.TraceSender.Expression_True(10899, 190117, 190184))
                => f_10899_190143_190184(tp),
                                    var t when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 190207, 190246) && DynAbs.Tracing.TraceSender.Expression_True(10899, 190207, 190246))
                => f_10899_190216_190246(t),
                                }; DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 190062, 190266);
                            }
                            catch
                            {
                                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 190062, 190266);
                                throw;
                            }
                            finally
                            {
                                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 190062, 190266);
                            }
                            throw new System.Exception("Slicer error: unreachable code");
                        }

                        static ImmutableArray<NamedTypeSymbol> inheritedInterfaces(TypeSymbol type)
                        {
                            try
                            {
                                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 190363, 190671);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 190366, 190671);
                                return type switch
                                {
                                    TypeParameterSymbol tp when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 190418, 190489) && DynAbs.Tracing.TraceSender.Expression_True(10899, 190418, 190489))
                => f_10899_190444_190489(tp),
                                    { TypeKind: TypeKind.Interface } when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 190512, 190586) && DynAbs.Tracing.TraceSender.Expression_True(10899, 190512, 190586))
                => f_10899_190548_190586(type),
                                    _ when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 190609, 190651) && DynAbs.Tracing.TraceSender.Expression_True(10899, 190609, 190651))
                => ImmutableArray<NamedTypeSymbol>.Empty,
                                }; DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 190363, 190671);
                            }
                            catch
                            {
                                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 190363, 190671);
                                throw;
                            }
                            finally
                            {
                                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 190363, 190671);
                            }
                            throw new System.Exception("Slicer error: unreachable code");
                        }
                        DynAbs.Tracing.TraceSender.TraceExitStaticMethod(10899, 189107, 190687);

                        return listYield;

                        System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>
                        f_10899_189270_189287(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                        this_param)
                        {
                            var return_v = this_param.GetMembers();
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 189270, 189287);
                            return return_v;
                        }


                        System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>
                        f_10899_189270_189287_I(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>
                        i)
                        {
                            var return_v = i;
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 189270, 189287);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                        f_10899_189455_189474(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                        type)
                        {
                            var return_v = effectiveBase(type);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 189455, 189474);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                        f_10899_189508_189545(Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                        this_param)
                        {
                            var return_v = this_param.BaseTypeNoUseSiteDiagnostics;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 189508, 189545);
                            return return_v;
                        }


                        System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>
                        f_10899_189591_189612(Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                        this_param)
                        {
                            var return_v = this_param.GetMembers();
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 189591, 189612);
                            return return_v;
                        }


                        System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>
                        f_10899_189591_189612_I(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>
                        i)
                        {
                            var return_v = i;
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 189591, 189612);
                            return return_v;
                        }


                        System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol>
                        f_10899_189812_189837(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                        type)
                        {
                            var return_v = inheritedInterfaces(type);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 189812, 189837);
                            return return_v;
                        }


                        System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>
                        f_10899_189883_189909(Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                        this_param)
                        {
                            var return_v = this_param.GetMembers();
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 189883, 189909);
                            return return_v;
                        }


                        System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>
                        f_10899_189883_189909_I(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>
                        i)
                        {
                            var return_v = i;
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 189883, 189909);
                            return return_v;
                        }


                        System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol>
                        f_10899_189812_189837_I(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol>
                        i)
                        {
                            var return_v = i;
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 189812, 189837);
                            return return_v;
                        }


                        static Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                        f_10899_190143_190184(Microsoft.CodeAnalysis.CSharp.Symbols.TypeParameterSymbol
                        this_param)
                        {
                            var return_v = this_param.EffectiveBaseClassNoUseSiteDiagnostics;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 190143, 190184);
                            return return_v;
                        }


                        static Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                        f_10899_190216_190246(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                        this_param)
                        {
                            var return_v = this_param.BaseTypeNoUseSiteDiagnostics;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 190216, 190246);
                            return return_v;
                        }


                        static System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol>
                        f_10899_190444_190489(Microsoft.CodeAnalysis.CSharp.Symbols.TypeParameterSymbol
                        this_param)
                        {
                            var return_v = this_param.AllEffectiveInterfacesNoUseSiteDiagnostics;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 190444, 190489);
                            return return_v;
                        }


                        static System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol>
                        f_10899_190548_190586(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                        this_param)
                        {
                            var return_v = this_param.AllInterfacesNoUseSiteDiagnostics;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 190548, 190586);
                            return return_v;
                        }

                    }
                    catch
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 189107, 190687);
                        throw;
                    }
                    finally
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 189107, 190687);
                    }
                    throw new System.Exception("Slicer error: unreachable code");
                }
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 187926, 190698);

                System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.CSharp.Symbol>
                f_10899_188142_188168(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                type)
                {
                    var return_v = getMembers(type);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 188142, 188168);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol?
                f_10899_188301_188329_M(Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol?
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 188301, 188329);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SymbolKind
                f_10899_188410_188421(Microsoft.CodeAnalysis.CSharp.Symbol
                this_param)
                {
                    var return_v = this_param.Kind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 188410, 188421);
                    return return_v;
                }


                bool
                f_10899_188467_188500(Microsoft.CodeAnalysis.CSharp.Symbol
                symbol)
                {
                    var return_v = symbol.RequiresInstanceReceiver();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 188467, 188500);
                    return return_v;
                }


                bool
                f_10899_188552_188639(Microsoft.CodeAnalysis.CSharp.Symbol
                symbol, Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                within, ref System.Collections.Generic.HashSet<Microsoft.CodeAnalysis.DiagnosticInfo>?
                useSiteDiagnostics)
                {
                    var return_v = AccessCheck.IsSymbolAccessible(symbol, within, ref useSiteDiagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 188552, 188639);
                    return return_v;
                }


                int
                f_10899_188698_188779(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.Symbol
                symbol, int
                containingSlot, bool
                forceSlotEvenIfEmpty, bool
                createIfMissing)
                {
                    var return_v = this_param.GetOrCreateSlot(symbol, containingSlot, forceSlotEvenIfEmpty: forceSlotEvenIfEmpty, createIfMissing: createIfMissing);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 188698, 188779);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                f_10899_188977_189005(Microsoft.CodeAnalysis.CSharp.Symbol
                symbol)
                {
                    var return_v = symbol.GetTypeOrReturnType();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 188977, 189005);
                    return return_v;
                }


                int
                f_10899_188940_189033(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, int
                slot, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                expressionType, ref Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState
                state, int
                depth)
                {
                    this_param.MarkDependentSlotsNotNull(slot, expressionType, ref state, depth);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 188940, 189033);
                    return 0;
                }


                System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.CSharp.Symbol>
                f_10899_188142_188168_I(System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.CSharp.Symbol>
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 188142, 188168);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 187926, 190698);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 187926, 190698);
            }
        }

        private static BoundExpression SkipReferenceConversions(BoundExpression possiblyConversion)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterStaticMethod(10899, 190710, 191425);
                try
                {
                    while ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 190826, 191372) || true) && (f_10899_190833_190856(possiblyConversion) == BoundKind.Conversion)
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 190826, 191372);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 190914, 190967);

                        var
                        conversion = (BoundConversion)possiblyConversion
                        ;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 190985, 191357);

                        switch (f_10899_190993_191018(conversion))
                        {

                            case ConversionKind.ImplicitReference:
                            case ConversionKind.ExplicitReference:
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 190985, 191357);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 191184, 191224);

                                possiblyConversion = f_10899_191205_191223(conversion);
                                DynAbs.Tracing.TraceSender.TraceBreak(10899, 191250, 191256);

                                break;
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 190985, 191357);

                            default:
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 190985, 191357);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 191312, 191338);

                                return possiblyConversion;
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 190985, 191357);
                        }
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 190826, 191372);
                    }
                }
                catch (System.Exception)
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoopByException(10899, 190826, 191372);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoop(10899, 190826, 191372);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 191388, 191414);

                return possiblyConversion;
                DynAbs.Tracing.TraceSender.TraceExitStaticMethod(10899, 190710, 191425);

                Microsoft.CodeAnalysis.CSharp.BoundKind
                f_10899_190833_190856(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.Kind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 190833, 190856);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.ConversionKind
                f_10899_190993_191018(Microsoft.CodeAnalysis.CSharp.BoundConversion
                this_param)
                {
                    var return_v = this_param.ConversionKind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 190993, 191018);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10899_191205_191223(Microsoft.CodeAnalysis.CSharp.BoundConversion
                this_param)
                {
                    var return_v = this_param.Operand;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 191205, 191223);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 190710, 191425);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 190710, 191425);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override BoundNode? VisitNullCoalescingAssignmentOperator(BoundNullCoalescingAssignmentOperator node)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 191437, 192740);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 191570, 191617);

                BoundExpression
                leftOperand = f_10899_191600_191616(node)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 191631, 191680);

                BoundExpression
                rightOperand = f_10899_191662_191679(node)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 191694, 191731);

                int
                leftSlot = f_10899_191709_191730(this, leftOperand)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 191747, 191820);

                TypeWithAnnotations
                targetType = f_10899_191780_191819(this, leftOperand)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 191834, 191869);

                var
                leftState = this.State.Clone()
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 191883, 191932);

                f_10899_191883_191931(this, leftOperand, ref leftState);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 191946, 191993);

                f_10899_191946_191992(this, leftOperand, ref this.State);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 192007, 192178) || true) && (f_10899_192011_192045(node))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 192007, 192178);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 192079, 192163);

                    targetType = TypeWithAnnotations.Create(f_10899_192119_192128(node), NullableAnnotation.NotAnnotated);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 192007, 192178);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 192192, 192389);

                TypeWithState
                rightResult = f_10899_192220_192388(this, rightOperand, targetType, useLegacyWarnings: f_10899_192297_192339(leftOperand, targetType), trackMembers: false, AssignmentKind.Assignment)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 192403, 192508);

                f_10899_192403_192507(this, rightOperand, targetType, leftSlot, rightResult, f_10899_192484_192506(this, rightOperand));
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 192522, 192558);

                f_10899_192522_192557(this, ref this.State, ref leftState);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 192572, 192657);

                TypeWithState
                resultType = f_10899_192599_192656(rightResult, targetType.Type)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 192671, 192703);

                f_10899_192671_192702(this, node, resultType);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 192717, 192729);

                return null;
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 191437, 192740);

                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10899_191600_191616(Microsoft.CodeAnalysis.CSharp.BoundNullCoalescingAssignmentOperator
                this_param)
                {
                    var return_v = this_param.LeftOperand;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 191600, 191616);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10899_191662_191679(Microsoft.CodeAnalysis.CSharp.BoundNullCoalescingAssignmentOperator
                this_param)
                {
                    var return_v = this_param.RightOperand;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 191662, 191679);
                    return return_v;
                }


                int
                f_10899_191709_191730(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                node)
                {
                    var return_v = this_param.MakeSlot(node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 191709, 191730);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                f_10899_191780_191819(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                node)
                {
                    var return_v = this_param.VisitLvalueWithAnnotations(node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 191780, 191819);
                    return return_v;
                }


                int
                f_10899_191883_191931(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                expression, ref Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState
                state)
                {
                    this_param.LearnFromNonNullTest(expression, ref state);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 191883, 191931);
                    return 0;
                }


                int
                f_10899_191946_191992(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                expression, ref Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState
                state)
                {
                    this_param.LearnFromNullTest(expression, ref state);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 191946, 191992);
                    return 0;
                }


                bool
                f_10899_192011_192045(Microsoft.CodeAnalysis.CSharp.BoundNullCoalescingAssignmentOperator
                this_param)
                {
                    var return_v = this_param.IsNullableValueTypeAssignment;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 192011, 192045);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?
                f_10899_192119_192128(Microsoft.CodeAnalysis.CSharp.BoundNullCoalescingAssignmentOperator
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 192119, 192128);
                    return return_v;
                }


                bool
                f_10899_192297_192339(Microsoft.CodeAnalysis.CSharp.BoundExpression
                expr, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                exprType)
                {
                    var return_v = UseLegacyWarnings(expr, exprType);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 192297, 192339);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                f_10899_192220_192388(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                expr, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                targetTypeOpt, bool
                useLegacyWarnings, bool
                trackMembers, Microsoft.CodeAnalysis.CSharp.NullableWalker.AssignmentKind
                assignmentKind)
                {
                    var return_v = this_param.VisitOptionalImplicitConversion(expr, targetTypeOpt, useLegacyWarnings: useLegacyWarnings, trackMembers: trackMembers, assignmentKind);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 192220, 192388);
                    return return_v;
                }


                int
                f_10899_192484_192506(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                node)
                {
                    var return_v = this_param.MakeSlot(node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 192484, 192506);
                    return return_v;
                }


                int
                f_10899_192403_192507(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                valueOpt, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                targetType, int
                targetSlot, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                valueType, int
                valueSlot)
                {
                    this_param.TrackNullableStateForAssignment(valueOpt, targetType, targetSlot, valueType, valueSlot);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 192403, 192507);
                    return 0;
                }


                bool
                f_10899_192522_192557(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, ref Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState
                self, ref Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState
                other)
                {
                    var return_v = this_param.Join(ref self, ref other);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 192522, 192557);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                f_10899_192599_192656(Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                rightResult, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                resultType)
                {
                    var return_v = GetNullCoalescingResultType(rightResult, resultType);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 192599, 192656);
                    return return_v;
                }


                int
                f_10899_192671_192702(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundNullCoalescingAssignmentOperator
                expression, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                type)
                {
                    this_param.SetResultType((Microsoft.CodeAnalysis.CSharp.BoundExpression)expression, type);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 192671, 192702);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 191437, 192740);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 191437, 192740);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override BoundNode? VisitNullCoalescingOperator(BoundNullCoalescingOperator node)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 192752, 197030);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 192865, 192899);

                f_10899_192865_192898(!IsConditionalState);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 192915, 192962);

                BoundExpression
                leftOperand = f_10899_192945_192961(node)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 192976, 193025);

                BoundExpression
                rightOperand = f_10899_193007_193024(node)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 193041, 193102);

                TypeWithState
                leftResult = f_10899_193068_193101(this, leftOperand)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 193116, 193142);

                TypeWithState
                rightResult
                = default(TypeWithState);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 193158, 193590) || true) && (f_10899_193162_193189(leftOperand))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 193158, 193590);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 193223, 193272);

                    rightResult = f_10899_193237_193271(this, rightOperand);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 193473, 193545);

                    f_10899_193473_193544(this, node, TypeWithState.Create(f_10899_193514_193523(node), rightResult.State));
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 193563, 193575);

                    return null;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 193158, 193590);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 193606, 193643);

                var
                whenNotNull = this.State.Clone()
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 193657, 193708);

                f_10899_193657_193707(this, leftOperand, ref whenNotNull);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 193722, 193769);

                f_10899_193722_193768(this, leftOperand, ref this.State);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 193785, 193841);

                bool
                leftIsConstant = f_10899_193807_193832(leftOperand) != null
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 193855, 193939) || true) && (leftIsConstant)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 193855, 193939);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 193907, 193924);

                    f_10899_193907_193923(this);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 193855, 193939);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 194139, 194188);

                rightResult = f_10899_194153_194187(this, rightOperand);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 194204, 194242);

                f_10899_194204_194241(this, ref this.State, ref whenNotNull);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 194258, 194626) || true) && (f_10899_194262_194299_M(DynAbs.Tracing.TraceSender.TraceConditionalAccessExpression(f_10899_194262_194288(rightOperand), 10899, 194262, 194299)?.IsBoolean) ?? (DynAbs.Tracing.TraceSender.Expression_Null<bool?>(10899, 194262, 194308) ?? false))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 194258, 194626);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 194342, 194350);

                    f_10899_194342_194349(this);

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 194368, 194611) || true) && (f_10899_194372_194411(f_10899_194372_194398(rightOperand)))
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 194368, 194611);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 194453, 194482);

                        StateWhenFalse = whenNotNull;
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 194368, 194611);
                    }

                    else

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 194368, 194611);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 194564, 194592);

                        StateWhenTrue = whenNotNull;
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 194368, 194611);
                    }
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 194258, 194626);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 194642, 194679);

                var
                leftResultType = leftResult.Type
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 194693, 194732);

                var
                rightResultType = rightResult.Type
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 194748, 195630);

                var
                resultType = f_10899_194765_194788(node) switch
                {
                    BoundNullCoalescingOperatorResultKind.NoCommonType when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 194828, 194891) && DynAbs.Tracing.TraceSender.Expression_True(10899, 194828, 194891))
=> f_10899_194882_194891(node),
                    BoundNullCoalescingOperatorResultKind.LeftType when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 194910, 195012) && DynAbs.Tracing.TraceSender.Expression_True(10899, 194910, 195012))
=> f_10899_194960_195012(leftResultType!, rightResultType!),
                    BoundNullCoalescingOperatorResultKind.LeftUnwrappedType when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 195031, 195157) && DynAbs.Tracing.TraceSender.Expression_True(10899, 195031, 195157))
=> f_10899_195090_195157(f_10899_195108_195138(leftResultType!), rightResultType!),
                    BoundNullCoalescingOperatorResultKind.RightType when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 195176, 195280) && DynAbs.Tracing.TraceSender.Expression_True(10899, 195176, 195280))
=> f_10899_195227_195280(leftResultType!, rightResultType!),
                    BoundNullCoalescingOperatorResultKind.LeftUnwrappedRightType when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 195299, 195431) && DynAbs.Tracing.TraceSender.Expression_True(10899, 195299, 195431))
=> f_10899_195363_195431(f_10899_195382_195412(leftResultType!), rightResultType!),
                    BoundNullCoalescingOperatorResultKind.RightDynamicType when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 195450, 195524) && DynAbs.Tracing.TraceSender.Expression_True(10899, 195450, 195524))
=> rightResultType!,
                    _ when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 195543, 195613) && DynAbs.Tracing.TraceSender.Expression_True(10899, 195543, 195613))
=> throw f_10899_195554_195613(f_10899_195589_195612(node)),
                }
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 195646, 195720);

                f_10899_195646_195719(this, node, f_10899_195666_195718(rightResult, resultType));
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 195734, 195746);

                return null;

                TypeSymbol getLeftResultType(TypeSymbol leftType, TypeSymbol rightType)
                {
                    try
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 195762, 196746);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 195866, 195900);

                        f_10899_195866_195899(rightType is object);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 196251, 196299);

                        var
                        temp = f_10899_196262_196279(node) as BoundConversion
                        ;

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 196317, 196574) || true) && ((temp == null || (DynAbs.Tracing.TraceSender.Expression_False(10899, 196322, 196361) || f_10899_196338_196361(temp))) && (DynAbs.Tracing.TraceSender.Expression_True(10899, 196321, 196496) && f_10899_196387_196489(this, f_10899_196428_196444(node), leftType, rightType, reportMismatch: false).Exists))
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 196317, 196574);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 196538, 196555);

                            return rightType;
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 196317, 196574);
                        }
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 196594, 196697);

                        f_10899_196594_196696(this, f_10899_196635_196652(node), rightType, leftType, reportMismatch: true);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 196715, 196731);

                        return leftType;
                        DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 195762, 196746);

                        int
                        f_10899_195866_195899(bool
                        condition)
                        {
                            Debug.Assert(condition);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 195866, 195899);
                            return 0;
                        }


                        Microsoft.CodeAnalysis.CSharp.BoundExpression
                        f_10899_196262_196279(Microsoft.CodeAnalysis.CSharp.BoundNullCoalescingOperator
                        this_param)
                        {
                            var return_v = this_param.RightOperand;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 196262, 196279);
                            return return_v;
                        }


                        bool
                        f_10899_196338_196361(Microsoft.CodeAnalysis.CSharp.BoundConversion
                        this_param)
                        {
                            var return_v = this_param.ExplicitCastInCode;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 196338, 196361);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.CSharp.BoundExpression
                        f_10899_196428_196444(Microsoft.CodeAnalysis.CSharp.BoundNullCoalescingOperator
                        this_param)
                        {
                            var return_v = this_param.LeftOperand;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 196428, 196444);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.CSharp.Conversion
                        f_10899_196387_196489(Microsoft.CodeAnalysis.CSharp.NullableWalker
                        this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                        sourceExpression, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                        sourceType, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                        destinationType, bool
                        reportMismatch)
                        {
                            var return_v = this_param.GenerateConversionForConditionalOperator(sourceExpression, sourceType, destinationType, reportMismatch: reportMismatch);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 196387, 196489);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.CSharp.BoundExpression
                        f_10899_196635_196652(Microsoft.CodeAnalysis.CSharp.BoundNullCoalescingOperator
                        this_param)
                        {
                            var return_v = this_param.RightOperand;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 196635, 196652);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.CSharp.Conversion
                        f_10899_196594_196696(Microsoft.CodeAnalysis.CSharp.NullableWalker
                        this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                        sourceExpression, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                        sourceType, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                        destinationType, bool
                        reportMismatch)
                        {
                            var return_v = this_param.GenerateConversionForConditionalOperator(sourceExpression, sourceType, destinationType, reportMismatch: reportMismatch);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 196594, 196696);
                            return return_v;
                        }

                    }
                    catch
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 195762, 196746);
                        throw;
                    }
                    finally
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 195762, 196746);
                    }
                    throw new System.Exception("Slicer error: unreachable code");
                }

                TypeSymbol getRightResultType(TypeSymbol leftType, TypeSymbol rightType)
                {
                    try
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 196762, 197019);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 196867, 196969);

                        f_10899_196867_196968(this, f_10899_196908_196924(node), leftType, rightType, reportMismatch: true);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 196987, 197004);

                        return rightType;
                        DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 196762, 197019);

                        Microsoft.CodeAnalysis.CSharp.BoundExpression
                        f_10899_196908_196924(Microsoft.CodeAnalysis.CSharp.BoundNullCoalescingOperator
                        this_param)
                        {
                            var return_v = this_param.LeftOperand;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 196908, 196924);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.CSharp.Conversion
                        f_10899_196867_196968(Microsoft.CodeAnalysis.CSharp.NullableWalker
                        this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                        sourceExpression, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                        sourceType, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                        destinationType, bool
                        reportMismatch)
                        {
                            var return_v = this_param.GenerateConversionForConditionalOperator(sourceExpression, sourceType, destinationType, reportMismatch: reportMismatch);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 196867, 196968);
                            return return_v;
                        }

                    }
                    catch
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 196762, 197019);
                        throw;
                    }
                    finally
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 196762, 197019);
                    }
                    throw new System.Exception("Slicer error: unreachable code");
                }
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 192752, 197030);

                int
                f_10899_192865_192898(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 192865, 192898);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10899_192945_192961(Microsoft.CodeAnalysis.CSharp.BoundNullCoalescingOperator
                this_param)
                {
                    var return_v = this_param.LeftOperand;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 192945, 192961);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10899_193007_193024(Microsoft.CodeAnalysis.CSharp.BoundNullCoalescingOperator
                this_param)
                {
                    var return_v = this_param.RightOperand;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 193007, 193024);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                f_10899_193068_193101(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                node)
                {
                    var return_v = this_param.VisitRvalueWithState(node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 193068, 193101);
                    return return_v;
                }


                bool
                f_10899_193162_193189(Microsoft.CodeAnalysis.CSharp.BoundExpression
                node)
                {
                    var return_v = IsConstantNull(node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 193162, 193189);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                f_10899_193237_193271(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                node)
                {
                    var return_v = this_param.VisitRvalueWithState(node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 193237, 193271);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                f_10899_193514_193523(Microsoft.CodeAnalysis.CSharp.BoundNullCoalescingOperator
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 193514, 193523);
                    return return_v;
                }


                int
                f_10899_193473_193544(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundNullCoalescingOperator
                expression, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                type)
                {
                    this_param.SetResultType((Microsoft.CodeAnalysis.CSharp.BoundExpression)expression, type);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 193473, 193544);
                    return 0;
                }


                int
                f_10899_193657_193707(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                expression, ref Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState
                state)
                {
                    this_param.LearnFromNonNullTest(expression, ref state);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 193657, 193707);
                    return 0;
                }


                int
                f_10899_193722_193768(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                expression, ref Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState
                state)
                {
                    this_param.LearnFromNullTest(expression, ref state);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 193722, 193768);
                    return 0;
                }


                Microsoft.CodeAnalysis.ConstantValue?
                f_10899_193807_193832(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.ConstantValue;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 193807, 193832);
                    return return_v;
                }


                int
                f_10899_193907_193923(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param)
                {
                    this_param.SetUnreachable();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 193907, 193923);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                f_10899_194153_194187(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                node)
                {
                    var return_v = this_param.VisitRvalueWithState(node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 194153, 194187);
                    return return_v;
                }


                bool
                f_10899_194204_194241(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, ref Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState
                self, ref Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState
                other)
                {
                    var return_v = this_param.Join(ref self, ref other);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 194204, 194241);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ConstantValue?
                f_10899_194262_194288(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.ConstantValue;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 194262, 194288);
                    return return_v;
                }


                bool?
                f_10899_194262_194299_M(bool?
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 194262, 194299);
                    return return_v;
                }


                int
                f_10899_194342_194349(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param)
                {
                    this_param.Split();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 194342, 194349);
                    return 0;
                }


                Microsoft.CodeAnalysis.ConstantValue
                f_10899_194372_194398(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.ConstantValue;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 194372, 194398);
                    return return_v;
                }


                bool
                f_10899_194372_194411(Microsoft.CodeAnalysis.ConstantValue
                this_param)
                {
                    var return_v = this_param.BooleanValue;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 194372, 194411);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundNullCoalescingOperatorResultKind
                f_10899_194765_194788(Microsoft.CodeAnalysis.CSharp.BoundNullCoalescingOperator
                this_param)
                {
                    var return_v = this_param.OperatorResultKind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 194765, 194788);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                f_10899_194882_194891(Microsoft.CodeAnalysis.CSharp.BoundNullCoalescingOperator
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 194882, 194891);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                f_10899_194960_195012(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                leftType, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                rightType)
                {
                    var return_v = getLeftResultType(leftType, rightType);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 194960, 195012);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                f_10899_195108_195138(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                type)
                {
                    var return_v = type.StrippedType();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 195108, 195138);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                f_10899_195090_195157(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                leftType, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                rightType)
                {
                    var return_v = getLeftResultType(leftType, rightType);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 195090, 195157);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                f_10899_195227_195280(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                leftType, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                rightType)
                {
                    var return_v = getRightResultType(leftType, rightType);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 195227, 195280);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                f_10899_195382_195412(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                type)
                {
                    var return_v = type.StrippedType();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 195382, 195412);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                f_10899_195363_195431(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                leftType, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                rightType)
                {
                    var return_v = getRightResultType(leftType, rightType);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 195363, 195431);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundNullCoalescingOperatorResultKind
                f_10899_195589_195612(Microsoft.CodeAnalysis.CSharp.BoundNullCoalescingOperator
                this_param)
                {
                    var return_v = this_param.OperatorResultKind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 195589, 195612);
                    return return_v;
                }


                System.Exception
                f_10899_195554_195613(Microsoft.CodeAnalysis.CSharp.BoundNullCoalescingOperatorResultKind
                o)
                {
                    var return_v = ExceptionUtilities.UnexpectedValue((object)o);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 195554, 195613);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                f_10899_195666_195718(Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                rightResult, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                resultType)
                {
                    var return_v = GetNullCoalescingResultType(rightResult, resultType);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 195666, 195718);
                    return return_v;
                }


                int
                f_10899_195646_195719(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundNullCoalescingOperator
                expression, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                type)
                {
                    this_param.SetResultType((Microsoft.CodeAnalysis.CSharp.BoundExpression)expression, type);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 195646, 195719);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 192752, 197030);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 192752, 197030);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private static TypeWithState GetNullCoalescingResultType(TypeWithState rightResult, TypeSymbol resultType)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterStaticMethod(10899, 197042, 197301);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 197173, 197223);

                NullableFlowState
                resultState = rightResult.State
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 197237, 197290);

                return TypeWithState.Create(resultType, resultState);
                DynAbs.Tracing.TraceSender.TraceExitStaticMethod(10899, 197042, 197301);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 197042, 197301);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 197042, 197301);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override BoundNode? VisitConditionalAccess(BoundConditionalAccess node)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 197313, 199586);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 197416, 197450);

                f_10899_197416_197449(!IsConditionalState);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 197466, 197495);

                var
                receiver = f_10899_197481_197494(node)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 197509, 197544);

                _ = f_10899_197513_197543(this, receiver);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 197558, 197612);

                _currentConditionalReceiverVisitResult = _visitResult;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 197626, 197689);

                var
                previousConditionalAccessSlot = _lastConditionalAccessSlot
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 197705, 197744);

                var
                receiverState = this.State.Clone()
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 197758, 198611) || true) && (f_10899_197762_197791(f_10899_197777_197790(node)))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 197758, 198611);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 197825, 197842);

                    f_10899_197825_197841(this);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 197860, 197892);

                    _lastConditionalAccessSlot = -1;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 197758, 198611);
                }

                else

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 197758, 198611);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 198122, 198169);

                    f_10899_198122_198168(this, receiver, ref receiverState);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 198187, 198234);

                    f_10899_198187_198233(this, receiver, ref this.State);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 198252, 198303);

                    var
                    nextConditionalAccessSlot = f_10899_198284_198302(this, receiver)
                    ;

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 198321, 198521) || true) && (nextConditionalAccessSlot > 0 && (DynAbs.Tracing.TraceSender.Expression_True(10899, 198325, 198397) && f_10899_198372_198389(DynAbs.Tracing.TraceSender.TraceConditionalAccessExpression(f_10899_198358_198371(receiver), 10899, 198358, 198389)) == true))
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 198321, 198521);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 198420, 198521);

                        nextConditionalAccessSlot = f_10899_198448_198520(this, f_10899_198472_198485(receiver), nextConditionalAccessSlot, out _);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 198321, 198521);
                    }
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 198541, 198596);

                    _lastConditionalAccessSlot = nextConditionalAccessSlot;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 197758, 198611);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 198627, 198709);

                var
                accessTypeWithAnnotations = f_10899_198659_198708(this, f_10899_198686_198707(node))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 198723, 198778);

                TypeSymbol
                accessType = accessTypeWithAnnotations.Type
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 198792, 198832);

                f_10899_198792_198831(this, ref this.State, ref receiverState);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 198848, 198872);

                var
                oldType = f_10899_198862_198871(node)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 198886, 199126);

                var
                resultType =
                (DynAbs.Tracing.TraceSender.Conditional_F1(10899, 198920, 198965) || ((f_10899_198920_198940(oldType) || (DynAbs.Tracing.TraceSender.Expression_False(10899, 198920, 198965) || f_10899_198944_198965(oldType)) && DynAbs.Tracing.TraceSender.Conditional_F2(10899, 198968, 198975)) || DynAbs.Tracing.TraceSender.Conditional_F3(10899, 198995, 199125))) ? oldType : (DynAbs.Tracing.TraceSender.Conditional_F1(10899, 198995, 199051) || ((f_10899_198995_199019(oldType) && (DynAbs.Tracing.TraceSender.Expression_True(10899, 198995, 199051) && !f_10899_199024_199051(accessType)) && DynAbs.Tracing.TraceSender.Conditional_F2(10899, 199054, 199095)) || DynAbs.Tracing.TraceSender.Conditional_F3(10899, 199115, 199125))) ? f_10899_199054_199095(this, accessTypeWithAnnotations) : accessType
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 199327, 199413);

                f_10899_199327_199412(this, node, TypeWithState.Create(resultType, NullableFlowState.MaybeDefault));
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 199427, 199476);

                _currentConditionalReceiverVisitResult = default;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 199490, 199549);

                _lastConditionalAccessSlot = previousConditionalAccessSlot;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 199563, 199575);

                return null;
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 197313, 199586);

                int
                f_10899_197416_197449(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 197416, 197449);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10899_197481_197494(Microsoft.CodeAnalysis.CSharp.BoundConditionalAccess
                this_param)
                {
                    var return_v = this_param.Receiver;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 197481, 197494);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                f_10899_197513_197543(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                node)
                {
                    var return_v = this_param.VisitRvalueWithState(node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 197513, 197543);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10899_197777_197790(Microsoft.CodeAnalysis.CSharp.BoundConditionalAccess
                this_param)
                {
                    var return_v = this_param.Receiver;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 197777, 197790);
                    return return_v;
                }


                bool
                f_10899_197762_197791(Microsoft.CodeAnalysis.CSharp.BoundExpression
                node)
                {
                    var return_v = IsConstantNull(node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 197762, 197791);
                    return return_v;
                }


                int
                f_10899_197825_197841(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param)
                {
                    this_param.SetUnreachable();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 197825, 197841);
                    return 0;
                }


                int
                f_10899_198122_198168(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                expression, ref Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState
                state)
                {
                    this_param.LearnFromNullTest(expression, ref state);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 198122, 198168);
                    return 0;
                }


                int
                f_10899_198187_198233(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                expression, ref Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState
                state)
                {
                    this_param.LearnFromNonNullTest(expression, ref state);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 198187, 198233);
                    return 0;
                }


                int
                f_10899_198284_198302(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                node)
                {
                    var return_v = this_param.MakeSlot(node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 198284, 198302);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?
                f_10899_198358_198371(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 198358, 198371);
                    return return_v;
                }


                bool?
                f_10899_198372_198389(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                type)
                {
                    var return_v = type?.IsNullableType();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 198372, 198389);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                f_10899_198472_198485(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 198472, 198485);
                    return return_v;
                }


                int
                f_10899_198448_198520(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                containingType, int
                containingSlot, out Microsoft.CodeAnalysis.CSharp.Symbol?
                valueProperty)
                {
                    var return_v = this_param.GetNullableOfTValueSlot(containingType, containingSlot, out valueProperty);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 198448, 198520);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10899_198686_198707(Microsoft.CodeAnalysis.CSharp.BoundConditionalAccess
                this_param)
                {
                    var return_v = this_param.AccessExpression;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 198686, 198707);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                f_10899_198659_198708(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                node)
                {
                    var return_v = this_param.VisitLvalueWithAnnotations(node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 198659, 198708);
                    return return_v;
                }


                bool
                f_10899_198792_198831(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, ref Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState
                self, ref Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState
                other)
                {
                    var return_v = this_param.Join(ref self, ref other);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 198792, 198831);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                f_10899_198862_198871(Microsoft.CodeAnalysis.CSharp.BoundConditionalAccess
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 198862, 198871);
                    return return_v;
                }


                bool
                f_10899_198920_198940(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                type)
                {
                    var return_v = type.IsVoidType();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 198920, 198940);
                    return return_v;
                }


                bool
                f_10899_198944_198965(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                type)
                {
                    var return_v = type.IsErrorType();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 198944, 198965);
                    return return_v;
                }


                bool
                f_10899_198995_199019(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                type)
                {
                    var return_v = type.IsNullableType();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 198995, 199019);
                    return return_v;
                }


                bool
                f_10899_199024_199051(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                type)
                {
                    var return_v = type.IsNullableType();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 199024, 199051);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                f_10899_199054_199095(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                underlying)
                {
                    var return_v = this_param.MakeNullableOf(underlying);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 199054, 199095);
                    return return_v;
                }


                int
                f_10899_199327_199412(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundConditionalAccess
                expression, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                type)
                {
                    this_param.SetResultType((Microsoft.CodeAnalysis.CSharp.BoundExpression)expression, type);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 199327, 199412);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 197313, 199586);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 197313, 199586);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        protected override BoundNode? VisitConditionalOperatorCore(
                    BoundExpression node,
                    bool isRef,
                    BoundExpression condition,
                    BoundExpression originalConsequence,
                    BoundExpression originalAlternative)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 199598, 209623);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 199882, 199908);

                f_10899_199882_199907(this, condition);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 199922, 199964);

                var
                consequenceState = this.StateWhenTrue
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 199978, 200021);

                var
                alternativeState = this.StateWhenFalse
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 200037, 200069);

                TypeWithState
                consequenceRValue
                = default(TypeWithState);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 200083, 200115);

                TypeWithState
                alternativeRValue
                = default(TypeWithState);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 200131, 201633) || true) && (isRef)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 200131, 201633);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 200174, 200212);

                    TypeWithAnnotations
                    consequenceLValue
                    = default(TypeWithAnnotations);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 200230, 200268);

                    TypeWithAnnotations
                    alternativeLValue
                    = default(TypeWithAnnotations);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 200288, 200395);

                    (consequenceLValue, consequenceRValue) = f_10899_200329_200394(consequenceState, originalConsequence);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 200413, 200443);

                    consequenceState = this.State;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 200461, 200568);

                    (alternativeLValue, alternativeRValue) = f_10899_200502_200567(alternativeState, originalAlternative);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 200586, 200629);

                    f_10899_200586_200628(this, ref this.State, ref consequenceState);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 200649, 200729);

                    TypeSymbol?
                    refResultType = f_10899_200677_200728_I(DynAbs.Tracing.TraceSender.TraceConditionalAccessExpression(f_10899_200677_200686(node), 10899, 200677, 200728).SetUnknownNullabilityForReferenceTypes())
                    ;

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 200747, 201216) || true) && (f_10899_200751_200810(consequenceLValue, alternativeLValue))
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 200747, 201216);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 200901, 200990);

                        f_10899_200901_200989(this, node.Syntax, consequenceLValue, alternativeLValue);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 200747, 201216);
                    }

                    else
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 200747, 201216);

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 201032, 201216) || true) && (f_10899_201036_201051_M(!node.HasErrors))
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 201032, 201216);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 201093, 201197);

                            refResultType = f_10899_201109_201196(consequenceRValue.Type!, alternativeRValue.Type, VarianceKind.None);
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 201032, 201216);
                        }
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 200747, 201216);
                    }
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 201236, 201351);

                    var
                    lValueAnnotation = f_10899_201259_201350(consequenceLValue.NullableAnnotation, alternativeLValue.NullableAnnotation)
                    ;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 201369, 201441);

                    var
                    rValueState = f_10899_201387_201440(consequenceRValue.State, alternativeRValue.State)
                    ;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 201461, 201588);

                    f_10899_201461_201587(this, node, TypeWithState.Create(refResultType, rValueState), TypeWithAnnotations.Create(refResultType, lValueAnnotation));
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 201606, 201618);

                    return null;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 200131, 201633);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 201649, 201677);

                BoundExpression
                consequence
                = default(BoundExpression);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 201691, 201719);

                BoundExpression
                alternative
                = default(BoundExpression);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 201733, 201766);

                Conversion
                consequenceConversion
                = default(Conversion);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 201780, 201813);

                Conversion
                alternativeConversion
                = default(Conversion);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 201827, 201856);

                bool
                consequenceEndReachable
                = default(bool);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 201870, 201899);

                bool
                alternativeEndReachable
                = default(bool);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 202008, 203552) || true) && (f_10899_202012_202039_M(!alternativeState.Reachable))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 202008, 203552);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 202073, 202194);

                    (alternative, alternativeConversion, alternativeRValue) = f_10899_202131_202193(alternativeState, originalAlternative);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 202212, 202333);

                    (consequence, consequenceConversion, consequenceRValue) = f_10899_202270_202332(consequenceState, originalConsequence);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 202351, 202383);

                    alternativeEndReachable = false;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 202401, 202441);

                    consequenceEndReachable = f_10899_202427_202440(this);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 202008, 203552);
                }

                else
                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 202008, 203552);

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 202475, 203552) || true) && (f_10899_202479_202506_M(!consequenceState.Reachable))
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 202475, 203552);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 202540, 202661);

                        (consequence, consequenceConversion, consequenceRValue) = f_10899_202598_202660(consequenceState, originalConsequence);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 202679, 202800);

                        (alternative, alternativeConversion, alternativeRValue) = f_10899_202737_202799(alternativeState, originalAlternative);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 202818, 202850);

                        consequenceEndReachable = false;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 202868, 202908);

                        alternativeEndReachable = f_10899_202894_202907(this);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 202475, 203552);
                    }

                    else

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 202475, 203552);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 202974, 203095);

                        (consequence, consequenceConversion, consequenceRValue) = f_10899_203032_203094(consequenceState, originalConsequence);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 203113, 203123);

                        f_10899_203113_203122(this);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 203141, 203171);

                        consequenceState = this.State;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 203189, 203242);

                        consequenceEndReachable = consequenceState.Reachable;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 203262, 203383);

                        (alternative, alternativeConversion, alternativeRValue) = f_10899_203320_203382(alternativeState, originalAlternative);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 203401, 203411);

                        f_10899_203401_203410(this);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 203429, 203476);

                        alternativeEndReachable = this.State.Reachable;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 203494, 203537);

                        f_10899_203494_203536(this, ref this.State, ref consequenceState);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 202475, 203552);
                    }
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 202008, 203552);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 203568, 203591);

                TypeSymbol?
                resultType
                = default(TypeSymbol?);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 203605, 204926) || true) && (f_10899_203609_203623(node) || (DynAbs.Tracing.TraceSender.Expression_False(10899, 203609, 203684) || node is BoundConditionalOperator { WasTargetTyped: true }))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 203605, 204926);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 203718, 203736);

                    resultType = null;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 203605, 204926);
                }

                else

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 203605, 204926);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 204373, 204510);

                    BoundExpression
                    consequencePlaceholder = f_10899_204414_204509(consequence, consequenceRValue.ToTypeWithAnnotations(compilation))
                    ;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 204528, 204665);

                    BoundExpression
                    alternativePlaceholder = f_10899_204569_204664(alternative, alternativeRValue.ToTypeWithAnnotations(compilation))
                    ;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 204683, 204734);

                    HashSet<DiagnosticInfo>?
                    useSiteDiagnostics = null
                    ;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 204752, 204911);

                    resultType = f_10899_204765_204910(consequencePlaceholder, alternativePlaceholder, _conversions, out _, ref useSiteDiagnostics);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 203605, 204926);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 204942, 204972);

                NullableFlowState
                resultState
                = default(NullableFlowState);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 204986, 206761) || true) && (resultType is null)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 204986, 206761);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 205042, 205107);

                    resultType = f_10899_205055_205106_I(DynAbs.Tracing.TraceSender.TraceConditionalAccessExpression(f_10899_205055_205064(node), 10899, 205055, 205106).SetUnknownNullabilityForReferenceTypes());
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 205125, 205193);

                    resultState = f_10899_205139_205192(consequenceRValue.State, alternativeRValue.State);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 205213, 205285);

                    var
                    resultTypeWithState = TypeWithState.Create(resultType, resultState)
                    ;

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 205305, 205523) || true) && (consequence != originalConsequence)
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 205305, 205523);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 205385, 205504);

                        f_10899_205385_205503(this, resultTypeWithState, originalConsequence, consequence);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 205305, 205523);
                    }

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 205543, 205761) || true) && (alternative != originalAlternative)
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 205543, 205761);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 205623, 205742);

                        f_10899_205623_205741(this, resultTypeWithState, originalAlternative, alternative);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 205543, 205761);
                    }
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 204986, 206761);
                }

                else

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 204986, 206761);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 205827, 205898);

                    var
                    resultTypeWithAnnotations = TypeWithAnnotations.Create(resultType)
                    ;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 205918, 206269);

                    TypeWithState
                    convertedConsequenceResult = f_10899_205961_206268(originalConsequence, consequence, consequenceConversion, resultTypeWithAnnotations, consequenceRValue, consequenceState, consequenceEndReachable)
                    ;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 206289, 206640);

                    TypeWithState
                    convertedAlternativeResult = f_10899_206332_206639(originalAlternative, alternative, alternativeConversion, resultTypeWithAnnotations, alternativeRValue, alternativeState, alternativeEndReachable)
                    ;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 206660, 206746);

                    resultState = f_10899_206674_206745(convertedConsequenceResult.State, convertedAlternativeResult.State);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 204986, 206761);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 206777, 206844);

                f_10899_206777_206843(this, node, TypeWithState.Create(resultType, resultState));
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 206858, 206870);

                return null;

                (BoundExpression, Conversion, TypeWithState) visitConditionalOperand(LocalState state, BoundExpression operand)
                {
                    try
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 206886, 207512);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 207030, 207052);

                        Conversion
                        conversion
                        = default(Conversion);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 207070, 207086);

                        f_10899_207070_207085(this, state);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 207104, 207125);

                        f_10899_207104_207124(!isRef);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 207145, 207181);

                        BoundExpression
                        operandNoConversion
                        = default(BoundExpression);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 207199, 207296);

                        (operandNoConversion, conversion) = f_10899_207235_207295(operand, includeExplicitConversions: false);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 207314, 207381);

                        f_10899_207314_207380(this, operand, operandNoConversion);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 207399, 207426);

                        f_10899_207399_207425(this, operandNoConversion);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 207444, 207497);

                        return (operandNoConversion, conversion, f_10899_207485_207495());
                        DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 206886, 207512);

                        int
                        f_10899_207070_207085(Microsoft.CodeAnalysis.CSharp.NullableWalker
                        this_param, Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState
                        newState)
                        {
                            this_param.SetState(newState);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 207070, 207085);
                            return 0;
                        }


                        int
                        f_10899_207104_207124(bool
                        condition)
                        {
                            Debug.Assert(condition);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 207104, 207124);
                            return 0;
                        }


                        (Microsoft.CodeAnalysis.CSharp.BoundExpression expression, Microsoft.CodeAnalysis.CSharp.Conversion conversion)
                        f_10899_207235_207295(Microsoft.CodeAnalysis.CSharp.BoundExpression
                        expr, bool
                        includeExplicitConversions)
                        {
                            var return_v = RemoveConversion(expr, includeExplicitConversions: includeExplicitConversions);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 207235, 207295);
                            return return_v;
                        }


                        int
                        f_10899_207314_207380(Microsoft.CodeAnalysis.CSharp.NullableWalker
                        this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                        conversionExpression, Microsoft.CodeAnalysis.CSharp.BoundExpression
                        convertedNode)
                        {
                            this_param.SnapshotWalkerThroughConversionGroup(conversionExpression, convertedNode);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 207314, 207380);
                            return 0;
                        }


                        Microsoft.CodeAnalysis.CSharp.BoundNode?
                        f_10899_207399_207425(Microsoft.CodeAnalysis.CSharp.NullableWalker
                        this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                        node)
                        {
                            var return_v = this_param.Visit((Microsoft.CodeAnalysis.CSharp.BoundNode)node);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 207399, 207425);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                        f_10899_207485_207495()
                        {
                            var return_v = ResultType;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 207485, 207495);
                            return return_v;
                        }

                    }
                    catch
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 206886, 207512);
                        throw;
                    }
                    finally
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 206886, 207512);
                    }
                    throw new System.Exception("Slicer error: unreachable code");
                }

                (TypeWithAnnotations LValueType, TypeWithState RValueType) visitConditionalRefOperand(LocalState state, BoundExpression operand)
                {
                    try
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 207528, 207895);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 207689, 207705);

                        f_10899_207689_207704(this, state);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 207723, 207743);

                        f_10899_207723_207742(isRef);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 207761, 207830);

                        TypeWithAnnotations
                        lValueType = f_10899_207794_207829(this, operand)
                        ;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 207848, 207880);

                        return (lValueType, f_10899_207868_207878());
                        DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 207528, 207895);

                        int
                        f_10899_207689_207704(Microsoft.CodeAnalysis.CSharp.NullableWalker
                        this_param, Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState
                        newState)
                        {
                            this_param.SetState(newState);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 207689, 207704);
                            return 0;
                        }


                        int
                        f_10899_207723_207742(bool
                        condition)
                        {
                            Debug.Assert(condition);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 207723, 207742);
                            return 0;
                        }


                        Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                        f_10899_207794_207829(Microsoft.CodeAnalysis.CSharp.NullableWalker
                        this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                        node)
                        {
                            var return_v = this_param.VisitLvalueWithAnnotations(node);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 207794, 207829);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                        f_10899_207868_207878()
                        {
                            var return_v = ResultType;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 207868, 207878);
                            return return_v;
                        }

                    }
                    catch
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 207528, 207895);
                        throw;
                    }
                    finally
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 207528, 207895);
                    }
                    throw new System.Exception("Slicer error: unreachable code");
                }

                TypeWithState convertResult(
                                BoundExpression node,
                                BoundExpression operand,
                                Conversion conversion,
                                TypeWithAnnotations targetType,
                                TypeWithState operandType,
                                LocalState state,
                                bool isReachable)
                {
                    try
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 207911, 209612);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 208256, 208284);

                        var
                        savedState = this.State
                        ;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 208302, 208321);

                        this.State = state;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 208341, 208396);

                        bool
                        previousDisabledDiagnostics = _disableDiagnostics
                        ;

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 208739, 208843) || true) && (!isReachable)
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 208739, 208843);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 208797, 208824);

                            _disableDiagnostics = true;
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 208739, 208843);
                        }
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 208863, 209327);

                        var
                        resultType = f_10899_208880_209326(this, f_10899_208918_208958(node, operand), operand, conversion, targetType, operandType, checkConversion: true, fromExplicitCast: false, useLegacyWarnings: false, AssignmentKind.Assignment, reportTopLevelWarnings: false)
                        ;

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 209347, 209517) || true) && (!isReachable)
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 209347, 209517);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 209405, 209426);

                            resultType = default;
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 209448, 209498);

                            _disableDiagnostics = previousDisabledDiagnostics;
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 209347, 209517);
                        }
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 209535, 209559);

                        this.State = savedState;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 209579, 209597);

                        return resultType;
                        DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 207911, 209612);

                        Microsoft.CodeAnalysis.CSharp.BoundConversion?
                        f_10899_208918_208958(Microsoft.CodeAnalysis.CSharp.BoundExpression
                        conversionOpt, Microsoft.CodeAnalysis.CSharp.BoundExpression
                        convertedNode)
                        {
                            var return_v = GetConversionIfApplicable(conversionOpt, convertedNode);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 208918, 208958);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                        f_10899_208880_209326(Microsoft.CodeAnalysis.CSharp.NullableWalker
                        this_param, Microsoft.CodeAnalysis.CSharp.BoundConversion?
                        conversionOpt, Microsoft.CodeAnalysis.CSharp.BoundExpression
                        conversionOperand, Microsoft.CodeAnalysis.CSharp.Conversion
                        conversion, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                        targetTypeWithNullability, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                        operandType, bool
                        checkConversion, bool
                        fromExplicitCast, bool
                        useLegacyWarnings, Microsoft.CodeAnalysis.CSharp.NullableWalker.AssignmentKind
                        assignmentKind, bool
                        reportTopLevelWarnings)
                        {
                            var return_v = this_param.VisitConversion(conversionOpt, conversionOperand, conversion, targetTypeWithNullability, operandType, checkConversion: checkConversion, fromExplicitCast: fromExplicitCast, useLegacyWarnings: useLegacyWarnings, assignmentKind, reportTopLevelWarnings: reportTopLevelWarnings);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 208880, 209326);
                            return return_v;
                        }

                    }
                    catch
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 207911, 209612);
                        throw;
                    }
                    finally
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 207911, 209612);
                    }
                    throw new System.Exception("Slicer error: unreachable code");
                }
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 199598, 209623);

                int
                f_10899_199882_199907(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                node)
                {
                    this_param.VisitCondition(node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 199882, 199907);
                    return 0;
                }


                (Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations LValueType, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState RValueType)
                f_10899_200329_200394(Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState
                state, Microsoft.CodeAnalysis.CSharp.BoundExpression
                operand)
                {
                    var return_v = visitConditionalRefOperand(state, operand);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 200329, 200394);
                    return return_v;
                }


                (Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations LValueType, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState RValueType)
                f_10899_200502_200567(Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState
                state, Microsoft.CodeAnalysis.CSharp.BoundExpression
                operand)
                {
                    var return_v = visitConditionalRefOperand(state, operand);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 200502, 200567);
                    return return_v;
                }


                bool
                f_10899_200586_200628(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, ref Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState
                self, ref Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState
                other)
                {
                    var return_v = this_param.Join(ref self, ref other);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 200586, 200628);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?
                f_10899_200677_200686(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 200677, 200686);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?
                f_10899_200677_200728_I(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 200677, 200728);
                    return return_v;
                }


                bool
                f_10899_200751_200810(Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                type1, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                type2)
                {
                    var return_v = IsNullabilityMismatch(type1, type2);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 200751, 200810);
                    return return_v;
                }


                int
                f_10899_200901_200989(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.SyntaxNode
                syntaxNode, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                sourceType, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                destinationType)
                {
                    this_param.ReportNullabilityMismatchInAssignment(syntaxNode, (object)sourceType, (object)destinationType);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 200901, 200989);
                    return 0;
                }


                bool
                f_10899_201036_201051_M(bool
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 201036, 201051);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                f_10899_201109_201196(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?
                other, Microsoft.CodeAnalysis.VarianceKind
                variance)
                {
                    var return_v = this_param.MergeEquivalentTypes(other, variance);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 201109, 201196);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.NullableAnnotation
                f_10899_201259_201350(Microsoft.CodeAnalysis.CSharp.NullableAnnotation
                a, Microsoft.CodeAnalysis.CSharp.NullableAnnotation
                b)
                {
                    var return_v = a.EnsureCompatible(b);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 201259, 201350);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.NullableFlowState
                f_10899_201387_201440(Microsoft.CodeAnalysis.CSharp.NullableFlowState
                a, Microsoft.CodeAnalysis.CSharp.NullableFlowState
                b)
                {
                    var return_v = a.Join(b);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 201387, 201440);
                    return return_v;
                }


                int
                f_10899_201461_201587(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                expression, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                resultType, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                lvalueType)
                {
                    this_param.SetResult(expression, resultType, lvalueType);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 201461, 201587);
                    return 0;
                }


                bool
                f_10899_202012_202039_M(bool
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 202012, 202039);
                    return return_v;
                }


                (Microsoft.CodeAnalysis.CSharp.BoundExpression, Microsoft.CodeAnalysis.CSharp.Conversion, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState)
                f_10899_202131_202193(Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState
                state, Microsoft.CodeAnalysis.CSharp.BoundExpression
                operand)
                {
                    var return_v = visitConditionalOperand(state, operand);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 202131, 202193);
                    return return_v;
                }


                (Microsoft.CodeAnalysis.CSharp.BoundExpression, Microsoft.CodeAnalysis.CSharp.Conversion, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState)
                f_10899_202270_202332(Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState
                state, Microsoft.CodeAnalysis.CSharp.BoundExpression
                operand)
                {
                    var return_v = visitConditionalOperand(state, operand);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 202270, 202332);
                    return return_v;
                }


                bool
                f_10899_202427_202440(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param)
                {
                    var return_v = this_param.IsReachable();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 202427, 202440);
                    return return_v;
                }


                bool
                f_10899_202479_202506_M(bool
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 202479, 202506);
                    return return_v;
                }


                (Microsoft.CodeAnalysis.CSharp.BoundExpression, Microsoft.CodeAnalysis.CSharp.Conversion, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState)
                f_10899_202598_202660(Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState
                state, Microsoft.CodeAnalysis.CSharp.BoundExpression
                operand)
                {
                    var return_v = visitConditionalOperand(state, operand);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 202598, 202660);
                    return return_v;
                }


                (Microsoft.CodeAnalysis.CSharp.BoundExpression, Microsoft.CodeAnalysis.CSharp.Conversion, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState)
                f_10899_202737_202799(Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState
                state, Microsoft.CodeAnalysis.CSharp.BoundExpression
                operand)
                {
                    var return_v = visitConditionalOperand(state, operand);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 202737, 202799);
                    return return_v;
                }


                bool
                f_10899_202894_202907(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param)
                {
                    var return_v = this_param.IsReachable();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 202894, 202907);
                    return return_v;
                }


                (Microsoft.CodeAnalysis.CSharp.BoundExpression, Microsoft.CodeAnalysis.CSharp.Conversion, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState)
                f_10899_203032_203094(Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState
                state, Microsoft.CodeAnalysis.CSharp.BoundExpression
                operand)
                {
                    var return_v = visitConditionalOperand(state, operand);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 203032, 203094);
                    return return_v;
                }


                int
                f_10899_203113_203122(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param)
                {
                    this_param.Unsplit();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 203113, 203122);
                    return 0;
                }


                (Microsoft.CodeAnalysis.CSharp.BoundExpression, Microsoft.CodeAnalysis.CSharp.Conversion, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState)
                f_10899_203320_203382(Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState
                state, Microsoft.CodeAnalysis.CSharp.BoundExpression
                operand)
                {
                    var return_v = visitConditionalOperand(state, operand);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 203320, 203382);
                    return return_v;
                }


                int
                f_10899_203401_203410(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param)
                {
                    this_param.Unsplit();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 203401, 203410);
                    return 0;
                }


                bool
                f_10899_203494_203536(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, ref Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState
                self, ref Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState
                other)
                {
                    var return_v = this_param.Join(ref self, ref other);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 203494, 203536);
                    return return_v;
                }


                bool
                f_10899_203609_203623(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.HasErrors;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 203609, 203623);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10899_204414_204509(Microsoft.CodeAnalysis.CSharp.BoundExpression
                expr, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                type)
                {
                    var return_v = CreatePlaceholderIfNecessary(expr, type);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 204414, 204509);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10899_204569_204664(Microsoft.CodeAnalysis.CSharp.BoundExpression
                expr, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                type)
                {
                    var return_v = CreatePlaceholderIfNecessary(expr, type);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 204569, 204664);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                f_10899_204765_204910(Microsoft.CodeAnalysis.CSharp.BoundExpression
                expr1, Microsoft.CodeAnalysis.CSharp.BoundExpression
                expr2, Microsoft.CodeAnalysis.CSharp.Conversions
                conversions, out bool
                hadMultipleCandidates, ref System.Collections.Generic.HashSet<Microsoft.CodeAnalysis.DiagnosticInfo>?
                useSiteDiagnostics)
                {
                    var return_v = BestTypeInferrer.InferBestTypeForConditionalOperator(expr1, expr2, (Microsoft.CodeAnalysis.CSharp.ConversionsBase)conversions, out hadMultipleCandidates, ref useSiteDiagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 204765, 204910);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?
                f_10899_205055_205064(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 205055, 205064);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?
                f_10899_205055_205106_I(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 205055, 205106);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.NullableFlowState
                f_10899_205139_205192(Microsoft.CodeAnalysis.CSharp.NullableFlowState
                a, Microsoft.CodeAnalysis.CSharp.NullableFlowState
                b)
                {
                    var return_v = a.Join(b);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 205139, 205192);
                    return return_v;
                }


                int
                f_10899_205385_205503(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                resultType, Microsoft.CodeAnalysis.CSharp.BoundExpression
                conversionOpt, Microsoft.CodeAnalysis.CSharp.BoundExpression
                convertedNode)
                {
                    this_param.TrackAnalyzedNullabilityThroughConversionGroup(resultType, (Microsoft.CodeAnalysis.CSharp.BoundConversion)conversionOpt, convertedNode);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 205385, 205503);
                    return 0;
                }


                int
                f_10899_205623_205741(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                resultType, Microsoft.CodeAnalysis.CSharp.BoundExpression
                conversionOpt, Microsoft.CodeAnalysis.CSharp.BoundExpression
                convertedNode)
                {
                    this_param.TrackAnalyzedNullabilityThroughConversionGroup(resultType, (Microsoft.CodeAnalysis.CSharp.BoundConversion)conversionOpt, convertedNode);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 205623, 205741);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                f_10899_205961_206268(Microsoft.CodeAnalysis.CSharp.BoundExpression
                node, Microsoft.CodeAnalysis.CSharp.BoundExpression
                operand, Microsoft.CodeAnalysis.CSharp.Conversion
                conversion, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                targetType, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                operandType, Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState
                state, bool
                isReachable)
                {
                    var return_v = convertResult(node, operand, conversion, targetType, operandType, state, isReachable);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 205961, 206268);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                f_10899_206332_206639(Microsoft.CodeAnalysis.CSharp.BoundExpression
                node, Microsoft.CodeAnalysis.CSharp.BoundExpression
                operand, Microsoft.CodeAnalysis.CSharp.Conversion
                conversion, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                targetType, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                operandType, Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState
                state, bool
                isReachable)
                {
                    var return_v = convertResult(node, operand, conversion, targetType, operandType, state, isReachable);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 206332, 206639);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.NullableFlowState
                f_10899_206674_206745(Microsoft.CodeAnalysis.CSharp.NullableFlowState
                a, Microsoft.CodeAnalysis.CSharp.NullableFlowState
                b)
                {
                    var return_v = a.Join(b);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 206674, 206745);
                    return return_v;
                }


                int
                f_10899_206777_206843(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                expression, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                type)
                {
                    this_param.SetResultType(expression, type);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 206777, 206843);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 199598, 209623);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 199598, 209623);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private bool IsReachable()
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 209675, 209790);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 209678, 209790);
                return (DynAbs.Tracing.TraceSender.Conditional_F1(10899, 209678, 209701) || ((this.IsConditionalState && DynAbs.Tracing.TraceSender.Conditional_F2(10899, 209704, 209767)) || DynAbs.Tracing.TraceSender.Conditional_F3(10899, 209770, 209790))) ? (this.StateWhenTrue.Reachable || (DynAbs.Tracing.TraceSender.Expression_False(10899, 209705, 209766) || this.StateWhenFalse.Reachable)) : this.State.Reachable; DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 209675, 209790);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 209675, 209790);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 209675, 209790);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private static BoundExpression CreatePlaceholderIfNecessary(BoundExpression expr, TypeWithAnnotations type)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterStaticMethod(10899, 210106, 210403);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 210238, 210392);

                return (DynAbs.Tracing.TraceSender.Conditional_F1(10899, 210245, 210258) || ((f_10899_210245_210258_M(!type.HasType) && DynAbs.Tracing.TraceSender.Conditional_F2(10899, 210278, 210282)) || DynAbs.Tracing.TraceSender.Conditional_F3(10899, 210302, 210391))) ? expr : f_10899_210302_210391(expr.Syntax, expr, type.NullableAnnotation, type.Type);
                DynAbs.Tracing.TraceSender.TraceExitStaticMethod(10899, 210106, 210403);

                bool
                f_10899_210245_210258_M(bool
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 210245, 210258);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpressionWithNullability
                f_10899_210302_210391(Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.CSharp.BoundExpression
                expression, Microsoft.CodeAnalysis.CSharp.NullableAnnotation
                nullableAnnotation, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                type)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.BoundExpressionWithNullability(syntax, expression, nullableAnnotation, type);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 210302, 210391);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 210106, 210403);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 210106, 210403);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override BoundNode? VisitConditionalReceiver(BoundConditionalReceiver node)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 210415, 210898);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 210522, 210594);

                var
                rvalueType = _currentConditionalReceiverVisitResult.RValueType.Type
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 210608, 210766) || true) && (rvalueType is not null && (DynAbs.Tracing.TraceSender.Expression_True(10899, 210612, 210665) && f_10899_210638_210665(rvalueType)))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 210608, 210766);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 210699, 210751);

                    rvalueType = f_10899_210712_210750(rvalueType);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 210608, 210766);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 210780, 210861);

                f_10899_210780_210860(this, node, TypeWithState.Create(rvalueType, NullableFlowState.NotNull));
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 210875, 210887);

                return null;
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 210415, 210898);

                bool
                f_10899_210638_210665(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                type)
                {
                    var return_v = type.IsNullableType();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 210638, 210665);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                f_10899_210712_210750(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                type)
                {
                    var return_v = type.GetNullableUnderlyingType();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 210712, 210750);
                    return return_v;
                }


                int
                f_10899_210780_210860(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundConditionalReceiver
                expression, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                type)
                {
                    this_param.SetResultType((Microsoft.CodeAnalysis.CSharp.BoundExpression)expression, type);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 210780, 210860);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 210415, 210898);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 210415, 210898);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override BoundNode? VisitCall(BoundCall node)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 210910, 211194);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 211039, 211092);

                TypeWithState
                receiverType = f_10899_211068_211091(this, node)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 211106, 211157);

                f_10899_211106_211156(this, node, receiverType);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 211171, 211183);

                return null;
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 210910, 211194);

                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                f_10899_211068_211091(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundCall
                node)
                {
                    var return_v = this_param.VisitCallReceiver(node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 211068, 211091);
                    return return_v;
                }


                int
                f_10899_211106_211156(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundCall
                node, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                receiverType)
                {
                    this_param.ReinferMethodAndVisitArguments(node, receiverType);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 211106, 211156);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 210910, 211194);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 210910, 211194);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private void ReinferMethodAndVisitArguments(BoundCall node, TypeWithState receiverType)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 211206, 212453);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 211318, 211343);

                var
                method = f_10899_211331_211342(node)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 211357, 211420);

                ImmutableArray<RefKind>
                refKindsOpt = f_10899_211395_211419(node)
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 211434, 211644) || true) && (f_10899_211438_211463_M(!receiverType.HasNullType))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 211434, 211644);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 211564, 211629);

                    method = (MethodSymbol)f_10899_211587_211628(receiverType.Type, method);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 211434, 211644);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 211660, 211704);

                ImmutableArray<VisitArgumentResult>
                results
                = default(ImmutableArray<VisitArgumentResult>);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 211718, 211737);

                bool
                returnNotNull
                = default(bool);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 211751, 211972);

                (method, results, returnNotNull) = f_10899_211786_211971(this, node, f_10899_211807_211821(node), refKindsOpt, f_10899_211836_211854(method!), f_10899_211856_211876(node), f_10899_211878_211899(node), f_10899_211918_211931(node), f_10899_211933_211962(node), method);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 211988, 212040);

                f_10899_211988_212039(this, f_10899_212014_212030(node), method);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 212056, 212115);

                f_10899_212056_212114(this, method, node, receiverType, results);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 212131, 212180);

                var
                returnState = f_10899_212149_212179(this, method)
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 212194, 212305) || true) && (returnNotNull)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 212194, 212305);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 212245, 212290);

                    returnState = returnState.WithNotNullState();
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 212194, 212305);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 212321, 212384);

                f_10899_212321_212383(this, node, returnState, f_10899_212350_212382(method));
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 212398, 212442);

                f_10899_212398_212441(this, node, f_10899_212421_212432(node), method);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 211206, 212453);

                Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                f_10899_211331_211342(Microsoft.CodeAnalysis.CSharp.BoundCall
                this_param)
                {
                    var return_v = this_param.Method;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 211331, 211342);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.RefKind>
                f_10899_211395_211419(Microsoft.CodeAnalysis.CSharp.BoundCall
                this_param)
                {
                    var return_v = this_param.ArgumentRefKindsOpt;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 211395, 211419);
                    return return_v;
                }


                bool
                f_10899_211438_211463_M(bool
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 211438, 211463);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbol
                f_10899_211587_211628(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                type, Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                symbol)
                {
                    var return_v = AsMemberOfType(type, (Microsoft.CodeAnalysis.CSharp.Symbol)symbol);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 211587, 211628);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                f_10899_211807_211821(Microsoft.CodeAnalysis.CSharp.BoundCall
                this_param)
                {
                    var return_v = this_param.Arguments;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 211807, 211821);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol>
                f_10899_211836_211854(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                this_param)
                {
                    var return_v = this_param.Parameters;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 211836, 211854);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<int>
                f_10899_211856_211876(Microsoft.CodeAnalysis.CSharp.BoundCall
                this_param)
                {
                    var return_v = this_param.ArgsToParamsOpt;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 211856, 211876);
                    return return_v;
                }


                Microsoft.CodeAnalysis.BitVector
                f_10899_211878_211899(Microsoft.CodeAnalysis.CSharp.BoundCall
                this_param)
                {
                    var return_v = this_param.DefaultArguments;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 211878, 211899);
                    return return_v;
                }


                bool
                f_10899_211918_211931(Microsoft.CodeAnalysis.CSharp.BoundCall
                this_param)
                {
                    var return_v = this_param.Expanded;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 211918, 211931);
                    return return_v;
                }


                bool
                f_10899_211933_211962(Microsoft.CodeAnalysis.CSharp.BoundCall
                this_param)
                {
                    var return_v = this_param.InvokedAsExtensionMethod;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 211933, 211962);
                    return return_v;
                }


                (Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol? method, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.NullableWalker.VisitArgumentResult> results, bool returnNotNull)
                f_10899_211786_211971(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundCall
                node, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                arguments, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.RefKind>
                refKindsOpt, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol>
                parametersOpt, System.Collections.Immutable.ImmutableArray<int>
                argsToParamsOpt, Microsoft.CodeAnalysis.BitVector
                defaultArguments, bool
                expanded, bool
                invokedAsExtensionMethod, Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                method)
                {
                    var return_v = this_param.VisitArguments((Microsoft.CodeAnalysis.CSharp.BoundNode)node, arguments, refKindsOpt, parametersOpt, argsToParamsOpt, defaultArguments, expanded, invokedAsExtensionMethod, method);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 211786, 211971);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression?
                f_10899_212014_212030(Microsoft.CodeAnalysis.CSharp.BoundCall
                this_param)
                {
                    var return_v = this_param.ReceiverOpt;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 212014, 212030);
                    return return_v;
                }


                int
                f_10899_211988_212039(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression?
                receiverOpt, Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                method)
                {
                    this_param.ApplyMemberPostConditions(receiverOpt, method);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 211988, 212039);
                    return 0;
                }


                int
                f_10899_212056_212114(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                method, Microsoft.CodeAnalysis.CSharp.BoundCall
                node, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                receiverType, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.NullableWalker.VisitArgumentResult>
                results)
                {
                    this_param.LearnFromEqualsMethod(method, node, receiverType, results);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 212056, 212114);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                f_10899_212149_212179(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                method)
                {
                    var return_v = this_param.GetReturnTypeWithState(method);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 212149, 212179);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                f_10899_212350_212382(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                this_param)
                {
                    var return_v = this_param.ReturnTypeWithAnnotations;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 212350, 212382);
                    return return_v;
                }


                int
                f_10899_212321_212383(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundCall
                expression, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                resultType, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                lvalueType)
                {
                    this_param.SetResult((Microsoft.CodeAnalysis.CSharp.BoundExpression)expression, resultType, lvalueType);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 212321, 212383);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                f_10899_212421_212432(Microsoft.CodeAnalysis.CSharp.BoundCall
                this_param)
                {
                    var return_v = this_param.Method;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 212421, 212432);
                    return return_v;
                }


                int
                f_10899_212398_212441(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundCall
                node, Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                originalSymbol, Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                updatedSymbol)
                {
                    this_param.SetUpdatedSymbol((Microsoft.CodeAnalysis.CSharp.BoundNode)node, (Microsoft.CodeAnalysis.CSharp.Symbol)originalSymbol, (Microsoft.CodeAnalysis.CSharp.Symbol)updatedSymbol);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 212398, 212441);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 211206, 212453);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 211206, 212453);
            }
        }

        private void LearnFromEqualsMethod(MethodSymbol method, BoundCall node, TypeWithState receiverType, ImmutableArray<VisitArgumentResult> results)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 212465, 221526);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 212659, 212702);

                var
                parameterCount = f_10899_212680_212701(method)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 212716, 212747);

                var
                arguments = f_10899_212732_212746(node)
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 212761, 213401) || true) && (f_10899_212765_212779(node) || (DynAbs.Tracing.TraceSender.Expression_False(10899, 212765, 212844) || (parameterCount != 1 && (DynAbs.Tracing.TraceSender.Expression_True(10899, 212801, 212843) && parameterCount != 2))
                ) || (DynAbs.Tracing.TraceSender.Expression_False(10899, 212765, 212899) || parameterCount != arguments.Length
                ) || (DynAbs.Tracing.TraceSender.Expression_False(10899, 212765, 212960) || f_10899_212920_212937(method) != MethodKind.Ordinary
                ) || (DynAbs.Tracing.TraceSender.Expression_False(10899, 212765, 213040) || f_10899_212981_213010(f_10899_212981_212998(method)) != SpecialType.System_Boolean
                ) || (DynAbs.Tracing.TraceSender.Expression_False(10899, 212765, 213345) || (f_10899_213062_213073(method) != f_10899_213077_213142(SpecialMember.System_Object__Equals).Name
                && (DynAbs.Tracing.TraceSender.Expression_True(10899, 213062, 213266) && f_10899_213172_213183(method) != f_10899_213187_213261(SpecialMember.System_Object__ReferenceEquals).Name
                ) && (DynAbs.Tracing.TraceSender.Expression_True(10899, 213062, 213344) && !f_10899_213292_213344(method)))))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 212761, 213401);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 213379, 213386);

                    return;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 212761, 213401);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 213417, 213659);

                var
                isStaticEqualsMethod = f_10899_213444_213540(method, f_10899_213458_213539(compilation, SpecialMember.System_Object__EqualsObjectObject)) || (DynAbs.Tracing.TraceSender.Expression_False(10899, 213444, 213658) || f_10899_213565_213658(method, f_10899_213579_213657(compilation, SpecialMember.System_Object__ReferenceEquals)))
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 213673, 214104) || true) && (isStaticEqualsMethod || (DynAbs.Tracing.TraceSender.Expression_False(10899, 213677, 213871) || f_10899_213718_213871(compilation, method, receiverType.Type, WellKnownMember.System_Collections_Generic_IEqualityComparer_T__Equals)))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 213673, 214104);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 213905, 213941);

                    f_10899_213905_213940(arguments.Length == 2);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 213959, 214064);

                    f_10899_213959_214063(arguments[0], results[0].RValueType, arguments[1], results[1].RValueType);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 214082, 214089);

                    return;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 213673, 214104);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 214120, 214309);

                var
                isObjectEqualsMethodOrOverride = f_10899_214157_214308(f_10899_214157_214212(method, accessingTypeOpt: null), f_10899_214238_214307(compilation, SpecialMember.System_Object__Equals))
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 214323, 214800) || true) && (f_10899_214327_214343(node) is BoundExpression receiver && (DynAbs.Tracing.TraceSender.Expression_True(10899, 214327, 214580) && (isObjectEqualsMethodOrOverride || (DynAbs.Tracing.TraceSender.Expression_False(10899, 214397, 214579) || f_10899_214453_214579(compilation, method, receiverType.Type, WellKnownMember.System_IEquatable_T__Equals)))))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 214323, 214800);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 214614, 214650);

                    f_10899_214614_214649(arguments.Length == 1);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 214668, 214760);

                    f_10899_214668_214759(receiver, receiverType, arguments[0], results[0].RValueType);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 214778, 214785);

                    return;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 214323, 214800);
                }

                static bool anyOverriddenMethodHasExplicitImplementation(MethodSymbol method)
                {
                    try
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterStaticMethod(10899, 214816, 215290);
                        try
                        {
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 214935, 214960);
                            for (var
            overriddenMethod = method
            ; (DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 214926, 215242) || true) && (overriddenMethod is object)
            ; DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 214990, 215042)
            , overriddenMethod = f_10899_215009_215042(overriddenMethod), DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 214926, 215242))

                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 214926, 215242);

                                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 215084, 215223) || true) && (f_10899_215088_215138(overriddenMethod))
                                )

                                {
                                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 215084, 215223);
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 215188, 215200);

                                    return true;
                                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 215084, 215223);
                                }
                            }
                        }
                        catch (System.Exception)
                        {
                            DynAbs.Tracing.TraceSender.TraceExitLoopByException(10899, 1, 317);
                            throw;
                        }
                        finally
                        {
                            DynAbs.Tracing.TraceSender.TraceExitLoop(10899, 1, 317);
                        }
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 215262, 215275);

                        return false;
                        DynAbs.Tracing.TraceSender.TraceExitStaticMethod(10899, 214816, 215290);

                        Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                        f_10899_215009_215042(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                        this_param)
                        {
                            var return_v = this_param.OverriddenMethod;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 215009, 215042);
                            return return_v;
                        }


                        bool
                        f_10899_215088_215138(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                        this_param)
                        {
                            var return_v = this_param.IsExplicitInterfaceImplementation;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 215088, 215138);
                            return return_v;
                        }

                    }
                    catch
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 214816, 215290);
                        throw;
                    }
                    finally
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 214816, 215290);
                    }
                    throw new System.Exception("Slicer error: unreachable code");
                }

                static bool isWellKnownEqualityMethodOrImplementation(CSharpCompilation compilation, MethodSymbol method, TypeSymbol? receiverType, WellKnownMember wellKnownMember)
                {
                    try
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterStaticMethod(10899, 215306, 220182);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 215503, 215592);

                        var
                        wellKnownMethod = (MethodSymbol?)f_10899_215540_215591(compilation, wellKnownMember)
                        ;

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 215610, 215735) || true) && (wellKnownMethod is null || (DynAbs.Tracing.TraceSender.Expression_False(10899, 215614, 215661) || receiverType is null))
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 215610, 215735);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 215703, 215716);

                            return false;
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 215610, 215735);
                        }
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 215755, 215806);

                        var
                        wellKnownType = f_10899_215775_215805(wellKnownMethod)
                        ;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 215824, 215885);

                        var
                        parameterType = f_10899_215844_215884(f_10899_215844_215861(method)[0])
                        ;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 215903, 215987);

                        var
                        constructedType = f_10899_215925_215986(wellKnownType, f_10899_215949_215985(parameterType))
                        ;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 216005, 216071);

                        var
                        constructedMethod = f_10899_216029_216070(wellKnownMethod, constructedType)
                        ;

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 216226, 216335) || true) && (f_10899_216230_216262(constructedMethod, method))
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 216226, 216335);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 216304, 216316);

                            return true;
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 216226, 216335);
                        }
                        try
                        {
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 216483, 216506);

                            // check whether 'method', when called on this receiver, is an implementation of 'constructedMethod'.
                            for (var
            baseType = receiverType
            ; (DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 216474, 220134) || true) && (baseType is object && (DynAbs.Tracing.TraceSender.Expression_True(10899, 216508, 216546) && method is object))
            ; DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 216548, 216596)
            , baseType = f_10899_216559_216596(baseType), DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 216474, 220134))

                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 216474, 220134);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 216638, 216730);

                                var
                                implementationMethod = f_10899_216665_216729(baseType, constructedMethod)
                                ;

                                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 216752, 216963) || true) && (implementationMethod is null)
                                )

                                {
                                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 216752, 216963);
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 216927, 216940);

                                    return false;
                                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 216752, 216963);
                                }

                                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 216987, 217287) || true) && (f_10899_216991_217038(f_10899_216991_217026(implementationMethod)))
                                )

                                {
                                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 216987, 217287);
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 217251, 217264);

                                    return false;
                                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 216987, 217287);
                                }
                                try
                                {
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 217422, 217447);

                                    // could be calling an override of a method that implements the interface method
                                    for (var
                overriddenMethod = method
                ; (DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 217413, 217748) || true) && (overriddenMethod is object)
                ; DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 217477, 217529)
                , overriddenMethod = f_10899_217496_217529(overriddenMethod), DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 217413, 217748))

                                    {
                                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 217413, 217748);

                                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 217579, 217725) || true) && (f_10899_217583_217628(overriddenMethod, implementationMethod))
                                        )

                                        {
                                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 217579, 217725);
                                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 217686, 217698);

                                            return true;
                                            DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 217579, 217725);
                                        }
                                    }
                                }
                                catch (System.Exception)
                                {
                                    DynAbs.Tracing.TraceSender.TraceExitLoopByException(10899, 1, 336);
                                    throw;
                                }
                                finally
                                {
                                    DynAbs.Tracing.TraceSender.TraceExitLoop(10899, 1, 336);
                                }
                                try
                                {
                                    while ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 218963, 219732) || true) && (!f_10899_218971_219023(baseType, f_10899_218987_219022(implementationMethod)) && (DynAbs.Tracing.TraceSender.Expression_True(10899, 218970, 219043) && method is object))
                                    )

                                    {
                                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 218963, 219732);

                                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 219093, 219461) || true) && (f_10899_219097_219135(baseType, f_10899_219113_219134(method)))
                                        )

                                        {
                                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 219093, 219461);
                                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 219401, 219434);

                                            method = f_10899_219410_219433(method);
                                            DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 219093, 219461);
                                        }
                                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 219489, 219538);

                                        baseType = f_10899_219500_219537(baseType);
                                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 219676, 219709);

                                        f_10899_219676_219708(baseType is object);
                                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 218963, 219732);
                                    }
                                }
                                catch (System.Exception)
                                {
                                    DynAbs.Tracing.TraceSender.TraceExitLoopByException(10899, 218963, 219732);
                                    throw;
                                }
                                finally
                                {
                                    DynAbs.Tracing.TraceSender.TraceExitLoop(10899, 218963, 219732);
                                }
                                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 219947, 220115) || true) && (method is object && (DynAbs.Tracing.TraceSender.Expression_True(10899, 219951, 220009) && f_10899_219971_220009(baseType, f_10899_219987_220008(method))))
                                )

                                {
                                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 219947, 220115);
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 220059, 220092);

                                    method = f_10899_220068_220091(method);
                                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 219947, 220115);
                                }
                            }
                        }
                        catch (System.Exception)
                        {
                            DynAbs.Tracing.TraceSender.TraceExitLoopByException(10899, 1, 3661);
                            throw;
                        }
                        finally
                        {
                            DynAbs.Tracing.TraceSender.TraceExitLoop(10899, 1, 3661);
                        }
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 220154, 220167);

                        return false;
                        DynAbs.Tracing.TraceSender.TraceExitStaticMethod(10899, 215306, 220182);

                        Microsoft.CodeAnalysis.CSharp.Symbol?
                        f_10899_215540_215591(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                        this_param, Microsoft.CodeAnalysis.WellKnownMember
                        member)
                        {
                            var return_v = this_param.GetWellKnownTypeMember(member);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 215540, 215591);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                        f_10899_215775_215805(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                        this_param)
                        {
                            var return_v = this_param.ContainingType;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 215775, 215805);
                            return return_v;
                        }


                        System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol>
                        f_10899_215844_215861(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                        this_param)
                        {
                            var return_v = this_param.Parameters;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 215844, 215861);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                        f_10899_215844_215884(Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol
                        this_param)
                        {
                            var return_v = this_param.TypeWithAnnotations;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 215844, 215884);
                            return return_v;
                        }


                        System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations>
                        f_10899_215949_215985(Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                        item)
                        {
                            var return_v = ImmutableArray.Create(item);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 215949, 215985);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                        f_10899_215925_215986(Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                        this_param, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations>
                        typeArguments)
                        {
                            var return_v = this_param.Construct(typeArguments);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 215925, 215986);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                        f_10899_216029_216070(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                        this_param, Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                        newOwner)
                        {
                            var return_v = this_param.AsMember(newOwner);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 216029, 216070);
                            return return_v;
                        }


                        bool
                        f_10899_216230_216262(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                        this_param, Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                        obj)
                        {
                            var return_v = this_param.Equals((object)obj);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 216230, 216262);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                        f_10899_216559_216596(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                        this_param)
                        {
                            var return_v = this_param.BaseTypeNoUseSiteDiagnostics;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 216559, 216596);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.CSharp.Symbol
                        f_10899_216665_216729(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                        this_param, Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                        interfaceMember)
                        {
                            var return_v = this_param.FindImplementationForInterfaceMember((Microsoft.CodeAnalysis.CSharp.Symbol)interfaceMember);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 216665, 216729);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                        f_10899_216991_217026(Microsoft.CodeAnalysis.CSharp.Symbol
                        this_param)
                        {
                            var return_v = this_param.ContainingType;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 216991, 217026);
                            return return_v;
                        }


                        bool
                        f_10899_216991_217038(Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                        this_param)
                        {
                            var return_v = this_param.IsInterface;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 216991, 217038);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                        f_10899_217496_217529(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                        this_param)
                        {
                            var return_v = this_param.OverriddenMethod;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 217496, 217529);
                            return return_v;
                        }


                        bool
                        f_10899_217583_217628(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                        this_param, Microsoft.CodeAnalysis.CSharp.Symbol
                        obj)
                        {
                            var return_v = this_param.Equals((object)obj);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 217583, 217628);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                        f_10899_218987_219022(Microsoft.CodeAnalysis.CSharp.Symbol
                        this_param)
                        {
                            var return_v = this_param.ContainingType;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 218987, 219022);
                            return return_v;
                        }


                        bool
                        f_10899_218971_219023(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                        this_param, Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                        obj)
                        {
                            var return_v = this_param.Equals((object)obj);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 218971, 219023);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                        f_10899_219113_219134(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                        this_param)
                        {
                            var return_v = this_param.ContainingType;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 219113, 219134);
                            return return_v;
                        }


                        bool
                        f_10899_219097_219135(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                        this_param, Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                        obj)
                        {
                            var return_v = this_param.Equals((object)obj);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 219097, 219135);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                        f_10899_219410_219433(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                        this_param)
                        {
                            var return_v = this_param.OverriddenMethod;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 219410, 219433);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                        f_10899_219500_219537(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                        this_param)
                        {
                            var return_v = this_param.BaseTypeNoUseSiteDiagnostics;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 219500, 219537);
                            return return_v;
                        }


                        int
                        f_10899_219676_219708(bool
                        condition)
                        {
                            Debug.Assert(condition);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 219676, 219708);
                            return 0;
                        }


                        Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                        f_10899_219987_220008(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                        this_param)
                        {
                            var return_v = this_param.ContainingType;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 219987, 220008);
                            return return_v;
                        }


                        bool
                        f_10899_219971_220009(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                        this_param, Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                        obj)
                        {
                            var return_v = this_param.Equals((object)obj);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 219971, 220009);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                        f_10899_220068_220091(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                        this_param)
                        {
                            var return_v = this_param.OverriddenMethod;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 220068, 220091);
                            return return_v;
                        }

                    }
                    catch
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 215306, 220182);
                        throw;
                    }
                    finally
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 215306, 220182);
                    }
                    throw new System.Exception("Slicer error: unreachable code");
                }

                void learnFromEqualsMethodArguments(BoundExpression left, TypeWithState leftType, BoundExpression right, TypeWithState rightType)
                {
                    try
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 220198, 221515);

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 220581, 221500) || true) && (f_10899_220585_220611_M(DynAbs.Tracing.TraceSender.TraceConditionalAccessExpression(f_10899_220585_220603(left), 10899, 220585, 220611)?.IsNull) == true)
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 220581, 221500);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 220661, 220669);

                            f_10899_220661_220668(this);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 220691, 220735);

                            f_10899_220691_220734(this, right, ref StateWhenTrue);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 220757, 220805);

                            f_10899_220757_220804(this, right, ref StateWhenFalse);
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 220581, 221500);
                        }

                        else
                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 220581, 221500);

                            if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 220847, 221500) || true) && (f_10899_220851_220878_M(DynAbs.Tracing.TraceSender.TraceConditionalAccessExpression(f_10899_220851_220870(right), 10899, 220851, 220878)?.IsNull) == true)
                            )

                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 220847, 221500);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 220928, 220936);

                                f_10899_220928_220935(this);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 220958, 221001);

                                f_10899_220958_221000(this, left, ref StateWhenTrue);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 221023, 221070);

                                f_10899_221023_221069(this, left, ref StateWhenFalse);
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 220847, 221500);
                            }

                            else
                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 220847, 221500);

                                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 221112, 221500) || true) && (leftType.MayBeNull && (DynAbs.Tracing.TraceSender.Expression_True(10899, 221116, 221157) && rightType.IsNotNull))
                                )

                                {
                                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 221112, 221500);
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 221199, 221207);

                                    f_10899_221199_221206(this);
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 221229, 221275);

                                    f_10899_221229_221274(this, left, ref StateWhenTrue);
                                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 221112, 221500);
                                }

                                else
                                {
                                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 221112, 221500);

                                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 221317, 221500) || true) && (rightType.MayBeNull && (DynAbs.Tracing.TraceSender.Expression_True(10899, 221321, 221362) && leftType.IsNotNull))
                                    )

                                    {
                                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 221317, 221500);
                                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 221404, 221412);

                                        f_10899_221404_221411(this);
                                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 221434, 221481);

                                        f_10899_221434_221480(this, right, ref StateWhenTrue);
                                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 221317, 221500);
                                    }
                                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 221112, 221500);
                                }
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 220847, 221500);
                            }
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 220581, 221500);
                        }
                        DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 220198, 221515);

                        Microsoft.CodeAnalysis.ConstantValue?
                        f_10899_220585_220603(Microsoft.CodeAnalysis.CSharp.BoundExpression
                        this_param)
                        {
                            var return_v = this_param.ConstantValue;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 220585, 220603);
                            return return_v;
                        }


                        bool?
                        f_10899_220585_220611_M(bool?
                        i)
                        {
                            var return_v = i;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 220585, 220611);
                            return return_v;
                        }


                        int
                        f_10899_220661_220668(Microsoft.CodeAnalysis.CSharp.NullableWalker
                        this_param)
                        {
                            this_param.Split();
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 220661, 220668);
                            return 0;
                        }


                        int
                        f_10899_220691_220734(Microsoft.CodeAnalysis.CSharp.NullableWalker
                        this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                        expression, ref Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState
                        state)
                        {
                            this_param.LearnFromNullTest(expression, ref state);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 220691, 220734);
                            return 0;
                        }


                        int
                        f_10899_220757_220804(Microsoft.CodeAnalysis.CSharp.NullableWalker
                        this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                        expression, ref Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState
                        state)
                        {
                            this_param.LearnFromNonNullTest(expression, ref state);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 220757, 220804);
                            return 0;
                        }


                        Microsoft.CodeAnalysis.ConstantValue?
                        f_10899_220851_220870(Microsoft.CodeAnalysis.CSharp.BoundExpression
                        this_param)
                        {
                            var return_v = this_param.ConstantValue;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 220851, 220870);
                            return return_v;
                        }


                        bool?
                        f_10899_220851_220878_M(bool?
                        i)
                        {
                            var return_v = i;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 220851, 220878);
                            return return_v;
                        }


                        int
                        f_10899_220928_220935(Microsoft.CodeAnalysis.CSharp.NullableWalker
                        this_param)
                        {
                            this_param.Split();
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 220928, 220935);
                            return 0;
                        }


                        int
                        f_10899_220958_221000(Microsoft.CodeAnalysis.CSharp.NullableWalker
                        this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                        expression, ref Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState
                        state)
                        {
                            this_param.LearnFromNullTest(expression, ref state);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 220958, 221000);
                            return 0;
                        }


                        int
                        f_10899_221023_221069(Microsoft.CodeAnalysis.CSharp.NullableWalker
                        this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                        expression, ref Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState
                        state)
                        {
                            this_param.LearnFromNonNullTest(expression, ref state);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 221023, 221069);
                            return 0;
                        }


                        int
                        f_10899_221199_221206(Microsoft.CodeAnalysis.CSharp.NullableWalker
                        this_param)
                        {
                            this_param.Split();
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 221199, 221206);
                            return 0;
                        }


                        int
                        f_10899_221229_221274(Microsoft.CodeAnalysis.CSharp.NullableWalker
                        this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                        expression, ref Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState
                        state)
                        {
                            this_param.LearnFromNonNullTest(expression, ref state);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 221229, 221274);
                            return 0;
                        }


                        int
                        f_10899_221404_221411(Microsoft.CodeAnalysis.CSharp.NullableWalker
                        this_param)
                        {
                            this_param.Split();
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 221404, 221411);
                            return 0;
                        }


                        int
                        f_10899_221434_221480(Microsoft.CodeAnalysis.CSharp.NullableWalker
                        this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                        expression, ref Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState
                        state)
                        {
                            this_param.LearnFromNonNullTest(expression, ref state);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 221434, 221480);
                            return 0;
                        }

                    }
                    catch
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 220198, 221515);
                        throw;
                    }
                    finally
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 220198, 221515);
                    }
                }
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 212465, 221526);

                int
                f_10899_212680_212701(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                this_param)
                {
                    var return_v = this_param.ParameterCount;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 212680, 212701);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                f_10899_212732_212746(Microsoft.CodeAnalysis.CSharp.BoundCall
                this_param)
                {
                    var return_v = this_param.Arguments;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 212732, 212746);
                    return return_v;
                }


                bool
                f_10899_212765_212779(Microsoft.CodeAnalysis.CSharp.BoundCall
                this_param)
                {
                    var return_v = this_param.HasErrors
                    ;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 212765, 212779);
                    return return_v;
                }


                Microsoft.CodeAnalysis.MethodKind
                f_10899_212920_212937(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                this_param)
                {
                    var return_v = this_param.MethodKind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 212920, 212937);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                f_10899_212981_212998(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                this_param)
                {
                    var return_v = this_param.ReturnType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 212981, 212998);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SpecialType
                f_10899_212981_213010(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                this_param)
                {
                    var return_v = this_param.SpecialType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 212981, 213010);
                    return return_v;
                }


                string
                f_10899_213062_213073(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                this_param)
                {
                    var return_v = this_param.Name;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 213062, 213073);
                    return return_v;
                }


                Microsoft.CodeAnalysis.RuntimeMembers.MemberDescriptor
                f_10899_213077_213142(Microsoft.CodeAnalysis.SpecialMember
                member)
                {
                    var return_v = SpecialMembers.GetDescriptor(member);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 213077, 213142);
                    return return_v;
                }


                string
                f_10899_213172_213183(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                this_param)
                {
                    var return_v = this_param.Name;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 213172, 213183);
                    return return_v;
                }


                Microsoft.CodeAnalysis.RuntimeMembers.MemberDescriptor
                f_10899_213187_213261(Microsoft.CodeAnalysis.SpecialMember
                member)
                {
                    var return_v = SpecialMembers.GetDescriptor(member);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 213187, 213261);
                    return return_v;
                }


                bool
                f_10899_213292_213344(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                method)
                {
                    var return_v = anyOverriddenMethodHasExplicitImplementation(method);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 213292, 213344);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbol
                f_10899_213458_213539(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param, Microsoft.CodeAnalysis.SpecialMember
                specialMember)
                {
                    var return_v = this_param.GetSpecialTypeMember(specialMember);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 213458, 213539);
                    return return_v;
                }


                bool
                f_10899_213444_213540(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                this_param, Microsoft.CodeAnalysis.CSharp.Symbol
                obj)
                {
                    var return_v = this_param.Equals((object)obj);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 213444, 213540);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbol
                f_10899_213579_213657(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param, Microsoft.CodeAnalysis.SpecialMember
                specialMember)
                {
                    var return_v = this_param.GetSpecialTypeMember(specialMember);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 213579, 213657);
                    return return_v;
                }


                bool
                f_10899_213565_213658(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                this_param, Microsoft.CodeAnalysis.CSharp.Symbol
                obj)
                {
                    var return_v = this_param.Equals((object)obj);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 213565, 213658);
                    return return_v;
                }


                bool
                f_10899_213718_213871(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                compilation, Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                method, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?
                receiverType, Microsoft.CodeAnalysis.WellKnownMember
                wellKnownMember)
                {
                    var return_v = isWellKnownEqualityMethodOrImplementation(compilation, method, receiverType, wellKnownMember);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 213718, 213871);
                    return return_v;
                }


                int
                f_10899_213905_213940(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 213905, 213940);
                    return 0;
                }


                int
                f_10899_213959_214063(Microsoft.CodeAnalysis.CSharp.BoundExpression
                left, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                leftType, Microsoft.CodeAnalysis.CSharp.BoundExpression
                right, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                rightType)
                {
                    learnFromEqualsMethodArguments(left, leftType, right, rightType);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 213959, 214063);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                f_10899_214157_214212(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                accessingTypeOpt)
                {
                    var return_v = this_param.GetLeastOverriddenMethod(accessingTypeOpt: accessingTypeOpt);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 214157, 214212);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbol
                f_10899_214238_214307(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param, Microsoft.CodeAnalysis.SpecialMember
                specialMember)
                {
                    var return_v = this_param.GetSpecialTypeMember(specialMember);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 214238, 214307);
                    return return_v;
                }


                bool
                f_10899_214157_214308(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                this_param, Microsoft.CodeAnalysis.CSharp.Symbol
                obj)
                {
                    var return_v = this_param.Equals((object)obj);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 214157, 214308);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression?
                f_10899_214327_214343(Microsoft.CodeAnalysis.CSharp.BoundCall
                this_param)
                {
                    var return_v = this_param.ReceiverOpt;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 214327, 214343);
                    return return_v;
                }


                bool
                f_10899_214453_214579(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                compilation, Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                method, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?
                receiverType, Microsoft.CodeAnalysis.WellKnownMember
                wellKnownMember)
                {
                    var return_v = isWellKnownEqualityMethodOrImplementation(compilation, method, receiverType, wellKnownMember);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 214453, 214579);
                    return return_v;
                }


                int
                f_10899_214614_214649(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 214614, 214649);
                    return 0;
                }


                int
                f_10899_214668_214759(Microsoft.CodeAnalysis.CSharp.BoundExpression
                left, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                leftType, Microsoft.CodeAnalysis.CSharp.BoundExpression
                right, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                rightType)
                {
                    learnFromEqualsMethodArguments(left, leftType, right, rightType);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 214668, 214759);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 212465, 221526);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 212465, 221526);
            }
        }

        private bool IsCompareExchangeMethod(MethodSymbol? method)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 221538, 222112);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 221621, 221701) || true) && (method is null)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 221621, 221701);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 221673, 221686);

                    return false;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 221621, 221701);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 221717, 222101);

                return f_10899_221724_221891(method, f_10899_221738_221835(compilation, WellKnownMember.System_Threading_Interlocked__CompareExchange), f_10899_221837_221890(SymbolEqualityComparer.ConsiderEverything)) || (DynAbs.Tracing.TraceSender.Expression_False(10899, 221724, 222100) || f_10899_221912_222100(f_10899_221912_221937(method), f_10899_221945_222044(compilation, WellKnownMember.System_Threading_Interlocked__CompareExchange_T), f_10899_222046_222099(SymbolEqualityComparer.ConsiderEverything)));
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 221538, 222112);

                Microsoft.CodeAnalysis.CSharp.Symbol?
                f_10899_221738_221835(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param, Microsoft.CodeAnalysis.WellKnownMember
                member)
                {
                    var return_v = this_param.GetWellKnownTypeMember(member);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 221738, 221835);
                    return return_v;
                }


                Microsoft.CodeAnalysis.TypeCompareKind
                f_10899_221837_221890(Microsoft.CodeAnalysis.SymbolEqualityComparer
                this_param)
                {
                    var return_v = this_param.CompareKind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 221837, 221890);
                    return return_v;
                }


                bool
                f_10899_221724_221891(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                this_param, Microsoft.CodeAnalysis.CSharp.Symbol?
                other, Microsoft.CodeAnalysis.TypeCompareKind
                compareKind)
                {
                    var return_v = this_param.Equals(other, compareKind);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 221724, 221891);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                f_10899_221912_221937(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                this_param)
                {
                    var return_v = this_param.OriginalDefinition;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 221912, 221937);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbol?
                f_10899_221945_222044(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param, Microsoft.CodeAnalysis.WellKnownMember
                member)
                {
                    var return_v = this_param.GetWellKnownTypeMember(member);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 221945, 222044);
                    return return_v;
                }


                Microsoft.CodeAnalysis.TypeCompareKind
                f_10899_222046_222099(Microsoft.CodeAnalysis.SymbolEqualityComparer
                this_param)
                {
                    var return_v = this_param.CompareKind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 222046, 222099);
                    return return_v;
                }


                bool
                f_10899_221912_222100(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                this_param, Microsoft.CodeAnalysis.CSharp.Symbol?
                other, Microsoft.CodeAnalysis.TypeCompareKind
                compareKind)
                {
                    var return_v = this_param.Equals(other, compareKind);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 221912, 222100);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 221538, 222112);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 221538, 222112);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private readonly struct CompareExchangeInfo
        {

            public readonly ImmutableArray<BoundExpression> Arguments;

            public readonly ImmutableArray<VisitArgumentResult> Results;

            public readonly ImmutableArray<int> ArgsToParamsOpt;

            public CompareExchangeInfo(ImmutableArray<BoundExpression> arguments, ImmutableArray<VisitArgumentResult> results, ImmutableArray<int> argsToParamsOpt)
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterConstructor(10899, 222406, 222715);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 222590, 222612);

                    Arguments = arguments;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 222630, 222648);

                    Results = results;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 222666, 222700);

                    ArgsToParamsOpt = argsToParamsOpt;
                    DynAbs.Tracing.TraceSender.TraceExitConstructor(10899, 222406, 222715);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 222406, 222715);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 222406, 222715);
                }
            }

            public bool IsDefault
            {
                get
                {
                    try
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 222753, 222796);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 222756, 222796);
                        return Arguments.IsDefault || (DynAbs.Tracing.TraceSender.Expression_False(10899, 222756, 222796) || Results.IsDefault); DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 222753, 222796);
                    }
                    catch
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 222753, 222796);
                        throw;
                    }
                    finally
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 222753, 222796);
                    }
                    throw new System.Exception("Slicer error: unreachable code");
                }
            }
            static CompareExchangeInfo()
            {
                DynAbs.Tracing.TraceSender.TraceEnterStaticConstructor(10899, 222124, 222808);
                DynAbs.Tracing.TraceSender.TraceExitStaticConstructor(10899, 222124, 222808);

                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 222124, 222808);
            }
        }

        private NullableFlowState LearnFromCompareExchangeMethod(in CompareExchangeInfo compareExchangeInfo)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 222820, 224825);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 222945, 222990);

                f_10899_222945_222989(f_10899_222958_222988_M(!compareExchangeInfo.IsDefault));

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 223377, 223763) || true) && (compareExchangeInfo.Arguments.Length != 3)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 223377, 223763);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 223715, 223748);

                    return NullableFlowState.NotNull;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 223377, 223763);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 223779, 223837);

                var
                argsToParamsOpt = compareExchangeInfo.ArgsToParamsOpt
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 223851, 223921);

                f_10899_223851_223920(argsToParamsOpt is { IsDefault: true } or { Length: 3 });
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 223935, 224144);

                var (comparandIndex, valueIndex, locationIndex) = (DynAbs.Tracing.TraceSender.Conditional_F1(10899, 223985, 224010) || ((argsToParamsOpt.IsDefault
                && DynAbs.Tracing.TraceSender.Conditional_F2(10899, 224030, 224039)) || DynAbs.Tracing.TraceSender.Conditional_F3(10899, 224059, 224143))) ? (2, 1, 0)
                : (argsToParamsOpt.IndexOf(2), argsToParamsOpt.IndexOf(1), argsToParamsOpt.IndexOf(0));
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 224160, 224222);

                var
                comparand = compareExchangeInfo.Arguments[comparandIndex]
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 224236, 224314);

                var
                valueFlowState = compareExchangeInfo.Results[valueIndex].RValueType.State
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 224328, 224776) || true) && (f_10899_224332_224363_M(DynAbs.Tracing.TraceSender.TraceConditionalAccessExpression(f_10899_224332_224355(comparand), 10899, 224332, 224363)?.IsNull) == true)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 224328, 224776);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 224328, 224776);
                }

                else

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 224328, 224776);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 224557, 224641);

                    var
                    locationFlowState = compareExchangeInfo.Results[locationIndex].RValueType.State
                    ;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 224705, 224761);

                    valueFlowState = f_10899_224722_224760(valueFlowState, locationFlowState);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 224328, 224776);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 224792, 224814);

                return valueFlowState;
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 222820, 224825);

                bool
                f_10899_222958_222988_M(bool
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 222958, 222988);
                    return return_v;
                }


                int
                f_10899_222945_222989(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 222945, 222989);
                    return 0;
                }


                int
                f_10899_223851_223920(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 223851, 223920);
                    return 0;
                }


                Microsoft.CodeAnalysis.ConstantValue?
                f_10899_224332_224355(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.ConstantValue;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 224332, 224355);
                    return return_v;
                }


                bool?
                f_10899_224332_224363_M(bool?
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 224332, 224363);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.NullableFlowState
                f_10899_224722_224760(Microsoft.CodeAnalysis.CSharp.NullableFlowState
                a, Microsoft.CodeAnalysis.CSharp.NullableFlowState
                b)
                {
                    var return_v = a.Join(b);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 224722, 224760);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 222820, 224825);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 222820, 224825);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private TypeWithState VisitCallReceiver(BoundCall node)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 224837, 226919);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 224917, 224952);

                var
                receiverOpt = f_10899_224935_224951(node)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 224966, 225003);

                TypeWithState
                receiverType = default
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 225019, 226872) || true) && (receiverOpt != null)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 225019, 226872);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 225076, 225125);

                    receiverType = f_10899_225091_225124(this, receiverOpt);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 225496, 225532);

                    bool
                    checkNullableValueType = false
                    ;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 225552, 225581);

                    var
                    type = receiverType.Type
                    ;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 225599, 225624);

                    var
                    method = f_10899_225612_225623(node)
                    ;

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 225669, 226580) || true) && (f_10899_225673_225704(method) && (DynAbs.Tracing.TraceSender.Expression_True(10899, 225673, 225745) && type is not null) && (DynAbs.Tracing.TraceSender.Expression_True(10899, 225673, 225770) && f_10899_225749_225770(type)) && (DynAbs.Tracing.TraceSender.Expression_True(10899, 225673, 225832) && f_10899_225795_225832(f_10899_225795_225816(method))))
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 225669, 226580);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 225874, 225904);

                        checkNullableValueType = true;
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 225669, 226580);
                    }

                    else
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 225669, 226580);

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 225946, 226580) || true) && (f_10899_225950_225975(method) == f_10899_225979_226054(compilation, SpecialMember.System_Nullable_T_get_Value))
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 225946, 226580);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 226531, 226561);

                            checkNullableValueType = true;
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 225946, 226580);
                        }
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 225669, 226580);
                    }
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 226790, 226857);

                    _ = f_10899_226794_226856(this, receiverOpt, checkNullableValueType);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 225019, 226872);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 226888, 226908);

                return receiverType;
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 224837, 226919);

                Microsoft.CodeAnalysis.CSharp.BoundExpression?
                f_10899_224935_224951(Microsoft.CodeAnalysis.CSharp.BoundCall
                this_param)
                {
                    var return_v = this_param.ReceiverOpt;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 224935, 224951);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                f_10899_225091_225124(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                node)
                {
                    var return_v = this_param.VisitRvalueWithState(node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 225091, 225124);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                f_10899_225612_225623(Microsoft.CodeAnalysis.CSharp.BoundCall
                this_param)
                {
                    var return_v = this_param.Method;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 225612, 225623);
                    return return_v;
                }


                bool
                f_10899_225673_225704(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                this_param)
                {
                    var return_v = this_param.RequiresInstanceReceiver;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 225673, 225704);
                    return return_v;
                }


                bool
                f_10899_225749_225770(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                type)
                {
                    var return_v = type.IsNullableType();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 225749, 225770);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                f_10899_225795_225816(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                this_param)
                {
                    var return_v = this_param.ContainingType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 225795, 225816);
                    return return_v;
                }


                bool
                f_10899_225795_225832(Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                this_param)
                {
                    var return_v = this_param.IsReferenceType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 225795, 225832);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                f_10899_225950_225975(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                this_param)
                {
                    var return_v = this_param.OriginalDefinition;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 225950, 225975);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbol
                f_10899_225979_226054(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param, Microsoft.CodeAnalysis.SpecialMember
                specialMember)
                {
                    var return_v = this_param.GetSpecialTypeMember(specialMember);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 225979, 226054);
                    return return_v;
                }


                bool
                f_10899_226794_226856(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                receiverOpt, bool
                checkNullableValueType)
                {
                    var return_v = this_param.CheckPossibleNullReceiver(receiverOpt, checkNullableValueType);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 226794, 226856);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 224837, 226919);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 224837, 226919);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private TypeWithState GetReturnTypeWithState(MethodSymbol method)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 226931, 227124);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 227021, 227113);

                return TypeWithState.Create(f_10899_227049_227081(method), f_10899_227083_227111(this, method));
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 226931, 227124);

                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                f_10899_227049_227081(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                this_param)
                {
                    var return_v = this_param.ReturnTypeWithAnnotations;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 227049, 227081);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.FlowAnalysisAnnotations
                f_10899_227083_227111(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                symbol)
                {
                    var return_v = this_param.GetRValueAnnotations((Microsoft.CodeAnalysis.CSharp.Symbol)symbol);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 227083, 227111);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 226931, 227124);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 226931, 227124);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private FlowAnalysisAnnotations GetRValueAnnotations(Symbol? symbol)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 227136, 227718);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 227423, 227532) || true) && (f_10899_227427_227447())
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 227423, 227532);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 227481, 227517);

                    return FlowAnalysisAnnotations.None;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 227423, 227532);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 227548, 227602);

                var
                annotations = f_10899_227566_227601(symbol)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 227616, 227707);

                return annotations & (FlowAnalysisAnnotations.MaybeNull | FlowAnalysisAnnotations.NotNull);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 227136, 227718);

                bool
                f_10899_227427_227447()
                {
                    var return_v = IsAnalyzingAttribute;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 227427, 227447);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.FlowAnalysisAnnotations
                f_10899_227566_227601(Microsoft.CodeAnalysis.CSharp.Symbol?
                symbol)
                {
                    var return_v = symbol.GetFlowAnalysisAnnotations();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 227566, 227601);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 227136, 227718);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 227136, 227718);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private FlowAnalysisAnnotations GetParameterAnnotations(ParameterSymbol parameter)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 227730, 228137);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 228031, 228126);

                return (DynAbs.Tracing.TraceSender.Conditional_F1(10899, 228038, 228058) || ((f_10899_228038_228058() && DynAbs.Tracing.TraceSender.Conditional_F2(10899, 228061, 228089)) || DynAbs.Tracing.TraceSender.Conditional_F3(10899, 228092, 228125))) ? FlowAnalysisAnnotations.None : f_10899_228092_228125(parameter);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 227730, 228137);

                bool
                f_10899_228038_228058()
                {
                    var return_v = IsAnalyzingAttribute;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 228038, 228058);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.FlowAnalysisAnnotations
                f_10899_228092_228125(Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol
                this_param)
                {
                    var return_v = this_param.FlowAnalysisAnnotations;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 228092, 228125);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 227730, 228137);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 227730, 228137);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private static TypeWithAnnotations ApplyLValueAnnotations(TypeWithAnnotations declaredType, FlowAnalysisAnnotations flowAnalysisAnnotations)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterStaticMethod(10899, 228464, 229074);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 228629, 229027) || true) && ((flowAnalysisAnnotations & FlowAnalysisAnnotations.DisallowNull) == FlowAnalysisAnnotations.DisallowNull)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 228629, 229027);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 228771, 228808);

                    return declaredType.AsNotAnnotated();
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 228629, 229027);
                }

                else
                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 228629, 229027);

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 228842, 229027) || true) && ((flowAnalysisAnnotations & FlowAnalysisAnnotations.AllowNull) == FlowAnalysisAnnotations.AllowNull)
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 228842, 229027);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 228978, 229012);

                        return declaredType.AsAnnotated();
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 228842, 229027);
                    }
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 228629, 229027);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 229043, 229063);

                return declaredType;
                DynAbs.Tracing.TraceSender.TraceExitStaticMethod(10899, 228464, 229074);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 228464, 229074);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 228464, 229074);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private static TypeWithState ApplyUnconditionalAnnotations(TypeWithState typeWithState, FlowAnalysisAnnotations annotations)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterStaticMethod(10899, 229195, 229837);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 229344, 229554) || true) && ((annotations & FlowAnalysisAnnotations.NotNull) == FlowAnalysisAnnotations.NotNull)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 229344, 229554);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 229464, 229539);

                    return TypeWithState.Create(typeWithState.Type, NullableFlowState.NotNull);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 229344, 229554);
                }

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 229570, 229789) || true) && ((annotations & FlowAnalysisAnnotations.MaybeNull) == FlowAnalysisAnnotations.MaybeNull)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 229570, 229789);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 229694, 229774);

                    return TypeWithState.Create(typeWithState.Type, NullableFlowState.MaybeDefault);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 229570, 229789);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 229805, 229826);

                return typeWithState;
                DynAbs.Tracing.TraceSender.TraceExitStaticMethod(10899, 229195, 229837);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 229195, 229837);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 229195, 229837);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private static TypeWithAnnotations ApplyUnconditionalAnnotations(TypeWithAnnotations declaredType, FlowAnalysisAnnotations annotations)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterStaticMethod(10899, 229849, 230417);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 230009, 230182) || true) && ((annotations & FlowAnalysisAnnotations.MaybeNull) == FlowAnalysisAnnotations.MaybeNull)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 230009, 230182);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 230133, 230167);

                    return declaredType.AsAnnotated();
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 230009, 230182);
                }

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 230198, 230370) || true) && ((annotations & FlowAnalysisAnnotations.NotNull) == FlowAnalysisAnnotations.NotNull)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 230198, 230370);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 230318, 230355);

                    return declaredType.AsNotAnnotated();
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 230198, 230370);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 230386, 230406);

                return declaredType;
                DynAbs.Tracing.TraceSender.TraceExitStaticMethod(10899, 229849, 230417);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 229849, 230417);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 229849, 230417);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private static bool HasImplicitTypeArguments(BoundNode node)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterStaticMethod(10899, 230683, 231482);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 230768, 230942) || true) && (node is BoundCollectionElementInitializer { AddMethod: { TypeArgumentsWithAnnotations: { IsEmpty: false } } })
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 230768, 230942);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 230915, 230927);

                    return true;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 230768, 230942);
                }

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 230958, 231163) || true) && (node is BoundForEachStatement { EnumeratorInfoOpt: { GetEnumeratorInfo: { Method: { TypeArgumentsWithAnnotations: { IsEmpty: false } } } } })
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 230958, 231163);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 231136, 231148);

                    return true;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 230958, 231163);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 231179, 231204);

                var
                syntax = node.Syntax
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 231218, 231376) || true) && (f_10899_231222_231235(syntax) != SyntaxKind.InvocationExpression)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 231218, 231376);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 231348, 231361);

                    return false;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 231218, 231376);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 231390, 231471);

                return f_10899_231397_231470(f_10899_231422_231469(((InvocationExpressionSyntax)syntax)));
                DynAbs.Tracing.TraceSender.TraceExitStaticMethod(10899, 230683, 231482);

                Microsoft.CodeAnalysis.CSharp.SyntaxKind
                f_10899_231222_231235(Microsoft.CodeAnalysis.SyntaxNode
                node)
                {
                    var return_v = node.Kind();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 231222, 231235);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                f_10899_231422_231469(Microsoft.CodeAnalysis.CSharp.Syntax.InvocationExpressionSyntax
                this_param)
                {
                    var return_v = this_param.Expression;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 231422, 231469);
                    return return_v;
                }


                bool
                f_10899_231397_231470(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                syntax)
                {
                    var return_v = HasImplicitTypeArguments((Microsoft.CodeAnalysis.SyntaxNode)syntax);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 231397, 231470);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 230683, 231482);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 230683, 231482);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private static bool HasImplicitTypeArguments(SyntaxNode syntax)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterStaticMethod(10899, 231494, 231912);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 231582, 231635);

                var
                nameSyntax = f_10899_231599_231634(syntax, out _)
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 231649, 231777) || true) && (nameSyntax == null)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 231649, 231777);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 231749, 231762);

                    return false;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 231649, 231777);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 231791, 231836);

                nameSyntax = f_10899_231804_231835(nameSyntax);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 231850, 231901);

                return f_10899_231857_231874(nameSyntax) != SyntaxKind.GenericName;
                DynAbs.Tracing.TraceSender.TraceExitStaticMethod(10899, 231494, 231912);

                Microsoft.CodeAnalysis.CSharp.Syntax.NameSyntax
                f_10899_231599_231634(Microsoft.CodeAnalysis.SyntaxNode
                syntax, out string
                nameString)
                {
                    var return_v = Binder.GetNameSyntax(syntax, out nameString);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 231599, 231634);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Syntax.SimpleNameSyntax
                f_10899_231804_231835(Microsoft.CodeAnalysis.CSharp.Syntax.NameSyntax
                this_param)
                {
                    var return_v = this_param.GetUnqualifiedName();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 231804, 231835);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.SyntaxKind
                f_10899_231857_231874(Microsoft.CodeAnalysis.CSharp.Syntax.NameSyntax
                this_param)
                {
                    var return_v = this_param.Kind();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 231857, 231874);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 231494, 231912);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 231494, 231912);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        protected override void VisitArguments(ImmutableArray<BoundExpression> arguments, ImmutableArray<RefKind> refKindsOpt, MethodSymbol method)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 231924, 232207);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 232159, 232196);

                throw f_10899_232165_232195();
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 231924, 232207);

                System.Exception
                f_10899_232165_232195()
                {
                    var return_v = ExceptionUtilities.Unreachable;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 232165, 232195);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 231924, 232207);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 231924, 232207);
            }
        }

        private (MethodSymbol? method, ImmutableArray<VisitArgumentResult> results, bool returnNotNull) VisitArguments(
                    BoundExpression node,
                    ImmutableArray<BoundExpression> arguments,
                    ImmutableArray<RefKind> refKindsOpt,
                    MethodSymbol? method,
                    ImmutableArray<int> argsToParamsOpt,
                    BitVector defaultArguments,
                    bool expanded,
                    bool invokedAsExtensionMethod)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 232219, 232882);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 232694, 232871);

                return f_10899_232701_232870(this, node, arguments, refKindsOpt, (DynAbs.Tracing.TraceSender.Conditional_F1(10899, 232746, 232760) || ((method is null && DynAbs.Tracing.TraceSender.Conditional_F2(10899, 232763, 232770)) || DynAbs.Tracing.TraceSender.Conditional_F3(10899, 232773, 232790))) ? default : f_10899_232773_232790(method), argsToParamsOpt, defaultArguments, expanded, invokedAsExtensionMethod, method);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 232219, 232882);

                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol>
                f_10899_232773_232790(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                this_param)
                {
                    var return_v = this_param.Parameters;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 232773, 232790);
                    return return_v;
                }


                (Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol? method, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.NullableWalker.VisitArgumentResult> results, bool returnNotNull)
                f_10899_232701_232870(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                node, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                arguments, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.RefKind>
                refKindsOpt, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol>
                parametersOpt, System.Collections.Immutable.ImmutableArray<int>
                argsToParamsOpt, Microsoft.CodeAnalysis.BitVector
                defaultArguments, bool
                expanded, bool
                invokedAsExtensionMethod, Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol?
                method)
                {
                    var return_v = this_param.VisitArguments((Microsoft.CodeAnalysis.CSharp.BoundNode)node, arguments, refKindsOpt, parametersOpt, argsToParamsOpt, defaultArguments, expanded, invokedAsExtensionMethod, method);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 232701, 232870);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 232219, 232882);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 232219, 232882);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private ImmutableArray<VisitArgumentResult> VisitArguments(
                    BoundExpression node,
                    ImmutableArray<BoundExpression> arguments,
                    ImmutableArray<RefKind> refKindsOpt,
                    PropertySymbol? property,
                    ImmutableArray<int> argsToParamsOpt,
                    BitVector defaultArguments,
                    bool expanded)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 232894, 233476);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 233277, 233465);

                return f_10899_233284_233456(this, node, arguments, refKindsOpt, (DynAbs.Tracing.TraceSender.Conditional_F1(10899, 233329, 233345) || ((property is null && DynAbs.Tracing.TraceSender.Conditional_F2(10899, 233348, 233355)) || DynAbs.Tracing.TraceSender.Conditional_F3(10899, 233358, 233377))) ? default : f_10899_233358_233377(property), argsToParamsOpt, defaultArguments, expanded, invokedAsExtensionMethod: false).results;
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 232894, 233476);

                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol>
                f_10899_233358_233377(Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol
                this_param)
                {
                    var return_v = this_param.Parameters;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 233358, 233377);
                    return return_v;
                }


                (Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol? method, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.NullableWalker.VisitArgumentResult> results, bool returnNotNull)
                f_10899_233284_233456(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                node, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                arguments, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.RefKind>
                refKindsOpt, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol>
                parametersOpt, System.Collections.Immutable.ImmutableArray<int>
                argsToParamsOpt, Microsoft.CodeAnalysis.BitVector
                defaultArguments, bool
                expanded, bool
                invokedAsExtensionMethod)
                {
                    var return_v = this_param.VisitArguments((Microsoft.CodeAnalysis.CSharp.BoundNode)node, arguments, refKindsOpt, parametersOpt, argsToParamsOpt, defaultArguments, expanded, invokedAsExtensionMethod: invokedAsExtensionMethod);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 233284, 233456);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 232894, 233476);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 232894, 233476);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private (MethodSymbol? method, ImmutableArray<VisitArgumentResult> results, bool returnNotNull) VisitArguments(
                    BoundNode node,
                    ImmutableArray<BoundExpression> arguments,
                    ImmutableArray<RefKind> refKindsOpt,
                    ImmutableArray<ParameterSymbol> parametersOpt,
                    ImmutableArray<int> argsToParamsOpt,
                    BitVector defaultArguments,
                    bool expanded,
                    bool invokedAsExtensionMethod,
                    MethodSymbol? method = null)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 233664, 241441);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 234200, 234235);

                f_10899_234200_234234(f_10899_234213_234233_M(!arguments.IsDefault));
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 234249, 234282);

                bool
                shouldReturnNotNull = false
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 234298, 234447);

                (ImmutableArray<BoundExpression> argumentsNoConversions, ImmutableArray<Conversion> conversions) = f_10899_234397_234446(this, arguments, refKindsOpt);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 234519, 234698);

                ImmutableArray<VisitArgumentResult>
                results = f_10899_234565_234697(this, node.Syntax, argumentsNoConversions, refKindsOpt, parametersOpt, argsToParamsOpt, defaultArguments, expanded)
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 234762, 235712) || true) && (f_10899_234766_234789_M(DynAbs.Tracing.TraceSender.TraceConditionalAccessExpression(method, 10899, 234766, 234789)?.IsGenericMethod) == true)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 234762, 235712);

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 234831, 235133) || true) && (f_10899_234835_234865(node))
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 234831, 235133);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 234907, 235058);

                        method = f_10899_234916_235057(this, method, f_10899_234949_235016(this, results, argumentsNoConversions), refKindsOpt, argsToParamsOpt, expanded);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 235080, 235114);

                        parametersOpt = f_10899_235096_235113(method);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 234831, 235133);
                    }

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 235151, 235697) || true) && (f_10899_235155_235197(method))
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 235151, 235697);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 235239, 235264);

                        var
                        syntax = node.Syntax
                        ;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 235286, 235678);

                        f_10899_235286_235677(this, syntax switch
                        {
                            InvocationExpressionSyntax { Expression: var expression } when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 235405, 235476) && DynAbs.Tracing.TraceSender.Expression_True(10899, 235405, 235476))
=> expression,
                            ForEachStatementSyntax { Expression: var expression } when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 235507, 235574) && DynAbs.Tracing.TraceSender.Expression_True(10899, 235507, 235574))
=> expression,
                            _ when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 235605, 235616) && DynAbs.Tracing.TraceSender.Expression_True(10899, 235605, 235616))
=> syntax
                        }, method);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 235151, 235697);
                    }
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 234762, 235712);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 235728, 235878);

                bool
                parameterHasNotNullIfNotNull = f_10899_235764_235785_M(!IsAnalyzingAttribute) && (DynAbs.Tracing.TraceSender.Expression_True(10899, 235764, 235813) && f_10899_235789_235813_M(!parametersOpt.IsDefault)) && (DynAbs.Tracing.TraceSender.Expression_True(10899, 235764, 235877) && parametersOpt.Any(p => !p.NotNullIfParameterNotNull.IsEmpty))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 235892, 236005);

                var
                notNullParametersBuilder = (DynAbs.Tracing.TraceSender.Conditional_F1(10899, 235923, 235951) || ((parameterHasNotNullIfNotNull && DynAbs.Tracing.TraceSender.Conditional_F2(10899, 235954, 235997)) || DynAbs.Tracing.TraceSender.Conditional_F3(10899, 236000, 236004))) ? f_10899_235954_235997() : null
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 236019, 238673) || true) && (f_10899_236023_236038_M(!node.HasErrors) && (DynAbs.Tracing.TraceSender.Expression_True(10899, 236023, 236066) && f_10899_236042_236066_M(!parametersOpt.IsDefault)))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 236019, 238673);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 236184, 236314);

                    ImmutableHashSet<string>?
                    returnNotNullIfParameterNotNull = (DynAbs.Tracing.TraceSender.Conditional_F1(10899, 236244, 236264) || ((f_10899_236244_236264() && DynAbs.Tracing.TraceSender.Conditional_F2(10899, 236267, 236271)) || DynAbs.Tracing.TraceSender.Conditional_F3(10899, 236274, 236313))) ? null : f_10899_236274_236313_M(DynAbs.Tracing.TraceSender.TraceConditionalAccessExpression(method, 10899, 236274, 236313)?.ReturnNotNullIfParameterNotNull)
                    ;
                    try
                    {
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 236341, 236346);
                        for (int
        i = 0
        ; (DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 236332, 237987) || true) && (i < results.Length)
        ; DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 236368, 236371)
        , i++, DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 236332, 237987))

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 236332, 237987);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 236413, 236652);

                            (ParameterSymbol? parameter, TypeWithAnnotations parameterType, FlowAnalysisAnnotations parameterAnnotations, bool isExpandedParamsArgument) =
                            f_10899_236581_236651(this, i, parametersOpt, argsToParamsOpt, expanded);

                            if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 236674, 236777) || true) && (parameter is null)
                            )

                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 236674, 236777);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 236745, 236754);

                                continue;
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 236674, 236777);
                            }
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 236801, 236854);

                            var
                            argumentNoConversion = argumentsNoConversions[i]
                            ;
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 236876, 236955);

                            var
                            argument = (DynAbs.Tracing.TraceSender.Conditional_F1(10899, 236891, 236911) || ((i < arguments.Length && DynAbs.Tracing.TraceSender.Conditional_F2(10899, 236914, 236926)) || DynAbs.Tracing.TraceSender.Conditional_F3(10899, 236929, 236954))) ? arguments[i] : argumentsNoConversions[i]
                            ;
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 236977, 237558);

                            f_10899_236977_237557(this, f_10899_237064_237121(argument, argumentNoConversion), 
                                argumentNoConversion, 
                                (DynAbs.Tracing.TraceSender.Conditional_F1(10899, 237195, 237243) || 
                                (((conversions.IsDefault || (DynAbs.Tracing.TraceSender.Expression_False(10899, 237195, 237243) || 
                                i >= conversions.Length)) && DynAbs.Tracing.TraceSender.Conditional_F2(10899, 237246, 237265)) || 
                                DynAbs.Tracing.TraceSender.Conditional_F3(10899, 237268, 237282))) ? 
                                Conversion.Identity : conversions[i], 
                                f_10899_237309_237335(refKindsOpt, i), parameter, parameterType, parameterAnnotations, 
                                results[i], invokedAsExtensionMethod && (DynAbs.Tracing.TraceSender.Expression_True(10899, 237522, 237556) 
                                && i == 0));

                            if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 237582, 237968) || true) && (results[i].RValueType.IsNotNull || (DynAbs.Tracing.TraceSender.Expression_False(10899, 237586, 237645) || isExpandedParamsArgument))
                            )

                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 237582, 237968);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 237695, 237736);

                                DynAbs.Tracing.TraceSender.TraceInvocationWrapper(() => DynAbs.Tracing.TraceSender.TraceConditionalAccessExpression(notNullParametersBuilder, 10899, 237695, 237735)?.Add(parameter), 10899, 237720, 237735);

                                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 237764, 237945) || true) && (f_10899_237768_237825_I(DynAbs.Tracing.TraceSender.TraceConditionalAccessExpression(returnNotNullIfParameterNotNull, 10899, 237768, 237825)?.Contains(f_10899_237810_237824(parameter))) == true)
                                )

                                {
                                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 237764, 237945);
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 237891, 237918);

                                    shouldReturnNotNull = true;
                                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 237764, 237945);
                                }
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 237582, 237968);
                            }
                        }
                    }
                    catch (System.Exception)
                    {
                        DynAbs.Tracing.TraceSender.TraceExitLoopByException(10899, 1, 1656);
                        throw;
                    }
                    finally
                    {
                        DynAbs.Tracing.TraceSender.TraceExitLoop(10899, 1, 1656);
                    }
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 236019, 238673);
                }

                else

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 236019, 238673);
                    try
                    {
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 238373, 238378);
                        // Normally we delay visiting the lambda until we can visit it along with its conversion.
                        // Since we can't visit its conversion here, or it doesn't have one, we dig back in and
                        // visit the lambda here to ensure all nodes have nullability info for public API
                        for (int
        i = 0
        ; (DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 238364, 238658) || true) && (i < results.Length)
        ; DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 238400, 238403)
        , i++, DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 238364, 238658))

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 238364, 238658);

                            if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 238445, 238639) || true) && (argumentsNoConversions[i] is BoundLambda lambda)
                            )

                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 238445, 238639);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 238546, 238616);

                                f_10899_238546_238615(this, lambda, delegateTypeOpt: null, results[i].StateForLambda);
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 238445, 238639);
                            }
                        }
                    }
                    catch (System.Exception)
                    {
                        DynAbs.Tracing.TraceSender.TraceExitLoopByException(10899, 1, 295);
                        throw;
                    }
                    finally
                    {
                        DynAbs.Tracing.TraceSender.TraceExitLoop(10899, 1, 295);
                    }
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 236019, 238673);
                }

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 238689, 238866) || true) && (node is BoundCall { Method: { OriginalDefinition: LocalFunctionSymbol localFunction } })
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 238689, 238866);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 238814, 238851);

                    f_10899_238814_238850(this, localFunction);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 238689, 238866);
                }

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 238882, 241077) || true) && (f_10899_238886_238901_M(!node.HasErrors) && (DynAbs.Tracing.TraceSender.Expression_True(10899, 238886, 238929) && f_10899_238905_238929_M(!parametersOpt.IsDefault)))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 238882, 241077);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 239077, 239224);

                    CompareExchangeInfo
                    compareExchangeInfo = (DynAbs.Tracing.TraceSender.Conditional_F1(10899, 239119, 239150) || ((f_10899_239119_239150(this, method) && DynAbs.Tracing.TraceSender.Conditional_F2(10899, 239153, 239213)) || DynAbs.Tracing.TraceSender.Conditional_F3(10899, 239216, 239223))) ? f_10899_239153_239213(arguments, results, argsToParamsOpt) : default
                    ;
                    try
                    {
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 239383, 239388);

                        // Visit outbound assignments and post-conditions
                        // Note: the state may get split in this step
                        for (int
        i = 0
        ; (DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 239374, 240307) || true) && (i < arguments.Length)
        ; DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 239412, 239415)
        , i++, DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 239374, 240307))

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 239374, 240307);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 239457, 239668);

                            (ParameterSymbol? parameter, TypeWithAnnotations parameterType, FlowAnalysisAnnotations parameterAnnotations, _) =
                            f_10899_239597_239667(this, i, parametersOpt, argsToParamsOpt, expanded);

                            if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 239690, 239793) || true) && (parameter is null)
                            )

                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 239690, 239793);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 239761, 239770);

                                continue;
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 239690, 239793);
                            }
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 239817, 240288);

                            f_10899_239817_240287(this, arguments[i], f_10899_239932_239958(refKindsOpt, i), parameter, 
                                parameterType, parameterAnnotations, results[i], notNullParametersBuilder, 
                                (DynAbs.Tracing.TraceSender.Conditional_F1(10899, 240196, 240254) || 
                                (((f_10899_240197_240227_M(!compareExchangeInfo.IsDefault) && 
                                (DynAbs.Tracing.TraceSender.Expression_True(10899, 240197, 240253) && 
                                f_10899_240231_240248(parameter) == 0)) && 
                                DynAbs.Tracing.TraceSender.Conditional_F2(10899, 240257, 240276)) || 
                                DynAbs.Tracing.TraceSender.Conditional_F3(10899, 240279, 240286))) ? 
                                compareExchangeInfo : default);
                        }
                    }
                    catch (System.Exception)
                    {
                        DynAbs.Tracing.TraceSender.TraceExitLoopByException(10899, 1, 934);
                        throw;
                    }
                    finally
                    {
                        DynAbs.Tracing.TraceSender.TraceExitLoop(10899, 1, 934);
                    }
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 238882, 241077);
                }

                else

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 238882, 241077);
                    try
                    {
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 240382, 240387);
                        for (int
        i = 0
        ; (DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 240373, 241062) || true) && (i < arguments.Length)
        ; DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 240411, 240414)
        , i++, DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 240373, 241062))

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 240373, 241062);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 240712, 240740);

                            var
                            argument = arguments[i]
                            ;
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 240762, 240786);

                            var
                            result = results[i]
                            ;
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 240808, 240861);

                            var
                            argumentNoConversion = argumentsNoConversions[i]
                            ;
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 240883, 241043);

                            f_10899_240883_241042(this, TypeWithState.Create(f_10899_240951_240964(argument), result.RValueType.State), argument as BoundConversion, argumentNoConversion);
                        }
                    }
                    catch (System.Exception)
                    {
                        DynAbs.Tracing.TraceSender.TraceExitLoopByException(10899, 1, 690);
                        throw;
                    }
                    finally
                    {
                        DynAbs.Tracing.TraceSender.TraceExitLoop(10899, 1, 690);
                    }
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 238882, 241077);
                }

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 241093, 241321) || true) && (f_10899_241097_241118_M(!IsAnalyzingAttribute) && (DynAbs.Tracing.TraceSender.Expression_True(10899, 241097, 241138) && method is object) && (DynAbs.Tracing.TraceSender.Expression_True(10899, 241097, 241255) && (f_10899_241143_241173(method) & FlowAnalysisAnnotations.DoesNotReturn) == FlowAnalysisAnnotations.DoesNotReturn))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 241093, 241321);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 241289, 241306);

                    f_10899_241289_241305(this);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 241093, 241321);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 241337, 241370);

                DynAbs.Tracing.TraceSender.TraceInvocationWrapper(() => DynAbs.Tracing.TraceSender.TraceConditionalAccessExpression(notNullParametersBuilder, 10899, 241337, 241369)?.Free(), 10899, 241362, 241369);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 241384, 241430);

                return (method, results, shouldReturnNotNull);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 233664, 241441);

                bool
                f_10899_234213_234233_M(bool
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 234213, 234233);
                    return return_v;
                }


                int
                f_10899_234200_234234(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 234200, 234234);
                    return 0;
                }


                (System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression> arguments, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Conversion> conversions)
                f_10899_234397_234446(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                arguments, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.RefKind>
                refKindsOpt)
                {
                    var return_v = this_param.RemoveArgumentConversions(arguments, refKindsOpt);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 234397, 234446);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.NullableWalker.VisitArgumentResult>
                f_10899_234565_234697(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.SyntaxNode
                syntax, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                arguments, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.RefKind>
                refKindsOpt, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol>
                parametersOpt, System.Collections.Immutable.ImmutableArray<int>
                argsToParamsOpt, Microsoft.CodeAnalysis.BitVector
                defaultArguments, bool
                expanded)
                {
                    var return_v = this_param.VisitArgumentsEvaluate(syntax, arguments, refKindsOpt, parametersOpt, argsToParamsOpt, defaultArguments, expanded);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 234565, 234697);
                    return return_v;
                }


                bool?
                f_10899_234766_234789_M(bool?
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 234766, 234789);
                    return return_v;
                }


                bool
                f_10899_234835_234865(Microsoft.CodeAnalysis.CSharp.BoundNode
                node)
                {
                    var return_v = HasImplicitTypeArguments(node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 234835, 234865);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                f_10899_234949_235016(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.NullableWalker.VisitArgumentResult>
                argumentResults, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                arguments)
                {
                    var return_v = this_param.GetArgumentsForMethodTypeInference(argumentResults, arguments);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 234949, 235016);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                f_10899_234916_235057(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                method, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                arguments, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.RefKind>
                argumentRefKindsOpt, System.Collections.Immutable.ImmutableArray<int>
                argsToParamsOpt, bool
                expanded)
                {
                    var return_v = this_param.InferMethodTypeArguments(method, arguments, argumentRefKindsOpt, argsToParamsOpt, expanded);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 234916, 235057);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol>
                f_10899_235096_235113(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                this_param)
                {
                    var return_v = this_param.Parameters;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 235096, 235113);
                    return return_v;
                }


                bool
                f_10899_235155_235197(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                method)
                {
                    var return_v = ConstraintsHelper.RequiresChecking(method);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 235155, 235197);
                    return return_v;
                }


                int
                f_10899_235286_235677(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                method)
                {
                    this_param.CheckMethodConstraints(syntax, method);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 235286, 235677);
                    return 0;
                }


                bool
                f_10899_235764_235785_M(bool
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 235764, 235785);
                    return return_v;
                }


                bool
                f_10899_235789_235813_M(bool
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 235789, 235813);
                    return return_v;
                }


                Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol>
                f_10899_235954_235997()
                {
                    var return_v = ArrayBuilder<ParameterSymbol>.GetInstance();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 235954, 235997);
                    return return_v;
                }


                bool
                f_10899_236023_236038_M(bool
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 236023, 236038);
                    return return_v;
                }


                bool
                f_10899_236042_236066_M(bool
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 236042, 236066);
                    return return_v;
                }


                bool
                f_10899_236244_236264()
                {
                    var return_v = IsAnalyzingAttribute;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 236244, 236264);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableHashSet<string>?
                f_10899_236274_236313_M(System.Collections.Immutable.ImmutableHashSet<string>?
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 236274, 236313);
                    return return_v;
                }


                (Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol? Parameter, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations Type, Microsoft.CodeAnalysis.CSharp.Symbols.FlowAnalysisAnnotations Annotations, bool isExpandedParamsArgument)
                f_10899_236581_236651(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, int
                argumentOrdinal, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol>
                parametersOpt, System.Collections.Immutable.ImmutableArray<int>
                argsToParamsOpt, bool
                expanded)
                {
                    var return_v = this_param.GetCorrespondingParameter(argumentOrdinal, parametersOpt, argsToParamsOpt, expanded);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 236581, 236651);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundConversion?
                f_10899_237064_237121(Microsoft.CodeAnalysis.CSharp.BoundExpression
                conversionOpt, Microsoft.CodeAnalysis.CSharp.BoundExpression
                convertedNode)
                {
                    var return_v = GetConversionIfApplicable(conversionOpt, convertedNode);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 237064, 237121);
                    return return_v;
                }


                Microsoft.CodeAnalysis.RefKind
                f_10899_237309_237335(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.RefKind>
                refKindsOpt, int
                index)
                {
                    var return_v = GetRefKind(refKindsOpt, index);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 237309, 237335);
                    return return_v;
                }


                int
                f_10899_236977_237557(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundConversion?
                conversionOpt, Microsoft.CodeAnalysis.CSharp.BoundExpression
                argumentNoConversion, Microsoft.CodeAnalysis.CSharp.Conversion
                conversion, Microsoft.CodeAnalysis.RefKind
                refKind, Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol
                parameter, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                parameterType, Microsoft.CodeAnalysis.CSharp.Symbols.FlowAnalysisAnnotations
                parameterAnnotations, Microsoft.CodeAnalysis.CSharp.NullableWalker.VisitArgumentResult
                result, bool
                extensionMethodThisArgument)
                {
                    this_param.VisitArgumentConversionAndInboundAssignmentsAndPreConditions(conversionOpt, argumentNoConversion, conversion, refKind, parameter, parameterType, parameterAnnotations, result, extensionMethodThisArgument);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 236977, 237557);
                    return 0;
                }


                string
                f_10899_237810_237824(Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol
                this_param)
                {
                    var return_v = this_param.Name;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 237810, 237824);
                    return return_v;
                }


                bool?
                f_10899_237768_237825_I(bool?
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 237768, 237825);
                    return return_v;
                }


                int
                f_10899_238546_238615(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundLambda
                node, Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol?
                delegateTypeOpt, Microsoft.CodeAnalysis.Optional<Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState>
                initialState)
                {
                    this_param.VisitLambda(node, delegateTypeOpt: delegateTypeOpt, initialState);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 238546, 238615);
                    return 0;
                }


                int
                f_10899_238814_238850(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.LocalFunctionSymbol
                symbol)
                {
                    this_param.VisitLocalFunctionUse(symbol);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 238814, 238850);
                    return 0;
                }


                bool
                f_10899_238886_238901_M(bool
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 238886, 238901);
                    return return_v;
                }


                bool
                f_10899_238905_238929_M(bool
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 238905, 238929);
                    return return_v;
                }


                bool
                f_10899_239119_239150(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol?
                method)
                {
                    var return_v = this_param.IsCompareExchangeMethod(method);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 239119, 239150);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.NullableWalker.CompareExchangeInfo
                f_10899_239153_239213(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                arguments, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.NullableWalker.VisitArgumentResult>
                results, System.Collections.Immutable.ImmutableArray<int>
                argsToParamsOpt)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.NullableWalker.CompareExchangeInfo(arguments, results, argsToParamsOpt);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 239153, 239213);
                    return return_v;
                }


                (Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol? Parameter, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations Type, Microsoft.CodeAnalysis.CSharp.Symbols.FlowAnalysisAnnotations Annotations, bool isExpandedParamsArgument)
                f_10899_239597_239667(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, int
                argumentOrdinal, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol>
                parametersOpt, System.Collections.Immutable.ImmutableArray<int>
                argsToParamsOpt, bool
                expanded)
                {
                    var return_v = this_param.GetCorrespondingParameter(argumentOrdinal, parametersOpt, argsToParamsOpt, expanded);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 239597, 239667);
                    return return_v;
                }


                Microsoft.CodeAnalysis.RefKind
                f_10899_239932_239958(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.RefKind>
                refKindsOpt, int
                index)
                {
                    var return_v = GetRefKind(refKindsOpt, index);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 239932, 239958);
                    return return_v;
                }


                bool
                f_10899_240197_240227_M(bool
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 240197, 240227);
                    return return_v;
                }


                int
                f_10899_240231_240248(Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol
                this_param)
                {
                    var return_v = this_param.Ordinal;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 240231, 240248);
                    return return_v;
                }


                int
                f_10899_239817_240287(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                argument, Microsoft.CodeAnalysis.RefKind
                refKind, Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol
                parameter, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                parameterType, Microsoft.CodeAnalysis.CSharp.Symbols.FlowAnalysisAnnotations
                parameterAnnotations, Microsoft.CodeAnalysis.CSharp.NullableWalker.VisitArgumentResult
                result, Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol>?
                notNullParametersOpt, Microsoft.CodeAnalysis.CSharp.NullableWalker.CompareExchangeInfo
                compareExchangeInfoOpt)
                {
                    this_param.VisitArgumentOutboundAssignmentsAndPostConditions(argument, refKind, parameter, parameterType, parameterAnnotations, result, notNullParametersOpt, compareExchangeInfoOpt);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 239817, 240287);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?
                f_10899_240951_240964(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 240951, 240964);
                    return return_v;
                }


                int
                f_10899_240883_241042(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                resultType, Microsoft.CodeAnalysis.CSharp.BoundExpression
                conversionOpt, Microsoft.CodeAnalysis.CSharp.BoundExpression
                convertedNode)
                {
                    this_param.TrackAnalyzedNullabilityThroughConversionGroup(resultType, (Microsoft.CodeAnalysis.CSharp.BoundConversion?)conversionOpt, convertedNode);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 240883, 241042);
                    return 0;
                }


                bool
                f_10899_241097_241118_M(bool
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 241097, 241118);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.FlowAnalysisAnnotations
                f_10899_241143_241173(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                this_param)
                {
                    var return_v = this_param.FlowAnalysisAnnotations;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 241143, 241173);
                    return return_v;
                }


                int
                f_10899_241289_241305(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param)
                {
                    this_param.SetUnreachable();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 241289, 241305);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 233664, 241441);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 233664, 241441);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private void ApplyMemberPostConditions(BoundExpression? receiverOpt, MethodSymbol? method)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 241453, 244613);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 241568, 241642) || true) && (method is null)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 241568, 241642);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 241620, 241627);

                    return;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 241568, 241642);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 241658, 241799);

                int
                receiverSlot =
                (DynAbs.Tracing.TraceSender.Conditional_F1(10899, 241694, 241709) || ((f_10899_241694_241709(method) && DynAbs.Tracing.TraceSender.Conditional_F2(10899, 241712, 241713)) || DynAbs.Tracing.TraceSender.Conditional_F3(10899, 241733, 241798))) ? 0 : (DynAbs.Tracing.TraceSender.Conditional_F1(10899, 241733, 241752) || ((receiverOpt is null && DynAbs.Tracing.TraceSender.Conditional_F2(10899, 241755, 241757)) || DynAbs.Tracing.TraceSender.Conditional_F3(10899, 241777, 241798))) ? -1 : f_10899_241777_241798(this, receiverOpt)
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 241815, 241891) || true) && (receiverSlot < 0)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 241815, 241891);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 241869, 241876);

                    return;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 241815, 241891);
                }
                {
                    try
                    {
                        do

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 241907, 243124);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 241942, 241975);

                            var
                            type = f_10899_241953_241974(method)
                            ;
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 241993, 242036);

                            var
                            notNullMembers = f_10899_242014_242035(method)
                            ;
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 242054, 242113);

                            var
                            notNullWhenTrueMembers = f_10899_242083_242112(method)
                            ;
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 242131, 242192);

                            var
                            notNullWhenFalseMembers = f_10899_242161_242191(method)
                            ;

                            if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 242212, 242635) || true) && (IsConditionalState)
                            )

                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 242212, 242635);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 242276, 242357);

                                f_10899_242276_242356(receiverSlot, type, notNullMembers, ref StateWhenTrue);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 242379, 242461);

                                f_10899_242379_242460(receiverSlot, type, notNullMembers, ref StateWhenFalse);
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 242212, 242635);
                            }

                            else

                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 242212, 242635);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 242543, 242616);

                                f_10899_242543_242615(receiverSlot, type, notNullMembers, ref State);
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 242212, 242635);
                            }

                            if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 242655, 243019) || true) && (f_10899_242659_242690_M(!notNullWhenTrueMembers.IsEmpty) || (DynAbs.Tracing.TraceSender.Expression_False(10899, 242659, 242726) || f_10899_242694_242726_M(!notNullWhenFalseMembers.IsEmpty)))
                            )

                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 242655, 243019);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 242768, 242776);

                                f_10899_242768_242775(this);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 242798, 242887);

                                f_10899_242798_242886(receiverSlot, type, notNullWhenTrueMembers, ref StateWhenTrue);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 242909, 243000);

                                f_10899_242909_242999(receiverSlot, type, notNullWhenFalseMembers, ref StateWhenFalse);
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 242655, 243019);
                            }
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 243039, 243072);

                            method = f_10899_243048_243071(method);
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 241907, 243124);
                        }
                        while ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 241907, 243124) || true) && (method != null)
                        );
                    }
                    catch (System.Exception)
                    {
                        DynAbs.Tracing.TraceSender.TraceExitLoopByException(10899, 241907, 243124);
                        throw;
                    }
                    finally
                    {
                        DynAbs.Tracing.TraceSender.TraceExitLoop(10899, 241907, 243124);
                    }
                }
                void applyMemberPostConditions(int receiverSlot, TypeSymbol type, ImmutableArray<string> members, ref LocalState state)
                {
                    try
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 243140, 243573);

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 243292, 243379) || true) && (members.IsEmpty)
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 243292, 243379);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 243353, 243360);

                            return;
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 243292, 243379);
                        }
                        try
                        {
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 243399, 243558);
                            foreach (var memberName in f_10899_243426_243433_I(members))
                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 243399, 243558);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 243475, 243539);

                                f_10899_243475_243538(receiverSlot, type, memberName, ref state);
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 243399, 243558);
                            }
                        }
                        catch (System.Exception)
                        {
                            DynAbs.Tracing.TraceSender.TraceExitLoopByException(10899, 1, 160);
                            throw;
                        }
                        finally
                        {
                            DynAbs.Tracing.TraceSender.TraceExitLoop(10899, 1, 160);
                        }
                        DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 243140, 243573);

                        int
                        f_10899_243475_243538(int
                        receiverSlot, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                        type, string
                        memberName, ref Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState
                        state)
                        {
                            markMembersAsNotNull(receiverSlot, type, memberName, ref state);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 243475, 243538);
                            return 0;
                        }


                        System.Collections.Immutable.ImmutableArray<string>
                        f_10899_243426_243433_I(System.Collections.Immutable.ImmutableArray<string>
                        i)
                        {
                            var return_v = i;
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 243426, 243433);
                            return return_v;
                        }

                    }
                    catch
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 243140, 243573);
                        throw;
                    }
                    finally
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 243140, 243573);
                    }
                }

                void markMembersAsNotNull(int receiverSlot, TypeSymbol type, string memberName, ref LocalState state)
                {
                    try
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 243589, 244602);
                        try
                        {
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 243723, 244587);
                            foreach (Symbol member in f_10899_243749_243776_I(f_10899_243749_243776(type, memberName)))
                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 243723, 244587);

                                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 243818, 243927) || true) && (f_10899_243822_243837(member))
                                )

                                {
                                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 243818, 243927);
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 243887, 243904);

                                    receiverSlot = 0;
                                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 243818, 243927);
                                }
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 243951, 244568);

                                switch (f_10899_243959_243970(member))
                                {

                                    case SymbolKind.Field:
                                    case SymbolKind.Property:
                                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 243951, 244568);

                                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 244123, 244376) || true) && (f_10899_244127_244164(this, member, receiverSlot) is int memberSlot && (DynAbs.Tracing.TraceSender.Expression_True(10899, 244127, 244233) && memberSlot > 0))
                                        )

                                        {
                                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 244123, 244376);
                                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 244299, 244345);

                                            state[memberSlot] = NullableFlowState.NotNull;
                                            DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 244123, 244376);
                                        }
                                        DynAbs.Tracing.TraceSender.TraceBreak(10899, 244406, 244412);

                                        break;
                                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 243951, 244568);

                                    case SymbolKind.Event:
                                    case SymbolKind.Method:
                                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 243951, 244568);
                                        DynAbs.Tracing.TraceSender.TraceBreak(10899, 244539, 244545);

                                        break;
                                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 243951, 244568);
                                }
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 243723, 244587);
                            }
                        }
                        catch (System.Exception)
                        {
                            DynAbs.Tracing.TraceSender.TraceExitLoopByException(10899, 1, 865);
                            throw;
                        }
                        finally
                        {
                            DynAbs.Tracing.TraceSender.TraceExitLoop(10899, 1, 865);
                        }
                        DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 243589, 244602);

                        System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>
                        f_10899_243749_243776(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                        this_param, string
                        name)
                        {
                            var return_v = this_param.GetMembers(name);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 243749, 243776);
                            return return_v;
                        }


                        bool
                        f_10899_243822_243837(Microsoft.CodeAnalysis.CSharp.Symbol
                        this_param)
                        {
                            var return_v = this_param.IsStatic;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 243822, 243837);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.SymbolKind
                        f_10899_243959_243970(Microsoft.CodeAnalysis.CSharp.Symbol
                        this_param)
                        {
                            var return_v = this_param.Kind;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 243959, 243970);
                            return return_v;
                        }


                        int
                        f_10899_244127_244164(Microsoft.CodeAnalysis.CSharp.NullableWalker
                        this_param, Microsoft.CodeAnalysis.CSharp.Symbol
                        symbol, int
                        containingSlot)
                        {
                            var return_v = this_param.GetOrCreateSlot(symbol, containingSlot);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 244127, 244164);
                            return return_v;
                        }


                        System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>
                        f_10899_243749_243776_I(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>
                        i)
                        {
                            var return_v = i;
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 243749, 243776);
                            return return_v;
                        }

                    }
                    catch
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 243589, 244602);
                        throw;
                    }
                    finally
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 243589, 244602);
                    }
                }
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 241453, 244613);

                bool
                f_10899_241694_241709(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                this_param)
                {
                    var return_v = this_param.IsStatic;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 241694, 241709);
                    return return_v;
                }


                int
                f_10899_241777_241798(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                node)
                {
                    var return_v = this_param.MakeSlot(node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 241777, 241798);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                f_10899_241953_241974(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                this_param)
                {
                    var return_v = this_param.ContainingType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 241953, 241974);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<string>
                f_10899_242014_242035(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                this_param)
                {
                    var return_v = this_param.NotNullMembers;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 242014, 242035);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<string>
                f_10899_242083_242112(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                this_param)
                {
                    var return_v = this_param.NotNullWhenTrueMembers;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 242083, 242112);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<string>
                f_10899_242161_242191(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                this_param)
                {
                    var return_v = this_param.NotNullWhenFalseMembers;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 242161, 242191);
                    return return_v;
                }


                int
                f_10899_242276_242356(int
                receiverSlot, Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                type, System.Collections.Immutable.ImmutableArray<string>
                members, ref Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState
                state)
                {
                    applyMemberPostConditions(receiverSlot, (Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol)type, members, ref state);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 242276, 242356);
                    return 0;
                }


                int
                f_10899_242379_242460(int
                receiverSlot, Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                type, System.Collections.Immutable.ImmutableArray<string>
                members, ref Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState
                state)
                {
                    applyMemberPostConditions(receiverSlot, (Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol)type, members, ref state);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 242379, 242460);
                    return 0;
                }


                int
                f_10899_242543_242615(int
                receiverSlot, Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                type, System.Collections.Immutable.ImmutableArray<string>
                members, ref Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState
                state)
                {
                    applyMemberPostConditions(receiverSlot, (Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol)type, members, ref state);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 242543, 242615);
                    return 0;
                }


                bool
                f_10899_242659_242690_M(bool
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 242659, 242690);
                    return return_v;
                }


                bool
                f_10899_242694_242726_M(bool
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 242694, 242726);
                    return return_v;
                }


                int
                f_10899_242768_242775(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param)
                {
                    this_param.Split();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 242768, 242775);
                    return 0;
                }


                int
                f_10899_242798_242886(int
                receiverSlot, Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                type, System.Collections.Immutable.ImmutableArray<string>
                members, ref Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState
                state)
                {
                    applyMemberPostConditions(receiverSlot, (Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol)type, members, ref state);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 242798, 242886);
                    return 0;
                }


                int
                f_10899_242909_242999(int
                receiverSlot, Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                type, System.Collections.Immutable.ImmutableArray<string>
                members, ref Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState
                state)
                {
                    applyMemberPostConditions(receiverSlot, (Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol)type, members, ref state);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 242909, 242999);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                f_10899_243048_243071(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                this_param)
                {
                    var return_v = this_param.OverriddenMethod;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 243048, 243071);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 241453, 244613);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 241453, 244613);
            }
        }

        private ImmutableArray<VisitArgumentResult> VisitArgumentsEvaluate(
                    SyntaxNode syntax,
                    ImmutableArray<BoundExpression> arguments,
                    ImmutableArray<RefKind> refKindsOpt,
                    ImmutableArray<ParameterSymbol> parametersOpt,
                    ImmutableArray<int> argsToParamsOpt,
                    BitVector defaultArguments,
                    bool expanded)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 244625, 246248);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 245034, 245068);

                f_10899_245034_245067(!IsConditionalState);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 245082, 245107);

                int
                n = arguments.Length
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 245121, 245263) || true) && (n == 0 && (DynAbs.Tracing.TraceSender.Expression_True(10899, 245125, 245165) && parametersOpt.IsDefaultOrEmpty))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 245121, 245263);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 245199, 245248);

                    return ImmutableArray<VisitArgumentResult>.Empty;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 245121, 245263);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 245279, 245349);

                var
                visitedParameters = f_10899_245303_245348()
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 245363, 245433);

                var
                resultsBuilder = f_10899_245384_245432(n)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 245447, 245500);

                var
                previousDisableDiagnostics = _disableDiagnostics
                ;
                try
                {
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 245523, 245528);
                    for (int
        i = 0
        ; (DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 245514, 246043) || true) && (i < n)
        ; DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 245537, 245540)
        , i++, DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 245514, 246043))

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 245514, 246043);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 245574, 245691);

                        var (parameter, _, parameterAnnotations, _) = f_10899_245620_245690(this, i, parametersOpt, argsToParamsOpt, expanded);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 245781, 245853);

                        _disableDiagnostics = defaultArguments[i] || (DynAbs.Tracing.TraceSender.Expression_False(10899, 245803, 245852) || previousDisableDiagnostics);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 245871, 245977);

                        f_10899_245871_245976(resultsBuilder, f_10899_245890_245975(this, arguments[i], f_10899_245926_245952(refKindsOpt, i), parameterAnnotations));
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 245995, 246028);

                        f_10899_245995_246027(visitedParameters, parameter);
                    }
                }
                catch (System.Exception)
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoopByException(10899, 1, 530);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoop(10899, 1, 530);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 246057, 246106);

                _disableDiagnostics = previousDisableDiagnostics;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 246122, 246141);

                f_10899_246122_246140(this);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 246155, 246180);

                f_10899_246155_246179(visitedParameters);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 246194, 246237);

                return f_10899_246201_246236(resultsBuilder);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 244625, 246248);

                int
                f_10899_245034_245067(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 245034, 245067);
                    return 0;
                }


                Microsoft.CodeAnalysis.PooledObjects.PooledHashSet<Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol?>
                f_10899_245303_245348()
                {
                    var return_v = PooledHashSet<ParameterSymbol?>.GetInstance();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 245303, 245348);
                    return return_v;
                }


                Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.NullableWalker.VisitArgumentResult>
                f_10899_245384_245432(int
                capacity)
                {
                    var return_v = ArrayBuilder<VisitArgumentResult>.GetInstance(capacity);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 245384, 245432);
                    return return_v;
                }


                (Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol? Parameter, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations Type, Microsoft.CodeAnalysis.CSharp.Symbols.FlowAnalysisAnnotations Annotations, bool isExpandedParamsArgument)
                f_10899_245620_245690(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, int
                argumentOrdinal, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol>
                parametersOpt, System.Collections.Immutable.ImmutableArray<int>
                argsToParamsOpt, bool
                expanded)
                {
                    var return_v = this_param.GetCorrespondingParameter(argumentOrdinal, parametersOpt, argsToParamsOpt, expanded);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 245620, 245690);
                    return return_v;
                }


                Microsoft.CodeAnalysis.RefKind
                f_10899_245926_245952(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.RefKind>
                refKindsOpt, int
                index)
                {
                    var return_v = GetRefKind(refKindsOpt, index);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 245926, 245952);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.NullableWalker.VisitArgumentResult
                f_10899_245890_245975(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                argument, Microsoft.CodeAnalysis.RefKind
                refKind, Microsoft.CodeAnalysis.CSharp.Symbols.FlowAnalysisAnnotations
                annotations)
                {
                    var return_v = this_param.VisitArgumentEvaluate(argument, refKind, annotations);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 245890, 245975);
                    return return_v;
                }


                int
                f_10899_245871_245976(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.NullableWalker.VisitArgumentResult>
                this_param, Microsoft.CodeAnalysis.CSharp.NullableWalker.VisitArgumentResult
                item)
                {
                    this_param.Add(item);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 245871, 245976);
                    return 0;
                }


                bool
                f_10899_245995_246027(Microsoft.CodeAnalysis.PooledObjects.PooledHashSet<Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol?>
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol?
                item)
                {
                    var return_v = this_param.Add(item);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 245995, 246027);
                    return return_v;
                }


                int
                f_10899_246122_246140(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param)
                {
                    this_param.SetInvalidResult();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 246122, 246140);
                    return 0;
                }


                int
                f_10899_246155_246179(Microsoft.CodeAnalysis.PooledObjects.PooledHashSet<Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol?>
                this_param)
                {
                    this_param.Free();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 246155, 246179);
                    return 0;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.NullableWalker.VisitArgumentResult>
                f_10899_246201_246236(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.NullableWalker.VisitArgumentResult>
                this_param)
                {
                    var return_v = this_param.ToImmutableAndFree();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 246201, 246236);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 244625, 246248);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 244625, 246248);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private VisitArgumentResult VisitArgumentEvaluate(BoundExpression argument, RefKind refKind, FlowAnalysisAnnotations annotations)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 246260, 248516);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 246414, 246448);

                f_10899_246414_246447(!IsConditionalState);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 246462, 246568);

                var
                savedState = (DynAbs.Tracing.TraceSender.Conditional_F1(10899, 246479, 246514) || (((f_10899_246480_246493(argument) == BoundKind.Lambda) && DynAbs.Tracing.TraceSender.Conditional_F2(10899, 246517, 246535)) || DynAbs.Tracing.TraceSender.Conditional_F3(10899, 246538, 246567))) ? this.State.Clone() : default(Optional<LocalState>)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 246659, 248384);

                switch (refKind)
                {

                    case RefKind.Ref:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 246659, 248384);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 246747, 246763);

                        f_10899_246747_246762(this, argument);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 246785, 246795);

                        f_10899_246785_246794(this);
                        DynAbs.Tracing.TraceSender.TraceBreak(10899, 246817, 246823);

                        break;
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 246659, 248384);

                    case RefKind.None:
                    case RefKind.In:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 246659, 248384);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 246915, 247864);

                        switch (annotations & (FlowAnalysisAnnotations.DoesNotReturnIfTrue | FlowAnalysisAnnotations.DoesNotReturnIfFalse))
                        {

                            case FlowAnalysisAnnotations.DoesNotReturnIfTrue:
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 246915, 247864);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 247158, 247174);

                                f_10899_247158_247173(this, argument);

                                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 247204, 247348) || true) && (IsConditionalState)
                                )

                                {
                                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 247204, 247348);
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 247292, 247317);

                                    f_10899_247292_247316(this, StateWhenFalse);
                                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 247204, 247348);
                                }
                                DynAbs.Tracing.TraceSender.TraceBreak(10899, 247378, 247384);

                                break;
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 246915, 247864);

                            case FlowAnalysisAnnotations.DoesNotReturnIfFalse:
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 246915, 247864);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 247492, 247508);

                                f_10899_247492_247507(this, argument);

                                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 247538, 247681) || true) && (IsConditionalState)
                                )

                                {
                                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 247538, 247681);
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 247626, 247650);

                                    f_10899_247626_247649(this, StateWhenTrue);
                                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 247538, 247681);
                                }
                                DynAbs.Tracing.TraceSender.TraceBreak(10899, 247711, 247717);

                                break;
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 246915, 247864);

                            default:
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 246915, 247864);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 247783, 247805);

                                f_10899_247783_247804(this, argument);
                                DynAbs.Tracing.TraceSender.TraceBreak(10899, 247835, 247841);

                                break;
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 246915, 247864);
                        }
                        DynAbs.Tracing.TraceSender.TraceBreak(10899, 247886, 247892);

                        break;
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 246659, 248384);

                    case RefKind.Out:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 246659, 248384);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 248164, 248180);

                        f_10899_248164_248179(this, argument);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 248317, 248341);

                        f_10899_248317_248340(this, argument);
                        DynAbs.Tracing.TraceSender.TraceBreak(10899, 248363, 248369);

                        break;
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 246659, 248384);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 248400, 248434);

                f_10899_248400_248433(!IsConditionalState);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 248448, 248505);

                return f_10899_248455_248504(_visitResult, savedState);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 246260, 248516);

                int
                f_10899_246414_246447(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 246414, 246447);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.BoundKind
                f_10899_246480_246493(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.Kind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 246480, 246493);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundNode?
                f_10899_246747_246762(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                node)
                {
                    var return_v = this_param.Visit((Microsoft.CodeAnalysis.CSharp.BoundNode)node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 246747, 246762);
                    return return_v;
                }


                int
                f_10899_246785_246794(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param)
                {
                    this_param.Unsplit();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 246785, 246794);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.BoundNode?
                f_10899_247158_247173(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                node)
                {
                    var return_v = this_param.Visit((Microsoft.CodeAnalysis.CSharp.BoundNode)node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 247158, 247173);
                    return return_v;
                }


                int
                f_10899_247292_247316(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState
                newState)
                {
                    this_param.SetState(newState);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 247292, 247316);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.BoundNode?
                f_10899_247492_247507(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                node)
                {
                    var return_v = this_param.Visit((Microsoft.CodeAnalysis.CSharp.BoundNode)node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 247492, 247507);
                    return return_v;
                }


                int
                f_10899_247626_247649(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState
                newState)
                {
                    this_param.SetState(newState);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 247626, 247649);
                    return 0;
                }


                int
                f_10899_247783_247804(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                node)
                {
                    this_param.VisitRvalue(node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 247783, 247804);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.BoundNode?
                f_10899_248164_248179(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                node)
                {
                    var return_v = this_param.Visit((Microsoft.CodeAnalysis.CSharp.BoundNode)node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 248164, 248179);
                    return return_v;
                }


                int
                f_10899_248317_248340(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                expression)
                {
                    this_param.UseLvalueOnly(expression);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 248317, 248340);
                    return 0;
                }


                int
                f_10899_248400_248433(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 248400, 248433);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.NullableWalker.VisitArgumentResult
                f_10899_248455_248504(Microsoft.CodeAnalysis.CSharp.NullableWalker.VisitResult
                visitResult, Microsoft.CodeAnalysis.Optional<Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState>
                stateForLambda)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.NullableWalker.VisitArgumentResult(visitResult, stateForLambda);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 248455, 248504);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 246260, 248516);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 246260, 248516);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private void VisitArgumentConversionAndInboundAssignmentsAndPreConditions(
                    BoundConversion? conversionOpt,
                    BoundExpression argumentNoConversion,
                    Conversion conversion,
                    RefKind refKind,
                    ParameterSymbol parameter,
                    TypeWithAnnotations parameterType,
                    FlowAnalysisAnnotations parameterAnnotations,
                    VisitArgumentResult result,
                    bool extensionMethodThisArgument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 248678, 253402);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 249174, 249213);

                f_10899_249174_249212(!this.IsConditionalState);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 249376, 249411);

                var
                resultType = result.RValueType
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 249425, 253336);

                switch (refKind)
                {

                    case RefKind.None:
                    case RefKind.In:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 249425, 253336);
                        {

                            if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 249702, 250489) || true) && (conversion is { Kind: ConversionKind.ImplicitUserDefined })
                            )

                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 249702, 250489);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 249822, 249863);

                                var
                                argumentResultType = resultType.Type
                                ;
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 249893, 250062);

                                conversion = f_10899_249906_250061(_conversions, argumentNoConversion, argumentResultType, parameterType.Type, fromExplicitCast: false, extensionMethodThisArgument: false);

                                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 250092, 250462) || true) && (f_10899_250096_250114_M(!conversion.Exists) && (DynAbs.Tracing.TraceSender.Expression_True(10899, 250096, 250152) && f_10899_250118_250152_M(!argumentNoConversion.IsSuppressed)))
                                )

                                {
                                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 250092, 250462);
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 250218, 250263);

                                    f_10899_250218_250262(argumentResultType is not null);
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 250297, 250431);

                                    f_10899_250297_250430(this, argumentNoConversion.Syntax, argumentResultType, parameter, parameterType.Type, forOutput: false);
                                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 250092, 250462);
                                }
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 249702, 250489);
                            }
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 250517, 251354);

                            var
                            stateAfterConversion = f_10899_250544_251353(this, conversionOpt: conversionOpt, conversionOperand: argumentNoConversion, conversion: conversion, targetTypeWithNullability: f_10899_250799_250858(parameterType, parameterAnnotations), operandType: resultType, checkConversion: true, fromExplicitCast: false, useLegacyWarnings: false, assignmentKind: AssignmentKind.Argument, parameterOpt: parameter, extensionMethodThisArgument: extensionMethodThisArgument, stateForLambda: result.StateForLambda)
                            ;

                            if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 251500, 251754) || true) && (f_10899_251504_251615(this, stateAfterConversion, parameterAnnotations, f_10899_251578_251614(argumentNoConversion.Syntax)))
                            )

                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 251500, 251754);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 251673, 251727);

                                f_10899_251673_251726(this, argumentNoConversion, ref State);
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 251500, 251754);
                            }
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 251780, 251872);

                            f_10899_251780_251871(this, argumentNoConversion, stateAfterConversion, updateAnalyzedNullability: false);
                        }
                        DynAbs.Tracing.TraceSender.TraceBreak(10899, 251917, 251923);

                        break;
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 249425, 253336);

                    case RefKind.Ref:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 249425, 253336);

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 251980, 253130) || true) && (f_10899_251984_252018_M(!argumentNoConversion.IsSuppressed))
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 251980, 253130);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 252068, 252109);

                            var
                            lvalueResultType = result.LValueType
                            ;

                            if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 252135, 253107) || true) && (f_10899_252139_252203(lvalueResultType.Type, parameterType.Type))
                            )

                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 252135, 253107);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 252351, 252480);

                                f_10899_252351_252479(this, argumentNoConversion, argumentType: lvalueResultType.Type, parameter, parameterType.Type);
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 252135, 253107);
                            }

                            else

                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 252135, 253107);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 252669, 252826);

                                f_10899_252669_252825(this, argumentNoConversion, f_10899_252727_252786(parameterType, parameterAnnotations), resultType, useLegacyWarnings: false);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 252978, 253080);

                                f_10899_252978_253079(this, resultType, parameterAnnotations, f_10899_253042_253078(argumentNoConversion.Syntax));
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 252135, 253107);
                            }
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 251980, 253130);
                        }
                        DynAbs.Tracing.TraceSender.TraceBreak(10899, 253154, 253160);

                        break;
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 249425, 253336);

                    case RefKind.Out:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 249425, 253336);
                        DynAbs.Tracing.TraceSender.TraceBreak(10899, 253217, 253223);

                        break;
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 249425, 253336);

                    default:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 249425, 253336);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 253271, 253321);

                        throw f_10899_253277_253320(refKind);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 249425, 253336);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 253352, 253391);

                f_10899_253352_253390(!this.IsConditionalState);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 248678, 253402);

                int
                f_10899_249174_249212(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 249174, 249212);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.Conversion
                f_10899_249906_250061(Microsoft.CodeAnalysis.CSharp.Conversions
                conversions, Microsoft.CodeAnalysis.CSharp.BoundExpression
                sourceExpression, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?
                sourceType, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                destinationType, bool
                fromExplicitCast, bool
                extensionMethodThisArgument)
                {
                    var return_v = GenerateConversion(conversions, sourceExpression, sourceType, destinationType, fromExplicitCast: fromExplicitCast, extensionMethodThisArgument: extensionMethodThisArgument);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 249906, 250061);
                    return return_v;
                }


                bool
                f_10899_250096_250114_M(bool
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 250096, 250114);
                    return return_v;
                }


                bool
                f_10899_250118_250152_M(bool
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 250118, 250152);
                    return return_v;
                }


                int
                f_10899_250218_250262(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 250218, 250262);
                    return 0;
                }


                int
                f_10899_250297_250430(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.SyntaxNode
                argument, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                argumentType, Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol
                parameter, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                parameterType, bool
                forOutput)
                {
                    this_param.ReportNullabilityMismatchInArgument(argument, argumentType, parameter, parameterType, forOutput: forOutput);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 250297, 250430);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                f_10899_250799_250858(Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                declaredType, Microsoft.CodeAnalysis.CSharp.Symbols.FlowAnalysisAnnotations
                flowAnalysisAnnotations)
                {
                    var return_v = ApplyLValueAnnotations(declaredType, flowAnalysisAnnotations);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 250799, 250858);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                f_10899_250544_251353(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundConversion?
                conversionOpt, Microsoft.CodeAnalysis.CSharp.BoundExpression
                conversionOperand, Microsoft.CodeAnalysis.CSharp.Conversion
                conversion, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                targetTypeWithNullability, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                operandType, bool
                checkConversion, bool
                fromExplicitCast, bool
                useLegacyWarnings, Microsoft.CodeAnalysis.CSharp.NullableWalker.AssignmentKind
                assignmentKind, Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol
                parameterOpt, bool
                extensionMethodThisArgument, Microsoft.CodeAnalysis.Optional<Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState>
                stateForLambda)
                {
                    var return_v = this_param.VisitConversion(conversionOpt: conversionOpt, conversionOperand: conversionOperand, conversion: conversion, targetTypeWithNullability: targetTypeWithNullability, operandType: operandType, checkConversion: checkConversion, fromExplicitCast: fromExplicitCast, useLegacyWarnings: useLegacyWarnings, assignmentKind: assignmentKind, parameterOpt: parameterOpt, extensionMethodThisArgument: extensionMethodThisArgument, stateForLambda: stateForLambda);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 250544, 251353);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Location
                f_10899_251578_251614(Microsoft.CodeAnalysis.SyntaxNode
                this_param)
                {
                    var return_v = this_param.Location;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 251578, 251614);
                    return return_v;
                }


                bool
                f_10899_251504_251615(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                state, Microsoft.CodeAnalysis.CSharp.Symbols.FlowAnalysisAnnotations
                annotations, Microsoft.CodeAnalysis.Location
                location)
                {
                    var return_v = this_param.CheckDisallowedNullAssignment(state, annotations, location);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 251504, 251615);
                    return return_v;
                }


                int
                f_10899_251673_251726(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                expression, ref Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState
                state)
                {
                    this_param.LearnFromNonNullTest(expression, ref state);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 251673, 251726);
                    return 0;
                }


                int
                f_10899_251780_251871(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                expression, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                type, bool
                updateAnalyzedNullability)
                {
                    this_param.SetResultType(expression, type, updateAnalyzedNullability: updateAnalyzedNullability);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 251780, 251871);
                    return 0;
                }


                bool
                f_10899_251984_252018_M(bool
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 251984, 252018);
                    return return_v;
                }


                bool
                f_10899_252139_252203(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                type1, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                type2)
                {
                    var return_v = IsNullabilityMismatch(type1, type2);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 252139, 252203);
                    return return_v;
                }


                int
                f_10899_252351_252479(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                argument, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                argumentType, Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol
                parameter, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                parameterType)
                {
                    this_param.ReportNullabilityMismatchInRefArgument(argument, argumentType: argumentType, parameter, parameterType);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 252351, 252479);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                f_10899_252727_252786(Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                declaredType, Microsoft.CodeAnalysis.CSharp.Symbols.FlowAnalysisAnnotations
                flowAnalysisAnnotations)
                {
                    var return_v = ApplyLValueAnnotations(declaredType, flowAnalysisAnnotations);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 252727, 252786);
                    return return_v;
                }


                int
                f_10899_252669_252825(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                value, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                targetType, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                valueType, bool
                useLegacyWarnings)
                {
                    this_param.ReportNullableAssignmentIfNecessary(value, targetType, valueType, useLegacyWarnings: useLegacyWarnings);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 252669, 252825);
                    return 0;
                }


                Microsoft.CodeAnalysis.Location
                f_10899_253042_253078(Microsoft.CodeAnalysis.SyntaxNode
                this_param)
                {
                    var return_v = this_param.Location;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 253042, 253078);
                    return return_v;
                }


                bool
                f_10899_252978_253079(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                state, Microsoft.CodeAnalysis.CSharp.Symbols.FlowAnalysisAnnotations
                annotations, Microsoft.CodeAnalysis.Location
                location)
                {
                    var return_v = this_param.CheckDisallowedNullAssignment(state, annotations, location);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 252978, 253079);
                    return return_v;
                }


                System.Exception
                f_10899_253277_253320(Microsoft.CodeAnalysis.RefKind
                o)
                {
                    var return_v = ExceptionUtilities.UnexpectedValue((object)o);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 253277, 253320);
                    return return_v;
                }


                int
                f_10899_253352_253390(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 253352, 253390);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 248678, 253402);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 248678, 253402);
            }
        }

        private bool CheckDisallowedNullAssignment(TypeWithState state, FlowAnalysisAnnotations annotations, Location location, BoundExpression? boundValueOpt = null)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 253573, 254322);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 253756, 253949) || true) && (boundValueOpt is { WasCompilerGenerated: true })
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 253756, 253949);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 253921, 253934);

                    return false;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 253756, 253949);
                }

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 254063, 254282) || true) && (f_10899_254067_254113(state, annotations))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 254063, 254282);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 254147, 254237);

                    f_10899_254147_254236(this, ErrorCode.WRN_DisallowNullAttributeForbidsMaybeNullAssignment, location);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 254255, 254267);

                    return true;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 254063, 254282);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 254298, 254311);

                return false;
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 253573, 254322);

                bool
                f_10899_254067_254113(Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                valueState, Microsoft.CodeAnalysis.CSharp.Symbols.FlowAnalysisAnnotations
                targetAnnotations)
                {
                    var return_v = IsDisallowedNullAssignment(valueState, targetAnnotations);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 254067, 254113);
                    return return_v;
                }


                int
                f_10899_254147_254236(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.ErrorCode
                errorCode, Microsoft.CodeAnalysis.Location
                location, params object[]
                arguments)
                {
                    this_param.ReportDiagnostic(errorCode, location, arguments);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 254147, 254236);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 253573, 254322);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 253573, 254322);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private static bool IsDisallowedNullAssignment(TypeWithState valueState, FlowAnalysisAnnotations targetAnnotations)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterStaticMethod(10899, 254334, 255516);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 254474, 254653);

                return ((targetAnnotations & FlowAnalysisAnnotations.DisallowNull) != 0) && (DynAbs.Tracing.TraceSender.Expression_True(10899, 254481, 254611) && f_10899_254567_254611(valueState.Type)) && (DynAbs.Tracing.TraceSender.Expression_True(10899, 254481, 254652) && valueState.MayBeNull);

                static bool hasNoNonNullableCounterpart(TypeSymbol? type)
                {
                    try
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterStaticMethod(10899, 254669, 255505);

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 254759, 254849) || true) && (type is null)
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 254759, 254849);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 254817, 254830);

                            return false;
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 254759, 254849);
                        }
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 255378, 255490);

                        return (f_10899_255386_255395(type) == SymbolKind.TypeParameter && (DynAbs.Tracing.TraceSender.Expression_True(10899, 255386, 255448) && f_10899_255427_255448_M(!type.IsReferenceType))) || (DynAbs.Tracing.TraceSender.Expression_False(10899, 255385, 255489) || f_10899_255453_255489(type));
                        DynAbs.Tracing.TraceSender.TraceExitStaticMethod(10899, 254669, 255505);

                        Microsoft.CodeAnalysis.SymbolKind
                        f_10899_255386_255395(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                        this_param)
                        {
                            var return_v = this_param.Kind;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 255386, 255395);
                            return return_v;
                        }


                        bool
                        f_10899_255427_255448_M(bool
                        i)
                        {
                            var return_v = i;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 255427, 255448);
                            return return_v;
                        }


                        bool
                        f_10899_255453_255489(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                        type)
                        {
                            var return_v = type.IsNullableTypeOrTypeParameter();
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 255453, 255489);
                            return return_v;
                        }

                    }
                    catch
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 254669, 255505);
                        throw;
                    }
                    finally
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 254669, 255505);
                    }
                    throw new System.Exception("Slicer error: unreachable code");
                }
                DynAbs.Tracing.TraceSender.TraceExitStaticMethod(10899, 254334, 255516);

                bool
                f_10899_254567_254611(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?
                type)
                {
                    var return_v = hasNoNonNullableCounterpart(type);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 254567, 254611);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 254334, 255516);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 254334, 255516);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private void VisitArgumentOutboundAssignmentsAndPostConditions(
                    BoundExpression argument,
                    RefKind refKind,
                    ParameterSymbol parameter,
                    TypeWithAnnotations parameterType,
                    FlowAnalysisAnnotations parameterAnnotations,
                    VisitArgumentResult result,
                    ArrayBuilder<ParameterSymbol>? notNullParametersOpt,
                    CompareExchangeInfo compareExchangeInfoOpt)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 255746, 269738);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 256420, 261926);

                switch (refKind)
                {

                    case RefKind.None:
                    case RefKind.In:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 256420, 261926);
                        {
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 256688, 256759);

                            f_10899_256688_256758(argument, parameterType, parameterAnnotations);
                        }
                        DynAbs.Tracing.TraceSender.TraceBreak(10899, 256804, 256810);

                        break;
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 256420, 261926);

                    case RefKind.Ref:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 256420, 261926);
                        {
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 256988, 257091);

                            parameterAnnotations = f_10899_257011_257090(parameterAnnotations, notNullParametersOpt, parameter);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 257117, 257200);

                            var
                            parameterWithState = TypeWithState.Create(parameterType, parameterAnnotations)
                            ;

                            if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 257226, 257533) || true) && (f_10899_257230_257263_M(!compareExchangeInfoOpt.IsDefault))
                            )

                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 257226, 257533);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 257321, 257399);

                                var
                                adjustedState = f_10899_257341_257398(this, compareExchangeInfoOpt)
                                ;
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 257429, 257506);

                                parameterWithState = TypeWithState.Create(parameterType.Type, adjustedState);
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 257226, 257533);
                            }
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 257561, 257629);

                            var
                            parameterValue = f_10899_257582_257628(argument.Syntax, parameter)
                            ;
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 257655, 257690);

                            var
                            lValueType = result.LValueType
                            ;
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 257716, 257861);

                            f_10899_257716_257860(parameterValue, lValueType, f_10899_257776_257794(this, argument), parameterWithState, f_10899_257816_257837(argument), parameterAnnotations);

                            if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 257989, 258570) || true) && (f_10899_257993_258015_M(!argument.IsSuppressed))
                            )

                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 257989, 258570);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 258073, 258126);

                                var
                                leftAnnotations = f_10899_258095_258125(this, argument)
                                ;
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 258156, 258543);

                                f_10899_258156_258542(this, parameterValue, targetType: f_10899_258287_258338(lValueType, leftAnnotations), valueType: f_10899_258384_258460(parameterWithState, parameterAnnotations), f_10899_258495_258541(argument, result.LValueType));
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 257989, 258570);
                            }
                        }
                        DynAbs.Tracing.TraceSender.TraceBreak(10899, 258615, 258621);

                        break;
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 256420, 261926);

                    case RefKind.Out:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 256420, 261926);
                        {
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 258771, 258874);

                            parameterAnnotations = f_10899_258794_258873(parameterAnnotations, notNullParametersOpt, parameter);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 258900, 258983);

                            var
                            parameterWithState = TypeWithState.Create(parameterType, parameterAnnotations)
                            ;
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 259149, 259260);

                            var
                            worstCaseParameterWithState = f_10899_259183_259259(parameterWithState, parameterAnnotations)
                            ;
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 259288, 259325);

                            var
                            declaredType = result.LValueType
                            ;
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 259351, 259404);

                            var
                            leftAnnotations = f_10899_259373_259403(this, argument)
                            ;
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 259430, 259501);

                            var
                            lValueType = f_10899_259447_259500(declaredType, leftAnnotations)
                            ;

                            if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 259527, 260231) || true) && (argument is BoundLocal local && (DynAbs.Tracing.TraceSender.Expression_True(10899, 259531, 259630) && f_10899_259563_259584(local) == BoundLocalDeclarationKind.WithInferredType))
                            )

                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 259527, 260231);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 259688, 259774);

                                var
                                varType = worstCaseParameterWithState.ToAnnotatedTypeWithAnnotations(compilation)
                                ;
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 259804, 259851);

                                f_10899_259804_259850(_variables, f_10899_259823_259840(local), varType);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 259881, 259902);

                                lValueType = varType;
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 259527, 260231);
                            }

                            else
                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 259527, 260231);

                                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 259960, 260231) || true) && (argument is BoundDiscardExpression discard)
                                )

                                {
                                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 259960, 260231);
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 260064, 260204);

                                    f_10899_260064_260203(this, discard, f_10899_260096_260186(parameterWithState, parameterWithState.ToTypeWithAnnotations(compilation)), isLvalue: true);
                                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 259960, 260231);
                                }
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 259527, 260231);
                            }
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 260371, 260439);

                            var
                            parameterValue = f_10899_260392_260438(argument.Syntax, parameter)
                            ;
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 260589, 260682);

                            f_10899_260589_260681(this, parameterWithState, leftAnnotations, f_10899_260656_260680(argument.Syntax));
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 260710, 260759);

                            f_10899_260710_260758(this, argument, ref parameterWithState);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 260785, 260930);

                            f_10899_260785_260929(parameterValue, lValueType, f_10899_260845_260863(this, argument), parameterWithState, f_10899_260885_260906(argument), parameterAnnotations);

                            if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 261063, 261762) || true) && (f_10899_261067_261089_M(!argument.IsSuppressed))
                            )

                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 261063, 261762);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 261147, 261288);

                                f_10899_261147_261287(this, parameterValue, lValueType, worstCaseParameterWithState, f_10899_261240_261286(argument, result.LValueType));
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 261320, 261371);

                                HashSet<DiagnosticInfo>?
                                useSiteDiagnostics = null
                                ;

                                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 261401, 261735) || true) && (!f_10899_261406_261520(_conversions, parameterType.Type, lValueType.Type, ref useSiteDiagnostics))
                                )

                                {
                                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 261401, 261735);
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 261586, 261704);

                                    f_10899_261586_261703(this, argument.Syntax, lValueType.Type, parameter, parameterType.Type, forOutput: true);
                                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 261401, 261735);
                                }
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 261063, 261762);
                            }
                        }
                        DynAbs.Tracing.TraceSender.TraceBreak(10899, 261807, 261813);

                        break;
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 256420, 261926);

                    default:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 256420, 261926);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 261861, 261911);

                        throw f_10899_261867_261910(refKind);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 256420, 261926);
                }

                FlowAnalysisAnnotations notNullBasedOnParameters(FlowAnalysisAnnotations parameterAnnotations, ArrayBuilder<ParameterSymbol>? notNullParametersOpt, ParameterSymbol parameter)
                {
                    try
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 261942, 262866);

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 262149, 262805) || true) && (f_10899_262153_262174_M(!IsAnalyzingAttribute) && (DynAbs.Tracing.TraceSender.Expression_True(10899, 262153, 262208) && notNullParametersOpt is object))
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 262149, 262805);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 262250, 262318);

                            var
                            notNullIfParameterNotNull = f_10899_262282_262317(parameter)
                            ;

                            if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 262340, 262786) || true) && (f_10899_262344_262378_M(!notNullIfParameterNotNull.IsEmpty))
                            )

                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 262340, 262786);
                                try
                                {
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 262428, 262763);
                                    foreach (var notNullParameter in f_10899_262461_262481_I(notNullParametersOpt))
                                    {
                                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 262428, 262763);

                                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 262539, 262736) || true) && (f_10899_262543_262600(notNullIfParameterNotNull, f_10899_262578_262599(notNullParameter)))
                                        )

                                        {
                                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 262539, 262736);
                                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 262666, 262705);

                                            return FlowAnalysisAnnotations.NotNull;
                                            DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 262539, 262736);
                                        }
                                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 262428, 262763);
                                    }
                                }
                                catch (System.Exception)
                                {
                                    DynAbs.Tracing.TraceSender.TraceExitLoopByException(10899, 1, 336);
                                    throw;
                                }
                                finally
                                {
                                    DynAbs.Tracing.TraceSender.TraceExitLoop(10899, 1, 336);
                                }
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 262340, 262786);
                            }
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 262149, 262805);
                        }
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 262823, 262851);

                        return parameterAnnotations;
                        DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 261942, 262866);

                        bool
                        f_10899_262153_262174_M(bool
                        i)
                        {
                            var return_v = i;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 262153, 262174);
                            return return_v;
                        }


                        System.Collections.Immutable.ImmutableHashSet<string>
                        f_10899_262282_262317(Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol
                        this_param)
                        {
                            var return_v = this_param.NotNullIfParameterNotNull;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 262282, 262317);
                            return return_v;
                        }


                        bool
                        f_10899_262344_262378_M(bool
                        i)
                        {
                            var return_v = i;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 262344, 262378);
                            return return_v;
                        }


                        string
                        f_10899_262578_262599(Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol
                        this_param)
                        {
                            var return_v = this_param.Name;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 262578, 262599);
                            return return_v;
                        }


                        bool
                        f_10899_262543_262600(System.Collections.Immutable.ImmutableHashSet<string>
                        this_param, string
                        item)
                        {
                            var return_v = this_param.Contains(item);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 262543, 262600);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol>
                        f_10899_262461_262481_I(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol>
                        i)
                        {
                            var return_v = i;
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 262461, 262481);
                            return return_v;
                        }

                    }
                    catch
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 261942, 262866);
                        throw;
                    }
                    finally
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 261942, 262866);
                    }
                    throw new System.Exception("Slicer error: unreachable code");
                }

                void trackNullableStateForAssignment(BoundExpression parameterValue, TypeWithAnnotations lValueType, int targetSlot, TypeWithState parameterWithState, bool isSuppressed, FlowAnalysisAnnotations parameterAnnotations)
                {
                    try
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 262882, 264385);

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 263130, 264370) || true) && (!IsConditionalState && (DynAbs.Tracing.TraceSender.Expression_True(10899, 263134, 263207) && !f_10899_263158_263207(parameterAnnotations)))
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 263130, 264370);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 263249, 263371);

                            f_10899_263249_263370(this, parameterValue, lValueType, targetSlot, parameterWithState.WithSuppression(isSuppressed));
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 263130, 264370);
                        }

                        else

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 263130, 264370);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 263453, 263461);

                            f_10899_263453_263460(this);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 263483, 263530);

                            var
                            originalWhenFalse = StateWhenFalse.Clone()
                            ;
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 263554, 263578);

                            f_10899_263554_263577(this, StateWhenTrue);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 263689, 263862);

                            f_10899_263689_263861(this, parameterValue, lValueType, targetSlot, f_10899_263761_263830(parameterWithState, parameterAnnotations).WithSuppression(isSuppressed));
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 263884, 263918);

                            f_10899_263884_263917(!IsConditionalState);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 263940, 263972);

                            var
                            newWhenTrue = State.Clone()
                            ;
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 263996, 264024);

                            f_10899_263996_264023(this, originalWhenFalse);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 264046, 264220);

                            f_10899_264046_264219(this, parameterValue, lValueType, targetSlot, f_10899_264118_264188(parameterWithState, parameterAnnotations).WithSuppression(isSuppressed));
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 264242, 264276);

                            f_10899_264242_264275(!IsConditionalState);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 264300, 264351);

                            f_10899_264300_264350(this, newWhenTrue, whenFalse: State);
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 263130, 264370);
                        }
                        DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 262882, 264385);

                        bool
                        f_10899_263158_263207(Microsoft.CodeAnalysis.CSharp.Symbols.FlowAnalysisAnnotations
                        annotations)
                        {
                            var return_v = hasConditionalPostCondition(annotations);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 263158, 263207);
                            return return_v;
                        }


                        int
                        f_10899_263249_263370(Microsoft.CodeAnalysis.CSharp.NullableWalker
                        this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                        valueOpt, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                        targetType, int
                        targetSlot, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                        valueType)
                        {
                            this_param.TrackNullableStateForAssignment(valueOpt, targetType, targetSlot, valueType);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 263249, 263370);
                            return 0;
                        }


                        int
                        f_10899_263453_263460(Microsoft.CodeAnalysis.CSharp.NullableWalker
                        this_param)
                        {
                            this_param.Split();
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 263453, 263460);
                            return 0;
                        }


                        int
                        f_10899_263554_263577(Microsoft.CodeAnalysis.CSharp.NullableWalker
                        this_param, Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState
                        newState)
                        {
                            this_param.SetState(newState);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 263554, 263577);
                            return 0;
                        }


                        Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                        f_10899_263761_263830(Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                        typeWithState, Microsoft.CodeAnalysis.CSharp.Symbols.FlowAnalysisAnnotations
                        annotations)
                        {
                            var return_v = applyPostConditionsWhenTrue(typeWithState, annotations);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 263761, 263830);
                            return return_v;
                        }


                        int
                        f_10899_263689_263861(Microsoft.CodeAnalysis.CSharp.NullableWalker
                        this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                        valueOpt, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                        targetType, int
                        targetSlot, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                        valueType)
                        {
                            this_param.TrackNullableStateForAssignment(valueOpt, targetType, targetSlot, valueType);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 263689, 263861);
                            return 0;
                        }


                        int
                        f_10899_263884_263917(bool
                        condition)
                        {
                            Debug.Assert(condition);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 263884, 263917);
                            return 0;
                        }


                        int
                        f_10899_263996_264023(Microsoft.CodeAnalysis.CSharp.NullableWalker
                        this_param, Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState
                        newState)
                        {
                            this_param.SetState(newState);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 263996, 264023);
                            return 0;
                        }


                        Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                        f_10899_264118_264188(Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                        typeWithState, Microsoft.CodeAnalysis.CSharp.Symbols.FlowAnalysisAnnotations
                        annotations)
                        {
                            var return_v = applyPostConditionsWhenFalse(typeWithState, annotations);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 264118, 264188);
                            return return_v;
                        }


                        int
                        f_10899_264046_264219(Microsoft.CodeAnalysis.CSharp.NullableWalker
                        this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                        valueOpt, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                        targetType, int
                        targetSlot, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                        valueType)
                        {
                            this_param.TrackNullableStateForAssignment(valueOpt, targetType, targetSlot, valueType);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 264046, 264219);
                            return 0;
                        }


                        int
                        f_10899_264242_264275(bool
                        condition)
                        {
                            Debug.Assert(condition);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 264242, 264275);
                            return 0;
                        }


                        int
                        f_10899_264300_264350(Microsoft.CodeAnalysis.CSharp.NullableWalker
                        this_param, Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState
                        whenTrue, Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState
                        whenFalse)
                        {
                            this_param.SetConditionalState(whenTrue, whenFalse: whenFalse);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 264300, 264350);
                            return 0;
                        }

                    }
                    catch
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 262882, 264385);
                        throw;
                    }
                    finally
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 262882, 264385);
                    }
                }

                static bool hasConditionalPostCondition(FlowAnalysisAnnotations annotations)
                {
                    try
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterStaticMethod(10899, 264401, 264822);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 264510, 264807);

                        return (((annotations & FlowAnalysisAnnotations.MaybeNullWhenTrue) != 0) ^ ((annotations & FlowAnalysisAnnotations.MaybeNullWhenFalse) != 0)) || (DynAbs.Tracing.TraceSender.Expression_False(10899, 264517, 264806) || (((annotations & FlowAnalysisAnnotations.NotNullWhenTrue) != 0) ^ ((annotations & FlowAnalysisAnnotations.NotNullWhenFalse) != 0)));
                        DynAbs.Tracing.TraceSender.TraceExitStaticMethod(10899, 264401, 264822);
                    }
                    catch
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 264401, 264822);
                        throw;
                    }
                    finally
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 264401, 264822);
                    }
                    throw new System.Exception("Slicer error: unreachable code");
                }

                static TypeWithState applyPostConditionsUnconditionally(TypeWithState typeWithState, FlowAnalysisAnnotations annotations)
                {
                    try
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterStaticMethod(10899, 264838, 265573);

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 264992, 265243) || true) && ((annotations & FlowAnalysisAnnotations.MaybeNull) != 0)
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 264992, 265243);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 265144, 265224);

                            return TypeWithState.Create(typeWithState.Type, NullableFlowState.MaybeDefault);
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 264992, 265243);
                        }

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 265263, 265517) || true) && ((annotations & FlowAnalysisAnnotations.NotNull) == FlowAnalysisAnnotations.NotNull)
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 265263, 265517);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 265423, 265498);

                            return TypeWithState.Create(typeWithState.Type, NullableFlowState.NotNull);
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 265263, 265517);
                        }
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 265537, 265558);

                        return typeWithState;
                        DynAbs.Tracing.TraceSender.TraceExitStaticMethod(10899, 264838, 265573);
                    }
                    catch
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 264838, 265573);
                        throw;
                    }
                    finally
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 264838, 265573);
                    }
                    throw new System.Exception("Slicer error: unreachable code");
                }

                static TypeWithState applyPostConditionsWhenTrue(TypeWithState typeWithState, FlowAnalysisAnnotations annotations)
                {
                    try
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterStaticMethod(10899, 265589, 266578);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 265736, 265820);

                        bool
                        notNullWhenTrue = (annotations & FlowAnalysisAnnotations.NotNullWhenTrue) != 0
                        ;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 265838, 265926);

                        bool
                        maybeNullWhenTrue = (annotations & FlowAnalysisAnnotations.MaybeNullWhenTrue) != 0
                        ;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 265944, 266034);

                        bool
                        maybeNullWhenFalse = (annotations & FlowAnalysisAnnotations.MaybeNullWhenFalse) != 0
                        ;

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 266054, 266522) || true) && (maybeNullWhenTrue && (DynAbs.Tracing.TraceSender.Expression_True(10899, 266058, 266119) && !(maybeNullWhenFalse && (DynAbs.Tracing.TraceSender.Expression_True(10899, 266081, 266118) && notNullWhenTrue))))
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 266054, 266522);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 266245, 266325);

                            return TypeWithState.Create(typeWithState.Type, NullableFlowState.MaybeDefault);
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 266054, 266522);
                        }

                        else
                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 266054, 266522);

                            if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 266367, 266522) || true) && (notNullWhenTrue)
                            )

                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 266367, 266522);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 266428, 266503);

                                return TypeWithState.Create(typeWithState.Type, NullableFlowState.NotNull);
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 266367, 266522);
                            }
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 266054, 266522);
                        }
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 266542, 266563);

                        return typeWithState;
                        DynAbs.Tracing.TraceSender.TraceExitStaticMethod(10899, 265589, 266578);
                    }
                    catch
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 265589, 266578);
                        throw;
                    }
                    finally
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 265589, 266578);
                    }
                    throw new System.Exception("Slicer error: unreachable code");
                }

                static TypeWithState applyPostConditionsWhenFalse(TypeWithState typeWithState, FlowAnalysisAnnotations annotations)
                {
                    try
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterStaticMethod(10899, 266594, 267588);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 266742, 266828);

                        bool
                        notNullWhenFalse = (annotations & FlowAnalysisAnnotations.NotNullWhenFalse) != 0
                        ;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 266846, 266934);

                        bool
                        maybeNullWhenTrue = (annotations & FlowAnalysisAnnotations.MaybeNullWhenTrue) != 0
                        ;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 266952, 267042);

                        bool
                        maybeNullWhenFalse = (annotations & FlowAnalysisAnnotations.MaybeNullWhenFalse) != 0
                        ;

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 267062, 267532) || true) && (maybeNullWhenFalse && (DynAbs.Tracing.TraceSender.Expression_True(10899, 267066, 267128) && !(maybeNullWhenTrue && (DynAbs.Tracing.TraceSender.Expression_True(10899, 267090, 267127) && notNullWhenFalse))))
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 267062, 267532);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 267254, 267334);

                            return TypeWithState.Create(typeWithState.Type, NullableFlowState.MaybeDefault);
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 267062, 267532);
                        }

                        else
                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 267062, 267532);

                            if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 267376, 267532) || true) && (notNullWhenFalse)
                            )

                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 267376, 267532);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 267438, 267513);

                                return TypeWithState.Create(typeWithState.Type, NullableFlowState.NotNull);
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 267376, 267532);
                            }
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 267062, 267532);
                        }
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 267552, 267573);

                        return typeWithState;
                        DynAbs.Tracing.TraceSender.TraceExitStaticMethod(10899, 266594, 267588);
                    }
                    catch
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 266594, 267588);
                        throw;
                    }
                    finally
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 266594, 267588);
                    }
                    throw new System.Exception("Slicer error: unreachable code");
                }

                void learnFromPostConditions(BoundExpression argument, TypeWithAnnotations parameterType, FlowAnalysisAnnotations parameterAnnotations)
                {
                    try
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 267604, 269727);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 267847, 267940);

                        bool
                        notNullWhenTrue = (parameterAnnotations & FlowAnalysisAnnotations.NotNullWhenTrue) != 0
                        ;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 267958, 268053);

                        bool
                        notNullWhenFalse = (parameterAnnotations & FlowAnalysisAnnotations.NotNullWhenFalse) != 0
                        ;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 268154, 268251);

                        bool
                        maybeNullWhenTrue = (parameterAnnotations & FlowAnalysisAnnotations.MaybeNullWhenTrue) != 0
                        ;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 268269, 268368);

                        bool
                        maybeNullWhenFalse = (parameterAnnotations & FlowAnalysisAnnotations.MaybeNullWhenFalse) != 0
                        ;

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 268388, 269712) || true) && (maybeNullWhenTrue && (DynAbs.Tracing.TraceSender.Expression_True(10899, 268392, 268431) && maybeNullWhenFalse) && (DynAbs.Tracing.TraceSender.Expression_True(10899, 268392, 268454) && !IsConditionalState) && (DynAbs.Tracing.TraceSender.Expression_True(10899, 268392, 268496) && !(notNullWhenTrue && (DynAbs.Tracing.TraceSender.Expression_True(10899, 268460, 268495) && notNullWhenFalse))))
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 268388, 269712);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 268538, 268577);

                            f_10899_268538_268576(this, argument, ref State);
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 268388, 269712);
                        }

                        else
                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 268388, 269712);

                            if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 268619, 269712) || true) && (notNullWhenTrue && (DynAbs.Tracing.TraceSender.Expression_True(10899, 268623, 268658) && notNullWhenFalse
                            ) && (DynAbs.Tracing.TraceSender.Expression_True(10899, 268623, 268702) && !IsConditionalState
                            ) && (DynAbs.Tracing.TraceSender.Expression_True(10899, 268623, 268769) && !(maybeNullWhenTrue || (DynAbs.Tracing.TraceSender.Expression_False(10899, 268729, 268768) || maybeNullWhenFalse))))
                            )

                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 268619, 269712);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 268811, 268853);

                                f_10899_268811_268852(this, argument, ref State);
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 268619, 269712);
                            }

                            else
                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 268619, 269712);

                                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 268895, 269712) || true) && (notNullWhenTrue || (DynAbs.Tracing.TraceSender.Expression_False(10899, 268899, 268934) || notNullWhenFalse) || (DynAbs.Tracing.TraceSender.Expression_False(10899, 268899, 268955) || maybeNullWhenTrue) || (DynAbs.Tracing.TraceSender.Expression_False(10899, 268899, 268977) || maybeNullWhenFalse))
                                )

                                {
                                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 268895, 269712);
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 269019, 269027);

                                    f_10899_269019_269026(this);

                                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 269051, 269193) || true) && (notNullWhenTrue)
                                    )

                                    {
                                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 269051, 269193);
                                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 269120, 269170);

                                        f_10899_269120_269169(this, argument, ref StateWhenTrue);
                                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 269051, 269193);
                                    }

                                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 269217, 269361) || true) && (notNullWhenFalse)
                                    )

                                    {
                                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 269217, 269361);
                                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 269287, 269338);

                                        f_10899_269287_269337(this, argument, ref StateWhenFalse);
                                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 269217, 269361);
                                    }

                                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 269385, 269526) || true) && (maybeNullWhenTrue)
                                    )

                                    {
                                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 269385, 269526);
                                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 269456, 269503);

                                        f_10899_269456_269502(this, argument, ref StateWhenTrue);
                                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 269385, 269526);
                                    }

                                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 269550, 269693) || true) && (maybeNullWhenFalse)
                                    )

                                    {
                                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 269550, 269693);
                                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 269622, 269670);

                                        f_10899_269622_269669(this, argument, ref StateWhenFalse);
                                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 269550, 269693);
                                    }
                                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 268895, 269712);
                                }
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 268619, 269712);
                            }
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 268388, 269712);
                        }
                        DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 267604, 269727);

                        int
                        f_10899_268538_268576(Microsoft.CodeAnalysis.CSharp.NullableWalker
                        this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                        expression, ref Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState
                        state)
                        {
                            this_param.LearnFromNullTest(expression, ref state);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 268538, 268576);
                            return 0;
                        }


                        int
                        f_10899_268811_268852(Microsoft.CodeAnalysis.CSharp.NullableWalker
                        this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                        expression, ref Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState
                        state)
                        {
                            this_param.LearnFromNonNullTest(expression, ref state);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 268811, 268852);
                            return 0;
                        }


                        int
                        f_10899_269019_269026(Microsoft.CodeAnalysis.CSharp.NullableWalker
                        this_param)
                        {
                            this_param.Split();
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 269019, 269026);
                            return 0;
                        }


                        int
                        f_10899_269120_269169(Microsoft.CodeAnalysis.CSharp.NullableWalker
                        this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                        expression, ref Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState
                        state)
                        {
                            this_param.LearnFromNonNullTest(expression, ref state);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 269120, 269169);
                            return 0;
                        }


                        int
                        f_10899_269287_269337(Microsoft.CodeAnalysis.CSharp.NullableWalker
                        this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                        expression, ref Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState
                        state)
                        {
                            this_param.LearnFromNonNullTest(expression, ref state);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 269287, 269337);
                            return 0;
                        }


                        int
                        f_10899_269456_269502(Microsoft.CodeAnalysis.CSharp.NullableWalker
                        this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                        expression, ref Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState
                        state)
                        {
                            this_param.LearnFromNullTest(expression, ref state);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 269456, 269502);
                            return 0;
                        }


                        int
                        f_10899_269622_269669(Microsoft.CodeAnalysis.CSharp.NullableWalker
                        this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                        expression, ref Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState
                        state)
                        {
                            this_param.LearnFromNullTest(expression, ref state);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 269622, 269669);
                            return 0;
                        }

                    }
                    catch
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 267604, 269727);
                        throw;
                    }
                    finally
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 267604, 269727);
                    }
                }
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 255746, 269738);

                int
                f_10899_256688_256758(Microsoft.CodeAnalysis.CSharp.BoundExpression
                argument, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                parameterType, Microsoft.CodeAnalysis.CSharp.Symbols.FlowAnalysisAnnotations
                parameterAnnotations)
                {
                    learnFromPostConditions(argument, parameterType, parameterAnnotations);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 256688, 256758);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.FlowAnalysisAnnotations
                f_10899_257011_257090(Microsoft.CodeAnalysis.CSharp.Symbols.FlowAnalysisAnnotations
                parameterAnnotations, Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol>?
                notNullParametersOpt, Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol
                parameter)
                {
                    var return_v = notNullBasedOnParameters(parameterAnnotations, notNullParametersOpt, parameter);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 257011, 257090);
                    return return_v;
                }


                bool
                f_10899_257230_257263_M(bool
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 257230, 257263);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.NullableFlowState
                f_10899_257341_257398(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.NullableWalker.CompareExchangeInfo
                compareExchangeInfo)
                {
                    var return_v = this_param.LearnFromCompareExchangeMethod(compareExchangeInfo);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 257341, 257398);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundParameter
                f_10899_257582_257628(Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol
                parameterSymbol)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.BoundParameter(syntax, parameterSymbol);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 257582, 257628);
                    return return_v;
                }


                int
                f_10899_257776_257794(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                node)
                {
                    var return_v = this_param.MakeSlot(node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 257776, 257794);
                    return return_v;
                }


                bool
                f_10899_257816_257837(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.IsSuppressed;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 257816, 257837);
                    return return_v;
                }


                int
                f_10899_257716_257860(Microsoft.CodeAnalysis.CSharp.BoundParameter
                parameterValue, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                lValueType, int
                targetSlot, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                parameterWithState, bool
                isSuppressed, Microsoft.CodeAnalysis.CSharp.Symbols.FlowAnalysisAnnotations
                parameterAnnotations)
                {
                    trackNullableStateForAssignment((Microsoft.CodeAnalysis.CSharp.BoundExpression)parameterValue, lValueType, targetSlot, parameterWithState, isSuppressed, parameterAnnotations);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 257716, 257860);
                    return 0;
                }


                bool
                f_10899_257993_258015_M(bool
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 257993, 258015);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.FlowAnalysisAnnotations
                f_10899_258095_258125(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                expr)
                {
                    var return_v = this_param.GetLValueAnnotations(expr);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 258095, 258125);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                f_10899_258287_258338(Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                declaredType, Microsoft.CodeAnalysis.CSharp.Symbols.FlowAnalysisAnnotations
                flowAnalysisAnnotations)
                {
                    var return_v = ApplyLValueAnnotations(declaredType, flowAnalysisAnnotations);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 258287, 258338);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                f_10899_258384_258460(Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                typeWithState, Microsoft.CodeAnalysis.CSharp.Symbols.FlowAnalysisAnnotations
                annotations)
                {
                    var return_v = applyPostConditionsUnconditionally(typeWithState, annotations);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 258384, 258460);
                    return return_v;
                }


                bool
                f_10899_258495_258541(Microsoft.CodeAnalysis.CSharp.BoundExpression
                expr, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                exprType)
                {
                    var return_v = UseLegacyWarnings(expr, exprType);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 258495, 258541);
                    return return_v;
                }


                int
                f_10899_258156_258542(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundParameter
                value, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                targetType, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                valueType, bool
                useLegacyWarnings)
                {
                    this_param.ReportNullableAssignmentIfNecessary((Microsoft.CodeAnalysis.CSharp.BoundExpression)value, targetType: targetType, valueType: valueType, useLegacyWarnings);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 258156, 258542);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.FlowAnalysisAnnotations
                f_10899_258794_258873(Microsoft.CodeAnalysis.CSharp.Symbols.FlowAnalysisAnnotations
                parameterAnnotations, Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol>?
                notNullParametersOpt, Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol
                parameter)
                {
                    var return_v = notNullBasedOnParameters(parameterAnnotations, notNullParametersOpt, parameter);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 258794, 258873);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                f_10899_259183_259259(Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                typeWithState, Microsoft.CodeAnalysis.CSharp.Symbols.FlowAnalysisAnnotations
                annotations)
                {
                    var return_v = applyPostConditionsUnconditionally(typeWithState, annotations);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 259183, 259259);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.FlowAnalysisAnnotations
                f_10899_259373_259403(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                expr)
                {
                    var return_v = this_param.GetLValueAnnotations(expr);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 259373, 259403);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                f_10899_259447_259500(Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                declaredType, Microsoft.CodeAnalysis.CSharp.Symbols.FlowAnalysisAnnotations
                flowAnalysisAnnotations)
                {
                    var return_v = ApplyLValueAnnotations(declaredType, flowAnalysisAnnotations);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 259447, 259500);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundLocalDeclarationKind
                f_10899_259563_259584(Microsoft.CodeAnalysis.CSharp.BoundLocal
                this_param)
                {
                    var return_v = this_param.DeclarationKind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 259563, 259584);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.LocalSymbol
                f_10899_259823_259840(Microsoft.CodeAnalysis.CSharp.BoundLocal
                this_param)
                {
                    var return_v = this_param.LocalSymbol;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 259823, 259840);
                    return return_v;
                }


                int
                f_10899_259804_259850(Microsoft.CodeAnalysis.CSharp.NullableWalker.Variables
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.LocalSymbol
                symbol, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                type)
                {
                    this_param.SetType((Microsoft.CodeAnalysis.CSharp.Symbol)symbol, type);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 259804, 259850);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.NullableWalker.VisitResult
                f_10899_260096_260186(Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                rValueType, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                lValueType)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.NullableWalker.VisitResult(rValueType, lValueType);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 260096, 260186);
                    return return_v;
                }


                int
                f_10899_260064_260203(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundDiscardExpression
                expr, Microsoft.CodeAnalysis.CSharp.NullableWalker.VisitResult
                result, bool
                isLvalue)
                {
                    this_param.SetAnalyzedNullability((Microsoft.CodeAnalysis.CSharp.BoundExpression)expr, result, isLvalue: (bool?)isLvalue);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 260064, 260203);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.BoundParameter
                f_10899_260392_260438(Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol
                parameterSymbol)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.BoundParameter(syntax, parameterSymbol);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 260392, 260438);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Location
                f_10899_260656_260680(Microsoft.CodeAnalysis.SyntaxNode
                this_param)
                {
                    var return_v = this_param.Location;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 260656, 260680);
                    return return_v;
                }


                bool
                f_10899_260589_260681(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                state, Microsoft.CodeAnalysis.CSharp.Symbols.FlowAnalysisAnnotations
                annotations, Microsoft.CodeAnalysis.Location
                location)
                {
                    var return_v = this_param.CheckDisallowedNullAssignment(state, annotations, location);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 260589, 260681);
                    return return_v;
                }


                int
                f_10899_260710_260758(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                left, ref Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                rightState)
                {
                    this_param.AdjustSetValue(left, ref rightState);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 260710, 260758);
                    return 0;
                }


                int
                f_10899_260845_260863(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                node)
                {
                    var return_v = this_param.MakeSlot(node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 260845, 260863);
                    return return_v;
                }


                bool
                f_10899_260885_260906(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.IsSuppressed;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 260885, 260906);
                    return return_v;
                }


                int
                f_10899_260785_260929(Microsoft.CodeAnalysis.CSharp.BoundParameter
                parameterValue, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                lValueType, int
                targetSlot, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                parameterWithState, bool
                isSuppressed, Microsoft.CodeAnalysis.CSharp.Symbols.FlowAnalysisAnnotations
                parameterAnnotations)
                {
                    trackNullableStateForAssignment((Microsoft.CodeAnalysis.CSharp.BoundExpression)parameterValue, lValueType, targetSlot, parameterWithState, isSuppressed, parameterAnnotations);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 260785, 260929);
                    return 0;
                }


                bool
                f_10899_261067_261089_M(bool
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 261067, 261089);
                    return return_v;
                }


                bool
                f_10899_261240_261286(Microsoft.CodeAnalysis.CSharp.BoundExpression
                expr, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                exprType)
                {
                    var return_v = UseLegacyWarnings(expr, exprType);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 261240, 261286);
                    return return_v;
                }


                int
                f_10899_261147_261287(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundParameter
                value, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                targetType, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                valueType, bool
                useLegacyWarnings)
                {
                    this_param.ReportNullableAssignmentIfNecessary((Microsoft.CodeAnalysis.CSharp.BoundExpression)value, targetType, valueType, useLegacyWarnings);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 261147, 261287);
                    return 0;
                }


                bool
                f_10899_261406_261520(Microsoft.CodeAnalysis.CSharp.Conversions
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                source, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                destination, ref System.Collections.Generic.HashSet<Microsoft.CodeAnalysis.DiagnosticInfo>?
                useSiteDiagnostics)
                {
                    var return_v = this_param.HasIdentityOrImplicitReferenceConversion(source, destination, ref useSiteDiagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 261406, 261520);
                    return return_v;
                }


                int
                f_10899_261586_261703(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.SyntaxNode
                argument, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                argumentType, Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol
                parameter, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                parameterType, bool
                forOutput)
                {
                    this_param.ReportNullabilityMismatchInArgument(argument, argumentType, parameter, parameterType, forOutput: forOutput);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 261586, 261703);
                    return 0;
                }


                System.Exception
                f_10899_261867_261910(Microsoft.CodeAnalysis.RefKind
                o)
                {
                    var return_v = ExceptionUtilities.UnexpectedValue((object)o);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 261867, 261910);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 255746, 269738);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 255746, 269738);
            }
        }

        private (ImmutableArray<BoundExpression> arguments, ImmutableArray<Conversion> conversions) RemoveArgumentConversions(
                    ImmutableArray<BoundExpression> arguments,
                    ImmutableArray<RefKind> refKindsOpt)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 269750, 271591);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 269999, 270024);

                int
                n = arguments.Length
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 270038, 270092);

                var
                conversions = default(ImmutableArray<Conversion>)
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 270106, 271534) || true) && (n > 0)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 270106, 271534);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 270149, 270217);

                    var
                    argumentsBuilder = f_10899_270172_270216(n)
                    ;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 270235, 270300);

                    var
                    conversionsBuilder = f_10899_270260_270299(n)
                    ;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 270318, 270350);

                    bool
                    includedConversion = false
                    ;
                    try
                    {
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 270377, 270382);
                        for (int
        i = 0
        ; (DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 270368, 271220) || true) && (i < n)
        ; DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 270391, 270394)
        , i++, DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 270368, 271220))

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 270368, 271220);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 270436, 270481);

                            RefKind
                            refKind = f_10899_270454_270480(refKindsOpt, i)
                            ;
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 270503, 270531);

                            var
                            argument = arguments[i]
                            ;
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 270553, 270590);

                            var
                            conversion = Conversion.Identity
                            ;

                            if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 270612, 271091) || true) && (refKind == RefKind.None)
                            )

                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 270612, 271091);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 270689, 270711);

                                var
                                before = argument
                                ;
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 270737, 270824);

                                (argument, conversion) = f_10899_270762_270823(argument, includeExplicitConversions: false);

                                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 270850, 271068) || true) && (argument != before)
                                )

                                {
                                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 270850, 271068);
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 270930, 270985);

                                    f_10899_270930_270984(this, before, argument);
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 271015, 271041);

                                    includedConversion = true;
                                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 270850, 271068);
                                }
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 270612, 271091);
                            }
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 271113, 271144);

                            f_10899_271113_271143(argumentsBuilder, argument);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 271166, 271201);

                            f_10899_271166_271200(conversionsBuilder, conversion);
                        }
                    }
                    catch (System.Exception)
                    {
                        DynAbs.Tracing.TraceSender.TraceExitLoopByException(10899, 1, 853);
                        throw;
                    }
                    finally
                    {
                        DynAbs.Tracing.TraceSender.TraceExitLoop(10899, 1, 853);
                    }
                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 271238, 271433) || true) && (includedConversion)
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 271238, 271433);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 271302, 271345);

                        arguments = f_10899_271314_271344(argumentsBuilder);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 271367, 271414);

                        conversions = f_10899_271381_271413(conversionsBuilder);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 271238, 271433);
                    }
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 271451, 271475);

                    f_10899_271451_271474(argumentsBuilder);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 271493, 271519);

                    f_10899_271493_271518(conversionsBuilder);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 270106, 271534);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 271548, 271580);

                return (arguments, conversions);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 269750, 271591);

                Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                f_10899_270172_270216(int
                capacity)
                {
                    var return_v = ArrayBuilder<BoundExpression>.GetInstance(capacity);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 270172, 270216);
                    return return_v;
                }


                Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Conversion>
                f_10899_270260_270299(int
                capacity)
                {
                    var return_v = ArrayBuilder<Conversion>.GetInstance(capacity);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 270260, 270299);
                    return return_v;
                }


                Microsoft.CodeAnalysis.RefKind
                f_10899_270454_270480(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.RefKind>
                refKindsOpt, int
                index)
                {
                    var return_v = GetRefKind(refKindsOpt, index);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 270454, 270480);
                    return return_v;
                }


                (Microsoft.CodeAnalysis.CSharp.BoundExpression expression, Microsoft.CodeAnalysis.CSharp.Conversion conversion)
                f_10899_270762_270823(Microsoft.CodeAnalysis.CSharp.BoundExpression
                expr, bool
                includeExplicitConversions)
                {
                    var return_v = RemoveConversion(expr, includeExplicitConversions: includeExplicitConversions);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 270762, 270823);
                    return return_v;
                }


                int
                f_10899_270930_270984(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                conversionExpression, Microsoft.CodeAnalysis.CSharp.BoundExpression
                convertedNode)
                {
                    this_param.SnapshotWalkerThroughConversionGroup(conversionExpression, convertedNode);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 270930, 270984);
                    return 0;
                }


                int
                f_10899_271113_271143(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                item)
                {
                    this_param.Add(item);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 271113, 271143);
                    return 0;
                }


                int
                f_10899_271166_271200(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Conversion>
                this_param, Microsoft.CodeAnalysis.CSharp.Conversion
                item)
                {
                    this_param.Add(item);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 271166, 271200);
                    return 0;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                f_10899_271314_271344(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                this_param)
                {
                    var return_v = this_param.ToImmutable();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 271314, 271344);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Conversion>
                f_10899_271381_271413(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Conversion>
                this_param)
                {
                    var return_v = this_param.ToImmutable();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 271381, 271413);
                    return return_v;
                }


                int
                f_10899_271451_271474(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                this_param)
                {
                    this_param.Free();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 271451, 271474);
                    return 0;
                }


                int
                f_10899_271493_271518(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Conversion>
                this_param)
                {
                    this_param.Free();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 271493, 271518);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 269750, 271591);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 269750, 271591);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private static VariableState GetVariableState(Variables variables, LocalState localState)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterStaticMethod(10899, 271603, 271868);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 271717, 271761);

                f_10899_271717_271760(variables.Id == localState.Id);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 271775, 271857);

                return f_10899_271782_271856(f_10899_271800_271826(variables), localState.CreateSnapshot());
                DynAbs.Tracing.TraceSender.TraceExitStaticMethod(10899, 271603, 271868);

                int
                f_10899_271717_271760(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 271717, 271760);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.NullableWalker.VariablesSnapshot
                f_10899_271800_271826(Microsoft.CodeAnalysis.CSharp.NullableWalker.Variables
                this_param)
                {
                    var return_v = this_param.CreateSnapshot();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 271800, 271826);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.NullableWalker.VariableState
                f_10899_271782_271856(Microsoft.CodeAnalysis.CSharp.NullableWalker.VariablesSnapshot
                variables, Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalStateSnapshot
                variableNullableStates)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.NullableWalker.VariableState(variables, variableNullableStates);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 271782, 271856);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 271603, 271868);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 271603, 271868);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private (ParameterSymbol? Parameter, TypeWithAnnotations Type, FlowAnalysisAnnotations Annotations, bool isExpandedParamsArgument) GetCorrespondingParameter(
                    int argumentOrdinal,
                    ImmutableArray<ParameterSymbol> parametersOpt,
                    ImmutableArray<int> argsToParamsOpt,
                    bool expanded)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 271880, 273080);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 272234, 272325) || true) && (parametersOpt.IsDefault)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 272234, 272325);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 272295, 272310);

                    return default;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 272234, 272325);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 272341, 272449);

                var
                parameter = f_10899_272357_272448(argumentOrdinal, parametersOpt, argsToParamsOpt, expanded)
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 272463, 272590) || true) && (parameter is null)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 272463, 272590);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 272518, 272542);

                    f_10899_272518_272541(!expanded);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 272560, 272575);

                    return default;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 272463, 272590);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 272606, 272647);

                var
                type = f_10899_272617_272646(parameter)
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 272661, 272959) || true) && (expanded && (DynAbs.Tracing.TraceSender.Expression_True(10899, 272665, 272722) && f_10899_272677_272694(parameter) == parametersOpt.Length - 1) && (DynAbs.Tracing.TraceSender.Expression_True(10899, 272665, 272742) && type.IsSZArray()))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 272661, 272959);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 272776, 272839);

                    type = f_10899_272783_272838(((ArrayTypeSymbol)type.Type));
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 272857, 272944);

                    return (parameter, type, FlowAnalysisAnnotations.None, isExpandedParamsArgument: true);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 272661, 272959);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 272975, 273069);

                return (parameter, type, f_10899_273000_273034(this, parameter), isExpandedParamsArgument: false);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 271880, 273080);

                Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol?
                f_10899_272357_272448(int
                argumentOrdinal, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol>
                parameters, System.Collections.Immutable.ImmutableArray<int>
                argsToParamsOpt, bool
                expanded)
                {
                    var return_v = Binder.GetCorrespondingParameter(argumentOrdinal, parameters, argsToParamsOpt, expanded);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 272357, 272448);
                    return return_v;
                }


                int
                f_10899_272518_272541(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 272518, 272541);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                f_10899_272617_272646(Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol
                this_param)
                {
                    var return_v = this_param.TypeWithAnnotations;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 272617, 272646);
                    return return_v;
                }


                int
                f_10899_272677_272694(Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol
                this_param)
                {
                    var return_v = this_param.Ordinal;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 272677, 272694);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                f_10899_272783_272838(Microsoft.CodeAnalysis.CSharp.Symbols.ArrayTypeSymbol
                this_param)
                {
                    var return_v = this_param.ElementTypeWithAnnotations;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 272783, 272838);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.FlowAnalysisAnnotations
                f_10899_273000_273034(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol
                parameter)
                {
                    var return_v = this_param.GetParameterAnnotations(parameter);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 273000, 273034);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 271880, 273080);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 271880, 273080);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private MethodSymbol InferMethodTypeArguments(
                    MethodSymbol method,
                    ImmutableArray<BoundExpression> arguments,
                    ImmutableArray<RefKind> argumentRefKindsOpt,
                    ImmutableArray<int> argsToParamsOpt,
                    bool expanded)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 273092, 275588);
                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations> parameterTypes = default(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations>);
                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.RefKind> parameterRefKinds = default(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.RefKind>);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 273389, 273426);

                f_10899_273389_273425(f_10899_273402_273424(method));
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 273669, 273709);

                var
                definition = f_10899_273686_273708(method)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 273723, 273774);

                var
                refKinds = f_10899_273738_273773()
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 273788, 273907) || true) && (argumentRefKindsOpt != null)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 273788, 273907);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 273853, 273892);

                    f_10899_273853_273891(refKinds, argumentRefKindsOpt);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 273788, 273907);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 274142, 274918);

                f_10899_274142_274917(definition, arguments.Length, argsToParamsOpt, refKinds, isMethodGroupConversion: false, allowRefOmittedArguments: true, binder: _binder, expanded: expanded, parameterTypes: out parameterTypes, parameterRefKinds: out parameterRefKinds);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 274932, 274948);

                f_10899_274932_274947(refKinds);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 274964, 275015);

                HashSet<DiagnosticInfo>?
                useSiteDiagnostics = null
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 275029, 275405);

                var
                result = f_10899_275042_275404(_binder, _conversions, f_10899_275142_275167(definition), f_10899_275186_275211(definition), parameterTypes, parameterRefKinds, arguments, ref useSiteDiagnostics, f_10899_275368_275403(this))
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 275421, 275503) || true) && (!result.Success)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 275421, 275503);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 275474, 275488);

                    return method;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 275421, 275503);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 275519, 275577);

                return f_10899_275526_275576(definition, result.InferredTypeArguments);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 273092, 275588);

                bool
                f_10899_273402_273424(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                this_param)
                {
                    var return_v = this_param.IsGenericMethod;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 273402, 273424);
                    return return_v;
                }


                int
                f_10899_273389_273425(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 273389, 273425);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                f_10899_273686_273708(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                this_param)
                {
                    var return_v = this_param.ConstructedFrom;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 273686, 273708);
                    return return_v;
                }


                Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.RefKind>
                f_10899_273738_273773()
                {
                    var return_v = ArrayBuilder<RefKind>.GetInstance();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 273738, 273773);
                    return return_v;
                }


                int
                f_10899_273853_273891(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.RefKind>
                this_param, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.RefKind>
                items)
                {
                    this_param.AddRange(items);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 273853, 273891);
                    return 0;
                }


                int
                f_10899_274142_274917(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                method, int
                argumentCount, System.Collections.Immutable.ImmutableArray<int>
                argToParamMap, Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.RefKind>
                argumentRefKinds, bool
                isMethodGroupConversion, bool
                allowRefOmittedArguments, Microsoft.CodeAnalysis.CSharp.Binder
                binder, bool
                expanded, out System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations>
                parameterTypes, out System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.RefKind>
                parameterRefKinds)
                {
                    OverloadResolution.GetEffectiveParameterTypes(method, argumentCount, argToParamMap, argumentRefKinds, isMethodGroupConversion: isMethodGroupConversion, allowRefOmittedArguments: allowRefOmittedArguments, binder: binder, expanded: expanded, out parameterTypes, out parameterRefKinds);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 274142, 274917);
                    return 0;
                }


                int
                f_10899_274932_274947(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.RefKind>
                this_param)
                {
                    this_param.Free();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 274932, 274947);
                    return 0;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.TypeParameterSymbol>
                f_10899_275142_275167(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                this_param)
                {
                    var return_v = this_param.TypeParameters;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 275142, 275167);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                f_10899_275186_275211(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                this_param)
                {
                    var return_v = this_param.ContainingType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 275186, 275211);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.NullableWalker.MethodInferenceExtensions
                f_10899_275368_275403(Microsoft.CodeAnalysis.CSharp.NullableWalker
                walker)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.NullableWalker.MethodInferenceExtensions(walker);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 275368, 275403);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.MethodTypeInferenceResult
                f_10899_275042_275404(Microsoft.CodeAnalysis.CSharp.Binder
                binder, Microsoft.CodeAnalysis.CSharp.Conversions
                conversions, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.TypeParameterSymbol>
                methodTypeParameters, Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                constructedContainingTypeOfMethod, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations>
                formalParameterTypes, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.RefKind>
                formalParameterRefKinds, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                arguments, ref System.Collections.Generic.HashSet<Microsoft.CodeAnalysis.DiagnosticInfo>?
                useSiteDiagnostics, Microsoft.CodeAnalysis.CSharp.NullableWalker.MethodInferenceExtensions
                extensions)
                {
                    var return_v = MethodTypeInferrer.Infer(binder, (Microsoft.CodeAnalysis.CSharp.ConversionsBase)conversions, methodTypeParameters, constructedContainingTypeOfMethod, formalParameterTypes, formalParameterRefKinds, arguments, ref useSiteDiagnostics, (Microsoft.CodeAnalysis.CSharp.MethodTypeInferrer.Extensions)extensions);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 275042, 275404);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                f_10899_275526_275576(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                this_param, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations>
                typeArguments)
                {
                    var return_v = this_param.Construct(typeArguments);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 275526, 275576);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 273092, 275588);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 273092, 275588);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }
        private sealed class MethodInferenceExtensions : MethodTypeInferrer.Extensions
        {
            private readonly NullableWalker _walker;

            internal MethodInferenceExtensions(NullableWalker walker)
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterConstructor(10899, 275759, 275881);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 275735, 275742);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 275849, 275866);

                    _walker = walker;
                    DynAbs.Tracing.TraceSender.TraceExitConstructor(10899, 275759, 275881);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 275759, 275881);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 275759, 275881);
                }
            }

            internal override TypeWithAnnotations GetTypeWithAnnotations(BoundExpression expr)
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 275897, 276101);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 276012, 276086);

                    return TypeWithAnnotations.Create(f_10899_276046_276055(expr), f_10899_276057_276084(expr));
                    DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 275897, 276101);

                    Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?
                    f_10899_276046_276055(Microsoft.CodeAnalysis.CSharp.BoundExpression
                    this_param)
                    {
                        var return_v = this_param.Type;
                        DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 276046, 276055);
                        return return_v;
                    }


                    Microsoft.CodeAnalysis.CSharp.NullableAnnotation
                    f_10899_276057_276084(Microsoft.CodeAnalysis.CSharp.BoundExpression
                    expr)
                    {
                        var return_v = GetNullableAnnotation(expr);
                        DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 276057, 276084);
                        return return_v;
                    }

                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 275897, 276101);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 275897, 276101);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }

            private static NullableAnnotation GetNullableAnnotation(BoundExpression expr)
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterStaticMethod(10899, 276581, 277600);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 276691, 277585);

                    switch (f_10899_276699_276708(expr))
                    {

                        case BoundKind.DefaultLiteral:
                        case BoundKind.DefaultExpression:
                        case BoundKind.Literal:
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 276691, 277585);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 276906, 277016);

                            return (DynAbs.Tracing.TraceSender.Conditional_F1(10899, 276913, 276950) || (((f_10899_276914_276940_M(DynAbs.Tracing.TraceSender.TraceConditionalAccessExpression(f_10899_276914_276932(expr), 10899, 276914, 276940)?.IsNull) != false) && DynAbs.Tracing.TraceSender.Conditional_F2(10899, 276953, 276984)) || DynAbs.Tracing.TraceSender.Conditional_F3(10899, 276987, 277015))) ? NullableAnnotation.NotAnnotated : NullableAnnotation.Annotated;
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 276691, 277585);

                        case BoundKind.ExpressionWithNullability:
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 276691, 277585);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 277105, 277170);

                            return f_10899_277112_277169(((BoundExpressionWithNullability)expr));
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 276691, 277585);

                        case BoundKind.MethodGroup:
                        case BoundKind.UnboundLambda:
                        case BoundKind.UnconvertedObjectCreationExpression:
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 276691, 277585);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 277369, 277408);

                            return NullableAnnotation.NotAnnotated;
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 276691, 277585);

                        default:
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 276691, 277585);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 277464, 277484);

                            f_10899_277464_277483(false);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 277530, 277566);

                            return NullableAnnotation.Oblivious;
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 276691, 277585);
                    }
                    DynAbs.Tracing.TraceSender.TraceExitStaticMethod(10899, 276581, 277600);

                    Microsoft.CodeAnalysis.CSharp.BoundKind
                    f_10899_276699_276708(Microsoft.CodeAnalysis.CSharp.BoundExpression
                    this_param)
                    {
                        var return_v = this_param.Kind;
                        DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 276699, 276708);
                        return return_v;
                    }


                    Microsoft.CodeAnalysis.ConstantValue?
                    f_10899_276914_276932(Microsoft.CodeAnalysis.CSharp.BoundExpression
                    this_param)
                    {
                        var return_v = this_param.ConstantValue;
                        DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 276914, 276932);
                        return return_v;
                    }


                    bool?
                    f_10899_276914_276940_M(bool?
                    i)
                    {
                        var return_v = i;
                        DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 276914, 276940);
                        return return_v;
                    }


                    Microsoft.CodeAnalysis.CSharp.NullableAnnotation
                    f_10899_277112_277169(Microsoft.CodeAnalysis.CSharp.BoundExpressionWithNullability
                    this_param)
                    {
                        var return_v = this_param.NullableAnnotation;
                        DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 277112, 277169);
                        return return_v;
                    }


                    int
                    f_10899_277464_277483(bool
                    condition)
                    {
                        Debug.Assert(condition);
                        DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 277464, 277483);
                        return 0;
                    }

                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 276581, 277600);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 276581, 277600);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }

            internal override TypeWithAnnotations GetMethodGroupResultType(BoundMethodGroup group, MethodSymbol method)
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 277616, 278147);
                    Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState receiverType = default(Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState);

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 277756, 278074) || true) && (f_10899_277760_277855(_walker, f_10899_277805_277822(group), out receiverType))
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 277756, 278074);

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 277897, 278055) || true) && (f_10899_277901_277917_M(!method.IsStatic))
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 277897, 278055);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 277967, 278032);

                            method = (MethodSymbol)f_10899_277990_278031(receiverType.Type, method);
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 277897, 278055);
                        }
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 277756, 278074);
                    }
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 278092, 278132);

                    return f_10899_278099_278131(method);
                    DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 277616, 278147);

                    Microsoft.CodeAnalysis.CSharp.BoundExpression?
                    f_10899_277805_277822(Microsoft.CodeAnalysis.CSharp.BoundMethodGroup
                    this_param)
                    {
                        var return_v = this_param.ReceiverOpt;
                        DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 277805, 277822);
                        return return_v;
                    }


                    bool
                    f_10899_277760_277855(Microsoft.CodeAnalysis.CSharp.NullableWalker
                    this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression?
                    receiverOpt, out Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                    type)
                    {
                        var return_v = this_param.TryGetMethodGroupReceiverNullability(receiverOpt, out type);
                        DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 277760, 277855);
                        return return_v;
                    }


                    bool
                    f_10899_277901_277917_M(bool
                    i)
                    {
                        var return_v = i;
                        DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 277901, 277917);
                        return return_v;
                    }


                    Microsoft.CodeAnalysis.CSharp.Symbol
                    f_10899_277990_278031(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?
                    type, Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                    symbol)
                    {
                        var return_v = AsMemberOfType(type, (Microsoft.CodeAnalysis.CSharp.Symbol)symbol);
                        DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 277990, 278031);
                        return return_v;
                    }


                    Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                    f_10899_278099_278131(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                    this_param)
                    {
                        var return_v = this_param.ReturnTypeWithAnnotations;
                        DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 278099, 278131);
                        return return_v;
                    }

                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 277616, 278147);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 277616, 278147);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }

            static MethodInferenceExtensions()
            {
                DynAbs.Tracing.TraceSender.TraceEnterStaticConstructor(10899, 275600, 278158);
                DynAbs.Tracing.TraceSender.TraceExitStaticConstructor(10899, 275600, 278158);

                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 275600, 278158);
            }

            int ___ignore_me___ = DynAbs.Tracing.TraceSender.TraceBeforeConstructor(10899, 275600, 278158);
        }

        private ImmutableArray<BoundExpression> GetArgumentsForMethodTypeInference(ImmutableArray<VisitArgumentResult> argumentResults, ImmutableArray<BoundExpression> arguments)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 278170, 281118);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 278820, 278851);

                int
                n = argumentResults.Length
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 278865, 278924);

                var
                builder = f_10899_278879_278923(n)
                ;
                try
                {
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 278947, 278952);
                    for (int
        i = 0
        ; (DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 278938, 279469) || true) && (i < n)
        ; DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 278961, 278964)
        , i++, DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 278938, 279469))

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 278938, 279469);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 278998, 279043);

                        var
                        visitArgumentResult = argumentResults[i]
                        ;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 279061, 279114);

                        var
                        lambdaState = visitArgumentResult.StateForLambda
                        ;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 279259, 279346);

                        var
                        argumentResult = visitArgumentResult.RValueType.ToTypeWithAnnotations(compilation)
                        ;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 279364, 279454);

                        f_10899_279364_279453(builder, f_10899_279376_279452(arguments[i], argumentResult, lambdaState));
                    }
                }
                catch (System.Exception)
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoopByException(10899, 1, 532);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoop(10899, 1, 532);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 279483, 279519);

                return f_10899_279490_279518(builder);

                BoundExpression getArgumentForMethodTypeInference(BoundExpression argument, TypeWithAnnotations argumentType, Optional<LocalState> lambdaState)
                {
                    try
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 279535, 280868);

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 279711, 280235) || true) && (f_10899_279715_279728(argument) == BoundKind.Lambda)
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 279711, 280235);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 279790, 279825);

                            f_10899_279790_279824(lambdaState.HasValue);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 280120, 280216);

                            return f_10899_280127_280215(argument, f_10899_280167_280214(_variables, lambdaState.Value));
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 279711, 280235);
                        }

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 280253, 280355) || true) && (f_10899_280257_280278_M(!argumentType.HasType))
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 280253, 280355);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 280320, 280336);

                            return argument;
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 280253, 280355);
                        }

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 280373, 280714) || true) && (argument is BoundLocal local && (DynAbs.Tracing.TraceSender.Expression_True(10899, 280377, 280476) && f_10899_280409_280430(local) == BoundLocalDeclarationKind.WithInferredType))
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 280373, 280714);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 280584, 280695);

                            return f_10899_280591_280694(argument.Syntax, argument, NullableAnnotation.Oblivious, type: null);
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 280373, 280714);
                        }
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 280732, 280853);

                        return f_10899_280739_280852(argument.Syntax, argument, argumentType.NullableAnnotation, argumentType.Type);
                        DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 279535, 280868);

                        Microsoft.CodeAnalysis.CSharp.BoundKind
                        f_10899_279715_279728(Microsoft.CodeAnalysis.CSharp.BoundExpression
                        this_param)
                        {
                            var return_v = this_param.Kind;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 279715, 279728);
                            return return_v;
                        }


                        int
                        f_10899_279790_279824(bool
                        condition)
                        {
                            Debug.Assert(condition);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 279790, 279824);
                            return 0;
                        }


                        Microsoft.CodeAnalysis.CSharp.NullableWalker.VariableState
                        f_10899_280167_280214(Microsoft.CodeAnalysis.CSharp.NullableWalker.Variables
                        variables, Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState
                        localState)
                        {
                            var return_v = GetVariableState(variables, localState);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 280167, 280214);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.CSharp.UnboundLambda
                        f_10899_280127_280215(Microsoft.CodeAnalysis.CSharp.BoundExpression
                        expr, Microsoft.CodeAnalysis.CSharp.NullableWalker.VariableState
                        variableState)
                        {
                            var return_v = getUnboundLambda((Microsoft.CodeAnalysis.CSharp.BoundLambda)expr, variableState);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 280127, 280215);
                            return return_v;
                        }


                        bool
                        f_10899_280257_280278_M(bool
                        i)
                        {
                            var return_v = i;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 280257, 280278);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.CSharp.BoundLocalDeclarationKind
                        f_10899_280409_280430(Microsoft.CodeAnalysis.CSharp.BoundLocal
                        this_param)
                        {
                            var return_v = this_param.DeclarationKind;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 280409, 280430);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.CSharp.BoundExpressionWithNullability
                        f_10899_280591_280694(Microsoft.CodeAnalysis.SyntaxNode
                        syntax, Microsoft.CodeAnalysis.CSharp.BoundExpression
                        expression, Microsoft.CodeAnalysis.CSharp.NullableAnnotation
                        nullableAnnotation, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?
                        type)
                        {
                            var return_v = new Microsoft.CodeAnalysis.CSharp.BoundExpressionWithNullability(syntax, expression, nullableAnnotation, type: type);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 280591, 280694);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.CSharp.BoundExpressionWithNullability
                        f_10899_280739_280852(Microsoft.CodeAnalysis.SyntaxNode
                        syntax, Microsoft.CodeAnalysis.CSharp.BoundExpression
                        expression, Microsoft.CodeAnalysis.CSharp.NullableAnnotation
                        nullableAnnotation, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                        type)
                        {
                            var return_v = new Microsoft.CodeAnalysis.CSharp.BoundExpressionWithNullability(syntax, expression, nullableAnnotation, type);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 280739, 280852);
                            return return_v;
                        }

                    }
                    catch
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 279535, 280868);
                        throw;
                    }
                    finally
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 279535, 280868);
                    }
                    throw new System.Exception("Slicer error: unreachable code");
                }

                static UnboundLambda getUnboundLambda(BoundLambda expr, VariableState variableState)
                {
                    try
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterStaticMethod(10899, 280884, 281107);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 281001, 281092);

                        return f_10899_281008_281091(f_10899_281008_281026(expr), f_10899_281045_281068(f_10899_281045_281063(expr)).Binder, variableState);
                        DynAbs.Tracing.TraceSender.TraceExitStaticMethod(10899, 280884, 281107);

                        Microsoft.CodeAnalysis.CSharp.UnboundLambda
                        f_10899_281008_281026(Microsoft.CodeAnalysis.CSharp.BoundLambda
                        this_param)
                        {
                            var return_v = this_param.UnboundLambda;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 281008, 281026);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.CSharp.UnboundLambda
                        f_10899_281045_281063(Microsoft.CodeAnalysis.CSharp.BoundLambda
                        this_param)
                        {
                            var return_v = this_param.UnboundLambda;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 281045, 281063);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.CSharp.UnboundLambdaState
                        f_10899_281045_281068(Microsoft.CodeAnalysis.CSharp.UnboundLambda
                        this_param)
                        {
                            var return_v = this_param.Data;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 281045, 281068);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.CSharp.UnboundLambda
                        f_10899_281008_281091(Microsoft.CodeAnalysis.CSharp.UnboundLambda
                        this_param, Microsoft.CodeAnalysis.CSharp.Binder
                        binder, Microsoft.CodeAnalysis.CSharp.NullableWalker.VariableState
                        nullableState)
                        {
                            var return_v = this_param.WithNullableState(binder, nullableState);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 281008, 281091);
                            return return_v;
                        }

                    }
                    catch
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 280884, 281107);
                        throw;
                    }
                    finally
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 280884, 281107);
                    }
                    throw new System.Exception("Slicer error: unreachable code");
                }
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 278170, 281118);

                Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                f_10899_278879_278923(int
                capacity)
                {
                    var return_v = ArrayBuilder<BoundExpression>.GetInstance(capacity);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 278879, 278923);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10899_279376_279452(Microsoft.CodeAnalysis.CSharp.BoundExpression
                argument, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                argumentType, Microsoft.CodeAnalysis.Optional<Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState>
                lambdaState)
                {
                    var return_v = getArgumentForMethodTypeInference(argument, argumentType, lambdaState);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 279376, 279452);
                    return return_v;
                }


                int
                f_10899_279364_279453(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                item)
                {
                    this_param.Add(item);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 279364, 279453);
                    return 0;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                f_10899_279490_279518(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                this_param)
                {
                    var return_v = this_param.ToImmutableAndFree();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 279490, 279518);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 278170, 281118);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 278170, 281118);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private void CheckMethodConstraints(SyntaxNode syntax, MethodSymbol method)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 281130, 282150);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 281230, 281309) || true) && (_disableDiagnostics)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 281230, 281309);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 281287, 281294);

                    return;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 281230, 281309);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 281325, 281406);

                var
                diagnosticsBuilder = f_10899_281350_281405()
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 281420, 281501);

                var
                nullabilityBuilder = f_10899_281445_281500()
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 281515, 281591);

                ArrayBuilder<TypeParameterDiagnosticInfo>?
                useSiteDiagnosticsBuilder = null
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 281605, 281855);

                f_10899_281605_281854(method, _conversions, compilation, diagnosticsBuilder, nullabilityBuilder, ref useSiteDiagnosticsBuilder);
                try
                {
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 281869, 282011);
                    foreach (var pair in f_10899_281890_281908_I(nullabilityBuilder))
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 281869, 282011);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 281942, 281996);

                        f_10899_281942_281995(f_10899_281942_281953(), pair.DiagnosticInfo, f_10899_281979_281994(syntax));
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 281869, 282011);
                    }
                }
                catch (System.Exception)
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoopByException(10899, 1, 143);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoop(10899, 1, 143);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 282025, 282059);

                DynAbs.Tracing.TraceSender.TraceInvocationWrapper(() => DynAbs.Tracing.TraceSender.TraceConditionalAccessExpression(useSiteDiagnosticsBuilder, 10899, 282025, 282058)?.Free(), 10899, 282051, 282058);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 282073, 282099);

                f_10899_282073_282098(nullabilityBuilder);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 282113, 282139);

                f_10899_282113_282138(diagnosticsBuilder);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 281130, 282150);

                Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbols.TypeParameterDiagnosticInfo>
                f_10899_281350_281405()
                {
                    var return_v = ArrayBuilder<TypeParameterDiagnosticInfo>.GetInstance();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 281350, 281405);
                    return return_v;
                }


                Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbols.TypeParameterDiagnosticInfo>
                f_10899_281445_281500()
                {
                    var return_v = ArrayBuilder<TypeParameterDiagnosticInfo>.GetInstance();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 281445, 281500);
                    return return_v;
                }


                bool
                f_10899_281605_281854(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                method, Microsoft.CodeAnalysis.CSharp.Conversions
                conversions, Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                currentCompilation, Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbols.TypeParameterDiagnosticInfo>
                diagnosticsBuilder, Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbols.TypeParameterDiagnosticInfo>
                nullabilityDiagnosticsBuilderOpt, ref Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbols.TypeParameterDiagnosticInfo>?
                useSiteDiagnosticsBuilder)
                {
                    var return_v = ConstraintsHelper.CheckMethodConstraints(method, (Microsoft.CodeAnalysis.CSharp.ConversionsBase)conversions, currentCompilation, diagnosticsBuilder, nullabilityDiagnosticsBuilderOpt, ref useSiteDiagnosticsBuilder);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 281605, 281854);
                    return return_v;
                }


                Microsoft.CodeAnalysis.DiagnosticBag
                f_10899_281942_281953()
                {
                    var return_v = Diagnostics;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 281942, 281953);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Location
                f_10899_281979_281994(Microsoft.CodeAnalysis.SyntaxNode
                this_param)
                {
                    var return_v = this_param.Location;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 281979, 281994);
                    return return_v;
                }


                int
                f_10899_281942_281995(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.DiagnosticInfo
                info, Microsoft.CodeAnalysis.Location
                location)
                {
                    diagnostics.Add(info, location);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 281942, 281995);
                    return 0;
                }


                Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbols.TypeParameterDiagnosticInfo>
                f_10899_281890_281908_I(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbols.TypeParameterDiagnosticInfo>
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 281890, 281908);
                    return return_v;
                }


                int
                f_10899_282073_282098(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbols.TypeParameterDiagnosticInfo>
                this_param)
                {
                    this_param.Free();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 282073, 282098);
                    return 0;
                }


                int
                f_10899_282113_282138(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbols.TypeParameterDiagnosticInfo>
                this_param)
                {
                    this_param.Free();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 282113, 282138);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 281130, 282150);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 281130, 282150);
            }
        }

        private static (BoundExpression expression, Conversion conversion) RemoveConversion(BoundExpression expr, bool includeExplicitConversions)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterStaticMethod(10899, 282936, 284760);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 283099, 283129);

                ConversionGroup?
                group = null
                ;
                try
                {
                    while ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 283143, 284679) || true) && (true)
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 283143, 284679);

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 283188, 283292) || true) && (f_10899_283192_283201(expr) != BoundKind.Conversion)
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 283188, 283292);
                            DynAbs.Tracing.TraceSender.TraceBreak(10899, 283267, 283273);

                            break;
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 283188, 283292);
                        }
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 283310, 283349);

                        var
                        conversion = (BoundConversion)expr
                        ;

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 283367, 283531) || true) && (group != f_10899_283380_283409(conversion) && (DynAbs.Tracing.TraceSender.Expression_True(10899, 283371, 283426) && group != null))
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 283367, 283531);
                            DynAbs.Tracing.TraceSender.TraceBreak(10899, 283506, 283512);

                            break;
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 283367, 283531);
                        }
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 283549, 283587);

                        group = f_10899_283557_283586(conversion);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 283605, 283667);

                        f_10899_283605_283666(group != null || (DynAbs.Tracing.TraceSender.Expression_False(10899, 283618, 283665) || f_10899_283635_283665_M(!conversion.ExplicitCastInCode)));

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 283733, 283899) || true) && (!includeExplicitConversions && (DynAbs.Tracing.TraceSender.Expression_True(10899, 283737, 283803) && f_10899_283768_283795_M(DynAbs.Tracing.TraceSender.TraceConditionalAccessExpression(group, 10899, 283768, 283795)?.IsExplicitConversion) == true))
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 283733, 283899);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 283845, 283880);

                            return (expr, Conversion.Identity);
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 283733, 283899);
                        }
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 283917, 283943);

                        expr = f_10899_283924_283942(conversion);

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 283961, 284664) || true) && (group == null)
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 283961, 284664);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 284608, 284645);

                            return (expr, f_10899_284622_284643(conversion));
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 283961, 284664);
                        }
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 283143, 284679);
                    }
                }
                catch (System.Exception)
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoopByException(10899, 283143, 284679);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoop(10899, 283143, 284679);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 284693, 284749);

                return (expr, DynAbs.Tracing.TraceSender.TraceConditionalAccessExpression(group, 10899, 284707, 284724)?.Conversion ?? (DynAbs.Tracing.TraceSender.Expression_Null<Microsoft.CodeAnalysis.CSharp.Conversion?>(10899, 284707, 284747) ?? Conversion.Identity));
                DynAbs.Tracing.TraceSender.TraceExitStaticMethod(10899, 282936, 284760);

                Microsoft.CodeAnalysis.CSharp.BoundKind
                f_10899_283192_283201(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.Kind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 283192, 283201);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.ConversionGroup?
                f_10899_283380_283409(Microsoft.CodeAnalysis.CSharp.BoundConversion
                this_param)
                {
                    var return_v = this_param.ConversionGroupOpt;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 283380, 283409);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.ConversionGroup?
                f_10899_283557_283586(Microsoft.CodeAnalysis.CSharp.BoundConversion
                this_param)
                {
                    var return_v = this_param.ConversionGroupOpt;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 283557, 283586);
                    return return_v;
                }


                bool
                f_10899_283635_283665_M(bool
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 283635, 283665);
                    return return_v;
                }


                int
                f_10899_283605_283666(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 283605, 283666);
                    return 0;
                }


                bool?
                f_10899_283768_283795_M(bool?
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 283768, 283795);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10899_283924_283942(Microsoft.CodeAnalysis.CSharp.BoundConversion
                this_param)
                {
                    var return_v = this_param.Operand;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 283924, 283942);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Conversion
                f_10899_284622_284643(Microsoft.CodeAnalysis.CSharp.BoundConversion
                this_param)
                {
                    var return_v = this_param.Conversion;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 284622, 284643);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 282936, 284760);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 282936, 284760);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private Conversion GenerateConversionForConditionalOperator(BoundExpression sourceExpression, TypeSymbol? sourceType, TypeSymbol destinationType, bool reportMismatch)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 284843, 285570);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 285034, 285192);

                var
                conversion = f_10899_285051_285191(_conversions, sourceExpression, sourceType, destinationType, fromExplicitCast: false, extensionMethodThisArgument: false)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 285206, 285259);

                bool
                canConvertNestedNullability = conversion.Exists
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 285273, 285527) || true) && (!canConvertNestedNullability && (DynAbs.Tracing.TraceSender.Expression_True(10899, 285277, 285323) && reportMismatch) && (DynAbs.Tracing.TraceSender.Expression_True(10899, 285277, 285357) && f_10899_285327_285357_M(!sourceExpression.IsSuppressed)))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 285273, 285527);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 285391, 285512);

                    f_10899_285391_285511(this, sourceExpression.Syntax, f_10899_285454_285493(sourceType), destinationType);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 285273, 285527);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 285541, 285559);

                return conversion;
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 284843, 285570);

                Microsoft.CodeAnalysis.CSharp.Conversion
                f_10899_285051_285191(Microsoft.CodeAnalysis.CSharp.Conversions
                conversions, Microsoft.CodeAnalysis.CSharp.BoundExpression
                sourceExpression, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?
                sourceType, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                destinationType, bool
                fromExplicitCast, bool
                extensionMethodThisArgument)
                {
                    var return_v = GenerateConversion(conversions, sourceExpression, sourceType, destinationType, fromExplicitCast: fromExplicitCast, extensionMethodThisArgument: extensionMethodThisArgument);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 285051, 285191);
                    return return_v;
                }


                bool
                f_10899_285327_285357_M(bool
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 285327, 285357);
                    return return_v;
                }


                object
                f_10899_285454_285493(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?
                typeOpt)
                {
                    var return_v = GetTypeAsDiagnosticArgument(typeOpt);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 285454, 285493);
                    return return_v;
                }


                int
                f_10899_285391_285511(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.SyntaxNode
                syntaxNode, object
                sourceType, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                destinationType)
                {
                    this_param.ReportNullabilityMismatchInAssignment(syntaxNode, sourceType, (object)destinationType);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 285391, 285511);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 284843, 285570);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 284843, 285570);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private static Conversion GenerateConversion(Conversions conversions, BoundExpression? sourceExpression, TypeSymbol? sourceType, TypeSymbol destinationType, bool fromExplicitCast, bool extensionMethodThisArgument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterStaticMethod(10899, 285582, 286966);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 285820, 285871);

                HashSet<DiagnosticInfo>?
                useSiteDiagnostics = null
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 285885, 285973);

                bool
                useExpression = sourceType is null || (DynAbs.Tracing.TraceSender.Expression_False(10899, 285906, 285972) || f_10899_285928_285972(sourceExpression))
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 285987, 286314) || true) && (extensionMethodThisArgument)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 285987, 286314);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 286052, 286299);

                    return f_10899_286059_286298(conversions, (DynAbs.Tracing.TraceSender.Conditional_F1(10899, 286142, 286155) || ((useExpression && DynAbs.Tracing.TraceSender.Conditional_F2(10899, 286158, 286174)) || DynAbs.Tracing.TraceSender.Conditional_F3(10899, 286177, 286181))) ? sourceExpression : null, sourceType, destinationType, ref useSiteDiagnostics);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 285987, 286314);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 286328, 286955);

                return (DynAbs.Tracing.TraceSender.Conditional_F1(10899, 286335, 286348) || ((useExpression && DynAbs.Tracing.TraceSender.Conditional_F2(10899, 286368, 286663)) || DynAbs.Tracing.TraceSender.Conditional_F3(10899, 286683, 286954))) ? ((DynAbs.Tracing.TraceSender.Conditional_F1(10899, 286369, 286385) || ((fromExplicitCast && DynAbs.Tracing.TraceSender.Conditional_F2(10899, 286409, 286527)) || DynAbs.Tracing.TraceSender.Conditional_F3(10899, 286551, 286662))) ? f_10899_286409_286527(conversions, sourceExpression, destinationType, ref useSiteDiagnostics, forCast: true) : f_10899_286551_286662(conversions, sourceExpression, destinationType, ref useSiteDiagnostics)) : ((DynAbs.Tracing.TraceSender.Conditional_F1(10899, 286684, 286700) || ((fromExplicitCast && DynAbs.Tracing.TraceSender.Conditional_F2(10899, 286724, 286830)) || DynAbs.Tracing.TraceSender.Conditional_F3(10899, 286854, 286953))) ? f_10899_286724_286830(conversions, sourceType, destinationType, ref useSiteDiagnostics, forCast: true) : f_10899_286854_286953(conversions, sourceType, destinationType, ref useSiteDiagnostics));
                DynAbs.Tracing.TraceSender.TraceExitStaticMethod(10899, 285582, 286966);

                bool
                f_10899_285928_285972(Microsoft.CodeAnalysis.CSharp.BoundExpression?
                value)
                {
                    var return_v = UseExpressionForConversion(value);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 285928, 285972);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Conversion
                f_10899_286059_286298(Microsoft.CodeAnalysis.CSharp.Conversions
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression?
                sourceExpressionOpt, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?
                sourceType, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                destination, ref System.Collections.Generic.HashSet<Microsoft.CodeAnalysis.DiagnosticInfo>?
                useSiteDiagnostics)
                {
                    var return_v = this_param.ClassifyImplicitExtensionMethodThisArgConversion(sourceExpressionOpt, sourceType, destination, ref useSiteDiagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 286059, 286298);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Conversion
                f_10899_286409_286527(Microsoft.CodeAnalysis.CSharp.Conversions
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression?
                sourceExpression, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                destination, ref System.Collections.Generic.HashSet<Microsoft.CodeAnalysis.DiagnosticInfo>?
                useSiteDiagnostics, bool
                forCast)
                {
                    var return_v = this_param.ClassifyConversionFromExpression(sourceExpression, destination, ref useSiteDiagnostics, forCast: forCast);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 286409, 286527);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Conversion
                f_10899_286551_286662(Microsoft.CodeAnalysis.CSharp.Conversions
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression?
                sourceExpression, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                destination, ref System.Collections.Generic.HashSet<Microsoft.CodeAnalysis.DiagnosticInfo>?
                useSiteDiagnostics)
                {
                    var return_v = this_param.ClassifyImplicitConversionFromExpression(sourceExpression, destination, ref useSiteDiagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 286551, 286662);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Conversion
                f_10899_286724_286830(Microsoft.CodeAnalysis.CSharp.Conversions
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?
                source, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                destination, ref System.Collections.Generic.HashSet<Microsoft.CodeAnalysis.DiagnosticInfo>?
                useSiteDiagnostics, bool
                forCast)
                {
                    var return_v = this_param.ClassifyConversionFromType(source, destination, ref useSiteDiagnostics, forCast: forCast);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 286724, 286830);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Conversion
                f_10899_286854_286953(Microsoft.CodeAnalysis.CSharp.Conversions
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?
                source, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                destination, ref System.Collections.Generic.HashSet<Microsoft.CodeAnalysis.DiagnosticInfo>?
                useSiteDiagnostics)
                {
                    var return_v = this_param.ClassifyImplicitConversionFromType(source, destination, ref useSiteDiagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 286854, 286953);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 285582, 286966);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 285582, 286966);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private static bool UseExpressionForConversion([NotNullWhen(true)] BoundExpression? value)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterStaticMethod(10899, 287477, 288046);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 287592, 287671) || true) && (value is null)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 287592, 287671);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 287643, 287656);

                    return false;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 287592, 287671);
                }

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 287685, 287825) || true) && (f_10899_287689_287699(value) is null || (DynAbs.Tracing.TraceSender.Expression_False(10899, 287689, 287733) || f_10899_287711_287733(f_10899_287711_287721(value))) || (DynAbs.Tracing.TraceSender.Expression_False(10899, 287689, 287764) || f_10899_287737_287756(value) != null))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 287685, 287825);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 287798, 287810);

                    return true;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 287685, 287825);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 287839, 288035);

                switch (f_10899_287847_287857(value))
                {

                    case BoundKind.InterpolatedString:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 287839, 288035);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 287947, 287959);

                        return true;
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 287839, 288035);

                    default:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 287839, 288035);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 288007, 288020);

                        return false;
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 287839, 288035);
                }
                DynAbs.Tracing.TraceSender.TraceExitStaticMethod(10899, 287477, 288046);

                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?
                f_10899_287689_287699(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 287689, 287699);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                f_10899_287711_287721(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 287711, 287721);
                    return return_v;
                }


                bool
                f_10899_287711_287733(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                type)
                {
                    var return_v = type.IsDynamic();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 287711, 287733);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ConstantValue?
                f_10899_287737_287756(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.ConstantValue;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 287737, 287756);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundKind
                f_10899_287847_287857(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.Kind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 287847, 287857);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 287477, 288046);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 287477, 288046);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private TypeWithState GetAdjustedResult(TypeWithState type, int slot)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 288196, 288514);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 288290, 288475) || true) && (this.State.HasValue(slot))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 288290, 288475);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 288353, 288396);

                    NullableFlowState
                    state = this.State[slot]
                    ;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 288414, 288460);

                    return TypeWithState.Create(type.Type, state);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 288290, 288475);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 288491, 288503);

                return type;
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 288196, 288514);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 288196, 288514);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 288196, 288514);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private static Symbol AsMemberOfType(TypeSymbol? type, Symbol symbol)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterStaticMethod(10899, 288996, 292529);
                Microsoft.CodeAnalysis.CSharp.Symbol? result = default(Microsoft.CodeAnalysis.CSharp.Symbol?);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 289090, 289127);

                f_10899_289090_289126((object)symbol != null);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 289143, 289188);

                var
                containingType = type as NamedTypeSymbol
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 289202, 289354) || true) && (containingType is null || (DynAbs.Tracing.TraceSender.Expression_False(10899, 289206, 289260) || f_10899_289232_289260(containingType)) || (DynAbs.Tracing.TraceSender.Expression_False(10899, 289206, 289291) || symbol is ErrorMethodSymbol))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 289202, 289354);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 289325, 289339);

                    return symbol;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 289202, 289354);
                }

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 289370, 289711) || true) && (f_10899_289374_289385(symbol) == SymbolKind.Method)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 289370, 289711);

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 289440, 289696) || true) && (f_10899_289444_289477(((MethodSymbol)symbol)) == MethodKind.LocalFunction)
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 289440, 289696);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 289663, 289677);

                        return symbol;
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 289440, 289696);
                    }
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 289370, 289711);
                }

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 289727, 289883) || true) && (symbol is TupleElementFieldSymbol or TupleErrorFieldSymbol)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 289727, 289883);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 289823, 289868);

                    return f_10899_289830_289867(symbol, containingType);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 289727, 289883);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 289899, 289943);

                var
                symbolContainer = f_10899_289921_289942(symbol)
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 289957, 290364) || true) && (f_10899_289961_289992(symbolContainer))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 289957, 290364);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 290026, 290111);

                    int?
                    memberIndex = (DynAbs.Tracing.TraceSender.Conditional_F1(10899, 290045, 290079) || ((f_10899_290045_290056(symbol) == SymbolKind.Property && DynAbs.Tracing.TraceSender.Conditional_F2(10899, 290082, 290103)) || DynAbs.Tracing.TraceSender.Conditional_F3(10899, 290106, 290110))) ? f_10899_290082_290103(symbol) : null
                    ;

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 290129, 290229) || true) && (f_10899_290133_290154_M(!memberIndex.HasValue))
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 290129, 290229);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 290196, 290210);

                        return symbol;
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 290129, 290229);
                    }
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 290247, 290349);

                    return f_10899_290254_290348(containingType, f_10899_290316_290347(memberIndex));
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 289957, 290364);
                }

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 290378, 290542) || true) && (f_10899_290382_290412_M(!symbolContainer.IsGenericType))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 290378, 290542);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 290446, 290495);

                    f_10899_290446_290494(f_10899_290459_290493(f_10899_290459_290480(symbol)));
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 290513, 290527);

                    return symbol;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 290378, 290542);
                }

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 290556, 290652) || true) && (f_10899_290560_290589_M(!containingType.IsGenericType))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 290556, 290652);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 290623, 290637);

                    return symbol;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 290556, 290652);
                }

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 290666, 291674) || true) && (f_10899_290670_290697(symbolContainer))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 290666, 291674);

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 290731, 290865) || true) && (f_10899_290735_290790(containingType, out result))
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 290731, 290865);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 290832, 290846);

                        return result;
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 290731, 290865);
                    }
                    try
                    {
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 290883, 291157);
                        foreach (var @interface in f_10899_290910_290958_I(f_10899_290910_290958(containingType)))
                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 290883, 291157);

                            if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 291000, 291138) || true) && (f_10899_291004_291051(@interface, out result))
                            )

                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 291000, 291138);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 291101, 291115);

                                return result;
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 291000, 291138);
                            }
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 290883, 291157);
                        }
                    }
                    catch (System.Exception)
                    {
                        DynAbs.Tracing.TraceSender.TraceExitLoopByException(10899, 1, 275);
                        throw;
                    }
                    finally
                    {
                        DynAbs.Tracing.TraceSender.TraceExitLoop(10899, 1, 275);
                    }
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 290666, 291674);
                }

                else

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 290666, 291674);
                    try
                    {
                        while ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 291223, 291659) || true) && (true)
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 291223, 291659);

                            if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 291276, 291422) || true) && (f_10899_291280_291335(containingType, out result))
                            )

                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 291276, 291422);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 291385, 291399);

                                return result;
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 291276, 291422);
                            }
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 291444, 291505);

                            containingType = f_10899_291461_291504(containingType);

                            if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 291527, 291640) || true) && ((object)containingType == null)
                            )

                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 291527, 291640);
                                DynAbs.Tracing.TraceSender.TraceBreak(10899, 291611, 291617);

                                break;
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 291527, 291640);
                            }
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 291223, 291659);
                        }
                    }
                    catch (System.Exception)
                    {
                        DynAbs.Tracing.TraceSender.TraceExitLoopByException(10899, 291223, 291659);
                        throw;
                    }
                    finally
                    {
                        DynAbs.Tracing.TraceSender.TraceExitLoop(10899, 291223, 291659);
                    }
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 290666, 291674);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 291688, 291708);

                f_10899_291688_291707(false);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 291772, 291786);

                return symbol;

                bool tryAsMemberOfSingleType(NamedTypeSymbol singleType, [NotNullWhen(true)] out Symbol? result)
                {
                    try
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 291802, 292518);

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 291931, 292114) || true) && (!f_10899_291936_292004(singleType, symbolContainer, TypeCompareKind.AllIgnoreOptions))
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 291931, 292114);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 292046, 292060);

                            result = null;
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 292082, 292095);

                            return false;
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 291931, 292114);
                        }
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 292132, 292174);

                        var
                        symbolDef = f_10899_292148_292173(symbol)
                        ;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 292192, 292238);

                        result = f_10899_292201_292237(symbolDef, singleType);

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 292256, 292473) || true) && (result is MethodSymbol resultMethod && (DynAbs.Tracing.TraceSender.Expression_True(10899, 292260, 292327) && f_10899_292299_292327(resultMethod)))
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 292256, 292473);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 292369, 292454);

                            result = f_10899_292378_292453(resultMethod, f_10899_292401_292452(((MethodSymbol)symbol)));
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 292256, 292473);
                        }
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 292491, 292503);

                        return true;
                        DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 291802, 292518);

                        bool
                        f_10899_291936_292004(Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                        this_param, Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                        t2, Microsoft.CodeAnalysis.TypeCompareKind
                        comparison)
                        {
                            var return_v = this_param.Equals((Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol)t2, comparison);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 291936, 292004);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.CSharp.Symbol
                        f_10899_292148_292173(Microsoft.CodeAnalysis.CSharp.Symbol
                        this_param)
                        {
                            var return_v = this_param.OriginalDefinition;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 292148, 292173);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.CSharp.Symbol
                        f_10899_292201_292237(Microsoft.CodeAnalysis.CSharp.Symbol
                        s, Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                        newOwner)
                        {
                            var return_v = s.SymbolAsMember(newOwner);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 292201, 292237);
                            return return_v;
                        }


                        bool
                        f_10899_292299_292327(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                        this_param)
                        {
                            var return_v = this_param.IsGenericMethod;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 292299, 292327);
                            return return_v;
                        }


                        System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations>
                        f_10899_292401_292452(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                        this_param)
                        {
                            var return_v = this_param.TypeArgumentsWithAnnotations;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 292401, 292452);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                        f_10899_292378_292453(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                        this_param, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations>
                        typeArguments)
                        {
                            var return_v = this_param.Construct(typeArguments);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 292378, 292453);
                            return return_v;
                        }

                    }
                    catch
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 291802, 292518);
                        throw;
                    }
                    finally
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 291802, 292518);
                    }
                    throw new System.Exception("Slicer error: unreachable code");
                }
                DynAbs.Tracing.TraceSender.TraceExitStaticMethod(10899, 288996, 292529);

                int
                f_10899_289090_289126(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 289090, 289126);
                    return 0;
                }


                bool
                f_10899_289232_289260(Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                type)
                {
                    var return_v = type.IsErrorType();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 289232, 289260);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SymbolKind
                f_10899_289374_289385(Microsoft.CodeAnalysis.CSharp.Symbol
                this_param)
                {
                    var return_v = this_param.Kind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 289374, 289385);
                    return return_v;
                }


                Microsoft.CodeAnalysis.MethodKind
                f_10899_289444_289477(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                this_param)
                {
                    var return_v = this_param.MethodKind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 289444, 289477);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbol
                f_10899_289830_289867(Microsoft.CodeAnalysis.CSharp.Symbol
                s, Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                newOwner)
                {
                    var return_v = s.SymbolAsMember(newOwner);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 289830, 289867);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                f_10899_289921_289942(Microsoft.CodeAnalysis.CSharp.Symbol
                this_param)
                {
                    var return_v = this_param.ContainingType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 289921, 289942);
                    return return_v;
                }


                bool
                f_10899_289961_289992(Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                this_param)
                {
                    var return_v = this_param.IsAnonymousType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 289961, 289992);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SymbolKind
                f_10899_290045_290056(Microsoft.CodeAnalysis.CSharp.Symbol
                this_param)
                {
                    var return_v = this_param.Kind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 290045, 290056);
                    return return_v;
                }


                int?
                f_10899_290082_290103(Microsoft.CodeAnalysis.CSharp.Symbol
                this_param)
                {
                    var return_v = this_param.MemberIndexOpt;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 290082, 290103);
                    return return_v;
                }


                bool
                f_10899_290133_290154_M(bool
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 290133, 290154);
                    return return_v;
                }


                int
                f_10899_290316_290347(int?
                this_param)
                {
                    var return_v = this_param.GetValueOrDefault();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 290316, 290347);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol
                f_10899_290254_290348(Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                type, int
                index)
                {
                    var return_v = AnonymousTypeManager.GetAnonymousTypeProperty(type, index);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 290254, 290348);
                    return return_v;
                }


                bool
                f_10899_290382_290412_M(bool
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 290382, 290412);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                f_10899_290459_290480(Microsoft.CodeAnalysis.CSharp.Symbol
                this_param)
                {
                    var return_v = this_param.ContainingType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 290459, 290480);
                    return return_v;
                }


                bool
                f_10899_290459_290493(Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                this_param)
                {
                    var return_v = this_param.IsDefinition;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 290459, 290493);
                    return return_v;
                }


                int
                f_10899_290446_290494(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 290446, 290494);
                    return 0;
                }


                bool
                f_10899_290560_290589_M(bool
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 290560, 290589);
                    return return_v;
                }


                bool
                f_10899_290670_290697(Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                this_param)
                {
                    var return_v = this_param.IsInterface;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 290670, 290697);
                    return return_v;
                }


                bool
                f_10899_290735_290790(Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                singleType, out Microsoft.CodeAnalysis.CSharp.Symbol?
                result)
                {
                    var return_v = tryAsMemberOfSingleType(singleType, out result);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 290735, 290790);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol>
                f_10899_290910_290958(Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                this_param)
                {
                    var return_v = this_param.AllInterfacesNoUseSiteDiagnostics;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 290910, 290958);
                    return return_v;
                }


                bool
                f_10899_291004_291051(Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                singleType, out Microsoft.CodeAnalysis.CSharp.Symbol?
                result)
                {
                    var return_v = tryAsMemberOfSingleType(singleType, out result);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 291004, 291051);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol>
                f_10899_290910_290958_I(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol>
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 290910, 290958);
                    return return_v;
                }


                bool
                f_10899_291280_291335(Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                singleType, out Microsoft.CodeAnalysis.CSharp.Symbol?
                result)
                {
                    var return_v = tryAsMemberOfSingleType(singleType, out result);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 291280, 291335);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                f_10899_291461_291504(Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                this_param)
                {
                    var return_v = this_param.BaseTypeNoUseSiteDiagnostics;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 291461, 291504);
                    return return_v;
                }


                int
                f_10899_291688_291707(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 291688, 291707);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 288996, 292529);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 288996, 292529);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override BoundNode? VisitConversion(BoundConversion node)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 292541, 294147);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 292948, 293032);

                TypeWithAnnotations
                explicitType = DynAbs.Tracing.TraceSender.TraceConditionalAccessExpression(f_10899_292983_293006(node), 10899, 292983, 293020)?.ExplicitType ?? (DynAbs.Tracing.TraceSender.Expression_Null<Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations?>(10899, 292983, 293031) ?? default)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 293046, 293091);

                bool
                fromExplicitCast = explicitType.HasType
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 293105, 293210);

                TypeWithAnnotations
                targetType = (DynAbs.Tracing.TraceSender.Conditional_F1(10899, 293138, 293154) || ((fromExplicitCast && DynAbs.Tracing.TraceSender.Conditional_F2(10899, 293157, 293169)) || DynAbs.Tracing.TraceSender.Conditional_F3(10899, 293172, 293209))) ? explicitType : TypeWithAnnotations.Create(f_10899_293199_293208(node))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 293224, 293257);

                f_10899_293224_293256(targetType.HasType);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 293273, 293381);

                (BoundExpression operand, Conversion conversion) = f_10899_293324_293380(node, includeExplicitConversions: true);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 293395, 293447);

                f_10899_293395_293446(this, node, operand);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 293461, 293519);

                TypeWithState
                operandType = f_10899_293489_293518(this, operand)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 293533, 294108);

                f_10899_293533_294107(this, node, f_10899_293570_294106(this, node, operand, conversion, targetType, operandType, checkConversion: true, fromExplicitCast: fromExplicitCast, useLegacyWarnings: fromExplicitCast, AssignmentKind.Assignment, reportTopLevelWarnings: fromExplicitCast, reportRemainingWarnings: true, trackMembers: true));
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 294124, 294136);

                return null;
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 292541, 294147);

                Microsoft.CodeAnalysis.CSharp.ConversionGroup?
                f_10899_292983_293006(Microsoft.CodeAnalysis.CSharp.BoundConversion
                this_param)
                {
                    var return_v = this_param.ConversionGroupOpt;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 292983, 293006);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                f_10899_293199_293208(Microsoft.CodeAnalysis.CSharp.BoundConversion
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 293199, 293208);
                    return return_v;
                }


                int
                f_10899_293224_293256(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 293224, 293256);
                    return 0;
                }


                (Microsoft.CodeAnalysis.CSharp.BoundExpression expression, Microsoft.CodeAnalysis.CSharp.Conversion conversion)
                f_10899_293324_293380(Microsoft.CodeAnalysis.CSharp.BoundConversion
                expr, bool
                includeExplicitConversions)
                {
                    var return_v = RemoveConversion((Microsoft.CodeAnalysis.CSharp.BoundExpression)expr, includeExplicitConversions: includeExplicitConversions);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 293324, 293380);
                    return return_v;
                }


                int
                f_10899_293395_293446(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundConversion
                conversionExpression, Microsoft.CodeAnalysis.CSharp.BoundExpression
                convertedNode)
                {
                    this_param.SnapshotWalkerThroughConversionGroup((Microsoft.CodeAnalysis.CSharp.BoundExpression)conversionExpression, convertedNode);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 293395, 293446);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                f_10899_293489_293518(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                node)
                {
                    var return_v = this_param.VisitRvalueWithState(node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 293489, 293518);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                f_10899_293570_294106(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundConversion
                conversionOpt, Microsoft.CodeAnalysis.CSharp.BoundExpression
                conversionOperand, Microsoft.CodeAnalysis.CSharp.Conversion
                conversion, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                targetTypeWithNullability, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                operandType, bool
                checkConversion, bool
                fromExplicitCast, bool
                useLegacyWarnings, Microsoft.CodeAnalysis.CSharp.NullableWalker.AssignmentKind
                assignmentKind, bool
                reportTopLevelWarnings, bool
                reportRemainingWarnings, bool
                trackMembers)
                {
                    var return_v = this_param.VisitConversion(conversionOpt, conversionOperand, conversion, targetTypeWithNullability, operandType, checkConversion: checkConversion, fromExplicitCast: fromExplicitCast, useLegacyWarnings: useLegacyWarnings, assignmentKind, reportTopLevelWarnings: reportTopLevelWarnings, reportRemainingWarnings: reportRemainingWarnings, trackMembers: trackMembers);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 293570, 294106);
                    return return_v;
                }


                int
                f_10899_293533_294107(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundConversion
                expression, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                type)
                {
                    this_param.SetResultType((Microsoft.CodeAnalysis.CSharp.BoundExpression)expression, type);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 293533, 294107);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 292541, 294147);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 292541, 294147);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private TypeWithState VisitOptionalImplicitConversion(BoundExpression expr, TypeWithAnnotations targetTypeOpt, bool useLegacyWarnings, bool trackMembers, AssignmentKind assignmentKind)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 294563, 296176);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 294772, 294881) || true) && (f_10899_294776_294798_M(!targetTypeOpt.HasType))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 294772, 294881);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 294832, 294866);

                    return f_10899_294839_294865(this, expr);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 294772, 294881);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 294897, 295006);

                (BoundExpression operand, Conversion conversion) = f_10899_294948_295005(expr, includeExplicitConversions: false);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 295020, 295072);

                f_10899_295020_295071(this, expr, operand);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 295086, 295134);

                var
                operandType = f_10899_295104_295133(this, operand)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 295530, 295581);

                bool
                reportNestedWarnings = f_10899_295558_295580_M(!conversion.IsExplicit)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 295595, 296131);

                var
                resultType = f_10899_295612_296130(this, f_10899_295646_295686(expr, operand), operand, conversion, targetTypeOpt, operandType, checkConversion: true, fromExplicitCast: false, useLegacyWarnings: useLegacyWarnings, assignmentKind, reportTopLevelWarnings: true, reportRemainingWarnings: reportNestedWarnings, trackMembers: trackMembers)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 296147, 296165);

                return resultType;
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 294563, 296176);

                bool
                f_10899_294776_294798_M(bool
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 294776, 294798);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                f_10899_294839_294865(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                node)
                {
                    var return_v = this_param.VisitRvalueWithState(node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 294839, 294865);
                    return return_v;
                }


                (Microsoft.CodeAnalysis.CSharp.BoundExpression expression, Microsoft.CodeAnalysis.CSharp.Conversion conversion)
                f_10899_294948_295005(Microsoft.CodeAnalysis.CSharp.BoundExpression
                expr, bool
                includeExplicitConversions)
                {
                    var return_v = RemoveConversion(expr, includeExplicitConversions: includeExplicitConversions);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 294948, 295005);
                    return return_v;
                }


                int
                f_10899_295020_295071(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                conversionExpression, Microsoft.CodeAnalysis.CSharp.BoundExpression
                convertedNode)
                {
                    this_param.SnapshotWalkerThroughConversionGroup(conversionExpression, convertedNode);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 295020, 295071);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                f_10899_295104_295133(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                node)
                {
                    var return_v = this_param.VisitRvalueWithState(node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 295104, 295133);
                    return return_v;
                }


                bool
                f_10899_295558_295580_M(bool
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 295558, 295580);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundConversion?
                f_10899_295646_295686(Microsoft.CodeAnalysis.CSharp.BoundExpression
                conversionOpt, Microsoft.CodeAnalysis.CSharp.BoundExpression
                convertedNode)
                {
                    var return_v = GetConversionIfApplicable(conversionOpt, convertedNode);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 295646, 295686);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                f_10899_295612_296130(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundConversion?
                conversionOpt, Microsoft.CodeAnalysis.CSharp.BoundExpression
                conversionOperand, Microsoft.CodeAnalysis.CSharp.Conversion
                conversion, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                targetTypeWithNullability, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                operandType, bool
                checkConversion, bool
                fromExplicitCast, bool
                useLegacyWarnings, Microsoft.CodeAnalysis.CSharp.NullableWalker.AssignmentKind
                assignmentKind, bool
                reportTopLevelWarnings, bool
                reportRemainingWarnings, bool
                trackMembers)
                {
                    var return_v = this_param.VisitConversion(conversionOpt, conversionOperand, conversion, targetTypeWithNullability, operandType, checkConversion: checkConversion, fromExplicitCast: fromExplicitCast, useLegacyWarnings: useLegacyWarnings, assignmentKind, reportTopLevelWarnings: reportTopLevelWarnings, reportRemainingWarnings: reportRemainingWarnings, trackMembers: trackMembers);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 295612, 296130);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 294563, 296176);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 294563, 296176);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private static bool AreNullableAndUnderlyingTypes([NotNullWhen(true)] TypeSymbol? nullableTypeOpt, [NotNullWhen(true)] TypeSymbol? underlyingTypeOpt, out TypeWithAnnotations underlyingTypeWithAnnotations)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterStaticMethod(10899, 296188, 297055);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 296440, 296963) || true) && (nullableTypeOpt is not null && (DynAbs.Tracing.TraceSender.Expression_True(10899, 296444, 296515) && f_10899_296475_296507(nullableTypeOpt) == true) && (DynAbs.Tracing.TraceSender.Expression_True(10899, 296444, 296565) && underlyingTypeOpt is not null) && (DynAbs.Tracing.TraceSender.Expression_True(10899, 296444, 296612) && f_10899_296569_296603(underlyingTypeOpt) == false))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 296440, 296963);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 296646, 296719);

                    var
                    typeArg = f_10899_296660_296718(nullableTypeOpt)
                    ;

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 296737, 296948) || true) && (f_10899_296741_296813(typeArg.Type, underlyingTypeOpt, TypeCompareKind.AllIgnoreOptions))
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 296737, 296948);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 296855, 296895);

                        underlyingTypeWithAnnotations = typeArg;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 296917, 296929);

                        return true;
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 296737, 296948);
                    }
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 296440, 296963);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 296977, 297017);

                underlyingTypeWithAnnotations = default;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 297031, 297044);

                return false;
                DynAbs.Tracing.TraceSender.TraceExitStaticMethod(10899, 296188, 297055);

                bool
                f_10899_296475_296507(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                type)
                {
                    var return_v = type.IsNullableType();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 296475, 296507);
                    return return_v;
                }


                bool
                f_10899_296569_296603(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                type)
                {
                    var return_v = type.IsNullableType();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 296569, 296603);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                f_10899_296660_296718(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                type)
                {
                    var return_v = type.GetNullableUnderlyingTypeWithAnnotations();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 296660, 296718);
                    return return_v;
                }


                bool
                f_10899_296741_296813(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                t2, Microsoft.CodeAnalysis.TypeCompareKind
                compareKind)
                {
                    var return_v = this_param.Equals(t2, compareKind);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 296741, 296813);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 296188, 297055);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 296188, 297055);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override BoundNode? VisitTupleLiteral(BoundTupleLiteral node)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 297067, 297224);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 297160, 297187);

                f_10899_297160_297186(this, node);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 297201, 297213);

                return null;
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 297067, 297224);

                int
                f_10899_297160_297186(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundTupleLiteral
                node)
                {
                    this_param.VisitTupleExpression((Microsoft.CodeAnalysis.CSharp.BoundTupleExpression)node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 297160, 297186);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 297067, 297224);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 297067, 297224);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override BoundNode? VisitConvertedTupleLiteral(BoundConvertedTupleLiteral node)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 297236, 297844);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 297347, 297381);

                f_10899_297347_297380(!IsConditionalState);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 297395, 297431);

                var
                savedState = this.State.Clone()
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 297680, 297722);

                f_10899_297680_297721(this, f_10899_297704_297720(node));
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 297738, 297764);

                f_10899_297738_297763(
                            this, savedState);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 297778, 297805);

                f_10899_297778_297804(this, node);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 297821, 297833);

                return null;
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 297236, 297844);

                int
                f_10899_297347_297380(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 297347, 297380);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.BoundTupleLiteral?
                f_10899_297704_297720(Microsoft.CodeAnalysis.CSharp.BoundConvertedTupleLiteral
                this_param)
                {
                    var return_v = this_param.SourceTuple;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 297704, 297720);
                    return return_v;
                }


                int
                f_10899_297680_297721(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundTupleLiteral?
                node)
                {
                    this_param.VisitWithoutDiagnostics((Microsoft.CodeAnalysis.CSharp.BoundNode?)node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 297680, 297721);
                    return 0;
                }


                int
                f_10899_297738_297763(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState
                newState)
                {
                    this_param.SetState(newState);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 297738, 297763);
                    return 0;
                }


                int
                f_10899_297778_297804(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundConvertedTupleLiteral
                node)
                {
                    this_param.VisitTupleExpression((Microsoft.CodeAnalysis.CSharp.BoundTupleExpression)node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 297778, 297804);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 297236, 297844);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 297236, 297844);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private void VisitTupleExpression(BoundTupleExpression node)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 297856, 299491);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 297941, 297972);

                var
                arguments = f_10899_297957_297971(node)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 297986, 298098);

                ImmutableArray<TypeWithState>
                elementTypes = arguments.SelectAsArray((a, w) => w.VisitRvalueWithState(a), this)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 298112, 298248);

                ImmutableArray<TypeWithAnnotations>
                elementTypesWithAnnotations = elementTypes.SelectAsArray(a => a.ToTypeWithAnnotations(compilation))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 298262, 298305);

                var
                tupleOpt = (NamedTypeSymbol?)f_10899_298295_298304(node)
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 298319, 299480) || true) && (tupleOpt is null)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 298319, 299480);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 298373, 298448);

                    f_10899_298373_298447(this, node, TypeWithState.Create(null, NullableFlowState.NotNull));
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 298319, 299480);
                }

                else

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 298319, 299480);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 298514, 298558);

                    int
                    slot = f_10899_298525_298557(this, node)
                    ;

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 298576, 298838) || true) && (slot > 0)
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 298576, 298838);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 298630, 298675);

                        this.State[slot] = NullableFlowState.NotNull;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 298697, 298819);

                        f_10899_298697_298818(this, slot, tupleOpt, arguments, elementTypes, argsToParamsOpt: default, useRestField: false);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 298576, 298838);
                    }
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 298858, 298924);

                    tupleOpt = f_10899_298869_298923(tupleOpt, elementTypesWithAnnotations);

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 298942, 299366) || true) && (!_disableDiagnostics)
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 298942, 299366);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 299008, 299154);

                        var
                        locations = tupleOpt.TupleElements.SelectAsArray((element, location) => element.Locations.FirstOrDefault() ?? location, f_10899_299132_299152(node.Syntax))
                        ;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 299176, 299347);

                        f_10899_299176_299346(tupleOpt, _conversions, typeSyntax: node.Syntax, locations, currentCompilation: compilation, diagnosticsOpt: null, nullabilityDiagnosticsOpt: f_10899_299334_299345());
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 298942, 299366);
                    }
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 299386, 299465);

                    f_10899_299386_299464(this, node, TypeWithState.Create(tupleOpt, NullableFlowState.NotNull));
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 298319, 299480);
                }
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 297856, 299491);

                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                f_10899_297957_297971(Microsoft.CodeAnalysis.CSharp.BoundTupleExpression
                this_param)
                {
                    var return_v = this_param.Arguments;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 297957, 297971);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?
                f_10899_298295_298304(Microsoft.CodeAnalysis.CSharp.BoundTupleExpression
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 298295, 298304);
                    return return_v;
                }


                int
                f_10899_298373_298447(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundTupleExpression
                expression, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                type)
                {
                    this_param.SetResultType((Microsoft.CodeAnalysis.CSharp.BoundExpression)expression, type);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 298373, 298447);
                    return 0;
                }


                int
                f_10899_298525_298557(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundTupleExpression
                node)
                {
                    var return_v = this_param.GetOrCreatePlaceholderSlot((Microsoft.CodeAnalysis.CSharp.BoundExpression)node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 298525, 298557);
                    return return_v;
                }


                int
                f_10899_298697_298818(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, int
                slot, Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                tupleType, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                values, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState>
                types, System.Collections.Immutable.ImmutableArray<int>
                argsToParamsOpt, bool
                useRestField)
                {
                    this_param.TrackNullableStateOfTupleElements(slot, tupleType, values, types, argsToParamsOpt: argsToParamsOpt, useRestField: useRestField);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 298697, 298818);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                f_10899_298869_298923(Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                this_param, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations>
                newElementTypes)
                {
                    var return_v = this_param.WithElementTypes(newElementTypes);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 298869, 298923);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Location
                f_10899_299132_299152(Microsoft.CodeAnalysis.SyntaxNode
                this_param)
                {
                    var return_v = this_param.Location;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 299132, 299152);
                    return return_v;
                }


                Microsoft.CodeAnalysis.DiagnosticBag
                f_10899_299334_299345()
                {
                    var return_v = Diagnostics;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 299334, 299345);
                    return return_v;
                }


                int
                f_10899_299176_299346(Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                tuple, Microsoft.CodeAnalysis.CSharp.Conversions
                conversions, Microsoft.CodeAnalysis.SyntaxNode
                typeSyntax, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Location>
                elementLocations, Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                currentCompilation, Microsoft.CodeAnalysis.DiagnosticBag
                diagnosticsOpt, Microsoft.CodeAnalysis.DiagnosticBag
                nullabilityDiagnosticsOpt)
                {
                    tuple.CheckConstraints((Microsoft.CodeAnalysis.CSharp.ConversionsBase)conversions, typeSyntax: typeSyntax, elementLocations, currentCompilation: currentCompilation, diagnosticsOpt: diagnosticsOpt, nullabilityDiagnosticsOpt: nullabilityDiagnosticsOpt);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 299176, 299346);
                    return 0;
                }


                int
                f_10899_299386_299464(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundTupleExpression
                expression, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                type)
                {
                    this_param.SetResultType((Microsoft.CodeAnalysis.CSharp.BoundExpression)expression, type);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 299386, 299464);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 297856, 299491);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 297856, 299491);
            }
        }

        private void TrackNullableStateOfTupleElements(
                    int slot,
                    NamedTypeSymbol tupleType,
                    ImmutableArray<BoundExpression> values,
                    ImmutableArray<TypeWithState> types,
                    ImmutableArray<int> argsToParamsOpt,
                    bool useRestField)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 299847, 302124);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 300167, 300203);

                f_10899_300167_300202(f_10899_300180_300201(tupleType));
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 300217, 300261);

                f_10899_300217_300260(values.Length == types.Length);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 300275, 300437);

                f_10899_300275_300436(values.Length == ((DynAbs.Tracing.TraceSender.Conditional_F1(10899, 300306, 300318) || ((useRestField && DynAbs.Tracing.TraceSender.Conditional_F2(10899, 300321, 300401)) || DynAbs.Tracing.TraceSender.Conditional_F3(10899, 300404, 300434))) ? f_10899_300321_300401(tupleType.TupleElements.Length, NamedTypeSymbol.ValueTupleRestPosition) : tupleType.TupleElements.Length));

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 300453, 301493) || true) && (slot > 0)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 300453, 301493);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 300499, 300543);

                    var
                    tupleElements = f_10899_300519_300542(tupleType)
                    ;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 300561, 300583);

                    int
                    n = values.Length
                    ;

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 300601, 300738) || true) && (useRestField)
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 300601, 300738);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 300659, 300719);

                        n = f_10899_300663_300718(n, NamedTypeSymbol.ValueTupleRestPosition - 1);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 300601, 300738);
                    }
                    try
                    {
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 300765, 300770);
                        for (int
        i = 0
        ; (DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 300756, 300992) || true) && (i < n)
        ; DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 300779, 300782)
        , i++, DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 300756, 300992))

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 300756, 300992);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 300824, 300883);

                            var
                            argOrdinal = f_10899_300841_300882(i)
                            ;
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 300905, 300973);

                            f_10899_300905_300972(values[argOrdinal], tupleElements[i], types[argOrdinal]);
                        }
                    }
                    catch (System.Exception)
                    {
                        DynAbs.Tracing.TraceSender.TraceExitLoopByException(10899, 1, 237);
                        throw;
                    }
                    finally
                    {
                        DynAbs.Tracing.TraceSender.TraceExitLoop(10899, 1, 237);
                    }
                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 301010, 301478) || true) && (useRestField && (DynAbs.Tracing.TraceSender.Expression_True(10899, 301014, 301106) && values.Length == NamedTypeSymbol.ValueTupleRestPosition) && (DynAbs.Tracing.TraceSender.Expression_True(10899, 301014, 301234) && f_10899_301131_301192(tupleType, NamedTypeSymbol.ValueTupleRestFieldName).FirstOrDefault() is FieldSymbol restField))
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 301010, 301478);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 301276, 301376);

                        var
                        argOrdinal = f_10899_301293_301375(NamedTypeSymbol.ValueTupleRestPosition - 1)
                        ;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 301398, 301459);

                        f_10899_301398_301458(values[argOrdinal], restField, types[argOrdinal]);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 301010, 301478);
                    }
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 300453, 301493);
                }

                void trackState(BoundExpression value, FieldSymbol field, TypeWithState valueType)
                {
                    try
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 301509, 301809);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 301624, 301670);

                        int
                        targetSlot = f_10899_301641_301669(this, field, slot)
                        ;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 301688, 301794);

                        f_10899_301688_301793(this, value, f_10899_301727_301752(field), targetSlot, valueType, f_10899_301777_301792(this, value));
                        DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 301509, 301809);

                        int
                        f_10899_301641_301669(Microsoft.CodeAnalysis.CSharp.NullableWalker
                        this_param, Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol
                        symbol, int
                        containingSlot)
                        {
                            var return_v = this_param.GetOrCreateSlot((Microsoft.CodeAnalysis.CSharp.Symbol)symbol, containingSlot);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 301641, 301669);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                        f_10899_301727_301752(Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol
                        this_param)
                        {
                            var return_v = this_param.TypeWithAnnotations;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 301727, 301752);
                            return return_v;
                        }


                        int
                        f_10899_301777_301792(Microsoft.CodeAnalysis.CSharp.NullableWalker
                        this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                        node)
                        {
                            var return_v = this_param.MakeSlot(node);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 301777, 301792);
                            return return_v;
                        }


                        int
                        f_10899_301688_301793(Microsoft.CodeAnalysis.CSharp.NullableWalker
                        this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                        valueOpt, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                        targetType, int
                        targetSlot, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                        valueType, int
                        valueSlot)
                        {
                            this_param.TrackNullableStateForAssignment(valueOpt, targetType, targetSlot, valueType, valueSlot);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 301688, 301793);
                            return 0;
                        }

                    }
                    catch
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 301509, 301809);
                        throw;
                    }
                    finally
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 301509, 301809);
                    }
                }

                int GetArgumentOrdinalFromParameterOrdinal(int parameterOrdinal)
                {
                    try
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 301825, 302113);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 301922, 302023);

                        var
                        index = (DynAbs.Tracing.TraceSender.Conditional_F1(10899, 301934, 301959) || ((argsToParamsOpt.IsDefault && DynAbs.Tracing.TraceSender.Conditional_F2(10899, 301962, 301978)) || DynAbs.Tracing.TraceSender.Conditional_F3(10899, 301981, 302022))) ? parameterOrdinal : argsToParamsOpt.IndexOf(parameterOrdinal)
                        ;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 302041, 302067);

                        f_10899_302041_302066(index != -1);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 302085, 302098);

                        return index;
                        DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 301825, 302113);

                        int
                        f_10899_302041_302066(bool
                        condition)
                        {
                            Debug.Assert(condition);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 302041, 302066);
                            return 0;
                        }

                    }
                    catch
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 301825, 302113);
                        throw;
                    }
                    finally
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 301825, 302113);
                    }
                    throw new System.Exception("Slicer error: unreachable code");
                }
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 299847, 302124);

                bool
                f_10899_300180_300201(Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                this_param)
                {
                    var return_v = this_param.IsTupleType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 300180, 300201);
                    return return_v;
                }


                int
                f_10899_300167_300202(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 300167, 300202);
                    return 0;
                }


                int
                f_10899_300217_300260(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 300217, 300260);
                    return 0;
                }


                int
                f_10899_300321_300401(int
                val1, int
                val2)
                {
                    var return_v = Math.Min(val1, val2);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 300321, 300401);
                    return return_v;
                }


                int
                f_10899_300275_300436(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 300275, 300436);
                    return 0;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol>
                f_10899_300519_300542(Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                this_param)
                {
                    var return_v = this_param.TupleElements;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 300519, 300542);
                    return return_v;
                }


                int
                f_10899_300663_300718(int
                val1, int
                val2)
                {
                    var return_v = Math.Min(val1, val2);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 300663, 300718);
                    return return_v;
                }


                int
                f_10899_300841_300882(int
                parameterOrdinal)
                {
                    var return_v = GetArgumentOrdinalFromParameterOrdinal(parameterOrdinal);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 300841, 300882);
                    return return_v;
                }


                int
                f_10899_300905_300972(Microsoft.CodeAnalysis.CSharp.BoundExpression
                value, Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol
                field, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                valueType)
                {
                    trackState(value, field, valueType);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 300905, 300972);
                    return 0;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>
                f_10899_301131_301192(Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                this_param, string
                name)
                {
                    var return_v = this_param.GetMembers(name);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 301131, 301192);
                    return return_v;
                }


                int
                f_10899_301293_301375(int
                parameterOrdinal)
                {
                    var return_v = GetArgumentOrdinalFromParameterOrdinal(parameterOrdinal);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 301293, 301375);
                    return return_v;
                }


                int
                f_10899_301398_301458(Microsoft.CodeAnalysis.CSharp.BoundExpression
                value, Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol
                field, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                valueType)
                {
                    trackState(value, field, valueType);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 301398, 301458);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 299847, 302124);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 299847, 302124);
            }
        }

        private void TrackNullableStateOfNullableValue(int containingSlot, TypeSymbol containingType, BoundExpression? value, TypeWithState valueType, int valueSlot)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 302136, 302805);
                Microsoft.CodeAnalysis.CSharp.Symbol? symbol = default(Microsoft.CodeAnalysis.CSharp.Symbol?);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 302318, 302411);

                f_10899_302318_302410(f_10899_302331_302376(f_10899_302331_302364(containingType)) == SpecialType.System_Nullable_T);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 302425, 302458);

                f_10899_302425_302457(containingSlot > 0);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 302472, 302500);

                f_10899_302472_302499(valueSlot > 0);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 302516, 302609);

                int
                targetSlot = f_10899_302533_302608(this, containingType, containingSlot, out symbol)
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 302623, 302794) || true) && (targetSlot > 0)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 302623, 302794);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 302675, 302779);

                    f_10899_302675_302778(this, value, f_10899_302714_302743(symbol!), targetSlot, valueType, valueSlot);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 302623, 302794);
                }
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 302136, 302805);

                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                f_10899_302331_302364(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                this_param)
                {
                    var return_v = this_param.OriginalDefinition;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 302331, 302364);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SpecialType
                f_10899_302331_302376(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                this_param)
                {
                    var return_v = this_param.SpecialType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 302331, 302376);
                    return return_v;
                }


                int
                f_10899_302318_302410(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 302318, 302410);
                    return 0;
                }


                int
                f_10899_302425_302457(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 302425, 302457);
                    return 0;
                }


                int
                f_10899_302472_302499(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 302472, 302499);
                    return 0;
                }


                int
                f_10899_302533_302608(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                containingType, int
                containingSlot, out Microsoft.CodeAnalysis.CSharp.Symbol?
                valueProperty)
                {
                    var return_v = this_param.GetNullableOfTValueSlot(containingType, containingSlot, out valueProperty);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 302533, 302608);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                f_10899_302714_302743(Microsoft.CodeAnalysis.CSharp.Symbol
                symbol)
                {
                    var return_v = symbol.GetTypeOrReturnType();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 302714, 302743);
                    return return_v;
                }


                int
                f_10899_302675_302778(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression?
                valueOpt, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                targetType, int
                targetSlot, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                valueType, int
                valueSlot)
                {
                    this_param.TrackNullableStateForAssignment(valueOpt, targetType, targetSlot, valueType, valueSlot);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 302675, 302778);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 302136, 302805);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 302136, 302805);
            }
        }

        private void TrackNullableStateOfTupleConversion(
                    BoundConversion? conversionOpt,
                    BoundExpression convertedNode,
                    Conversion conversion,
                    TypeSymbol targetType,
                    TypeSymbol operandType,
                    int slot,
                    int valueSlot,
                    AssignmentKind assignmentKind,
                    ParameterSymbol? parameterOpt,
                    bool reportWarnings)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 302817, 308317);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 303262, 303375);

                f_10899_303262_303374(conversion.Kind == ConversionKind.ImplicitTuple || (DynAbs.Tracing.TraceSender.Expression_False(10899, 303275, 303373) || conversion.Kind == ConversionKind.ExplicitTuple));
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 303389, 303412);

                f_10899_303389_303411(slot > 0);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 303426, 303454);

                f_10899_303426_303453(valueSlot > 0);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 303470, 303518);

                var
                valueTuple = operandType as NamedTypeSymbol
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 303532, 303637) || true) && (valueTuple is null || (DynAbs.Tracing.TraceSender.Expression_False(10899, 303536, 303581) || f_10899_303558_303581_M(!valueTuple.IsTupleType)))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 303532, 303637);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 303615, 303622);

                    return;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 303532, 303637);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 303653, 303704);

                var
                conversions = conversion.UnderlyingConversions
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 303718, 303783);

                var
                targetElements = f_10899_303739_303782(((NamedTypeSymbol)targetType))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 303797, 303842);

                var
                valueElements = f_10899_303817_303841(valueTuple)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 303856, 303885);

                int
                n = valueElements.Length
                ;
                try
                {
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 303908, 303913);
                    for (int
        i = 0
        ; (DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 303899, 304047) || true) && (i < n)
        ; DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 303922, 303925)
        , i++, DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 303899, 304047))

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 303899, 304047);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 303959, 304032);

                        f_10899_303959_304031(targetElements[i], conversions[i], valueElements[i]);
                    }
                }
                catch (System.Exception)
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoopByException(10899, 1, 149);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoop(10899, 1, 149);
                }
                void trackConvertedValue(FieldSymbol targetField, Conversion conversion, FieldSymbol valueField)
                {
                    try
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 304063, 308306);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 304192, 308291);

                        switch (conversion.Kind)
                        {

                            case ConversionKind.Identity:
                            case ConversionKind.NullLiteral:
                            case ConversionKind.DefaultLiteral:
                            case ConversionKind.ImplicitReference:
                            case ConversionKind.ExplicitReference:
                            case ConversionKind.Boxing:
                            case ConversionKind.Unboxing:
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 304192, 308291);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 304643, 304740);

                                f_10899_304643_304739(this, slot, valueSlot, valueField, isDefaultValue: false, skipSlot: slot);
                                DynAbs.Tracing.TraceSender.TraceBreak(10899, 304766, 304772);

                                break;
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 304192, 308291);

                            case ConversionKind.ImplicitTupleLiteral:
                            case ConversionKind.ExplicitTupleLiteral:
                            case ConversionKind.ImplicitTuple:
                            case ConversionKind.ExplicitTuple:
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 304192, 308291);
                                {
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 305067, 305124);

                                    int
                                    targetFieldSlot = f_10899_305089_305123(this, targetField, slot)
                                    ;

                                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 305154, 305781) || true) && (targetFieldSlot > 0)
                                    )

                                    {
                                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 305154, 305781);
                                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 305243, 305299);

                                        this.State[targetFieldSlot] = NullableFlowState.NotNull;
                                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 305333, 305393);

                                        int
                                        valueFieldSlot = f_10899_305354_305392(this, valueField, valueSlot)
                                        ;

                                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 305427, 305750) || true) && (valueFieldSlot > 0)
                                        )

                                        {
                                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 305427, 305750);
                                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 305523, 305715);

                                            f_10899_305523_305714(this, conversionOpt, convertedNode, conversion, f_10899_305601_305617(targetField), f_10899_305619_305634(valueField), targetFieldSlot, valueFieldSlot, assignmentKind, parameterOpt, reportWarnings);
                                            DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 305427, 305750);
                                        }
                                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 305154, 305781);
                                    }
                                }
                                DynAbs.Tracing.TraceSender.TraceBreak(10899, 305834, 305840);

                                break;
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 304192, 308291);

                            case ConversionKind.ImplicitNullable:
                            case ConversionKind.ExplicitNullable:
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 304192, 308291);

                                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 306080, 306903) || true) && (f_10899_306084_306155(f_10899_306114_306130(targetField), f_10899_306132_306147(valueField), out _))
                                )

                                {
                                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 306080, 306903);
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 306213, 306270);

                                    int
                                    targetFieldSlot = f_10899_306235_306269(this, targetField, slot)
                                    ;

                                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 306300, 306876) || true) && (targetFieldSlot > 0)
                                    )

                                    {
                                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 306300, 306876);
                                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 306389, 306445);

                                        this.State[targetFieldSlot] = NullableFlowState.NotNull;
                                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 306479, 306539);

                                        int
                                        valueFieldSlot = f_10899_306500_306538(this, valueField, valueSlot)
                                        ;

                                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 306573, 306845) || true) && (valueFieldSlot > 0)
                                        )

                                        {
                                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 306573, 306845);
                                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 306669, 306810);

                                            f_10899_306669_306809(this, targetFieldSlot, f_10899_306720_306736(targetField), null, valueField.TypeWithAnnotations.ToTypeWithState(), valueFieldSlot);
                                            DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 306573, 306845);
                                        }
                                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 306300, 306876);
                                    }
                                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 306080, 306903);
                                }
                                DynAbs.Tracing.TraceSender.TraceBreak(10899, 306929, 306935);

                                break;
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 304192, 308291);

                            case ConversionKind.ImplicitUserDefined:
                            case ConversionKind.ExplicitUserDefined:
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 304192, 308291);
                                {
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 307116, 307864);

                                    var
                                    convertedType = f_10899_307136_307863(this, conversionOpt, convertedNode, conversion, f_10899_307338_307369(targetField), valueField.TypeWithAnnotations.ToTypeWithState(), useLegacyWarnings: false, assignmentKind, parameterOpt, reportTopLevelWarnings: reportWarnings, reportRemainingWarnings: reportWarnings, diagnosticLocation: f_10899_307809_307862((conversionOpt ?? (DynAbs.Tracing.TraceSender.Expression_Null<Microsoft.CodeAnalysis.CSharp.BoundConversion?>(10899, 307810, 307840) ?? convertedNode)).Syntax))
                                    ;
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 307894, 307951);

                                    int
                                    targetFieldSlot = f_10899_307916_307950(this, targetField, slot)
                                    ;

                                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 307981, 308151) || true) && (targetFieldSlot > 0)
                                    )

                                    {
                                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 307981, 308151);
                                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 308070, 308120);

                                        this.State[targetFieldSlot] = convertedType.State;
                                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 307981, 308151);
                                    }
                                }
                                DynAbs.Tracing.TraceSender.TraceBreak(10899, 308204, 308210);

                                break;
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 304192, 308291);

                            default:
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 304192, 308291);
                                DynAbs.Tracing.TraceSender.TraceBreak(10899, 308266, 308272);

                                break;
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 304192, 308291);
                        }
                        DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 304063, 308306);

                        int
                        f_10899_304643_304739(Microsoft.CodeAnalysis.CSharp.NullableWalker
                        this_param, int
                        targetContainerSlot, int
                        valueContainerSlot, Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol
                        member, bool
                        isDefaultValue, int
                        skipSlot)
                        {
                            this_param.InheritNullableStateOfMember(targetContainerSlot, valueContainerSlot, (Microsoft.CodeAnalysis.CSharp.Symbol)member, isDefaultValue: isDefaultValue, skipSlot: skipSlot);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 304643, 304739);
                            return 0;
                        }


                        int
                        f_10899_305089_305123(Microsoft.CodeAnalysis.CSharp.NullableWalker
                        this_param, Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol
                        symbol, int
                        containingSlot)
                        {
                            var return_v = this_param.GetOrCreateSlot((Microsoft.CodeAnalysis.CSharp.Symbol)symbol, containingSlot);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 305089, 305123);
                            return return_v;
                        }


                        int
                        f_10899_305354_305392(Microsoft.CodeAnalysis.CSharp.NullableWalker
                        this_param, Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol
                        symbol, int
                        containingSlot)
                        {
                            var return_v = this_param.GetOrCreateSlot((Microsoft.CodeAnalysis.CSharp.Symbol)symbol, containingSlot);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 305354, 305392);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                        f_10899_305601_305617(Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol
                        this_param)
                        {
                            var return_v = this_param.Type;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 305601, 305617);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                        f_10899_305619_305634(Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol
                        this_param)
                        {
                            var return_v = this_param.Type;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 305619, 305634);
                            return return_v;
                        }


                        int
                        f_10899_305523_305714(Microsoft.CodeAnalysis.CSharp.NullableWalker
                        this_param, Microsoft.CodeAnalysis.CSharp.BoundConversion?
                        conversionOpt, Microsoft.CodeAnalysis.CSharp.BoundExpression
                        convertedNode, Microsoft.CodeAnalysis.CSharp.Conversion
                        conversion, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                        targetType, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                        operandType, int
                        slot, int
                        valueSlot, Microsoft.CodeAnalysis.CSharp.NullableWalker.AssignmentKind
                        assignmentKind, Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol?
                        parameterOpt, bool
                        reportWarnings)
                        {
                            this_param.TrackNullableStateOfTupleConversion(conversionOpt, convertedNode, conversion, targetType, operandType, slot, valueSlot, assignmentKind, parameterOpt, reportWarnings);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 305523, 305714);
                            return 0;
                        }


                        Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                        f_10899_306114_306130(Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol
                        this_param)
                        {
                            var return_v = this_param.Type;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 306114, 306130);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                        f_10899_306132_306147(Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol
                        this_param)
                        {
                            var return_v = this_param.Type;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 306132, 306147);
                            return return_v;
                        }


                        bool
                        f_10899_306084_306155(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                        nullableTypeOpt, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                        underlyingTypeOpt, out Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                        underlyingTypeWithAnnotations)
                        {
                            var return_v = AreNullableAndUnderlyingTypes(nullableTypeOpt, underlyingTypeOpt, out underlyingTypeWithAnnotations);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 306084, 306155);
                            return return_v;
                        }


                        int
                        f_10899_306235_306269(Microsoft.CodeAnalysis.CSharp.NullableWalker
                        this_param, Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol
                        symbol, int
                        containingSlot)
                        {
                            var return_v = this_param.GetOrCreateSlot((Microsoft.CodeAnalysis.CSharp.Symbol)symbol, containingSlot);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 306235, 306269);
                            return return_v;
                        }


                        int
                        f_10899_306500_306538(Microsoft.CodeAnalysis.CSharp.NullableWalker
                        this_param, Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol
                        symbol, int
                        containingSlot)
                        {
                            var return_v = this_param.GetOrCreateSlot((Microsoft.CodeAnalysis.CSharp.Symbol)symbol, containingSlot);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 306500, 306538);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                        f_10899_306720_306736(Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol
                        this_param)
                        {
                            var return_v = this_param.Type;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 306720, 306736);
                            return return_v;
                        }


                        int
                        f_10899_306669_306809(Microsoft.CodeAnalysis.CSharp.NullableWalker
                        this_param, int
                        containingSlot, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                        containingType, Microsoft.CodeAnalysis.CSharp.BoundExpression?
                        value, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                        valueType, int
                        valueSlot)
                        {
                            this_param.TrackNullableStateOfNullableValue(containingSlot, containingType, value, valueType, valueSlot);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 306669, 306809);
                            return 0;
                        }


                        Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                        f_10899_307338_307369(Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol
                        this_param)
                        {
                            var return_v = this_param.TypeWithAnnotations;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 307338, 307369);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.Location
                        f_10899_307809_307862(Microsoft.CodeAnalysis.SyntaxNode
                        this_param)
                        {
                            var return_v = this_param.GetLocation();
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 307809, 307862);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                        f_10899_307136_307863(Microsoft.CodeAnalysis.CSharp.NullableWalker
                        this_param, Microsoft.CodeAnalysis.CSharp.BoundConversion?
                        conversionOpt, Microsoft.CodeAnalysis.CSharp.BoundExpression
                        conversionOperand, Microsoft.CodeAnalysis.CSharp.Conversion
                        conversion, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                        targetTypeWithNullability, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                        operandType, bool
                        useLegacyWarnings, Microsoft.CodeAnalysis.CSharp.NullableWalker.AssignmentKind
                        assignmentKind, Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol?
                        parameterOpt, bool
                        reportTopLevelWarnings, bool
                        reportRemainingWarnings, Microsoft.CodeAnalysis.Location
                        diagnosticLocation)
                        {
                            var return_v = this_param.VisitUserDefinedConversion(conversionOpt, conversionOperand, conversion, targetTypeWithNullability, operandType, useLegacyWarnings: useLegacyWarnings, assignmentKind, parameterOpt, reportTopLevelWarnings: reportTopLevelWarnings, reportRemainingWarnings: reportRemainingWarnings, diagnosticLocation: diagnosticLocation);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 307136, 307863);
                            return return_v;
                        }


                        int
                        f_10899_307916_307950(Microsoft.CodeAnalysis.CSharp.NullableWalker
                        this_param, Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol
                        symbol, int
                        containingSlot)
                        {
                            var return_v = this_param.GetOrCreateSlot((Microsoft.CodeAnalysis.CSharp.Symbol)symbol, containingSlot);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 307916, 307950);
                            return return_v;
                        }

                    }
                    catch
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 304063, 308306);
                        throw;
                    }
                    finally
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 304063, 308306);
                    }
                }
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 302817, 308317);

                int
                f_10899_303262_303374(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 303262, 303374);
                    return 0;
                }


                int
                f_10899_303389_303411(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 303389, 303411);
                    return 0;
                }


                int
                f_10899_303426_303453(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 303426, 303453);
                    return 0;
                }


                bool
                f_10899_303558_303581_M(bool
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 303558, 303581);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol>
                f_10899_303739_303782(Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                this_param)
                {
                    var return_v = this_param.TupleElements;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 303739, 303782);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol>
                f_10899_303817_303841(Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                this_param)
                {
                    var return_v = this_param.TupleElements;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 303817, 303841);
                    return return_v;
                }


                int
                f_10899_303959_304031(Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol
                targetField, Microsoft.CodeAnalysis.CSharp.Conversion
                conversion, Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol
                valueField)
                {
                    trackConvertedValue(targetField, conversion, valueField);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 303959, 304031);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 302817, 308317);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 302817, 308317);
            }
        }

        public override BoundNode? VisitTupleBinaryOperator(BoundTupleBinaryOperator node)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 308329, 308546);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 308436, 308472);

                DynAbs.Tracing.TraceSender.TraceInvocationWrapper(() => base.VisitTupleBinaryOperator(node), 10899, 308436, 308471);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 308486, 308509);

                f_10899_308486_308508(this, node);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 308523, 308535);

                return null;
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 308329, 308546);

                int
                f_10899_308486_308508(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundTupleBinaryOperator
                node)
                {
                    this_param.SetNotNullResult((Microsoft.CodeAnalysis.CSharp.BoundExpression)node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 308486, 308508);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 308329, 308546);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 308329, 308546);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private void ReportNullabilityMismatchWithTargetDelegate(Location location, TypeSymbol targetType, MethodSymbol targetInvokeMethod, MethodSymbol sourceInvokeMethod, bool invokedAsExtensionMethod)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 308558, 310223);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 308778, 309190);

                f_10899_308778_309189(compilation, targetInvokeMethod, sourceInvokeMethod, f_10899_308965_308976(), reportBadDelegateReturn, reportBadDelegateParameter, extraArgument: (targetType, location), invokedAsExtensionMethod: invokedAsExtensionMethod);

                void reportBadDelegateReturn(DiagnosticBag bag, MethodSymbol targetInvokeMethod, MethodSymbol sourceInvokeMethod, bool topLevel, (TypeSymbol targetType, Location location) arg)
                {
                    try
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 309206, 309669);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 309415, 309654);

                        f_10899_309415_309653(this, ErrorCode.WRN_NullabilityMismatchInReturnTypeOfTargetDelegate, arg.location, f_10899_309530_309615(sourceInvokeMethod, f_10899_309570_309614()), arg.targetType);
                        DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 309206, 309669);

                        Microsoft.CodeAnalysis.SymbolDisplayFormat
                        f_10899_309570_309614()
                        {
                            var return_v = SymbolDisplayFormat.MinimallyQualifiedFormat;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 309570, 309614);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.FormattedSymbol
                        f_10899_309530_309615(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                        symbol, Microsoft.CodeAnalysis.SymbolDisplayFormat
                        symbolDisplayFormat)
                        {
                            var return_v = new Microsoft.CodeAnalysis.FormattedSymbol((Microsoft.CodeAnalysis.Symbols.ISymbolInternal)symbol, symbolDisplayFormat);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 309530, 309615);
                            return return_v;
                        }


                        int
                        f_10899_309415_309653(Microsoft.CodeAnalysis.CSharp.NullableWalker
                        this_param, Microsoft.CodeAnalysis.CSharp.ErrorCode
                        errorCode, Microsoft.CodeAnalysis.Location
                        location, params object[]
                        arguments)
                        {
                            this_param.ReportDiagnostic(errorCode, location, arguments);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 309415, 309653);
                            return 0;
                        }

                    }
                    catch
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 309206, 309669);
                        throw;
                    }
                    finally
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 309206, 309669);
                    }
                }

                void reportBadDelegateParameter(DiagnosticBag bag, MethodSymbol sourceInvokeMethod, MethodSymbol targetInvokeMethod, ParameterSymbol parameter, bool topLevel, (TypeSymbol targetType, Location location) arg)
                {
                    try
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 309685, 310212);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 309924, 310197);

                        f_10899_309924_310196(this, ErrorCode.WRN_NullabilityMismatchInParameterTypeOfTargetDelegate, arg.location, f_10899_310042_310085(parameter), f_10899_310108_310158(parameter), arg.targetType);
                        DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 309685, 310212);

                        object
                        f_10899_310042_310085(Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol
                        parameterOpt)
                        {
                            var return_v = GetParameterAsDiagnosticArgument(parameterOpt);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 310042, 310085);
                            return return_v;
                        }


                        object
                        f_10899_310108_310158(Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol
                        parameterOpt)
                        {
                            var return_v = GetContainingSymbolAsDiagnosticArgument(parameterOpt);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 310108, 310158);
                            return return_v;
                        }


                        int
                        f_10899_309924_310196(Microsoft.CodeAnalysis.CSharp.NullableWalker
                        this_param, Microsoft.CodeAnalysis.CSharp.ErrorCode
                        errorCode, Microsoft.CodeAnalysis.Location
                        location, params object[]
                        arguments)
                        {
                            this_param.ReportDiagnostic(errorCode, location, arguments);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 309924, 310196);
                            return 0;
                        }

                    }
                    catch
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 309685, 310212);
                        throw;
                    }
                    finally
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 309685, 310212);
                    }
                }
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 308558, 310223);

                Microsoft.CodeAnalysis.DiagnosticBag
                f_10899_308965_308976()
                {
                    var return_v = Diagnostics;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 308965, 308976);
                    return return_v;
                }


                int
                f_10899_308778_309189(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                compilation, Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                baseMethod, Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                overrideMethod, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.Symbols.ReportMismatchInReturnType<(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol targetType, Microsoft.CodeAnalysis.Location location)>
                reportMismatchInReturnType, Microsoft.CodeAnalysis.CSharp.Symbols.ReportMismatchInParameterType<(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol targetType, Microsoft.CodeAnalysis.Location location)>
                reportMismatchInParameterType, (Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol targetType, Microsoft.CodeAnalysis.Location location)
                extraArgument, bool
                invokedAsExtensionMethod)
                {
                    SourceMemberContainerTypeSymbol.CheckValidNullableMethodOverride(compilation, baseMethod, overrideMethod, diagnostics, reportMismatchInReturnType, reportMismatchInParameterType, extraArgument: extraArgument, invokedAsExtensionMethod: invokedAsExtensionMethod);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 308778, 309189);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 308558, 310223);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 308558, 310223);
            }
        }

        private void ReportNullabilityMismatchWithTargetDelegate(Location location, NamedTypeSymbol delegateType, UnboundLambda unboundLambda)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 310235, 312282);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 310394, 310500) || true) && (f_10899_310398_310444_M(!unboundLambda.HasExplicitlyTypedParameterList))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 310394, 310500);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 310478, 310485);

                    return;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 310394, 310500);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 310516, 310564);

                var
                invoke = f_10899_310529_310563_M(DynAbs.Tracing.TraceSender.TraceConditionalAccessExpression(delegateType, 10899, 310529, 310563)?.DelegateInvokeMethod)
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 310578, 310652) || true) && (invoke is null)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 310578, 310652);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 310630, 310637);

                    return;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 310578, 310652);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 310668, 310705);

                f_10899_310668_310704(delegateType is object);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 310719, 310793);

                int
                count = f_10899_310731_310792(f_10899_310740_310761(invoke), f_10899_310763_310791(unboundLambda))
                ;
                try
                {
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 310816, 310821);
                    for (int
        i = 0
        ; (DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 310807, 312271) || true) && (i < count)
        ; DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 310834, 310837)
        , i++, DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 310807, 312271))

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 310807, 312271);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 310871, 310914);

                        var
                        invokeParameter = f_10899_310893_310910(invoke)[i]
                        ;

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 311713, 312256) || true) && (f_10899_311717_311845(this, f_10899_311739_311774(invokeParameter), f_10899_311776_311821(unboundLambda, i), requireIdentity: true))
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 311713, 312256);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 311987, 312237);

                            f_10899_311987_312236(this, ErrorCode.WRN_NullabilityMismatchInParameterTypeOfTargetDelegate, location, f_10899_312105_312135(unboundLambda, i), f_10899_312162_312196(f_10899_312162_312185(unboundLambda)), delegateType);
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 311713, 312256);
                        }
                    }
                }
                catch (System.Exception)
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoopByException(10899, 1, 1465);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoop(10899, 1, 1465);
                }
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 310235, 312282);

                bool
                f_10899_310398_310444_M(bool
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 310398, 310444);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol?
                f_10899_310529_310563_M(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol?
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 310529, 310563);
                    return return_v;
                }


                int
                f_10899_310668_310704(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 310668, 310704);
                    return 0;
                }


                int
                f_10899_310740_310761(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                this_param)
                {
                    var return_v = this_param.ParameterCount;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 310740, 310761);
                    return return_v;
                }


                int
                f_10899_310763_310791(Microsoft.CodeAnalysis.CSharp.UnboundLambda
                this_param)
                {
                    var return_v = this_param.ParameterCount;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 310763, 310791);
                    return return_v;
                }


                int
                f_10899_310731_310792(int
                val1, int
                val2)
                {
                    var return_v = Math.Min(val1, val2);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 310731, 310792);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol>
                f_10899_310893_310910(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                this_param)
                {
                    var return_v = this_param.Parameters;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 310893, 310910);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                f_10899_311739_311774(Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol
                this_param)
                {
                    var return_v = this_param.TypeWithAnnotations;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 311739, 311774);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                f_10899_311776_311821(Microsoft.CodeAnalysis.CSharp.UnboundLambda
                this_param, int
                index)
                {
                    var return_v = this_param.ParameterTypeWithAnnotations(index);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 311776, 311821);
                    return return_v;
                }


                bool
                f_10899_311717_311845(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                source, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                destination, bool
                requireIdentity)
                {
                    var return_v = this_param.IsNullabilityMismatch(source, destination, requireIdentity: requireIdentity);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 311717, 311845);
                    return return_v;
                }


                string
                f_10899_312105_312135(Microsoft.CodeAnalysis.CSharp.UnboundLambda
                this_param, int
                index)
                {
                    var return_v = this_param.ParameterName(index);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 312105, 312135);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.MessageID
                f_10899_312162_312185(Microsoft.CodeAnalysis.CSharp.UnboundLambda
                this_param)
                {
                    var return_v = this_param.MessageID;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 312162, 312185);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.LocalizableErrorArgument
                f_10899_312162_312196(Microsoft.CodeAnalysis.CSharp.MessageID
                id)
                {
                    var return_v = id.Localize();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 312162, 312196);
                    return return_v;
                }


                int
                f_10899_311987_312236(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.ErrorCode
                errorCode, Microsoft.CodeAnalysis.Location
                location, params object[]
                arguments)
                {
                    this_param.ReportDiagnostic(errorCode, location, arguments);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 311987, 312236);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 310235, 312282);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 310235, 312282);
            }
        }

        private bool IsNullabilityMismatch(TypeWithAnnotations source, TypeWithAnnotations destination, bool requireIdentity)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 312294, 313006);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 312436, 312572) || true) && (!f_10899_312441_312511(this, source, destination, requireIdentity))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 312436, 312572);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 312545, 312557);

                    return true;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 312436, 312572);
                }

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 312586, 312704) || true) && (requireIdentity)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 312586, 312704);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 312639, 312689);

                    return f_10899_312646_312688(source, destination);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 312586, 312704);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 312718, 312747);

                var
                sourceType = source.Type
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 312761, 312800);

                var
                destinationType = destination.Type
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 312814, 312865);

                HashSet<DiagnosticInfo>?
                useSiteDiagnostics = null
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 312879, 312995);

                return f_10899_312886_312994_M(!f_10899_312887_312987(_conversions, sourceType, destinationType, ref useSiteDiagnostics).Exists);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 312294, 313006);

                bool
                f_10899_312441_312511(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                source, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                destination, bool
                requireIdentity)
                {
                    var return_v = this_param.HasTopLevelNullabilityConversion(source, destination, requireIdentity);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 312441, 312511);
                    return return_v;
                }


                bool
                f_10899_312646_312688(Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                type1, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                type2)
                {
                    var return_v = IsNullabilityMismatch(type1, type2);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 312646, 312688);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Conversion
                f_10899_312887_312987(Microsoft.CodeAnalysis.CSharp.Conversions
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                source, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                destination, ref System.Collections.Generic.HashSet<Microsoft.CodeAnalysis.DiagnosticInfo>?
                useSiteDiagnostics)
                {
                    var return_v = this_param.ClassifyImplicitConversionFromType(source, destination, ref useSiteDiagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 312887, 312987);
                    return return_v;
                }


                bool
                f_10899_312886_312994_M(bool
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 312886, 312994);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 312294, 313006);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 312294, 313006);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private bool HasTopLevelNullabilityConversion(TypeWithAnnotations source, TypeWithAnnotations destination, bool requireIdentity)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 313018, 313393);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 313171, 313382);

                return (DynAbs.Tracing.TraceSender.Conditional_F1(10899, 313178, 313193) || ((requireIdentity && DynAbs.Tracing.TraceSender.Conditional_F2(10899, 313213, 313287)) || DynAbs.Tracing.TraceSender.Conditional_F3(10899, 313307, 313381))) ? f_10899_313213_313287(_conversions, source, destination) : f_10899_313307_313381(_conversions, source, destination);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 313018, 313393);

                bool
                f_10899_313213_313287(Microsoft.CodeAnalysis.CSharp.Conversions
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                source, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                destination)
                {
                    var return_v = this_param.HasTopLevelNullabilityIdentityConversion(source, destination);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 313213, 313287);
                    return return_v;
                }


                bool
                f_10899_313307_313381(Microsoft.CodeAnalysis.CSharp.Conversions
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                source, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                destination)
                {
                    var return_v = this_param.HasTopLevelNullabilityImplicitConversion(source, destination);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 313307, 313381);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 313018, 313393);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 313018, 313393);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private static BoundConversion? GetConversionIfApplicable(BoundExpression? conversionOpt, BoundExpression convertedNode)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterStaticMethod(10899, 313763, 314594);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 313908, 314490);

                f_10899_313908_314489(conversionOpt is null
                || (DynAbs.Tracing.TraceSender.Expression_False(10899, 313921, 314002) || convertedNode == conversionOpt // Note that convertedNode itself can be a BoundConversion, so we do this check explicitly
                ) || (DynAbs.Tracing.TraceSender.Expression_False(10899, 313921, 314365) || convertedNode == f_10899_314288_314354(conversionOpt, includeExplicitConversions: false).expression
                ) || (DynAbs.Tracing.TraceSender.Expression_False(10899, 313921, 314488) || convertedNode == f_10899_314412_314477(conversionOpt, includeExplicitConversions: true).expression));
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 314504, 314583);

                return (DynAbs.Tracing.TraceSender.Conditional_F1(10899, 314511, 314541) || ((conversionOpt == convertedNode && DynAbs.Tracing.TraceSender.Conditional_F2(10899, 314544, 314548)) || DynAbs.Tracing.TraceSender.Conditional_F3(10899, 314551, 314582))) ? null : (BoundConversion?)conversionOpt;
                DynAbs.Tracing.TraceSender.TraceExitStaticMethod(10899, 313763, 314594);

                (Microsoft.CodeAnalysis.CSharp.BoundExpression expression, Microsoft.CodeAnalysis.CSharp.Conversion conversion)
                f_10899_314288_314354(Microsoft.CodeAnalysis.CSharp.BoundExpression
                expr, bool
                includeExplicitConversions)
                {
                    var return_v = RemoveConversion(expr, includeExplicitConversions: includeExplicitConversions);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 314288, 314354);
                    return return_v;
                }


                (Microsoft.CodeAnalysis.CSharp.BoundExpression expression, Microsoft.CodeAnalysis.CSharp.Conversion conversion)
                f_10899_314412_314477(Microsoft.CodeAnalysis.CSharp.BoundExpression
                expr, bool
                includeExplicitConversions)
                {
                    var return_v = RemoveConversion(expr, includeExplicitConversions: includeExplicitConversions);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 314412, 314477);
                    return return_v;
                }


                int
                f_10899_313908_314489(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 313908, 314489);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 313763, 314594);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 313763, 314594);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        /// <summary>
        /// Apply the conversion to the type of the operand and return the resulting type. (If the
        /// operand does not have an explicit type, the operand expression is used for the type.)
        /// If `checkConversion` is set, the incoming conversion is assumed to be from binding and will be
        /// re-calculated, this time considering nullability. (Note that the conversion calculation considers
        /// nested nullability only. The caller is responsible for checking the top-level nullability of
        /// the type returned by this method.) `trackMembers` should be set if the nullability of any
        /// members of the operand should be copied to the converted result when possible.
        /// </summary>
        private TypeWithState VisitConversion(
            BoundConversion? conversionOpt,
            BoundExpression conversionOperand,
            Conversion conversion,
            TypeWithAnnotations targetTypeWithNullability,
            TypeWithState operandType,
            bool checkConversion,
            bool fromExplicitCast,
            bool useLegacyWarnings,
            AssignmentKind assignmentKind,
            ParameterSymbol? parameterOpt = null,
            bool reportTopLevelWarnings = true,
            bool reportRemainingWarnings = true,
            bool extensionMethodThisArgument = false,
            Optional<LocalState> stateForLambda = default,
            bool trackMembers = false,
            Location? diagnosticLocationOpt = null)
        {
            Debug.Assert(!trackMembers || !IsConditionalState);
            Debug.Assert(conversionOperand != null);

            NullableFlowState resultState = NullableFlowState.NotNull;
            bool canConvertNestedNullability = true;
            bool isSuppressed = false;
            diagnosticLocationOpt ??= (conversionOpt ?? conversionOperand).Syntax.GetLocation();

            if (conversionOperand.IsSuppressed == true)
            {
                reportTopLevelWarnings = false;
                reportRemainingWarnings = false;
                isSuppressed = true;
            }
#nullable disable

            TypeSymbol targetType = targetTypeWithNullability.Type;
            switch (conversion.Kind)
            {
                case ConversionKind.MethodGroup:
                    {
                        var group = conversionOperand as BoundMethodGroup;
                        var (invokeSignature, parameters) = getDelegateOrFunctionPointerInfo(targetType);
                        var method = conversion.Method;
                        if (group != null)
                        {
                            if (method?.OriginalDefinition is LocalFunctionSymbol localFunc)
                            {
                                VisitLocalFunctionUse(localFunc);
                            }
                            method = CheckMethodGroupReceiverNullability(group, parameters, method, conversion.IsExtensionMethod);
                        }
                        if (reportRemainingWarnings)
                        {
                            ReportNullabilityMismatchWithTargetDelegate(diagnosticLocationOpt, targetType, invokeSignature, method, conversion.IsExtensionMethod);
                        }
                    }
                    resultState = NullableFlowState.NotNull;
                    break;

                    static (MethodSymbol invokeSignature, ImmutableArray<ParameterSymbol>) getDelegateOrFunctionPointerInfo(TypeSymbol targetType)
                        => targetType switch
                        {
                            NamedTypeSymbol { TypeKind: TypeKind.Delegate, DelegateInvokeMethod: { Parameters: { } parameters } signature } => (signature, parameters),
                            FunctionPointerTypeSymbol { Signature: { Parameters: { } parameters } signature } => (signature, parameters),
                            _ => throw ExceptionUtilities.UnexpectedValue(targetType)
                        };

                case ConversionKind.AnonymousFunction:
                    if (conversionOperand is BoundLambda lambda)
                    {
                        var delegateType = targetType.GetDelegateType();
                        VisitLambda(lambda, delegateType, stateForLambda);
                        if (reportRemainingWarnings)
                        {
                            ReportNullabilityMismatchWithTargetDelegate(diagnosticLocationOpt, delegateType, lambda.UnboundLambda);
                        }

                        TrackAnalyzedNullabilityThroughConversionGroup(targetTypeWithNullability.ToTypeWithState(), conversionOpt, conversionOperand);

                        return TypeWithState.Create(targetType, NullableFlowState.NotNull);
                    }
                    break;

                case ConversionKind.InterpolatedString:
                    resultState = NullableFlowState.NotNull;
                    break;

                case ConversionKind.ObjectCreation:
                case ConversionKind.SwitchExpression:
                case ConversionKind.ConditionalExpression:
                    return operandType;

                case ConversionKind.ExplicitUserDefined:
                case ConversionKind.ImplicitUserDefined:
                    return VisitUserDefinedConversion(conversionOpt, conversionOperand, conversion, targetTypeWithNullability, operandType, useLegacyWarnings, assignmentKind, parameterOpt, reportTopLevelWarnings, reportRemainingWarnings, diagnosticLocationOpt);

                case ConversionKind.ExplicitDynamic:
                case ConversionKind.ImplicitDynamic:
                    resultState = getConversionResultState(operandType);
                    break;

                case ConversionKind.Boxing:
                    resultState = getBoxingConversionResultState(targetTypeWithNullability, operandType);
                    break;

                case ConversionKind.Unboxing:
                    if (targetType.IsNonNullableValueType())
                    {
                        if (!operandType.IsNotNull && reportRemainingWarnings)
                        {
                            ReportDiagnostic(ErrorCode.WRN_UnboxPossibleNull, diagnosticLocationOpt);
                        }

                        LearnFromNonNullTest(conversionOperand, ref State);
                    }
                    else
                    {
                        resultState = getUnboxingConversionResultState(operandType);
                    }
                    break;

                case ConversionKind.ImplicitThrow:
                    resultState = NullableFlowState.NotNull;
                    break;

                case ConversionKind.NoConversion:
                    resultState = getConversionResultState(operandType);
                    break;

                case ConversionKind.NullLiteral:
                case ConversionKind.DefaultLiteral:
                    checkConversion = false;
                    goto case ConversionKind.Identity;

                case ConversionKind.Identity:
                    // If the operand is an explicit conversion, and this identity conversion
                    // is converting to the same type including nullability, skip the conversion
                    // to avoid reporting redundant warnings. Also check useLegacyWarnings
                    // since that value was used when reporting warnings for the explicit cast.
                    // Don't skip the node when it's a user-defined conversion, as identity conversions
                    // on top of user-defined conversions means that we're coming in from VisitUserDefinedConversion
                    // and that any warnings caught by this recursive call of VisitConversion won't be redundant.
                    if (useLegacyWarnings && conversionOperand is BoundConversion operandConversion && !operandConversion.ConversionKind.IsUserDefinedConversion())
                    {
                        var explicitType = operandConversion.ConversionGroupOpt?.ExplicitType;
                        if (explicitType?.Equals(targetTypeWithNullability, TypeCompareKind.ConsiderEverything) == true)
                        {
                            TrackAnalyzedNullabilityThroughConversionGroup(
                                calculateResultType(targetTypeWithNullability, fromExplicitCast, operandType.State, isSuppressed, targetType),
                                conversionOpt,
                                conversionOperand);
                            return operandType;
                        }
                    }
                    if (operandType.Type?.IsTupleType == true || conversionOperand.Kind == BoundKind.TupleLiteral)
                    {
                        goto case ConversionKind.ImplicitTuple;
                    }
                    goto case ConversionKind.ImplicitReference;

                case ConversionKind.ImplicitReference:
                case ConversionKind.ExplicitReference:
                    // Inherit state from the operand.
                    if (checkConversion)
                    {
                        conversion = GenerateConversion(_conversions, conversionOperand, operandType.Type, targetType, fromExplicitCast, extensionMethodThisArgument);
                        canConvertNestedNullability = conversion.Exists;
                    }

                    resultState = conversion.IsReference ? getReferenceConversionResultState(targetTypeWithNullability, operandType) : operandType.State;
                    break;

                case ConversionKind.ImplicitNullable:
                    if (trackMembers)
                    {
                        Debug.Assert(conversionOperand != null);
                        if (AreNullableAndUnderlyingTypes(targetType, operandType.Type, out TypeWithAnnotations underlyingType))
                        {
                            // Conversion of T to Nullable<T> is equivalent to new Nullable<T>(t).
                            int valueSlot = MakeSlot(conversionOperand);
                            if (valueSlot > 0)
                            {
                                int containingSlot = GetOrCreatePlaceholderSlot(conversionOpt);
                                Debug.Assert(containingSlot > 0);
                                TrackNullableStateOfNullableValue(containingSlot, targetType, conversionOperand, underlyingType.ToTypeWithState(), valueSlot);
                            }
                        }
                    }

                    if (checkConversion)
                    {
                        conversion = GenerateConversion(_conversions, conversionOperand, operandType.Type, targetType, fromExplicitCast, extensionMethodThisArgument);
                        canConvertNestedNullability = conversion.Exists;
                    }

                    resultState = operandType.State;
                    break;

                case ConversionKind.ExplicitNullable:
                    if (operandType.Type?.IsNullableType() == true && !targetType.IsNullableType())
                    {
                        // Explicit conversion of Nullable<T> to T is equivalent to Nullable<T>.Value.
                        if (reportTopLevelWarnings && operandType.MayBeNull)
                        {
                            ReportDiagnostic(ErrorCode.WRN_NullableValueTypeMayBeNull, diagnosticLocationOpt);
                        }

                        // Mark the value as not nullable, regardless of whether it was known to be nullable,
                        // because the implied call to `.Value` will only succeed if not null.
                        if (conversionOperand != null)
                        {
                            LearnFromNonNullTest(conversionOperand, ref State);
                        }
                    }
                    goto case ConversionKind.ImplicitNullable;

                case ConversionKind.ImplicitTuple:
                case ConversionKind.ImplicitTupleLiteral:
                case ConversionKind.ExplicitTupleLiteral:
                case ConversionKind.ExplicitTuple:
                    if (trackMembers)
                    {
                        Debug.Assert(conversionOperand != null);
                        switch (conversion.Kind)
                        {
                            case ConversionKind.ImplicitTuple:
                            case ConversionKind.ExplicitTuple:
                                int valueSlot = MakeSlot(conversionOperand);
                                if (valueSlot > 0)
                                {
                                    int slot = GetOrCreatePlaceholderSlot(conversionOpt);
                                    if (slot > 0)
                                    {
                                        TrackNullableStateOfTupleConversion(conversionOpt, conversionOperand, conversion, targetType, operandType.Type, slot, valueSlot, assignmentKind, parameterOpt, reportWarnings: reportRemainingWarnings);
                                    }
                                }
                                break;
                        }
                    }

                    if (checkConversion && !targetType.IsErrorType())
                    {
                        // https://github.com/dotnet/roslyn/issues/29699: Report warnings for user-defined conversions on tuple elements.
                        conversion = GenerateConversion(_conversions, conversionOperand, operandType.Type, targetType, fromExplicitCast, extensionMethodThisArgument);
                        canConvertNestedNullability = conversion.Exists;
                    }
                    resultState = NullableFlowState.NotNull;
                    break;

                case ConversionKind.Deconstruction:
                    // Can reach here, with an error type, when the
                    // Deconstruct method is missing or inaccessible.
                    break;

                case ConversionKind.ExplicitEnumeration:
                    // Can reach here, with an error type.
                    break;

                default:
                    Debug.Assert(targetType.IsValueType || targetType.IsErrorType());
                    break;
            }

            TypeWithState resultType = calculateResultType(targetTypeWithNullability, fromExplicitCast, resultState, isSuppressed, targetType);

            if (operandType.Type?.IsErrorType() != true && !targetType.IsErrorType())
            {
                // Need to report all warnings that apply since the warnings can be suppressed individually.
                if (reportTopLevelWarnings)
                {
                    ReportNullableAssignmentIfNecessary(conversionOperand, targetTypeWithNullability, resultType, useLegacyWarnings, assignmentKind, parameterOpt, diagnosticLocationOpt);
                }
                if (reportRemainingWarnings && !canConvertNestedNullability)
                {
                    if (assignmentKind == AssignmentKind.Argument)
                    {
                        ReportNullabilityMismatchInArgument(diagnosticLocationOpt, operandType.Type, parameterOpt, targetType, forOutput: false);
                    }
                    else
                    {
                        ReportNullabilityMismatchInAssignment(diagnosticLocationOpt, GetTypeAsDiagnosticArgument(operandType.Type), targetType);
                    }
                }
            }

            TrackAnalyzedNullabilityThroughConversionGroup(resultType, conversionOpt, conversionOperand);

            return resultType;

#nullable enable
            static TypeWithState calculateResultType(TypeWithAnnotations targetTypeWithNullability, bool fromExplicitCast, NullableFlowState resultState, bool isSuppressed, TypeSymbol targetType)
            {
                if (isSuppressed)
                {
                    resultState = NullableFlowState.NotNull;
                }
                else if (fromExplicitCast && targetTypeWithNullability.NullableAnnotation.IsAnnotated() && !targetType.IsNullableType())
                {
                    // An explicit cast to a nullable reference type introduces nullability
                    resultState = targetType?.IsTypeParameterDisallowingAnnotationInCSharp8() == true ? NullableFlowState.MaybeDefault : NullableFlowState.MaybeNull;
                }

                var resultType = TypeWithState.Create(targetType, resultState);
                return resultType;
            }

            static NullableFlowState getReferenceConversionResultState(TypeWithAnnotations targetType, TypeWithState operandType)
            {
                var state = operandType.State;
                switch (state)
                {
                    case NullableFlowState.MaybeNull:
                        if (targetType.Type?.IsTypeParameterDisallowingAnnotationInCSharp8() == true)
                        {
                            var type = operandType.Type;
                            if (type is null || !type.IsTypeParameterDisallowingAnnotationInCSharp8())
                            {
                                return NullableFlowState.MaybeDefault;
                            }
                            else if (targetType.NullableAnnotation.IsNotAnnotated() &&
                                type is TypeParameterSymbol typeParameter1 &&
                                dependsOnTypeParameter(typeParameter1, (TypeParameterSymbol)targetType.Type, NullableAnnotation.NotAnnotated, out var annotation))
                            {
                                return (annotation == NullableAnnotation.Annotated) ? NullableFlowState.MaybeDefault : NullableFlowState.MaybeNull;
                            }
                        }
                        break;
                    case NullableFlowState.MaybeDefault:
                        if (targetType.Type?.IsTypeParameterDisallowingAnnotationInCSharp8() == false)
                        {
                            return NullableFlowState.MaybeNull;
                        }
                        break;
                }
                return state;
            }

            // Converting to a less-derived type (object, interface, type parameter).
            // If the operand is MaybeNull, the result should be
            // MaybeNull (if the target type allows) or MaybeDefault otherwise.
            static NullableFlowState getBoxingConversionResultState(TypeWithAnnotations targetType, TypeWithState operandType)
            {
                var state = operandType.State;
                if (state == NullableFlowState.MaybeNull)
                {
                    var type = operandType.Type;
                    if (type is null || !type.IsTypeParameterDisallowingAnnotationInCSharp8())
                    {
                        return NullableFlowState.MaybeDefault;
                    }
                    else if (targetType.NullableAnnotation.IsNotAnnotated() &&
                        type is TypeParameterSymbol typeParameter1 &&
                        targetType.Type is TypeParameterSymbol typeParameter2)
                    {
                        bool dependsOn = dependsOnTypeParameter(typeParameter1, typeParameter2, NullableAnnotation.NotAnnotated, out var annotation);
                        Debug.Assert(dependsOn); // If this case fails, add a corresponding test.
                        if (dependsOn)
                        {
                            return (annotation == NullableAnnotation.Annotated) ? NullableFlowState.MaybeDefault : NullableFlowState.MaybeNull;
                        }
                    }
                }
                return state;
            }

            // Converting to a more-derived type (struct, class, type parameter).
            // If the operand is MaybeNull or MaybeDefault, the result should be
            // MaybeDefault.
            static NullableFlowState getUnboxingConversionResultState(TypeWithState operandType)
            {
                var state = operandType.State;
                if (state == NullableFlowState.MaybeNull)
                {
                    return NullableFlowState.MaybeDefault;
                }
                return state;
            }

            static NullableFlowState getConversionResultState(TypeWithState operandType)
            {
                var state = operandType.State;
                if (state == NullableFlowState.MaybeNull)
                {
                    return NullableFlowState.MaybeDefault;
                }
                return state;
            }

            // If type parameter 1 depends on type parameter 2 (that is, if type parameter 2 appears
            // in the constraint types of type parameter 1), returns the effective annotation on
            // type parameter 2 in the constraints of type parameter 1.
            static bool dependsOnTypeParameter(TypeParameterSymbol typeParameter1, TypeParameterSymbol typeParameter2, NullableAnnotation typeParameter1Annotation, out NullableAnnotation annotation)
            {
                if (typeParameter1.Equals(typeParameter2, TypeCompareKind.AllIgnoreOptions))
                {
                    annotation = typeParameter1Annotation;
                    return true;
                }
                bool dependsOn = false;
                var combinedAnnotation = NullableAnnotation.Annotated;
                foreach (var constraintType in typeParameter1.ConstraintTypesNoUseSiteDiagnostics)
                {
                    if (constraintType.Type is TypeParameterSymbol constraintTypeParameter &&
                        dependsOnTypeParameter(constraintTypeParameter, typeParameter2, constraintType.NullableAnnotation, out var constraintAnnotation))
                    {
                        dependsOn = true;
                        combinedAnnotation = combinedAnnotation.Meet(constraintAnnotation);
                    }
                }
                if (dependsOn)
                {
                    annotation = combinedAnnotation.Join(typeParameter1Annotation);
                    return true;
                }
                annotation = default;
                return false;
            }
        }

        private TypeWithState VisitUserDefinedConversion(
                    BoundConversion? conversionOpt,
                    BoundExpression conversionOperand,
                    Conversion conversion,
                    TypeWithAnnotations targetTypeWithNullability,
                    TypeWithState operandType,
                    bool useLegacyWarnings,
                    AssignmentKind assignmentKind,
                    ParameterSymbol? parameterOpt,
                    bool reportTopLevelWarnings,
                    bool reportRemainingWarnings,
                    Location diagnosticLocation)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 337545, 344522);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 338100, 338134);

                f_10899_338100_338133(!IsConditionalState);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 338148, 338188);

                f_10899_338148_338187(conversionOperand != null);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 338202, 338250);

                f_10899_338202_338249(targetTypeWithNullability.HasType);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 338264, 338305);

                f_10899_338264_338304(diagnosticLocation != null);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 338319, 338444);

                f_10899_338319_338443(conversion.Kind == ConversionKind.ExplicitUserDefined || (DynAbs.Tracing.TraceSender.Expression_False(10899, 338332, 338442) || conversion.Kind == ConversionKind.ImplicitUserDefined));
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 338460, 338515);

                TypeSymbol
                targetType = targetTypeWithNullability.Type
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 338586, 338882) || true) && (f_10899_338590_338609_M(!conversion.IsValid))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 338586, 338882);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 338643, 338720);

                    var
                    resultType = TypeWithState.Create(targetType, NullableFlowState.NotNull)
                    ;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 338738, 338831);

                    f_10899_338738_338830(this, resultType, conversionOpt, conversionOperand);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 338849, 338867);

                    return resultType;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 338586, 338882);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 339024, 339634);

                operandType = f_10899_339038_339633(this, conversionOpt, conversionOperand, conversion.UserDefinedFromConversion, TypeWithAnnotations.Create(conversion.BestUserDefinedConversionAnalysis!.FromType), operandType, checkConversion: true, fromExplicitCast: false, useLegacyWarnings, assignmentKind, parameterOpt, reportTopLevelWarnings, reportRemainingWarnings, diagnosticLocationOpt: diagnosticLocation);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 339827, 339858);

                var
                method = conversion.Method
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 339872, 339903);

                f_10899_339872_339902(method is object);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 339917, 339958);

                f_10899_339917_339957(f_10899_339930_339951(method) == 1);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 339972, 340013);

                f_10899_339972_340012(operandType.Type is object);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 340029, 340066);

                var
                parameter = f_10899_340045_340062(method)[0]
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 340080, 340142);

                var
                parameterAnnotations = f_10899_340107_340141(this, parameter)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 340156, 340252);

                var
                parameterType = f_10899_340176_340251(f_10899_340199_340228(parameter), parameterAnnotations)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 340266, 340312);

                TypeWithState
                underlyingOperandType = default
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 340326, 340358);

                bool
                isLiftedConversion = false
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 340374, 340827) || true) && (f_10899_340378_340411(operandType.Type) && (DynAbs.Tracing.TraceSender.Expression_True(10899, 340378, 340446) && !parameterType.IsNullableType()))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 340374, 340827);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 340480, 340583);

                    var
                    underlyingOperandTypeWithAnnotations = f_10899_340523_340582(operandType.Type)
                    ;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 340601, 340680);

                    underlyingOperandType = underlyingOperandTypeWithAnnotations.ToTypeWithState();
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 340698, 340812);

                    isLiftedConversion = parameterType.Equals(underlyingOperandTypeWithAnnotations, TypeCompareKind.AllIgnoreOptions);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 340374, 340827);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 340907, 340958);

                NullableFlowState
                operandState = operandType.State
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 340972, 341038);

                Location
                operandLocation = f_10899_340999_341037(conversionOperand.Syntax)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 341052, 341501);

                _ = f_10899_341056_341500(this, conversionOperand, parameterType, (DynAbs.Tracing.TraceSender.Conditional_F1(10899, 341169, 341187) || ((isLiftedConversion && DynAbs.Tracing.TraceSender.Conditional_F2(10899, 341190, 341211)) || DynAbs.Tracing.TraceSender.Conditional_F3(10899, 341214, 341225))) ? underlyingOperandType : operandType, useLegacyWarnings, AssignmentKind.Argument, parameterOpt: parameter, reportWarnings: reportRemainingWarnings, fromExplicitCast: false, diagnosticLocation: operandLocation);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 341649, 341875) || true) && (!isLiftedConversion && (DynAbs.Tracing.TraceSender.Expression_True(10899, 341653, 341775) && f_10899_341676_341775(this, operandType, parameterAnnotations, f_10899_341741_341774(conversionOperand.Syntax))))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 341649, 341875);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 341809, 341860);

                    f_10899_341809_341859(this, conversionOperand, ref State);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 341649, 341875);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 341951, 342007);

                var
                methodReturnType = f_10899_341974_342006(method)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 342021, 342118);

                operandType = f_10899_342035_342117(this, isLiftedConversion, methodReturnType, operandState);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 342132, 342654) || true) && (!isLiftedConversion || (DynAbs.Tracing.TraceSender.Expression_False(10899, 342136, 342183) || f_10899_342159_342183(operandState)))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 342132, 342654);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 342217, 342329);

                    var
                    returnNotNull = f_10899_342237_342261(operandState) && (DynAbs.Tracing.TraceSender.Expression_True(10899, 342237, 342328) && f_10899_342265_342328(f_10899_342265_342303(method), f_10899_342313_342327(parameter)))
                    ;

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 342347, 342639) || true) && (returnNotNull)
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 342347, 342639);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 342406, 342451);

                        operandType = operandType.WithNotNullState();
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 342347, 342639);
                    }

                    else

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 342347, 342639);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 342533, 342620);

                        operandType = f_10899_342547_342619(operandType, f_10899_342590_342618(this, method));
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 342347, 342639);
                    }
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 342132, 342654);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 342802, 343263);

                operandType = f_10899_342816_343262(this, conversionOperand, TypeWithAnnotations.Create(conversion.BestUserDefinedConversionAnalysis!.ToType), operandType, useLegacyWarnings, assignmentKind, parameterOpt, reportWarnings: reportRemainingWarnings, fromExplicitCast: false, diagnosticLocation: operandLocation);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 343923, 344366);

                operandType = f_10899_343937_344365(this, conversionOpt ?? (DynAbs.Tracing.TraceSender.Expression_Null<Microsoft.CodeAnalysis.CSharp.BoundConversion?>(10899, 343982, 344016) ?? conversionOperand), targetTypeWithNullability, operandType, useLegacyWarnings, assignmentKind, parameterOpt, reportWarnings: reportRemainingWarnings, fromExplicitCast: f_10899_344285_344318_M(DynAbs.Tracing.TraceSender.TraceConditionalAccessExpression(conversionOpt, 10899, 344285, 344318)?.ExplicitCastInCode) ?? (DynAbs.Tracing.TraceSender.Expression_Null<bool?>(10899, 344285, 344327) ?? false), diagnosticLocation);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 344382, 344476);

                f_10899_344382_344475(this, operandType, conversionOpt, conversionOperand);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 344492, 344511);

                return operandType;
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 337545, 344522);

                int
                f_10899_338100_338133(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 338100, 338133);
                    return 0;
                }


                int
                f_10899_338148_338187(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 338148, 338187);
                    return 0;
                }


                int
                f_10899_338202_338249(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 338202, 338249);
                    return 0;
                }


                int
                f_10899_338264_338304(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 338264, 338304);
                    return 0;
                }


                int
                f_10899_338319_338443(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 338319, 338443);
                    return 0;
                }


                bool
                f_10899_338590_338609_M(bool
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 338590, 338609);
                    return return_v;
                }


                int
                f_10899_338738_338830(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                resultType, Microsoft.CodeAnalysis.CSharp.BoundConversion?
                conversionOpt, Microsoft.CodeAnalysis.CSharp.BoundExpression
                convertedNode)
                {
                    this_param.TrackAnalyzedNullabilityThroughConversionGroup(resultType, conversionOpt, convertedNode);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 338738, 338830);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                f_10899_339038_339633(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundConversion?
                conversionOpt, Microsoft.CodeAnalysis.CSharp.BoundExpression
                conversionOperand, Microsoft.CodeAnalysis.CSharp.Conversion
                conversion, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                targetTypeWithNullability, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                operandType, bool
                checkConversion, bool
                fromExplicitCast, bool
                useLegacyWarnings, Microsoft.CodeAnalysis.CSharp.NullableWalker.AssignmentKind
                assignmentKind, Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol?
                parameterOpt, bool
                reportTopLevelWarnings, bool
                reportRemainingWarnings, Microsoft.CodeAnalysis.Location
                diagnosticLocationOpt)
                {
                    var return_v = this_param.VisitConversion(conversionOpt, conversionOperand, conversion, targetTypeWithNullability, operandType, checkConversion: checkConversion, fromExplicitCast: fromExplicitCast, useLegacyWarnings, assignmentKind, parameterOpt, reportTopLevelWarnings, reportRemainingWarnings, diagnosticLocationOpt: diagnosticLocationOpt);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 339038, 339633);
                    return return_v;
                }


                int
                f_10899_339872_339902(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 339872, 339902);
                    return 0;
                }


                int
                f_10899_339930_339951(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                this_param)
                {
                    var return_v = this_param.ParameterCount;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 339930, 339951);
                    return return_v;
                }


                int
                f_10899_339917_339957(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 339917, 339957);
                    return 0;
                }


                int
                f_10899_339972_340012(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 339972, 340012);
                    return 0;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol>
                f_10899_340045_340062(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                this_param)
                {
                    var return_v = this_param.Parameters;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 340045, 340062);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.FlowAnalysisAnnotations
                f_10899_340107_340141(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol
                parameter)
                {
                    var return_v = this_param.GetParameterAnnotations(parameter);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 340107, 340141);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                f_10899_340199_340228(Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol
                this_param)
                {
                    var return_v = this_param.TypeWithAnnotations;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 340199, 340228);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                f_10899_340176_340251(Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                declaredType, Microsoft.CodeAnalysis.CSharp.Symbols.FlowAnalysisAnnotations
                flowAnalysisAnnotations)
                {
                    var return_v = ApplyLValueAnnotations(declaredType, flowAnalysisAnnotations);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 340176, 340251);
                    return return_v;
                }


                bool
                f_10899_340378_340411(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                type)
                {
                    var return_v = type.IsNullableType();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 340378, 340411);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                f_10899_340523_340582(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                type)
                {
                    var return_v = type.GetNullableUnderlyingTypeWithAnnotations();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 340523, 340582);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Location
                f_10899_340999_341037(Microsoft.CodeAnalysis.SyntaxNode
                this_param)
                {
                    var return_v = this_param.GetLocation();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 340999, 341037);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                f_10899_341056_341500(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                node, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                targetType, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                operandType, bool
                useLegacyWarnings, Microsoft.CodeAnalysis.CSharp.NullableWalker.AssignmentKind
                assignmentKind, Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol
                parameterOpt, bool
                reportWarnings, bool
                fromExplicitCast, Microsoft.CodeAnalysis.Location
                diagnosticLocation)
                {
                    var return_v = this_param.ClassifyAndVisitConversion(node, targetType, operandType, useLegacyWarnings, assignmentKind, parameterOpt: parameterOpt, reportWarnings: reportWarnings, fromExplicitCast: fromExplicitCast, diagnosticLocation: diagnosticLocation);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 341056, 341500);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Location
                f_10899_341741_341774(Microsoft.CodeAnalysis.SyntaxNode
                this_param)
                {
                    var return_v = this_param.Location;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 341741, 341774);
                    return return_v;
                }


                bool
                f_10899_341676_341775(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                state, Microsoft.CodeAnalysis.CSharp.Symbols.FlowAnalysisAnnotations
                annotations, Microsoft.CodeAnalysis.Location
                location)
                {
                    var return_v = this_param.CheckDisallowedNullAssignment(state, annotations, location);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 341676, 341775);
                    return return_v;
                }


                int
                f_10899_341809_341859(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                expression, ref Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState
                state)
                {
                    this_param.LearnFromNonNullTest(expression, ref state);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 341809, 341859);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                f_10899_341974_342006(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                this_param)
                {
                    var return_v = this_param.ReturnTypeWithAnnotations;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 341974, 342006);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                f_10899_342035_342117(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, bool
                isLifted, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                returnType, Microsoft.CodeAnalysis.CSharp.NullableFlowState
                operandState)
                {
                    var return_v = this_param.GetLiftedReturnTypeIfNecessary(isLifted, returnType, operandState);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 342035, 342117);
                    return return_v;
                }


                bool
                f_10899_342159_342183(Microsoft.CodeAnalysis.CSharp.NullableFlowState
                state)
                {
                    var return_v = state.IsNotNull();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 342159, 342183);
                    return return_v;
                }


                bool
                f_10899_342237_342261(Microsoft.CodeAnalysis.CSharp.NullableFlowState
                state)
                {
                    var return_v = state.IsNotNull();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 342237, 342261);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableHashSet<string>
                f_10899_342265_342303(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                this_param)
                {
                    var return_v = this_param.ReturnNotNullIfParameterNotNull;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 342265, 342303);
                    return return_v;
                }


                string
                f_10899_342313_342327(Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol
                this_param)
                {
                    var return_v = this_param.Name;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 342313, 342327);
                    return return_v;
                }


                bool
                f_10899_342265_342328(System.Collections.Immutable.ImmutableHashSet<string>
                this_param, string
                item)
                {
                    var return_v = this_param.Contains(item);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 342265, 342328);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.FlowAnalysisAnnotations
                f_10899_342590_342618(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                symbol)
                {
                    var return_v = this_param.GetRValueAnnotations((Microsoft.CodeAnalysis.CSharp.Symbol)symbol);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 342590, 342618);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                f_10899_342547_342619(Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                typeWithState, Microsoft.CodeAnalysis.CSharp.Symbols.FlowAnalysisAnnotations
                annotations)
                {
                    var return_v = ApplyUnconditionalAnnotations(typeWithState, annotations);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 342547, 342619);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                f_10899_342816_343262(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                node, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                targetType, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                operandType, bool
                useLegacyWarnings, Microsoft.CodeAnalysis.CSharp.NullableWalker.AssignmentKind
                assignmentKind, Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol?
                parameterOpt, bool
                reportWarnings, bool
                fromExplicitCast, Microsoft.CodeAnalysis.Location
                diagnosticLocation)
                {
                    var return_v = this_param.ClassifyAndVisitConversion(node, targetType, operandType, useLegacyWarnings, assignmentKind, parameterOpt, reportWarnings: reportWarnings, fromExplicitCast: fromExplicitCast, diagnosticLocation: diagnosticLocation);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 342816, 343262);
                    return return_v;
                }


                bool?
                f_10899_344285_344318_M(bool?
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 344285, 344318);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                f_10899_343937_344365(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                node, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                targetType, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                operandType, bool
                useLegacyWarnings, Microsoft.CodeAnalysis.CSharp.NullableWalker.AssignmentKind
                assignmentKind, Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol?
                parameterOpt, bool
                reportWarnings, bool
                fromExplicitCast, Microsoft.CodeAnalysis.Location
                diagnosticLocation)
                {
                    var return_v = this_param.ClassifyAndVisitConversion(node, targetType, operandType, useLegacyWarnings, assignmentKind, parameterOpt, reportWarnings: reportWarnings, fromExplicitCast: fromExplicitCast, diagnosticLocation);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 343937, 344365);
                    return return_v;
                }


                int
                f_10899_344382_344475(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                resultType, Microsoft.CodeAnalysis.CSharp.BoundConversion?
                conversionOpt, Microsoft.CodeAnalysis.CSharp.BoundExpression
                convertedNode)
                {
                    this_param.TrackAnalyzedNullabilityThroughConversionGroup(resultType, conversionOpt, convertedNode);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 344382, 344475);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 337545, 344522);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 337545, 344522);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private void SnapshotWalkerThroughConversionGroup(BoundExpression conversionExpression, BoundExpression convertedNode)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 344534, 345352);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 344677, 344764) || true) && (_snapshotBuilderOpt is null)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 344677, 344764);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 344742, 344749);

                    return;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 344677, 344764);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 344780, 344840);

                var
                conversionOpt = conversionExpression as BoundConversion
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 344854, 344910);

                var
                conversionGroup = f_10899_344876_344909_M(DynAbs.Tracing.TraceSender.TraceConditionalAccessExpression(conversionOpt, 10899, 344876, 344909)?.ConversionGroupOpt)
                ;
                try
                {
                    while ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 344924, 345341) || true) && (conversionOpt != null && (DynAbs.Tracing.TraceSender.Expression_True(10899, 344931, 345006) && conversionOpt != convertedNode) && (DynAbs.Tracing.TraceSender.Expression_True(10899, 344931, 345094) && f_10899_345030_345060(conversionOpt.Syntax) != f_10899_345064_345094(convertedNode.Syntax)))
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 344924, 345341);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 345128, 345194);

                        f_10899_345128_345193(f_10899_345141_345173(conversionOpt) == conversionGroup);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 345212, 345251);

                        f_10899_345212_345250(this, conversionOpt);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 345269, 345326);

                        conversionOpt = f_10899_345285_345306(conversionOpt) as BoundConversion;
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 344924, 345341);
                    }
                }
                catch (System.Exception)
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoopByException(10899, 344924, 345341);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoop(10899, 344924, 345341);
                }
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 344534, 345352);

                Microsoft.CodeAnalysis.CSharp.ConversionGroup?
                f_10899_344876_344909_M(Microsoft.CodeAnalysis.CSharp.ConversionGroup?
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 344876, 344909);
                    return return_v;
                }


                int
                f_10899_345030_345060(Microsoft.CodeAnalysis.SyntaxNode
                this_param)
                {
                    var return_v = this_param.SpanStart;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 345030, 345060);
                    return return_v;
                }


                int
                f_10899_345064_345094(Microsoft.CodeAnalysis.SyntaxNode
                this_param)
                {
                    var return_v = this_param.SpanStart;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 345064, 345094);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.ConversionGroup?
                f_10899_345141_345173(Microsoft.CodeAnalysis.CSharp.BoundConversion
                this_param)
                {
                    var return_v = this_param.ConversionGroupOpt;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 345141, 345173);
                    return return_v;
                }


                int
                f_10899_345128_345193(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 345128, 345193);
                    return 0;
                }


                int
                f_10899_345212_345250(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundConversion
                node)
                {
                    this_param.TakeIncrementalSnapshot((Microsoft.CodeAnalysis.CSharp.BoundNode)node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 345212, 345250);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10899_345285_345306(Microsoft.CodeAnalysis.CSharp.BoundConversion
                this_param)
                {
                    var return_v = this_param.Operand;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 345285, 345306);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 344534, 345352);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 344534, 345352);
            }
        }

        private void TrackAnalyzedNullabilityThroughConversionGroup(TypeWithState resultType, BoundConversion? conversionOpt, BoundExpression convertedNode)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 345364, 346419);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 345537, 345630);

                var
                visitResult = f_10899_345555_345629(resultType, resultType.ToTypeWithAnnotations(compilation))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 345644, 345700);

                var
                conversionGroup = f_10899_345666_345699_M(DynAbs.Tracing.TraceSender.TraceConditionalAccessExpression(conversionOpt, 10899, 345666, 345699)?.ConversionGroupOpt)
                ;
                try
                {
                    while ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 345714, 346109) || true) && (conversionOpt != null && (DynAbs.Tracing.TraceSender.Expression_True(10899, 345721, 345776) && conversionOpt != convertedNode))
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 345714, 346109);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 345810, 345876);

                        f_10899_345810_345875(f_10899_345823_345855(conversionOpt) == conversionGroup);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 345894, 345950);

                        visitResult = f_10899_345908_345949(visitResult, f_10899_345930_345948(conversionOpt));
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 345968, 346019);

                        f_10899_345968_346018(this, conversionOpt, visitResult);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 346037, 346094);

                        conversionOpt = f_10899_346053_346074(conversionOpt) as BoundConversion;
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 345714, 346109);
                    }
                }
                catch (System.Exception)
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoopByException(10899, 345714, 346109);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoop(10899, 345714, 346109);
                }
                static VisitResult withType(VisitResult visitResult, TypeSymbol newType)
                {
                    try
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 346198, 346407);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 346218, 346407);
                        return f_10899_346218_346407(TypeWithState.Create(newType, visitResult.RValueType.State), TypeWithAnnotations.Create(newType, visitResult.LValueType.NullableAnnotation)); DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 346198, 346407);
                    }
                    catch
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 346198, 346407);
                        throw;
                    }
                    finally
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 346198, 346407);
                    }
                    throw new System.Exception("Slicer error: unreachable code");
                }
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 345364, 346419);

                Microsoft.CodeAnalysis.CSharp.NullableWalker.VisitResult
                f_10899_345555_345629(Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                rValueType, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                lValueType)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.NullableWalker.VisitResult(rValueType, lValueType);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 345555, 345629);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.ConversionGroup?
                f_10899_345666_345699_M(Microsoft.CodeAnalysis.CSharp.ConversionGroup?
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 345666, 345699);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.ConversionGroup?
                f_10899_345823_345855(Microsoft.CodeAnalysis.CSharp.BoundConversion
                this_param)
                {
                    var return_v = this_param.ConversionGroupOpt;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 345823, 345855);
                    return return_v;
                }


                int
                f_10899_345810_345875(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 345810, 345875);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                f_10899_345930_345948(Microsoft.CodeAnalysis.CSharp.BoundConversion
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 345930, 345948);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.NullableWalker.VisitResult
                f_10899_345908_345949(Microsoft.CodeAnalysis.CSharp.NullableWalker.VisitResult
                visitResult, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                newType)
                {
                    var return_v = withType(visitResult, newType);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 345908, 345949);
                    return return_v;
                }


                int
                f_10899_345968_346018(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundConversion
                expr, Microsoft.CodeAnalysis.CSharp.NullableWalker.VisitResult
                result)
                {
                    this_param.SetAnalyzedNullability((Microsoft.CodeAnalysis.CSharp.BoundExpression)expr, result);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 345968, 346018);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10899_346053_346074(Microsoft.CodeAnalysis.CSharp.BoundConversion
                this_param)
                {
                    var return_v = this_param.Operand;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 346053, 346074);
                    return return_v;
                }


                static Microsoft.CodeAnalysis.CSharp.NullableWalker.VisitResult
                f_10899_346218_346407(Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                rValueType, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                lValueType)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.NullableWalker.VisitResult(rValueType, lValueType);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 346218, 346407);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 345364, 346419);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 345364, 346419);
            }
        }

        private TypeWithState GetLiftedReturnType(TypeWithAnnotations returnType, NullableFlowState operandState)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 346582, 347033);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 346712, 346777);

                bool
                typeNeedsLifting = f_10899_346736_346776(returnType.Type)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 346791, 346873);

                TypeSymbol
                type = (DynAbs.Tracing.TraceSender.Conditional_F1(10899, 346809, 346825) || ((typeNeedsLifting && DynAbs.Tracing.TraceSender.Conditional_F2(10899, 346828, 346854)) || DynAbs.Tracing.TraceSender.Conditional_F3(10899, 346857, 346872))) ? f_10899_346828_346854(this, returnType) : returnType.Type
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 346887, 346967);

                NullableFlowState
                state = f_10899_346913_346966(returnType.ToTypeWithState().State, operandState)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 346981, 347022);

                return TypeWithState.Create(type, state);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 346582, 347033);

                bool
                f_10899_346736_346776(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                typeArgument)
                {
                    var return_v = typeArgument.IsNonNullableValueType();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 346736, 346776);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                f_10899_346828_346854(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                underlying)
                {
                    var return_v = this_param.MakeNullableOf(underlying);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 346828, 346854);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.NullableFlowState
                f_10899_346913_346966(Microsoft.CodeAnalysis.CSharp.NullableFlowState
                a, Microsoft.CodeAnalysis.CSharp.NullableFlowState
                b)
                {
                    var return_v = a.Join(b);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 346913, 346966);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 346582, 347033);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 346582, 347033);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private static TypeWithState GetNullableUnderlyingTypeIfNecessary(bool isLifted, TypeWithState typeWithState)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterStaticMethod(10899, 347045, 347540);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 347179, 347494) || true) && (isLifted)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 347179, 347494);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 347252, 347282);

                    var
                    type = typeWithState.Type
                    ;

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 347300, 347479) || true) && (type is not null && (DynAbs.Tracing.TraceSender.Expression_True(10899, 347304, 347345) && f_10899_347324_347345(type)))
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 347300, 347479);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 347387, 347460);

                        return f_10899_347394_347441(type).ToTypeWithState();
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 347300, 347479);
                    }
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 347179, 347494);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 347508, 347529);

                return typeWithState;
                DynAbs.Tracing.TraceSender.TraceExitStaticMethod(10899, 347045, 347540);

                bool
                f_10899_347324_347345(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                type)
                {
                    var return_v = type.IsNullableType();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 347324, 347345);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                f_10899_347394_347441(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                type)
                {
                    var return_v = type.GetNullableUnderlyingTypeWithAnnotations();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 347394, 347441);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 347045, 347540);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 347045, 347540);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private TypeWithState GetLiftedReturnTypeIfNecessary(bool isLifted, TypeWithAnnotations returnType, NullableFlowState operandState)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 347552, 347848);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 347708, 347837);

                return (DynAbs.Tracing.TraceSender.Conditional_F1(10899, 347715, 347723) || ((isLifted && DynAbs.Tracing.TraceSender.Conditional_F2(10899, 347743, 347788)) || DynAbs.Tracing.TraceSender.Conditional_F3(10899, 347808, 347836))) ? f_10899_347743_347788(this, returnType, operandState) : returnType.ToTypeWithState();
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 347552, 347848);

                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                f_10899_347743_347788(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                returnType, Microsoft.CodeAnalysis.CSharp.NullableFlowState
                operandState)
                {
                    var return_v = this_param.GetLiftedReturnType(returnType, operandState);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 347743, 347788);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 347552, 347848);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 347552, 347848);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private TypeSymbol MakeNullableOf(TypeWithAnnotations underlying)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 347860, 348071);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 347950, 348060);

                return f_10899_347957_348059(f_10899_347957_348014(compilation, SpecialType.System_Nullable_T), f_10899_348025_348058(underlying));
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 347860, 348071);

                Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                f_10899_347957_348014(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param, Microsoft.CodeAnalysis.SpecialType
                specialType)
                {
                    var return_v = this_param.GetSpecialType(specialType);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 347957, 348014);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations>
                f_10899_348025_348058(Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                item)
                {
                    var return_v = ImmutableArray.Create(item);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 348025, 348058);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                f_10899_347957_348059(Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                this_param, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations>
                typeArguments)
                {
                    var return_v = this_param.Construct(typeArguments);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 347957, 348059);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 347860, 348071);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 347860, 348071);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private TypeWithState ClassifyAndVisitConversion(
                    BoundExpression node,
                    TypeWithAnnotations targetType,
                    TypeWithState operandType,
                    bool useLegacyWarnings,
                    AssignmentKind assignmentKind,
                    ParameterSymbol? parameterOpt,
                    bool reportWarnings,
                    bool fromExplicitCast,
                    Location diagnosticLocation)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 348083, 349928);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 348514, 348555);

                f_10899_348514_348554(operandType.Type is object);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 348569, 348610);

                f_10899_348569_348609(diagnosticLocation != null);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 348624, 348675);

                HashSet<DiagnosticInfo>?
                useSiteDiagnostics = null
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 348689, 348811);

                var
                conversion = f_10899_348706_348810(_conversions, null, operandType.Type, targetType.Type, ref useSiteDiagnostics)
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 348825, 349318) || true) && (reportWarnings && (DynAbs.Tracing.TraceSender.Expression_True(10899, 348829, 348865) && f_10899_348847_348865_M(!conversion.Exists)))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 348825, 349318);

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 348899, 349303) || true) && (assignmentKind == AssignmentKind.Argument)
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 348899, 349303);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 348986, 349109);

                        f_10899_348986_349108(this, diagnosticLocation, operandType.Type, parameterOpt, targetType.Type, forOutput: false);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 348899, 349303);
                    }

                    else

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 348899, 349303);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 349191, 349284);

                        f_10899_349191_349283(this, diagnosticLocation, operandType.Type, targetType.Type);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 348899, 349303);
                    }
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 348825, 349318);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 349334, 349917);

                return f_10899_349341_349916(this, conversionOpt: null, conversionOperand: node, conversion, targetType, operandType, checkConversion: false, fromExplicitCast, useLegacyWarnings: useLegacyWarnings, assignmentKind, parameterOpt, reportTopLevelWarnings: reportWarnings, reportRemainingWarnings: !fromExplicitCast && (DynAbs.Tracing.TraceSender.Expression_True(10899, 349820, 349855) && reportWarnings), diagnosticLocationOpt: diagnosticLocation);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 348083, 349928);

                int
                f_10899_348514_348554(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 348514, 348554);
                    return 0;
                }


                int
                f_10899_348569_348609(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 348569, 348609);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.Conversion
                f_10899_348706_348810(Microsoft.CodeAnalysis.CSharp.Conversions
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                sourceExpression, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                source, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                destination, ref System.Collections.Generic.HashSet<Microsoft.CodeAnalysis.DiagnosticInfo>?
                useSiteDiagnostics)
                {
                    var return_v = this_param.ClassifyStandardConversion(sourceExpression, source, destination, ref useSiteDiagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 348706, 348810);
                    return return_v;
                }


                bool
                f_10899_348847_348865_M(bool
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 348847, 348865);
                    return return_v;
                }


                int
                f_10899_348986_349108(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.Location
                argumentLocation, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                argumentType, Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol?
                parameterOpt, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                parameterType, bool
                forOutput)
                {
                    this_param.ReportNullabilityMismatchInArgument(argumentLocation, argumentType, parameterOpt, parameterType, forOutput: forOutput);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 348986, 349108);
                    return 0;
                }


                int
                f_10899_349191_349283(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.Location
                location, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                sourceType, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                destinationType)
                {
                    this_param.ReportNullabilityMismatchInAssignment(location, (object)sourceType, (object)destinationType);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 349191, 349283);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                f_10899_349341_349916(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundConversion?
                conversionOpt, Microsoft.CodeAnalysis.CSharp.BoundExpression
                conversionOperand, Microsoft.CodeAnalysis.CSharp.Conversion
                conversion, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                targetTypeWithNullability, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                operandType, bool
                checkConversion, bool
                fromExplicitCast, bool
                useLegacyWarnings, Microsoft.CodeAnalysis.CSharp.NullableWalker.AssignmentKind
                assignmentKind, Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol?
                parameterOpt, bool
                reportTopLevelWarnings, bool
                reportRemainingWarnings, Microsoft.CodeAnalysis.Location
                diagnosticLocationOpt)
                {
                    var return_v = this_param.VisitConversion(conversionOpt: conversionOpt, conversionOperand: conversionOperand, conversion, targetTypeWithNullability, operandType, checkConversion: checkConversion, fromExplicitCast, useLegacyWarnings: useLegacyWarnings, assignmentKind, parameterOpt, reportTopLevelWarnings: reportTopLevelWarnings, reportRemainingWarnings: reportRemainingWarnings, diagnosticLocationOpt: diagnosticLocationOpt);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 349341, 349916);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 348083, 349928);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 348083, 349928);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override BoundNode? VisitDelegateCreationExpression(BoundDelegateCreationExpression node)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 349940, 352864);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 350061, 350102);

                f_10899_350061_350101(f_10899_350074_350100(f_10899_350074_350083(node)));

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 350118, 350271) || true) && (f_10899_350122_350156_M(DynAbs.Tracing.TraceSender.TraceConditionalAccessExpression(f_10899_350122_350136(node), 10899, 350122, 350156)?.OriginalDefinition) is LocalFunctionSymbol localFunc)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 350118, 350271);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 350223, 350256);

                    f_10899_350223_350255(this, localFunc);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 350118, 350271);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 350287, 350333);

                var
                delegateType = (NamedTypeSymbol)f_10899_350323_350332(node)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 350347, 352788);

                switch (f_10899_350355_350368(node))
                {

                    case BoundMethodGroup group:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 350347, 352788);
                        {
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 350479, 350503);

                            f_10899_350479_350502(this, group);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 350529, 350557);

                            var
                            method = f_10899_350542_350556(node)
                            ;

                            if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 350583, 351116) || true) && (method is object)
                            )

                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 350583, 351116);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 350661, 350791);

                                method = f_10899_350670_350790(this, group, f_10899_350713_350757(f_10899_350713_350746(delegateType)), method, f_10899_350767_350789(node));

                                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 350821, 351089) || true) && (f_10899_350825_350844_M(!group.IsSuppressed))
                                )

                                {
                                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 350821, 351089);
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 350910, 351058);

                                    f_10899_350910_351057(this, f_10899_350954_350975(group.Syntax), delegateType, f_10899_350991_351024(delegateType), method, f_10899_351034_351056(node));
                                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 350821, 351089);
                                }
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 350583, 351116);
                            }
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 351142, 351181);

                            f_10899_351142_351180(this, group, default);
                        }
                        DynAbs.Tracing.TraceSender.TraceBreak(10899, 351226, 351232);

                        break;
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 350347, 352788);

                    case BoundLambda lambda:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 350347, 352788);
                        {
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 351323, 351357);

                            f_10899_351323_351356(this, lambda, delegateType);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 351383, 351408);

                            f_10899_351383_351407(this, lambda);

                            if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 351434, 351657) || true) && (f_10899_351438_351458_M(!lambda.IsSuppressed))
                            )

                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 351434, 351657);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 351516, 351630);

                                f_10899_351516_351629(this, f_10899_351560_351592(f_10899_351560_351573(lambda)), delegateType, f_10899_351608_351628(lambda));
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 351434, 351657);
                            }
                        }
                        DynAbs.Tracing.TraceSender.TraceBreak(10899, 351702, 351708);

                        break;
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 350347, 352788);

                    case BoundExpression arg when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 351751, 351807) || true) && (f_10899_351756_351764(arg) is { TypeKind: TypeKind.Delegate } argType) && (DynAbs.Tracing.TraceSender.Expression_True(10899, 351751, 351807) || true)
                    :
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 350347, 352788);
                        {
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 351857, 351955);

                            var
                            argTypeWithAnnotations = TypeWithAnnotations.Create(argType, NullableAnnotation.NotAnnotated)
                            ;
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 351981, 352022);

                            var
                            argState = f_10899_351996_352021(this, arg)
                            ;
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 352048, 352149);

                            f_10899_352048_352148(this, arg, argTypeWithAnnotations, argState, useLegacyWarnings: false);

                            if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 352175, 352460) || true) && (f_10899_352179_352196_M(!arg.IsSuppressed))
                            )

                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 352175, 352460);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 352254, 352433);

                                f_10899_352254_352432(this, f_10899_352298_352317(arg.Syntax), delegateType, f_10899_352333_352366(delegateType), f_10899_352368_352398(argType), invokedAsExtensionMethod: false);
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 352175, 352460);
                            }
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 352582, 352619);

                            f_10899_352582_352618(this, arg, ref State);
                        }
                        DynAbs.Tracing.TraceSender.TraceBreak(10899, 352664, 352670);

                        break;
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 350347, 352788);

                    default:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 350347, 352788);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 352718, 352745);

                        f_10899_352718_352744(this, f_10899_352730_352743(node));
                        DynAbs.Tracing.TraceSender.TraceBreak(10899, 352767, 352773);

                        break;
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 350347, 352788);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 352804, 352827);

                f_10899_352804_352826(this, node);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 352841, 352853);

                return null;
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 349940, 352864);

                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                f_10899_350074_350083(Microsoft.CodeAnalysis.CSharp.BoundDelegateCreationExpression
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 350074, 350083);
                    return return_v;
                }


                bool
                f_10899_350074_350100(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                type)
                {
                    var return_v = type.IsDelegateType();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 350074, 350100);
                    return return_v;
                }


                int
                f_10899_350061_350101(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 350061, 350101);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol?
                f_10899_350122_350136(Microsoft.CodeAnalysis.CSharp.BoundDelegateCreationExpression
                this_param)
                {
                    var return_v = this_param.MethodOpt;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 350122, 350136);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol?
                f_10899_350122_350156_M(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol?
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 350122, 350156);
                    return return_v;
                }


                int
                f_10899_350223_350255(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.LocalFunctionSymbol
                symbol)
                {
                    this_param.VisitLocalFunctionUse(symbol);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 350223, 350255);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                f_10899_350323_350332(Microsoft.CodeAnalysis.CSharp.BoundDelegateCreationExpression
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 350323, 350332);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10899_350355_350368(Microsoft.CodeAnalysis.CSharp.BoundDelegateCreationExpression
                this_param)
                {
                    var return_v = this_param.Argument;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 350355, 350368);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundNode?
                f_10899_350479_350502(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundMethodGroup
                node)
                {
                    var return_v = this_param.VisitMethodGroup(node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 350479, 350502);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol?
                f_10899_350542_350556(Microsoft.CodeAnalysis.CSharp.BoundDelegateCreationExpression
                this_param)
                {
                    var return_v = this_param.MethodOpt;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 350542, 350556);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                f_10899_350713_350746(Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                this_param)
                {
                    var return_v = this_param.DelegateInvokeMethod;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 350713, 350746);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol>
                f_10899_350713_350757(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                this_param)
                {
                    var return_v = this_param.Parameters;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 350713, 350757);
                    return return_v;
                }


                bool
                f_10899_350767_350789(Microsoft.CodeAnalysis.CSharp.BoundDelegateCreationExpression
                this_param)
                {
                    var return_v = this_param.IsExtensionMethod;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 350767, 350789);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                f_10899_350670_350790(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundMethodGroup
                group, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol>
                parameters, Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                method, bool
                invokedAsExtensionMethod)
                {
                    var return_v = this_param.CheckMethodGroupReceiverNullability(group, parameters, method, invokedAsExtensionMethod);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 350670, 350790);
                    return return_v;
                }


                bool
                f_10899_350825_350844_M(bool
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 350825, 350844);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Location
                f_10899_350954_350975(Microsoft.CodeAnalysis.SyntaxNode
                this_param)
                {
                    var return_v = this_param.Location;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 350954, 350975);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                f_10899_350991_351024(Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                this_param)
                {
                    var return_v = this_param.DelegateInvokeMethod;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 350991, 351024);
                    return return_v;
                }


                bool
                f_10899_351034_351056(Microsoft.CodeAnalysis.CSharp.BoundDelegateCreationExpression
                this_param)
                {
                    var return_v = this_param.IsExtensionMethod;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 351034, 351056);
                    return return_v;
                }


                int
                f_10899_350910_351057(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.Location
                location, Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                targetType, Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                targetInvokeMethod, Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                sourceInvokeMethod, bool
                invokedAsExtensionMethod)
                {
                    this_param.ReportNullabilityMismatchWithTargetDelegate(location, (Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol)targetType, targetInvokeMethod, sourceInvokeMethod, invokedAsExtensionMethod);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 350910, 351057);
                    return 0;
                }


                int
                f_10899_351142_351180(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundMethodGroup
                expr, Microsoft.CodeAnalysis.CSharp.NullableWalker.VisitResult
                result)
                {
                    this_param.SetAnalyzedNullability((Microsoft.CodeAnalysis.CSharp.BoundExpression)expr, result);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 351142, 351180);
                    return 0;
                }


                int
                f_10899_351323_351356(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundLambda
                node, Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                delegateTypeOpt)
                {
                    this_param.VisitLambda(node, delegateTypeOpt);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 351323, 351356);
                    return 0;
                }


                int
                f_10899_351383_351407(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundLambda
                node)
                {
                    this_param.SetNotNullResult((Microsoft.CodeAnalysis.CSharp.BoundExpression)node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 351383, 351407);
                    return 0;
                }


                bool
                f_10899_351438_351458_M(bool
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 351438, 351458);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.LambdaSymbol
                f_10899_351560_351573(Microsoft.CodeAnalysis.CSharp.BoundLambda
                this_param)
                {
                    var return_v = this_param.Symbol;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 351560, 351573);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Location
                f_10899_351560_351592(Microsoft.CodeAnalysis.CSharp.Symbols.LambdaSymbol
                this_param)
                {
                    var return_v = this_param.DiagnosticLocation;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 351560, 351592);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.UnboundLambda
                f_10899_351608_351628(Microsoft.CodeAnalysis.CSharp.BoundLambda
                this_param)
                {
                    var return_v = this_param.UnboundLambda;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 351608, 351628);
                    return return_v;
                }


                int
                f_10899_351516_351629(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.Location
                location, Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                delegateType, Microsoft.CodeAnalysis.CSharp.UnboundLambda
                unboundLambda)
                {
                    this_param.ReportNullabilityMismatchWithTargetDelegate(location, delegateType, unboundLambda);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 351516, 351629);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?
                f_10899_351756_351764(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 351756, 351764);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                f_10899_351996_352021(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                node)
                {
                    var return_v = this_param.VisitRvalueWithState(node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 351996, 352021);
                    return return_v;
                }


                int
                f_10899_352048_352148(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                value, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                targetType, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                valueType, bool
                useLegacyWarnings)
                {
                    this_param.ReportNullableAssignmentIfNecessary(value, targetType, valueType, useLegacyWarnings: useLegacyWarnings);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 352048, 352148);
                    return 0;
                }


                bool
                f_10899_352179_352196_M(bool
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 352179, 352196);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Location
                f_10899_352298_352317(Microsoft.CodeAnalysis.SyntaxNode
                this_param)
                {
                    var return_v = this_param.Location;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 352298, 352317);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                f_10899_352333_352366(Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                this_param)
                {
                    var return_v = this_param.DelegateInvokeMethod;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 352333, 352366);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                f_10899_352368_352398(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                type)
                {
                    var return_v = type.DelegateInvokeMethod();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 352368, 352398);
                    return return_v;
                }


                int
                f_10899_352254_352432(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.Location
                location, Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                targetType, Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                targetInvokeMethod, Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                sourceInvokeMethod, bool
                invokedAsExtensionMethod)
                {
                    this_param.ReportNullabilityMismatchWithTargetDelegate(location, (Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol)targetType, targetInvokeMethod, sourceInvokeMethod, invokedAsExtensionMethod: invokedAsExtensionMethod);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 352254, 352432);
                    return 0;
                }


                int
                f_10899_352582_352618(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                expression, ref Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState
                state)
                {
                    this_param.LearnFromNonNullTest(expression, ref state);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 352582, 352618);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10899_352730_352743(Microsoft.CodeAnalysis.CSharp.BoundDelegateCreationExpression
                this_param)
                {
                    var return_v = this_param.Argument;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 352730, 352743);
                    return return_v;
                }


                int
                f_10899_352718_352744(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                node)
                {
                    this_param.VisitRvalue(node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 352718, 352744);
                    return 0;
                }


                int
                f_10899_352804_352826(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundDelegateCreationExpression
                node)
                {
                    this_param.SetNotNullResult((Microsoft.CodeAnalysis.CSharp.BoundExpression)node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 352804, 352826);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 349940, 352864);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 349940, 352864);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override BoundNode? VisitMethodGroup(BoundMethodGroup node)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 352876, 353604);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 352967, 353001);

                f_10899_352967_353000(!IsConditionalState);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 353017, 353052);

                var
                receiverOpt = f_10899_353035_353051(node)
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 353066, 353528) || true) && (receiverOpt != null)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 353066, 353528);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 353123, 353148);

                    f_10899_353123_353147(this, receiverOpt);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 353454, 353513);

                    f_10899_353454_353512(this, receiverOpt, f_10899_353501_353511());
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 353066, 353528);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 353544, 353567);

                f_10899_353544_353566(this, node);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 353581, 353593);

                return null;
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 352876, 353604);

                int
                f_10899_352967_353000(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 352967, 353000);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression?
                f_10899_353035_353051(Microsoft.CodeAnalysis.CSharp.BoundMethodGroup
                this_param)
                {
                    var return_v = this_param.ReceiverOpt;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 353035, 353051);
                    return return_v;
                }


                int
                f_10899_353123_353147(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                node)
                {
                    this_param.VisitRvalue(node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 353123, 353147);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                f_10899_353501_353511()
                {
                    var return_v = ResultType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 353501, 353511);
                    return return_v;
                }


                int
                f_10899_353454_353512(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                receiver, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                type)
                {
                    this_param.SetMethodGroupReceiverNullability(receiver, type);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 353454, 353512);
                    return 0;
                }


                int
                f_10899_353544_353566(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundMethodGroup
                node)
                {
                    this_param.SetNotNullResult((Microsoft.CodeAnalysis.CSharp.BoundExpression)node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 353544, 353566);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 352876, 353604);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 352876, 353604);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private bool TryGetMethodGroupReceiverNullability([NotNullWhen(true)] BoundExpression? receiverOpt, out TypeWithState type)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 353616, 354108);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 353764, 354097) || true) && (receiverOpt != null && (DynAbs.Tracing.TraceSender.Expression_True(10899, 353768, 353842) && _methodGroupReceiverMapOpt != null) && (DynAbs.Tracing.TraceSender.Expression_True(10899, 353768, 353924) && f_10899_353863_353924(_methodGroupReceiverMapOpt, receiverOpt, out type)))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 353764, 354097);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 353958, 353970);

                    return true;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 353764, 354097);
                }

                else

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 353764, 354097);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 354036, 354051);

                    type = default;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 354069, 354082);

                    return false;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 353764, 354097);
                }
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 353616, 354108);

                bool
                f_10899_353863_353924(Microsoft.CodeAnalysis.PooledObjects.PooledDictionary<Microsoft.CodeAnalysis.CSharp.BoundExpression, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState>
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                key, out Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                value)
                {
                    var return_v = this_param.TryGetValue(key, out value);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 353863, 353924);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 353616, 354108);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 353616, 354108);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private void SetMethodGroupReceiverNullability(BoundExpression receiver, TypeWithState type)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 354120, 354400);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 354237, 354331);

                if (_methodGroupReceiverMapOpt is null)
                    DynAbs.Tracing.TraceSender.TraceEnterExpression(10899, 354237, 354331);

                _methodGroupReceiverMapOpt ??= f_10899_354268_354330();
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 354345, 354389);

                _methodGroupReceiverMapOpt[receiver] = type;
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 354120, 354400);

                Microsoft.CodeAnalysis.PooledObjects.PooledDictionary<Microsoft.CodeAnalysis.CSharp.BoundExpression, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState>
                f_10899_354268_354330()
                {
                    var return_v = PooledDictionary<BoundExpression, TypeWithState>.GetInstance();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 354268, 354330);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 354120, 354400);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 354120, 354400);
            }
        }

        private MethodSymbol CheckMethodGroupReceiverNullability(BoundMethodGroup group, ImmutableArray<ParameterSymbol> parameters, MethodSymbol method, bool invokedAsExtensionMethod)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 354412, 356776);
                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState receiverType = default(Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 354613, 354649);

                var
                receiverOpt = f_10899_354631_354648(group)
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 354663, 356737) || true) && (f_10899_354667_354748(this, receiverOpt, out receiverType))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 354663, 356737);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 354782, 354808);

                    var
                    syntax = group.Syntax
                    ;

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 354826, 354981) || true) && (!invokedAsExtensionMethod)
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 354826, 354981);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 354897, 354962);

                        method = (MethodSymbol)f_10899_354920_354961(receiverType.Type, method);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 354826, 354981);
                    }

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 354999, 356179) || true) && (f_10899_355003_355025(method) && (DynAbs.Tracing.TraceSender.Expression_True(10899, 355003, 355067) && f_10899_355029_355067(group.Syntax)))
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 354999, 356179);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 355109, 355169);

                        var
                        arguments = f_10899_355125_355168()
                        ;

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 355191, 355398) || true) && (invokedAsExtensionMethod)
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 355191, 355398);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 355269, 355375);

                            f_10899_355269_355374(arguments, f_10899_355283_355373(receiverOpt, receiverType.ToTypeWithAnnotations(compilation)));
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 355191, 355398);
                        }
                        try
                        {
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 355601, 355937);
                            foreach (var parameter in f_10899_355627_355637_I(parameters))
                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 355601, 355937);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 355687, 355737);

                                var
                                parameterType = f_10899_355707_355736(parameter)
                                ;
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 355763, 355914);

                                f_10899_355763_355913(arguments, f_10899_355777_355912(syntax, f_10899_355820_355857(syntax, parameter), parameterType.NullableAnnotation, parameterType.Type));
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 355601, 355937);
                            }
                        }
                        catch (System.Exception)
                        {
                            DynAbs.Tracing.TraceSender.TraceExitLoopByException(10899, 1, 337);
                            throw;
                        }
                        finally
                        {
                            DynAbs.Tracing.TraceSender.TraceExitLoop(10899, 1, 337);
                        }
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 355959, 355991);

                        f_10899_355959_355990(_binder is object);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 356013, 356160);

                        method = f_10899_356022_356159(this, method, f_10899_356055_356085(arguments), argumentRefKindsOpt: default, argsToParamsOpt: default, expanded: false);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 354999, 356179);
                    }

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 356197, 356558) || true) && (invokedAsExtensionMethod)
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 356197, 356558);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 356267, 356373);

                        f_10899_356267_356372(this, receiverOpt, Conversion.Identity, f_10899_356337_356354(method)[0], receiverType);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 356197, 356558);
                    }

                    else

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 356197, 356558);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 356455, 356539);

                        f_10899_356455_356538(this, receiverOpt, receiverType, checkNullableValueType: false);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 356197, 356558);
                    }

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 356576, 356722) || true) && (f_10899_356580_356622(method))
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 356576, 356722);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 356664, 356703);

                        f_10899_356664_356702(this, syntax, method);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 356576, 356722);
                    }
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 354663, 356737);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 356751, 356765);

                return method;
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 354412, 356776);

                Microsoft.CodeAnalysis.CSharp.BoundExpression?
                f_10899_354631_354648(Microsoft.CodeAnalysis.CSharp.BoundMethodGroup
                this_param)
                {
                    var return_v = this_param.ReceiverOpt;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 354631, 354648);
                    return return_v;
                }


                bool
                f_10899_354667_354748(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression?
                receiverOpt, out Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                type)
                {
                    var return_v = this_param.TryGetMethodGroupReceiverNullability(receiverOpt, out type);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 354667, 354748);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbol
                f_10899_354920_354961(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?
                type, Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                symbol)
                {
                    var return_v = AsMemberOfType(type, (Microsoft.CodeAnalysis.CSharp.Symbol)symbol);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 354920, 354961);
                    return return_v;
                }


                bool
                f_10899_355003_355025(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                this_param)
                {
                    var return_v = this_param.IsGenericMethod;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 355003, 355025);
                    return return_v;
                }


                bool
                f_10899_355029_355067(Microsoft.CodeAnalysis.SyntaxNode
                syntax)
                {
                    var return_v = HasImplicitTypeArguments(syntax);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 355029, 355067);
                    return return_v;
                }


                Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                f_10899_355125_355168()
                {
                    var return_v = ArrayBuilder<BoundExpression>.GetInstance();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 355125, 355168);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10899_355283_355373(Microsoft.CodeAnalysis.CSharp.BoundExpression
                expr, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                type)
                {
                    var return_v = CreatePlaceholderIfNecessary(expr, type);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 355283, 355373);
                    return return_v;
                }


                int
                f_10899_355269_355374(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                item)
                {
                    this_param.Add(item);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 355269, 355374);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                f_10899_355707_355736(Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol
                this_param)
                {
                    var return_v = this_param.TypeWithAnnotations;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 355707, 355736);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundParameter
                f_10899_355820_355857(Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol
                parameterSymbol)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.BoundParameter(syntax, parameterSymbol);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 355820, 355857);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpressionWithNullability
                f_10899_355777_355912(Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.CSharp.BoundParameter
                expression, Microsoft.CodeAnalysis.CSharp.NullableAnnotation
                nullableAnnotation, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                type)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.BoundExpressionWithNullability(syntax, (Microsoft.CodeAnalysis.CSharp.BoundExpression)expression, nullableAnnotation, type);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 355777, 355912);
                    return return_v;
                }


                int
                f_10899_355763_355913(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpressionWithNullability
                item)
                {
                    this_param.Add((Microsoft.CodeAnalysis.CSharp.BoundExpression)item);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 355763, 355913);
                    return 0;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol>
                f_10899_355627_355637_I(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol>
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 355627, 355637);
                    return return_v;
                }


                int
                f_10899_355959_355990(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 355959, 355990);
                    return 0;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                f_10899_356055_356085(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                this_param)
                {
                    var return_v = this_param.ToImmutableAndFree();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 356055, 356085);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                f_10899_356022_356159(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                method, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                arguments, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.RefKind>
                argumentRefKindsOpt, System.Collections.Immutable.ImmutableArray<int>
                argsToParamsOpt, bool
                expanded)
                {
                    var return_v = this_param.InferMethodTypeArguments(method, arguments, argumentRefKindsOpt: argumentRefKindsOpt, argsToParamsOpt: argsToParamsOpt, expanded: expanded);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 356022, 356159);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol>
                f_10899_356337_356354(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                this_param)
                {
                    var return_v = this_param.Parameters;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 356337, 356354);
                    return return_v;
                }


                int
                f_10899_356267_356372(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                expr, Microsoft.CodeAnalysis.CSharp.Conversion
                conversion, Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol
                parameter, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                result)
                {
                    this_param.CheckExtensionMethodThisNullability(expr, conversion, parameter, result);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 356267, 356372);
                    return 0;
                }


                bool
                f_10899_356455_356538(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                receiverOpt, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                resultType, bool
                checkNullableValueType)
                {
                    var return_v = this_param.CheckPossibleNullReceiver(receiverOpt, resultType, checkNullableValueType: checkNullableValueType);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 356455, 356538);
                    return return_v;
                }


                bool
                f_10899_356580_356622(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                method)
                {
                    var return_v = ConstraintsHelper.RequiresChecking(method);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 356580, 356622);
                    return return_v;
                }


                int
                f_10899_356664_356702(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                method)
                {
                    this_param.CheckMethodConstraints(syntax, method);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 356664, 356702);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 354412, 356776);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 354412, 356776);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override BoundNode? VisitLambda(BoundLambda node)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 356788, 357120);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 357060, 357083);

                f_10899_357060_357082(this, node);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 357097, 357109);

                return null;
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 356788, 357120);

                int
                f_10899_357060_357082(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundLambda
                node)
                {
                    this_param.SetNotNullResult((Microsoft.CodeAnalysis.CSharp.BoundExpression)node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 357060, 357082);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 356788, 357120);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 356788, 357120);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private void VisitLambda(BoundLambda node, NamedTypeSymbol? delegateTypeOpt, Optional<LocalState> initialState = default)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 357132, 358030);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 357301, 357375);

                f_10899_357301_357374(delegateTypeOpt is null || (DynAbs.Tracing.TraceSender.Expression_False(10899, 357314, 357373) || f_10899_357341_357373(delegateTypeOpt)));
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 357391, 357456);

                var
                delegateInvokeMethod = f_10899_357418_357455_M(DynAbs.Tracing.TraceSender.TraceConditionalAccessExpression(delegateTypeOpt, 10899, 357418, 357455)?.DelegateInvokeMethod)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 357470, 357569);

                bool
                useDelegateInvokeParameterTypes = f_10899_357509_357568(node, delegateInvokeMethod)
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 357583, 357754) || true) && (useDelegateInvokeParameterTypes && (DynAbs.Tracing.TraceSender.Expression_True(10899, 357587, 357651) && _snapshotBuilderOpt is object))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 357583, 357754);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 357685, 357739);

                    f_10899_357685_357738(this, node, f_10899_357708_357719(node), delegateTypeOpt!);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 357583, 357754);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 357770, 358019);

                f_10899_357770_358018(this, node, f_10899_357840_357851(node), (DynAbs.Tracing.TraceSender.Conditional_F1(10899, 357870, 357891) || ((initialState.HasValue && DynAbs.Tracing.TraceSender.Conditional_F2(10899, 357894, 357912)) || DynAbs.Tracing.TraceSender.Conditional_F3(10899, 357915, 357928))) ? initialState.Value : State.Clone(), delegateInvokeMethod, useDelegateInvokeParameterTypes);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 357132, 358030);

                bool
                f_10899_357341_357373(Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                type)
                {
                    var return_v = type.IsDelegateType();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 357341, 357373);
                    return return_v;
                }


                int
                f_10899_357301_357374(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 357301, 357374);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol?
                f_10899_357418_357455_M(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol?
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 357418, 357455);
                    return return_v;
                }


                bool
                f_10899_357509_357568(Microsoft.CodeAnalysis.CSharp.BoundLambda
                lambda, Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol?
                delegateInvokeMethod)
                {
                    var return_v = UseDelegateInvokeParameterTypes(lambda, delegateInvokeMethod);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 357509, 357568);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.LambdaSymbol
                f_10899_357708_357719(Microsoft.CodeAnalysis.CSharp.BoundLambda
                this_param)
                {
                    var return_v = this_param.Symbol;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 357708, 357719);
                    return return_v;
                }


                int
                f_10899_357685_357738(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundLambda
                node, Microsoft.CodeAnalysis.CSharp.Symbols.LambdaSymbol
                originalSymbol, Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                updatedSymbol)
                {
                    this_param.SetUpdatedSymbol((Microsoft.CodeAnalysis.CSharp.BoundNode)node, (Microsoft.CodeAnalysis.CSharp.Symbol)originalSymbol, (Microsoft.CodeAnalysis.CSharp.Symbol)updatedSymbol);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 357685, 357738);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.LambdaSymbol
                f_10899_357840_357851(Microsoft.CodeAnalysis.CSharp.BoundLambda
                this_param)
                {
                    var return_v = this_param.Symbol;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 357840, 357851);
                    return return_v;
                }


                int
                f_10899_357770_358018(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundLambda
                lambdaOrFunction, Microsoft.CodeAnalysis.CSharp.Symbols.LambdaSymbol
                lambdaOrFunctionSymbol, Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState
                state, Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol?
                delegateInvokeMethod, bool
                useDelegateInvokeParameterTypes)
                {
                    this_param.AnalyzeLocalFunctionOrLambda((Microsoft.CodeAnalysis.CSharp.IBoundLambdaOrFunction)lambdaOrFunction, (Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol)lambdaOrFunctionSymbol, state, delegateInvokeMethod, useDelegateInvokeParameterTypes);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 357770, 358018);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 357132, 358030);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 357132, 358030);
            }
        }

        private static bool UseDelegateInvokeParameterTypes(BoundLambda lambda, MethodSymbol? delegateInvokeMethod)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterStaticMethod(10899, 358042, 358280);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 358174, 358269);

                return delegateInvokeMethod is object && (DynAbs.Tracing.TraceSender.Expression_True(10899, 358181, 358268) && f_10899_358215_358268_M(!f_10899_358216_358236(lambda).HasExplicitlyTypedParameterList));
                DynAbs.Tracing.TraceSender.TraceExitStaticMethod(10899, 358042, 358280);

                Microsoft.CodeAnalysis.CSharp.UnboundLambda
                f_10899_358216_358236(Microsoft.CodeAnalysis.CSharp.BoundLambda
                this_param)
                {
                    var return_v = this_param.UnboundLambda;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 358216, 358236);
                    return return_v;
                }


                bool
                f_10899_358215_358268_M(bool
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 358215, 358268);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 358042, 358280);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 358042, 358280);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override BoundNode? VisitUnboundLambda(UnboundLambda node)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 358292, 358716);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 358544, 358585);

                var
                lambda = f_10899_358557_358584(node)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 358599, 358642);

                f_10899_358599_358641(this, lambda, delegateTypeOpt: null);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 358656, 358679);

                f_10899_358656_358678(this, node);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 358693, 358705);

                return null;
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 358292, 358716);

                Microsoft.CodeAnalysis.CSharp.BoundLambda
                f_10899_358557_358584(Microsoft.CodeAnalysis.CSharp.UnboundLambda
                this_param)
                {
                    var return_v = this_param.BindForErrorRecovery();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 358557, 358584);
                    return return_v;
                }


                int
                f_10899_358599_358641(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundLambda
                node, Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol?
                delegateTypeOpt)
                {
                    this_param.VisitLambda(node, delegateTypeOpt: delegateTypeOpt);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 358599, 358641);
                    return 0;
                }


                int
                f_10899_358656_358678(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.UnboundLambda
                node)
                {
                    this_param.SetNotNullResult((Microsoft.CodeAnalysis.CSharp.BoundExpression)node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 358656, 358678);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 358292, 358716);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 358292, 358716);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override BoundNode? VisitThisReference(BoundThisReference node)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 358728, 358891);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 358823, 358854);

                f_10899_358823_358853(this, node);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 358868, 358880);

                return null;
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 358728, 358891);

                int
                f_10899_358823_358853(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundThisReference
                node)
                {
                    this_param.VisitThisOrBaseReference((Microsoft.CodeAnalysis.CSharp.BoundExpression)node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 358823, 358853);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 358728, 358891);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 358728, 358891);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private void VisitThisOrBaseReference(BoundExpression node)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 358903, 359238);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 358987, 359065);

                var
                rvalueResult = TypeWithState.Create(f_10899_359027_359036(node), NullableFlowState.NotNull)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 359079, 359169);

                var
                lvalueResult = TypeWithAnnotations.Create(f_10899_359125_359134(node), NullableAnnotation.NotAnnotated)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 359183, 359227);

                f_10899_359183_359226(this, node, rvalueResult, lvalueResult);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 358903, 359238);

                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?
                f_10899_359027_359036(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 359027, 359036);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?
                f_10899_359125_359134(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 359125, 359134);
                    return return_v;
                }


                int
                f_10899_359183_359226(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                expression, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                resultType, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                lvalueType)
                {
                    this_param.SetResult(expression, resultType, lvalueType);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 359183, 359226);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 358903, 359238);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 358903, 359238);
            }
        }

        public override BoundNode? VisitParameter(BoundParameter node)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 359250, 359722);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 359337, 359374);

                var
                parameter = f_10899_359353_359373(node)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 359388, 359426);

                int
                slot = f_10899_359399_359425(this, parameter)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 359440, 359498);

                var
                parameterType = f_10899_359460_359497(this, parameter)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 359512, 359600);

                var
                typeWithState = f_10899_359532_359599(parameterType, f_10899_359565_359598(parameter))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 359614, 359685);

                f_10899_359614_359684(this, node, f_10899_359630_359668(this, typeWithState, slot), parameterType);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 359699, 359711);

                return null;
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 359250, 359722);

                Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol
                f_10899_359353_359373(Microsoft.CodeAnalysis.CSharp.BoundParameter
                this_param)
                {
                    var return_v = this_param.ParameterSymbol;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 359353, 359373);
                    return return_v;
                }


                int
                f_10899_359399_359425(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol
                symbol)
                {
                    var return_v = this_param.GetOrCreateSlot((Microsoft.CodeAnalysis.CSharp.Symbol)symbol);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 359399, 359425);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                f_10899_359460_359497(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol
                parameter)
                {
                    var return_v = this_param.GetDeclaredParameterResult(parameter);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 359460, 359497);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.FlowAnalysisAnnotations
                f_10899_359565_359598(Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol
                this_param)
                {
                    var return_v = this_param.FlowAnalysisAnnotations;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 359565, 359598);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                f_10899_359532_359599(Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                parameterType, Microsoft.CodeAnalysis.CSharp.Symbols.FlowAnalysisAnnotations
                parameterAnnotations)
                {
                    var return_v = GetParameterState(parameterType, parameterAnnotations);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 359532, 359599);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                f_10899_359630_359668(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                type, int
                slot)
                {
                    var return_v = this_param.GetAdjustedResult(type, slot);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 359630, 359668);
                    return return_v;
                }


                int
                f_10899_359614_359684(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundParameter
                expression, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                resultType, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                lvalueType)
                {
                    this_param.SetResult((Microsoft.CodeAnalysis.CSharp.BoundExpression)expression, resultType, lvalueType);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 359614, 359684);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 359250, 359722);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 359250, 359722);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override BoundNode? VisitAssignmentOperator(BoundAssignmentOperator node)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 359734, 363329);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 359839, 359873);

                f_10899_359839_359872(!IsConditionalState);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 359889, 359910);

                var
                left = f_10899_359900_359909(node)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 359924, 360951);

                switch (left)
                {

                    case BoundFieldAccess { ExpressionSymbol: FieldSymbol { AssociatedSymbol: PropertySymbol autoProperty } } fieldAccess:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 359924, 360951);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 360409, 360566);

                        left = f_10899_360416_360565(fieldAccess.Syntax, f_10899_360460_360483(fieldAccess), autoProperty, LookupResultKind.Viable, f_10899_360524_360541(autoProperty), f_10899_360543_360564(fieldAccess));
                        DynAbs.Tracing.TraceSender.TraceBreak(10899, 360588, 360594);

                        break;
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 359924, 360951);

                    case BoundFieldAccess { ExpressionSymbol: FieldSymbol { AssociatedSymbol: EventSymbol @event } } fieldAccess:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 359924, 360951);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 360743, 360908);

                        left = f_10899_360750_360907(fieldAccess.Syntax, f_10899_360791_360814(fieldAccess), @event, isUsableAsField: true, LookupResultKind.Viable, f_10899_360872_360883(@event), f_10899_360885_360906(fieldAccess));
                        DynAbs.Tracing.TraceSender.TraceBreak(10899, 360930, 360936);

                        break;
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 359924, 360951);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 360967, 360990);

                var
                right = f_10899_360979_360989(node)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 361004, 361022);

                f_10899_361004_361021(this, left);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 361117, 361127);

                f_10899_361117_361126(this);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 361143, 361212);

                FlowAnalysisAnnotations
                leftAnnotations = f_10899_361185_361211(this, left)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 361226, 361278);

                TypeWithAnnotations
                declaredType = f_10899_361261_361277()
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 361292, 361383);

                TypeWithAnnotations
                leftLValueType = f_10899_361329_361382(declaredType, leftAnnotations)
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 361399, 363290) || true) && (f_10899_361403_361412(left) == BoundKind.EventAccess && (DynAbs.Tracing.TraceSender.Expression_True(10899, 361403, 361499) && f_10899_361441_361499(f_10899_361441_361477(((BoundEventAccess)left)))))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 361399, 363290);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 361757, 361776);

                    f_10899_361757_361775(this, right);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 361794, 361817);

                    f_10899_361794_361816(this, node);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 361399, 363290);
                }

                else

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 361399, 363290);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 361883, 361908);

                    TypeWithState
                    rightState
                    = default(TypeWithState);

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 361926, 362401) || true) && (f_10899_361930_361941_M(!node.IsRef))
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 361926, 362401);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 361983, 362030);

                        var
                        discarded = left is BoundDiscardExpression
                        ;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 362052, 362245);

                        rightState = f_10899_362065_362244(this, right, targetTypeOpt: (DynAbs.Tracing.TraceSender.Conditional_F1(10899, 362119, 362128) || ((discarded && DynAbs.Tracing.TraceSender.Conditional_F2(10899, 362131, 362138)) || DynAbs.Tracing.TraceSender.Conditional_F3(10899, 362141, 362155))) ? default : leftLValueType, f_10899_362157_362196(left, leftLValueType), trackMembers: true, AssignmentKind.Assignment);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 361926, 362401);
                    }

                    else

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 361926, 362401);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 362327, 362382);

                        rightState = f_10899_362340_362381(this, right, leftLValueType);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 361926, 362401);
                    }
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 362525, 362607);

                    f_10899_362525_362606(this, rightState, leftAnnotations, f_10899_362584_362605(right.Syntax));
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 362627, 362664);

                    f_10899_362627_362663(this, left, ref rightState);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 362682, 362782);

                    f_10899_362682_362781(this, right, leftLValueType, f_10899_362737_362751(this, left), rightState, f_10899_362765_362780(this, right));

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 362802, 363275) || true) && (left is BoundDiscardExpression)
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 362802, 363275);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 362878, 362941);

                        var
                        lvalueType = rightState.ToTypeWithAnnotations(compilation)
                        ;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 362963, 363019);

                        f_10899_362963_363018(this, left, rightState, lvalueType, isLvalue: true);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 363041, 363081);

                        f_10899_363041_363080(this, node, rightState, lvalueType);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 362802, 363275);
                    }

                    else

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 362802, 363275);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 363163, 363256);

                        f_10899_363163_363255(this, node, TypeWithState.Create(leftLValueType.Type, rightState.State), leftLValueType);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 362802, 363275);
                    }
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 361399, 363290);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 363306, 363318);

                return null;
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 359734, 363329);

                int
                f_10899_359839_359872(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 359839, 359872);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10899_359900_359909(Microsoft.CodeAnalysis.CSharp.BoundAssignmentOperator
                this_param)
                {
                    var return_v = this_param.Left;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 359900, 359909);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression?
                f_10899_360460_360483(Microsoft.CodeAnalysis.CSharp.BoundFieldAccess
                this_param)
                {
                    var return_v = this_param.ReceiverOpt;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 360460, 360483);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                f_10899_360524_360541(Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 360524, 360541);
                    return return_v;
                }


                bool
                f_10899_360543_360564(Microsoft.CodeAnalysis.CSharp.BoundFieldAccess
                this_param)
                {
                    var return_v = this_param.HasErrors;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 360543, 360564);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundPropertyAccess
                f_10899_360416_360565(Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.CSharp.BoundExpression?
                receiverOpt, Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol
                propertySymbol, Microsoft.CodeAnalysis.CSharp.LookupResultKind
                resultKind, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                type, bool
                hasErrors)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.BoundPropertyAccess(syntax, receiverOpt, propertySymbol, resultKind, type, hasErrors);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 360416, 360565);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression?
                f_10899_360791_360814(Microsoft.CodeAnalysis.CSharp.BoundFieldAccess
                this_param)
                {
                    var return_v = this_param.ReceiverOpt;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 360791, 360814);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                f_10899_360872_360883(Microsoft.CodeAnalysis.CSharp.Symbols.EventSymbol
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 360872, 360883);
                    return return_v;
                }


                bool
                f_10899_360885_360906(Microsoft.CodeAnalysis.CSharp.BoundFieldAccess
                this_param)
                {
                    var return_v = this_param.HasErrors;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 360885, 360906);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundEventAccess
                f_10899_360750_360907(Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.CSharp.BoundExpression?
                receiverOpt, Microsoft.CodeAnalysis.CSharp.Symbols.EventSymbol
                eventSymbol, bool
                isUsableAsField, Microsoft.CodeAnalysis.CSharp.LookupResultKind
                resultKind, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                type, bool
                hasErrors)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.BoundEventAccess(syntax, receiverOpt, eventSymbol, isUsableAsField: isUsableAsField, resultKind, type, hasErrors);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 360750, 360907);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10899_360979_360989(Microsoft.CodeAnalysis.CSharp.BoundAssignmentOperator
                this_param)
                {
                    var return_v = this_param.Right;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 360979, 360989);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundNode
                f_10899_361004_361021(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                node)
                {
                    var return_v = this_param.VisitLValue((Microsoft.CodeAnalysis.CSharp.BoundNode)node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 361004, 361021);
                    return return_v;
                }


                int
                f_10899_361117_361126(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param)
                {
                    this_param.Unsplit();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 361117, 361126);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.FlowAnalysisAnnotations
                f_10899_361185_361211(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                expr)
                {
                    var return_v = this_param.GetLValueAnnotations(expr);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 361185, 361211);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                f_10899_361261_361277()
                {
                    var return_v = LvalueResultType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 361261, 361277);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                f_10899_361329_361382(Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                declaredType, Microsoft.CodeAnalysis.CSharp.Symbols.FlowAnalysisAnnotations
                flowAnalysisAnnotations)
                {
                    var return_v = ApplyLValueAnnotations(declaredType, flowAnalysisAnnotations);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 361329, 361382);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundKind
                f_10899_361403_361412(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.Kind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 361403, 361412);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.EventSymbol
                f_10899_361441_361477(Microsoft.CodeAnalysis.CSharp.BoundEventAccess
                this_param)
                {
                    var return_v = this_param.EventSymbol;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 361441, 361477);
                    return return_v;
                }


                bool
                f_10899_361441_361499(Microsoft.CodeAnalysis.CSharp.Symbols.EventSymbol
                this_param)
                {
                    var return_v = this_param.IsWindowsRuntimeEvent;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 361441, 361499);
                    return return_v;
                }


                int
                f_10899_361757_361775(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                node)
                {
                    this_param.VisitRvalue(node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 361757, 361775);
                    return 0;
                }


                int
                f_10899_361794_361816(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundAssignmentOperator
                node)
                {
                    this_param.SetNotNullResult((Microsoft.CodeAnalysis.CSharp.BoundExpression)node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 361794, 361816);
                    return 0;
                }


                bool
                f_10899_361930_361941_M(bool
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 361930, 361941);
                    return return_v;
                }


                bool
                f_10899_362157_362196(Microsoft.CodeAnalysis.CSharp.BoundExpression
                expr, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                exprType)
                {
                    var return_v = UseLegacyWarnings(expr, exprType);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 362157, 362196);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                f_10899_362065_362244(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                expr, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                targetTypeOpt, bool
                useLegacyWarnings, bool
                trackMembers, Microsoft.CodeAnalysis.CSharp.NullableWalker.AssignmentKind
                assignmentKind)
                {
                    var return_v = this_param.VisitOptionalImplicitConversion(expr, targetTypeOpt: targetTypeOpt, useLegacyWarnings, trackMembers: trackMembers, assignmentKind);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 362065, 362244);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                f_10899_362340_362381(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                expr, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                destinationType)
                {
                    var return_v = this_param.VisitRefExpression(expr, destinationType);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 362340, 362381);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Location
                f_10899_362584_362605(Microsoft.CodeAnalysis.SyntaxNode
                this_param)
                {
                    var return_v = this_param.Location;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 362584, 362605);
                    return return_v;
                }


                bool
                f_10899_362525_362606(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                state, Microsoft.CodeAnalysis.CSharp.Symbols.FlowAnalysisAnnotations
                annotations, Microsoft.CodeAnalysis.Location
                location)
                {
                    var return_v = this_param.CheckDisallowedNullAssignment(state, annotations, location);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 362525, 362606);
                    return return_v;
                }


                int
                f_10899_362627_362663(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                left, ref Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                rightState)
                {
                    this_param.AdjustSetValue(left, ref rightState);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 362627, 362663);
                    return 0;
                }


                int
                f_10899_362737_362751(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                node)
                {
                    var return_v = this_param.MakeSlot(node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 362737, 362751);
                    return return_v;
                }


                int
                f_10899_362765_362780(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                node)
                {
                    var return_v = this_param.MakeSlot(node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 362765, 362780);
                    return return_v;
                }


                int
                f_10899_362682_362781(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                valueOpt, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                targetType, int
                targetSlot, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                valueType, int
                valueSlot)
                {
                    this_param.TrackNullableStateForAssignment(valueOpt, targetType, targetSlot, valueType, valueSlot);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 362682, 362781);
                    return 0;
                }


                int
                f_10899_362963_363018(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                expression, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                resultType, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                lvalueType, bool
                isLvalue)
                {
                    this_param.SetResult(expression, resultType, lvalueType, isLvalue: (bool?)isLvalue);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 362963, 363018);
                    return 0;
                }


                int
                f_10899_363041_363080(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundAssignmentOperator
                expression, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                resultType, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                lvalueType)
                {
                    this_param.SetResult((Microsoft.CodeAnalysis.CSharp.BoundExpression)expression, resultType, lvalueType);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 363041, 363080);
                    return 0;
                }


                int
                f_10899_363163_363255(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundAssignmentOperator
                expression, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                resultType, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                lvalueType)
                {
                    this_param.SetResult((Microsoft.CodeAnalysis.CSharp.BoundExpression)expression, resultType, lvalueType);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 363163, 363255);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 359734, 363329);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 359734, 363329);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private bool IsPropertyOutputMoreStrictThanInput(PropertySymbol property)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 363341, 363985);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 363439, 363479);

                var
                type = f_10899_363450_363478(property)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 363493, 363603);

                var
                annotations = (DynAbs.Tracing.TraceSender.Conditional_F1(10899, 363511, 363531) || ((f_10899_363511_363531() && DynAbs.Tracing.TraceSender.Conditional_F2(10899, 363534, 363562)) || DynAbs.Tracing.TraceSender.Conditional_F3(10899, 363565, 363602))) ? FlowAnalysisAnnotations.None : f_10899_363565_363602(property)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 363617, 363676);

                var
                lValueType = f_10899_363634_363675(type, annotations)
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 363690, 363832) || true) && (f_10899_363694_363737(lValueType.NullableAnnotation) || (DynAbs.Tracing.TraceSender.Expression_False(10899, 363694, 363770) || f_10899_363741_363770_M(!lValueType.CanBeAssignedNull)))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 363690, 363832);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 363804, 363817);

                    return false;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 363690, 363832);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 363848, 363932);

                var
                rValueType = f_10899_363865_363931(type.ToTypeWithState(), annotations)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 363946, 363974);

                return rValueType.IsNotNull;
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 363341, 363985);

                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                f_10899_363450_363478(Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol
                this_param)
                {
                    var return_v = this_param.TypeWithAnnotations;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 363450, 363478);
                    return return_v;
                }


                bool
                f_10899_363511_363531()
                {
                    var return_v = IsAnalyzingAttribute;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 363511, 363531);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.FlowAnalysisAnnotations
                f_10899_363565_363602(Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol
                property)
                {
                    var return_v = property.GetFlowAnalysisAnnotations();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 363565, 363602);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                f_10899_363634_363675(Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                declaredType, Microsoft.CodeAnalysis.CSharp.Symbols.FlowAnalysisAnnotations
                flowAnalysisAnnotations)
                {
                    var return_v = ApplyLValueAnnotations(declaredType, flowAnalysisAnnotations);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 363634, 363675);
                    return return_v;
                }


                bool
                f_10899_363694_363737(Microsoft.CodeAnalysis.CSharp.NullableAnnotation
                annotation)
                {
                    var return_v = annotation.IsOblivious();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 363694, 363737);
                    return return_v;
                }


                bool
                f_10899_363741_363770_M(bool
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 363741, 363770);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                f_10899_363865_363931(Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                typeWithState, Microsoft.CodeAnalysis.CSharp.Symbols.FlowAnalysisAnnotations
                annotations)
                {
                    var return_v = ApplyUnconditionalAnnotations(typeWithState, annotations);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 363865, 363931);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 363341, 363985);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 363341, 363985);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private void AdjustSetValue(BoundExpression left, ref TypeWithState rightState)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 364354, 364888);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 364458, 364696);

                var
                property = left switch
                {
                    BoundPropertyAccess propAccess when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 364517, 364576) && DynAbs.Tracing.TraceSender.Expression_True(10899, 364517, 364576))
=> f_10899_364551_364576(propAccess),
                    BoundIndexerAccess indexerAccess when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 364595, 364652) && DynAbs.Tracing.TraceSender.Expression_True(10899, 364595, 364652))
=> f_10899_364631_364652(indexerAccess),
                    _ when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 364671, 364680) && DynAbs.Tracing.TraceSender.Expression_True(10899, 364671, 364680))
=> null
                }
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 364712, 364877) || true) && (property is not null && (DynAbs.Tracing.TraceSender.Expression_True(10899, 364716, 364785) && f_10899_364740_364785(this, property)))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 364712, 364877);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 364819, 364862);

                    rightState = rightState.WithNotNullState();
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 364712, 364877);
                }
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 364354, 364888);

                Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol
                f_10899_364551_364576(Microsoft.CodeAnalysis.CSharp.BoundPropertyAccess
                this_param)
                {
                    var return_v = this_param.PropertySymbol;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 364551, 364576);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol
                f_10899_364631_364652(Microsoft.CodeAnalysis.CSharp.BoundIndexerAccess
                this_param)
                {
                    var return_v = this_param.Indexer;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 364631, 364652);
                    return return_v;
                }


                bool
                f_10899_364740_364785(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol
                property)
                {
                    var return_v = this_param.IsPropertyOutputMoreStrictThanInput(property);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 364740, 364785);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 364354, 364888);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 364354, 364888);
            }
        }

        private FlowAnalysisAnnotations GetLValueAnnotations(BoundExpression expr)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 364900, 366674);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 365193, 365302) || true) && (f_10899_365197_365217())
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 365193, 365302);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 365251, 365287);

                    return FlowAnalysisAnnotations.None;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 365193, 365302);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 365318, 366178);

                var
                annotations = expr switch
                {
                    BoundPropertyAccess property when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 365380, 365464) && DynAbs.Tracing.TraceSender.Expression_True(10899, 365380, 365464))
=> f_10899_365412_365464(f_10899_365412_365435(property)),
                    BoundIndexerAccess indexer when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 365483, 365557) && DynAbs.Tracing.TraceSender.Expression_True(10899, 365483, 365557))
=> f_10899_365513_365557(f_10899_365513_365528(indexer)),
                    BoundFieldAccess field when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 365576, 365640) && DynAbs.Tracing.TraceSender.Expression_True(10899, 365576, 365640))
=> f_10899_365602_365640(f_10899_365622_365639(field)),
                    BoundObjectInitializerMember { MemberSymbol: PropertySymbol prop } when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 365659, 365762) && DynAbs.Tracing.TraceSender.Expression_True(10899, 365659, 365762))
=> f_10899_365729_365762(prop),
                    BoundObjectInitializerMember { MemberSymbol: FieldSymbol field } when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 365781, 365875) && DynAbs.Tracing.TraceSender.Expression_True(10899, 365781, 365875))
=> f_10899_365849_365875(field),
                    BoundParameter { ParameterSymbol: ParameterSymbol parameter }
when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 365894, 366070) && DynAbs.Tracing.TraceSender.Expression_True(10899, 365894, 366070))
        => f_10899_365980_366070(f_10899_366000_366034(this, parameter) & ~FlowAnalysisAnnotations.NotNull), // NotNull is enforced upon method exit
    _ when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 366129, 366162) && DynAbs.Tracing.TraceSender.Expression_True(10899, 366129, 366162))
=> FlowAnalysisAnnotations.None
                }
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 366194, 366290);

                return annotations & (FlowAnalysisAnnotations.DisallowNull | FlowAnalysisAnnotations.AllowNull);

                static FlowAnalysisAnnotations getFieldAnnotations(FieldSymbol field)
                {
                    try
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterStaticMethod(10899, 366306, 366663);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 366435, 366491);

                        var
                        property = f_10899_366450_366472(field) as PropertySymbol
                        ;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 366509, 366648);

                        return (DynAbs.Tracing.TraceSender.Conditional_F1(10899, 366517, 366533) || ((property != null && DynAbs.Tracing.TraceSender.Conditional_F2(10899, 366557, 366594)) || DynAbs.Tracing.TraceSender.Conditional_F3(10899, 366618, 366647))) ? f_10899_366557_366594(property) : f_10899_366618_366647(field);
                        DynAbs.Tracing.TraceSender.TraceExitStaticMethod(10899, 366306, 366663);

                        Microsoft.CodeAnalysis.CSharp.Symbol
                        f_10899_366450_366472(Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol
                        this_param)
                        {
                            var return_v = this_param.AssociatedSymbol;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 366450, 366472);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.CSharp.Symbols.FlowAnalysisAnnotations
                        f_10899_366557_366594(Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol
                        property)
                        {
                            var return_v = property.GetFlowAnalysisAnnotations();
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 366557, 366594);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.CSharp.Symbols.FlowAnalysisAnnotations
                        f_10899_366618_366647(Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol
                        this_param)
                        {
                            var return_v = this_param.FlowAnalysisAnnotations;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 366618, 366647);
                            return return_v;
                        }

                    }
                    catch
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 366306, 366663);
                        throw;
                    }
                    finally
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 366306, 366663);
                    }
                    throw new System.Exception("Slicer error: unreachable code");
                }
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 364900, 366674);

                bool
                f_10899_365197_365217()
                {
                    var return_v = IsAnalyzingAttribute;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 365197, 365217);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol
                f_10899_365412_365435(Microsoft.CodeAnalysis.CSharp.BoundPropertyAccess
                this_param)
                {
                    var return_v = this_param.PropertySymbol;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 365412, 365435);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.FlowAnalysisAnnotations
                f_10899_365412_365464(Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol
                property)
                {
                    var return_v = property.GetFlowAnalysisAnnotations();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 365412, 365464);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol
                f_10899_365513_365528(Microsoft.CodeAnalysis.CSharp.BoundIndexerAccess
                this_param)
                {
                    var return_v = this_param.Indexer;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 365513, 365528);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.FlowAnalysisAnnotations
                f_10899_365513_365557(Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol
                property)
                {
                    var return_v = property.GetFlowAnalysisAnnotations();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 365513, 365557);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol
                f_10899_365622_365639(Microsoft.CodeAnalysis.CSharp.BoundFieldAccess
                this_param)
                {
                    var return_v = this_param.FieldSymbol;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 365622, 365639);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.FlowAnalysisAnnotations
                f_10899_365602_365640(Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol
                field)
                {
                    var return_v = getFieldAnnotations(field);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 365602, 365640);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.FlowAnalysisAnnotations
                f_10899_365729_365762(Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol
                property)
                {
                    var return_v = property.GetFlowAnalysisAnnotations();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 365729, 365762);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.FlowAnalysisAnnotations
                f_10899_365849_365875(Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol
                field)
                {
                    var return_v = getFieldAnnotations(field);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 365849, 365875);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.FlowAnalysisAnnotations
                f_10899_366000_366034(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol
                parameter)
                {
                    var return_v = this_param.GetParameterAnnotations(parameter);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 366000, 366034);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.FlowAnalysisAnnotations
                f_10899_365980_366070(Microsoft.CodeAnalysis.CSharp.Symbols.FlowAnalysisAnnotations
                outwardAnnotations)
                {
                    var return_v = ToInwardAnnotations(outwardAnnotations);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 365980, 366070);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 364900, 366674);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 364900, 366674);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private static FlowAnalysisAnnotations ToInwardAnnotations(FlowAnalysisAnnotations outwardAnnotations)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterStaticMethod(10899, 366686, 367478);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 366813, 366860);

                var
                annotations = FlowAnalysisAnnotations.None
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 366874, 367104) || true) && ((outwardAnnotations & FlowAnalysisAnnotations.MaybeNull) != 0)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 366874, 367104);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 367040, 367089);

                    annotations |= FlowAnalysisAnnotations.AllowNull;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 366874, 367104);
                }

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 367118, 367434) || true) && ((outwardAnnotations & FlowAnalysisAnnotations.NotNull) == FlowAnalysisAnnotations.NotNull)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 367118, 367434);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 367367, 367419);

                    annotations |= FlowAnalysisAnnotations.DisallowNull;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 367118, 367434);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 367448, 367467);

                return annotations;
                DynAbs.Tracing.TraceSender.TraceExitStaticMethod(10899, 366686, 367478);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 366686, 367478);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 366686, 367478);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private static bool UseLegacyWarnings(BoundExpression expr, TypeWithAnnotations exprType)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterStaticMethod(10899, 367490, 368003);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 367604, 367992);

                switch (f_10899_367612_367621(expr))
                {

                    case BoundKind.Local:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 367604, 367992);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 367698, 367739);

                        return f_10899_367705_367722(expr) == RefKind.None;
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 367604, 367992);

                    case BoundKind.Parameter:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 367604, 367992);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 367804, 367866);

                        RefKind
                        kind = f_10899_367819_367865(f_10899_367819_367857(((BoundParameter)expr)))
                        ;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 367888, 367916);

                        return kind == RefKind.None;
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 367604, 367992);

                    default:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 367604, 367992);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 367964, 367977);

                        return false;
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 367604, 367992);
                }
                DynAbs.Tracing.TraceSender.TraceExitStaticMethod(10899, 367490, 368003);

                Microsoft.CodeAnalysis.CSharp.BoundKind
                f_10899_367612_367621(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.Kind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 367612, 367621);
                    return return_v;
                }


                Microsoft.CodeAnalysis.RefKind
                f_10899_367705_367722(Microsoft.CodeAnalysis.CSharp.BoundExpression
                node)
                {
                    var return_v = node.GetRefKind();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 367705, 367722);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol
                f_10899_367819_367857(Microsoft.CodeAnalysis.CSharp.BoundParameter
                this_param)
                {
                    var return_v = this_param.ParameterSymbol;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 367819, 367857);
                    return return_v;
                }


                Microsoft.CodeAnalysis.RefKind
                f_10899_367819_367865(Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol
                this_param)
                {
                    var return_v = this_param.RefKind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 367819, 367865);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 367490, 368003);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 367490, 368003);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override BoundNode? VisitDeconstructionAssignmentOperator(BoundDeconstructionAssignmentOperator node)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 368015, 368232);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 368148, 368221);

                return f_10899_368155_368220(this, node, rightResultOpt: null);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 368015, 368232);

                Microsoft.CodeAnalysis.CSharp.BoundNode?
                f_10899_368155_368220(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundDeconstructionAssignmentOperator
                node, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState?
                rightResultOpt)
                {
                    var return_v = this_param.VisitDeconstructionAssignmentOperator(node, rightResultOpt: rightResultOpt);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 368155, 368220);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 368015, 368232);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 368015, 368232);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private BoundNode? VisitDeconstructionAssignmentOperator(BoundDeconstructionAssignmentOperator node, TypeWithState? rightResultOpt)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 368244, 369650);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 368400, 368469);

                var
                previousDisableNullabilityAnalysis = _disableNullabilityAnalysis
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 368483, 368518);

                _disableNullabilityAnalysis = true;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 368532, 368553);

                var
                left = f_10899_368543_368552(node)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 368567, 368590);

                var
                right = f_10899_368579_368589(node)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 368604, 368663);

                var
                variables = f_10899_368620_368662(this, left)
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 368679, 369099) || true) && (f_10899_368683_368697(node))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 368679, 369099);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 368902, 368929);

                    f_10899_368902_368928(this, f_10899_368914_368927(right));
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 368679, 369099);
                }

                else

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 368679, 369099);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 368995, 369084);

                    f_10899_368995_369083(this, variables, f_10899_369035_369051(right), f_10899_369053_369066(right), rightResultOpt);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 368679, 369099);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 369115, 369157);

                f_10899_369115_369156(
                            variables, v => v.NestedVariables);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 369509, 369532);

                f_10899_369509_369531(this, node);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 369548, 369613);

                _disableNullabilityAnalysis = previousDisableNullabilityAnalysis;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 369627, 369639);

                return null;
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 368244, 369650);

                Microsoft.CodeAnalysis.CSharp.BoundTupleExpression
                f_10899_368543_368552(Microsoft.CodeAnalysis.CSharp.BoundDeconstructionAssignmentOperator
                this_param)
                {
                    var return_v = this_param.Left;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 368543, 368552);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundConversion
                f_10899_368579_368589(Microsoft.CodeAnalysis.CSharp.BoundDeconstructionAssignmentOperator
                this_param)
                {
                    var return_v = this_param.Right;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 368579, 368589);
                    return return_v;
                }


                Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.NullableWalker.DeconstructionVariable>
                f_10899_368620_368662(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundTupleExpression
                tuple)
                {
                    var return_v = this_param.GetDeconstructionAssignmentVariables(tuple);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 368620, 368662);
                    return return_v;
                }


                bool
                f_10899_368683_368697(Microsoft.CodeAnalysis.CSharp.BoundDeconstructionAssignmentOperator
                this_param)
                {
                    var return_v = this_param.HasErrors;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 368683, 368697);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10899_368914_368927(Microsoft.CodeAnalysis.CSharp.BoundConversion
                this_param)
                {
                    var return_v = this_param.Operand;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 368914, 368927);
                    return return_v;
                }


                int
                f_10899_368902_368928(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                node)
                {
                    this_param.VisitRvalue(node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 368902, 368928);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.Conversion
                f_10899_369035_369051(Microsoft.CodeAnalysis.CSharp.BoundConversion
                this_param)
                {
                    var return_v = this_param.Conversion;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 369035, 369051);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10899_369053_369066(Microsoft.CodeAnalysis.CSharp.BoundConversion
                this_param)
                {
                    var return_v = this_param.Operand;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 369053, 369066);
                    return return_v;
                }


                int
                f_10899_368995_369083(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.NullableWalker.DeconstructionVariable>
                variables, Microsoft.CodeAnalysis.CSharp.Conversion
                conversion, Microsoft.CodeAnalysis.CSharp.BoundExpression
                right, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState?
                rightResultOpt)
                {
                    this_param.VisitDeconstructionArguments(variables, conversion, right, rightResultOpt);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 368995, 369083);
                    return 0;
                }


                int
                f_10899_369115_369156(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.NullableWalker.DeconstructionVariable>
                builder, System.Func<Microsoft.CodeAnalysis.CSharp.NullableWalker.DeconstructionVariable, Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.NullableWalker.DeconstructionVariable>>
                getNested)
                {
                    builder.FreeAll<Microsoft.CodeAnalysis.CSharp.NullableWalker.DeconstructionVariable>(getNested);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 369115, 369156);
                    return 0;
                }


                int
                f_10899_369509_369531(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundDeconstructionAssignmentOperator
                node)
                {
                    this_param.SetNotNullResult((Microsoft.CodeAnalysis.CSharp.BoundExpression)node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 369509, 369531);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 368244, 369650);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 368244, 369650);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private void VisitDeconstructionArguments(ArrayBuilder<DeconstructionVariable> variables, Conversion conversion, BoundExpression right, TypeWithState? rightResultOpt = null)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 369662, 370273);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 369860, 369923);

                f_10899_369860_369922(conversion.Kind == ConversionKind.Deconstruction);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 369939, 370262) || true) && (f_10899_369943_369983_M(!conversion.DeconstructionInfo.IsDefault))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 369939, 370262);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 370017, 370095);

                    f_10899_370017_370094(this, variables, conversion, right, rightResultOpt);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 369939, 370262);
                }

                else

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 369939, 370262);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 370161, 370247);

                    f_10899_370161_370246(this, variables, conversion.UnderlyingConversions, right);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 369939, 370262);
                }
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 369662, 370273);

                int
                f_10899_369860_369922(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 369860, 369922);
                    return 0;
                }


                bool
                f_10899_369943_369983_M(bool
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 369943, 369983);
                    return return_v;
                }


                int
                f_10899_370017_370094(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.NullableWalker.DeconstructionVariable>
                variables, Microsoft.CodeAnalysis.CSharp.Conversion
                conversion, Microsoft.CodeAnalysis.CSharp.BoundExpression
                right, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState?
                rightResultOpt)
                {
                    this_param.VisitDeconstructMethodArguments(variables, conversion, right, rightResultOpt);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 370017, 370094);
                    return 0;
                }


                int
                f_10899_370161_370246(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.NullableWalker.DeconstructionVariable>
                variables, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Conversion>
                conversions, Microsoft.CodeAnalysis.CSharp.BoundExpression
                right)
                {
                    this_param.VisitTupleDeconstructionArguments(variables, conversions, right);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 370161, 370246);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 369662, 370273);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 369662, 370273);
            }
        }

        private void VisitDeconstructMethodArguments(ArrayBuilder<DeconstructionVariable> variables, Conversion conversion, BoundExpression right, TypeWithState? rightResultOpt)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 370285, 375748);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 370479, 370498);

                f_10899_370479_370497(this, right);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 370614, 370733) || true) && (rightResultOpt.HasValue)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 370614, 370733);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 370675, 370718);

                    f_10899_370675_370717(this, right, rightResultOpt.Value);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 370614, 370733);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 370747, 370776);

                var
                rightResult = f_10899_370765_370775()
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 370792, 370863);

                var
                invocation = conversion.DeconstructionInfo.Invocation as BoundCall
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 370877, 370920);

                var
                deconstructMethod = f_10899_370901_370919_M(DynAbs.Tracing.TraceSender.TraceConditionalAccessExpression(invocation, 10899, 370901, 370919)?.Method)
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 370936, 375737) || true) && (deconstructMethod is object)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 370936, 375737);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 371001, 371036);

                    f_10899_371001_371035(invocation is object);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 371054, 371095);

                    f_10899_371054_371094(rightResult.Type is object);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 371115, 371139);

                    int
                    n = f_10899_371123_371138(variables)
                    ;

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 371157, 373057) || true) && (f_10899_371161_371197_M(!invocation.InvokedAsExtensionMethod))
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 371157, 373057);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 371239, 371276);

                        _ = f_10899_371243_371275(this, right);

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 371411, 371646) || true) && (f_10899_371415_371451(deconstructMethod) != deconstructMethod)
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 371411, 371646);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 371522, 371623);

                            deconstructMethod = f_10899_371542_371622(f_10899_371542_371578(deconstructMethod), rightResult.Type);
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 371411, 371646);
                        }
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 371157, 373057);
                    }

                    else

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 371157, 373057);

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 371728, 373038) || true) && (f_10899_371732_371765(deconstructMethod))
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 371728, 373038);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 371909, 372006);

                            ArrayBuilder<BoundExpression>
                            placeholderArgs = f_10899_371957_372005(n + 1)
                            ;
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 372032, 372137);

                            f_10899_372032_372136(placeholderArgs, f_10899_372052_372135(right, rightResult.ToTypeWithAnnotations(compilation)));
                            try
                            {
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 372172, 372177);
                                for (int
        i = 0
        ; (DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 372163, 372475) || true) && (i < n)
        ; DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 372186, 372189)
        , i++, DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 372163, 372475))

                                {
                                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 372163, 372475);
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 372247, 372448);

                                    f_10899_372247_372447(placeholderArgs, f_10899_372267_372446(variables[i].Expression.Syntax, variables[i].Expression, NullableAnnotation.Oblivious, f_10899_372389_372445(conversion.DeconstructionInfo.OutputPlaceholders[i])));
                                }
                            }
                            catch (System.Exception)
                            {
                                DynAbs.Tracing.TraceSender.TraceExitLoopByException(10899, 1, 313);
                                throw;
                            }
                            finally
                            {
                                DynAbs.Tracing.TraceSender.TraceExitLoop(10899, 1, 313);
                            }
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 372501, 372684);

                            deconstructMethod = f_10899_372521_372683(this, deconstructMethod, f_10899_372565_372601(placeholderArgs), f_10899_372603_372633(invocation), f_10899_372635_372661(invocation), f_10899_372663_372682(invocation));

                            if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 372812, 373015) || true) && (f_10899_372816_372869(deconstructMethod))
                            )

                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 372812, 373015);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 372927, 372988);

                                f_10899_372927_372987(this, invocation.Syntax, deconstructMethod);
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 372812, 373015);
                            }
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 371728, 373038);
                        }
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 371157, 373057);
                    }
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 373077, 373123);

                    var
                    parameters = f_10899_373094_373122(deconstructMethod)
                    ;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 373141, 373198);

                    int
                    offset = (DynAbs.Tracing.TraceSender.Conditional_F1(10899, 373154, 373189) || ((f_10899_373154_373189(invocation) && DynAbs.Tracing.TraceSender.Conditional_F2(10899, 373192, 373193)) || DynAbs.Tracing.TraceSender.Conditional_F3(10899, 373196, 373197))) ? 1 : 0
                    ;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 373216, 373262);

                    f_10899_373216_373261(parameters.Length - offset == n);

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 373282, 373679) || true) && (f_10899_373286_373321(invocation))
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 373282, 373679);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 373426, 373534);

                        var
                        argConversion = f_10899_373446_373522(f_10899_373463_373483(invocation)[0], includeExplicitConversions: false).conversion
                        ;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 373556, 373660);

                        f_10899_373556_373659(this, right, argConversion, f_10899_373614_373642(deconstructMethod)[0], rightResult);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 373282, 373679);
                    }
                    try
                    {
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 373708, 373713);

                        for (int
        i = 0
        ; (DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 373699, 374906) || true) && (i < n)
        ; DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 373722, 373725)
        , i++, DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 373699, 374906))

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 373699, 374906);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 373767, 373795);

                            var
                            variable = f_10899_373782_373794(variables, i)
                            ;
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 373817, 373856);

                            var
                            parameter = parameters[i + offset]
                            ;
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 373878, 373941);

                            var
                            underlyingConversion = conversion.UnderlyingConversions[i]
                            ;
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 373963, 374010);

                            var
                            nestedVariables = variable.NestedVariables
                            ;

                            if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 374032, 374887) || true) && (nestedVariables != null)
                            )

                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 374032, 374887);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 374109, 374221);

                                var
                                nestedRight = f_10899_374127_374220(f_10899_374156_374176(invocation)[i + offset], f_10899_374190_374219(parameter))
                                ;
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 374247, 374335);

                                f_10899_374247_374334(this, nestedVariables, underlyingConversion, right: nestedRight);
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 374032, 374887);
                            }

                            else

                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 374032, 374887);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 374433, 374864);

                                f_10899_374433_374863(this, conversionOpt: null, variable.Expression, underlyingConversion, f_10899_374558_374575(parameter), parameter, f_10899_374617_374646(parameter), f_10899_374648_374682(this, parameter), f_10899_374684_374797(f_10899_374708_374771(variable.Type.ToTypeWithState(), variable.Type), stateForLambda: default), extensionMethodThisArgument: false);
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 374032, 374887);
                            }
                        }
                    }
                    catch (System.Exception)
                    {
                        DynAbs.Tracing.TraceSender.TraceExitLoopByException(10899, 1, 1208);
                        throw;
                    }
                    finally
                    {
                        DynAbs.Tracing.TraceSender.TraceExitLoop(10899, 1, 1208);
                    }
                    try
                    {
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 374935, 374940);

                        for (int
        i = 0
        ; (DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 374926, 375722) || true) && (i < n)
        ; DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 374949, 374952)
        , i++, DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 374926, 375722))

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 374926, 375722);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 374994, 375022);

                            var
                            variable = f_10899_375009_375021(variables, i)
                            ;
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 375044, 375083);

                            var
                            parameter = parameters[i + offset]
                            ;
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 375105, 375152);

                            var
                            nestedVariables = variable.NestedVariables
                            ;

                            if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 375174, 375703) || true) && (nestedVariables == null)
                            )

                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 375174, 375703);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 375251, 375680);

                                f_10899_375251_375679(this, variable.Expression, f_10899_375352_375369(parameter), parameter, f_10899_375382_375411(parameter), f_10899_375413_375444(this, parameter), f_10899_375475_375588(f_10899_375499_375562(variable.Type.ToTypeWithState(), variable.Type), stateForLambda: default), notNullParametersOpt: null, compareExchangeInfoOpt: default);
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 375174, 375703);
                            }
                        }
                    }
                    catch (System.Exception)
                    {
                        DynAbs.Tracing.TraceSender.TraceExitLoopByException(10899, 1, 797);
                        throw;
                    }
                    finally
                    {
                        DynAbs.Tracing.TraceSender.TraceExitLoop(10899, 1, 797);
                    }
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 370936, 375737);
                }
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 370285, 375748);

                int
                f_10899_370479_370497(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                node)
                {
                    this_param.VisitRvalue(node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 370479, 370497);
                    return 0;
                }


                int
                f_10899_370675_370717(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                expression, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                type)
                {
                    this_param.SetResultType(expression, type);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 370675, 370717);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                f_10899_370765_370775()
                {
                    var return_v = ResultType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 370765, 370775);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol?
                f_10899_370901_370919_M(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol?
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 370901, 370919);
                    return return_v;
                }


                int
                f_10899_371001_371035(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 371001, 371035);
                    return 0;
                }


                int
                f_10899_371054_371094(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 371054, 371094);
                    return 0;
                }


                int
                f_10899_371123_371138(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.NullableWalker.DeconstructionVariable>
                this_param)
                {
                    var return_v = this_param.Count;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 371123, 371138);
                    return return_v;
                }


                bool
                f_10899_371161_371197_M(bool
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 371161, 371197);
                    return return_v;
                }


                bool
                f_10899_371243_371275(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                receiverOpt)
                {
                    var return_v = this_param.CheckPossibleNullReceiver(receiverOpt);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 371243, 371275);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                f_10899_371415_371451(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                this_param)
                {
                    var return_v = this_param.OriginalDefinition;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 371415, 371451);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                f_10899_371542_371578(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                this_param)
                {
                    var return_v = this_param.OriginalDefinition;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 371542, 371578);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                f_10899_371542_371622(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                newOwner)
                {
                    var return_v = this_param.AsMember((Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol)newOwner);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 371542, 371622);
                    return return_v;
                }


                bool
                f_10899_371732_371765(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                this_param)
                {
                    var return_v = this_param.IsGenericMethod;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 371732, 371765);
                    return return_v;
                }


                Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                f_10899_371957_372005(int
                capacity)
                {
                    var return_v = ArrayBuilder<BoundExpression>.GetInstance(capacity);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 371957, 372005);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10899_372052_372135(Microsoft.CodeAnalysis.CSharp.BoundExpression
                expr, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                type)
                {
                    var return_v = CreatePlaceholderIfNecessary(expr, type);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 372052, 372135);
                    return return_v;
                }


                int
                f_10899_372032_372136(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                item)
                {
                    this_param.Add(item);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 372032, 372136);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                f_10899_372389_372445(Microsoft.CodeAnalysis.CSharp.BoundDeconstructValuePlaceholder
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 372389, 372445);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpressionWithNullability
                f_10899_372267_372446(Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.CSharp.BoundExpression
                expression, Microsoft.CodeAnalysis.CSharp.NullableAnnotation
                nullableAnnotation, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                type)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.BoundExpressionWithNullability(syntax, expression, nullableAnnotation, type);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 372267, 372446);
                    return return_v;
                }


                int
                f_10899_372247_372447(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpressionWithNullability
                item)
                {
                    this_param.Add((Microsoft.CodeAnalysis.CSharp.BoundExpression)item);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 372247, 372447);
                    return 0;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                f_10899_372565_372601(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                this_param)
                {
                    var return_v = this_param.ToImmutableAndFree();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 372565, 372601);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.RefKind>
                f_10899_372603_372633(Microsoft.CodeAnalysis.CSharp.BoundCall
                this_param)
                {
                    var return_v = this_param.ArgumentRefKindsOpt;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 372603, 372633);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<int>
                f_10899_372635_372661(Microsoft.CodeAnalysis.CSharp.BoundCall
                this_param)
                {
                    var return_v = this_param.ArgsToParamsOpt;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 372635, 372661);
                    return return_v;
                }


                bool
                f_10899_372663_372682(Microsoft.CodeAnalysis.CSharp.BoundCall
                this_param)
                {
                    var return_v = this_param.Expanded;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 372663, 372682);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                f_10899_372521_372683(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                method, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                arguments, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.RefKind>
                argumentRefKindsOpt, System.Collections.Immutable.ImmutableArray<int>
                argsToParamsOpt, bool
                expanded)
                {
                    var return_v = this_param.InferMethodTypeArguments(method, arguments, argumentRefKindsOpt, argsToParamsOpt, expanded);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 372521, 372683);
                    return return_v;
                }


                bool
                f_10899_372816_372869(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                method)
                {
                    var return_v = ConstraintsHelper.RequiresChecking(method);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 372816, 372869);
                    return return_v;
                }


                int
                f_10899_372927_372987(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                method)
                {
                    this_param.CheckMethodConstraints(syntax, method);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 372927, 372987);
                    return 0;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol>
                f_10899_373094_373122(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                this_param)
                {
                    var return_v = this_param.Parameters;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 373094, 373122);
                    return return_v;
                }


                bool
                f_10899_373154_373189(Microsoft.CodeAnalysis.CSharp.BoundCall
                this_param)
                {
                    var return_v = this_param.InvokedAsExtensionMethod;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 373154, 373189);
                    return return_v;
                }


                int
                f_10899_373216_373261(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 373216, 373261);
                    return 0;
                }


                bool
                f_10899_373286_373321(Microsoft.CodeAnalysis.CSharp.BoundCall
                this_param)
                {
                    var return_v = this_param.InvokedAsExtensionMethod;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 373286, 373321);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                f_10899_373463_373483(Microsoft.CodeAnalysis.CSharp.BoundCall
                this_param)
                {
                    var return_v = this_param.Arguments;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 373463, 373483);
                    return return_v;
                }


                (Microsoft.CodeAnalysis.CSharp.BoundExpression expression, Microsoft.CodeAnalysis.CSharp.Conversion conversion)
                f_10899_373446_373522(Microsoft.CodeAnalysis.CSharp.BoundExpression
                expr, bool
                includeExplicitConversions)
                {
                    var return_v = RemoveConversion(expr, includeExplicitConversions: includeExplicitConversions);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 373446, 373522);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol>
                f_10899_373614_373642(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                this_param)
                {
                    var return_v = this_param.Parameters;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 373614, 373642);
                    return return_v;
                }


                int
                f_10899_373556_373659(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                expr, Microsoft.CodeAnalysis.CSharp.Conversion
                conversion, Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol
                parameter, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                result)
                {
                    this_param.CheckExtensionMethodThisNullability(expr, conversion, parameter, result);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 373556, 373659);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.NullableWalker.DeconstructionVariable
                f_10899_373782_373794(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.NullableWalker.DeconstructionVariable>
                this_param, int
                i0)
                {
                    var return_v = this_param[i0];
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 373782, 373794);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                f_10899_374156_374176(Microsoft.CodeAnalysis.CSharp.BoundCall
                this_param)
                {
                    var return_v = this_param.Arguments;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 374156, 374176);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                f_10899_374190_374219(Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol
                this_param)
                {
                    var return_v = this_param.TypeWithAnnotations;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 374190, 374219);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10899_374127_374220(Microsoft.CodeAnalysis.CSharp.BoundExpression
                expr, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                type)
                {
                    var return_v = CreatePlaceholderIfNecessary(expr, type);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 374127, 374220);
                    return return_v;
                }


                int
                f_10899_374247_374334(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.NullableWalker.DeconstructionVariable>
                variables, Microsoft.CodeAnalysis.CSharp.Conversion
                conversion, Microsoft.CodeAnalysis.CSharp.BoundExpression
                right)
                {
                    this_param.VisitDeconstructionArguments(variables, conversion, right: right);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 374247, 374334);
                    return 0;
                }


                Microsoft.CodeAnalysis.RefKind
                f_10899_374558_374575(Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol
                this_param)
                {
                    var return_v = this_param.RefKind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 374558, 374575);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                f_10899_374617_374646(Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol
                this_param)
                {
                    var return_v = this_param.TypeWithAnnotations;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 374617, 374646);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.FlowAnalysisAnnotations
                f_10899_374648_374682(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol
                parameter)
                {
                    var return_v = this_param.GetParameterAnnotations(parameter);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 374648, 374682);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.NullableWalker.VisitResult
                f_10899_374708_374771(Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                rValueType, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                lValueType)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.NullableWalker.VisitResult(rValueType, lValueType);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 374708, 374771);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.NullableWalker.VisitArgumentResult
                f_10899_374684_374797(Microsoft.CodeAnalysis.CSharp.NullableWalker.VisitResult
                visitResult, Microsoft.CodeAnalysis.Optional<Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState>
                stateForLambda)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.NullableWalker.VisitArgumentResult(visitResult, stateForLambda: stateForLambda);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 374684, 374797);
                    return return_v;
                }


                int
                f_10899_374433_374863(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundConversion?
                conversionOpt, Microsoft.CodeAnalysis.CSharp.BoundExpression
                argumentNoConversion, Microsoft.CodeAnalysis.CSharp.Conversion
                conversion, Microsoft.CodeAnalysis.RefKind
                refKind, Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol
                parameter, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                parameterType, Microsoft.CodeAnalysis.CSharp.Symbols.FlowAnalysisAnnotations
                parameterAnnotations, Microsoft.CodeAnalysis.CSharp.NullableWalker.VisitArgumentResult
                result, bool
                extensionMethodThisArgument)
                {
                    this_param.VisitArgumentConversionAndInboundAssignmentsAndPreConditions(conversionOpt: conversionOpt, argumentNoConversion, conversion, refKind, parameter, parameterType, parameterAnnotations, result, extensionMethodThisArgument: extensionMethodThisArgument);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 374433, 374863);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.NullableWalker.DeconstructionVariable
                f_10899_375009_375021(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.NullableWalker.DeconstructionVariable>
                this_param, int
                i0)
                {
                    var return_v = this_param[i0];
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 375009, 375021);
                    return return_v;
                }


                Microsoft.CodeAnalysis.RefKind
                f_10899_375352_375369(Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol
                this_param)
                {
                    var return_v = this_param.RefKind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 375352, 375369);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                f_10899_375382_375411(Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol
                this_param)
                {
                    var return_v = this_param.TypeWithAnnotations;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 375382, 375411);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.FlowAnalysisAnnotations
                f_10899_375413_375444(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol
                symbol)
                {
                    var return_v = this_param.GetRValueAnnotations((Microsoft.CodeAnalysis.CSharp.Symbol)symbol);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 375413, 375444);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.NullableWalker.VisitResult
                f_10899_375499_375562(Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                rValueType, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                lValueType)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.NullableWalker.VisitResult(rValueType, lValueType);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 375499, 375562);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.NullableWalker.VisitArgumentResult
                f_10899_375475_375588(Microsoft.CodeAnalysis.CSharp.NullableWalker.VisitResult
                visitResult, Microsoft.CodeAnalysis.Optional<Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState>
                stateForLambda)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.NullableWalker.VisitArgumentResult(visitResult, stateForLambda: stateForLambda);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 375475, 375588);
                    return return_v;
                }


                int
                f_10899_375251_375679(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                argument, Microsoft.CodeAnalysis.RefKind
                refKind, Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol
                parameter, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                parameterType, Microsoft.CodeAnalysis.CSharp.Symbols.FlowAnalysisAnnotations
                parameterAnnotations, Microsoft.CodeAnalysis.CSharp.NullableWalker.VisitArgumentResult
                result, Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol>?
                notNullParametersOpt, Microsoft.CodeAnalysis.CSharp.NullableWalker.CompareExchangeInfo
                compareExchangeInfoOpt)
                {
                    this_param.VisitArgumentOutboundAssignmentsAndPostConditions(argument, refKind, parameter, parameterType, parameterAnnotations, result, notNullParametersOpt: notNullParametersOpt, compareExchangeInfoOpt: compareExchangeInfoOpt);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 375251, 375679);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 370285, 375748);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 370285, 375748);
            }
        }

        private void VisitTupleDeconstructionArguments(ArrayBuilder<DeconstructionVariable> variables, ImmutableArray<Conversion> conversions, BoundExpression right)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 375760, 380128);
                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations underlyingType = default(Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 375942, 375966);

                int
                n = f_10899_375950_375965(variables)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 375980, 376032);

                var
                rightParts = f_10899_375997_376031(this, right)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 376046, 376083);

                f_10899_376046_376082(rightParts.Length == n);
                try
                {
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 376108, 376113);

                    for (int
        i = 0
        ; (DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 376099, 380117) || true) && (i < n)
        ; DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 376122, 376125)
        , i++, DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 376099, 380117))

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 376099, 380117);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 376159, 376187);

                        var
                        variable = f_10899_376174_376186(variables, i)
                        ;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 376205, 376247);

                        var
                        underlyingConversion = conversions[i]
                        ;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 376265, 376295);

                        var
                        rightPart = rightParts[i]
                        ;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 376313, 376360);

                        var
                        nestedVariables = variable.NestedVariables
                        ;

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 376378, 380102) || true) && (nestedVariables != null)
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 376378, 380102);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 376447, 376526);

                            f_10899_376447_376525(this, nestedVariables, underlyingConversion, rightPart);
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 376378, 380102);
                        }

                        else

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 376378, 380102);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 376608, 376639);

                            var
                            lvalueType = variable.Type
                            ;
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 376661, 376725);

                            var
                            leftAnnotations = f_10899_376683_376724(this, variable.Expression)
                            ;
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 376747, 376812);

                            lvalueType = f_10899_376760_376811(lvalueType, leftAnnotations);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 376836, 376862);

                            TypeWithState
                            operandType
                            = default(TypeWithState);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 376884, 376908);

                            TypeWithState
                            valueType
                            = default(TypeWithState);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 376930, 376944);

                            int
                            valueSlot
                            = default(int);

                            if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 376966, 378779) || true) && (underlyingConversion.IsIdentity)
                            )

                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 376966, 378779);

                                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 377051, 377849) || true) && (variable.Expression is BoundLocal { DeclarationKind: BoundLocalDeclarationKind.WithInferredType } local)
                                )

                                {
                                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 377051, 377849);
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 377334, 377392);

                                    valueType = operandType = f_10899_377360_377391(this, rightPart);
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 377422, 377517);

                                    f_10899_377422_377516(_variables, f_10899_377441_377458(local), operandType.ToAnnotatedTypeWithAnnotations(compilation));
                                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 377051, 377849);
                                }

                                else

                                {
                                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 377051, 377849);
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 377631, 377653);

                                    operandType = default;
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 377683, 377822);

                                    valueType = f_10899_377695_377821(this, rightPart, lvalueType, useLegacyWarnings: true, trackMembers: true, AssignmentKind.Assignment);
                                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 377051, 377849);
                                }
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 377875, 377907);

                                valueSlot = f_10899_377887_377906(this, rightPart);
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 376966, 378779);
                            }

                            else

                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 376966, 378779);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 378005, 378051);

                                operandType = f_10899_378019_378050(this, rightPart);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 378077, 378715);

                                valueType = f_10899_378089_378714(this, conversionOpt: null, rightPart, underlyingConversion, lvalueType, operandType, checkConversion: true, fromExplicitCast: false, useLegacyWarnings: true, AssignmentKind.Assignment, reportTopLevelWarnings: true, reportRemainingWarnings: true, trackMembers: false);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 378741, 378756);

                                valueSlot = -1;
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 376966, 378779);
                            }
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 378911, 378992);

                            f_10899_378911_378991(this, valueType, leftAnnotations, f_10899_378969_378990(right.Syntax));
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 379016, 379063);

                            int
                            targetSlot = f_10899_379033_379062(this, variable.Expression)
                            ;
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 379085, 379136);

                            f_10899_379085_379135(this, variable.Expression, ref valueType);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 379158, 379247);

                            f_10899_379158_379246(this, rightPart, lvalueType, targetSlot, valueType, valueSlot);

                            if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 379363, 380083) || true) && (targetSlot > 0 && (DynAbs.Tracing.TraceSender.Expression_True(10899, 379367, 379470) && underlyingConversion.Kind == ConversionKind.ImplicitNullable) && (DynAbs.Tracing.TraceSender.Expression_True(10899, 379367, 379603) && f_10899_379499_379603(lvalueType.Type, operandType.Type, out underlyingType)))
                            )

                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 379363, 380083);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 379653, 379685);

                                valueSlot = f_10899_379665_379684(this, rightPart);

                                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 379711, 380060) || true) && (valueSlot > 0)
                                )

                                {
                                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 379711, 380060);
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 379786, 379889);

                                    var
                                    valueBeforeNullableWrapping = TypeWithState.Create(underlyingType.Type, NullableFlowState.NotNull)
                                    ;
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 379919, 380033);

                                    f_10899_379919_380032(this, targetSlot, lvalueType.Type, rightPart, valueBeforeNullableWrapping, valueSlot);
                                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 379711, 380060);
                                }
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 379363, 380083);
                            }
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 376378, 380102);
                        }
                    }
                }
                catch (System.Exception)
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoopByException(10899, 1, 4019);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoop(10899, 1, 4019);
                }
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 375760, 380128);

                int
                f_10899_375950_375965(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.NullableWalker.DeconstructionVariable>
                this_param)
                {
                    var return_v = this_param.Count;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 375950, 375965);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                f_10899_375997_376031(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                expr)
                {
                    var return_v = this_param.GetDeconstructionRightParts(expr);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 375997, 376031);
                    return return_v;
                }


                int
                f_10899_376046_376082(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 376046, 376082);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.NullableWalker.DeconstructionVariable
                f_10899_376174_376186(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.NullableWalker.DeconstructionVariable>
                this_param, int
                i0)
                {
                    var return_v = this_param[i0];
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 376174, 376186);
                    return return_v;
                }


                int
                f_10899_376447_376525(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.NullableWalker.DeconstructionVariable>
                variables, Microsoft.CodeAnalysis.CSharp.Conversion
                conversion, Microsoft.CodeAnalysis.CSharp.BoundExpression
                right)
                {
                    this_param.VisitDeconstructionArguments(variables, conversion, right);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 376447, 376525);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.FlowAnalysisAnnotations
                f_10899_376683_376724(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                expr)
                {
                    var return_v = this_param.GetLValueAnnotations(expr);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 376683, 376724);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                f_10899_376760_376811(Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                declaredType, Microsoft.CodeAnalysis.CSharp.Symbols.FlowAnalysisAnnotations
                flowAnalysisAnnotations)
                {
                    var return_v = ApplyLValueAnnotations(declaredType, flowAnalysisAnnotations);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 376760, 376811);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                f_10899_377360_377391(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                node)
                {
                    var return_v = this_param.VisitRvalueWithState(node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 377360, 377391);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.LocalSymbol
                f_10899_377441_377458(Microsoft.CodeAnalysis.CSharp.BoundLocal
                this_param)
                {
                    var return_v = this_param.LocalSymbol;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 377441, 377458);
                    return return_v;
                }


                int
                f_10899_377422_377516(Microsoft.CodeAnalysis.CSharp.NullableWalker.Variables
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.LocalSymbol
                symbol, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                type)
                {
                    this_param.SetType((Microsoft.CodeAnalysis.CSharp.Symbol)symbol, type);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 377422, 377516);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                f_10899_377695_377821(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                expr, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                targetTypeOpt, bool
                useLegacyWarnings, bool
                trackMembers, Microsoft.CodeAnalysis.CSharp.NullableWalker.AssignmentKind
                assignmentKind)
                {
                    var return_v = this_param.VisitOptionalImplicitConversion(expr, targetTypeOpt, useLegacyWarnings: useLegacyWarnings, trackMembers: trackMembers, assignmentKind);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 377695, 377821);
                    return return_v;
                }


                int
                f_10899_377887_377906(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                node)
                {
                    var return_v = this_param.MakeSlot(node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 377887, 377906);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                f_10899_378019_378050(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                node)
                {
                    var return_v = this_param.VisitRvalueWithState(node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 378019, 378050);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                f_10899_378089_378714(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundConversion?
                conversionOpt, Microsoft.CodeAnalysis.CSharp.BoundExpression
                conversionOperand, Microsoft.CodeAnalysis.CSharp.Conversion
                conversion, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                targetTypeWithNullability, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                operandType, bool
                checkConversion, bool
                fromExplicitCast, bool
                useLegacyWarnings, Microsoft.CodeAnalysis.CSharp.NullableWalker.AssignmentKind
                assignmentKind, bool
                reportTopLevelWarnings, bool
                reportRemainingWarnings, bool
                trackMembers)
                {
                    var return_v = this_param.VisitConversion(conversionOpt: conversionOpt, conversionOperand, conversion, targetTypeWithNullability, operandType, checkConversion: checkConversion, fromExplicitCast: fromExplicitCast, useLegacyWarnings: useLegacyWarnings, assignmentKind, reportTopLevelWarnings: reportTopLevelWarnings, reportRemainingWarnings: reportRemainingWarnings, trackMembers: trackMembers);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 378089, 378714);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Location
                f_10899_378969_378990(Microsoft.CodeAnalysis.SyntaxNode
                this_param)
                {
                    var return_v = this_param.Location;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 378969, 378990);
                    return return_v;
                }


                bool
                f_10899_378911_378991(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                state, Microsoft.CodeAnalysis.CSharp.Symbols.FlowAnalysisAnnotations
                annotations, Microsoft.CodeAnalysis.Location
                location)
                {
                    var return_v = this_param.CheckDisallowedNullAssignment(state, annotations, location);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 378911, 378991);
                    return return_v;
                }


                int
                f_10899_379033_379062(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                node)
                {
                    var return_v = this_param.MakeSlot(node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 379033, 379062);
                    return return_v;
                }


                int
                f_10899_379085_379135(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                left, ref Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                rightState)
                {
                    this_param.AdjustSetValue(left, ref rightState);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 379085, 379135);
                    return 0;
                }


                int
                f_10899_379158_379246(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                valueOpt, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                targetType, int
                targetSlot, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                valueType, int
                valueSlot)
                {
                    this_param.TrackNullableStateForAssignment(valueOpt, targetType, targetSlot, valueType, valueSlot);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 379158, 379246);
                    return 0;
                }


                bool
                f_10899_379499_379603(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                nullableTypeOpt, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?
                underlyingTypeOpt, out Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                underlyingTypeWithAnnotations)
                {
                    var return_v = AreNullableAndUnderlyingTypes(nullableTypeOpt, underlyingTypeOpt, out underlyingTypeWithAnnotations);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 379499, 379603);
                    return return_v;
                }


                int
                f_10899_379665_379684(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                node)
                {
                    var return_v = this_param.MakeSlot(node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 379665, 379684);
                    return return_v;
                }


                int
                f_10899_379919_380032(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, int
                containingSlot, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                containingType, Microsoft.CodeAnalysis.CSharp.BoundExpression
                value, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                valueType, int
                valueSlot)
                {
                    this_param.TrackNullableStateOfNullableValue(containingSlot, containingType, value, valueType, valueSlot);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 379919, 380032);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 375760, 380128);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 375760, 380128);
            }
        }

        private readonly struct DeconstructionVariable
        {

            internal readonly BoundExpression Expression;

            internal readonly TypeWithAnnotations Type;

            internal readonly ArrayBuilder<DeconstructionVariable>? NestedVariables;

            internal DeconstructionVariable(BoundExpression expression, TypeWithAnnotations type)
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterConstructor(10899, 380415, 380643);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 380533, 380557);

                    Expression = expression;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 380575, 380587);

                    Type = type;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 380605, 380628);

                    NestedVariables = null;
                    DynAbs.Tracing.TraceSender.TraceExitConstructor(10899, 380415, 380643);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 380415, 380643);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 380415, 380643);
                }
            }

            internal DeconstructionVariable(BoundExpression expression, ArrayBuilder<DeconstructionVariable> nestedVariables)
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterConstructor(10899, 380659, 380929);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 380805, 380829);

                    Expression = expression;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 380847, 380862);

                    Type = default;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 380880, 380914);

                    NestedVariables = nestedVariables;
                    DynAbs.Tracing.TraceSender.TraceExitConstructor(10899, 380659, 380929);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 380659, 380929);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 380659, 380929);
                }
            }
            static DeconstructionVariable()
            {
                DynAbs.Tracing.TraceSender.TraceEnterStaticConstructor(10899, 380140, 380940);
                DynAbs.Tracing.TraceSender.TraceExitStaticConstructor(10899, 380140, 380940);

                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 380140, 380940);
            }
        }

        private ArrayBuilder<DeconstructionVariable> GetDeconstructionAssignmentVariables(BoundTupleExpression tuple)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 380952, 382008);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 381086, 381118);

                var
                arguments = f_10899_381102_381117(tuple)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 381132, 381213);

                var
                builder = f_10899_381146_381212(arguments.Length)
                ;
                try
                {
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 381227, 381369);
                    foreach (var argument in f_10899_381252_381261_I(arguments))
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 381227, 381369);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 381295, 381354);

                        f_10899_381295_381353(builder, f_10899_381307_381352(argument));
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 381227, 381369);
                    }
                }
                catch (System.Exception)
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoopByException(10899, 1, 143);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoop(10899, 1, 143);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 381383, 381398);

                return builder;

                DeconstructionVariable getDeconstructionAssignmentVariable(BoundExpression expr)
                {
                    try
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 381414, 381997);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 381527, 381982);

                        switch (f_10899_381535_381544(expr))
                        {

                            case BoundKind.TupleLiteral:
                            case BoundKind.ConvertedTupleLiteral:
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 381527, 381982);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 381699, 381805);

                                return f_10899_381706_381804(expr, f_10899_381739_381803(this, expr));
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 381527, 381982);

                            default:
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 381527, 381982);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 381861, 381879);

                                f_10899_381861_381878(this, expr);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 381905, 381963);

                                return f_10899_381912_381962(expr, f_10899_381945_381961());
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 381527, 381982);
                        }
                        DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 381414, 381997);

                        Microsoft.CodeAnalysis.CSharp.BoundKind
                        f_10899_381535_381544(Microsoft.CodeAnalysis.CSharp.BoundExpression
                        this_param)
                        {
                            var return_v = this_param.Kind;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 381535, 381544);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.NullableWalker.DeconstructionVariable>
                        f_10899_381739_381803(Microsoft.CodeAnalysis.CSharp.NullableWalker
                        this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                        tuple)
                        {
                            var return_v = this_param.GetDeconstructionAssignmentVariables((Microsoft.CodeAnalysis.CSharp.BoundTupleExpression)tuple);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 381739, 381803);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.CSharp.NullableWalker.DeconstructionVariable
                        f_10899_381706_381804(Microsoft.CodeAnalysis.CSharp.BoundExpression
                        expression, Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.NullableWalker.DeconstructionVariable>
                        nestedVariables)
                        {
                            var return_v = new Microsoft.CodeAnalysis.CSharp.NullableWalker.DeconstructionVariable(expression, nestedVariables);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 381706, 381804);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.CSharp.BoundNode
                        f_10899_381861_381878(Microsoft.CodeAnalysis.CSharp.NullableWalker
                        this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                        node)
                        {
                            var return_v = this_param.VisitLValue((Microsoft.CodeAnalysis.CSharp.BoundNode)node);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 381861, 381878);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                        f_10899_381945_381961()
                        {
                            var return_v = LvalueResultType;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 381945, 381961);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.CSharp.NullableWalker.DeconstructionVariable
                        f_10899_381912_381962(Microsoft.CodeAnalysis.CSharp.BoundExpression
                        expression, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                        type)
                        {
                            var return_v = new Microsoft.CodeAnalysis.CSharp.NullableWalker.DeconstructionVariable(expression, type);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 381912, 381962);
                            return return_v;
                        }

                    }
                    catch
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 381414, 381997);
                        throw;
                    }
                    finally
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 381414, 381997);
                    }
                    throw new System.Exception("Slicer error: unreachable code");
                }
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 380952, 382008);

                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                f_10899_381102_381117(Microsoft.CodeAnalysis.CSharp.BoundTupleExpression
                this_param)
                {
                    var return_v = this_param.Arguments;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 381102, 381117);
                    return return_v;
                }


                Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.NullableWalker.DeconstructionVariable>
                f_10899_381146_381212(int
                capacity)
                {
                    var return_v = ArrayBuilder<DeconstructionVariable>.GetInstance(capacity);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 381146, 381212);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.NullableWalker.DeconstructionVariable
                f_10899_381307_381352(Microsoft.CodeAnalysis.CSharp.BoundExpression
                expr)
                {
                    var return_v = getDeconstructionAssignmentVariable(expr);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 381307, 381352);
                    return return_v;
                }


                int
                f_10899_381295_381353(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.NullableWalker.DeconstructionVariable>
                this_param, Microsoft.CodeAnalysis.CSharp.NullableWalker.DeconstructionVariable
                item)
                {
                    this_param.Add(item);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 381295, 381353);
                    return 0;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                f_10899_381252_381261_I(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 381252, 381261);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 380952, 382008);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 380952, 382008);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private ImmutableArray<BoundExpression> GetDeconstructionRightParts(BoundExpression expr)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 382208, 383734);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 382322, 383037);

                switch (f_10899_382330_382339(expr))
                {

                    case BoundKind.TupleLiteral:
                    case BoundKind.ConvertedTupleLiteral:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 382322, 383037);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 382478, 382524);

                        return f_10899_382485_382523(((BoundTupleExpression)expr));
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 382322, 383037);

                    case BoundKind.Conversion:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 382322, 383037);
                        {
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 382617, 382650);

                            var
                            conv = (BoundConversion)expr
                            ;
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 382676, 382971);

                            switch (f_10899_382684_382703(conv))
                            {

                                case ConversionKind.Identity:
                                case ConversionKind.ImplicitTupleLiteral:
                                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 382676, 382971);
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 382895, 382944);

                                    return f_10899_382902_382943(this, f_10899_382930_382942(conv));
                                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 382676, 382971);
                            }
                        }
                        DynAbs.Tracing.TraceSender.TraceBreak(10899, 383016, 383022);

                        break;
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 382322, 383037);
                }

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 383053, 383670) || true) && (f_10899_383057_383066(expr) is NamedTypeSymbol { IsTupleType: true } tupleType)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 383053, 383670);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 383477, 383514);

                    var
                    fields = f_10899_383490_383513(tupleType)
                    ;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 383532, 383655);

                    return fields.SelectAsArray((f, e) => (BoundExpression)new BoundFieldAccess(e.Syntax, e, f, constantValueOpt: null), expr);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 383053, 383670);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 383686, 383723);

                throw f_10899_383692_383722();
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 382208, 383734);

                Microsoft.CodeAnalysis.CSharp.BoundKind
                f_10899_382330_382339(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.Kind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 382330, 382339);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                f_10899_382485_382523(Microsoft.CodeAnalysis.CSharp.BoundTupleExpression
                this_param)
                {
                    var return_v = this_param.Arguments;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 382485, 382523);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.ConversionKind
                f_10899_382684_382703(Microsoft.CodeAnalysis.CSharp.BoundConversion
                this_param)
                {
                    var return_v = this_param.ConversionKind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 382684, 382703);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10899_382930_382942(Microsoft.CodeAnalysis.CSharp.BoundConversion
                this_param)
                {
                    var return_v = this_param.Operand;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 382930, 382942);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                f_10899_382902_382943(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                expr)
                {
                    var return_v = this_param.GetDeconstructionRightParts(expr);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 382902, 382943);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?
                f_10899_383057_383066(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 383057, 383066);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol>
                f_10899_383490_383513(Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                this_param)
                {
                    var return_v = this_param.TupleElements;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 383490, 383513);
                    return return_v;
                }


                System.Exception
                f_10899_383692_383722()
                {
                    var return_v = ExceptionUtilities.Unreachable;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 383692, 383722);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 382208, 383734);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 382208, 383734);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override BoundNode? VisitIncrementOperator(BoundIncrementOperator node)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 383746, 388454);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 383849, 383883);

                f_10899_383849_383882(!IsConditionalState);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 383899, 383952);

                var
                operandType = f_10899_383917_383951(this, f_10899_383938_383950(node))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 383966, 384003);

                var
                operandLvalue = f_10899_383986_384002()
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 384017, 384040);

                bool
                setResult = false
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 384056, 388313) || true) && (this.State.Reachable)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 384056, 388313);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 384227, 384360);

                    MethodSymbol?
                    incrementOperator = (DynAbs.Tracing.TraceSender.Conditional_F1(10899, 384261, 384335) || (((f_10899_384262_384295(f_10899_384262_384279(node)) && (DynAbs.Tracing.TraceSender.Expression_True(10899, 384262, 384334) && f_10899_384299_384329_M(DynAbs.Tracing.TraceSender.TraceConditionalAccessExpression(f_10899_384299_384313(node), 10899, 384299, 384329)?.ParameterCount) == 1)) && DynAbs.Tracing.TraceSender.Conditional_F2(10899, 384338, 384352)) || DynAbs.Tracing.TraceSender.Conditional_F3(10899, 384355, 384359))) ? f_10899_384338_384352(node) : null
                    ;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 384378, 384428);

                    TypeWithAnnotations
                    targetTypeOfOperandConversion
                    = default(TypeWithAnnotations);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 384446, 384504);

                    AssignmentKind
                    assignmentKind = AssignmentKind.Assignment
                    ;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 384522, 384556);

                    ParameterSymbol?
                    parameter = null
                    ;

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 384851, 385615) || true) && (node.OperandConversion.IsUserDefined && (DynAbs.Tracing.TraceSender.Expression_True(10899, 384855, 384945) && f_10899_384895_384940_M(DynAbs.Tracing.TraceSender.TraceConditionalAccessExpression(node.OperandConversion.Method, 10899, 384895, 384940)?.ParameterCount) == 1))
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 384851, 385615);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 384987, 385075);

                        targetTypeOfOperandConversion = f_10899_385019_385074(node.OperandConversion.Method);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 384851, 385615);
                    }

                    else
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 384851, 385615);

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 385117, 385615) || true) && (incrementOperator is object)
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 385117, 385615);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 385190, 385274);

                            targetTypeOfOperandConversion = f_10899_385222_385273(f_10899_385222_385250(incrementOperator)[0]);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 385296, 385337);

                            assignmentKind = AssignmentKind.Argument;
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 385359, 385403);

                            parameter = f_10899_385371_385399(incrementOperator)[0];
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 385117, 385615);
                        }

                        else

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 385117, 385615);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 385556, 385596);

                            targetTypeOfOperandConversion = default;
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 385117, 385615);
                        }
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 384851, 385615);
                    }
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 385635, 385679);

                    TypeWithState
                    resultOfOperandConversionType
                    = default(TypeWithState);

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 385699, 386695) || true) && (targetTypeOfOperandConversion.HasType)
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 385699, 386695);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 385936, 386550);

                        resultOfOperandConversionType = f_10899_385968_386549(this, conversionOpt: null, f_10899_386056_386068(node), f_10899_386095_386117(node), targetTypeOfOperandConversion, operandType, checkConversion: true, fromExplicitCast: false, useLegacyWarnings: false, assignmentKind, parameter, reportTopLevelWarnings: true, reportRemainingWarnings: true);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 385699, 386695);
                    }

                    else

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 385699, 386695);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 386632, 386676);

                        resultOfOperandConversionType = operandType;
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 385699, 386695);
                    }
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 386715, 386751);

                    TypeWithState
                    resultOfIncrementType
                    = default(TypeWithState);

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 386769, 387081) || true) && (incrementOperator is null)
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 386769, 387081);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 386840, 386894);

                        resultOfIncrementType = resultOfOperandConversionType;
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 386769, 387081);
                    }

                    else

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 386769, 387081);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 386976, 387062);

                        resultOfIncrementType = incrementOperator.ReturnTypeWithAnnotations.ToTypeWithState();
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 386769, 387081);
                    }
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 387101, 387181);

                    var
                    operandTypeWithAnnotations = operandType.ToTypeWithAnnotations(compilation)
                    ;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 387199, 387631);

                    resultOfIncrementType = f_10899_387223_387630(this, conversionOpt: null, node, f_10899_387330_387351(node), operandTypeWithAnnotations, resultOfIncrementType, checkConversion: true, fromExplicitCast: false, useLegacyWarnings: false, AssignmentKind.Assignment);

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 387756, 388298) || true) && (f_10899_387760_387775_M(!node.HasErrors))
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 387756, 388298);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 387817, 387855);

                        var
                        op = f_10899_387826_387854(f_10899_387826_387843(node))
                        ;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 387877, 388027);

                        TypeWithState
                        resultType = (DynAbs.Tracing.TraceSender.Conditional_F1(10899, 387904, 387988) || (((op == UnaryOperatorKind.PrefixIncrement || (DynAbs.Tracing.TraceSender.Expression_False(10899, 387905, 387987) || op == UnaryOperatorKind.PrefixDecrement)) && DynAbs.Tracing.TraceSender.Conditional_F2(10899, 387991, 388012)) || DynAbs.Tracing.TraceSender.Conditional_F3(10899, 388015, 388026))) ? resultOfIncrementType : operandType
                        ;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 388049, 388081);

                        f_10899_388049_388080(this, node, resultType);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 388103, 388120);

                        setResult = true;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 388144, 388279);

                        f_10899_388144_388278(this, node, targetType: operandLvalue, targetSlot: f_10899_388221_388243(this, f_10899_388230_388242(node)), valueType: resultOfIncrementType);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 387756, 388298);
                    }
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 384056, 388313);
                }

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 388329, 388415) || true) && (!setResult)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 388329, 388415);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 388377, 388400);

                    f_10899_388377_388399(this, node);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 388329, 388415);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 388431, 388443);

                return null;
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 383746, 388454);

                int
                f_10899_383849_383882(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 383849, 383882);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10899_383938_383950(Microsoft.CodeAnalysis.CSharp.BoundIncrementOperator
                this_param)
                {
                    var return_v = this_param.Operand;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 383938, 383950);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                f_10899_383917_383951(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                node)
                {
                    var return_v = this_param.VisitRvalueWithState(node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 383917, 383951);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                f_10899_383986_384002()
                {
                    var return_v = LvalueResultType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 383986, 384002);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.UnaryOperatorKind
                f_10899_384262_384279(Microsoft.CodeAnalysis.CSharp.BoundIncrementOperator
                this_param)
                {
                    var return_v = this_param.OperatorKind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 384262, 384279);
                    return return_v;
                }


                bool
                f_10899_384262_384295(Microsoft.CodeAnalysis.CSharp.UnaryOperatorKind
                kind)
                {
                    var return_v = kind.IsUserDefined();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 384262, 384295);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol?
                f_10899_384299_384313(Microsoft.CodeAnalysis.CSharp.BoundIncrementOperator
                this_param)
                {
                    var return_v = this_param.MethodOpt;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 384299, 384313);
                    return return_v;
                }


                int?
                f_10899_384299_384329_M(int?
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 384299, 384329);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                f_10899_384338_384352(Microsoft.CodeAnalysis.CSharp.BoundIncrementOperator
                this_param)
                {
                    var return_v = this_param.MethodOpt;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 384338, 384352);
                    return return_v;
                }


                int?
                f_10899_384895_384940_M(int?
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 384895, 384940);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                f_10899_385019_385074(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                this_param)
                {
                    var return_v = this_param.ReturnTypeWithAnnotations;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 385019, 385074);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol>
                f_10899_385222_385250(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                this_param)
                {
                    var return_v = this_param.Parameters;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 385222, 385250);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                f_10899_385222_385273(Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol
                this_param)
                {
                    var return_v = this_param.TypeWithAnnotations;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 385222, 385273);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol>
                f_10899_385371_385399(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                this_param)
                {
                    var return_v = this_param.Parameters;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 385371, 385399);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10899_386056_386068(Microsoft.CodeAnalysis.CSharp.BoundIncrementOperator
                this_param)
                {
                    var return_v = this_param.Operand;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 386056, 386068);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Conversion
                f_10899_386095_386117(Microsoft.CodeAnalysis.CSharp.BoundIncrementOperator
                this_param)
                {
                    var return_v = this_param.OperandConversion;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 386095, 386117);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                f_10899_385968_386549(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundConversion?
                conversionOpt, Microsoft.CodeAnalysis.CSharp.BoundExpression
                conversionOperand, Microsoft.CodeAnalysis.CSharp.Conversion
                conversion, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                targetTypeWithNullability, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                operandType, bool
                checkConversion, bool
                fromExplicitCast, bool
                useLegacyWarnings, Microsoft.CodeAnalysis.CSharp.NullableWalker.AssignmentKind
                assignmentKind, Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol?
                parameterOpt, bool
                reportTopLevelWarnings, bool
                reportRemainingWarnings)
                {
                    var return_v = this_param.VisitConversion(conversionOpt: conversionOpt, conversionOperand, conversion, targetTypeWithNullability, operandType, checkConversion: checkConversion, fromExplicitCast: fromExplicitCast, useLegacyWarnings: useLegacyWarnings, assignmentKind, parameterOpt, reportTopLevelWarnings: reportTopLevelWarnings, reportRemainingWarnings: reportRemainingWarnings);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 385968, 386549);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Conversion
                f_10899_387330_387351(Microsoft.CodeAnalysis.CSharp.BoundIncrementOperator
                this_param)
                {
                    var return_v = this_param.ResultConversion;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 387330, 387351);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                f_10899_387223_387630(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundConversion?
                conversionOpt, Microsoft.CodeAnalysis.CSharp.BoundIncrementOperator
                conversionOperand, Microsoft.CodeAnalysis.CSharp.Conversion
                conversion, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                targetTypeWithNullability, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                operandType, bool
                checkConversion, bool
                fromExplicitCast, bool
                useLegacyWarnings, Microsoft.CodeAnalysis.CSharp.NullableWalker.AssignmentKind
                assignmentKind)
                {
                    var return_v = this_param.VisitConversion(conversionOpt: conversionOpt, (Microsoft.CodeAnalysis.CSharp.BoundExpression)conversionOperand, conversion, targetTypeWithNullability, operandType, checkConversion: checkConversion, fromExplicitCast: fromExplicitCast, useLegacyWarnings: useLegacyWarnings, assignmentKind);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 387223, 387630);
                    return return_v;
                }


                bool
                f_10899_387760_387775_M(bool
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 387760, 387775);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.UnaryOperatorKind
                f_10899_387826_387843(Microsoft.CodeAnalysis.CSharp.BoundIncrementOperator
                this_param)
                {
                    var return_v = this_param.OperatorKind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 387826, 387843);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.UnaryOperatorKind
                f_10899_387826_387854(Microsoft.CodeAnalysis.CSharp.UnaryOperatorKind
                kind)
                {
                    var return_v = kind.Operator();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 387826, 387854);
                    return return_v;
                }


                int
                f_10899_388049_388080(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundIncrementOperator
                expression, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                type)
                {
                    this_param.SetResultType((Microsoft.CodeAnalysis.CSharp.BoundExpression)expression, type);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 388049, 388080);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10899_388230_388242(Microsoft.CodeAnalysis.CSharp.BoundIncrementOperator
                this_param)
                {
                    var return_v = this_param.Operand;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 388230, 388242);
                    return return_v;
                }


                int
                f_10899_388221_388243(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                node)
                {
                    var return_v = this_param.MakeSlot(node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 388221, 388243);
                    return return_v;
                }


                int
                f_10899_388144_388278(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundIncrementOperator
                valueOpt, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                targetType, int
                targetSlot, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                valueType)
                {
                    this_param.TrackNullableStateForAssignment((Microsoft.CodeAnalysis.CSharp.BoundExpression)valueOpt, targetType: targetType, targetSlot: targetSlot, valueType: valueType);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 388144, 388278);
                    return 0;
                }


                int
                f_10899_388377_388399(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundIncrementOperator
                node)
                {
                    this_param.SetNotNullResult((Microsoft.CodeAnalysis.CSharp.BoundExpression)node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 388377, 388399);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 383746, 388454);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 383746, 388454);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override BoundNode? VisitCompoundAssignmentOperator(BoundCompoundAssignmentOperator node)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 388466, 392039);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 388587, 388608);

                var
                left = f_10899_388598_388607(node)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 388622, 388645);

                var
                right = f_10899_388634_388644(node)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 388659, 388671);

                f_10899_388659_388670(this, left);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 388685, 388737);

                TypeWithAnnotations
                declaredType = f_10899_388720_388736()
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 388751, 388801);

                TypeWithAnnotations
                leftLValueType = declaredType
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 388815, 388857);

                TypeWithState
                leftResultType = f_10899_388846_388856()
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 388873, 388907);

                f_10899_388873_388906(!IsConditionalState);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 388923, 389010);

                TypeWithState
                leftOnRightType = f_10899_388955_389009(this, leftResultType, f_10899_388989_389008(this, f_10899_388998_389007(node)))
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 389138, 389997) || true) && ((object)node.Operator.LeftType != null)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 389138, 389997);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 389339, 389890);

                    leftOnRightType = f_10899_389357_389889(this, conversionOpt: null, f_10899_389437_389446(node), f_10899_389469_389488(node), TypeWithAnnotations.Create(node.Operator.LeftType), leftOnRightType, checkConversion: true, fromExplicitCast: false, useLegacyWarnings: false, AssignmentKind.Assignment, reportTopLevelWarnings: false, reportRemainingWarnings: true);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 389138, 389997);
                }

                else

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 389138, 389997);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 389956, 389982);

                    leftOnRightType = default;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 389138, 389997);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 390013, 390038);

                TypeWithState
                resultType
                = default(TypeWithState);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 390052, 390106);

                TypeWithState
                rightType = f_10899_390078_390105(this, right)
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 390120, 391800) || true) && ((object)node.Operator.ReturnType != null)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 390120, 391800);

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 390198, 390688) || true) && (f_10899_390202_390236(node.Operator.Kind) && (DynAbs.Tracing.TraceSender.Expression_True(10899, 390202, 390276) && (object)node.Operator.Method != null) && (DynAbs.Tracing.TraceSender.Expression_True(10899, 390202, 390320) && f_10899_390280_390315(node.Operator.Method) == 2))
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 390198, 390688);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 390362, 390405);

                        MethodSymbol
                        method = node.Operator.Method
                        ;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 390427, 390669);

                        f_10899_390427_390668(this, node, f_10899_390448_390487(f_10899_390470_390479(node), right), f_10899_390489_390513(method), f_10899_390515_390532(method), argsToParamsOpt: default, defaultArguments: default, expanded: true, invokedAsExtensionMethod: false, method);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 390198, 390688);
                    }
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 390708, 390840);

                    resultType = f_10899_390721_390839(this, node.Operator.Kind, node.Operator.Method, node.Operator.ReturnType, leftOnRightType, rightType);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 390860, 390934);

                    FlowAnalysisAnnotations
                    leftAnnotations = f_10899_390902_390933(this, f_10899_390923_390932(node))
                    ;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 390952, 391025);

                    leftLValueType = f_10899_390969_391024(leftLValueType, leftAnnotations);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 391045, 391442);

                    resultType = f_10899_391058_391441(this, conversionOpt: null, node, f_10899_391165_391185(node), leftLValueType, resultType, checkConversion: true, fromExplicitCast: false, useLegacyWarnings: false, AssignmentKind.Assignment);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 391566, 391647);

                    f_10899_391566_391646(this, resultType, leftAnnotations, f_10899_391625_391645(node.Syntax));
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 390120, 391800);
                }

                else

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 390120, 391800);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 391713, 391785);

                    resultType = TypeWithState.Create(f_10899_391747_391756(node), NullableFlowState.NotNull);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 390120, 391800);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 391816, 391853);

                f_10899_391816_391852(this, left, ref resultType);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 391867, 391954);

                f_10899_391867_391953(this, node, leftLValueType, f_10899_391921_391940(this, f_10899_391930_391939(node)), resultType);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 391970, 392002);

                f_10899_391970_392001(this, node, resultType);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 392016, 392028);

                return null;
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 388466, 392039);

                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10899_388598_388607(Microsoft.CodeAnalysis.CSharp.BoundCompoundAssignmentOperator
                this_param)
                {
                    var return_v = this_param.Left;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 388598, 388607);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10899_388634_388644(Microsoft.CodeAnalysis.CSharp.BoundCompoundAssignmentOperator
                this_param)
                {
                    var return_v = this_param.Right;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 388634, 388644);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundNode?
                f_10899_388659_388670(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                node)
                {
                    var return_v = this_param.Visit((Microsoft.CodeAnalysis.CSharp.BoundNode)node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 388659, 388670);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                f_10899_388720_388736()
                {
                    var return_v = LvalueResultType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 388720, 388736);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                f_10899_388846_388856()
                {
                    var return_v = ResultType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 388846, 388856);
                    return return_v;
                }


                int
                f_10899_388873_388906(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 388873, 388906);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10899_388998_389007(Microsoft.CodeAnalysis.CSharp.BoundCompoundAssignmentOperator
                this_param)
                {
                    var return_v = this_param.Left;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 388998, 389007);
                    return return_v;
                }


                int
                f_10899_388989_389008(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                node)
                {
                    var return_v = this_param.MakeSlot(node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 388989, 389008);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                f_10899_388955_389009(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                type, int
                slot)
                {
                    var return_v = this_param.GetAdjustedResult(type, slot);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 388955, 389009);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10899_389437_389446(Microsoft.CodeAnalysis.CSharp.BoundCompoundAssignmentOperator
                this_param)
                {
                    var return_v = this_param.Left;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 389437, 389446);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Conversion
                f_10899_389469_389488(Microsoft.CodeAnalysis.CSharp.BoundCompoundAssignmentOperator
                this_param)
                {
                    var return_v = this_param.LeftConversion;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 389469, 389488);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                f_10899_389357_389889(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundConversion?
                conversionOpt, Microsoft.CodeAnalysis.CSharp.BoundExpression
                conversionOperand, Microsoft.CodeAnalysis.CSharp.Conversion
                conversion, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                targetTypeWithNullability, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                operandType, bool
                checkConversion, bool
                fromExplicitCast, bool
                useLegacyWarnings, Microsoft.CodeAnalysis.CSharp.NullableWalker.AssignmentKind
                assignmentKind, bool
                reportTopLevelWarnings, bool
                reportRemainingWarnings)
                {
                    var return_v = this_param.VisitConversion(conversionOpt: conversionOpt, conversionOperand, conversion, targetTypeWithNullability, operandType, checkConversion: checkConversion, fromExplicitCast: fromExplicitCast, useLegacyWarnings: useLegacyWarnings, assignmentKind, reportTopLevelWarnings: reportTopLevelWarnings, reportRemainingWarnings: reportRemainingWarnings);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 389357, 389889);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                f_10899_390078_390105(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                node)
                {
                    var return_v = this_param.VisitRvalueWithState(node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 390078, 390105);
                    return return_v;
                }


                bool
                f_10899_390202_390236(Microsoft.CodeAnalysis.CSharp.BinaryOperatorKind
                kind)
                {
                    var return_v = kind.IsUserDefined();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 390202, 390236);
                    return return_v;
                }


                int
                f_10899_390280_390315(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                this_param)
                {
                    var return_v = this_param.ParameterCount;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 390280, 390315);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10899_390470_390479(Microsoft.CodeAnalysis.CSharp.BoundCompoundAssignmentOperator
                this_param)
                {
                    var return_v = this_param.Left;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 390470, 390479);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                f_10899_390448_390487(Microsoft.CodeAnalysis.CSharp.BoundExpression
                item1, Microsoft.CodeAnalysis.CSharp.BoundExpression
                item2)
                {
                    var return_v = ImmutableArray.Create(item1, item2);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 390448, 390487);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.RefKind>
                f_10899_390489_390513(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                this_param)
                {
                    var return_v = this_param.ParameterRefKinds;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 390489, 390513);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol>
                f_10899_390515_390532(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                this_param)
                {
                    var return_v = this_param.Parameters;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 390515, 390532);
                    return return_v;
                }


                (Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol? method, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.NullableWalker.VisitArgumentResult> results, bool returnNotNull)
                f_10899_390427_390668(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundCompoundAssignmentOperator
                node, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                arguments, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.RefKind>
                refKindsOpt, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol>
                parametersOpt, System.Collections.Immutable.ImmutableArray<int>
                argsToParamsOpt, Microsoft.CodeAnalysis.BitVector
                defaultArguments, bool
                expanded, bool
                invokedAsExtensionMethod, Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                method)
                {
                    var return_v = this_param.VisitArguments((Microsoft.CodeAnalysis.CSharp.BoundNode)node, arguments, refKindsOpt, parametersOpt, argsToParamsOpt: argsToParamsOpt, defaultArguments: defaultArguments, expanded: expanded, invokedAsExtensionMethod: invokedAsExtensionMethod, method);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 390427, 390668);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                f_10899_390721_390839(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BinaryOperatorKind
                operatorKind, Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol?
                methodOpt, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                resultType, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                leftType, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                rightType)
                {
                    var return_v = this_param.InferResultNullability(operatorKind, methodOpt, resultType, leftType, rightType);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 390721, 390839);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10899_390923_390932(Microsoft.CodeAnalysis.CSharp.BoundCompoundAssignmentOperator
                this_param)
                {
                    var return_v = this_param.Left;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 390923, 390932);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.FlowAnalysisAnnotations
                f_10899_390902_390933(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                expr)
                {
                    var return_v = this_param.GetLValueAnnotations(expr);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 390902, 390933);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                f_10899_390969_391024(Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                declaredType, Microsoft.CodeAnalysis.CSharp.Symbols.FlowAnalysisAnnotations
                flowAnalysisAnnotations)
                {
                    var return_v = ApplyLValueAnnotations(declaredType, flowAnalysisAnnotations);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 390969, 391024);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Conversion
                f_10899_391165_391185(Microsoft.CodeAnalysis.CSharp.BoundCompoundAssignmentOperator
                this_param)
                {
                    var return_v = this_param.FinalConversion;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 391165, 391185);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                f_10899_391058_391441(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundConversion?
                conversionOpt, Microsoft.CodeAnalysis.CSharp.BoundCompoundAssignmentOperator
                conversionOperand, Microsoft.CodeAnalysis.CSharp.Conversion
                conversion, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                targetTypeWithNullability, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                operandType, bool
                checkConversion, bool
                fromExplicitCast, bool
                useLegacyWarnings, Microsoft.CodeAnalysis.CSharp.NullableWalker.AssignmentKind
                assignmentKind)
                {
                    var return_v = this_param.VisitConversion(conversionOpt: conversionOpt, (Microsoft.CodeAnalysis.CSharp.BoundExpression)conversionOperand, conversion, targetTypeWithNullability, operandType, checkConversion: checkConversion, fromExplicitCast: fromExplicitCast, useLegacyWarnings: useLegacyWarnings, assignmentKind);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 391058, 391441);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Location
                f_10899_391625_391645(Microsoft.CodeAnalysis.SyntaxNode
                this_param)
                {
                    var return_v = this_param.Location;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 391625, 391645);
                    return return_v;
                }


                bool
                f_10899_391566_391646(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                state, Microsoft.CodeAnalysis.CSharp.Symbols.FlowAnalysisAnnotations
                annotations, Microsoft.CodeAnalysis.Location
                location)
                {
                    var return_v = this_param.CheckDisallowedNullAssignment(state, annotations, location);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 391566, 391646);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                f_10899_391747_391756(Microsoft.CodeAnalysis.CSharp.BoundCompoundAssignmentOperator
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 391747, 391756);
                    return return_v;
                }


                int
                f_10899_391816_391852(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                left, ref Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                rightState)
                {
                    this_param.AdjustSetValue(left, ref rightState);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 391816, 391852);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10899_391930_391939(Microsoft.CodeAnalysis.CSharp.BoundCompoundAssignmentOperator
                this_param)
                {
                    var return_v = this_param.Left;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 391930, 391939);
                    return return_v;
                }


                int
                f_10899_391921_391940(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                node)
                {
                    var return_v = this_param.MakeSlot(node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 391921, 391940);
                    return return_v;
                }


                int
                f_10899_391867_391953(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundCompoundAssignmentOperator
                valueOpt, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                targetType, int
                targetSlot, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                valueType)
                {
                    this_param.TrackNullableStateForAssignment((Microsoft.CodeAnalysis.CSharp.BoundExpression)valueOpt, targetType, targetSlot, valueType);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 391867, 391953);
                    return 0;
                }


                int
                f_10899_391970_392001(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundCompoundAssignmentOperator
                expression, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                type)
                {
                    this_param.SetResultType((Microsoft.CodeAnalysis.CSharp.BoundExpression)expression, type);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 391970, 392001);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 388466, 392039);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 388466, 392039);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override BoundNode? VisitFixedLocalCollectionInitializer(BoundFixedLocalCollectionInitializer node)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 392051, 392716);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 392182, 392216);

                var
                initializer = f_10899_392200_392215(node)
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 392230, 392390) || true) && (f_10899_392234_392250(initializer) == BoundKind.AddressOfOperator)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 392230, 392390);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 392315, 392375);

                    initializer = f_10899_392329_392374(((BoundAddressOfOperator)initializer));
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 392230, 392390);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 392406, 392431);

                f_10899_392406_392430(this, initializer);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 392445, 392642) || true) && (f_10899_392449_392469(f_10899_392449_392464(node)) == BoundKind.AddressOfOperator)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 392445, 392642);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 392534, 392627);

                    f_10899_392534_392626(this, f_10899_392548_392563(node), TypeWithState.Create(f_10899_392586_392606(f_10899_392586_392601(node)), f_10899_392608_392618().State));
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 392445, 392642);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 392656, 392679);

                f_10899_392656_392678(this, node);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 392693, 392705);

                return null;
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 392051, 392716);

                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10899_392200_392215(Microsoft.CodeAnalysis.CSharp.BoundFixedLocalCollectionInitializer
                this_param)
                {
                    var return_v = this_param.Expression;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 392200, 392215);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundKind
                f_10899_392234_392250(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.Kind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 392234, 392250);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10899_392329_392374(Microsoft.CodeAnalysis.CSharp.BoundAddressOfOperator
                this_param)
                {
                    var return_v = this_param.Operand;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 392329, 392374);
                    return return_v;
                }


                int
                f_10899_392406_392430(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                node)
                {
                    this_param.VisitRvalue(node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 392406, 392430);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10899_392449_392464(Microsoft.CodeAnalysis.CSharp.BoundFixedLocalCollectionInitializer
                this_param)
                {
                    var return_v = this_param.Expression;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 392449, 392464);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundKind
                f_10899_392449_392469(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.Kind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 392449, 392469);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10899_392548_392563(Microsoft.CodeAnalysis.CSharp.BoundFixedLocalCollectionInitializer
                this_param)
                {
                    var return_v = this_param.Expression;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 392548, 392563);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10899_392586_392601(Microsoft.CodeAnalysis.CSharp.BoundFixedLocalCollectionInitializer
                this_param)
                {
                    var return_v = this_param.Expression;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 392586, 392601);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?
                f_10899_392586_392606(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 392586, 392606);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                f_10899_392608_392618()
                {
                    var return_v = ResultType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 392608, 392618);
                    return return_v;
                }


                int
                f_10899_392534_392626(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                expression, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                type)
                {
                    this_param.SetResultType(expression, type);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 392534, 392626);
                    return 0;
                }


                int
                f_10899_392656_392678(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundFixedLocalCollectionInitializer
                node)
                {
                    this_param.SetNotNullResult((Microsoft.CodeAnalysis.CSharp.BoundExpression)node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 392656, 392678);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 392051, 392716);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 392051, 392716);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override BoundNode? VisitAddressOfOperator(BoundAddressOfOperator node)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 392728, 392925);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 392831, 392851);

                f_10899_392831_392850(this, f_10899_392837_392849(node));
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 392865, 392888);

                f_10899_392865_392887(this, node);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 392902, 392914);

                return null;
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 392728, 392925);

                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10899_392837_392849(Microsoft.CodeAnalysis.CSharp.BoundAddressOfOperator
                this_param)
                {
                    var return_v = this_param.Operand;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 392837, 392849);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundNode?
                f_10899_392831_392850(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                node)
                {
                    var return_v = this_param.Visit((Microsoft.CodeAnalysis.CSharp.BoundNode)node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 392831, 392850);
                    return return_v;
                }


                int
                f_10899_392865_392887(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundAddressOfOperator
                node)
                {
                    this_param.SetNotNullResult((Microsoft.CodeAnalysis.CSharp.BoundExpression)node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 392865, 392887);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 392728, 392925);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 392728, 392925);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private void ReportArgumentWarnings(BoundExpression argument, TypeWithState argumentType, ParameterSymbol parameter)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 392937, 393554);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 393078, 393124);

                var
                paramType = f_10899_393094_393123(parameter)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 393138, 393285);

                f_10899_393138_393284(this, argument, paramType, argumentType, useLegacyWarnings: false, AssignmentKind.Argument, parameterOpt: parameter);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 393301, 393543) || true) && (argumentType.Type is { } argType && (DynAbs.Tracing.TraceSender.Expression_True(10899, 393305, 393387) && f_10899_393341_393387(paramType.Type, argType)))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 393301, 393543);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 393421, 393528);

                    f_10899_393421_393527(this, argument.Syntax, argType, parameter, paramType.Type, forOutput: false);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 393301, 393543);
                }
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 392937, 393554);

                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                f_10899_393094_393123(Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol
                this_param)
                {
                    var return_v = this_param.TypeWithAnnotations;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 393094, 393123);
                    return return_v;
                }


                int
                f_10899_393138_393284(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                value, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                targetType, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                valueType, bool
                useLegacyWarnings, Microsoft.CodeAnalysis.CSharp.NullableWalker.AssignmentKind
                assignmentKind, Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol
                parameterOpt)
                {
                    this_param.ReportNullableAssignmentIfNecessary(value, targetType, valueType, useLegacyWarnings: useLegacyWarnings, assignmentKind, parameterOpt: parameterOpt);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 393138, 393284);
                    return 0;
                }


                bool
                f_10899_393341_393387(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                type1, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                type2)
                {
                    var return_v = IsNullabilityMismatch(type1, type2);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 393341, 393387);
                    return return_v;
                }


                int
                f_10899_393421_393527(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.SyntaxNode
                argument, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                argumentType, Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol
                parameter, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                parameterType, bool
                forOutput)
                {
                    this_param.ReportNullabilityMismatchInArgument(argument, argumentType, parameter, parameterType, forOutput: forOutput);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 393421, 393527);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 392937, 393554);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 392937, 393554);
            }
        }

        private void ReportNullabilityMismatchInRefArgument(BoundExpression argument, TypeSymbol argumentType, ParameterSymbol parameter, TypeSymbol parameterType)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 393566, 394013);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 393746, 394002);

                f_10899_393746_394001(this, ErrorCode.WRN_NullabilityMismatchInArgument, argument.Syntax, argumentType, parameterType, f_10899_393888_393931(parameter), f_10899_393950_394000(parameter));
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 393566, 394013);

                object
                f_10899_393888_393931(Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol
                parameterOpt)
                {
                    var return_v = GetParameterAsDiagnosticArgument(parameterOpt);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 393888, 393931);
                    return return_v;
                }


                object
                f_10899_393950_394000(Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol
                parameterOpt)
                {
                    var return_v = GetContainingSymbolAsDiagnosticArgument(parameterOpt);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 393950, 394000);
                    return return_v;
                }


                int
                f_10899_393746_394001(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.ErrorCode
                errorCode, Microsoft.CodeAnalysis.SyntaxNode
                syntaxNode, params object[]
                arguments)
                {
                    this_param.ReportDiagnostic(errorCode, syntaxNode, arguments);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 393746, 394001);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 393566, 394013);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 393566, 394013);
            }
        }

        private void ReportNullabilityMismatchInArgument(SyntaxNode argument, TypeSymbol argumentType, ParameterSymbol parameter, TypeSymbol parameterType, bool forOutput)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 394248, 394558);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 394436, 394547);

                f_10899_394436_394546(this, f_10899_394472_394494(argument), argumentType, parameter, parameterType, forOutput);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 394248, 394558);

                Microsoft.CodeAnalysis.Location
                f_10899_394472_394494(Microsoft.CodeAnalysis.SyntaxNode
                this_param)
                {
                    var return_v = this_param.GetLocation();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 394472, 394494);
                    return return_v;
                }


                int
                f_10899_394436_394546(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.Location
                argumentLocation, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                argumentType, Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol
                parameterOpt, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                parameterType, bool
                forOutput)
                {
                    this_param.ReportNullabilityMismatchInArgument(argumentLocation, argumentType, parameterOpt, parameterType, forOutput);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 394436, 394546);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 394248, 394558);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 394248, 394558);
            }
        }

        private void ReportNullabilityMismatchInArgument(Location argumentLocation, TypeSymbol argumentType, ParameterSymbol? parameterOpt, TypeSymbol parameterType, bool forOutput)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 394570, 395311);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 394791, 395300);

                f_10899_394791_395299(this, (DynAbs.Tracing.TraceSender.Conditional_F1(10899, 394808, 394817) || ((forOutput && DynAbs.Tracing.TraceSender.Conditional_F2(10899, 394820, 394872)) || DynAbs.Tracing.TraceSender.Conditional_F3(10899, 394875, 394918))) ? ErrorCode.WRN_NullabilityMismatchInArgumentForOutput : ErrorCode.WRN_NullabilityMismatchInArgument, argumentLocation, argumentType, (DynAbs.Tracing.TraceSender.Conditional_F1(10899, 394986, 395090) || ((parameterOpt is not null && (DynAbs.Tracing.TraceSender.Expression_True(10899, 394986, 395056) && f_10899_395014_395056(f_10899_395014_395031(parameterOpt))) && (DynAbs.Tracing.TraceSender.Expression_True(10899, 394986, 395090) && f_10899_395060_395090(parameterType)) && DynAbs.Tracing.TraceSender.Conditional_F2(10899, 395093, 395110)) || DynAbs.Tracing.TraceSender.Conditional_F3(10899, 395113, 395126))) ? f_10899_395093_395110(parameterOpt) : parameterType, f_10899_395180_395226(parameterOpt), f_10899_395245_395298(parameterOpt));
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 394570, 395311);

                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                f_10899_395014_395031(Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 395014, 395031);
                    return return_v;
                }


                bool
                f_10899_395014_395056(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                typeArgument)
                {
                    var return_v = typeArgument.IsNonNullableValueType();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 395014, 395056);
                    return return_v;
                }


                bool
                f_10899_395060_395090(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                type)
                {
                    var return_v = type.IsNullableType();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 395060, 395090);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                f_10899_395093_395110(Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 395093, 395110);
                    return return_v;
                }


                object
                f_10899_395180_395226(Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol?
                parameterOpt)
                {
                    var return_v = GetParameterAsDiagnosticArgument(parameterOpt);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 395180, 395226);
                    return return_v;
                }


                object
                f_10899_395245_395298(Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol?
                parameterOpt)
                {
                    var return_v = GetContainingSymbolAsDiagnosticArgument(parameterOpt);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 395245, 395298);
                    return return_v;
                }


                int
                f_10899_394791_395299(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.ErrorCode
                errorCode, Microsoft.CodeAnalysis.Location
                location, params object[]
                arguments)
                {
                    this_param.ReportDiagnostic(errorCode, location, arguments);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 394791, 395299);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 394570, 395311);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 394570, 395311);
            }
        }

        private TypeWithAnnotations GetDeclaredLocalResult(LocalSymbol local)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 395323, 395563);
                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations type = default(Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 395417, 395552);

                return (DynAbs.Tracing.TraceSender.Conditional_F1(10899, 395424, 395482) || ((f_10899_395424_395482(_variables, local, out type) && DynAbs.Tracing.TraceSender.Conditional_F2(10899, 395502, 395506)) || DynAbs.Tracing.TraceSender.Conditional_F3(10899, 395526, 395551))) ? type : f_10899_395526_395551(local);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 395323, 395563);

                bool
                f_10899_395424_395482(Microsoft.CodeAnalysis.CSharp.NullableWalker.Variables
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.LocalSymbol
                symbol, out Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                type)
                {
                    var return_v = this_param.TryGetType((Microsoft.CodeAnalysis.CSharp.Symbol)symbol, out type);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 395424, 395482);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                f_10899_395526_395551(Microsoft.CodeAnalysis.CSharp.Symbols.LocalSymbol
                this_param)
                {
                    var return_v = this_param.TypeWithAnnotations;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 395526, 395551);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 395323, 395563);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 395323, 395563);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private TypeWithAnnotations GetDeclaredParameterResult(ParameterSymbol parameter)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 395575, 395835);
                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations type = default(Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 395681, 395824);

                return (DynAbs.Tracing.TraceSender.Conditional_F1(10899, 395688, 395750) || ((f_10899_395688_395750(_variables, parameter, out type) && DynAbs.Tracing.TraceSender.Conditional_F2(10899, 395770, 395774)) || DynAbs.Tracing.TraceSender.Conditional_F3(10899, 395794, 395823))) ? type : f_10899_395794_395823(parameter);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 395575, 395835);

                bool
                f_10899_395688_395750(Microsoft.CodeAnalysis.CSharp.NullableWalker.Variables
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol
                symbol, out Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                type)
                {
                    var return_v = this_param.TryGetType((Microsoft.CodeAnalysis.CSharp.Symbol)symbol, out type);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 395688, 395750);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                f_10899_395794_395823(Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol
                this_param)
                {
                    var return_v = this_param.TypeWithAnnotations;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 395794, 395823);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 395575, 395835);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 395575, 395835);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override BoundNode? VisitBaseReference(BoundBaseReference node)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 395847, 396010);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 395942, 395973);

                f_10899_395942_395972(this, node);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 395987, 395999);

                return null;
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 395847, 396010);

                int
                f_10899_395942_395972(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundBaseReference
                node)
                {
                    this_param.VisitThisOrBaseReference((Microsoft.CodeAnalysis.CSharp.BoundExpression)node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 395942, 395972);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 395847, 396010);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 395847, 396010);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private void SplitIfBooleanConstant(BoundExpression node)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 396022, 396498);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 396104, 396487) || true) && (f_10899_396108_396126(node) is { IsBoolean: true, BooleanValue: bool booleanValue })
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 396104, 396487);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 396216, 396224);

                    f_10899_396216_396223(this);

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 396242, 396472) || true) && (booleanValue)
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 396242, 396472);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 396300, 396336);

                        StateWhenFalse = f_10899_396317_396335(this);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 396242, 396472);
                    }

                    else

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 396242, 396472);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 396418, 396453);

                        StateWhenTrue = f_10899_396434_396452(this);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 396242, 396472);
                    }
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 396104, 396487);
                }
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 396022, 396498);

                Microsoft.CodeAnalysis.ConstantValue?
                f_10899_396108_396126(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.ConstantValue;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 396108, 396126);
                    return return_v;
                }


                int
                f_10899_396216_396223(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param)
                {
                    this_param.Split();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 396216, 396223);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState
                f_10899_396317_396335(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param)
                {
                    var return_v = this_param.UnreachableState();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 396317, 396335);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState
                f_10899_396434_396452(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param)
                {
                    var return_v = this_param.UnreachableState();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 396434, 396452);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 396022, 396498);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 396022, 396498);
            }
        }

        public override BoundNode? VisitFieldAccess(BoundFieldAccess node)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 396510, 396833);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 396601, 396681);

                var
                updatedSymbol = f_10899_396621_396680(this, node, f_10899_396645_396661(node), f_10899_396663_396679(node))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 396697, 396726);

                f_10899_396697_396725(this, node);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 396740, 396796);

                f_10899_396740_396795(this, node, f_10899_396763_396779(node), updatedSymbol);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 396810, 396822);

                return null;
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 396510, 396833);

                Microsoft.CodeAnalysis.CSharp.BoundExpression?
                f_10899_396645_396661(Microsoft.CodeAnalysis.CSharp.BoundFieldAccess
                this_param)
                {
                    var return_v = this_param.ReceiverOpt;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 396645, 396661);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol
                f_10899_396663_396679(Microsoft.CodeAnalysis.CSharp.BoundFieldAccess
                this_param)
                {
                    var return_v = this_param.FieldSymbol;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 396663, 396679);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbol
                f_10899_396621_396680(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundFieldAccess
                node, Microsoft.CodeAnalysis.CSharp.BoundExpression?
                receiverOpt, Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol
                member)
                {
                    var return_v = this_param.VisitMemberAccess((Microsoft.CodeAnalysis.CSharp.BoundExpression)node, receiverOpt, (Microsoft.CodeAnalysis.CSharp.Symbol)member);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 396621, 396680);
                    return return_v;
                }


                int
                f_10899_396697_396725(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundFieldAccess
                node)
                {
                    this_param.SplitIfBooleanConstant((Microsoft.CodeAnalysis.CSharp.BoundExpression)node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 396697, 396725);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol
                f_10899_396763_396779(Microsoft.CodeAnalysis.CSharp.BoundFieldAccess
                this_param)
                {
                    var return_v = this_param.FieldSymbol;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 396763, 396779);
                    return return_v;
                }


                int
                f_10899_396740_396795(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundFieldAccess
                node, Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol
                originalSymbol, Microsoft.CodeAnalysis.CSharp.Symbol
                updatedSymbol)
                {
                    this_param.SetUpdatedSymbol((Microsoft.CodeAnalysis.CSharp.BoundNode)node, (Microsoft.CodeAnalysis.CSharp.Symbol)originalSymbol, updatedSymbol);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 396740, 396795);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 396510, 396833);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 396510, 396833);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override BoundNode? VisitPropertyAccess(BoundPropertyAccess node)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 396845, 397546);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 396942, 396977);

                var
                property = f_10899_396957_396976(node)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 396991, 397063);

                var
                updatedMember = f_10899_397011_397062(this, node, f_10899_397035_397051(node), property)
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 397079, 397445) || true) && (f_10899_397083_397104_M(!IsAnalyzingAttribute))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 397079, 397445);

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 397138, 397430) || true) && (_expressionIsRead)
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 397138, 397430);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 397201, 397265);

                        f_10899_397201_397264(this, f_10899_397227_397243(node), f_10899_397245_397263(property));
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 397138, 397430);
                    }

                    else

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 397138, 397430);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 397347, 397411);

                        f_10899_397347_397410(this, f_10899_397373_397389(node), f_10899_397391_397409(property));
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 397138, 397430);
                    }
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 397079, 397445);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 397461, 397509);

                f_10899_397461_397508(this, node, property, updatedMember);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 397523, 397535);

                return null;
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 396845, 397546);

                Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol
                f_10899_396957_396976(Microsoft.CodeAnalysis.CSharp.BoundPropertyAccess
                this_param)
                {
                    var return_v = this_param.PropertySymbol;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 396957, 396976);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression?
                f_10899_397035_397051(Microsoft.CodeAnalysis.CSharp.BoundPropertyAccess
                this_param)
                {
                    var return_v = this_param.ReceiverOpt;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 397035, 397051);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbol
                f_10899_397011_397062(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundPropertyAccess
                node, Microsoft.CodeAnalysis.CSharp.BoundExpression?
                receiverOpt, Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol
                member)
                {
                    var return_v = this_param.VisitMemberAccess((Microsoft.CodeAnalysis.CSharp.BoundExpression)node, receiverOpt, (Microsoft.CodeAnalysis.CSharp.Symbol)member);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 397011, 397062);
                    return return_v;
                }


                bool
                f_10899_397083_397104_M(bool
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 397083, 397104);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression?
                f_10899_397227_397243(Microsoft.CodeAnalysis.CSharp.BoundPropertyAccess
                this_param)
                {
                    var return_v = this_param.ReceiverOpt;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 397227, 397243);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                f_10899_397245_397263(Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol
                this_param)
                {
                    var return_v = this_param.GetMethod;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 397245, 397263);
                    return return_v;
                }


                int
                f_10899_397201_397264(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression?
                receiverOpt, Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                method)
                {
                    this_param.ApplyMemberPostConditions(receiverOpt, method);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 397201, 397264);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression?
                f_10899_397373_397389(Microsoft.CodeAnalysis.CSharp.BoundPropertyAccess
                this_param)
                {
                    var return_v = this_param.ReceiverOpt;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 397373, 397389);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                f_10899_397391_397409(Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol
                this_param)
                {
                    var return_v = this_param.SetMethod;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 397391, 397409);
                    return return_v;
                }


                int
                f_10899_397347_397410(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression?
                receiverOpt, Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                method)
                {
                    this_param.ApplyMemberPostConditions(receiverOpt, method);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 397347, 397410);
                    return 0;
                }


                int
                f_10899_397461_397508(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundPropertyAccess
                node, Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol
                originalSymbol, Microsoft.CodeAnalysis.CSharp.Symbol
                updatedSymbol)
                {
                    this_param.SetUpdatedSymbol((Microsoft.CodeAnalysis.CSharp.BoundNode)node, (Microsoft.CodeAnalysis.CSharp.Symbol)originalSymbol, updatedSymbol);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 397461, 397508);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 396845, 397546);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 396845, 397546);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override BoundNode? VisitIndexerAccess(BoundIndexerAccess node)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 397558, 398718);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 397653, 397688);

                var
                receiverOpt = f_10899_397671_397687(node)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 397702, 397760);

                var
                receiverType = f_10899_397721_397754(this, receiverOpt).Type
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 397954, 397997);

                _ = f_10899_397958_397996(this, receiverOpt);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 398013, 398040);

                var
                indexer = f_10899_398027_398039(node)
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 398054, 398261) || true) && (receiverType is object)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 398054, 398261);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 398182, 398246);

                    indexer = (PropertySymbol)f_10899_398208_398245(receiverType, indexer);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 398054, 398261);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 398277, 398409);

                f_10899_398277_398408(this, node, f_10899_398298_398312(node), f_10899_398314_398338(node), indexer, f_10899_398349_398369(node), f_10899_398371_398392(node), f_10899_398394_398407(node));
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 398425, 398550);

                var
                resultType = f_10899_398442_398549(indexer.TypeWithAnnotations.ToTypeWithState(), f_10899_398519_398548(this, indexer))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 398564, 398621);

                f_10899_398564_398620(this, node, resultType, f_10899_398592_398619(indexer));
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 398635, 398681);

                f_10899_398635_398680(this, node, f_10899_398658_398670(node), indexer);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 398695, 398707);

                return null;
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 397558, 398718);

                Microsoft.CodeAnalysis.CSharp.BoundExpression?
                f_10899_397671_397687(Microsoft.CodeAnalysis.CSharp.BoundIndexerAccess
                this_param)
                {
                    var return_v = this_param.ReceiverOpt;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 397671, 397687);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                f_10899_397721_397754(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression?
                node)
                {
                    var return_v = this_param.VisitRvalueWithState(node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 397721, 397754);
                    return return_v;
                }


                bool
                f_10899_397958_397996(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression?
                receiverOpt)
                {
                    var return_v = this_param.CheckPossibleNullReceiver(receiverOpt);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 397958, 397996);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol
                f_10899_398027_398039(Microsoft.CodeAnalysis.CSharp.BoundIndexerAccess
                this_param)
                {
                    var return_v = this_param.Indexer;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 398027, 398039);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbol
                f_10899_398208_398245(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                type, Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol
                symbol)
                {
                    var return_v = AsMemberOfType(type, (Microsoft.CodeAnalysis.CSharp.Symbol)symbol);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 398208, 398245);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                f_10899_398298_398312(Microsoft.CodeAnalysis.CSharp.BoundIndexerAccess
                this_param)
                {
                    var return_v = this_param.Arguments;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 398298, 398312);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.RefKind>
                f_10899_398314_398338(Microsoft.CodeAnalysis.CSharp.BoundIndexerAccess
                this_param)
                {
                    var return_v = this_param.ArgumentRefKindsOpt;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 398314, 398338);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<int>
                f_10899_398349_398369(Microsoft.CodeAnalysis.CSharp.BoundIndexerAccess
                this_param)
                {
                    var return_v = this_param.ArgsToParamsOpt;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 398349, 398369);
                    return return_v;
                }


                Microsoft.CodeAnalysis.BitVector
                f_10899_398371_398392(Microsoft.CodeAnalysis.CSharp.BoundIndexerAccess
                this_param)
                {
                    var return_v = this_param.DefaultArguments;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 398371, 398392);
                    return return_v;
                }


                bool
                f_10899_398394_398407(Microsoft.CodeAnalysis.CSharp.BoundIndexerAccess
                this_param)
                {
                    var return_v = this_param.Expanded;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 398394, 398407);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.NullableWalker.VisitArgumentResult>
                f_10899_398277_398408(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundIndexerAccess
                node, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                arguments, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.RefKind>
                refKindsOpt, Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol
                property, System.Collections.Immutable.ImmutableArray<int>
                argsToParamsOpt, Microsoft.CodeAnalysis.BitVector
                defaultArguments, bool
                expanded)
                {
                    var return_v = this_param.VisitArguments((Microsoft.CodeAnalysis.CSharp.BoundExpression)node, arguments, refKindsOpt, property, argsToParamsOpt, defaultArguments, expanded);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 398277, 398408);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.FlowAnalysisAnnotations
                f_10899_398519_398548(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol
                symbol)
                {
                    var return_v = this_param.GetRValueAnnotations((Microsoft.CodeAnalysis.CSharp.Symbol)symbol);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 398519, 398548);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                f_10899_398442_398549(Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                typeWithState, Microsoft.CodeAnalysis.CSharp.Symbols.FlowAnalysisAnnotations
                annotations)
                {
                    var return_v = ApplyUnconditionalAnnotations(typeWithState, annotations);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 398442, 398549);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                f_10899_398592_398619(Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol
                this_param)
                {
                    var return_v = this_param.TypeWithAnnotations;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 398592, 398619);
                    return return_v;
                }


                int
                f_10899_398564_398620(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundIndexerAccess
                expression, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                resultType, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                lvalueType)
                {
                    this_param.SetResult((Microsoft.CodeAnalysis.CSharp.BoundExpression)expression, resultType, lvalueType);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 398564, 398620);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol
                f_10899_398658_398670(Microsoft.CodeAnalysis.CSharp.BoundIndexerAccess
                this_param)
                {
                    var return_v = this_param.Indexer;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 398658, 398670);
                    return return_v;
                }


                int
                f_10899_398635_398680(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundIndexerAccess
                node, Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol
                originalSymbol, Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol
                updatedSymbol)
                {
                    this_param.SetUpdatedSymbol((Microsoft.CodeAnalysis.CSharp.BoundNode)node, (Microsoft.CodeAnalysis.CSharp.Symbol)originalSymbol, (Microsoft.CodeAnalysis.CSharp.Symbol)updatedSymbol);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 398635, 398680);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 397558, 398718);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 397558, 398718);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override BoundNode? VisitIndexOrRangePatternIndexerAccess(BoundIndexOrRangePatternIndexerAccess node)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 398730, 399640);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 398863, 398904);

                BoundExpression
                receiver = f_10899_398890_398903(node)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 398918, 398973);

                var
                receiverType = f_10899_398937_398967(this, receiver).Type
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 399167, 399207);

                _ = f_10899_399171_399206(this, receiver);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 399223, 399250);

                f_10899_399223_399249(this, f_10899_399235_399248(node));
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 399264, 399303);

                var
                patternSymbol = f_10899_399284_399302(node)
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 399317, 399452) || true) && (receiverType is object)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 399317, 399452);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 399377, 399437);

                    patternSymbol = f_10899_399393_399436(receiverType, patternSymbol);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 399317, 399452);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 399468, 399531);

                f_10899_399468_399530(this, node, f_10899_399494_399529(patternSymbol));
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 399545, 399603);

                f_10899_399545_399602(this, node, f_10899_399568_399586(node), patternSymbol);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 399617, 399629);

                return null;
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 398730, 399640);

                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10899_398890_398903(Microsoft.CodeAnalysis.CSharp.BoundIndexOrRangePatternIndexerAccess
                this_param)
                {
                    var return_v = this_param.Receiver;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 398890, 398903);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                f_10899_398937_398967(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                node)
                {
                    var return_v = this_param.VisitRvalueWithState(node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 398937, 398967);
                    return return_v;
                }


                bool
                f_10899_399171_399206(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                receiverOpt)
                {
                    var return_v = this_param.CheckPossibleNullReceiver(receiverOpt);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 399171, 399206);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10899_399235_399248(Microsoft.CodeAnalysis.CSharp.BoundIndexOrRangePatternIndexerAccess
                this_param)
                {
                    var return_v = this_param.Argument;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 399235, 399248);
                    return return_v;
                }


                int
                f_10899_399223_399249(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                node)
                {
                    this_param.VisitRvalue(node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 399223, 399249);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.Symbol
                f_10899_399284_399302(Microsoft.CodeAnalysis.CSharp.BoundIndexOrRangePatternIndexerAccess
                this_param)
                {
                    var return_v = this_param.PatternSymbol;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 399284, 399302);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbol
                f_10899_399393_399436(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                type, Microsoft.CodeAnalysis.CSharp.Symbol
                symbol)
                {
                    var return_v = AsMemberOfType(type, symbol);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 399393, 399436);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                f_10899_399494_399529(Microsoft.CodeAnalysis.CSharp.Symbol
                symbol)
                {
                    var return_v = symbol.GetTypeOrReturnType();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 399494, 399529);
                    return return_v;
                }


                int
                f_10899_399468_399530(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundIndexOrRangePatternIndexerAccess
                expression, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                type)
                {
                    this_param.SetLvalueResultType((Microsoft.CodeAnalysis.CSharp.BoundExpression)expression, type);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 399468, 399530);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.Symbol
                f_10899_399568_399586(Microsoft.CodeAnalysis.CSharp.BoundIndexOrRangePatternIndexerAccess
                this_param)
                {
                    var return_v = this_param.PatternSymbol;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 399568, 399586);
                    return return_v;
                }


                int
                f_10899_399545_399602(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundIndexOrRangePatternIndexerAccess
                node, Microsoft.CodeAnalysis.CSharp.Symbol
                originalSymbol, Microsoft.CodeAnalysis.CSharp.Symbol
                updatedSymbol)
                {
                    this_param.SetUpdatedSymbol((Microsoft.CodeAnalysis.CSharp.BoundNode)node, originalSymbol, updatedSymbol);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 399545, 399602);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 398730, 399640);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 398730, 399640);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override BoundNode? VisitEventAccess(BoundEventAccess node)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 399652, 399930);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 399743, 399823);

                var
                updatedSymbol = f_10899_399763_399822(this, node, f_10899_399787_399803(node), f_10899_399805_399821(node))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 399837, 399893);

                f_10899_399837_399892(this, node, f_10899_399860_399876(node), updatedSymbol);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 399907, 399919);

                return null;
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 399652, 399930);

                Microsoft.CodeAnalysis.CSharp.BoundExpression?
                f_10899_399787_399803(Microsoft.CodeAnalysis.CSharp.BoundEventAccess
                this_param)
                {
                    var return_v = this_param.ReceiverOpt;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 399787, 399803);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.EventSymbol
                f_10899_399805_399821(Microsoft.CodeAnalysis.CSharp.BoundEventAccess
                this_param)
                {
                    var return_v = this_param.EventSymbol;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 399805, 399821);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbol
                f_10899_399763_399822(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundEventAccess
                node, Microsoft.CodeAnalysis.CSharp.BoundExpression?
                receiverOpt, Microsoft.CodeAnalysis.CSharp.Symbols.EventSymbol
                member)
                {
                    var return_v = this_param.VisitMemberAccess((Microsoft.CodeAnalysis.CSharp.BoundExpression)node, receiverOpt, (Microsoft.CodeAnalysis.CSharp.Symbol)member);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 399763, 399822);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.EventSymbol
                f_10899_399860_399876(Microsoft.CodeAnalysis.CSharp.BoundEventAccess
                this_param)
                {
                    var return_v = this_param.EventSymbol;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 399860, 399876);
                    return return_v;
                }


                int
                f_10899_399837_399892(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundEventAccess
                node, Microsoft.CodeAnalysis.CSharp.Symbols.EventSymbol
                originalSymbol, Microsoft.CodeAnalysis.CSharp.Symbol
                updatedSymbol)
                {
                    this_param.SetUpdatedSymbol((Microsoft.CodeAnalysis.CSharp.BoundNode)node, (Microsoft.CodeAnalysis.CSharp.Symbol)originalSymbol, updatedSymbol);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 399837, 399892);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 399652, 399930);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 399652, 399930);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private Symbol VisitMemberAccess(BoundExpression node, BoundExpression? receiverOpt, Symbol member)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 399942, 402153);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 400066, 400100);

                f_10899_400066_400099(!IsConditionalState);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 400116, 400203);

                var
                receiverType = (DynAbs.Tracing.TraceSender.Conditional_F1(10899, 400135, 400156) || (((receiverOpt != null) && DynAbs.Tracing.TraceSender.Conditional_F2(10899, 400159, 400192)) || DynAbs.Tracing.TraceSender.Conditional_F3(10899, 400195, 400202))) ? f_10899_400159_400192(this, receiverOpt) : default
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 400219, 400259);

                SpecialMember?
                nullableOfTMember = null
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 400273, 400893) || true) && (f_10899_400277_400310(member))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 400273, 400893);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 400344, 400395);

                    member = f_10899_400353_400394(receiverType.Type, member);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 400413, 400462);

                    nullableOfTMember = f_10899_400433_400461(this, member);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 400677, 400769);

                    bool
                    skipReceiverNullCheck = nullableOfTMember != SpecialMember.System_Nullable_T_get_Value
                    ;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 400787, 400878);

                    _ = f_10899_400791_400877(this, receiverOpt, checkNullableValueType: !skipReceiverNullCheck);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 400273, 400893);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 400909, 400949);

                var
                type = f_10899_400920_400948(member)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 400963, 401016);

                var
                memberAnnotations = f_10899_400987_401015(this, member)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 401030, 401120);

                var
                resultType = f_10899_401047_401119(type.ToTypeWithState(), memberAnnotations)
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 401265, 401619) || true) && (f_10899_401269_401306(resultType.Type))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 401265, 401619);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 401340, 401387);

                    int
                    slot = f_10899_401351_401386(this, receiverOpt, member)
                    ;

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 401405, 401604) || true) && (this.State.HasValue(slot))
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 401405, 401604);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 401476, 401505);

                        var
                        state = this.State[slot]
                        ;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 401527, 401585);

                        resultType = TypeWithState.Create(resultType.Type, state);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 401405, 401604);
                    }
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 401265, 401619);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 401635, 401669);

                f_10899_401635_401668(!IsConditionalState);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 401683, 402064) || true) && (nullableOfTMember == SpecialMember.System_Nullable_T_get_HasValue && (DynAbs.Tracing.TraceSender.Expression_True(10899, 401687, 401778) && !(receiverOpt is null)))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 401683, 402064);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 401812, 401855);

                    int
                    containingSlot = f_10899_401833_401854(this, receiverOpt)
                    ;

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 401873, 402049) || true) && (containingSlot > 0)
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 401873, 402049);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 401937, 401945);

                        f_10899_401937_401944(this);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 401967, 402030);

                        this.StateWhenTrue[containingSlot] = NullableFlowState.NotNull;
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 401873, 402049);
                    }
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 401683, 402064);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 402080, 402114);

                f_10899_402080_402113(this, node, resultType, type);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 402128, 402142);

                return member;
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 399942, 402153);

                int
                f_10899_400066_400099(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 400066, 400099);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                f_10899_400159_400192(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                node)
                {
                    var return_v = this_param.VisitRvalueWithState(node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 400159, 400192);
                    return return_v;
                }


                bool
                f_10899_400277_400310(Microsoft.CodeAnalysis.CSharp.Symbol
                symbol)
                {
                    var return_v = symbol.RequiresInstanceReceiver();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 400277, 400310);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbol
                f_10899_400353_400394(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?
                type, Microsoft.CodeAnalysis.CSharp.Symbol
                symbol)
                {
                    var return_v = AsMemberOfType(type, symbol);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 400353, 400394);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SpecialMember?
                f_10899_400433_400461(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.Symbol
                member)
                {
                    var return_v = this_param.GetNullableOfTMember(member);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 400433, 400461);
                    return return_v;
                }


                bool
                f_10899_400791_400877(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression?
                receiverOpt, bool
                checkNullableValueType)
                {
                    var return_v = this_param.CheckPossibleNullReceiver(receiverOpt, checkNullableValueType: checkNullableValueType);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 400791, 400877);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                f_10899_400920_400948(Microsoft.CodeAnalysis.CSharp.Symbol
                symbol)
                {
                    var return_v = symbol.GetTypeOrReturnType();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 400920, 400948);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.FlowAnalysisAnnotations
                f_10899_400987_401015(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.Symbol
                symbol)
                {
                    var return_v = this_param.GetRValueAnnotations(symbol);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 400987, 401015);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                f_10899_401047_401119(Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                typeWithState, Microsoft.CodeAnalysis.CSharp.Symbols.FlowAnalysisAnnotations
                annotations)
                {
                    var return_v = ApplyUnconditionalAnnotations(typeWithState, annotations);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 401047, 401119);
                    return return_v;
                }


                bool
                f_10899_401269_401306(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?
                operandType)
                {
                    var return_v = PossiblyNullableType(operandType);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 401269, 401306);
                    return return_v;
                }


                int
                f_10899_401351_401386(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression?
                receiverOpt, Microsoft.CodeAnalysis.CSharp.Symbol
                member)
                {
                    var return_v = this_param.MakeMemberSlot(receiverOpt, member);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 401351, 401386);
                    return return_v;
                }


                int
                f_10899_401635_401668(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 401635, 401668);
                    return 0;
                }


                int
                f_10899_401833_401854(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                node)
                {
                    var return_v = this_param.MakeSlot(node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 401833, 401854);
                    return return_v;
                }


                int
                f_10899_401937_401944(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param)
                {
                    this_param.Split();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 401937, 401944);
                    return 0;
                }


                int
                f_10899_402080_402113(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                expression, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                resultType, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                lvalueType)
                {
                    this_param.SetResult(expression, resultType, lvalueType);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 402080, 402113);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 399942, 402153);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 399942, 402153);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private SpecialMember? GetNullableOfTMember(Symbol member)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 402165, 403079);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 402248, 403042) || true) && (f_10899_402252_402263(member) == SymbolKind.Property)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 402248, 403042);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 402320, 402390);

                    var
                    getMethod = f_10899_402336_402389(((PropertySymbol)f_10899_402353_402378(member)))
                    ;

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 402408, 403027) || true) && ((object)getMethod != null && (DynAbs.Tracing.TraceSender.Expression_True(10899, 402412, 402510) && f_10899_402441_402477(f_10899_402441_402465(getMethod)) == SpecialType.System_Nullable_T))
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 402408, 403027);

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 402552, 402766) || true) && (getMethod == f_10899_402569_402644(compilation, SpecialMember.System_Nullable_T_get_Value))
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 402552, 402766);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 402694, 402743);

                            return SpecialMember.System_Nullable_T_get_Value;
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 402552, 402766);
                        }

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 402788, 403008) || true) && (getMethod == f_10899_402805_402883(compilation, SpecialMember.System_Nullable_T_get_HasValue))
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 402788, 403008);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 402933, 402985);

                            return SpecialMember.System_Nullable_T_get_HasValue;
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 402788, 403008);
                        }
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 402408, 403027);
                    }
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 402248, 403042);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 403056, 403068);

                return null;
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 402165, 403079);

                Microsoft.CodeAnalysis.SymbolKind
                f_10899_402252_402263(Microsoft.CodeAnalysis.CSharp.Symbol
                this_param)
                {
                    var return_v = this_param.Kind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 402252, 402263);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbol
                f_10899_402353_402378(Microsoft.CodeAnalysis.CSharp.Symbol
                this_param)
                {
                    var return_v = this_param.OriginalDefinition;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 402353, 402378);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                f_10899_402336_402389(Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol
                this_param)
                {
                    var return_v = this_param.GetMethod;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 402336, 402389);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                f_10899_402441_402465(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                this_param)
                {
                    var return_v = this_param.ContainingType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 402441, 402465);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SpecialType
                f_10899_402441_402477(Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                this_param)
                {
                    var return_v = this_param.SpecialType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 402441, 402477);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbol
                f_10899_402569_402644(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param, Microsoft.CodeAnalysis.SpecialMember
                specialMember)
                {
                    var return_v = this_param.GetSpecialTypeMember(specialMember);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 402569, 402644);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbol
                f_10899_402805_402883(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param, Microsoft.CodeAnalysis.SpecialMember
                specialMember)
                {
                    var return_v = this_param.GetSpecialTypeMember(specialMember);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 402805, 402883);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 402165, 403079);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 402165, 403079);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private int GetNullableOfTValueSlot(TypeSymbol containingType, int containingSlot, out Symbol? valueProperty, bool forceSlotEvenIfEmpty = false)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 403091, 403922);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 403260, 403306);

                f_10899_403260_403305(f_10899_403273_403304(containingType));
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 403320, 403438);

                f_10899_403320_403437(f_10899_403333_403436(f_10899_403351_403382(this, containingSlot), containingType, TypeCompareKind.ConsiderEverything2));
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 403454, 403559);

                var
                getValue = (MethodSymbol)f_10899_403483_403558(compilation, SpecialMember.System_Nullable_T_get_Value)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 403596, 403768);

                valueProperty = (DynAbs.Tracing.TraceSender.Conditional_F1(10899, 403612, 403690) || ((getValue != null && (DynAbs.Tracing.TraceSender.Expression_True(10899, 403612, 403690) && f_10899_403632_403682(getValue, containingType) != null) && DynAbs.Tracing.TraceSender.Conditional_F2(10899, 403693, 403760)) || DynAbs.Tracing.TraceSender.Conditional_F3(10899, 403763, 403767))) ? f_10899_403693_403760(f_10899_403693_403743(getValue, containingType)) : null;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 403782, 403911);

                return (DynAbs.Tracing.TraceSender.Conditional_F1(10899, 403789, 403812) || (((valueProperty is null) && DynAbs.Tracing.TraceSender.Conditional_F2(10899, 403815, 403817)) || DynAbs.Tracing.TraceSender.Conditional_F3(10899, 403820, 403910))) ? -1 : f_10899_403820_403910(this, valueProperty, containingSlot, forceSlotEvenIfEmpty: forceSlotEvenIfEmpty);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 403091, 403922);

                bool
                f_10899_403273_403304(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                type)
                {
                    var return_v = type.IsNullableType();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 403273, 403304);
                    return return_v;
                }


                int
                f_10899_403260_403305(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 403260, 403305);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                f_10899_403351_403382(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, int
                slot)
                {
                    var return_v = this_param.NominalSlotType(slot);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 403351, 403382);
                    return return_v;
                }


                bool
                f_10899_403333_403436(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                left, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                right, Microsoft.CodeAnalysis.TypeCompareKind
                comparison)
                {
                    var return_v = TypeSymbol.Equals(left, right, comparison);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 403333, 403436);
                    return return_v;
                }


                int
                f_10899_403320_403437(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 403320, 403437);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.Symbol
                f_10899_403483_403558(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param, Microsoft.CodeAnalysis.SpecialMember
                specialMember)
                {
                    var return_v = this_param.GetSpecialTypeMember(specialMember);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 403483, 403558);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                f_10899_403632_403682(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                newOwner)
                {
                    var return_v = this_param.AsMember((Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol)newOwner);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 403632, 403682);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                f_10899_403693_403743(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                newOwner)
                {
                    var return_v = this_param.AsMember((Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol)newOwner);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 403693, 403743);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbol
                f_10899_403693_403760(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                this_param)
                {
                    var return_v = this_param.AssociatedSymbol;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 403693, 403760);
                    return return_v;
                }


                int
                f_10899_403820_403910(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.Symbol
                symbol, int
                containingSlot, bool
                forceSlotEvenIfEmpty)
                {
                    var return_v = this_param.GetOrCreateSlot(symbol, containingSlot, forceSlotEvenIfEmpty: forceSlotEvenIfEmpty);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 403820, 403910);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 403091, 403922);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 403091, 403922);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        protected override void VisitForEachExpression(BoundForEachStatement node)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 403934, 416448);
                bool foundMultiple = default(bool);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 404033, 404350) || true) && (f_10899_404037_404057(f_10899_404037_404052(node)) != BoundKind.Conversion)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 404033, 404350);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 404234, 404263);

                    f_10899_404234_404262(f_10899_404247_404261(node));
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 404281, 404310);

                    f_10899_404281_404309(this, f_10899_404293_404308(node));
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 404328, 404335);

                    return;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 404033, 404350);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 404366, 404460);

                var (expr, conversion) = f_10899_404391_404459(f_10899_404408_404423(node), includeExplicitConversions: false);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 404474, 404534);

                f_10899_404474_404533(this, f_10899_404511_404526(node), expr);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 407159, 407212);

                var
                resultTypeWithState = f_10899_407185_407211(this, expr)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 407226, 407268);

                var
                resultType = resultTypeWithState.Type
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 407282, 407317);

                f_10899_407282_407316(resultType is object);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 407333, 407376);

                f_10899_407333_407375(this, expr, _visitResult);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 407390, 407436);

                TypeWithAnnotations
                targetTypeWithAnnotations
                = default(TypeWithAnnotations);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 407452, 407503);

                MethodSymbol?
                reinferredGetEnumeratorMethod = null
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 407542, 410825) || true) && (f_10899_407546_407568(node) != null && (DynAbs.Tracing.TraceSender.Expression_True(10899, 407546, 407712) && f_10899_407580_407602(node).GetEnumeratorInfo is { Method: { IsExtensionMethod: true, Parameters: var parameters } } enumeratorMethodInfo))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 407542, 410825);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 408135, 408629);

                    var (method, results, _) = f_10899_408162_408628(this, node, f_10899_408226_408256(enumeratorMethodInfo), refKindsOpt: default, parameters, argsToParamsOpt: f_10899_408372_408408(enumeratorMethodInfo), defaultArguments: f_10899_408449_408486(enumeratorMethodInfo), expanded: false, invokedAsExtensionMethod: true, f_10899_408600_408627(enumeratorMethodInfo));
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 408649, 408699);

                    targetTypeWithAnnotations = results[0].LValueType;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 408717, 408756);

                    reinferredGetEnumeratorMethod = method;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 407542, 410825);
                }

                else
                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 407542, 410825);

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 408790, 410825) || true) && (conversion.IsIdentity || (DynAbs.Tracing.TraceSender.Expression_False(10899, 408794, 408944) || (conversion.Kind == ConversionKind.ExplicitReference && (DynAbs.Tracing.TraceSender.Expression_True(10899, 408837, 408943) && f_10899_408892_408914(resultType) == SpecialType.System_String))))
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 408790, 410825);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 409019, 409102);

                        targetTypeWithAnnotations = resultTypeWithState.ToTypeWithAnnotations(compilation);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 408790, 410825);
                    }

                    else
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 408790, 410825);

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 409136, 410825) || true) && (conversion.IsImplicit)
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 409136, 410825);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 409195, 409232);

                            bool
                            isAsync = f_10899_409210_409223(node) != null
                            ;

                            if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 409250, 410696) || true) && (f_10899_409254_409287(f_10899_409254_409269(node).Type!) == SpecialType.System_Collections_IEnumerable)
                            )

                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 409250, 410696);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 409495, 409572);

                                targetTypeWithAnnotations = TypeWithAnnotations.Create(f_10899_409550_409570(f_10899_409550_409565(node)));
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 409250, 410696);
                            }

                            else
                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 409250, 410696);

                                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 409614, 410696) || true) && (f_10899_409618_409713(f_10899_409651_409690(f_10899_409651_409671(f_10899_409651_409666(node))), isAsync, compilation))
                                )

                                {
                                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 409614, 410696);
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 409977, 410035);

                                    HashSet<DiagnosticInfo>?
                                    ignoredUseSiteDiagnostics = null
                                    ;
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 410057, 410238);

                                    targetTypeWithAnnotations = TypeWithAnnotations.Create(f_10899_410112_410236(resultType, isAsync, compilation, ref ignoredUseSiteDiagnostics, out foundMultiple));
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 410260, 410289);

                                    f_10899_410260_410288(!foundMultiple);
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 410311, 410359);

                                    f_10899_410311_410358(targetTypeWithAnnotations.HasType);
                                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 409614, 410696);
                                }

                                else

                                {
                                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 409614, 410696);
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 410670, 410677);

                                    return;
                                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 409614, 410696);
                                }
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 409250, 410696);
                            }
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 409136, 410825);
                        }

                        else

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 409136, 410825);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 410803, 410810);

                            return;
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 409136, 410825);
                        }
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 408790, 410825);
                    }
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 407542, 410825);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 410841, 411250);

                var
                convertedResult = f_10899_410863_411249(this, f_10899_410897_410945(f_10899_410923_410938(node), expr), expr, conversion, targetTypeWithAnnotations, resultTypeWithState, checkConversion: true, fromExplicitCast: false, useLegacyWarnings: false, AssignmentKind.Assignment)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 411289, 411504);

                bool
                reportedDiagnostic = (DynAbs.Tracing.TraceSender.Conditional_F1(10899, 411315, 411427) || ((f_10899_411315_411337(node) != null && (DynAbs.Tracing.TraceSender.Expression_True(10899, 411315, 411427) && f_10899_411349_411396(f_10899_411349_411371(node).GetEnumeratorInfo) is { IsExtensionMethod: true }
                ) && DynAbs.Tracing.TraceSender.Conditional_F2(10899, 411447, 411452)) || DynAbs.Tracing.TraceSender.Conditional_F3(10899, 411472, 411503))) ? false
                : f_10899_411472_411503(this, expr)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 411520, 411646);

                f_10899_411520_411645(this, f_10899_411543_411558(node), f_10899_411560_411644(convertedResult, convertedResult.ToTypeWithAnnotations(compilation)));
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 411662, 411711);

                TypeWithState
                currentPropertyGetterTypeWithState
                = default(TypeWithState);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 411727, 416353) || true) && (f_10899_411731_411753(node) is null)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 411727, 416353);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 411795, 411840);

                    currentPropertyGetterTypeWithState = default;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 411727, 416353);
                }

                else
                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 411727, 416353);

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 411874, 416353) || true) && (resultType is ArrayTypeSymbol arrayType)
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 411874, 416353);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 412177, 412269);

                        currentPropertyGetterTypeWithState = arrayType.ElementTypeWithAnnotations.ToTypeWithState();
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 411874, 416353);
                    }

                    else
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 411874, 416353);

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 412303, 416353) || true) && (f_10899_412307_412329(resultType) == SpecialType.System_String)
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 412303, 416353);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 412638, 412810);

                            currentPropertyGetterTypeWithState =
                                                TypeWithAnnotations.Create(f_10899_412723_412757(f_10899_412723_412745(node)), NullableAnnotation.NotAnnotated).ToTypeWithState();
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 412303, 416353);
                        }

                        else

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 412303, 416353);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 413078, 413212);

                            if (reinferredGetEnumeratorMethod is null)
                                DynAbs.Tracing.TraceSender.TraceEnterExpression(10899, 413078, 413212);

                            reinferredGetEnumeratorMethod ??= (MethodSymbol)f_10899_413126_413211(convertedResult.Type, f_10899_413163_413210(f_10899_413163_413185(node).GetEnumeratorInfo));
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 413230, 413311);

                            var
                            enumeratorReturnType = f_10899_413257_413310(this, reinferredGetEnumeratorMethod)
                            ;

                            if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 413331, 413705) || true) && (enumeratorReturnType.State != NullableFlowState.NotNull)
                            )

                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 413331, 413705);

                                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 413432, 413686) || true) && (!reportedDiagnostic && (DynAbs.Tracing.TraceSender.Expression_True(10899, 413436, 413532) && !(f_10899_413461_413476(node) is BoundConversion { Operand: { IsSuppressed: true } })))
                                )

                                {
                                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 413432, 413686);
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 413582, 413663);

                                    f_10899_413582_413662(this, ErrorCode.WRN_NullReferenceReceiver, f_10899_413636_413661(expr.Syntax));
                                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 413432, 413686);
                                }
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 413331, 413705);
                            }
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 413725, 413855);

                            var
                            currentPropertyGetter = (MethodSymbol)f_10899_413767_413854(enumeratorReturnType.Type, f_10899_413809_413831(node).CurrentPropertyGetter)
                            ;
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 413875, 414109);

                            currentPropertyGetterTypeWithState = f_10899_413912_414108(currentPropertyGetter.ReturnTypeWithAnnotations.ToTypeWithState(), f_10899_414052_414107(currentPropertyGetter));

                            if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 414181, 414941) || true) && (f_10899_414185_414198(node) is { AwaitableInstancePlaceholder: BoundAwaitableValuePlaceholder moveNextPlaceholder } awaitMoveNextInfo)
                            )

                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 414181, 414941);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 414346, 414487);

                                var
                                moveNextAsyncMethod = (MethodSymbol)f_10899_414386_414486(f_10899_414401_414441(reinferredGetEnumeratorMethod), f_10899_414443_414485(f_10899_414443_414465(node).MoveNextInfo))
                                ;
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 414511, 414552);

                                f_10899_414511_414551(this);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 414574, 414695);

                                var
                                result = f_10899_414587_414694(f_10899_414603_414646(this, moveNextAsyncMethod), f_10899_414648_414693(moveNextAsyncMethod))
                                ;
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 414717, 414799);

                                f_10899_414717_414798(_awaitablePlaceholdersOpt, moveNextPlaceholder, (moveNextPlaceholder, result));
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 414821, 414846);

                                f_10899_414821_414845(this, awaitMoveNextInfo);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 414868, 414922);

                                f_10899_414868_414921(_awaitablePlaceholdersOpt, moveNextPlaceholder);
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 414181, 414941);
                            }

                            if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 415012, 416338) || true) && (f_10899_415016_415038(node) is { NeedsDisposal: true, DisposeAwaitableInfo: BoundAwaitableInfo awaitDisposalInfo })
                            )

                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 415012, 416338);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 415167, 415240);

                                var
                                disposalPlaceholder = f_10899_415193_415239(awaitDisposalInfo)
                                ;
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 415262, 415292);

                                bool
                                addedPlaceholder = false
                                ;

                                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 415314, 416097) || true) && (f_10899_415318_415340(node).PatternDisposeInfo is { Method: var originalDisposeMethod })
                                ) // no statically known Dispose method if doing a runtime check

                                {
                                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 415314, 416097);
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 415513, 415559);

                                    f_10899_415513_415558(disposalPlaceholder is not null);
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 415585, 415704);

                                    var
                                    disposeAsyncMethod = (MethodSymbol)f_10899_415624_415703(f_10899_415639_415679(reinferredGetEnumeratorMethod), originalDisposeMethod)
                                    ;
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 415730, 415771);

                                    f_10899_415730_415770(this);
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 415797, 415916);

                                    var
                                    result = f_10899_415810_415915(f_10899_415826_415868(this, disposeAsyncMethod), f_10899_415870_415914(disposeAsyncMethod))
                                    ;
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 415942, 416024);

                                    f_10899_415942_416023(_awaitablePlaceholdersOpt, disposalPlaceholder, (disposalPlaceholder, result));
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 416050, 416074);

                                    addedPlaceholder = true;
                                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 415314, 416097);
                                }
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 416121, 416146);

                                f_10899_416121_416145(this, awaitDisposalInfo);

                                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 416170, 416319) || true) && (addedPlaceholder)
                                )

                                {
                                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 416170, 416319);
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 416240, 416296);

                                    f_10899_416240_416295(_awaitablePlaceholdersOpt!, disposalPlaceholder!);
                                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 416170, 416319);
                                }
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 415012, 416338);
                            }
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 412303, 416353);
                        }
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 411874, 416353);
                    }
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 411727, 416353);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 416369, 416437);

                f_10899_416369_416436(this, expression: null, currentPropertyGetterTypeWithState);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 403934, 416448);

                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10899_404037_404052(Microsoft.CodeAnalysis.CSharp.BoundForEachStatement
                this_param)
                {
                    var return_v = this_param.Expression;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 404037, 404052);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundKind
                f_10899_404037_404057(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.Kind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 404037, 404057);
                    return return_v;
                }


                bool
                f_10899_404247_404261(Microsoft.CodeAnalysis.CSharp.BoundForEachStatement
                this_param)
                {
                    var return_v = this_param.HasErrors;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 404247, 404261);
                    return return_v;
                }


                int
                f_10899_404234_404262(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 404234, 404262);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10899_404293_404308(Microsoft.CodeAnalysis.CSharp.BoundForEachStatement
                this_param)
                {
                    var return_v = this_param.Expression;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 404293, 404308);
                    return return_v;
                }


                int
                f_10899_404281_404309(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                node)
                {
                    this_param.VisitRvalue(node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 404281, 404309);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10899_404408_404423(Microsoft.CodeAnalysis.CSharp.BoundForEachStatement
                this_param)
                {
                    var return_v = this_param.Expression;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 404408, 404423);
                    return return_v;
                }


                (Microsoft.CodeAnalysis.CSharp.BoundExpression expression, Microsoft.CodeAnalysis.CSharp.Conversion conversion)
                f_10899_404391_404459(Microsoft.CodeAnalysis.CSharp.BoundExpression
                expr, bool
                includeExplicitConversions)
                {
                    var return_v = RemoveConversion(expr, includeExplicitConversions: includeExplicitConversions);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 404391, 404459);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10899_404511_404526(Microsoft.CodeAnalysis.CSharp.BoundForEachStatement
                this_param)
                {
                    var return_v = this_param.Expression;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 404511, 404526);
                    return return_v;
                }


                int
                f_10899_404474_404533(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                conversionExpression, Microsoft.CodeAnalysis.CSharp.BoundExpression
                convertedNode)
                {
                    this_param.SnapshotWalkerThroughConversionGroup(conversionExpression, convertedNode);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 404474, 404533);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                f_10899_407185_407211(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                node)
                {
                    var return_v = this_param.VisitRvalueWithState(node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 407185, 407211);
                    return return_v;
                }


                int
                f_10899_407282_407316(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 407282, 407316);
                    return 0;
                }


                int
                f_10899_407333_407375(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                expr, Microsoft.CodeAnalysis.CSharp.NullableWalker.VisitResult
                result)
                {
                    this_param.SetAnalyzedNullability(expr, result);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 407333, 407375);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.ForEachEnumeratorInfo?
                f_10899_407546_407568(Microsoft.CodeAnalysis.CSharp.BoundForEachStatement
                this_param)
                {
                    var return_v = this_param.EnumeratorInfoOpt;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 407546, 407568);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.ForEachEnumeratorInfo
                f_10899_407580_407602(Microsoft.CodeAnalysis.CSharp.BoundForEachStatement
                this_param)
                {
                    var return_v = this_param.EnumeratorInfoOpt;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 407580, 407602);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                f_10899_408226_408256(Microsoft.CodeAnalysis.CSharp.MethodArgumentInfo
                this_param)
                {
                    var return_v = this_param.Arguments;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 408226, 408256);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<int>
                f_10899_408372_408408(Microsoft.CodeAnalysis.CSharp.MethodArgumentInfo
                this_param)
                {
                    var return_v = this_param.ArgsToParamsOpt;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 408372, 408408);
                    return return_v;
                }


                Microsoft.CodeAnalysis.BitVector
                f_10899_408449_408486(Microsoft.CodeAnalysis.CSharp.MethodArgumentInfo
                this_param)
                {
                    var return_v = this_param.DefaultArguments;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 408449, 408486);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                f_10899_408600_408627(Microsoft.CodeAnalysis.CSharp.MethodArgumentInfo
                this_param)
                {
                    var return_v = this_param.Method;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 408600, 408627);
                    return return_v;
                }


                (Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol? method, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.NullableWalker.VisitArgumentResult> results, bool returnNotNull)
                f_10899_408162_408628(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundForEachStatement
                node, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                arguments, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.RefKind>
                refKindsOpt, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol>
                parametersOpt, System.Collections.Immutable.ImmutableArray<int>
                argsToParamsOpt, Microsoft.CodeAnalysis.BitVector
                defaultArguments, bool
                expanded, bool
                invokedAsExtensionMethod, Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                method)
                {
                    var return_v = this_param.VisitArguments((Microsoft.CodeAnalysis.CSharp.BoundNode)node, arguments, refKindsOpt: refKindsOpt, parametersOpt, argsToParamsOpt: argsToParamsOpt, defaultArguments: defaultArguments, expanded: expanded, invokedAsExtensionMethod: invokedAsExtensionMethod, method);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 408162, 408628);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SpecialType
                f_10899_408892_408914(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                this_param)
                {
                    var return_v = this_param.SpecialType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 408892, 408914);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundAwaitableInfo?
                f_10899_409210_409223(Microsoft.CodeAnalysis.CSharp.BoundForEachStatement
                this_param)
                {
                    var return_v = this_param.AwaitOpt;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 409210, 409223);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10899_409254_409269(Microsoft.CodeAnalysis.CSharp.BoundForEachStatement
                this_param)
                {
                    var return_v = this_param.Expression;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 409254, 409269);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SpecialType
                f_10899_409254_409287(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                this_param)
                {
                    var return_v = this_param.SpecialType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 409254, 409287);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10899_409550_409565(Microsoft.CodeAnalysis.CSharp.BoundForEachStatement
                this_param)
                {
                    var return_v = this_param.Expression;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 409550, 409565);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                f_10899_409550_409570(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 409550, 409570);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10899_409651_409666(Microsoft.CodeAnalysis.CSharp.BoundForEachStatement
                this_param)
                {
                    var return_v = this_param.Expression;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 409651, 409666);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                f_10899_409651_409671(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 409651, 409671);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                f_10899_409651_409690(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                this_param)
                {
                    var return_v = this_param.OriginalDefinition;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 409651, 409690);
                    return return_v;
                }


                bool
                f_10899_409618_409713(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                type, bool
                isAsync, Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                compilation)
                {
                    var return_v = ForEachLoopBinder.IsIEnumerableT(type, isAsync, compilation);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 409618, 409713);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                f_10899_410112_410236(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                type, bool
                isAsync, Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                compilation, ref System.Collections.Generic.HashSet<Microsoft.CodeAnalysis.DiagnosticInfo>?
                useSiteDiagnostics, out bool
                foundMultiple)
                {
                    var return_v = ForEachLoopBinder.GetIEnumerableOfT(type, isAsync, compilation, ref useSiteDiagnostics, out foundMultiple);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 410112, 410236);
                    return return_v;
                }


                int
                f_10899_410260_410288(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 410260, 410288);
                    return 0;
                }


                int
                f_10899_410311_410358(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 410311, 410358);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10899_410923_410938(Microsoft.CodeAnalysis.CSharp.BoundForEachStatement
                this_param)
                {
                    var return_v = this_param.Expression;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 410923, 410938);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundConversion?
                f_10899_410897_410945(Microsoft.CodeAnalysis.CSharp.BoundExpression
                conversionOpt, Microsoft.CodeAnalysis.CSharp.BoundExpression
                convertedNode)
                {
                    var return_v = GetConversionIfApplicable(conversionOpt, convertedNode);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 410897, 410945);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                f_10899_410863_411249(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundConversion?
                conversionOpt, Microsoft.CodeAnalysis.CSharp.BoundExpression
                conversionOperand, Microsoft.CodeAnalysis.CSharp.Conversion
                conversion, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                targetTypeWithNullability, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                operandType, bool
                checkConversion, bool
                fromExplicitCast, bool
                useLegacyWarnings, Microsoft.CodeAnalysis.CSharp.NullableWalker.AssignmentKind
                assignmentKind)
                {
                    var return_v = this_param.VisitConversion(conversionOpt, conversionOperand, conversion, targetTypeWithNullability, operandType, checkConversion: checkConversion, fromExplicitCast: fromExplicitCast, useLegacyWarnings: useLegacyWarnings, assignmentKind);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 410863, 411249);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.ForEachEnumeratorInfo?
                f_10899_411315_411337(Microsoft.CodeAnalysis.CSharp.BoundForEachStatement
                this_param)
                {
                    var return_v = this_param.EnumeratorInfoOpt;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 411315, 411337);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.ForEachEnumeratorInfo
                f_10899_411349_411371(Microsoft.CodeAnalysis.CSharp.BoundForEachStatement
                this_param)
                {
                    var return_v = this_param.EnumeratorInfoOpt;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 411349, 411371);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                f_10899_411349_411396(Microsoft.CodeAnalysis.CSharp.MethodArgumentInfo
                this_param)
                {
                    var return_v = this_param.Method;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 411349, 411396);
                    return return_v;
                }


                bool
                f_10899_411472_411503(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                receiverOpt)
                {
                    var return_v = this_param.CheckPossibleNullReceiver(receiverOpt);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 411472, 411503);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10899_411543_411558(Microsoft.CodeAnalysis.CSharp.BoundForEachStatement
                this_param)
                {
                    var return_v = this_param.Expression;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 411543, 411558);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.NullableWalker.VisitResult
                f_10899_411560_411644(Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                rValueType, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                lValueType)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.NullableWalker.VisitResult(rValueType, lValueType);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 411560, 411644);
                    return return_v;
                }


                int
                f_10899_411520_411645(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                expr, Microsoft.CodeAnalysis.CSharp.NullableWalker.VisitResult
                result)
                {
                    this_param.SetAnalyzedNullability(expr, result);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 411520, 411645);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.ForEachEnumeratorInfo?
                f_10899_411731_411753(Microsoft.CodeAnalysis.CSharp.BoundForEachStatement
                this_param)
                {
                    var return_v = this_param.EnumeratorInfoOpt;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 411731, 411753);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SpecialType
                f_10899_412307_412329(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                this_param)
                {
                    var return_v = this_param.SpecialType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 412307, 412329);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.ForEachEnumeratorInfo
                f_10899_412723_412745(Microsoft.CodeAnalysis.CSharp.BoundForEachStatement
                this_param)
                {
                    var return_v = this_param.EnumeratorInfoOpt;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 412723, 412745);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                f_10899_412723_412757(Microsoft.CodeAnalysis.CSharp.ForEachEnumeratorInfo
                this_param)
                {
                    var return_v = this_param.ElementType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 412723, 412757);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.ForEachEnumeratorInfo
                f_10899_413163_413185(Microsoft.CodeAnalysis.CSharp.BoundForEachStatement
                this_param)
                {
                    var return_v = this_param.EnumeratorInfoOpt;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 413163, 413185);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                f_10899_413163_413210(Microsoft.CodeAnalysis.CSharp.MethodArgumentInfo
                this_param)
                {
                    var return_v = this_param.Method;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 413163, 413210);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbol
                f_10899_413126_413211(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?
                type, Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                symbol)
                {
                    var return_v = AsMemberOfType(type, (Microsoft.CodeAnalysis.CSharp.Symbol)symbol);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 413126, 413211);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                f_10899_413257_413310(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                method)
                {
                    var return_v = this_param.GetReturnTypeWithState(method);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 413257, 413310);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10899_413461_413476(Microsoft.CodeAnalysis.CSharp.BoundForEachStatement
                this_param)
                {
                    var return_v = this_param.Expression;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 413461, 413476);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Location
                f_10899_413636_413661(Microsoft.CodeAnalysis.SyntaxNode
                this_param)
                {
                    var return_v = this_param.GetLocation();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 413636, 413661);
                    return return_v;
                }


                int
                f_10899_413582_413662(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.ErrorCode
                errorCode, Microsoft.CodeAnalysis.Location
                location, params object[]
                arguments)
                {
                    this_param.ReportDiagnostic(errorCode, location, arguments);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 413582, 413662);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.ForEachEnumeratorInfo
                f_10899_413809_413831(Microsoft.CodeAnalysis.CSharp.BoundForEachStatement
                this_param)
                {
                    var return_v = this_param.EnumeratorInfoOpt;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 413809, 413831);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbol
                f_10899_413767_413854(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?
                type, Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                symbol)
                {
                    var return_v = AsMemberOfType(type, (Microsoft.CodeAnalysis.CSharp.Symbol)symbol);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 413767, 413854);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.FlowAnalysisAnnotations
                f_10899_414052_414107(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                this_param)
                {
                    var return_v = this_param.ReturnTypeFlowAnalysisAnnotations;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 414052, 414107);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                f_10899_413912_414108(Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                typeWithState, Microsoft.CodeAnalysis.CSharp.Symbols.FlowAnalysisAnnotations
                annotations)
                {
                    var return_v = ApplyUnconditionalAnnotations(typeWithState, annotations);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 413912, 414108);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundAwaitableInfo?
                f_10899_414185_414198(Microsoft.CodeAnalysis.CSharp.BoundForEachStatement
                this_param)
                {
                    var return_v = this_param.AwaitOpt;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 414185, 414198);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                f_10899_414401_414441(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                this_param)
                {
                    var return_v = this_param.ReturnType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 414401, 414441);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.ForEachEnumeratorInfo
                f_10899_414443_414465(Microsoft.CodeAnalysis.CSharp.BoundForEachStatement
                this_param)
                {
                    var return_v = this_param.EnumeratorInfoOpt;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 414443, 414465);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                f_10899_414443_414485(Microsoft.CodeAnalysis.CSharp.MethodArgumentInfo
                this_param)
                {
                    var return_v = this_param.Method;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 414443, 414485);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbol
                f_10899_414386_414486(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                type, Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                symbol)
                {
                    var return_v = AsMemberOfType(type, (Microsoft.CodeAnalysis.CSharp.Symbol)symbol);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 414386, 414486);
                    return return_v;
                }


                int
                f_10899_414511_414551(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param)
                {
                    this_param.EnsureAwaitablePlaceholdersInitialized();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 414511, 414551);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                f_10899_414603_414646(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                method)
                {
                    var return_v = this_param.GetReturnTypeWithState(method);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 414603, 414646);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                f_10899_414648_414693(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                this_param)
                {
                    var return_v = this_param.ReturnTypeWithAnnotations;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 414648, 414693);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.NullableWalker.VisitResult
                f_10899_414587_414694(Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                rValueType, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                lValueType)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.NullableWalker.VisitResult(rValueType, lValueType);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 414587, 414694);
                    return return_v;
                }


                int
                f_10899_414717_414798(Microsoft.CodeAnalysis.PooledObjects.PooledDictionary<Microsoft.CodeAnalysis.CSharp.BoundAwaitableValuePlaceholder, (Microsoft.CodeAnalysis.CSharp.BoundExpression AwaitableExpression, Microsoft.CodeAnalysis.CSharp.NullableWalker.VisitResult Result)>
                this_param, Microsoft.CodeAnalysis.CSharp.BoundAwaitableValuePlaceholder
                key, (Microsoft.CodeAnalysis.CSharp.BoundExpression moveNextPlaceholder, Microsoft.CodeAnalysis.CSharp.NullableWalker.VisitResult result)
                value)
                {
                    this_param.Add(key, ((Microsoft.CodeAnalysis.CSharp.BoundExpression AwaitableExpression, Microsoft.CodeAnalysis.CSharp.NullableWalker.VisitResult Result))value);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 414717, 414798);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.BoundNode?
                f_10899_414821_414845(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundAwaitableInfo
                node)
                {
                    var return_v = this_param.Visit((Microsoft.CodeAnalysis.CSharp.BoundNode)node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 414821, 414845);
                    return return_v;
                }


                bool
                f_10899_414868_414921(Microsoft.CodeAnalysis.PooledObjects.PooledDictionary<Microsoft.CodeAnalysis.CSharp.BoundAwaitableValuePlaceholder, (Microsoft.CodeAnalysis.CSharp.BoundExpression AwaitableExpression, Microsoft.CodeAnalysis.CSharp.NullableWalker.VisitResult Result)>
                this_param, Microsoft.CodeAnalysis.CSharp.BoundAwaitableValuePlaceholder
                key)
                {
                    var return_v = this_param.Remove(key);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 414868, 414921);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.ForEachEnumeratorInfo
                f_10899_415016_415038(Microsoft.CodeAnalysis.CSharp.BoundForEachStatement
                this_param)
                {
                    var return_v = this_param.EnumeratorInfoOpt;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 415016, 415038);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundAwaitableValuePlaceholder?
                f_10899_415193_415239(Microsoft.CodeAnalysis.CSharp.BoundAwaitableInfo
                this_param)
                {
                    var return_v = this_param.AwaitableInstancePlaceholder;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 415193, 415239);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.ForEachEnumeratorInfo
                f_10899_415318_415340(Microsoft.CodeAnalysis.CSharp.BoundForEachStatement
                this_param)
                {
                    var return_v = this_param.EnumeratorInfoOpt;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 415318, 415340);
                    return return_v;
                }


                int
                f_10899_415513_415558(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 415513, 415558);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                f_10899_415639_415679(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                this_param)
                {
                    var return_v = this_param.ReturnType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 415639, 415679);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbol
                f_10899_415624_415703(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                type, Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                symbol)
                {
                    var return_v = AsMemberOfType(type, (Microsoft.CodeAnalysis.CSharp.Symbol)symbol);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 415624, 415703);
                    return return_v;
                }


                int
                f_10899_415730_415770(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param)
                {
                    this_param.EnsureAwaitablePlaceholdersInitialized();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 415730, 415770);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                f_10899_415826_415868(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                method)
                {
                    var return_v = this_param.GetReturnTypeWithState(method);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 415826, 415868);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                f_10899_415870_415914(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                this_param)
                {
                    var return_v = this_param.ReturnTypeWithAnnotations;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 415870, 415914);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.NullableWalker.VisitResult
                f_10899_415810_415915(Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                rValueType, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                lValueType)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.NullableWalker.VisitResult(rValueType, lValueType);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 415810, 415915);
                    return return_v;
                }


                int
                f_10899_415942_416023(Microsoft.CodeAnalysis.PooledObjects.PooledDictionary<Microsoft.CodeAnalysis.CSharp.BoundAwaitableValuePlaceholder, (Microsoft.CodeAnalysis.CSharp.BoundExpression AwaitableExpression, Microsoft.CodeAnalysis.CSharp.NullableWalker.VisitResult Result)>
                this_param, Microsoft.CodeAnalysis.CSharp.BoundAwaitableValuePlaceholder
                key, (Microsoft.CodeAnalysis.CSharp.BoundExpression disposalPlaceholder, Microsoft.CodeAnalysis.CSharp.NullableWalker.VisitResult result)
                value)
                {
                    this_param.Add(key, ((Microsoft.CodeAnalysis.CSharp.BoundExpression AwaitableExpression, Microsoft.CodeAnalysis.CSharp.NullableWalker.VisitResult Result))value);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 415942, 416023);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.BoundNode?
                f_10899_416121_416145(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundAwaitableInfo
                node)
                {
                    var return_v = this_param.Visit((Microsoft.CodeAnalysis.CSharp.BoundNode)node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 416121, 416145);
                    return return_v;
                }


                bool
                f_10899_416240_416295(Microsoft.CodeAnalysis.PooledObjects.PooledDictionary<Microsoft.CodeAnalysis.CSharp.BoundAwaitableValuePlaceholder, (Microsoft.CodeAnalysis.CSharp.BoundExpression AwaitableExpression, Microsoft.CodeAnalysis.CSharp.NullableWalker.VisitResult Result)>
                this_param, Microsoft.CodeAnalysis.CSharp.BoundAwaitableValuePlaceholder
                key)
                {
                    var return_v = this_param.Remove(key);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 416240, 416295);
                    return return_v;
                }


                int
                f_10899_416369_416436(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression?
                expression, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                type)
                {
                    this_param.SetResultType(expression: expression, type);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 416369, 416436);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 403934, 416448);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 403934, 416448);
            }
        }

        public override void VisitForEachIterationVariables(BoundForEachStatement node)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 416460, 421551);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 416664, 416736);

                var
                sourceState = (DynAbs.Tracing.TraceSender.Conditional_F1(10899, 416682, 416712) || ((f_10899_416682_416704(node) == null && DynAbs.Tracing.TraceSender.Conditional_F2(10899, 416715, 416722)) || DynAbs.Tracing.TraceSender.Conditional_F3(10899, 416725, 416735))) ? default : f_10899_416725_416735()
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 416750, 416830);

                TypeWithAnnotations
                sourceType = sourceState.ToTypeWithAnnotations(compilation)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 416897, 417245);

                var
                variableLocation = node.Syntax switch
                {
                    ForEachStatementSyntax statement when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 416971, 417041) && DynAbs.Tracing.TraceSender.Expression_True(10899, 416971, 417041))
=> statement.Identifier.GetLocation(),
                    ForEachVariableStatementSyntax variableStatement when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 417060, 417152) && DynAbs.Tracing.TraceSender.Expression_True(10899, 417060, 417152))
=> f_10899_417112_417152(f_10899_417112_417138(variableStatement)),
                    _ when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 417171, 417229) && DynAbs.Tracing.TraceSender.Expression_True(10899, 417171, 417229))
=> throw f_10899_417182_417229(node.Syntax)
                }
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 417312, 421540) || true) && (f_10899_417316_417338(node) is object)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 417312, 421540);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 417382, 417447);

                    var
                    assignment = f_10899_417399_417446(f_10899_417399_417421(node))
                    ;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 417550, 417662);

                    f_10899_417550_417661(this, assignment, (DynAbs.Tracing.TraceSender.Conditional_F1(10899, 417600, 417623) || ((sourceState.HasNullType && DynAbs.Tracing.TraceSender.Conditional_F2(10899, 417626, 417646)) || DynAbs.Tracing.TraceSender.Conditional_F3(10899, 417649, 417660))) ? (TypeWithState?)null : sourceState);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 417839, 417873);

                    f_10899_417839_417872(this, f_10899_417845_417871(node));
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 417312, 421540);
                }

                else

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 417312, 421540);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 417939, 417973);

                    f_10899_417939_417972(this, f_10899_417945_417971(node));
                    try
                    {
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 417991, 421523);
                        foreach (var iterationVariable in f_10899_418025_418048_I(f_10899_418025_418048(node)))
                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 417991, 421523);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 418090, 418128);

                            var
                            state = NullableFlowState.NotNull
                            ;

                            if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 418150, 421302) || true) && (f_10899_418154_418178_M(!sourceState.HasNullType))
                            )

                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 418150, 421302);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 418228, 418304);

                                TypeWithAnnotations
                                destinationType = f_10899_418266_418303(iterationVariable)
                                ;
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 418330, 418365);

                                TypeWithState
                                result = sourceState
                                ;
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 418391, 418433);

                                TypeWithState
                                resultForType = sourceState
                                ;

                                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 418459, 420889) || true) && (f_10899_418463_418486(iterationVariable))
                                )

                                {
                                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 418459, 420889);

                                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 418629, 418957) || true) && (f_10899_418633_418683(sourceType, destinationType))
                                    )

                                    {
                                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 418629, 418957);
                                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 418749, 418805);

                                        var
                                        foreachSyntax = (ForEachStatementSyntax)node.Syntax
                                        ;
                                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 418839, 418926);

                                        f_10899_418839_418925(this, f_10899_418877_418895(foreachSyntax), sourceType, destinationType);
                                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 418629, 418957);
                                    }
                                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 418459, 420889);
                                }

                                else
                                {
                                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 418459, 420889);

                                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 419015, 420889) || true) && (iterationVariable is SourceLocalSymbol { IsVar: true })
                                    )

                                    {
                                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 419015, 420889);
                                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 419200, 419274);

                                        destinationType = sourceState.ToAnnotatedTypeWithAnnotations(compilation);
                                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 419304, 419359);

                                        f_10899_419304_419358(_variables, iterationVariable, destinationType);
                                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 419389, 419439);

                                        resultForType = destinationType.ToTypeWithState();
                                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 419015, 420889);
                                    }

                                    else

                                    {
                                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 419015, 420889);
                                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 419692, 419743);

                                        HashSet<DiagnosticInfo>?
                                        useSiteDiagnostics = null
                                        ;
                                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 419773, 420067);

                                        Conversion
                                        conversion = (DynAbs.Tracing.TraceSender.Conditional_F1(10899, 419797, 419862) || ((node.ElementConversion.Kind == ConversionKind.UnsetConversionKind
                                        && DynAbs.Tracing.TraceSender.Conditional_F2(10899, 419898, 420008)) || DynAbs.Tracing.TraceSender.Conditional_F3(10899, 420044, 420066))) ? f_10899_419898_420008(_conversions, sourceType.Type, destinationType.Type, ref useSiteDiagnostics) : f_10899_420044_420066(node)
                                        ;
                                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 420097, 420862);

                                        result = f_10899_420106_420861(this, conversionOpt: null, conversionOperand: f_10899_420229_420255(node), conversion, destinationType, sourceState, checkConversion: true, fromExplicitCast: f_10899_420505_420527_M(!conversion.IsImplicit), useLegacyWarnings: true, AssignmentKind.ForEachIterationVariable, reportTopLevelWarnings: true, reportRemainingWarnings: true, diagnosticLocationOpt: variableLocation);
                                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 419015, 420889);
                                    }
                                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 418459, 420889);
                                }
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 421116, 421232);

                                f_10899_421116_421231(this, f_10899_421139_421165(node), f_10899_421167_421214(resultForType, destinationType), isLvalue: true);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 421258, 421279);

                                state = result.State;
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 418150, 421302);
                            }
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 421326, 421372);

                            int
                            slot = f_10899_421337_421371(this, iterationVariable)
                            ;

                            if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 421394, 421504) || true) && (slot > 0)
                            )

                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 421394, 421504);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 421456, 421481);

                                this.State[slot] = state;
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 421394, 421504);
                            }
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 417991, 421523);
                        }
                    }
                    catch (System.Exception)
                    {
                        DynAbs.Tracing.TraceSender.TraceExitLoopByException(10899, 1, 3533);
                        throw;
                    }
                    finally
                    {
                        DynAbs.Tracing.TraceSender.TraceExitLoop(10899, 1, 3533);
                    }
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 417312, 421540);
                }
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 416460, 421551);

                Microsoft.CodeAnalysis.CSharp.ForEachEnumeratorInfo?
                f_10899_416682_416704(Microsoft.CodeAnalysis.CSharp.BoundForEachStatement
                this_param)
                {
                    var return_v = this_param.EnumeratorInfoOpt;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 416682, 416704);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                f_10899_416725_416735()
                {
                    var return_v = ResultType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 416725, 416735);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                f_10899_417112_417138(Microsoft.CodeAnalysis.CSharp.Syntax.ForEachVariableStatementSyntax
                this_param)
                {
                    var return_v = this_param.Variable;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 417112, 417138);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Location
                f_10899_417112_417152(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
                this_param)
                {
                    var return_v = this_param.GetLocation();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 417112, 417152);
                    return return_v;
                }


                System.Exception
                f_10899_417182_417229(Microsoft.CodeAnalysis.SyntaxNode
                o)
                {
                    var return_v = ExceptionUtilities.UnexpectedValue((object)o);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 417182, 417229);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundForEachDeconstructStep?
                f_10899_417316_417338(Microsoft.CodeAnalysis.CSharp.BoundForEachStatement
                this_param)
                {
                    var return_v = this_param.DeconstructionOpt;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 417316, 417338);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundForEachDeconstructStep
                f_10899_417399_417421(Microsoft.CodeAnalysis.CSharp.BoundForEachStatement
                this_param)
                {
                    var return_v = this_param.DeconstructionOpt;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 417399, 417421);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundDeconstructionAssignmentOperator
                f_10899_417399_417446(Microsoft.CodeAnalysis.CSharp.BoundForEachDeconstructStep
                this_param)
                {
                    var return_v = this_param.DeconstructionAssignment;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 417399, 417446);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundNode?
                f_10899_417550_417661(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundDeconstructionAssignmentOperator
                node, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState?
                rightResultOpt)
                {
                    var return_v = this_param.VisitDeconstructionAssignmentOperator(node, rightResultOpt);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 417550, 417661);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundTypeExpression
                f_10899_417845_417871(Microsoft.CodeAnalysis.CSharp.BoundForEachStatement
                this_param)
                {
                    var return_v = this_param.IterationVariableType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 417845, 417871);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundNode?
                f_10899_417839_417872(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundTypeExpression
                node)
                {
                    var return_v = this_param.Visit((Microsoft.CodeAnalysis.CSharp.BoundNode)node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 417839, 417872);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundTypeExpression
                f_10899_417945_417971(Microsoft.CodeAnalysis.CSharp.BoundForEachStatement
                this_param)
                {
                    var return_v = this_param.IterationVariableType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 417945, 417971);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundNode?
                f_10899_417939_417972(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundTypeExpression
                node)
                {
                    var return_v = this_param.Visit((Microsoft.CodeAnalysis.CSharp.BoundNode)node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 417939, 417972);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.LocalSymbol>
                f_10899_418025_418048(Microsoft.CodeAnalysis.CSharp.BoundForEachStatement
                this_param)
                {
                    var return_v = this_param.IterationVariables;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 418025, 418048);
                    return return_v;
                }


                bool
                f_10899_418154_418178_M(bool
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 418154, 418178);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                f_10899_418266_418303(Microsoft.CodeAnalysis.CSharp.Symbols.LocalSymbol
                this_param)
                {
                    var return_v = this_param.TypeWithAnnotations;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 418266, 418303);
                    return return_v;
                }


                bool
                f_10899_418463_418486(Microsoft.CodeAnalysis.CSharp.Symbols.LocalSymbol
                this_param)
                {
                    var return_v = this_param.IsRef;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 418463, 418486);
                    return return_v;
                }


                bool
                f_10899_418633_418683(Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                type1, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                type2)
                {
                    var return_v = IsNullabilityMismatch(type1, type2);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 418633, 418683);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax
                f_10899_418877_418895(Microsoft.CodeAnalysis.CSharp.Syntax.ForEachStatementSyntax
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 418877, 418895);
                    return return_v;
                }


                int
                f_10899_418839_418925(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax
                syntaxNode, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                sourceType, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                destinationType)
                {
                    this_param.ReportNullabilityMismatchInAssignment((Microsoft.CodeAnalysis.SyntaxNode)syntaxNode, (object)sourceType, (object)destinationType);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 418839, 418925);
                    return 0;
                }


                int
                f_10899_419304_419358(Microsoft.CodeAnalysis.CSharp.NullableWalker.Variables
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.LocalSymbol
                symbol, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                type)
                {
                    this_param.SetType((Microsoft.CodeAnalysis.CSharp.Symbol)symbol, type);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 419304, 419358);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.Conversion
                f_10899_419898_420008(Microsoft.CodeAnalysis.CSharp.Conversions
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                source, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                destination, ref System.Collections.Generic.HashSet<Microsoft.CodeAnalysis.DiagnosticInfo>?
                useSiteDiagnostics)
                {
                    var return_v = this_param.ClassifyImplicitConversionFromType(source, destination, ref useSiteDiagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 419898, 420008);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Conversion
                f_10899_420044_420066(Microsoft.CodeAnalysis.CSharp.BoundForEachStatement
                this_param)
                {
                    var return_v = this_param.ElementConversion;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 420044, 420066);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundTypeExpression
                f_10899_420229_420255(Microsoft.CodeAnalysis.CSharp.BoundForEachStatement
                this_param)
                {
                    var return_v = this_param.IterationVariableType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 420229, 420255);
                    return return_v;
                }


                bool
                f_10899_420505_420527_M(bool
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 420505, 420527);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                f_10899_420106_420861(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundConversion?
                conversionOpt, Microsoft.CodeAnalysis.CSharp.BoundTypeExpression
                conversionOperand, Microsoft.CodeAnalysis.CSharp.Conversion
                conversion, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                targetTypeWithNullability, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                operandType, bool
                checkConversion, bool
                fromExplicitCast, bool
                useLegacyWarnings, Microsoft.CodeAnalysis.CSharp.NullableWalker.AssignmentKind
                assignmentKind, bool
                reportTopLevelWarnings, bool
                reportRemainingWarnings, Microsoft.CodeAnalysis.Location
                diagnosticLocationOpt)
                {
                    var return_v = this_param.VisitConversion(conversionOpt: conversionOpt, conversionOperand: (Microsoft.CodeAnalysis.CSharp.BoundExpression)conversionOperand, conversion, targetTypeWithNullability, operandType, checkConversion: checkConversion, fromExplicitCast: fromExplicitCast, useLegacyWarnings: useLegacyWarnings, assignmentKind, reportTopLevelWarnings: reportTopLevelWarnings, reportRemainingWarnings: reportRemainingWarnings, diagnosticLocationOpt: diagnosticLocationOpt);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 420106, 420861);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundTypeExpression
                f_10899_421139_421165(Microsoft.CodeAnalysis.CSharp.BoundForEachStatement
                this_param)
                {
                    var return_v = this_param.IterationVariableType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 421139, 421165);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.NullableWalker.VisitResult
                f_10899_421167_421214(Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                rValueType, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                lValueType)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.NullableWalker.VisitResult(rValueType, lValueType);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 421167, 421214);
                    return return_v;
                }


                int
                f_10899_421116_421231(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundTypeExpression
                expr, Microsoft.CodeAnalysis.CSharp.NullableWalker.VisitResult
                result, bool
                isLvalue)
                {
                    this_param.SetAnalyzedNullability((Microsoft.CodeAnalysis.CSharp.BoundExpression)expr, result, isLvalue: (bool?)isLvalue);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 421116, 421231);
                    return 0;
                }


                int
                f_10899_421337_421371(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.LocalSymbol
                symbol)
                {
                    var return_v = this_param.GetOrCreateSlot((Microsoft.CodeAnalysis.CSharp.Symbol)symbol);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 421337, 421371);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.LocalSymbol>
                f_10899_418025_418048_I(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.LocalSymbol>
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 418025, 418048);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 416460, 421551);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 416460, 421551);
            }
        }

        public override BoundNode? VisitFromEndIndexExpression(BoundFromEndIndexExpression node)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 421563, 421804);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 421676, 421728);

                var
                result = DynAbs.Tracing.TraceSender.TraceInvocationWrapper(() => base.VisitFromEndIndexExpression(node), 10899, 421689, 421727)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 421742, 421765);

                f_10899_421742_421764(this, node);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 421779, 421793);

                return result;
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 421563, 421804);

                int
                f_10899_421742_421764(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundFromEndIndexExpression
                node)
                {
                    this_param.SetNotNullResult((Microsoft.CodeAnalysis.CSharp.BoundExpression)node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 421742, 421764);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 421563, 421804);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 421563, 421804);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override BoundNode? VisitObjectInitializerMember(BoundObjectInitializerMember node)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 421816, 422047);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 421999, 422036);

                throw f_10899_422005_422035();
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 421816, 422047);

                System.Exception
                f_10899_422005_422035()
                {
                    var return_v = ExceptionUtilities.Unreachable;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 422005, 422035);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 421816, 422047);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 421816, 422047);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override BoundNode? VisitDynamicObjectInitializerMember(BoundDynamicObjectInitializerMember node)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 422059, 422248);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 422188, 422211);

                f_10899_422188_422210(this, node);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 422225, 422237);

                return null;
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 422059, 422248);

                int
                f_10899_422188_422210(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundDynamicObjectInitializerMember
                node)
                {
                    this_param.SetNotNullResult((Microsoft.CodeAnalysis.CSharp.BoundExpression)node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 422188, 422210);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 422059, 422248);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 422059, 422248);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override BoundNode? VisitBadExpression(BoundBadExpression node)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 422260, 422546);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 422355, 422398);

                var
                result = DynAbs.Tracing.TraceSender.TraceInvocationWrapper(() => base.VisitBadExpression(node), 10899, 422368, 422397)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 422412, 422461);

                var
                type = TypeWithAnnotations.Create(f_10899_422450_422459(node))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 422475, 422507);

                f_10899_422475_422506(this, node, type);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 422521, 422535);

                return result;
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 422260, 422546);

                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?
                f_10899_422450_422459(Microsoft.CodeAnalysis.CSharp.BoundBadExpression
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 422450, 422459);
                    return return_v;
                }


                int
                f_10899_422475_422506(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundBadExpression
                expression, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                type)
                {
                    this_param.SetLvalueResultType((Microsoft.CodeAnalysis.CSharp.BoundExpression)expression, type);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 422475, 422506);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 422260, 422546);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 422260, 422546);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override BoundNode? VisitTypeExpression(BoundTypeExpression node)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 422558, 422930);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 422655, 422699);

                var
                result = DynAbs.Tracing.TraceSender.TraceInvocationWrapper(() => base.VisitTypeExpression(node), 10899, 422668, 422698)
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 422715, 422852) || true) && (f_10899_422719_422746(node) != null)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 422715, 422852);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 422788, 422837);

                    f_10899_422788_422836(this, f_10899_422808_422835(node));
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 422715, 422852);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 422868, 422891);

                f_10899_422868_422890(this, node);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 422905, 422919);

                return result;
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 422558, 422930);

                Microsoft.CodeAnalysis.CSharp.BoundTypeExpression?
                f_10899_422719_422746(Microsoft.CodeAnalysis.CSharp.BoundTypeExpression
                this_param)
                {
                    var return_v = this_param.BoundContainingTypeOpt;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 422719, 422746);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundTypeExpression
                f_10899_422808_422835(Microsoft.CodeAnalysis.CSharp.BoundTypeExpression
                this_param)
                {
                    var return_v = this_param.BoundContainingTypeOpt;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 422808, 422835);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundNode?
                f_10899_422788_422836(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundTypeExpression
                node)
                {
                    var return_v = this_param.VisitTypeExpression(node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 422788, 422836);
                    return return_v;
                }


                int
                f_10899_422868_422890(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundTypeExpression
                node)
                {
                    this_param.SetNotNullResult((Microsoft.CodeAnalysis.CSharp.BoundExpression)node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 422868, 422890);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 422558, 422930);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 422558, 422930);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override BoundNode? VisitTypeOrValueExpression(BoundTypeOrValueExpression node)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 422942, 423265);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 423138, 423189);

                var
                result = DynAbs.Tracing.TraceSender.TraceInvocationWrapper(() => base.VisitTypeOrValueExpression(node), 10899, 423151, 423188)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 423203, 423226);

                f_10899_423203_423225(this, node);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 423240, 423254);

                return result;
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 422942, 423265);

                int
                f_10899_423203_423225(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundTypeOrValueExpression
                node)
                {
                    this_param.SetNotNullResult((Microsoft.CodeAnalysis.CSharp.BoundExpression)node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 423203, 423225);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 422942, 423265);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 422942, 423265);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override BoundNode? VisitUnaryOperator(BoundUnaryOperator node)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 423277, 427197);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 423372, 423406);

                f_10899_423372_423405(!IsConditionalState);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 423422, 423447);

                TypeWithState
                resultType
                = default(TypeWithState);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 423463, 426902);

                switch (f_10899_423471_423488(node))
                {

                    case UnaryOperatorKind.BoolLogicalNegation:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 423463, 426902);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 423587, 423607);

                        f_10899_423587_423606(this, f_10899_423593_423605(node));

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 423629, 423729) || true) && (IsConditionalState)
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 423629, 423729);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 423678, 423729);

                            f_10899_423678_423728(this, StateWhenFalse, StateWhenTrue);
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 423629, 423729);
                        }
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 423751, 423793);

                        resultType = f_10899_423764_423792(f_10899_423781_423791());
                        DynAbs.Tracing.TraceSender.TraceBreak(10899, 423815, 423821);

                        break;
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 423463, 426902);

                    case UnaryOperatorKind.DynamicTrue:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 423463, 426902);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 424090, 424110);

                        f_10899_424090_424109(this, f_10899_424096_424108(node));
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 424132, 424174);

                        resultType = f_10899_424145_424173(f_10899_424162_424172());
                        DynAbs.Tracing.TraceSender.TraceBreak(10899, 424196, 424202);

                        break;
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 423463, 426902);

                    case UnaryOperatorKind.DynamicLogicalNegation:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 423463, 426902);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 424482, 424502);

                        f_10899_424482_424501(this, f_10899_424488_424500(node));

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 424626, 424726) || true) && (IsConditionalState)
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 424626, 424726);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 424675, 424726);

                            f_10899_424675_424725(this, StateWhenFalse, StateWhenTrue);
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 424626, 424726);
                        }
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 424748, 424790);

                        resultType = f_10899_424761_424789(f_10899_424778_424788());
                        DynAbs.Tracing.TraceSender.TraceBreak(10899, 424812, 424818);

                        break;
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 423463, 426902);

                    default:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 423463, 426902);

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 424866, 426859) || true) && (f_10899_424870_424903(f_10899_424870_424887(node)) && (DynAbs.Tracing.TraceSender.Expression_True(10899, 424870, 424969) && f_10899_424932_424946(node) is MethodSymbol method) && (DynAbs.Tracing.TraceSender.Expression_True(10899, 424870, 425024) && f_10899_424998_425019(method) == 1))
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 424866, 426859);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 425074, 425168);

                            var (operand, conversion) = f_10899_425102_425167(f_10899_425119_425131(node), includeExplicitConversions: false);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 425194, 425215);

                            f_10899_425194_425214(this, operand);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 425241, 425272);

                            var
                            operandResult = f_10899_425261_425271()
                            ;
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 425298, 425343);

                            bool
                            isLifted = f_10899_425314_425342(f_10899_425314_425331(node))
                            ;
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 425369, 425449);

                            var
                            operandType = f_10899_425387_425448(isLifted, operandResult)
                            ;
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 425549, 425629);

                            method = (MethodSymbol)f_10899_425572_425628(f_10899_425587_425619(operandType.Type!), method);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 425824, 425861);

                            var
                            parameter = f_10899_425840_425857(method)[0]
                            ;
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 425887, 426436);

                            _ = f_10899_425891_426435(this, f_10899_425937_425949(node) as BoundConversion, operand, conversion, f_10899_426078_426107(parameter), operandType, checkConversion: true, fromExplicitCast: false, useLegacyWarnings: false, assignmentKind: AssignmentKind.Argument, parameterOpt: parameter);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 426462, 426571);

                            resultType = f_10899_426475_426570(this, isLifted, f_10899_426516_426548(method), operandResult.State);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 426597, 426644);

                            f_10899_426597_426643(this, node, f_10899_426620_426634(node), method);
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 424866, 426859);
                        }

                        else

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 424866, 426859);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 426742, 426768);

                            f_10899_426742_426767(this, f_10899_426754_426766(node));
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 426794, 426836);

                            resultType = f_10899_426807_426835(f_10899_426824_426834());
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 424866, 426859);
                        }
                        DynAbs.Tracing.TraceSender.TraceBreak(10899, 426881, 426887);

                        break;
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 423463, 426902);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 426918, 426950);

                f_10899_426918_426949(this, node, resultType);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 426964, 426976);

                return null;

                TypeWithState adjustForLifting(TypeWithState argumentResult)
                {
                    try
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 427053, 427185);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 427073, 427185);
                        return TypeWithState.Create(f_10899_427094_427103(node), (DynAbs.Tracing.TraceSender.Conditional_F1(10899, 427105, 427133) || ((f_10899_427105_427133(f_10899_427105_427122(node)) && DynAbs.Tracing.TraceSender.Conditional_F2(10899, 427136, 427156)) || DynAbs.Tracing.TraceSender.Conditional_F3(10899, 427159, 427184))) ? argumentResult.State : NullableFlowState.NotNull); DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 427053, 427185);
                    }
                    catch
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 427053, 427185);
                        throw;
                    }
                    finally
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 427053, 427185);
                    }
                    throw new System.Exception("Slicer error: unreachable code");
                }
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 423277, 427197);

                int
                f_10899_423372_423405(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 423372, 423405);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.UnaryOperatorKind
                f_10899_423471_423488(Microsoft.CodeAnalysis.CSharp.BoundUnaryOperator
                this_param)
                {
                    var return_v = this_param.OperatorKind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 423471, 423488);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10899_423593_423605(Microsoft.CodeAnalysis.CSharp.BoundUnaryOperator
                this_param)
                {
                    var return_v = this_param.Operand;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 423593, 423605);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundNode?
                f_10899_423587_423606(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                node)
                {
                    var return_v = this_param.Visit((Microsoft.CodeAnalysis.CSharp.BoundNode)node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 423587, 423606);
                    return return_v;
                }


                int
                f_10899_423678_423728(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState
                whenTrue, Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState
                whenFalse)
                {
                    this_param.SetConditionalState(whenTrue, whenFalse);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 423678, 423728);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                f_10899_423781_423791()
                {
                    var return_v = ResultType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 423781, 423791);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                f_10899_423764_423792(Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                argumentResult)
                {
                    var return_v = adjustForLifting(argumentResult);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 423764, 423792);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10899_424096_424108(Microsoft.CodeAnalysis.CSharp.BoundUnaryOperator
                this_param)
                {
                    var return_v = this_param.Operand;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 424096, 424108);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundNode?
                f_10899_424090_424109(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                node)
                {
                    var return_v = this_param.Visit((Microsoft.CodeAnalysis.CSharp.BoundNode)node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 424090, 424109);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                f_10899_424162_424172()
                {
                    var return_v = ResultType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 424162, 424172);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                f_10899_424145_424173(Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                argumentResult)
                {
                    var return_v = adjustForLifting(argumentResult);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 424145, 424173);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10899_424488_424500(Microsoft.CodeAnalysis.CSharp.BoundUnaryOperator
                this_param)
                {
                    var return_v = this_param.Operand;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 424488, 424500);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundNode?
                f_10899_424482_424501(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                node)
                {
                    var return_v = this_param.Visit((Microsoft.CodeAnalysis.CSharp.BoundNode)node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 424482, 424501);
                    return return_v;
                }


                int
                f_10899_424675_424725(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState
                whenTrue, Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState
                whenFalse)
                {
                    this_param.SetConditionalState(whenTrue, whenFalse);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 424675, 424725);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                f_10899_424778_424788()
                {
                    var return_v = ResultType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 424778, 424788);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                f_10899_424761_424789(Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                argumentResult)
                {
                    var return_v = adjustForLifting(argumentResult);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 424761, 424789);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.UnaryOperatorKind
                f_10899_424870_424887(Microsoft.CodeAnalysis.CSharp.BoundUnaryOperator
                this_param)
                {
                    var return_v = this_param.OperatorKind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 424870, 424887);
                    return return_v;
                }


                bool
                f_10899_424870_424903(Microsoft.CodeAnalysis.CSharp.UnaryOperatorKind
                kind)
                {
                    var return_v = kind.IsUserDefined();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 424870, 424903);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol?
                f_10899_424932_424946(Microsoft.CodeAnalysis.CSharp.BoundUnaryOperator
                this_param)
                {
                    var return_v = this_param.MethodOpt;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 424932, 424946);
                    return return_v;
                }


                int
                f_10899_424998_425019(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                this_param)
                {
                    var return_v = this_param.ParameterCount;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 424998, 425019);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10899_425119_425131(Microsoft.CodeAnalysis.CSharp.BoundUnaryOperator
                this_param)
                {
                    var return_v = this_param.Operand;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 425119, 425131);
                    return return_v;
                }


                (Microsoft.CodeAnalysis.CSharp.BoundExpression expression, Microsoft.CodeAnalysis.CSharp.Conversion conversion)
                f_10899_425102_425167(Microsoft.CodeAnalysis.CSharp.BoundExpression
                expr, bool
                includeExplicitConversions)
                {
                    var return_v = RemoveConversion(expr, includeExplicitConversions: includeExplicitConversions);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 425102, 425167);
                    return return_v;
                }


                int
                f_10899_425194_425214(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                node)
                {
                    this_param.VisitRvalue(node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 425194, 425214);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                f_10899_425261_425271()
                {
                    var return_v = ResultType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 425261, 425271);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.UnaryOperatorKind
                f_10899_425314_425331(Microsoft.CodeAnalysis.CSharp.BoundUnaryOperator
                this_param)
                {
                    var return_v = this_param.OperatorKind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 425314, 425331);
                    return return_v;
                }


                bool
                f_10899_425314_425342(Microsoft.CodeAnalysis.CSharp.UnaryOperatorKind
                kind)
                {
                    var return_v = kind.IsLifted();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 425314, 425342);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                f_10899_425387_425448(bool
                isLifted, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                typeWithState)
                {
                    var return_v = GetNullableUnderlyingTypeIfNecessary(isLifted, typeWithState);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 425387, 425448);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                f_10899_425587_425619(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                type)
                {
                    var return_v = type.StrippedType();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 425587, 425619);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbol
                f_10899_425572_425628(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                type, Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                symbol)
                {
                    var return_v = AsMemberOfType(type, (Microsoft.CodeAnalysis.CSharp.Symbol)symbol);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 425572, 425628);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol>
                f_10899_425840_425857(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                this_param)
                {
                    var return_v = this_param.Parameters;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 425840, 425857);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10899_425937_425949(Microsoft.CodeAnalysis.CSharp.BoundUnaryOperator
                this_param)
                {
                    var return_v = this_param.Operand;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 425937, 425949);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                f_10899_426078_426107(Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol
                this_param)
                {
                    var return_v = this_param.TypeWithAnnotations;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 426078, 426107);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                f_10899_425891_426435(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                conversionOpt, Microsoft.CodeAnalysis.CSharp.BoundExpression
                conversionOperand, Microsoft.CodeAnalysis.CSharp.Conversion
                conversion, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                targetTypeWithNullability, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                operandType, bool
                checkConversion, bool
                fromExplicitCast, bool
                useLegacyWarnings, Microsoft.CodeAnalysis.CSharp.NullableWalker.AssignmentKind
                assignmentKind, Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol
                parameterOpt)
                {
                    var return_v = this_param.VisitConversion((Microsoft.CodeAnalysis.CSharp.BoundConversion?)conversionOpt, conversionOperand, conversion, targetTypeWithNullability, operandType, checkConversion: checkConversion, fromExplicitCast: fromExplicitCast, useLegacyWarnings: useLegacyWarnings, assignmentKind: assignmentKind, parameterOpt: parameterOpt);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 425891, 426435);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                f_10899_426516_426548(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                this_param)
                {
                    var return_v = this_param.ReturnTypeWithAnnotations;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 426516, 426548);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                f_10899_426475_426570(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, bool
                isLifted, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                returnType, Microsoft.CodeAnalysis.CSharp.NullableFlowState
                operandState)
                {
                    var return_v = this_param.GetLiftedReturnTypeIfNecessary(isLifted, returnType, operandState);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 426475, 426570);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                f_10899_426620_426634(Microsoft.CodeAnalysis.CSharp.BoundUnaryOperator
                this_param)
                {
                    var return_v = this_param.MethodOpt;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 426620, 426634);
                    return return_v;
                }


                int
                f_10899_426597_426643(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundUnaryOperator
                node, Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                originalSymbol, Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                updatedSymbol)
                {
                    this_param.SetUpdatedSymbol((Microsoft.CodeAnalysis.CSharp.BoundNode)node, (Microsoft.CodeAnalysis.CSharp.Symbol)originalSymbol, (Microsoft.CodeAnalysis.CSharp.Symbol)updatedSymbol);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 426597, 426643);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10899_426754_426766(Microsoft.CodeAnalysis.CSharp.BoundUnaryOperator
                this_param)
                {
                    var return_v = this_param.Operand;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 426754, 426766);
                    return return_v;
                }


                int
                f_10899_426742_426767(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                node)
                {
                    this_param.VisitRvalue(node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 426742, 426767);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                f_10899_426824_426834()
                {
                    var return_v = ResultType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 426824, 426834);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                f_10899_426807_426835(Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                argumentResult)
                {
                    var return_v = adjustForLifting(argumentResult);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 426807, 426835);
                    return return_v;
                }


                int
                f_10899_426918_426949(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundUnaryOperator
                expression, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                type)
                {
                    this_param.SetResultType((Microsoft.CodeAnalysis.CSharp.BoundExpression)expression, type);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 426918, 426949);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                f_10899_427094_427103(Microsoft.CodeAnalysis.CSharp.BoundUnaryOperator
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 427094, 427103);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.UnaryOperatorKind
                f_10899_427105_427122(Microsoft.CodeAnalysis.CSharp.BoundUnaryOperator
                this_param)
                {
                    var return_v = this_param.OperatorKind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 427105, 427122);
                    return return_v;
                }


                bool
                f_10899_427105_427133(Microsoft.CodeAnalysis.CSharp.UnaryOperatorKind
                kind)
                {
                    var return_v = kind.IsLifted();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 427105, 427133);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 423277, 427197);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 423277, 427197);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override BoundNode? VisitPointerIndirectionOperator(BoundPointerIndirectionOperator node)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 427209, 427534);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 427330, 427386);

                var
                result = DynAbs.Tracing.TraceSender.TraceInvocationWrapper(() => base.VisitPointerIndirectionOperator(node), 10899, 427343, 427385)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 427400, 427449);

                var
                type = TypeWithAnnotations.Create(f_10899_427438_427447(node))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 427463, 427495);

                f_10899_427463_427494(this, node, type);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 427509, 427523);

                return result;
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 427209, 427534);

                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                f_10899_427438_427447(Microsoft.CodeAnalysis.CSharp.BoundPointerIndirectionOperator
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 427438, 427447);
                    return return_v;
                }


                int
                f_10899_427463_427494(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundPointerIndirectionOperator
                expression, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                type)
                {
                    this_param.SetLvalueResultType((Microsoft.CodeAnalysis.CSharp.BoundExpression)expression, type);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 427463, 427494);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 427209, 427534);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 427209, 427534);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override BoundNode? VisitPointerElementAccess(BoundPointerElementAccess node)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 427546, 427853);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 427655, 427705);

                var
                result = DynAbs.Tracing.TraceSender.TraceInvocationWrapper(() => base.VisitPointerElementAccess(node), 10899, 427668, 427704)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 427719, 427768);

                var
                type = TypeWithAnnotations.Create(f_10899_427757_427766(node))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 427782, 427814);

                f_10899_427782_427813(this, node, type);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 427828, 427842);

                return result;
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 427546, 427853);

                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                f_10899_427757_427766(Microsoft.CodeAnalysis.CSharp.BoundPointerElementAccess
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 427757, 427766);
                    return return_v;
                }


                int
                f_10899_427782_427813(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundPointerElementAccess
                expression, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                type)
                {
                    this_param.SetLvalueResultType((Microsoft.CodeAnalysis.CSharp.BoundExpression)expression, type);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 427782, 427813);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 427546, 427853);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 427546, 427853);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override BoundNode? VisitRefTypeOperator(BoundRefTypeOperator node)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 427865, 428064);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 427964, 427990);

                f_10899_427964_427989(this, f_10899_427976_427988(node));
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 428004, 428027);

                f_10899_428004_428026(this, node);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 428041, 428053);

                return null;
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 427865, 428064);

                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10899_427976_427988(Microsoft.CodeAnalysis.CSharp.BoundRefTypeOperator
                this_param)
                {
                    var return_v = this_param.Operand;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 427976, 427988);
                    return return_v;
                }


                int
                f_10899_427964_427989(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                node)
                {
                    this_param.VisitRvalue(node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 427964, 427989);
                    return 0;
                }


                int
                f_10899_428004_428026(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundRefTypeOperator
                node)
                {
                    this_param.SetNotNullResult((Microsoft.CodeAnalysis.CSharp.BoundExpression)node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 428004, 428026);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 427865, 428064);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 427865, 428064);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override BoundNode? VisitMakeRefOperator(BoundMakeRefOperator node)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 428076, 428296);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 428175, 428220);

                var
                result = DynAbs.Tracing.TraceSender.TraceInvocationWrapper(() => base.VisitMakeRefOperator(node), 10899, 428188, 428219)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 428234, 428257);

                f_10899_428234_428256(this, node);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 428271, 428285);

                return result;
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 428076, 428296);

                int
                f_10899_428234_428256(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundMakeRefOperator
                node)
                {
                    this_param.SetNotNullResult((Microsoft.CodeAnalysis.CSharp.BoundExpression)node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 428234, 428256);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 428076, 428296);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 428076, 428296);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override BoundNode? VisitRefValueOperator(BoundRefValueOperator node)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 428308, 428628);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 428409, 428455);

                var
                result = DynAbs.Tracing.TraceSender.TraceInvocationWrapper(() => base.VisitRefValueOperator(node), 10899, 428422, 428454)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 428469, 428543);

                var
                type = TypeWithAnnotations.Create(f_10899_428507_428516(node), f_10899_428518_428541(node))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 428557, 428589);

                f_10899_428557_428588(this, node, type);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 428603, 428617);

                return result;
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 428308, 428628);

                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                f_10899_428507_428516(Microsoft.CodeAnalysis.CSharp.BoundRefValueOperator
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 428507, 428516);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.NullableAnnotation
                f_10899_428518_428541(Microsoft.CodeAnalysis.CSharp.BoundRefValueOperator
                this_param)
                {
                    var return_v = this_param.NullableAnnotation;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 428518, 428541);
                    return return_v;
                }


                int
                f_10899_428557_428588(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundRefValueOperator
                expression, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                type)
                {
                    this_param.SetLvalueResultType((Microsoft.CodeAnalysis.CSharp.BoundExpression)expression, type);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 428557, 428588);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 428308, 428628);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 428308, 428628);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private TypeWithState InferResultNullability(BoundUserDefinedConditionalLogicalOperator node)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 428640, 429680);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 428758, 429105) || true) && (f_10899_428762_428790(f_10899_428762_428779(node)))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 428758, 429105);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 429024, 429090);

                    return TypeWithState.Create(f_10899_429052_429061(node), NullableFlowState.NotNull);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 428758, 429105);
                }

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 429403, 429669) || true) && ((object)f_10899_429415_429435(node) != null && (DynAbs.Tracing.TraceSender.Expression_True(10899, 429407, 429487) && f_10899_429447_429482(f_10899_429447_429467(node)) == 2))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 429403, 429669);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 429521, 429573);

                    return f_10899_429528_429572(this, f_10899_429551_429571(node));
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 429403, 429669);
                }

                else

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 429403, 429669);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 429639, 429654);

                    return default;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 429403, 429669);
                }
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 428640, 429680);

                Microsoft.CodeAnalysis.CSharp.BinaryOperatorKind
                f_10899_428762_428779(Microsoft.CodeAnalysis.CSharp.BoundUserDefinedConditionalLogicalOperator
                this_param)
                {
                    var return_v = this_param.OperatorKind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 428762, 428779);
                    return return_v;
                }


                bool
                f_10899_428762_428790(Microsoft.CodeAnalysis.CSharp.BinaryOperatorKind
                kind)
                {
                    var return_v = kind.IsLifted();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 428762, 428790);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                f_10899_429052_429061(Microsoft.CodeAnalysis.CSharp.BoundUserDefinedConditionalLogicalOperator
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 429052, 429061);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                f_10899_429415_429435(Microsoft.CodeAnalysis.CSharp.BoundUserDefinedConditionalLogicalOperator
                this_param)
                {
                    var return_v = this_param.LogicalOperator;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 429415, 429435);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                f_10899_429447_429467(Microsoft.CodeAnalysis.CSharp.BoundUserDefinedConditionalLogicalOperator
                this_param)
                {
                    var return_v = this_param.LogicalOperator;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 429447, 429467);
                    return return_v;
                }


                int
                f_10899_429447_429482(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                this_param)
                {
                    var return_v = this_param.ParameterCount;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 429447, 429482);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                f_10899_429551_429571(Microsoft.CodeAnalysis.CSharp.BoundUserDefinedConditionalLogicalOperator
                this_param)
                {
                    var return_v = this_param.LogicalOperator;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 429551, 429571);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                f_10899_429528_429572(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                method)
                {
                    var return_v = this_param.GetReturnTypeWithState(method);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 429528, 429572);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 428640, 429680);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 428640, 429680);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        protected override void AfterLeftChildOfBinaryLogicalOperatorHasBeenVisited(BoundExpression node, BoundExpression right, bool isAnd, bool isBool, ref LocalState leftTrue, ref LocalState leftFalse)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 429692, 432493);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 429913, 429947);

                f_10899_429913_429946(!IsConditionalState);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 429961, 429997);

                TypeWithState
                leftType = f_10899_429986_429996()
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 430130, 430167);

                MethodSymbol?
                logicalOperator = null
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 430181, 430220);

                MethodSymbol?
                trueFalseOperator = null
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 430234, 430263);

                BoundExpression?
                left = null
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 430279, 431354);

                switch (f_10899_430287_430296(node))
                {

                    case BoundKind.BinaryOperator:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 430279, 431354);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 430382, 430454);

                        f_10899_430382_430453(!f_10899_430396_430452(f_10899_430396_430436(((BoundBinaryOperator)node))));
                        DynAbs.Tracing.TraceSender.TraceBreak(10899, 430476, 430482);

                        break;
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 430279, 431354);

                    case BoundKind.UserDefinedConditionalLogicalOperator:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 430279, 431354);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 430575, 430637);

                        var
                        binary = (BoundUserDefinedConditionalLogicalOperator)node
                        ;

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 430659, 431211) || true) && (f_10899_430663_430685(binary) != null && (DynAbs.Tracing.TraceSender.Expression_True(10899, 430663, 430739) && f_10899_430697_430734(f_10899_430697_430719(binary)) == 2))
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 430659, 431211);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 430789, 430830);

                            logicalOperator = f_10899_430807_430829(binary);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 430856, 430875);

                            left = f_10899_430863_430874(binary);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 430901, 430972);

                            trueFalseOperator = (DynAbs.Tracing.TraceSender.Conditional_F1(10899, 430921, 430926) || ((isAnd && DynAbs.Tracing.TraceSender.Conditional_F2(10899, 430929, 430949)) || DynAbs.Tracing.TraceSender.Conditional_F3(10899, 430952, 430971))) ? f_10899_430929_430949(binary) : f_10899_430952_430971(binary);

                            if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 431000, 431188) || true) && ((object)trueFalseOperator != null && (DynAbs.Tracing.TraceSender.Expression_True(10899, 431004, 431078) && f_10899_431041_431073(trueFalseOperator) != 1))
                            )

                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 431000, 431188);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 431136, 431161);

                                trueFalseOperator = null;
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 431000, 431188);
                            }
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 430659, 431211);
                        }
                        DynAbs.Tracing.TraceSender.TraceBreak(10899, 431233, 431239);

                        break;
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 430279, 431354);

                    default:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 430279, 431354);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 431287, 431339);

                        throw f_10899_431293_431338(f_10899_431328_431337(node));
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 430279, 431354);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 431370, 431439);

                f_10899_431370_431438(trueFalseOperator is null || (DynAbs.Tracing.TraceSender.Expression_False(10899, 431383, 431437) || logicalOperator is object));
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 431453, 431509);

                f_10899_431453_431508(logicalOperator is null || (DynAbs.Tracing.TraceSender.Expression_False(10899, 431466, 431507) || left is object));

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 431682, 431835) || true) && (trueFalseOperator is object)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 431682, 431835);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 431747, 431820);

                    f_10899_431747_431819(this, left!, leftType, f_10899_431787_431815(trueFalseOperator)[0]);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 431682, 431835);
                }

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 431851, 432000) || true) && (logicalOperator is object)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 431851, 432000);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 431914, 431985);

                    f_10899_431914_431984(this, left!, leftType, f_10899_431954_431980(logicalOperator)[0]);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 431851, 432000);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 432016, 432029);

                f_10899_432016_432028(this, right);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 432043, 432080);

                TypeWithState
                rightType = f_10899_432069_432079()
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 432096, 432190);

                f_10899_432096_432189(this, node, f_10899_432116_432188(this, node, leftType, rightType));

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 432206, 432356) || true) && (logicalOperator is object)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 432206, 432356);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 432269, 432341);

                    f_10899_432269_432340(this, right, rightType, f_10899_432310_432336(logicalOperator)[1]);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 432206, 432356);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 432372, 432482);

                f_10899_432372_432481(this, node, right, isAnd, isBool, ref leftTrue, ref leftFalse);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 429692, 432493);

                int
                f_10899_429913_429946(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 429913, 429946);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                f_10899_429986_429996()
                {
                    var return_v = ResultType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 429986, 429996);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundKind
                f_10899_430287_430296(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.Kind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 430287, 430296);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BinaryOperatorKind
                f_10899_430396_430436(Microsoft.CodeAnalysis.CSharp.BoundBinaryOperator
                this_param)
                {
                    var return_v = this_param.OperatorKind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 430396, 430436);
                    return return_v;
                }


                bool
                f_10899_430396_430452(Microsoft.CodeAnalysis.CSharp.BinaryOperatorKind
                kind)
                {
                    var return_v = kind.IsUserDefined();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 430396, 430452);
                    return return_v;
                }


                int
                f_10899_430382_430453(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 430382, 430453);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                f_10899_430663_430685(Microsoft.CodeAnalysis.CSharp.BoundUserDefinedConditionalLogicalOperator
                this_param)
                {
                    var return_v = this_param.LogicalOperator;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 430663, 430685);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                f_10899_430697_430719(Microsoft.CodeAnalysis.CSharp.BoundUserDefinedConditionalLogicalOperator
                this_param)
                {
                    var return_v = this_param.LogicalOperator;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 430697, 430719);
                    return return_v;
                }


                int
                f_10899_430697_430734(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                this_param)
                {
                    var return_v = this_param.ParameterCount;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 430697, 430734);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                f_10899_430807_430829(Microsoft.CodeAnalysis.CSharp.BoundUserDefinedConditionalLogicalOperator
                this_param)
                {
                    var return_v = this_param.LogicalOperator;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 430807, 430829);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10899_430863_430874(Microsoft.CodeAnalysis.CSharp.BoundUserDefinedConditionalLogicalOperator
                this_param)
                {
                    var return_v = this_param.Left;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 430863, 430874);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                f_10899_430929_430949(Microsoft.CodeAnalysis.CSharp.BoundUserDefinedConditionalLogicalOperator
                this_param)
                {
                    var return_v = this_param.FalseOperator;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 430929, 430949);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                f_10899_430952_430971(Microsoft.CodeAnalysis.CSharp.BoundUserDefinedConditionalLogicalOperator
                this_param)
                {
                    var return_v = this_param.TrueOperator;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 430952, 430971);
                    return return_v;
                }


                int
                f_10899_431041_431073(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                this_param)
                {
                    var return_v = this_param.ParameterCount;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 431041, 431073);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundKind
                f_10899_431328_431337(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.Kind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 431328, 431337);
                    return return_v;
                }


                System.Exception
                f_10899_431293_431338(Microsoft.CodeAnalysis.CSharp.BoundKind
                o)
                {
                    var return_v = ExceptionUtilities.UnexpectedValue((object)o);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 431293, 431338);
                    return return_v;
                }


                int
                f_10899_431370_431438(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 431370, 431438);
                    return 0;
                }


                int
                f_10899_431453_431508(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 431453, 431508);
                    return 0;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol>
                f_10899_431787_431815(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                this_param)
                {
                    var return_v = this_param.Parameters;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 431787, 431815);
                    return return_v;
                }


                int
                f_10899_431747_431819(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                argument, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                argumentType, Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol
                parameter)
                {
                    this_param.ReportArgumentWarnings(argument, argumentType, parameter);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 431747, 431819);
                    return 0;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol>
                f_10899_431954_431980(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                this_param)
                {
                    var return_v = this_param.Parameters;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 431954, 431980);
                    return return_v;
                }


                int
                f_10899_431914_431984(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                argument, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                argumentType, Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol
                parameter)
                {
                    this_param.ReportArgumentWarnings(argument, argumentType, parameter);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 431914, 431984);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.BoundNode?
                f_10899_432016_432028(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                node)
                {
                    var return_v = this_param.Visit((Microsoft.CodeAnalysis.CSharp.BoundNode)node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 432016, 432028);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                f_10899_432069_432079()
                {
                    var return_v = ResultType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 432069, 432079);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                f_10899_432116_432188(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                node, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                leftType, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                rightType)
                {
                    var return_v = this_param.InferResultNullabilityOfBinaryLogicalOperator(node, leftType, rightType);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 432116, 432188);
                    return return_v;
                }


                int
                f_10899_432096_432189(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                expression, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                type)
                {
                    this_param.SetResultType(expression, type);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 432096, 432189);
                    return 0;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol>
                f_10899_432310_432336(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                this_param)
                {
                    var return_v = this_param.Parameters;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 432310, 432336);
                    return return_v;
                }


                int
                f_10899_432269_432340(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                argument, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                argumentType, Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol
                parameter)
                {
                    this_param.ReportArgumentWarnings(argument, argumentType, parameter);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 432269, 432340);
                    return 0;
                }


                int
                f_10899_432372_432481(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                binary, Microsoft.CodeAnalysis.CSharp.BoundExpression
                right, bool
                isAnd, bool
                isBool, ref Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState
                leftTrue, ref Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState
                leftFalse)
                {
                    this_param.AfterRightChildOfBinaryLogicalOperatorHasBeenVisited(binary, right, isAnd, isBool, ref leftTrue, ref leftFalse);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 432372, 432481);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 429692, 432493);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 429692, 432493);
            }
        }

        private TypeWithState InferResultNullabilityOfBinaryLogicalOperator(BoundExpression node, TypeWithState leftType, TypeWithState rightType)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 432505, 433053);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 432668, 433042);

                return node switch
                {
                    BoundBinaryOperator binary when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 432719, 432844) && DynAbs.Tracing.TraceSender.Expression_True(10899, 432719, 432844))
    => f_10899_432749_432844(this, f_10899_432772_432791(binary), f_10899_432793_432809(binary), f_10899_432811_432822(binary), leftType, rightType),
                    BoundUserDefinedConditionalLogicalOperator userDefined when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 432863, 432956) && DynAbs.Tracing.TraceSender.Expression_True(10899, 432863, 432956))
    => f_10899_432921_432956(this, userDefined),
                    _ when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 432975, 433026) && DynAbs.Tracing.TraceSender.Expression_True(10899, 432975, 433026))
    => throw f_10899_432986_433026(node)
                };
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 432505, 433053);

                Microsoft.CodeAnalysis.CSharp.BinaryOperatorKind
                f_10899_432772_432791(Microsoft.CodeAnalysis.CSharp.BoundBinaryOperator
                this_param)
                {
                    var return_v = this_param.OperatorKind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 432772, 432791);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol?
                f_10899_432793_432809(Microsoft.CodeAnalysis.CSharp.BoundBinaryOperator
                this_param)
                {
                    var return_v = this_param.MethodOpt;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 432793, 432809);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                f_10899_432811_432822(Microsoft.CodeAnalysis.CSharp.BoundBinaryOperator
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 432811, 432822);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                f_10899_432749_432844(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BinaryOperatorKind
                operatorKind, Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol?
                methodOpt, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                resultType, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                leftType, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                rightType)
                {
                    var return_v = this_param.InferResultNullability(operatorKind, methodOpt, resultType, leftType, rightType);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 432749, 432844);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                f_10899_432921_432956(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundUserDefinedConditionalLogicalOperator
                node)
                {
                    var return_v = this_param.InferResultNullability(node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 432921, 432956);
                    return return_v;
                }


                System.Exception
                f_10899_432986_433026(Microsoft.CodeAnalysis.CSharp.BoundExpression
                o)
                {
                    var return_v = ExceptionUtilities.UnexpectedValue((object)o);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 432986, 433026);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 432505, 433053);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 432505, 433053);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override BoundNode? VisitAwaitExpression(BoundAwaitExpression node)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 433065, 434686);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 433164, 433209);

                var
                result = DynAbs.Tracing.TraceSender.TraceInvocationWrapper(() => base.VisitAwaitExpression(node), 10899, 433177, 433208)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 433223, 433262);

                var
                awaitableInfo = f_10899_433243_433261(node)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 433276, 433337);

                var
                placeholder = f_10899_433294_433336(awaitableInfo)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 433351, 433387);

                f_10899_433351_433386(placeholder is object);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 433403, 433444);

                f_10899_433403_433443(this);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 433458, 433534);

                f_10899_433458_433533(_awaitablePlaceholdersOpt, placeholder, (f_10899_433502_433517(node), _visitResult));
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 433548, 433569);

                f_10899_433548_433568(this, awaitableInfo);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 433583, 433629);

                f_10899_433583_433628(_awaitablePlaceholdersOpt, placeholder);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 433645, 434645) || true) && (f_10899_433649_433670(f_10899_433649_433658(node)) || (DynAbs.Tracing.TraceSender.Expression_False(10899, 433649, 433688) || f_10899_433674_433688(node)) || (DynAbs.Tracing.TraceSender.Expression_False(10899, 433649, 433723) || f_10899_433692_433715(awaitableInfo) is null))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 433645, 434645);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 433757, 433780);

                    f_10899_433757_433779(this, node);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 433645, 434645);
                }

                else

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 433645, 434645);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 434187, 434227);

                    var
                    getResult = f_10899_434203_434226(awaitableInfo)
                    ;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 434272, 434342);

                    var
                    taskAwaiterType = _visitResult.RValueType.Type as NamedTypeSymbol
                    ;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 434360, 434525);

                    var
                    reinferredGetResult = (DynAbs.Tracing.TraceSender.Conditional_F1(10899, 434386, 434413) || ((taskAwaiterType is not null
                    && DynAbs.Tracing.TraceSender.Conditional_F2(10899, 434437, 434491)) || DynAbs.Tracing.TraceSender.Conditional_F3(10899, 434515, 434524))) ? f_10899_434437_434491(f_10899_434437_434465(getResult), taskAwaiterType) : getResult
                    ;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 434545, 434630);

                    f_10899_434545_434629(this, node, reinferredGetResult.ReturnTypeWithAnnotations.ToTypeWithState());
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 433645, 434645);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 434661, 434675);

                return result;
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 433065, 434686);

                Microsoft.CodeAnalysis.CSharp.BoundAwaitableInfo
                f_10899_433243_433261(Microsoft.CodeAnalysis.CSharp.BoundAwaitExpression
                this_param)
                {
                    var return_v = this_param.AwaitableInfo;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 433243, 433261);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundAwaitableValuePlaceholder?
                f_10899_433294_433336(Microsoft.CodeAnalysis.CSharp.BoundAwaitableInfo
                this_param)
                {
                    var return_v = this_param.AwaitableInstancePlaceholder;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 433294, 433336);
                    return return_v;
                }


                int
                f_10899_433351_433386(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 433351, 433386);
                    return 0;
                }


                int
                f_10899_433403_433443(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param)
                {
                    this_param.EnsureAwaitablePlaceholdersInitialized();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 433403, 433443);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10899_433502_433517(Microsoft.CodeAnalysis.CSharp.BoundAwaitExpression
                this_param)
                {
                    var return_v = this_param.Expression;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 433502, 433517);
                    return return_v;
                }


                int
                f_10899_433458_433533(Microsoft.CodeAnalysis.PooledObjects.PooledDictionary<Microsoft.CodeAnalysis.CSharp.BoundAwaitableValuePlaceholder, (Microsoft.CodeAnalysis.CSharp.BoundExpression AwaitableExpression, Microsoft.CodeAnalysis.CSharp.NullableWalker.VisitResult Result)>
                this_param, Microsoft.CodeAnalysis.CSharp.BoundAwaitableValuePlaceholder
                key, (Microsoft.CodeAnalysis.CSharp.BoundExpression Expression, Microsoft.CodeAnalysis.CSharp.NullableWalker.VisitResult _visitResult)
                value)
                {
                    this_param.Add(key, ((Microsoft.CodeAnalysis.CSharp.BoundExpression AwaitableExpression, Microsoft.CodeAnalysis.CSharp.NullableWalker.VisitResult Result))value);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 433458, 433533);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.BoundNode?
                f_10899_433548_433568(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundAwaitableInfo
                node)
                {
                    var return_v = this_param.Visit((Microsoft.CodeAnalysis.CSharp.BoundNode)node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 433548, 433568);
                    return return_v;
                }


                bool
                f_10899_433583_433628(Microsoft.CodeAnalysis.PooledObjects.PooledDictionary<Microsoft.CodeAnalysis.CSharp.BoundAwaitableValuePlaceholder, (Microsoft.CodeAnalysis.CSharp.BoundExpression AwaitableExpression, Microsoft.CodeAnalysis.CSharp.NullableWalker.VisitResult Result)>
                this_param, Microsoft.CodeAnalysis.CSharp.BoundAwaitableValuePlaceholder
                key)
                {
                    var return_v = this_param.Remove(key);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 433583, 433628);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                f_10899_433649_433658(Microsoft.CodeAnalysis.CSharp.BoundAwaitExpression
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 433649, 433658);
                    return return_v;
                }


                bool
                f_10899_433649_433670(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                this_param)
                {
                    var return_v = this_param.IsValueType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 433649, 433670);
                    return return_v;
                }


                bool
                f_10899_433674_433688(Microsoft.CodeAnalysis.CSharp.BoundAwaitExpression
                this_param)
                {
                    var return_v = this_param.HasErrors;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 433674, 433688);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol?
                f_10899_433692_433715(Microsoft.CodeAnalysis.CSharp.BoundAwaitableInfo
                this_param)
                {
                    var return_v = this_param.GetResult;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 433692, 433715);
                    return return_v;
                }


                int
                f_10899_433757_433779(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundAwaitExpression
                node)
                {
                    this_param.SetNotNullResult((Microsoft.CodeAnalysis.CSharp.BoundExpression)node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 433757, 433779);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                f_10899_434203_434226(Microsoft.CodeAnalysis.CSharp.BoundAwaitableInfo
                this_param)
                {
                    var return_v = this_param.GetResult;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 434203, 434226);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                f_10899_434437_434465(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                this_param)
                {
                    var return_v = this_param.OriginalDefinition;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 434437, 434465);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                f_10899_434437_434491(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                newOwner)
                {
                    var return_v = this_param.AsMember(newOwner);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 434437, 434491);
                    return return_v;
                }


                int
                f_10899_434545_434629(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundAwaitExpression
                expression, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                type)
                {
                    this_param.SetResultType((Microsoft.CodeAnalysis.CSharp.BoundExpression)expression, type);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 434545, 434629);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 433065, 434686);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 433065, 434686);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override BoundNode? VisitTypeOfOperator(BoundTypeOfOperator node)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 434698, 434972);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 434795, 434839);

                var
                result = DynAbs.Tracing.TraceSender.TraceInvocationWrapper(() => base.VisitTypeOfOperator(node), 10899, 434808, 434838)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 434853, 434933);

                f_10899_434853_434932(this, node, TypeWithState.Create(f_10899_434894_434903(node), NullableFlowState.NotNull));
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 434947, 434961);

                return result;
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 434698, 434972);

                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                f_10899_434894_434903(Microsoft.CodeAnalysis.CSharp.BoundTypeOfOperator
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 434894, 434903);
                    return return_v;
                }


                int
                f_10899_434853_434932(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundTypeOfOperator
                expression, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                type)
                {
                    this_param.SetResultType((Microsoft.CodeAnalysis.CSharp.BoundExpression)expression, type);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 434853, 434932);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 434698, 434972);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 434698, 434972);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override BoundNode? VisitMethodInfo(BoundMethodInfo node)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 434984, 435189);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 435073, 435113);

                var
                result = DynAbs.Tracing.TraceSender.TraceInvocationWrapper(() => base.VisitMethodInfo(node), 10899, 435086, 435112)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 435127, 435150);

                f_10899_435127_435149(this, node);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 435164, 435178);

                return result;
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 434984, 435189);

                int
                f_10899_435127_435149(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundMethodInfo
                node)
                {
                    this_param.SetNotNullResult((Microsoft.CodeAnalysis.CSharp.BoundExpression)node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 435127, 435149);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 434984, 435189);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 434984, 435189);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override BoundNode? VisitFieldInfo(BoundFieldInfo node)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 435201, 435403);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 435288, 435327);

                var
                result = DynAbs.Tracing.TraceSender.TraceInvocationWrapper(() => base.VisitFieldInfo(node), 10899, 435301, 435326)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 435341, 435364);

                f_10899_435341_435363(this, node);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 435378, 435392);

                return result;
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 435201, 435403);

                int
                f_10899_435341_435363(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundFieldInfo
                node)
                {
                    this_param.SetNotNullResult((Microsoft.CodeAnalysis.CSharp.BoundExpression)node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 435341, 435363);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 435201, 435403);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 435201, 435403);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override BoundNode? VisitDefaultLiteral(BoundDefaultLiteral node)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 435415, 435760);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 435578, 435622);

                var
                result = DynAbs.Tracing.TraceSender.TraceInvocationWrapper(() => base.VisitDefaultLiteral(node), 10899, 435591, 435621)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 435636, 435721);

                f_10899_435636_435720(this, node, TypeWithState.Create(f_10899_435677_435686(node), NullableFlowState.MaybeDefault));
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 435735, 435749);

                return result;
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 435415, 435760);

                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?
                f_10899_435677_435686(Microsoft.CodeAnalysis.CSharp.BoundDefaultLiteral
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 435677, 435686);
                    return return_v;
                }


                int
                f_10899_435636_435720(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundDefaultLiteral
                expression, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                type)
                {
                    this_param.SetResultType((Microsoft.CodeAnalysis.CSharp.BoundExpression)expression, type);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 435636, 435720);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 435415, 435760);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 435415, 435760);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override BoundNode? VisitDefaultExpression(BoundDefaultExpression node)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 435772, 436762);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 435875, 435914);

                f_10899_435875_435913(!this.IsConditionalState);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 435930, 435977);

                var
                result = DynAbs.Tracing.TraceSender.TraceInvocationWrapper(() => base.VisitDefaultExpression(node), 10899, 435943, 435976)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 435991, 436019);

                TypeSymbol
                type = f_10899_436009_436018(node)
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 436033, 436423) || true) && (f_10899_436037_436085(type))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 436033, 436423);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 436119, 436163);

                    int
                    slot = f_10899_436130_436162(this, node)
                    ;

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 436181, 436408) || true) && (slot > 0)
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 436181, 436408);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 436235, 436280);

                        this.State[slot] = NullableFlowState.NotNull;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 436302, 436389);

                        f_10899_436302_436388(this, type, slot, valueSlot: -1, isDefaultValue: true);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 436181, 436408);
                    }
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 436033, 436423);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 436674, 436723);

                f_10899_436674_436722(this, node, TypeWithState.ForType(type));
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 436737, 436751);

                return result;
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 435772, 436762);

                int
                f_10899_435875_435913(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 435875, 435913);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                f_10899_436009_436018(Microsoft.CodeAnalysis.CSharp.BoundDefaultExpression
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 436009, 436018);
                    return return_v;
                }


                bool
                f_10899_436037_436085(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                type)
                {
                    var return_v = EmptyStructTypeCache.IsTrackableStructType(type);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 436037, 436085);
                    return return_v;
                }


                int
                f_10899_436130_436162(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundDefaultExpression
                node)
                {
                    var return_v = this_param.GetOrCreatePlaceholderSlot((Microsoft.CodeAnalysis.CSharp.BoundExpression)node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 436130, 436162);
                    return return_v;
                }


                int
                f_10899_436302_436388(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                targetType, int
                targetSlot, int
                valueSlot, bool
                isDefaultValue)
                {
                    this_param.InheritNullableStateOfTrackableStruct(targetType, targetSlot, valueSlot: valueSlot, isDefaultValue: isDefaultValue);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 436302, 436388);
                    return 0;
                }


                int
                f_10899_436674_436722(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundDefaultExpression
                expression, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                type)
                {
                    this_param.SetResultType((Microsoft.CodeAnalysis.CSharp.BoundExpression)expression, type);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 436674, 436722);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 435772, 436762);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 435772, 436762);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override BoundNode? VisitIsOperator(BoundIsOperator node)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 436774, 437504);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 436863, 436902);

                f_10899_436863_436901(!this.IsConditionalState);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 436918, 436945);

                var
                operand = f_10899_436932_436944(node)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 436959, 436990);

                var
                typeExpr = f_10899_436974_436989(node)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 437006, 437046);

                var
                result = DynAbs.Tracing.TraceSender.TraceInvocationWrapper(() => base.VisitIsOperator(node), 10899, 437019, 437045)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 437060, 437126);

                f_10899_437060_437125(f_10899_437073_437094(f_10899_437073_437082(node)) == SpecialType.System_Boolean);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 437142, 437150);

                f_10899_437142_437149(this);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 437164, 437213);

                f_10899_437164_437212(this, operand, ref StateWhenTrue);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 437227, 437382) || true) && (f_10899_437231_437257_M(DynAbs.Tracing.TraceSender.TraceConditionalAccessExpression(f_10899_437231_437244(typeExpr), 10899, 437231, 437257)?.SpecialType) == SpecialType.System_Object)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 437227, 437382);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 437320, 437367);

                    f_10899_437320_437366(this, operand, ref StateWhenFalse);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 437227, 437382);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 437398, 437428);

                f_10899_437398_437427(this, typeExpr);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 437442, 437465);

                f_10899_437442_437464(this, node);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 437479, 437493);

                return result;
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 436774, 437504);

                int
                f_10899_436863_436901(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 436863, 436901);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10899_436932_436944(Microsoft.CodeAnalysis.CSharp.BoundIsOperator
                this_param)
                {
                    var return_v = this_param.Operand;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 436932, 436944);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundTypeExpression
                f_10899_436974_436989(Microsoft.CodeAnalysis.CSharp.BoundIsOperator
                this_param)
                {
                    var return_v = this_param.TargetType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 436974, 436989);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                f_10899_437073_437082(Microsoft.CodeAnalysis.CSharp.BoundIsOperator
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 437073, 437082);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SpecialType
                f_10899_437073_437094(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                this_param)
                {
                    var return_v = this_param.SpecialType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 437073, 437094);
                    return return_v;
                }


                int
                f_10899_437060_437125(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 437060, 437125);
                    return 0;
                }


                int
                f_10899_437142_437149(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param)
                {
                    this_param.Split();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 437142, 437149);
                    return 0;
                }


                int
                f_10899_437164_437212(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                expression, ref Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState
                state)
                {
                    this_param.LearnFromNonNullTest(expression, ref state);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 437164, 437212);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                f_10899_437231_437244(Microsoft.CodeAnalysis.CSharp.BoundTypeExpression
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 437231, 437244);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SpecialType?
                f_10899_437231_437257_M(Microsoft.CodeAnalysis.SpecialType?
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 437231, 437257);
                    return return_v;
                }


                int
                f_10899_437320_437366(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                expression, ref Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState
                state)
                {
                    this_param.LearnFromNullTest(expression, ref state);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 437320, 437366);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.BoundNode?
                f_10899_437398_437427(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundTypeExpression
                node)
                {
                    var return_v = this_param.VisitTypeExpression(node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 437398, 437427);
                    return return_v;
                }


                int
                f_10899_437442_437464(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundIsOperator
                node)
                {
                    this_param.SetNotNullResult((Microsoft.CodeAnalysis.CSharp.BoundExpression)node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 437442, 437464);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 436774, 437504);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 436774, 437504);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override BoundNode? VisitAsOperator(BoundAsOperator node)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 437516, 438533);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 437605, 437659);

                var
                argumentType = f_10899_437624_437658(this, f_10899_437645_437657(node))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 437673, 437731);

                NullableFlowState
                resultState = NullableFlowState.NotNull
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 437745, 437766);

                var
                type = f_10899_437756_437765(node)
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 437782, 438368) || true) && (f_10899_437786_437807(type))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 437782, 438368);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 437841, 438353);

                    switch (node.Conversion.Kind)
                    {

                        case ConversionKind.Identity:
                        case ConversionKind.ImplicitReference:
                        case ConversionKind.Boxing:
                        case ConversionKind.ImplicitNullable:
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 437841, 438353);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 438134, 438167);

                            resultState = argumentType.State;
                            DynAbs.Tracing.TraceSender.TraceBreak(10899, 438193, 438199);

                            break;
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 437841, 438353);

                        default:
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 437841, 438353);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 438257, 438302);

                            resultState = NullableFlowState.MaybeDefault;
                            DynAbs.Tracing.TraceSender.TraceBreak(10899, 438328, 438334);

                            break;
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 437841, 438353);
                    }
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 437782, 438368);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 438384, 438421);

                f_10899_438384_438420(this, f_10899_438404_438419(node));
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 438435, 438496);

                f_10899_438435_438495(this, node, TypeWithState.Create(type, resultState));
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 438510, 438522);

                return null;
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 437516, 438533);

                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10899_437645_437657(Microsoft.CodeAnalysis.CSharp.BoundAsOperator
                this_param)
                {
                    var return_v = this_param.Operand;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 437645, 437657);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                f_10899_437624_437658(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                node)
                {
                    var return_v = this_param.VisitRvalueWithState(node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 437624, 437658);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                f_10899_437756_437765(Microsoft.CodeAnalysis.CSharp.BoundAsOperator
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 437756, 437765);
                    return return_v;
                }


                bool
                f_10899_437786_437807(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                type)
                {
                    var return_v = type.CanContainNull();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 437786, 437807);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundTypeExpression
                f_10899_438404_438419(Microsoft.CodeAnalysis.CSharp.BoundAsOperator
                this_param)
                {
                    var return_v = this_param.TargetType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 438404, 438419);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundNode?
                f_10899_438384_438420(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundTypeExpression
                node)
                {
                    var return_v = this_param.VisitTypeExpression(node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 438384, 438420);
                    return return_v;
                }


                int
                f_10899_438435_438495(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundAsOperator
                expression, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                type)
                {
                    this_param.SetResultType((Microsoft.CodeAnalysis.CSharp.BoundExpression)expression, type);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 438435, 438495);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 437516, 438533);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 437516, 438533);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override BoundNode? VisitSizeOfOperator(BoundSizeOfOperator node)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 438545, 438813);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 438642, 438686);

                var
                result = DynAbs.Tracing.TraceSender.TraceInvocationWrapper(() => base.VisitSizeOfOperator(node), 10899, 438655, 438685)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 438700, 438737);

                f_10899_438700_438736(this, f_10899_438720_438735(node));
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 438751, 438774);

                f_10899_438751_438773(this, node);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 438788, 438802);

                return result;
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 438545, 438813);

                Microsoft.CodeAnalysis.CSharp.BoundTypeExpression
                f_10899_438720_438735(Microsoft.CodeAnalysis.CSharp.BoundSizeOfOperator
                this_param)
                {
                    var return_v = this_param.SourceType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 438720, 438735);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundNode?
                f_10899_438700_438736(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundTypeExpression
                node)
                {
                    var return_v = this_param.VisitTypeExpression(node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 438700, 438736);
                    return return_v;
                }


                int
                f_10899_438751_438773(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundSizeOfOperator
                node)
                {
                    this_param.SetNotNullResult((Microsoft.CodeAnalysis.CSharp.BoundExpression)node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 438751, 438773);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 438545, 438813);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 438545, 438813);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override BoundNode? VisitArgList(BoundArgList node)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 438825, 439115);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 438908, 438945);

                var
                result = DynAbs.Tracing.TraceSender.TraceInvocationWrapper(() => base.VisitArgList(node), 10899, 438921, 438944)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 438959, 439039);

                f_10899_438959_439038(f_10899_438972_438993(f_10899_438972_438981(node)) == SpecialType.System_RuntimeArgumentHandle);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 439053, 439076);

                f_10899_439053_439075(this, node);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 439090, 439104);

                return result;
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 438825, 439115);

                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                f_10899_438972_438981(Microsoft.CodeAnalysis.CSharp.BoundArgList
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 438972, 438981);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SpecialType
                f_10899_438972_438993(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                this_param)
                {
                    var return_v = this_param.SpecialType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 438972, 438993);
                    return return_v;
                }


                int
                f_10899_438959_439038(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 438959, 439038);
                    return 0;
                }


                int
                f_10899_439053_439075(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundArgList
                node)
                {
                    this_param.SetNotNullResult((Microsoft.CodeAnalysis.CSharp.BoundExpression)node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 439053, 439075);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 438825, 439115);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 438825, 439115);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override BoundNode? VisitArgListOperator(BoundArgListOperator node)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 439127, 439518);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 439226, 439398);

                f_10899_439226_439397(this, node.Syntax, f_10899_439262_439276(node), f_10899_439278_439302(node), parametersOpt: default, argsToParamsOpt: default, defaultArguments: default, expanded: false);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 439412, 439444);

                f_10899_439412_439443(f_10899_439425_439434(node) is null);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 439458, 439481);

                f_10899_439458_439480(this, node);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 439495, 439507);

                return null;
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 439127, 439518);

                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                f_10899_439262_439276(Microsoft.CodeAnalysis.CSharp.BoundArgListOperator
                this_param)
                {
                    var return_v = this_param.Arguments;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 439262, 439276);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.RefKind>
                f_10899_439278_439302(Microsoft.CodeAnalysis.CSharp.BoundArgListOperator
                this_param)
                {
                    var return_v = this_param.ArgumentRefKindsOpt;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 439278, 439302);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.NullableWalker.VisitArgumentResult>
                f_10899_439226_439397(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.SyntaxNode
                syntax, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                arguments, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.RefKind>
                refKindsOpt, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol>
                parametersOpt, System.Collections.Immutable.ImmutableArray<int>
                argsToParamsOpt, Microsoft.CodeAnalysis.BitVector
                defaultArguments, bool
                expanded)
                {
                    var return_v = this_param.VisitArgumentsEvaluate(syntax, arguments, refKindsOpt, parametersOpt: parametersOpt, argsToParamsOpt: argsToParamsOpt, defaultArguments: defaultArguments, expanded: expanded);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 439226, 439397);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?
                f_10899_439425_439434(Microsoft.CodeAnalysis.CSharp.BoundArgListOperator
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 439425, 439434);
                    return return_v;
                }


                int
                f_10899_439412_439443(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 439412, 439443);
                    return 0;
                }


                int
                f_10899_439458_439480(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundArgListOperator
                node)
                {
                    this_param.SetNotNullResult((Microsoft.CodeAnalysis.CSharp.BoundExpression)node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 439458, 439480);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 439127, 439518);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 439127, 439518);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override BoundNode? VisitLiteral(BoundLiteral node)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 439530, 439988);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 439613, 439650);

                var
                result = DynAbs.Tracing.TraceSender.TraceInvocationWrapper(() => base.VisitLiteral(node), 10899, 439626, 439649)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 439666, 439700);

                f_10899_439666_439699(!IsConditionalState);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 439714, 439904);

                f_10899_439714_439903(this, node, TypeWithState.Create(f_10899_439755_439764(node), (DynAbs.Tracing.TraceSender.Conditional_F1(10899, 439766, 439840) || ((f_10899_439776_439793(DynAbs.Tracing.TraceSender.TraceConditionalAccessExpression(f_10899_439766_439775(node), 10899, 439766, 439793)) != false && (DynAbs.Tracing.TraceSender.Expression_True(10899, 439766, 439840) && f_10899_439806_439832_M(DynAbs.Tracing.TraceSender.TraceConditionalAccessExpression(f_10899_439806_439824(node), 10899, 439806, 439832)?.IsNull) == true) && DynAbs.Tracing.TraceSender.Conditional_F2(10899, 439843, 439873)) || DynAbs.Tracing.TraceSender.Conditional_F3(10899, 439876, 439901))) ? NullableFlowState.MaybeDefault : NullableFlowState.NotNull));
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 439920, 439949);

                f_10899_439920_439948(this, node);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 439963, 439977);

                return result;
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 439530, 439988);

                int
                f_10899_439666_439699(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 439666, 439699);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?
                f_10899_439755_439764(Microsoft.CodeAnalysis.CSharp.BoundLiteral
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 439755, 439764);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?
                f_10899_439766_439775(Microsoft.CodeAnalysis.CSharp.BoundLiteral
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 439766, 439775);
                    return return_v;
                }


                bool?
                f_10899_439776_439793(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                type)
                {
                    var return_v = type?.CanContainNull();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 439776, 439793);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ConstantValue?
                f_10899_439806_439824(Microsoft.CodeAnalysis.CSharp.BoundLiteral
                this_param)
                {
                    var return_v = this_param.ConstantValue;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 439806, 439824);
                    return return_v;
                }


                bool?
                f_10899_439806_439832_M(bool?
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 439806, 439832);
                    return return_v;
                }


                int
                f_10899_439714_439903(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundLiteral
                expression, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                type)
                {
                    this_param.SetResultType((Microsoft.CodeAnalysis.CSharp.BoundExpression)expression, type);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 439714, 439903);
                    return 0;
                }


                int
                f_10899_439920_439948(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundLiteral
                node)
                {
                    this_param.SplitIfBooleanConstant((Microsoft.CodeAnalysis.CSharp.BoundExpression)node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 439920, 439948);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 439530, 439988);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 439530, 439988);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override BoundNode? VisitPreviousSubmissionReference(BoundPreviousSubmissionReference node)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 440000, 440310);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 440123, 440180);

                var
                result = DynAbs.Tracing.TraceSender.TraceInvocationWrapper(() => base.VisitPreviousSubmissionReference(node), 10899, 440136, 440179)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 440194, 440234);

                f_10899_440194_440233(f_10899_440207_440232(node));
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 440248, 440271);

                f_10899_440248_440270(this, node);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 440285, 440299);

                return result;
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 440000, 440310);

                bool
                f_10899_440207_440232(Microsoft.CodeAnalysis.CSharp.BoundPreviousSubmissionReference
                this_param)
                {
                    var return_v = this_param.WasCompilerGenerated;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 440207, 440232);
                    return return_v;
                }


                int
                f_10899_440194_440233(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 440194, 440233);
                    return 0;
                }


                int
                f_10899_440248_440270(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundPreviousSubmissionReference
                node)
                {
                    this_param.SetNotNullResult((Microsoft.CodeAnalysis.CSharp.BoundExpression)node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 440248, 440270);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 440000, 440310);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 440000, 440310);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override BoundNode? VisitHostObjectMemberReference(BoundHostObjectMemberReference node)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 440322, 440626);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 440441, 440496);

                var
                result = DynAbs.Tracing.TraceSender.TraceInvocationWrapper(() => base.VisitHostObjectMemberReference(node), 10899, 440454, 440495)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 440510, 440550);

                f_10899_440510_440549(f_10899_440523_440548(node));
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 440564, 440587);

                f_10899_440564_440586(this, node);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 440601, 440615);

                return result;
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 440322, 440626);

                bool
                f_10899_440523_440548(Microsoft.CodeAnalysis.CSharp.BoundHostObjectMemberReference
                this_param)
                {
                    var return_v = this_param.WasCompilerGenerated;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 440523, 440548);
                    return return_v;
                }


                int
                f_10899_440510_440549(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 440510, 440549);
                    return 0;
                }


                int
                f_10899_440564_440586(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundHostObjectMemberReference
                node)
                {
                    this_param.SetNotNullResult((Microsoft.CodeAnalysis.CSharp.BoundExpression)node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 440564, 440586);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 440322, 440626);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 440322, 440626);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override BoundNode? VisitPseudoVariable(BoundPseudoVariable node)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 440638, 440855);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 440735, 440779);

                var
                result = DynAbs.Tracing.TraceSender.TraceInvocationWrapper(() => base.VisitPseudoVariable(node), 10899, 440748, 440778)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 440793, 440816);

                f_10899_440793_440815(this, node);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 440830, 440844);

                return result;
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 440638, 440855);

                int
                f_10899_440793_440815(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundPseudoVariable
                node)
                {
                    this_param.SetNotNullResult((Microsoft.CodeAnalysis.CSharp.BoundExpression)node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 440793, 440815);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 440638, 440855);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 440638, 440855);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override BoundNode? VisitRangeExpression(BoundRangeExpression node)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 440867, 441087);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 440966, 441011);

                var
                result = DynAbs.Tracing.TraceSender.TraceInvocationWrapper(() => base.VisitRangeExpression(node), 10899, 440979, 441010)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 441025, 441048);

                f_10899_441025_441047(this, node);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 441062, 441076);

                return result;
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 440867, 441087);

                int
                f_10899_441025_441047(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundRangeExpression
                node)
                {
                    this_param.SetNotNullResult((Microsoft.CodeAnalysis.CSharp.BoundExpression)node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 441025, 441047);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 440867, 441087);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 440867, 441087);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override BoundNode? VisitRangeVariable(BoundRangeVariable node)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 441099, 441373);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 441194, 441230);

                f_10899_441194_441229(this, f_10899_441218_441228(node));
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 441244, 441267);

                f_10899_441244_441266(this, node);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 441350, 441362);

                return null;
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 441099, 441373);

                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10899_441218_441228(Microsoft.CodeAnalysis.CSharp.BoundRangeVariable
                this_param)
                {
                    var return_v = this_param.Value;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 441218, 441228);
                    return return_v;
                }


                int
                f_10899_441194_441229(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                node)
                {
                    this_param.VisitWithoutDiagnostics((Microsoft.CodeAnalysis.CSharp.BoundNode)node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 441194, 441229);
                    return 0;
                }


                int
                f_10899_441244_441266(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundRangeVariable
                node)
                {
                    this_param.SetNotNullResult((Microsoft.CodeAnalysis.CSharp.BoundExpression)node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 441244, 441266);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 441099, 441373);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 441099, 441373);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override BoundNode? VisitLabel(BoundLabel node)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 441385, 441586);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 441464, 441499);

                var
                result = DynAbs.Tracing.TraceSender.TraceInvocationWrapper(() => base.VisitLabel(node), 10899, 441477, 441498)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 441513, 441547);

                f_10899_441513_441546(this, node);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 441561, 441575);

                return result;
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 441385, 441586);

                int
                f_10899_441513_441546(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundLabel
                expression)
                {
                    this_param.SetUnknownResultNullability((Microsoft.CodeAnalysis.CSharp.BoundExpression)expression);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 441513, 441546);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 441385, 441586);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 441385, 441586);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override BoundNode? VisitDynamicMemberAccess(BoundDynamicMemberAccess node)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 441598, 442026);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 441705, 441734);

                var
                receiver = f_10899_441720_441733(node)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 441748, 441770);

                f_10899_441748_441769(this, receiver);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 441784, 441824);

                _ = f_10899_441788_441823(this, receiver);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 441840, 441876);

                f_10899_441840_441875(f_10899_441853_441874(f_10899_441853_441862(node)));
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 441890, 441941);

                var
                result = TypeWithAnnotations.Create(f_10899_441930_441939(node))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 441955, 441989);

                f_10899_441955_441988(this, node, result);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 442003, 442015);

                return null;
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 441598, 442026);

                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10899_441720_441733(Microsoft.CodeAnalysis.CSharp.BoundDynamicMemberAccess
                this_param)
                {
                    var return_v = this_param.Receiver;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 441720, 441733);
                    return return_v;
                }


                int
                f_10899_441748_441769(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                node)
                {
                    this_param.VisitRvalue(node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 441748, 441769);
                    return 0;
                }


                bool
                f_10899_441788_441823(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                receiverOpt)
                {
                    var return_v = this_param.CheckPossibleNullReceiver(receiverOpt);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 441788, 441823);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                f_10899_441853_441862(Microsoft.CodeAnalysis.CSharp.BoundDynamicMemberAccess
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 441853, 441862);
                    return return_v;
                }


                bool
                f_10899_441853_441874(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                type)
                {
                    var return_v = type.IsDynamic();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 441853, 441874);
                    return return_v;
                }


                int
                f_10899_441840_441875(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 441840, 441875);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                f_10899_441930_441939(Microsoft.CodeAnalysis.CSharp.BoundDynamicMemberAccess
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 441930, 441939);
                    return return_v;
                }


                int
                f_10899_441955_441988(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundDynamicMemberAccess
                expression, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                type)
                {
                    this_param.SetLvalueResultType((Microsoft.CodeAnalysis.CSharp.BoundExpression)expression, type);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 441955, 441988);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 441598, 442026);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 441598, 442026);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override BoundNode? VisitDynamicInvocation(BoundDynamicInvocation node)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 442038, 443118);
                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState receiverType = default(Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 442141, 442168);

                var
                expr = f_10899_442152_442167(node)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 442182, 442200);

                f_10899_442182_442199(this, expr);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 442323, 442414);

                var
                receiverOpt = (DynAbs.Tracing.TraceSender.Conditional_F1(10899, 442341, 442367) || (((expr is BoundMethodGroup) && DynAbs.Tracing.TraceSender.Conditional_F2(10899, 442370, 442406)) || DynAbs.Tracing.TraceSender.Conditional_F3(10899, 442409, 442413))) ? f_10899_442370_442406(((BoundMethodGroup)expr)) : null
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 442428, 442646) || true) && (f_10899_442432_442513(this, receiverOpt, out receiverType))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 442428, 442646);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 442547, 442631);

                    f_10899_442547_442630(this, receiverOpt, receiverType, checkNullableValueType: false);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 442428, 442646);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 442662, 442834);

                f_10899_442662_442833(this, node.Syntax, f_10899_442698_442712(node), f_10899_442714_442738(node), parametersOpt: default, argsToParamsOpt: default, defaultArguments: default, expanded: false);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 442848, 442884);

                f_10899_442848_442883(f_10899_442861_442882(f_10899_442861_442870(node)));
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 442898, 442938);

                f_10899_442898_442937(f_10899_442911_442936(f_10899_442911_442920(node)));
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 442952, 443033);

                var
                result = TypeWithAnnotations.Create(f_10899_442992_443001(node), NullableAnnotation.Oblivious)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 443047, 443081);

                f_10899_443047_443080(this, node, result);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 443095, 443107);

                return null;
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 442038, 443118);

                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10899_442152_442167(Microsoft.CodeAnalysis.CSharp.BoundDynamicInvocation
                this_param)
                {
                    var return_v = this_param.Expression;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 442152, 442167);
                    return return_v;
                }


                int
                f_10899_442182_442199(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                node)
                {
                    this_param.VisitRvalue(node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 442182, 442199);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression?
                f_10899_442370_442406(Microsoft.CodeAnalysis.CSharp.BoundMethodGroup
                this_param)
                {
                    var return_v = this_param.ReceiverOpt;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 442370, 442406);
                    return return_v;
                }


                bool
                f_10899_442432_442513(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression?
                receiverOpt, out Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                type)
                {
                    var return_v = this_param.TryGetMethodGroupReceiverNullability(receiverOpt, out type);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 442432, 442513);
                    return return_v;
                }


                bool
                f_10899_442547_442630(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                receiverOpt, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                resultType, bool
                checkNullableValueType)
                {
                    var return_v = this_param.CheckPossibleNullReceiver(receiverOpt, resultType, checkNullableValueType: checkNullableValueType);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 442547, 442630);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                f_10899_442698_442712(Microsoft.CodeAnalysis.CSharp.BoundDynamicInvocation
                this_param)
                {
                    var return_v = this_param.Arguments;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 442698, 442712);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.RefKind>
                f_10899_442714_442738(Microsoft.CodeAnalysis.CSharp.BoundDynamicInvocation
                this_param)
                {
                    var return_v = this_param.ArgumentRefKindsOpt;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 442714, 442738);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.NullableWalker.VisitArgumentResult>
                f_10899_442662_442833(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.SyntaxNode
                syntax, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                arguments, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.RefKind>
                refKindsOpt, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol>
                parametersOpt, System.Collections.Immutable.ImmutableArray<int>
                argsToParamsOpt, Microsoft.CodeAnalysis.BitVector
                defaultArguments, bool
                expanded)
                {
                    var return_v = this_param.VisitArgumentsEvaluate(syntax, arguments, refKindsOpt, parametersOpt: parametersOpt, argsToParamsOpt: argsToParamsOpt, defaultArguments: defaultArguments, expanded: expanded);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 442662, 442833);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                f_10899_442861_442870(Microsoft.CodeAnalysis.CSharp.BoundDynamicInvocation
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 442861, 442870);
                    return return_v;
                }


                bool
                f_10899_442861_442882(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                type)
                {
                    var return_v = type.IsDynamic();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 442861, 442882);
                    return return_v;
                }


                int
                f_10899_442848_442883(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 442848, 442883);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                f_10899_442911_442920(Microsoft.CodeAnalysis.CSharp.BoundDynamicInvocation
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 442911, 442920);
                    return return_v;
                }


                bool
                f_10899_442911_442936(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                this_param)
                {
                    var return_v = this_param.IsReferenceType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 442911, 442936);
                    return return_v;
                }


                int
                f_10899_442898_442937(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 442898, 442937);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                f_10899_442992_443001(Microsoft.CodeAnalysis.CSharp.BoundDynamicInvocation
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 442992, 443001);
                    return return_v;
                }


                int
                f_10899_443047_443080(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundDynamicInvocation
                expression, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                type)
                {
                    this_param.SetLvalueResultType((Microsoft.CodeAnalysis.CSharp.BoundExpression)expression, type);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 443047, 443080);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 442038, 443118);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 442038, 443118);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override BoundNode? VisitEventAssignmentOperator(BoundEventAssignmentOperator node)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 443130, 444513);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 443245, 443280);

                var
                receiverOpt = f_10899_443263_443279(node)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 443294, 443319);

                f_10899_443294_443318(this, receiverOpt);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 443333, 443367);

                f_10899_443333_443366(!IsConditionalState);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 443381, 443405);

                var
                @event = f_10899_443394_443404(node)
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 443419, 443862) || true) && (f_10899_443423_443439_M(!@event.IsStatic))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 443419, 443862);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 443473, 443535);

                    @event = (EventSymbol)f_10899_443495_443534(f_10899_443510_443520().Type, @event);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 443743, 443786);

                    _ = f_10899_443747_443785(this, receiverOpt);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 443804, 443847);

                    f_10899_443804_443846(this, node, f_10899_443827_443837(node), @event);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 443419, 443862);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 443876, 443903);

                f_10899_443876_443902(this, f_10899_443888_443901(node));

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 444009, 444348) || true) && (f_10899_444013_444048_M(DynAbs.Tracing.TraceSender.TraceConditionalAccessExpression(f_10899_444013_444040(f_10899_444013_444026(node)), 10899, 444013, 444048)?.IsNull) != true
                && (DynAbs.Tracing.TraceSender.Expression_True(10899, 444013, 444138) && f_10899_444077_444112(this, receiverOpt, @event) is > 0 and var memberSlot))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 444009, 444348);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 444172, 444333);

                    this.State[memberSlot] = (DynAbs.Tracing.TraceSender.Conditional_F1(10899, 444197, 444212) || ((f_10899_444197_444212(node) && DynAbs.Tracing.TraceSender.Conditional_F2(10899, 444236, 444281)) || DynAbs.Tracing.TraceSender.Conditional_F3(10899, 444305, 444332))) ? f_10899_444236_444281(this.State[memberSlot], f_10899_444264_444274().State) : NullableFlowState.MaybeNull;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 444009, 444348);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 444362, 444385);

                f_10899_444362_444384(this, node);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 444490, 444502);

                return null;
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 443130, 444513);

                Microsoft.CodeAnalysis.CSharp.BoundExpression?
                f_10899_443263_443279(Microsoft.CodeAnalysis.CSharp.BoundEventAssignmentOperator
                this_param)
                {
                    var return_v = this_param.ReceiverOpt;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 443263, 443279);
                    return return_v;
                }


                int
                f_10899_443294_443318(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression?
                node)
                {
                    this_param.VisitRvalue(node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 443294, 443318);
                    return 0;
                }


                int
                f_10899_443333_443366(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 443333, 443366);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.EventSymbol
                f_10899_443394_443404(Microsoft.CodeAnalysis.CSharp.BoundEventAssignmentOperator
                this_param)
                {
                    var return_v = this_param.Event;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 443394, 443404);
                    return return_v;
                }


                bool
                f_10899_443423_443439_M(bool
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 443423, 443439);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                f_10899_443510_443520()
                {
                    var return_v = ResultType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 443510, 443520);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbol
                f_10899_443495_443534(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?
                type, Microsoft.CodeAnalysis.CSharp.Symbols.EventSymbol
                symbol)
                {
                    var return_v = AsMemberOfType(type, (Microsoft.CodeAnalysis.CSharp.Symbol)symbol);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 443495, 443534);
                    return return_v;
                }


                bool
                f_10899_443747_443785(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression?
                receiverOpt)
                {
                    var return_v = this_param.CheckPossibleNullReceiver(receiverOpt);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 443747, 443785);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.EventSymbol
                f_10899_443827_443837(Microsoft.CodeAnalysis.CSharp.BoundEventAssignmentOperator
                this_param)
                {
                    var return_v = this_param.Event;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 443827, 443837);
                    return return_v;
                }


                int
                f_10899_443804_443846(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundEventAssignmentOperator
                node, Microsoft.CodeAnalysis.CSharp.Symbols.EventSymbol
                originalSymbol, Microsoft.CodeAnalysis.CSharp.Symbols.EventSymbol
                updatedSymbol)
                {
                    this_param.SetUpdatedSymbol((Microsoft.CodeAnalysis.CSharp.BoundNode)node, (Microsoft.CodeAnalysis.CSharp.Symbol)originalSymbol, (Microsoft.CodeAnalysis.CSharp.Symbol)updatedSymbol);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 443804, 443846);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10899_443888_443901(Microsoft.CodeAnalysis.CSharp.BoundEventAssignmentOperator
                this_param)
                {
                    var return_v = this_param.Argument;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 443888, 443901);
                    return return_v;
                }


                int
                f_10899_443876_443902(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                node)
                {
                    this_param.VisitRvalue(node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 443876, 443902);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10899_444013_444026(Microsoft.CodeAnalysis.CSharp.BoundEventAssignmentOperator
                this_param)
                {
                    var return_v = this_param.Argument;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 444013, 444026);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ConstantValue?
                f_10899_444013_444040(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.ConstantValue;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 444013, 444040);
                    return return_v;
                }


                bool?
                f_10899_444013_444048_M(bool?
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 444013, 444048);
                    return return_v;
                }


                int
                f_10899_444077_444112(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression?
                receiverOpt, Microsoft.CodeAnalysis.CSharp.Symbols.EventSymbol
                member)
                {
                    var return_v = this_param.MakeMemberSlot(receiverOpt, (Microsoft.CodeAnalysis.CSharp.Symbol)member);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 444077, 444112);
                    return return_v;
                }


                bool
                f_10899_444197_444212(Microsoft.CodeAnalysis.CSharp.BoundEventAssignmentOperator
                this_param)
                {
                    var return_v = this_param.IsAddition
                    ;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 444197, 444212);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                f_10899_444264_444274()
                {
                    var return_v = ResultType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 444264, 444274);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.NullableFlowState
                f_10899_444236_444281(Microsoft.CodeAnalysis.CSharp.NullableFlowState
                a, Microsoft.CodeAnalysis.CSharp.NullableFlowState
                b)
                {
                    var return_v = a.Meet(b);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 444236, 444281);
                    return return_v;
                }


                int
                f_10899_444362_444384(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundEventAssignmentOperator
                node)
                {
                    this_param.SetNotNullResult((Microsoft.CodeAnalysis.CSharp.BoundExpression)node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 444362, 444384);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 443130, 444513);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 443130, 444513);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override BoundNode? VisitDynamicObjectCreationExpression(BoundDynamicObjectCreationExpression node)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 444525, 445089);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 444656, 444690);

                f_10899_444656_444689(!IsConditionalState);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 444704, 444735);

                var
                arguments = f_10899_444720_444734(node)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 444749, 444938);

                var
                argumentResults = f_10899_444771_444937(this, node.Syntax, arguments, f_10899_444818_444842(node), parametersOpt: default, argsToParamsOpt: default, defaultArguments: default, expanded: false)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 444952, 445052);

                f_10899_444952_445051(this, node, arguments, argumentResults, f_10899_445021_445050(node));
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 445066, 445078);

                return null;
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 444525, 445089);

                int
                f_10899_444656_444689(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 444656, 444689);
                    return 0;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                f_10899_444720_444734(Microsoft.CodeAnalysis.CSharp.BoundDynamicObjectCreationExpression
                this_param)
                {
                    var return_v = this_param.Arguments;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 444720, 444734);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.RefKind>
                f_10899_444818_444842(Microsoft.CodeAnalysis.CSharp.BoundDynamicObjectCreationExpression
                this_param)
                {
                    var return_v = this_param.ArgumentRefKindsOpt;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 444818, 444842);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.NullableWalker.VisitArgumentResult>
                f_10899_444771_444937(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.SyntaxNode
                syntax, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                arguments, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.RefKind>
                refKindsOpt, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol>
                parametersOpt, System.Collections.Immutable.ImmutableArray<int>
                argsToParamsOpt, Microsoft.CodeAnalysis.BitVector
                defaultArguments, bool
                expanded)
                {
                    var return_v = this_param.VisitArgumentsEvaluate(syntax, arguments, refKindsOpt, parametersOpt: parametersOpt, argsToParamsOpt: argsToParamsOpt, defaultArguments: defaultArguments, expanded: expanded);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 444771, 444937);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundObjectInitializerExpressionBase?
                f_10899_445021_445050(Microsoft.CodeAnalysis.CSharp.BoundDynamicObjectCreationExpression
                this_param)
                {
                    var return_v = this_param.InitializerExpressionOpt;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 445021, 445050);
                    return return_v;
                }


                int
                f_10899_444952_445051(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundDynamicObjectCreationExpression
                node, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                arguments, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.NullableWalker.VisitArgumentResult>
                argumentResults, Microsoft.CodeAnalysis.CSharp.BoundObjectInitializerExpressionBase?
                initializerOpt)
                {
                    this_param.VisitObjectOrDynamicObjectCreation((Microsoft.CodeAnalysis.CSharp.BoundExpression)node, arguments, argumentResults, (Microsoft.CodeAnalysis.CSharp.BoundExpression?)initializerOpt);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 444952, 445051);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 444525, 445089);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 444525, 445089);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override BoundNode? VisitObjectInitializerExpression(BoundObjectInitializerExpression node)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 445101, 445520);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 445460, 445483);

                f_10899_445460_445482(this, node);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 445497, 445509);

                return null;
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 445101, 445520);

                int
                f_10899_445460_445482(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundObjectInitializerExpression
                node)
                {
                    this_param.SetNotNullResult((Microsoft.CodeAnalysis.CSharp.BoundExpression)node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 445460, 445482);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 445101, 445520);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 445101, 445520);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override BoundNode? VisitCollectionInitializerExpression(BoundCollectionInitializerExpression node)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 445532, 445959);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 445899, 445922);

                f_10899_445899_445921(this, node);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 445936, 445948);

                return null;
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 445532, 445959);

                int
                f_10899_445899_445921(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundCollectionInitializerExpression
                node)
                {
                    this_param.SetNotNullResult((Microsoft.CodeAnalysis.CSharp.BoundExpression)node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 445899, 445921);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 445532, 445959);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 445532, 445959);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override BoundNode? VisitDynamicCollectionElementInitializer(BoundDynamicCollectionElementInitializer node)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 445971, 446406);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 446346, 446369);

                f_10899_446346_446368(this, node);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 446383, 446395);

                return null;
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 445971, 446406);

                int
                f_10899_446346_446368(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundDynamicCollectionElementInitializer
                node)
                {
                    this_param.SetNotNullResult((Microsoft.CodeAnalysis.CSharp.BoundExpression)node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 446346, 446368);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 445971, 446406);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 445971, 446406);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override BoundNode? VisitImplicitReceiver(BoundImplicitReceiver node)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 446418, 446641);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 446519, 446565);

                var
                result = DynAbs.Tracing.TraceSender.TraceInvocationWrapper(() => base.VisitImplicitReceiver(node), 10899, 446532, 446564)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 446579, 446602);

                f_10899_446579_446601(this, node);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 446616, 446630);

                return result;
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 446418, 446641);

                int
                f_10899_446579_446601(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundImplicitReceiver
                node)
                {
                    this_param.SetNotNullResult((Microsoft.CodeAnalysis.CSharp.BoundExpression)node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 446579, 446601);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 446418, 446641);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 446418, 446641);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override BoundNode? VisitAnonymousPropertyDeclaration(BoundAnonymousPropertyDeclaration node)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 446653, 446826);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 446778, 446815);

                throw f_10899_446784_446814();
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 446653, 446826);

                System.Exception
                f_10899_446784_446814()
                {
                    var return_v = ExceptionUtilities.Unreachable;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 446784, 446814);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 446653, 446826);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 446653, 446826);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override BoundNode? VisitNoPiaObjectCreationExpression(BoundNoPiaObjectCreationExpression node)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 446838, 447157);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 446965, 447024);

                var
                result = DynAbs.Tracing.TraceSender.TraceInvocationWrapper(() => base.VisitNoPiaObjectCreationExpression(node), 10899, 446978, 447023)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 447038, 447118);

                f_10899_447038_447117(this, node, TypeWithState.Create(f_10899_447079_447088(node), NullableFlowState.NotNull));
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 447132, 447146);

                return result;
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 446838, 447157);

                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                f_10899_447079_447088(Microsoft.CodeAnalysis.CSharp.BoundNoPiaObjectCreationExpression
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 447079, 447088);
                    return return_v;
                }


                int
                f_10899_447038_447117(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundNoPiaObjectCreationExpression
                expression, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                type)
                {
                    this_param.SetResultType((Microsoft.CodeAnalysis.CSharp.BoundExpression)expression, type);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 447038, 447117);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 446838, 447157);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 446838, 447157);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override BoundNode? VisitNewT(BoundNewT node)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 447169, 447437);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 447246, 447400);

                f_10899_447246_447399(this, node, ImmutableArray<BoundExpression>.Empty, ImmutableArray<VisitArgumentResult>.Empty, f_10899_447369_447398(node));
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 447414, 447426);

                return null;
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 447169, 447437);

                Microsoft.CodeAnalysis.CSharp.BoundObjectInitializerExpressionBase?
                f_10899_447369_447398(Microsoft.CodeAnalysis.CSharp.BoundNewT
                this_param)
                {
                    var return_v = this_param.InitializerExpressionOpt;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 447369, 447398);
                    return return_v;
                }


                int
                f_10899_447246_447399(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundNewT
                node, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                arguments, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.NullableWalker.VisitArgumentResult>
                argumentResults, Microsoft.CodeAnalysis.CSharp.BoundObjectInitializerExpressionBase?
                initializerOpt)
                {
                    this_param.VisitObjectOrDynamicObjectCreation((Microsoft.CodeAnalysis.CSharp.BoundExpression)node, arguments, argumentResults, (Microsoft.CodeAnalysis.CSharp.BoundExpression?)initializerOpt);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 447246, 447399);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 447169, 447437);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 447169, 447437);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override BoundNode? VisitArrayInitialization(BoundArrayInitialization node)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 447449, 447681);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 447556, 447605);

                var
                result = DynAbs.Tracing.TraceSender.TraceInvocationWrapper(() => base.VisitArrayInitialization(node), 10899, 447569, 447604)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 447619, 447642);

                f_10899_447619_447641(this, node);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 447656, 447670);

                return result;
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 447449, 447681);

                int
                f_10899_447619_447641(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundArrayInitialization
                node)
                {
                    this_param.SetNotNullResult((Microsoft.CodeAnalysis.CSharp.BoundExpression)node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 447619, 447641);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 447449, 447681);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 447449, 447681);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private void SetUnknownResultNullability(BoundExpression expression)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 447693, 447871);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 447786, 447860);

                f_10899_447786_447859(this, expression, TypeWithState.Create(f_10899_447833_447848(expression), default));
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 447693, 447871);

                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?
                f_10899_447833_447848(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 447833, 447848);
                    return return_v;
                }


                int
                f_10899_447786_447859(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                expression, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                type)
                {
                    this_param.SetResultType(expression, type);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 447786, 447859);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 447693, 447871);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 447693, 447871);
            }
        }

        public override BoundNode? VisitStackAllocArrayCreation(BoundStackAllocArrayCreation node)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 447883, 448227);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 447998, 448051);

                var
                result = DynAbs.Tracing.TraceSender.TraceInvocationWrapper(() => base.VisitStackAllocArrayCreation(node), 10899, 448011, 448050)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 448065, 448151);

                f_10899_448065_448150(f_10899_448078_448087(node) is null || (DynAbs.Tracing.TraceSender.Expression_False(10899, 448078, 448122) || f_10899_448099_448122(f_10899_448099_448108(node))) || (DynAbs.Tracing.TraceSender.Expression_False(10899, 448078, 448149) || f_10899_448126_448149(f_10899_448126_448135(node))));
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 448165, 448188);

                f_10899_448165_448187(this, node);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 448202, 448216);

                return result;
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 447883, 448227);

                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?
                f_10899_448078_448087(Microsoft.CodeAnalysis.CSharp.BoundStackAllocArrayCreation
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 448078, 448087);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                f_10899_448099_448108(Microsoft.CodeAnalysis.CSharp.BoundStackAllocArrayCreation
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 448099, 448108);
                    return return_v;
                }


                bool
                f_10899_448099_448122(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                type)
                {
                    var return_v = type.IsErrorType();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 448099, 448122);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                f_10899_448126_448135(Microsoft.CodeAnalysis.CSharp.BoundStackAllocArrayCreation
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 448126, 448135);
                    return return_v;
                }


                bool
                f_10899_448126_448149(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                this_param)
                {
                    var return_v = this_param.IsRefLikeType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 448126, 448149);
                    return return_v;
                }


                int
                f_10899_448065_448150(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 448065, 448150);
                    return 0;
                }


                int
                f_10899_448165_448187(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundStackAllocArrayCreation
                node)
                {
                    this_param.SetNotNullResult((Microsoft.CodeAnalysis.CSharp.BoundExpression)node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 448165, 448187);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 447883, 448227);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 447883, 448227);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override BoundNode? VisitDynamicIndexerAccess(BoundDynamicIndexerAccess node)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 448239, 449063);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 448348, 448377);

                var
                receiver = f_10899_448363_448376(node)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 448391, 448413);

                f_10899_448391_448412(this, receiver);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 448607, 448647);

                _ = f_10899_448611_448646(this, receiver);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 448661, 448833);

                f_10899_448661_448832(this, node.Syntax, f_10899_448697_448711(node), f_10899_448713_448737(node), parametersOpt: default, argsToParamsOpt: default, defaultArguments: default, expanded: false);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 448847, 448883);

                f_10899_448847_448882(f_10899_448860_448881(f_10899_448860_448869(node)));
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 448897, 448978);

                var
                result = TypeWithAnnotations.Create(f_10899_448937_448946(node), NullableAnnotation.Oblivious)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 448992, 449026);

                f_10899_448992_449025(this, node, result);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 449040, 449052);

                return null;
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 448239, 449063);

                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10899_448363_448376(Microsoft.CodeAnalysis.CSharp.BoundDynamicIndexerAccess
                this_param)
                {
                    var return_v = this_param.Receiver;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 448363, 448376);
                    return return_v;
                }


                int
                f_10899_448391_448412(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                node)
                {
                    this_param.VisitRvalue(node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 448391, 448412);
                    return 0;
                }


                bool
                f_10899_448611_448646(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                receiverOpt)
                {
                    var return_v = this_param.CheckPossibleNullReceiver(receiverOpt);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 448611, 448646);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                f_10899_448697_448711(Microsoft.CodeAnalysis.CSharp.BoundDynamicIndexerAccess
                this_param)
                {
                    var return_v = this_param.Arguments;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 448697, 448711);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.RefKind>
                f_10899_448713_448737(Microsoft.CodeAnalysis.CSharp.BoundDynamicIndexerAccess
                this_param)
                {
                    var return_v = this_param.ArgumentRefKindsOpt;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 448713, 448737);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.NullableWalker.VisitArgumentResult>
                f_10899_448661_448832(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.SyntaxNode
                syntax, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                arguments, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.RefKind>
                refKindsOpt, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol>
                parametersOpt, System.Collections.Immutable.ImmutableArray<int>
                argsToParamsOpt, Microsoft.CodeAnalysis.BitVector
                defaultArguments, bool
                expanded)
                {
                    var return_v = this_param.VisitArgumentsEvaluate(syntax, arguments, refKindsOpt, parametersOpt: parametersOpt, argsToParamsOpt: argsToParamsOpt, defaultArguments: defaultArguments, expanded: expanded);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 448661, 448832);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                f_10899_448860_448869(Microsoft.CodeAnalysis.CSharp.BoundDynamicIndexerAccess
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 448860, 448869);
                    return return_v;
                }


                bool
                f_10899_448860_448881(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                type)
                {
                    var return_v = type.IsDynamic();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 448860, 448881);
                    return return_v;
                }


                int
                f_10899_448847_448882(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 448847, 448882);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                f_10899_448937_448946(Microsoft.CodeAnalysis.CSharp.BoundDynamicIndexerAccess
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 448937, 448946);
                    return return_v;
                }


                int
                f_10899_448992_449025(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundDynamicIndexerAccess
                expression, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                type)
                {
                    this_param.SetLvalueResultType((Microsoft.CodeAnalysis.CSharp.BoundExpression)expression, type);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 448992, 449025);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 448239, 449063);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 448239, 449063);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private bool CheckPossibleNullReceiver(BoundExpression? receiverOpt, bool checkNullableValueType = false)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 449075, 449298);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 449205, 449287);

                return f_10899_449212_449286(this, receiverOpt, f_10899_449251_449261(), checkNullableValueType);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 449075, 449298);

                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                f_10899_449251_449261()
                {
                    var return_v = ResultType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 449251, 449261);
                    return return_v;
                }


                bool
                f_10899_449212_449286(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression?
                receiverOpt, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                resultType, bool
                checkNullableValueType)
                {
                    var return_v = this_param.CheckPossibleNullReceiver(receiverOpt, resultType, checkNullableValueType);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 449212, 449286);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 449075, 449298);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 449075, 449298);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private bool CheckPossibleNullReceiver(BoundExpression? receiverOpt, TypeWithState resultType, bool checkNullableValueType)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 449310, 450313);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 449458, 449497);

                f_10899_449458_449496(!this.IsConditionalState);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 449511, 449543);

                bool
                reportedDiagnostic = false
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 449557, 450260) || true) && (receiverOpt != null && (DynAbs.Tracing.TraceSender.Expression_True(10899, 449561, 449604) && this.State.Reachable))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 449557, 450260);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 449638, 449677);

                    var
                    resultTypeSymbol = resultType.Type
                    ;

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 449695, 449797) || true) && (resultTypeSymbol is null)
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 449695, 449797);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 449765, 449778);

                        return false;
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 449695, 449797);
                    }
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 449826, 449919);

                    f_10899_449826_449918(f_10899_449839_449855(receiverOpt) is null || (DynAbs.Tracing.TraceSender.Expression_False(10899, 449839, 449917) || f_10899_449867_449917(f_10899_449882_449898(receiverOpt), resultTypeSymbol)));

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 449945, 450175) || true) && (!f_10899_449950_450088(this, resultTypeSymbol, resultType.State, checkNullableValueType, receiverOpt.Syntax, out reportedDiagnostic))
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 449945, 450175);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 450130, 450156);

                        return reportedDiagnostic;
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 449945, 450175);
                    }
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 450195, 450245);

                    f_10899_450195_450244(this, receiverOpt, ref this.State);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 449557, 450260);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 450276, 450302);

                return reportedDiagnostic;
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 449310, 450313);

                int
                f_10899_449458_449496(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 449458, 449496);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?
                f_10899_449839_449855(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 449839, 449855);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                f_10899_449882_449898(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 449882, 449898);
                    return return_v;
                }


                bool
                f_10899_449867_449917(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                typeA, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                typeB)
                {
                    var return_v = AreCloseEnough(typeA, typeB);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 449867, 449917);
                    return return_v;
                }


                int
                f_10899_449826_449918(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 449826, 449918);
                    return 0;
                }


                bool
                f_10899_449950_450088(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                type, Microsoft.CodeAnalysis.CSharp.NullableFlowState
                state, bool
                checkNullableValueType, Microsoft.CodeAnalysis.SyntaxNode
                syntax, out bool
                reportedDiagnostic)
                {
                    var return_v = this_param.ReportPossibleNullReceiverIfNeeded(type, state, checkNullableValueType, syntax, out reportedDiagnostic);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 449950, 450088);
                    return return_v;
                }


                int
                f_10899_450195_450244(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                expression, ref Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState
                state)
                {
                    this_param.LearnFromNonNullTest(expression, ref state);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 450195, 450244);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 449310, 450313);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 449310, 450313);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private bool ReportPossibleNullReceiverIfNeeded(TypeSymbol type, NullableFlowState state, bool checkNullableValueType, SyntaxNode syntax, out bool reportedDiagnostic)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 450382, 451169);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 450573, 450600);

                reportedDiagnostic = false;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 450614, 451130) || true) && (f_10899_450618_450635(state))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 450614, 451130);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 450669, 450705);

                    bool
                    isValueType = f_10899_450688_450704(type)
                    ;

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 450723, 450932) || true) && (isValueType && (DynAbs.Tracing.TraceSender.Expression_True(10899, 450727, 450858) && (!checkNullableValueType || (DynAbs.Tracing.TraceSender.Expression_False(10899, 450743, 450807) || !f_10899_450771_450807(type)) || (DynAbs.Tracing.TraceSender.Expression_False(10899, 450743, 450857) || f_10899_450811_450857(f_10899_450811_450843(type))))))
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 450723, 450932);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 450900, 450913);

                        return false;
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 450723, 450932);
                    }
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 450952, 451071);

                    f_10899_450952_451070(this, (DynAbs.Tracing.TraceSender.Conditional_F1(10899, 450969, 450980) || ((isValueType && DynAbs.Tracing.TraceSender.Conditional_F2(10899, 450983, 451023)) || DynAbs.Tracing.TraceSender.Conditional_F3(10899, 451026, 451061))) ? ErrorCode.WRN_NullableValueTypeMayBeNull : ErrorCode.WRN_NullReferenceReceiver, syntax);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 451089, 451115);

                    reportedDiagnostic = true;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 450614, 451130);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 451146, 451158);

                return true;
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 450382, 451169);

                bool
                f_10899_450618_450635(Microsoft.CodeAnalysis.CSharp.NullableFlowState
                state)
                {
                    var return_v = state.MayBeNull();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 450618, 450635);
                    return return_v;
                }


                bool
                f_10899_450688_450704(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                this_param)
                {
                    var return_v = this_param.IsValueType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 450688, 450704);
                    return return_v;
                }


                bool
                f_10899_450771_450807(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                type)
                {
                    var return_v = type.IsNullableTypeOrTypeParameter();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 450771, 450807);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                f_10899_450811_450843(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                type)
                {
                    var return_v = type.GetNullableUnderlyingType();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 450811, 450843);
                    return return_v;
                }


                bool
                f_10899_450811_450857(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                type)
                {
                    var return_v = type.IsErrorType();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 450811, 450857);
                    return return_v;
                }


                int
                f_10899_450952_451070(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.ErrorCode
                errorCode, Microsoft.CodeAnalysis.SyntaxNode
                syntaxNode, params object[]
                arguments)
                {
                    this_param.ReportDiagnostic(errorCode, syntaxNode, arguments);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 450952, 451070);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 450382, 451169);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 450382, 451169);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private void CheckExtensionMethodThisNullability(BoundExpression expr, Conversion conversion, ParameterSymbol parameter, TypeWithState result)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 451181, 451863);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 451348, 451852);

                f_10899_451348_451851(this, conversionOpt: null, expr, conversion, f_10899_451517_451534(parameter), parameter, f_10899_451581_451610(parameter), f_10899_451629_451663(this, parameter), f_10899_451682_451798(f_10899_451706_451772(result, result.ToTypeWithAnnotations(compilation)), stateForLambda: default), extensionMethodThisArgument: true);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 451181, 451863);

                Microsoft.CodeAnalysis.RefKind
                f_10899_451517_451534(Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol
                this_param)
                {
                    var return_v = this_param.RefKind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 451517, 451534);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                f_10899_451581_451610(Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol
                this_param)
                {
                    var return_v = this_param.TypeWithAnnotations;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 451581, 451610);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.FlowAnalysisAnnotations
                f_10899_451629_451663(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol
                parameter)
                {
                    var return_v = this_param.GetParameterAnnotations(parameter);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 451629, 451663);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.NullableWalker.VisitResult
                f_10899_451706_451772(Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                rValueType, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                lValueType)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.NullableWalker.VisitResult(rValueType, lValueType);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 451706, 451772);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.NullableWalker.VisitArgumentResult
                f_10899_451682_451798(Microsoft.CodeAnalysis.CSharp.NullableWalker.VisitResult
                visitResult, Microsoft.CodeAnalysis.Optional<Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState>
                stateForLambda)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.NullableWalker.VisitArgumentResult(visitResult, stateForLambda: stateForLambda);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 451682, 451798);
                    return return_v;
                }


                int
                f_10899_451348_451851(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundConversion?
                conversionOpt, Microsoft.CodeAnalysis.CSharp.BoundExpression
                argumentNoConversion, Microsoft.CodeAnalysis.CSharp.Conversion
                conversion, Microsoft.CodeAnalysis.RefKind
                refKind, Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol
                parameter, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                parameterType, Microsoft.CodeAnalysis.CSharp.Symbols.FlowAnalysisAnnotations
                parameterAnnotations, Microsoft.CodeAnalysis.CSharp.NullableWalker.VisitArgumentResult
                result, bool
                extensionMethodThisArgument)
                {
                    this_param.VisitArgumentConversionAndInboundAssignmentsAndPreConditions(conversionOpt: conversionOpt, argumentNoConversion, conversion, refKind, parameter, parameterType, parameterAnnotations, result, extensionMethodThisArgument: extensionMethodThisArgument);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 451348, 451851);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 451181, 451863);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 451181, 451863);
            }
        }

        private static bool IsNullabilityMismatch(TypeWithAnnotations type1, TypeWithAnnotations type2)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterStaticMethod(10899, 451875, 452371);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 452164, 452360);

                return type1.Equals(type2, TypeCompareKind.AllIgnoreOptions) && (DynAbs.Tracing.TraceSender.Expression_True(10899, 452171, 452359) && !type1.Equals(type2, TypeCompareKind.AllIgnoreOptions & ~TypeCompareKind.IgnoreNullableModifiersForReferenceTypes));
                DynAbs.Tracing.TraceSender.TraceExitStaticMethod(10899, 451875, 452371);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 451875, 452371);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 451875, 452371);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private static bool IsNullabilityMismatch(TypeSymbol type1, TypeSymbol type2)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterStaticMethod(10899, 452383, 452861);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 452654, 452850);

                return f_10899_452661_452714(type1, type2, TypeCompareKind.AllIgnoreOptions) && (DynAbs.Tracing.TraceSender.Expression_True(10899, 452661, 452849) && !f_10899_452736_452849(type1, type2, TypeCompareKind.AllIgnoreOptions & ~TypeCompareKind.IgnoreNullableModifiersForReferenceTypes));
                DynAbs.Tracing.TraceSender.TraceExitStaticMethod(10899, 452383, 452861);

                bool
                f_10899_452661_452714(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                t2, Microsoft.CodeAnalysis.TypeCompareKind
                compareKind)
                {
                    var return_v = this_param.Equals(t2, compareKind);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 452661, 452714);
                    return return_v;
                }


                bool
                f_10899_452736_452849(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                t2, Microsoft.CodeAnalysis.TypeCompareKind
                compareKind)
                {
                    var return_v = this_param.Equals(t2, compareKind);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 452736, 452849);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 452383, 452861);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 452383, 452861);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override BoundNode? VisitQueryClause(BoundQueryClause node)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 452873, 453177);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 452964, 453005);

                var
                result = DynAbs.Tracing.TraceSender.TraceInvocationWrapper(() => base.VisitQueryClause(node), 10899, 452977, 453004)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 453019, 453042);

                f_10899_453019_453041(this, node);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 453152, 453166);

                return result;
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 452873, 453177);

                int
                f_10899_453019_453041(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundQueryClause
                node)
                {
                    this_param.SetNotNullResult((Microsoft.CodeAnalysis.CSharp.BoundExpression)node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 453019, 453041);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 452873, 453177);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 452873, 453177);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override BoundNode? VisitNameOfOperator(BoundNameOfOperator node)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 453189, 453463);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 453286, 453330);

                var
                result = DynAbs.Tracing.TraceSender.TraceInvocationWrapper(() => base.VisitNameOfOperator(node), 10899, 453299, 453329)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 453344, 453424);

                f_10899_453344_453423(this, node, TypeWithState.Create(f_10899_453385_453394(node), NullableFlowState.NotNull));
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 453438, 453452);

                return result;
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 453189, 453463);

                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                f_10899_453385_453394(Microsoft.CodeAnalysis.CSharp.BoundNameOfOperator
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 453385, 453394);
                    return return_v;
                }


                int
                f_10899_453344_453423(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundNameOfOperator
                expression, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                type)
                {
                    this_param.SetResultType((Microsoft.CodeAnalysis.CSharp.BoundExpression)expression, type);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 453344, 453423);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 453189, 453463);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 453189, 453463);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override BoundNode? VisitNamespaceExpression(BoundNamespaceExpression node)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 453475, 453718);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 453582, 453631);

                var
                result = DynAbs.Tracing.TraceSender.TraceInvocationWrapper(() => base.VisitNamespaceExpression(node), 10899, 453595, 453630)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 453645, 453679);

                f_10899_453645_453678(this, node);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 453693, 453707);

                return result;
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 453475, 453718);

                int
                f_10899_453645_453678(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundNamespaceExpression
                expression)
                {
                    this_param.SetUnknownResultNullability((Microsoft.CodeAnalysis.CSharp.BoundExpression)expression);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 453645, 453678);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 453475, 453718);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 453475, 453718);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override BoundNode? VisitInterpolatedString(BoundInterpolatedString node)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 453730, 454016);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 453835, 453883);

                var
                result = DynAbs.Tracing.TraceSender.TraceInvocationWrapper(() => base.VisitInterpolatedString(node), 10899, 453848, 453882)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 453897, 453977);

                f_10899_453897_453976(this, node, TypeWithState.Create(f_10899_453938_453947(node), NullableFlowState.NotNull));
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 453991, 454005);

                return result;
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 453730, 454016);

                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?
                f_10899_453938_453947(Microsoft.CodeAnalysis.CSharp.BoundInterpolatedString
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 453938, 453947);
                    return return_v;
                }


                int
                f_10899_453897_453976(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundInterpolatedString
                expression, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                type)
                {
                    this_param.SetResultType((Microsoft.CodeAnalysis.CSharp.BoundExpression)expression, type);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 453897, 453976);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 453730, 454016);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 453730, 454016);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override BoundNode? VisitStringInsert(BoundStringInsert node)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 454028, 454250);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 454121, 454163);

                var
                result = DynAbs.Tracing.TraceSender.TraceInvocationWrapper(() => base.VisitStringInsert(node), 10899, 454134, 454162)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 454177, 454211);

                f_10899_454177_454210(this, node);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 454225, 454239);

                return result;
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 454028, 454250);

                int
                f_10899_454177_454210(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundStringInsert
                expression)
                {
                    this_param.SetUnknownResultNullability((Microsoft.CodeAnalysis.CSharp.BoundExpression)expression);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 454177, 454210);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 454028, 454250);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 454028, 454250);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override BoundNode? VisitConvertedStackAllocExpression(BoundConvertedStackAllocExpression node)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 454262, 454524);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 454389, 454448);

                var
                result = DynAbs.Tracing.TraceSender.TraceInvocationWrapper(() => base.VisitConvertedStackAllocExpression(node), 10899, 454402, 454447)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 454462, 454485);

                f_10899_454462_454484(this, node);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 454499, 454513);

                return result;
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 454262, 454524);

                int
                f_10899_454462_454484(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundConvertedStackAllocExpression
                node)
                {
                    this_param.SetNotNullResult((Microsoft.CodeAnalysis.CSharp.BoundExpression)node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 454462, 454484);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 454262, 454524);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 454262, 454524);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override BoundNode? VisitDiscardExpression(BoundDiscardExpression node)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 454536, 454841);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 454639, 454690);

                var
                result = TypeWithAnnotations.Create(f_10899_454679_454688(node))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 454704, 454754);

                var
                rValueType = TypeWithState.ForType(f_10899_454743_454752(node))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 454768, 454804);

                f_10899_454768_454803(this, node, rValueType, result);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 454818, 454830);

                return null;
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 454536, 454841);

                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?
                f_10899_454679_454688(Microsoft.CodeAnalysis.CSharp.BoundDiscardExpression
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 454679, 454688);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?
                f_10899_454743_454752(Microsoft.CodeAnalysis.CSharp.BoundDiscardExpression
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 454743, 454752);
                    return return_v;
                }


                int
                f_10899_454768_454803(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundDiscardExpression
                expression, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                resultType, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                lvalueType)
                {
                    this_param.SetResult((Microsoft.CodeAnalysis.CSharp.BoundExpression)expression, resultType, lvalueType);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 454768, 454803);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 454536, 454841);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 454536, 454841);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override BoundNode? VisitThrowExpression(BoundThrowExpression node)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 454853, 455060);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 454952, 454980);

                f_10899_454952_454979(this, f_10899_454963_454978(node));
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 454994, 455023);

                f_10899_454994_455022(this, node, default);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 455037, 455049);

                return null;
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 454853, 455060);

                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10899_454963_454978(Microsoft.CodeAnalysis.CSharp.BoundThrowExpression
                this_param)
                {
                    var return_v = this_param.Expression;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 454963, 454978);
                    return return_v;
                }


                int
                f_10899_454952_454979(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                expr)
                {
                    this_param.VisitThrow(expr);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 454952, 454979);
                    return 0;
                }


                int
                f_10899_454994_455022(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundThrowExpression
                expression, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                type)
                {
                    this_param.SetResultType((Microsoft.CodeAnalysis.CSharp.BoundExpression)expression, type);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 454994, 455022);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 454853, 455060);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 454853, 455060);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override BoundNode? VisitThrowStatement(BoundThrowStatement node)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 455072, 455237);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 455169, 455200);

                f_10899_455169_455199(this, f_10899_455180_455198(node));
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 455214, 455226);

                return null;
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 455072, 455237);

                Microsoft.CodeAnalysis.CSharp.BoundExpression?
                f_10899_455180_455198(Microsoft.CodeAnalysis.CSharp.BoundThrowStatement
                this_param)
                {
                    var return_v = this_param.ExpressionOpt;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 455180, 455198);
                    return return_v;
                }


                int
                f_10899_455169_455199(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression?
                expr)
                {
                    this_param.VisitThrow(expr);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 455169, 455199);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 455072, 455237);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 455072, 455237);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private void VisitThrow(BoundExpression? expr)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 455249, 455779);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 455320, 455737) || true) && (expr != null)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 455320, 455737);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 455370, 455410);

                    var
                    result = f_10899_455383_455409(this, expr)
                    ;

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 455578, 455722) || true) && (result.MayBeNull)
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 455578, 455722);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 455640, 455703);

                        f_10899_455640_455702(this, ErrorCode.WRN_ThrowPossibleNull, expr.Syntax);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 455578, 455722);
                    }
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 455320, 455737);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 455751, 455768);

                f_10899_455751_455767(this);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 455249, 455779);

                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                f_10899_455383_455409(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                node)
                {
                    var return_v = this_param.VisitRvalueWithState(node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 455383, 455409);
                    return return_v;
                }


                int
                f_10899_455640_455702(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.ErrorCode
                errorCode, Microsoft.CodeAnalysis.SyntaxNode
                syntaxNode, params object[]
                arguments)
                {
                    this_param.ReportDiagnostic(errorCode, syntaxNode, arguments);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 455640, 455702);
                    return 0;
                }


                int
                f_10899_455751_455767(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param)
                {
                    this_param.SetUnreachable();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 455751, 455767);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 455249, 455779);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 455249, 455779);
            }
        }

        public override BoundNode? VisitYieldReturnStatement(BoundYieldReturnStatement node)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 455791, 456466);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 455900, 455939);

                BoundExpression
                expr = f_10899_455923_455938(node)
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 455953, 456030) || true) && (expr == null)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 455953, 456030);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 456003, 456015);

                    return null;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 455953, 456030);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 456044, 456085);

                var
                method = (MethodSymbol)CurrentSymbol
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 456099, 456288);

                TypeWithAnnotations
                elementType = f_10899_456133_456287(compilation, RefKind.None, f_10899_456229_456246(method), errorLocation: null, diagnostics: null)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 456304, 456429);

                _ = f_10899_456308_456428(this, expr, elementType, useLegacyWarnings: false, trackMembers: false, AssignmentKind.Return);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 456443, 456455);

                return null;
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 455791, 456466);

                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10899_455923_455938(Microsoft.CodeAnalysis.CSharp.BoundYieldReturnStatement
                this_param)
                {
                    var return_v = this_param.Expression;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 455923, 455938);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                f_10899_456229_456246(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                this_param)
                {
                    var return_v = this_param.ReturnType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 456229, 456246);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                f_10899_456133_456287(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                compilation, Microsoft.CodeAnalysis.RefKind
                refKind, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                returnType, Microsoft.CodeAnalysis.Location
                errorLocation, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = InMethodBinder.GetIteratorElementTypeFromReturnType(compilation, refKind, returnType, errorLocation: errorLocation, diagnostics: diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 456133, 456287);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                f_10899_456308_456428(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                expr, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                targetTypeOpt, bool
                useLegacyWarnings, bool
                trackMembers, Microsoft.CodeAnalysis.CSharp.NullableWalker.AssignmentKind
                assignmentKind)
                {
                    var return_v = this_param.VisitOptionalImplicitConversion(expr, targetTypeOpt, useLegacyWarnings: useLegacyWarnings, trackMembers: trackMembers, assignmentKind);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 456308, 456428);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 455791, 456466);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 455791, 456466);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        protected override void VisitCatchBlock(BoundCatchBlock node, ref LocalState finallyState)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 456478, 457250);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 456593, 456623);

                f_10899_456593_456622(this, node);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 456637, 457029) || true) && (node.Locals.Length > 0)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 456637, 457029);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 456697, 456732);

                    LocalSymbol
                    local = f_10899_456717_456728(node)[0]
                    ;

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 456750, 457014) || true) && (f_10899_456754_456775(local) == LocalDeclarationKind.CatchVariable)
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 456750, 457014);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 456855, 456889);

                        int
                        slot = f_10899_456866_456888(this, local)
                        ;

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 456911, 456995) || true) && (slot > 0)
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 456911, 456995);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 456950, 456995);

                            this.State[slot] = NullableFlowState.NotNull;
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 456911, 456995);
                        }
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 456750, 457014);
                    }
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 456637, 457029);
                }

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 457045, 457178) || true) && (f_10899_457049_457072(node) != null)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 457045, 457178);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 457114, 457163);

                    f_10899_457114_457162(this, f_10899_457138_457161(node));
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 457045, 457178);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 457194, 457239);

                // LAFHIS
                //DynAbs.Tracing.TraceSender.TraceInvocationWrapper(() => base.VisitCatchBlock(node, ref finallyState), 10899, 457194, 457238);
                base.VisitCatchBlock(node, ref finallyState);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 457194, 457238);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 456478, 457250);

                int
                f_10899_456593_456622(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundCatchBlock
                node)
                {
                    this_param.TakeIncrementalSnapshot((Microsoft.CodeAnalysis.CSharp.BoundNode)node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 456593, 456622);
                    return 0;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.LocalSymbol>
                f_10899_456717_456728(Microsoft.CodeAnalysis.CSharp.BoundCatchBlock
                this_param)
                {
                    var return_v = this_param.Locals;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 456717, 456728);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.LocalDeclarationKind
                f_10899_456754_456775(Microsoft.CodeAnalysis.CSharp.Symbols.LocalSymbol
                this_param)
                {
                    var return_v = this_param.DeclarationKind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 456754, 456775);
                    return return_v;
                }


                int
                f_10899_456866_456888(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.LocalSymbol
                symbol)
                {
                    var return_v = this_param.GetOrCreateSlot((Microsoft.CodeAnalysis.CSharp.Symbol)symbol);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 456866, 456888);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression?
                f_10899_457049_457072(Microsoft.CodeAnalysis.CSharp.BoundCatchBlock
                this_param)
                {
                    var return_v = this_param.ExceptionSourceOpt;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 457049, 457072);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10899_457138_457161(Microsoft.CodeAnalysis.CSharp.BoundCatchBlock
                this_param)
                {
                    var return_v = this_param.ExceptionSourceOpt;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 457138, 457161);
                    return return_v;
                }


                int
                f_10899_457114_457162(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                node)
                {
                    this_param.VisitWithoutDiagnostics((Microsoft.CodeAnalysis.CSharp.BoundNode)node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 457114, 457162);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 456478, 457250);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 456478, 457250);
            }
        }

        public override BoundNode? VisitLockStatement(BoundLockStatement node)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 457262, 457520);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 457357, 457384);

                f_10899_457357_457383(this, f_10899_457369_457382(node));
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 457398, 457443);

                _ = f_10899_457402_457442(this, f_10899_457428_457441(node));
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 457457, 457483);

                f_10899_457457_457482(this, f_10899_457472_457481(node));
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 457497, 457509);

                return null;
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 457262, 457520);

                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10899_457369_457382(Microsoft.CodeAnalysis.CSharp.BoundLockStatement
                this_param)
                {
                    var return_v = this_param.Argument;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 457369, 457382);
                    return return_v;
                }


                int
                f_10899_457357_457383(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                node)
                {
                    this_param.VisitRvalue(node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 457357, 457383);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10899_457428_457441(Microsoft.CodeAnalysis.CSharp.BoundLockStatement
                this_param)
                {
                    var return_v = this_param.Argument;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 457428, 457441);
                    return return_v;
                }


                bool
                f_10899_457402_457442(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                receiverOpt)
                {
                    var return_v = this_param.CheckPossibleNullReceiver(receiverOpt);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 457402, 457442);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundStatement
                f_10899_457472_457481(Microsoft.CodeAnalysis.CSharp.BoundLockStatement
                this_param)
                {
                    var return_v = this_param.Body;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 457472, 457481);
                    return return_v;
                }


                int
                f_10899_457457_457482(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundStatement
                statement)
                {
                    this_param.VisitStatement(statement);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 457457, 457482);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 457262, 457520);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 457262, 457520);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override BoundNode? VisitAttribute(BoundAttribute node)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 457532, 458070);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 457619, 457867);

                f_10899_457619_457866(this, node, f_10899_457640_457665(node), ImmutableArray<RefKind>.Empty, f_10899_457698_457714(node), argsToParamsOpt: f_10899_457733_457769(node), defaultArguments: default, expanded: f_10899_457808_457832(node), invokedAsExtensionMethod: false);
                try
                {
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 457881, 457994);
                    foreach (var assignment in f_10899_457908_457927_I(f_10899_457908_457927(node)))
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 457881, 457994);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 457961, 457979);

                        f_10899_457961_457978(this, assignment);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 457881, 457994);
                    }
                }
                catch (System.Exception)
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoopByException(10899, 1, 114);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoop(10899, 1, 114);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 458010, 458033);

                f_10899_458010_458032(this, node);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 458047, 458059);

                return null;
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 457532, 458070);

                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                f_10899_457640_457665(Microsoft.CodeAnalysis.CSharp.BoundAttribute
                this_param)
                {
                    var return_v = this_param.ConstructorArguments;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 457640, 457665);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol?
                f_10899_457698_457714(Microsoft.CodeAnalysis.CSharp.BoundAttribute
                this_param)
                {
                    var return_v = this_param.Constructor;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 457698, 457714);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<int>
                f_10899_457733_457769(Microsoft.CodeAnalysis.CSharp.BoundAttribute
                this_param)
                {
                    var return_v = this_param.ConstructorArgumentsToParamsOpt;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 457733, 457769);
                    return return_v;
                }


                bool
                f_10899_457808_457832(Microsoft.CodeAnalysis.CSharp.BoundAttribute
                this_param)
                {
                    var return_v = this_param.ConstructorExpanded;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 457808, 457832);
                    return return_v;
                }


                (Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol? method, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.NullableWalker.VisitArgumentResult> results, bool returnNotNull)
                f_10899_457619_457866(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundAttribute
                node, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                arguments, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.RefKind>
                refKindsOpt, Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol?
                method, System.Collections.Immutable.ImmutableArray<int>
                argsToParamsOpt, Microsoft.CodeAnalysis.BitVector
                defaultArguments, bool
                expanded, bool
                invokedAsExtensionMethod)
                {
                    var return_v = this_param.VisitArguments((Microsoft.CodeAnalysis.CSharp.BoundExpression)node, arguments, refKindsOpt, method, argsToParamsOpt: argsToParamsOpt, defaultArguments: defaultArguments, expanded: expanded, invokedAsExtensionMethod: invokedAsExtensionMethod);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 457619, 457866);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                f_10899_457908_457927(Microsoft.CodeAnalysis.CSharp.BoundAttribute
                this_param)
                {
                    var return_v = this_param.NamedArguments;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 457908, 457927);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundNode?
                f_10899_457961_457978(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                node)
                {
                    var return_v = this_param.Visit((Microsoft.CodeAnalysis.CSharp.BoundNode)node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 457961, 457978);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                f_10899_457908_457927_I(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 457908, 457927);
                    return return_v;
                }


                int
                f_10899_458010_458032(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundAttribute
                node)
                {
                    this_param.SetNotNullResult((Microsoft.CodeAnalysis.CSharp.BoundExpression)node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 458010, 458032);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 457532, 458070);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 457532, 458070);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override BoundNode? VisitExpressionWithNullability(BoundExpressionWithNullability node)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 458082, 458428);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 458201, 458290);

                var
                typeWithAnnotations = TypeWithAnnotations.Create(f_10899_458254_458263(node), f_10899_458265_458288(node))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 458304, 458391);

                f_10899_458304_458390(this, f_10899_458314_458329(node), typeWithAnnotations.ToTypeWithState(), typeWithAnnotations);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 458405, 458417);

                return null;
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 458082, 458428);

                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?
                f_10899_458254_458263(Microsoft.CodeAnalysis.CSharp.BoundExpressionWithNullability
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 458254, 458263);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.NullableAnnotation
                f_10899_458265_458288(Microsoft.CodeAnalysis.CSharp.BoundExpressionWithNullability
                this_param)
                {
                    var return_v = this_param.NullableAnnotation;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 458265, 458288);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10899_458314_458329(Microsoft.CodeAnalysis.CSharp.BoundExpressionWithNullability
                this_param)
                {
                    var return_v = this_param.Expression;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 458314, 458329);
                    return return_v;
                }


                int
                f_10899_458304_458390(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                expression, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                resultType, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                lvalueType)
                {
                    this_param.SetResult(expression, resultType, lvalueType);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 458304, 458390);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 458082, 458428);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 458082, 458428);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override BoundNode? VisitDeconstructValuePlaceholder(BoundDeconstructValuePlaceholder node)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 458440, 458623);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 458563, 458586);

                f_10899_458563_458585(this, node);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 458600, 458612);

                return null;
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 458440, 458623);

                int
                f_10899_458563_458585(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundDeconstructValuePlaceholder
                node)
                {
                    this_param.SetNotNullResult((Microsoft.CodeAnalysis.CSharp.BoundExpression)node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 458563, 458585);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 458440, 458623);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 458440, 458623);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override BoundNode? VisitObjectOrCollectionValuePlaceholder(BoundObjectOrCollectionValuePlaceholder node)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 458635, 458832);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 458772, 458795);

                f_10899_458772_458794(this, node);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 458809, 458821);

                return null;
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 458635, 458832);

                int
                f_10899_458772_458794(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundObjectOrCollectionValuePlaceholder
                node)
                {
                    this_param.SetNotNullResult((Microsoft.CodeAnalysis.CSharp.BoundExpression)node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 458772, 458794);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 458635, 458832);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 458635, 458832);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        [MemberNotNull(nameof(_awaitablePlaceholdersOpt))]
        private void EnsureAwaitablePlaceholdersInitialized()
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 458844, 459145);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 458982, 459134);

                if (_awaitablePlaceholdersOpt is null)
                    DynAbs.Tracing.TraceSender.TraceEnterExpression(10899, 458982, 459134);

                _awaitablePlaceholdersOpt ??= f_10899_459012_459133();
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 458844, 459145);

                Microsoft.CodeAnalysis.PooledObjects.PooledDictionary<Microsoft.CodeAnalysis.CSharp.BoundAwaitableValuePlaceholder, (Microsoft.CodeAnalysis.CSharp.BoundExpression AwaitableExpression, Microsoft.CodeAnalysis.CSharp.NullableWalker.VisitResult Result)>
                f_10899_459012_459133()
                {
                    var return_v = PooledDictionary<BoundAwaitableValuePlaceholder, (BoundExpression AwaitableExpression, VisitResult Result)>.GetInstance();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 459012, 459133);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 458844, 459145);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 458844, 459145);
            }
        }

        public override BoundNode? VisitAwaitableValuePlaceholder(BoundAwaitableValuePlaceholder node)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 459157, 459648);
                (Microsoft.CodeAnalysis.CSharp.BoundExpression AwaitableExpression, Microsoft.CodeAnalysis.CSharp.NullableWalker.VisitResult Result) value = default((Microsoft.CodeAnalysis.CSharp.BoundExpression AwaitableExpression, Microsoft.CodeAnalysis.CSharp.NullableWalker.VisitResult Result));

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 459276, 459611) || true) && (_awaitablePlaceholdersOpt != null && (DynAbs.Tracing.TraceSender.Expression_True(10899, 459280, 459375) && f_10899_459317_459375(_awaitablePlaceholdersOpt, node, out value)))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 459276, 459611);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 459409, 459435);

                    var
                    result = value.Result
                    ;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 459453, 459507);

                    f_10899_459453_459506(this, node, result.RValueType, result.LValueType);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 459276, 459611);
                }

                else

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 459276, 459611);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 459573, 459596);

                    f_10899_459573_459595(this, node);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 459276, 459611);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 459625, 459637);

                return null;
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 459157, 459648);

                bool
                f_10899_459317_459375(Microsoft.CodeAnalysis.PooledObjects.PooledDictionary<Microsoft.CodeAnalysis.CSharp.BoundAwaitableValuePlaceholder, (Microsoft.CodeAnalysis.CSharp.BoundExpression AwaitableExpression, Microsoft.CodeAnalysis.CSharp.NullableWalker.VisitResult Result)>
                this_param, Microsoft.CodeAnalysis.CSharp.BoundAwaitableValuePlaceholder
                key, out (Microsoft.CodeAnalysis.CSharp.BoundExpression AwaitableExpression, Microsoft.CodeAnalysis.CSharp.NullableWalker.VisitResult Result)
                value)
                {
                    var return_v = this_param.TryGetValue(key, out value);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 459317, 459375);
                    return return_v;
                }


                int
                f_10899_459453_459506(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundAwaitableValuePlaceholder
                expression, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                resultType, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                lvalueType)
                {
                    this_param.SetResult((Microsoft.CodeAnalysis.CSharp.BoundExpression)expression, resultType, lvalueType);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 459453, 459506);
                    return 0;
                }


                int
                f_10899_459573_459595(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundAwaitableValuePlaceholder
                node)
                {
                    this_param.SetNotNullResult((Microsoft.CodeAnalysis.CSharp.BoundExpression)node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 459573, 459595);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 459157, 459648);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 459157, 459648);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override BoundNode? VisitAwaitableInfo(BoundAwaitableInfo node)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 459660, 459870);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 459755, 459796);

                f_10899_459755_459795(this, f_10899_459761_459794(node));
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 459810, 459833);

                f_10899_459810_459832(this, f_10899_459816_459831(node));
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 459847, 459859);

                return null;
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 459660, 459870);

                Microsoft.CodeAnalysis.CSharp.BoundAwaitableValuePlaceholder?
                f_10899_459761_459794(Microsoft.CodeAnalysis.CSharp.BoundAwaitableInfo
                this_param)
                {
                    var return_v = this_param.AwaitableInstancePlaceholder;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 459761, 459794);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundNode?
                f_10899_459755_459795(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundAwaitableValuePlaceholder?
                node)
                {
                    var return_v = this_param.Visit((Microsoft.CodeAnalysis.CSharp.BoundNode?)node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 459755, 459795);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression?
                f_10899_459816_459831(Microsoft.CodeAnalysis.CSharp.BoundAwaitableInfo
                this_param)
                {
                    var return_v = this_param.GetAwaiter;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 459816, 459831);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundNode?
                f_10899_459810_459832(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression?
                node)
                {
                    var return_v = this_param.Visit((Microsoft.CodeAnalysis.CSharp.BoundNode?)node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 459810, 459832);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 459660, 459870);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 459660, 459870);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override BoundNode? VisitFunctionPointerInvocation(BoundFunctionPointerInvocation node)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 459882, 460764);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 460001, 460035);

                _ = f_10899_460005_460034(this, f_10899_460011_460033(node));
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 460049, 460165);

                f_10899_460049_460164(f_10899_460062_460072() is TypeWithState { Type: FunctionPointerTypeSymbol { }, State: NullableFlowState.NotNull });
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 460179, 460518);

                _ = f_10899_460183_460517(this, node, f_10899_460239_460253(node), f_10899_460272_460296(node), f_10899_460315_460345(f_10899_460315_460335(node)), argsToParamsOpt: default, defaultArguments: default, expanded: false, invokedAsExtensionMethod: false);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 460534, 460623);

                var
                returnTypeWithAnnotations = f_10899_460566_460622(f_10899_460566_460596(f_10899_460566_460586(node)))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 460637, 460725);

                f_10899_460637_460724(this, node, returnTypeWithAnnotations.ToTypeWithState(), returnTypeWithAnnotations);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 460741, 460753);

                return null;
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 459882, 460764);

                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10899_460011_460033(Microsoft.CodeAnalysis.CSharp.BoundFunctionPointerInvocation
                this_param)
                {
                    var return_v = this_param.InvokedExpression;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 460011, 460033);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundNode?
                f_10899_460005_460034(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                node)
                {
                    var return_v = this_param.Visit((Microsoft.CodeAnalysis.CSharp.BoundNode)node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 460005, 460034);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                f_10899_460062_460072()
                {
                    var return_v = ResultType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 460062, 460072);
                    return return_v;
                }


                int
                f_10899_460049_460164(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 460049, 460164);
                    return 0;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                f_10899_460239_460253(Microsoft.CodeAnalysis.CSharp.BoundFunctionPointerInvocation
                this_param)
                {
                    var return_v = this_param.Arguments;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 460239, 460253);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.RefKind>
                f_10899_460272_460296(Microsoft.CodeAnalysis.CSharp.BoundFunctionPointerInvocation
                this_param)
                {
                    var return_v = this_param.ArgumentRefKindsOpt;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 460272, 460296);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.FunctionPointerTypeSymbol
                f_10899_460315_460335(Microsoft.CodeAnalysis.CSharp.BoundFunctionPointerInvocation
                this_param)
                {
                    var return_v = this_param.FunctionPointer;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 460315, 460335);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.FunctionPointerMethodSymbol
                f_10899_460315_460345(Microsoft.CodeAnalysis.CSharp.Symbols.FunctionPointerTypeSymbol
                this_param)
                {
                    var return_v = this_param.Signature;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 460315, 460345);
                    return return_v;
                }


                (Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol? method, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.NullableWalker.VisitArgumentResult> results, bool returnNotNull)
                f_10899_460183_460517(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundFunctionPointerInvocation
                node, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                arguments, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.RefKind>
                refKindsOpt, Microsoft.CodeAnalysis.CSharp.Symbols.FunctionPointerMethodSymbol
                method, System.Collections.Immutable.ImmutableArray<int>
                argsToParamsOpt, Microsoft.CodeAnalysis.BitVector
                defaultArguments, bool
                expanded, bool
                invokedAsExtensionMethod)
                {
                    var return_v = this_param.VisitArguments((Microsoft.CodeAnalysis.CSharp.BoundExpression)node, arguments, refKindsOpt, (Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol)method, argsToParamsOpt: argsToParamsOpt, defaultArguments: defaultArguments, expanded: expanded, invokedAsExtensionMethod: invokedAsExtensionMethod);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 460183, 460517);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.FunctionPointerTypeSymbol
                f_10899_460566_460586(Microsoft.CodeAnalysis.CSharp.BoundFunctionPointerInvocation
                this_param)
                {
                    var return_v = this_param.FunctionPointer;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 460566, 460586);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.FunctionPointerMethodSymbol
                f_10899_460566_460596(Microsoft.CodeAnalysis.CSharp.Symbols.FunctionPointerTypeSymbol
                this_param)
                {
                    var return_v = this_param.Signature;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 460566, 460596);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                f_10899_460566_460622(Microsoft.CodeAnalysis.CSharp.Symbols.FunctionPointerMethodSymbol
                this_param)
                {
                    var return_v = this_param.ReturnTypeWithAnnotations;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 460566, 460622);
                    return return_v;
                }


                int
                f_10899_460637_460724(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, Microsoft.CodeAnalysis.CSharp.BoundFunctionPointerInvocation
                expression, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState
                resultType, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                lvalueType)
                {
                    this_param.SetResult((Microsoft.CodeAnalysis.CSharp.BoundExpression)expression, resultType, lvalueType);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 460637, 460724);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 459882, 460764);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 459882, 460764);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        protected override string Dump(LocalState state)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 460776, 460890);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 460849, 460879);

                return state.Dump(_variables);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 460776, 460890);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 460776, 460890);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 460776, 460890);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        protected override bool Meet(ref LocalState self, ref LocalState other)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 460902, 461310);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 460998, 461049) || true) && (f_10899_461002_461017_M(!self.Reachable))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 460998, 461049);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 461036, 461049);

                    return false;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 460998, 461049);
                }

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 461065, 461185) || true) && (f_10899_461069_461085_M(!other.Reachable))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 461065, 461185);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 461119, 461140);

                    self = other.Clone();
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 461158, 461170);

                    return true;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 461065, 461185);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 461201, 461221);

                f_10899_461201_461220(this, ref self);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 461235, 461256);

                f_10899_461235_461255(this, ref other);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 461272, 461299);

                return self.Meet(in other);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 460902, 461310);

                bool
                f_10899_461002_461017_M(bool
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 461002, 461017);
                    return return_v;
                }


                bool
                f_10899_461069_461085_M(bool
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 461069, 461085);
                    return return_v;
                }


                int
                f_10899_461201_461220(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, ref Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState
                state)
                {
                    this_param.Normalize(ref state);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 461201, 461220);
                    return 0;
                }


                int
                f_10899_461235_461255(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, ref Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState
                state)
                {
                    this_param.Normalize(ref state);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 461235, 461255);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 460902, 461310);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 460902, 461310);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        protected override bool Join(ref LocalState self, ref LocalState other)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 461322, 461730);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 461418, 461470) || true) && (f_10899_461422_461438_M(!other.Reachable))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 461418, 461470);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 461457, 461470);

                    return false;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 461418, 461470);
                }

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 461486, 461605) || true) && (f_10899_461490_461505_M(!self.Reachable))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 461486, 461605);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 461539, 461560);

                    self = other.Clone();
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 461578, 461590);

                    return true;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 461486, 461605);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 461621, 461641);

                f_10899_461621_461640(this, ref self);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 461655, 461676);

                f_10899_461655_461675(this, ref other);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 461692, 461719);

                return self.Join(in other);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 461322, 461730);

                bool
                f_10899_461422_461438_M(bool
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 461422, 461438);
                    return return_v;
                }


                bool
                f_10899_461490_461505_M(bool
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 461490, 461505);
                    return return_v;
                }


                int
                f_10899_461621_461640(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, ref Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState
                state)
                {
                    this_param.Normalize(ref state);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 461621, 461640);
                    return 0;
                }


                int
                f_10899_461655_461675(Microsoft.CodeAnalysis.CSharp.NullableWalker
                this_param, ref Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState
                state)
                {
                    this_param.Normalize(ref state);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 461655, 461675);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 461322, 461730);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 461322, 461730);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }
        internal sealed class LocalStateSnapshot
        {
            internal readonly int Id;

            internal readonly LocalStateSnapshot? Container;

            internal readonly BitVector State;

            internal LocalStateSnapshot(int id, LocalStateSnapshot? container, BitVector state)
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterConstructor(10899, 461958, 462169);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 461829, 461831);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 461884, 461893);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 462074, 462082);

                    Id = id;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 462100, 462122);

                    Container = container;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 462140, 462154);

                    State = state;
                    DynAbs.Tracing.TraceSender.TraceExitConstructor(10899, 461958, 462169);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 461958, 462169);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 461958, 462169);
                }
            }

            static LocalStateSnapshot()
            {
                DynAbs.Tracing.TraceSender.TraceEnterStaticConstructor(10899, 461742, 462180);
                DynAbs.Tracing.TraceSender.TraceExitStaticConstructor(10899, 461742, 462180);

                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 461742, 462180);
            }

            int ___ignore_me___ = DynAbs.Tracing.TraceSender.TraceBeforeConstructor(10899, 461742, 462180);
        }

        [DebuggerDisplay("{GetDebuggerDisplay(), nq}")]
        internal struct LocalState : ILocalDataFlowState
        {
            private sealed class Boxed
            {
                internal LocalState Value;

                internal Boxed(LocalState value)
                {
                    try
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterConstructor(10899, 462935, 463041);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 463008, 463022);

                        Value = value;
                        DynAbs.Tracing.TraceSender.TraceExitConstructor(10899, 462935, 463041);
                    }
                    catch
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 462935, 463041);
                        throw;
                    }
                    finally
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 462935, 463041);
                    }
                }

                static Boxed()
                {
                    DynAbs.Tracing.TraceSender.TraceEnterStaticConstructor(10899, 462830, 463056);
                    DynAbs.Tracing.TraceSender.TraceExitStaticConstructor(10899, 462830, 463056);

                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 462830, 463056);
                }

                int ___ignore_me___ = DynAbs.Tracing.TraceSender.TraceBeforeConstructor(10899, 462830, 463056);
            }

            internal readonly int Id;

            private readonly Boxed? _container;

            private BitVector _state;

            private LocalState(int id, Boxed? container, BitVector state)
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterConstructor(10899, 463480, 463671);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 463574, 463582);

                    Id = id;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 463600, 463623);

                    _container = container;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 463641, 463656);

                    _state = state;
                    DynAbs.Tracing.TraceSender.TraceExitConstructor(10899, 463480, 463671);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 463480, 463671);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 463480, 463671);
                }
            }

            internal static LocalState Create(LocalStateSnapshot snapshot)
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterStaticMethod(10899, 463687, 463975);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 463782, 463872);

                    var
                    container = (DynAbs.Tracing.TraceSender.Conditional_F1(10899, 463798, 463824) || ((snapshot.Container is null && DynAbs.Tracing.TraceSender.Conditional_F2(10899, 463827, 463831)) || DynAbs.Tracing.TraceSender.Conditional_F3(10899, 463834, 463871))) ? null : f_10899_463834_463871(Create(snapshot.Container))
                    ;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 463890, 463960);

                    return f_10899_463897_463959(snapshot.Id, container, snapshot.State.Clone());
                    DynAbs.Tracing.TraceSender.TraceExitStaticMethod(10899, 463687, 463975);

                    Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState.Boxed
                    f_10899_463834_463871(Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState
                    value)
                    {
                        var return_v = new Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState.Boxed(value);
                        DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 463834, 463871);
                        return return_v;
                    }


                    Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState
                    f_10899_463897_463959(int
                    id, Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState.Boxed?
                    container, Microsoft.CodeAnalysis.BitVector
                    state)
                    {
                        var return_v = new Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState(id, container, state);
                        DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 463897, 463959);
                        return return_v;
                    }

                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 463687, 463975);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 463687, 463975);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }

            internal LocalStateSnapshot CreateSnapshot()
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 463991, 464257);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 464095, 464168);

                    var
                    temp = (DynAbs.Tracing.TraceSender.Conditional_F1(10899, 464106, 464124) || ((_container != null && DynAbs.Tracing.TraceSender.Conditional_F2(10899, 464127, 464160)) || DynAbs.Tracing.TraceSender.Conditional_F3(10899, 464163, 464167))) ? _container.Value.CreateSnapshot() : null
                    ;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 464186, 464242);

                    return f_10899_464193_464241(Id, temp, _state.Clone());
                    DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 463991, 464257);

                    Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalStateSnapshot
                    f_10899_464193_464241(int
                    id, Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalStateSnapshot?
                    container, Microsoft.CodeAnalysis.BitVector
                    state)
                    {
                        var return_v = new Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalStateSnapshot(id, container, state);
                        DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 464193, 464241);
                        return return_v;
                    }

                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 463991, 464257);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 463991, 464257);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }

            public bool Reachable
            {
                get
                {
                    try
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 464295, 464307);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 464298, 464307);
                        return _state[0]; DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 464295, 464307);
                    }
                    catch
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 464295, 464307);
                        throw;
                    }
                    finally
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 464295, 464307);
                    }
                    throw new System.Exception("Slicer error: unreachable code");
                }
            }

            public bool NormalizeToBottom
            {
                get
                {
                    try
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 464354, 464362);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 464357, 464362);
                        return false; DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 464354, 464362);
                    }
                    catch
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 464354, 464362);
                        throw;
                    }
                    finally
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 464354, 464362);
                    }
                    throw new System.Exception("Slicer error: unreachable code");
                }
            }

            public static LocalState ReachableState(Variables variables)
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterStaticMethod(10899, 464379, 464556);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 464472, 464541);

                    return CreateReachableOrUnreachableState(variables, reachable: true);
                    DynAbs.Tracing.TraceSender.TraceExitStaticMethod(10899, 464379, 464556);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 464379, 464556);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 464379, 464556);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }

            public static LocalState UnreachableState(Variables variables)
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterStaticMethod(10899, 464572, 464752);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 464667, 464737);

                    return CreateReachableOrUnreachableState(variables, reachable: false);
                    DynAbs.Tracing.TraceSender.TraceExitStaticMethod(10899, 464572, 464752);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 464572, 464752);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 464572, 464752);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }

            private static LocalState CreateReachableOrUnreachableState(Variables variables, bool reachable)
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterStaticMethod(10899, 464768, 465265);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 464897, 465069);

                    var
                    container = (DynAbs.Tracing.TraceSender.Conditional_F1(10899, 464913, 464940) || ((variables.Container is null && DynAbs.Tracing.TraceSender.Conditional_F2(10899, 464964, 464968)) || DynAbs.Tracing.TraceSender.Conditional_F3(10899, 464992, 465068))) ? null : f_10899_464992_465068(CreateReachableOrUnreachableState(variables.Container, reachable))
                    ;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 465087, 465147);

                    int
                    capacity = (DynAbs.Tracing.TraceSender.Conditional_F1(10899, 465102, 465111) || ((reachable && DynAbs.Tracing.TraceSender.Conditional_F2(10899, 465114, 465142)) || DynAbs.Tracing.TraceSender.Conditional_F3(10899, 465145, 465146))) ? f_10899_465114_465142(variables) : 1
                    ;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 465165, 465250);

                    return f_10899_465172_465249(variables.Id, container, CreateBitVector(capacity, reachable));
                    DynAbs.Tracing.TraceSender.TraceExitStaticMethod(10899, 464768, 465265);

                    Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState.Boxed
                    f_10899_464992_465068(Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState
                    value)
                    {
                        var return_v = new Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState.Boxed(value);
                        DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 464992, 465068);
                        return return_v;
                    }


                    int
                    f_10899_465114_465142(Microsoft.CodeAnalysis.CSharp.NullableWalker.Variables
                    this_param)
                    {
                        var return_v = this_param.NextAvailableIndex;
                        DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 465114, 465142);
                        return return_v;
                    }


                    Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState
                    f_10899_465172_465249(int
                    id, Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState.Boxed?
                    container, Microsoft.CodeAnalysis.BitVector
                    state)
                    {
                        var return_v = new Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState(id, container, state);
                        DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 465172, 465249);
                        return return_v;
                    }

                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 464768, 465265);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 464768, 465265);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }

            public LocalState CreateNestedMethodState(Variables variables)
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 465281, 465591);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 465376, 465420);

                    f_10899_465376_465419(Id == variables.Container!.Id);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 465438, 465576);

                    return f_10899_465445_465575(variables.Id, container: f_10899_465485_465500(this), CreateBitVector(capacity: f_10899_465528_465556(variables), reachable: true));
                    DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 465281, 465591);

                    int
                    f_10899_465376_465419(bool
                    condition)
                    {
                        Debug.Assert(condition);
                        DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 465376, 465419);
                        return 0;
                    }


                    Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState.Boxed
                    f_10899_465485_465500(Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState
                    value)
                    {
                        var return_v = new Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState.Boxed(value);
                        DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 465485, 465500);
                        return return_v;
                    }


                    int
                    f_10899_465528_465556(Microsoft.CodeAnalysis.CSharp.NullableWalker.Variables
                    this_param)
                    {
                        var return_v = this_param.NextAvailableIndex;
                        DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 465528, 465556);
                        return return_v;
                    }


                    Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState
                    f_10899_465445_465575(int
                    id, Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState.Boxed
                    container, Microsoft.CodeAnalysis.BitVector
                    state)
                    {
                        var return_v = new Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState(id, container: container, state);
                        DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 465445, 465575);
                        return return_v;
                    }

                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 465281, 465591);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 465281, 465591);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }

            private static BitVector CreateBitVector(int capacity, bool reachable)
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterStaticMethod(10899, 465607, 465916);

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 465710, 465762) || true) && (capacity < 1)
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 465710, 465762);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 465749, 465762);

                        capacity = 1;
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 465710, 465762);
                    }
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 465782, 465831);

                    BitVector
                    state = BitVector.Create(capacity * 2)
                    ;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 465849, 465870);

                    state[0] = reachable;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 465888, 465901);

                    return state;
                    DynAbs.Tracing.TraceSender.TraceExitStaticMethod(10899, 465607, 465916);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 465607, 465916);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 465607, 465916);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }

            private int Capacity
            {
                get
                {
                    try
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 465953, 465975);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 465956, 465975);
                        return _state.Capacity / 2; DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 465953, 465975);
                    }
                    catch
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 465953, 465975);
                        throw;
                    }
                    finally
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 465953, 465975);
                    }
                    throw new System.Exception("Slicer error: unreachable code");
                }
            }

            private void EnsureCapacity(int capacity)
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 465992, 466117);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 466066, 466102);

                    _state.EnsureCapacity(capacity * 2);
                    DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 465992, 466117);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 465992, 466117);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 465992, 466117);
                }
            }

            public bool HasVariable(int slot)
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 466133, 466421);

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 466199, 466286) || true) && (slot <= 0)
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 466199, 466286);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 466254, 466267);

                        return false;
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 466199, 466286);
                    }
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 466304, 466358);

                    (int id, int index) = f_10899_466326_466357(slot);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 466376, 466406);

                    return HasVariable(id, index);
                    DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 466133, 466421);

                    (int Id, int Index)
                    f_10899_466326_466357(int
                    slot)
                    {
                        var return_v = Variables.DeconstructSlot(slot);
                        DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 466326, 466357);
                        return return_v;
                    }

                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 466133, 466421);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 466133, 466421);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }

            private bool HasVariable(int id, int index)
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 466437, 466743);

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 466513, 466728) || true) && (Id > id)
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 466513, 466728);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 466566, 466611);

                        return _container!.Value.HasValue(id, index);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 466513, 466728);
                    }

                    else

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 466513, 466728);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 466693, 466709);

                        return Id == id;
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 466513, 466728);
                    }
                    DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 466437, 466743);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 466437, 466743);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 466437, 466743);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }

            public bool HasValue(int slot)
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 466759, 467041);

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 466822, 466909) || true) && (slot <= 0)
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 466822, 466909);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 466877, 466890);

                        return false;
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 466822, 466909);
                    }
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 466927, 466981);

                    (int id, int index) = f_10899_466949_466980(slot);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 466999, 467026);

                    return HasValue(id, index);
                    DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 466759, 467041);

                    (int Id, int Index)
                    f_10899_466949_466980(int
                    slot)
                    {
                        var return_v = Variables.DeconstructSlot(slot);
                        DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 466949, 466980);
                        return return_v;
                    }

                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 466759, 467041);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 466759, 467041);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }

            private bool HasValue(int id, int index)
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 467057, 467413);

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 467130, 467398) || true) && (Id != id)
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 467130, 467398);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 467184, 467206);

                        f_10899_467184_467205(Id > id);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 467228, 467273);

                        return _container!.Value.HasValue(id, index);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 467130, 467398);
                    }

                    else

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 467130, 467398);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 467355, 467379);

                        return index < Capacity;
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 467130, 467398);
                    }
                    DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 467057, 467413);

                    int
                    f_10899_467184_467205(bool
                    condition)
                    {
                        Debug.Assert(condition);
                        DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 467184, 467205);
                        return 0;
                    }

                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 467057, 467413);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 467057, 467413);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }

            public void Normalize(NullableWalker walker, Variables variables)
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 467429, 468094);

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 467527, 468079) || true) && (Id != variables.Id)
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 467527, 468079);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 467591, 467623);

                        f_10899_467591_467622(Id < variables.Id);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 467645, 467685);

                        Normalize(walker, variables.Container!);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 467527, 468079);
                    }

                    else

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 467527, 468079);

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 467798, 467904) || true) && (_container != null)
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 467798, 467904);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 467847, 467904);

                            _container.Value.Normalize(walker, variables.Container!);
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 467798, 467904);
                        }
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 467926, 467947);

                        int
                        start = Capacity
                        ;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 467969, 468014);

                        EnsureCapacity(f_10899_467984_468012(variables));
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 468036, 468060);

                        Populate(walker, start);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 467527, 468079);
                    }
                    DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 467429, 468094);

                    int
                    f_10899_467591_467622(bool
                    condition)
                    {
                        Debug.Assert(condition);
                        DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 467591, 467622);
                        return 0;
                    }


                    int
                    f_10899_467984_468012(Microsoft.CodeAnalysis.CSharp.NullableWalker.Variables
                    this_param)
                    {
                        var return_v = this_param.NextAvailableIndex;
                        DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 467984, 468012);
                        return return_v;
                    }

                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 467429, 468094);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 467429, 468094);
                }
            }

            public void PopulateAll(NullableWalker walker)
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 468110, 468358);

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 468216, 468298) || true) && (_container != null)
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 468216, 468298);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 468261, 468298);

                        _container.Value.PopulateAll(walker);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 468216, 468298);
                    }
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 468316, 468343);

                    Populate(walker, start: 1);
                    DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 468110, 468358);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 468110, 468358);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 468110, 468358);
                }
            }

            private void Populate(NullableWalker walker, int start)
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 468374, 468757);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 468462, 468486);

                    int
                    capacity = Capacity
                    ;
                    try
                    {
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 468513, 468526);
                        for (int
        index = start
        ; (DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 468504, 468742) || true) && (index < capacity)
        ; DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 468546, 468553)
        , index++, DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 468504, 468742))

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 468504, 468742);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 468595, 468641);

                            int
                            slot = f_10899_468606_468640(Id, index)
                            ;
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 468663, 468723);

                            SetValue(Id, index, f_10899_468683_468721(walker, ref this, slot));
                        }
                    }
                    catch (System.Exception)
                    {
                        DynAbs.Tracing.TraceSender.TraceExitLoopByException(10899, 1, 239);
                        throw;
                    }
                    finally
                    {
                        DynAbs.Tracing.TraceSender.TraceExitLoop(10899, 1, 239);
                    }
                    DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 468374, 468757);

                    int
                    f_10899_468606_468640(int
                    id, int
                    index)
                    {
                        var return_v = Variables.ConstructSlot(id, index);
                        DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 468606, 468640);
                        return return_v;
                    }


                    Microsoft.CodeAnalysis.CSharp.NullableFlowState
                    f_10899_468683_468721(Microsoft.CodeAnalysis.CSharp.NullableWalker
                    this_param, ref Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState
                    state, int
                    slot)
                    {
                        var return_v = this_param.GetDefaultState(ref state, slot);
                        DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 468683, 468721);
                        return return_v;
                    }

                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 468374, 468757);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 468374, 468757);
                }
            }

            public NullableFlowState this[int slot]
            {

                get
                {
                    try
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 468845, 469011);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 468889, 468943);

                        (int id, int index) = f_10899_468911_468942(slot);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 468965, 468992);

                        return GetValue(id, index);
                        DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 468845, 469011);

                        (int Id, int Index)
                        f_10899_468911_468942(int
                        slot)
                        {
                            var return_v = Variables.DeconstructSlot(slot);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 468911, 468942);
                            return return_v;
                        }

                    }
                    catch
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 468845, 469011);
                        throw;
                    }
                    finally
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 468845, 469011);
                    }
                    throw new System.Exception("Slicer error: unreachable code");
                }

                set
                {
                    try
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 469029, 469195);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 469073, 469127);

                        (int id, int index) = f_10899_469095_469126(slot);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 469149, 469176);

                        SetValue(id, index, value);
                        DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 469029, 469195);

                        (int Id, int Index)
                        f_10899_469095_469126(int
                        slot)
                        {
                            var return_v = Variables.DeconstructSlot(slot);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 469095, 469126);
                            return return_v;
                        }

                    }
                    catch
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 469029, 469195);
                        throw;
                    }
                    finally
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 469029, 469195);
                    }
                }
            }

            private NullableFlowState GetValue(int id, int index)
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 469226, 470243);

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 469312, 470228) || true) && (Id != id)
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 469312, 470228);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 469366, 469388);

                        f_10899_469366_469387(Id > id);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 469410, 469455);

                        return _container!.Value.GetValue(id, index);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 469312, 470228);
                    }

                    else

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 469312, 470228);

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 469537, 470154) || true) && (index < Capacity && (DynAbs.Tracing.TraceSender.Expression_True(10899, 469541, 469575) && this.Reachable))
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 469537, 470154);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 469625, 469636);

                            index *= 2;
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 469662, 470091);

                            var
                            result = (_state[index + 1], _state[index]) switch
                            {
                                (false, false) when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 469773, 469816) && DynAbs.Tracing.TraceSender.Expression_True(10899, 469773, 469816))
=> NullableFlowState.NotNull,
                                (false, true) when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 469847, 469891) && DynAbs.Tracing.TraceSender.Expression_True(10899, 469847, 469891))
=> NullableFlowState.MaybeNull,
                                (true, false) when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 469922, 469986) && DynAbs.Tracing.TraceSender.Expression_True(10899, 469922, 469986))
=> throw f_10899_469945_469986(index),
                                (true, true) when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 470017, 470063) && DynAbs.Tracing.TraceSender.Expression_True(10899, 470017, 470063))
=> NullableFlowState.MaybeDefault
                            }
                            ;
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 470117, 470131);

                            return result;
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 469537, 470154);
                        }
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 470176, 470209);

                        return NullableFlowState.NotNull;
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 469312, 470228);
                    }
                    DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 469226, 470243);

                    int
                    f_10899_469366_469387(bool
                    condition)
                    {
                        Debug.Assert(condition);
                        DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 469366, 469387);
                        return 0;
                    }


                    System.Exception
                    f_10899_469945_469986(int
                    o)
                    {
                        var return_v = ExceptionUtilities.UnexpectedValue((object)o);
                        DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 469945, 469986);
                        return return_v;
                    }

                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 469226, 470243);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 469226, 470243);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }

            private void SetValue(int id, int index, NullableFlowState value)
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 470259, 470950);

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 470357, 470935) || true) && (Id != id)
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 470357, 470935);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 470411, 470433);

                        f_10899_470411_470432(Id > id);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 470455, 470500);

                        _container!.Value.SetValue(id, index, value);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 470357, 470935);
                    }

                    else

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 470357, 470935);

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 470696, 470724) || true) && (f_10899_470700_470715_M(!this.Reachable))
                        )
                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 470696, 470724);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 470717, 470724);

                            return;
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 470696, 470724);
                        }
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 470746, 470757);

                        index *= 2;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 470779, 470832);

                        _state[index] = (value != NullableFlowState.NotNull);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 470854, 470916);

                        _state[index + 1] = (value == NullableFlowState.MaybeDefault);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 470357, 470935);
                    }
                    DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 470259, 470950);

                    int
                    f_10899_470411_470432(bool
                    condition)
                    {
                        Debug.Assert(condition);
                        DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 470411, 470432);
                        return 0;
                    }


                    bool
                    f_10899_470700_470715_M(bool
                    i)
                    {
                        var return_v = i;
                        DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 470700, 470715);
                        return return_v;
                    }

                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 470259, 470950);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 470259, 470950);
                }
            }

            internal void ForEach<TArg>(Action<int, TArg> action, TArg arg)
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 470966, 471359);

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 471089, 471172) || true) && (_container != null)
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 471089, 471172);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 471134, 471172);

                        _container.Value.ForEach(action, arg);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 471089, 471172);
                    }
                    try
                    {
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 471199, 471208);
                        for (int
        index = 1
        ; (DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 471190, 471344) || true) && (index < Capacity)
        ; DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 471228, 471235)
        , index++, DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 471190, 471344))

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 471190, 471344);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 471277, 471325);

                            f_10899_471277_471324<TArg>(action, f_10899_471284_471318<TArg>(Id, index), arg);
                        }
                    }
                    catch (System.Exception)
                    {
                        DynAbs.Tracing.TraceSender.TraceExitLoopByException(10899, 1, 155);
                        throw;
                    }
                    finally
                    {
                        DynAbs.Tracing.TraceSender.TraceExitLoop(10899, 1, 155);
                    }
                    DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 470966, 471359);

                    int
                    f_10899_471284_471318<TArg>(int
                    id, int
                    index)
                    {
                        var return_v = Variables.ConstructSlot(id, index);
                        DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 471284, 471318);
                        return return_v;
                    }


                    int
                    f_10899_471277_471324<TArg>(System.Action<int, TArg>
                    this_param, int
                    arg1, TArg?
                    arg2)
                    {
                        this_param.Invoke(arg1, arg2);
                        DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 471277, 471324);
                        return 0;
                    }

                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 470966, 471359);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 470966, 471359);
                }
            }

            internal LocalState GetStateForVariables(int id)
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 471375, 471651);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 471456, 471473);

                    var
                    state = this
                    ;
                    try
                    {
                        while ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 471491, 471605) || true) && (state.Id != id)
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 471491, 471605);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 471554, 471586);

                            state = state._container!.Value;
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 471491, 471605);
                        }
                    }
                    catch (System.Exception)
                    {
                        DynAbs.Tracing.TraceSender.TraceExitLoopByException(10899, 471491, 471605);
                        throw;
                    }
                    finally
                    {
                        DynAbs.Tracing.TraceSender.TraceExitLoop(10899, 471491, 471605);
                    }
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 471623, 471636);

                    return state;
                    DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 471375, 471651);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 471375, 471651);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 471375, 471651);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }

            public LocalState Clone()
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 471825, 472049);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 471883, 471963);

                    var
                    container = (DynAbs.Tracing.TraceSender.Conditional_F1(10899, 471899, 471917) || ((_container is null && DynAbs.Tracing.TraceSender.Conditional_F2(10899, 471920, 471924)) || DynAbs.Tracing.TraceSender.Conditional_F3(10899, 471927, 471962))) ? null : f_10899_471927_471962(_container.Value.Clone())
                    ;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 471981, 472034);

                    return f_10899_471988_472033(Id, container, _state.Clone());
                    DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 471825, 472049);

                    Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState.Boxed
                    f_10899_471927_471962(Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState
                    value)
                    {
                        var return_v = new Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState.Boxed(value);
                        DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 471927, 471962);
                        return return_v;
                    }


                    Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState
                    f_10899_471988_472033(int
                    id, Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState.Boxed?
                    container, Microsoft.CodeAnalysis.BitVector
                    state)
                    {
                        var return_v = new Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState(id, container, state);
                        DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 471988, 472033);
                        return return_v;
                    }

                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 471825, 472049);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 471825, 472049);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }

            public bool Join(in LocalState other)
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 472065, 472546);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 472135, 472164);

                    f_10899_472135_472163(Id == other.Id);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 472182, 472202);

                    bool
                    result = false
                    ;

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 472220, 472369) || true) && (_container is { } && (DynAbs.Tracing.TraceSender.Expression_True(10899, 472224, 472294) && _container.Value.Join(in other._container!.Value)))
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 472220, 472369);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 472336, 472350);

                        result = true;
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 472220, 472369);
                    }

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 472387, 472499) || true) && (_state.UnionWith(in other._state))
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 472387, 472499);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 472466, 472480);

                        result = true;
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 472387, 472499);
                    }
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 472517, 472531);

                    return result;
                    DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 472065, 472546);

                    int
                    f_10899_472135_472163(bool
                    condition)
                    {
                        Debug.Assert(condition);
                        DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 472135, 472163);
                        return 0;
                    }

                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 472065, 472546);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 472065, 472546);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }

            public bool Meet(in LocalState other)
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 472562, 473047);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 472632, 472661);

                    f_10899_472632_472660(Id == other.Id);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 472679, 472699);

                    bool
                    result = false
                    ;

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 472717, 472866) || true) && (_container is { } && (DynAbs.Tracing.TraceSender.Expression_True(10899, 472721, 472791) && _container.Value.Meet(in other._container!.Value)))
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 472717, 472866);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 472833, 472847);

                        result = true;
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 472717, 472866);
                    }

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 472884, 473000) || true) && (_state.IntersectWith(in other._state))
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 472884, 473000);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 472967, 472981);

                        result = true;
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 472884, 473000);
                    }
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 473018, 473032);

                    return result;
                    DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 472562, 473047);

                    int
                    f_10899_472632_472660(bool
                    condition)
                    {
                        Debug.Assert(condition);
                        DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 472632, 472660);
                        return 0;
                    }

                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 472562, 473047);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 472562, 473047);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }

            internal string GetDebuggerDisplay()
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 473063, 473514);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 473132, 473186);

                    var
                    pooledBuilder = f_10899_473152_473185()
                    ;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 473204, 473240);

                    var
                    builder = pooledBuilder.Builder
                    ;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 473258, 473278);

                    f_10899_473258_473277(builder, " ");
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 473296, 473326);

                    int
                    n = f_10899_473304_473325(Capacity, 8)
                    ;
                    try
                    {
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 473353, 473362);
                        for (int
        i = n - 1
        ; (DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 473344, 473440) || true) && (i >= 0)
        ; DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 473372, 473375)
        , i--, DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 473344, 473440))

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 473344, 473440);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 473398, 473440);

                            f_10899_473398_473439(builder, (DynAbs.Tracing.TraceSender.Conditional_F1(10899, 473413, 473426) || ((_state[i * 2] && DynAbs.Tracing.TraceSender.Conditional_F2(10899, 473429, 473432)) || DynAbs.Tracing.TraceSender.Conditional_F3(10899, 473435, 473438))) ? '?' : '!');
                        }
                    }
                    catch (System.Exception)
                    {
                        DynAbs.Tracing.TraceSender.TraceExitLoopByException(10899, 1, 97);
                        throw;
                    }
                    finally
                    {
                        DynAbs.Tracing.TraceSender.TraceExitLoop(10899, 1, 97);
                    }
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 473460, 473499);

                    return f_10899_473467_473498(pooledBuilder);
                    DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 473063, 473514);

                    Microsoft.CodeAnalysis.PooledObjects.PooledStringBuilder
                    f_10899_473152_473185()
                    {
                        var return_v = PooledStringBuilder.GetInstance();
                        DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 473152, 473185);
                        return return_v;
                    }


                    System.Text.StringBuilder
                    f_10899_473258_473277(System.Text.StringBuilder
                    this_param, string
                    value)
                    {
                        var return_v = this_param.Append(value);
                        DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 473258, 473277);
                        return return_v;
                    }


                    int
                    f_10899_473304_473325(int
                    val1, int
                    val2)
                    {
                        var return_v = Math.Min(val1, val2);
                        DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 473304, 473325);
                        return return_v;
                    }


                    System.Text.StringBuilder
                    f_10899_473398_473439(System.Text.StringBuilder
                    this_param, char
                    value)
                    {
                        var return_v = this_param.Append(value);
                        DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 473398, 473439);
                        return return_v;
                    }


                    string
                    f_10899_473467_473498(Microsoft.CodeAnalysis.PooledObjects.PooledStringBuilder
                    this_param)
                    {
                        var return_v = this_param.ToStringAndFree();
                        DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 473467, 473498);
                        return return_v;
                    }

                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 473063, 473514);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 473063, 473514);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }

            internal string Dump(Variables variables)
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 473530, 473926);

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 473604, 473667) || true) && (f_10899_473608_473623_M(!this.Reachable))
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 473604, 473667);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 473646, 473667);

                        return "unreachable";
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 473604, 473667);
                    }

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 473687, 473749) || true) && (Id != variables.Id)
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 473687, 473749);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 473732, 473749);

                        return "invalid";
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 473687, 473749);
                    }
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 473769, 473817);

                    var
                    builder = f_10899_473783_473816()
                    ;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 473835, 473860);

                    Dump(builder, variables);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 473878, 473911);

                    return f_10899_473885_473910(builder);
                    DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 473530, 473926);

                    bool
                    f_10899_473608_473623_M(bool
                    i)
                    {
                        var return_v = i;
                        DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 473608, 473623);
                        return return_v;
                    }


                    Microsoft.CodeAnalysis.PooledObjects.PooledStringBuilder
                    f_10899_473783_473816()
                    {
                        var return_v = PooledStringBuilder.GetInstance();
                        DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 473783, 473816);
                        return return_v;
                    }


                    string
                    f_10899_473885_473910(Microsoft.CodeAnalysis.PooledObjects.PooledStringBuilder
                    this_param)
                    {
                        var return_v = this_param.ToStringAndFree();
                        DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 473885, 473910);
                        return return_v;
                    }

                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 473530, 473926);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 473530, 473926);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }

            private void Dump(StringBuilder builder, Variables variables)
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 473942, 475205);

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 474063, 474161) || true) && (_container != null)
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 474063, 474161);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 474108, 474161);

                        _container.Value.Dump(builder, variables.Container!);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 474063, 474161);
                    }
                    try
                    {
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 474190, 474199);

                        for (int
        index = 1
        ; (DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 474181, 474792) || true) && (index < Capacity)
        ; DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 474219, 474226)
        , index++, DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 474181, 474792))

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 474181, 474792);

                            if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 474268, 474773) || true) && (getName(f_10899_474280_474314(Id, index)) is string name)
                            )

                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10899, 474268, 474773);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 474380, 474401);

                                f_10899_474380_474400(builder, name);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 474427, 474697);

                                var
                                annotation = GetValue(Id, index) switch
                                {
                                    NullableFlowState.MaybeNull when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 474527, 474561) && DynAbs.Tracing.TraceSender.Expression_True(10899, 474527, 474561))
=> "?",
                                    NullableFlowState.MaybeDefault when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 474592, 474630) && DynAbs.Tracing.TraceSender.Expression_True(10899, 474592, 474630))
=> "??",
                                    _ when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 474661, 474669) && DynAbs.Tracing.TraceSender.Expression_True(10899, 474661, 474669))
=> "!"
                                }
                                ;
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 474723, 474750);

                                f_10899_474723_474749(builder, annotation);
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10899, 474268, 474773);
                            }
                        }
                    }
                    catch (System.Exception)
                    {
                        DynAbs.Tracing.TraceSender.TraceExitLoopByException(10899, 1, 612);
                        throw;
                    }
                    finally
                    {
                        DynAbs.Tracing.TraceSender.TraceExitLoop(10899, 1, 612);
                    }
                    string? getName(int slot)
                    {
                        try
                        {
                            DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 474812, 475190);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 474878, 474918);

                            VariableIdentifier
                            id = f_10899_474902_474917(variables, slot)
                            ;
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 474940, 474966);

                            var
                            name = f_10899_474951_474965(id.Symbol)
                            ;
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 474988, 475027);

                            int
                            containingSlot = id.ContainingSlot
                            ;
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 475049, 475171);

                            return (DynAbs.Tracing.TraceSender.Conditional_F1(10899, 475056, 475074) || ((containingSlot > 0 && DynAbs.Tracing.TraceSender.Conditional_F2(10899, 475102, 475138)) || DynAbs.Tracing.TraceSender.Conditional_F3(10899, 475166, 475170))) ? getName(containingSlot) + "." + name : name;
                            DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 474812, 475190);

                            Microsoft.CodeAnalysis.CSharp.LocalDataFlowPass<Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState, Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalFunctionState>.VariableIdentifier
                            f_10899_474902_474917(Microsoft.CodeAnalysis.CSharp.NullableWalker.Variables
                            this_param, int
                            i0)
                            {
                                var return_v = this_param[i0];
                                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 474902, 474917);
                                return return_v;
                            }


                            string
                            f_10899_474951_474965(Microsoft.CodeAnalysis.CSharp.Symbol
                            this_param)
                            {
                                var return_v = this_param.Name;
                                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 474951, 474965);
                                return return_v;
                            }

                        }
                        catch
                        {
                            DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 474812, 475190);
                            throw;
                        }
                        finally
                        {
                            DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 474812, 475190);
                        }
                        throw new System.Exception("Slicer error: unreachable code");
                    }
                    DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 473942, 475205);

                    int
                    f_10899_474280_474314(int
                    id, int
                    index)
                    {
                        var return_v = Variables.ConstructSlot(id, index);
                        DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 474280, 474314);
                        return return_v;
                    }


                    System.Text.StringBuilder
                    f_10899_474380_474400(System.Text.StringBuilder
                    this_param, string
                    value)
                    {
                        var return_v = this_param.Append(value);
                        DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 474380, 474400);
                        return return_v;
                    }


                    System.Text.StringBuilder
                    f_10899_474723_474749(System.Text.StringBuilder
                    this_param, string
                    value)
                    {
                        var return_v = this_param.Append(value);
                        DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 474723, 474749);
                        return return_v;
                    }

                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 473942, 475205);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 473942, 475205);
                }
            }
            static LocalState()
            {
                DynAbs.Tracing.TraceSender.TraceEnterStaticConstructor(10899, 462700, 475216);
                DynAbs.Tracing.TraceSender.TraceExitStaticConstructor(10899, 462700, 475216);

                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 462700, 475216);
            }
        }
        internal sealed class LocalFunctionState : AbstractLocalFunctionState
        {
            public LocalState StartingState;

            public LocalFunctionState(LocalState unreachableState)
            : base(f_10899_475639_475663_C(unreachableState.Clone()), unreachableState.Clone())
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterConstructor(10899, 475560, 475771);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 475723, 475756);

                    StartingState = unreachableState;
                    DynAbs.Tracing.TraceSender.TraceExitConstructor(10899, 475560, 475771);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 475560, 475771);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 475560, 475771);
                }
            }

            static LocalFunctionState()
            {
                DynAbs.Tracing.TraceSender.TraceEnterStaticConstructor(10899, 475228, 475782);
                DynAbs.Tracing.TraceSender.TraceExitStaticConstructor(10899, 475228, 475782);

                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 475228, 475782);
            }

            int ___ignore_me___ = DynAbs.Tracing.TraceSender.TraceBeforeConstructor(10899, 475228, 475782);

            static Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState
            f_10899_475639_475663_C(Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState
            i)
            {
                var return_v = i;
                DynAbs.Tracing.TraceSender.TraceBaseCall(10899, 475560, 475771);
                return return_v;
            }

        }

        protected override LocalFunctionState CreateLocalFunctionState(LocalFunctionSymbol symbol)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 475794, 476258);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 475932, 475995);

                var
                containingMethod = f_10899_475955_475978(symbol) as MethodSymbol
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 476009, 476163);

                var
                variables = ((DynAbs.Tracing.TraceSender.Conditional_F1(10899, 476026, 476050) || ((containingMethod != null && DynAbs.Tracing.TraceSender.Conditional_F2(10899, 476053, 476108)) || DynAbs.Tracing.TraceSender.Conditional_F3(10899, 476111, 476115))) ? f_10899_476053_476108(_variables, containingMethod) : null) ?? (DynAbs.Tracing.TraceSender.Expression_Null<Microsoft.CodeAnalysis.CSharp.NullableWalker.Variables?>(10899, 476025, 476162) ?? f_10899_476137_476162(_variables))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 476177, 476247);

                return f_10899_476184_476246(LocalState.UnreachableState(variables));
                DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 475794, 476258);

                Microsoft.CodeAnalysis.CSharp.Symbol
                f_10899_475955_475978(Microsoft.CodeAnalysis.CSharp.Symbols.LocalFunctionSymbol
                this_param)
                {
                    var return_v = this_param.ContainingSymbol;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 475955, 475978);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.NullableWalker.Variables?
                f_10899_476053_476108(Microsoft.CodeAnalysis.CSharp.NullableWalker.Variables
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                method)
                {
                    var return_v = this_param.GetVariablesForMethodScope(method);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 476053, 476108);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.NullableWalker.Variables
                f_10899_476137_476162(Microsoft.CodeAnalysis.CSharp.NullableWalker.Variables
                this_param)
                {
                    var return_v = this_param.GetRootScope();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 476137, 476162);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalFunctionState
                f_10899_476184_476246(Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState
                unreachableState)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalFunctionState(unreachableState);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 476184, 476246);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 475794, 476258);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 475794, 476258);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }
        private sealed class NullabilityInfoTypeComparer : IEqualityComparer<(NullabilityInfo info, TypeSymbol? type)>
        {
            public static readonly NullabilityInfoTypeComparer Instance;

            public bool Equals((NullabilityInfo info, TypeSymbol? type) x, (NullabilityInfo info, TypeSymbol? type) y)
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 476517, 476800);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 476656, 476785);

                    return x.info.Equals(y.info) && (DynAbs.Tracing.TraceSender.Expression_True(10899, 476663, 476784) && f_10899_476712_476784(Symbols.SymbolEqualityComparer.ConsiderEverything, x.type, y.type));
                    DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 476517, 476800);

                    bool
                    f_10899_476712_476784(System.Collections.Generic.EqualityComparer<Microsoft.CodeAnalysis.CSharp.Symbol>
                    this_param, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?
                    x, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?
                    y)
                    {
                        var return_v = this_param.Equals((Microsoft.CodeAnalysis.CSharp.Symbol?)x, (Microsoft.CodeAnalysis.CSharp.Symbol?)y);
                        DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 476712, 476784);
                        return return_v;
                    }

                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 476517, 476800);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 476517, 476800);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }

            public int GetHashCode((NullabilityInfo info, TypeSymbol? type) obj)
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 476816, 476957);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 476917, 476942);

                    return obj.GetHashCode();
                    DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 476816, 476957);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 476816, 476957);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 476816, 476957);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }

            public NullabilityInfoTypeComparer()
            {
                DynAbs.Tracing.TraceSender.TraceEnterConstructor(10899, 476270, 476968);
                DynAbs.Tracing.TraceSender.TraceExitConstructor(10899, 476270, 476968);

                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 476270, 476968);
            }


            static NullabilityInfoTypeComparer()
            {
                DynAbs.Tracing.TraceSender.TraceEnterStaticConstructor(10899, 476270, 476968);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 476456, 476500);
                Instance = f_10899_476467_476500(); DynAbs.Tracing.TraceSender.TraceExitStaticConstructor(10899, 476270, 476968);

                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 476270, 476968);
            }

            int ___ignore_me___ = DynAbs.Tracing.TraceSender.TraceBeforeConstructor(10899, 476270, 476968);

            static Microsoft.CodeAnalysis.CSharp.NullableWalker.NullabilityInfoTypeComparer
            f_10899_476467_476500()
            {
                var return_v = new Microsoft.CodeAnalysis.CSharp.NullableWalker.NullabilityInfoTypeComparer();
                DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 476467, 476500);
                return return_v;
            }

        }
        private sealed class ExpressionAndSymbolEqualityComparer : IEqualityComparer<(BoundNode? expr, Symbol symbol)>
        {
            internal static readonly ExpressionAndSymbolEqualityComparer Instance;

            private ExpressionAndSymbolEqualityComparer()
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterConstructor(10899, 477245, 477294);
                    DynAbs.Tracing.TraceSender.TraceExitConstructor(10899, 477245, 477294);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 477245, 477294);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 477245, 477294);
                }
            }

            public bool Equals((BoundNode? expr, Symbol symbol) x, (BoundNode? expr, Symbol symbol) y)
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 477310, 477891);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 477433, 477472);

                    f_10899_477433_477471(x.symbol is object);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 477490, 477529);

                    f_10899_477490_477528(y.symbol is object);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 477820, 477876);

                    return x.expr == y.expr && (DynAbs.Tracing.TraceSender.Expression_True(10899, 477827, 477875) && (object)x.symbol == y.symbol);
                    DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 477310, 477891);

                    int
                    f_10899_477433_477471(bool
                    b)
                    {
                        RoslynDebug.Assert(b);
                        DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 477433, 477471);
                        return 0;
                    }


                    int
                    f_10899_477490_477528(bool
                    b)
                    {
                        RoslynDebug.Assert(b);
                        DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 477490, 477528);
                        return 0;
                    }

                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 477310, 477891);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 477310, 477891);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }

            public int GetHashCode((BoundNode? expr, Symbol symbol) obj)
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(10899, 477907, 478130);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 478000, 478041);

                    f_10899_478000_478040(obj.symbol is object);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 478059, 478115);

                    return f_10899_478066_478114(obj.expr, f_10899_478089_478113(obj.symbol));
                    DynAbs.Tracing.TraceSender.TraceExitMethod(10899, 477907, 478130);

                    int
                    f_10899_478000_478040(bool
                    b)
                    {
                        RoslynDebug.Assert(b);
                        DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 478000, 478040);
                        return 0;
                    }


                    int
                    f_10899_478089_478113(Microsoft.CodeAnalysis.CSharp.Symbol
                    this_param)
                    {
                        var return_v = this_param.GetHashCode();
                        DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 478089, 478113);
                        return return_v;
                    }


                    int
                    f_10899_478066_478114(Microsoft.CodeAnalysis.CSharp.BoundNode?
                    newKeyPart, int
                    currentKey)
                    {
                        var return_v = Hash.Combine(newKeyPart, currentKey);
                        DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 478066, 478114);
                        return return_v;
                    }

                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10899, 477907, 478130);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 477907, 478130);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }

            static ExpressionAndSymbolEqualityComparer()
            {
                DynAbs.Tracing.TraceSender.TraceEnterStaticConstructor(10899, 476980, 478141);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 477176, 477228);
                Instance = f_10899_477187_477228(); DynAbs.Tracing.TraceSender.TraceExitStaticConstructor(10899, 476980, 478141);

                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 476980, 478141);
            }

            int ___ignore_me___ = DynAbs.Tracing.TraceSender.TraceBeforeConstructor(10899, 476980, 478141);

            static Microsoft.CodeAnalysis.CSharp.NullableWalker.ExpressionAndSymbolEqualityComparer
            f_10899_477187_477228()
            {
                var return_v = new Microsoft.CodeAnalysis.CSharp.NullableWalker.ExpressionAndSymbolEqualityComparer();
                DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 477187, 477228);
                return return_v;
            }

        }

        static NullableWalker()
        {
            DynAbs.Tracing.TraceSender.TraceEnterStaticConstructor(10899, 728, 478148);
            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 7247, 7344);
            _invalidType = TypeWithState.Create(ErrorTypeSymbol.UnknownResultType, NullableFlowState.NotNull); DynAbs.Tracing.TraceSender.TraceSimpleStatement(10899, 9617, 9860);
            s_skippedExpressions = f_10899_9640_9860(BoundKind.ArrayInitialization, BoundKind.ObjectInitializerExpression, BoundKind.CollectionInitializerExpression, BoundKind.DynamicCollectionElementInitializer); DynAbs.Tracing.TraceSender.TraceExitStaticConstructor(10899, 728, 478148);

            DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10899, 728, 478148);
        }

        int ___ignore_me___ = DynAbs.Tracing.TraceSender.TraceBeforeConstructor(10899, 728, 478148);

        static System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundKind>
        f_10899_9640_9860(Microsoft.CodeAnalysis.CSharp.BoundKind
        item1, Microsoft.CodeAnalysis.CSharp.BoundKind
        item2, Microsoft.CodeAnalysis.CSharp.BoundKind
        item3, Microsoft.CodeAnalysis.CSharp.BoundKind
        item4)
        {
            var return_v = ImmutableArray.Create(item1, item2, item3, item4);
            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 9640, 9860);
            return return_v;
        }


        Microsoft.CodeAnalysis.CSharp.BoundKind
        f_10899_16720_16739(Microsoft.CodeAnalysis.CSharp.BoundNode
        this_param)
        {
            var return_v = this_param.Kind;
            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10899, 16720, 16739);
            return return_v;
        }


        static Microsoft.CodeAnalysis.CSharp.EmptyStructTypeCache
        f_10899_17813_17849()
        {
            var return_v = EmptyStructTypeCache.CreatePrecise();
            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 17813, 17849);
            return return_v;
        }


        int
        f_10899_17901_17984(bool
        condition)
        {
            Debug.Assert(condition);
            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 17901, 17984);
            return 0;
        }


        Microsoft.CodeAnalysis.CSharp.NullableWalker.Variables
        f_10899_18027_18051(Microsoft.CodeAnalysis.CSharp.Symbol?
        symbol)
        {
            var return_v = Variables.Create(symbol);
            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 18027, 18051);
            return return_v;
        }


        Microsoft.CodeAnalysis.CSharp.ConversionsBase
        f_10899_18125_18158(Microsoft.CodeAnalysis.CSharp.Conversions
        this_param, bool
        includeNullability)
        {
            var return_v = this_param.WithNullability(includeNullability);
            DynAbs.Tracing.TraceSender.TraceEndInvocation(10899, 18125, 18158);
            return return_v;
        }


        static Microsoft.CodeAnalysis.CSharp.CSharpCompilation
        f_10899_17786_17797_C(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
        i)
        {
            var return_v = i;
            DynAbs.Tracing.TraceSender.TraceBaseCall(10899, 17085, 18650);
            return return_v;
        }

    }
}
