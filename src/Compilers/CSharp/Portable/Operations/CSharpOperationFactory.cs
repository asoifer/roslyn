// Licensed to the .NET Foundation under one or more agreements.
// The .NET Foundation licenses this file to you under the MIT license.
// See the LICENSE file in the project root for more information.

using System.Collections.Generic;
using System.Collections.Immutable;
using System.Diagnostics;
using System.Diagnostics.CodeAnalysis;
using System.Linq;
using Microsoft.CodeAnalysis.CSharp;
using Microsoft.CodeAnalysis.CSharp.Symbols;
using Microsoft.CodeAnalysis.CSharp.Syntax;
using Microsoft.CodeAnalysis.PooledObjects;
using Roslyn.Utilities;

namespace Microsoft.CodeAnalysis.Operations
{
    internal sealed partial class CSharpOperationFactory
    {
        private readonly SemanticModel _semanticModel;

        public CSharpOperationFactory(SemanticModel semanticModel)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterConstructor(10951, 747, 872);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 720, 734);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 830, 861);

                _semanticModel = semanticModel;
                DynAbs.Tracing.TraceSender.TraceExitConstructor(10951, 747, 872);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10951, 747, 872);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10951, 747, 872);
            }
        }

        [return: NotNullIfNotNull("boundNode")]
        public IOperation? Create(BoundNode? boundNode)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10951, 884, 21251);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 1005, 1087) || true) && (boundNode == null)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 1005, 1087);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 1060, 1072);

                    return null;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 1005, 1087);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 1103, 21240);

                switch (f_10951_1111_1125(boundNode))
                {

                    case BoundKind.DeconstructValuePlaceholder:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 1103, 21240);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 1224, 1324);

                        return f_10951_1231_1323(this, boundNode);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 1103, 21240);

                    case BoundKind.DeconstructionAssignmentOperator:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 1103, 21240);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 1412, 1513);

                        return f_10951_1419_1512(this, boundNode);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 1103, 21240);

                    case BoundKind.Call:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 1103, 21240);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 1573, 1627);

                        return f_10951_1580_1626(this, boundNode);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 1103, 21240);

                    case BoundKind.Local:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 1103, 21240);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 1688, 1744);

                        return f_10951_1695_1743(this, boundNode);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 1103, 21240);

                    case BoundKind.FieldAccess:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 1103, 21240);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 1811, 1879);

                        return f_10951_1818_1878(this, boundNode);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 1103, 21240);

                    case BoundKind.PropertyAccess:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 1103, 21240);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 1949, 2023);

                        return f_10951_1956_2022(this, boundNode);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 1103, 21240);

                    case BoundKind.IndexerAccess:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 1103, 21240);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 2092, 2164);

                        return f_10951_2099_2163(this, boundNode);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 1103, 21240);

                    case BoundKind.EventAccess:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 1103, 21240);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 2231, 2299);

                        return f_10951_2238_2298(this, boundNode);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 1103, 21240);

                    case BoundKind.EventAssignmentOperator:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 1103, 21240);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 2378, 2470);

                        return f_10951_2385_2469(this, boundNode);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 1103, 21240);

                    case BoundKind.Parameter:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 1103, 21240);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 2535, 2599);

                        return f_10951_2542_2598(this, boundNode);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 1103, 21240);

                    case BoundKind.Literal:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 1103, 21240);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 2662, 2722);

                        return f_10951_2669_2721(this, boundNode);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 1103, 21240);

                    case BoundKind.DynamicInvocation:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 1103, 21240);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 2795, 2885);

                        return f_10951_2802_2884(this, boundNode);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 1103, 21240);

                    case BoundKind.DynamicIndexerAccess:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 1103, 21240);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 2961, 3057);

                        return f_10951_2968_3056(this, boundNode);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 1103, 21240);

                    case BoundKind.ObjectCreationExpression:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 1103, 21240);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 3137, 3231);

                        return f_10951_3144_3230(this, boundNode);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 1103, 21240);

                    case BoundKind.WithExpression:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 1103, 21240);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 3301, 3375);

                        return f_10951_3308_3374(this, boundNode);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 1103, 21240);

                    case BoundKind.DynamicObjectCreationExpression:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 1103, 21240);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 3462, 3570);

                        return f_10951_3469_3569(this, boundNode);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 1103, 21240);

                    case BoundKind.ObjectInitializerExpression:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 1103, 21240);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 3653, 3753);

                        return f_10951_3660_3752(this, boundNode);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 1103, 21240);

                    case BoundKind.CollectionInitializerExpression:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 1103, 21240);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 3840, 3948);

                        return f_10951_3847_3947(this, boundNode);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 1103, 21240);

                    case BoundKind.ObjectInitializerMember:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 1103, 21240);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 4027, 4119);

                        return f_10951_4034_4118(this, boundNode);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 1103, 21240);

                    case BoundKind.CollectionElementInitializer:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 1103, 21240);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 4203, 4305);

                        return f_10951_4210_4304(this, boundNode);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 1103, 21240);

                    case BoundKind.DynamicObjectInitializerMember:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 1103, 21240);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 4391, 4497);

                        return f_10951_4398_4496(this, boundNode);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 1103, 21240);

                    case BoundKind.DynamicMemberAccess:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 1103, 21240);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 4572, 4656);

                        return f_10951_4579_4655(this, boundNode);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 1103, 21240);

                    case BoundKind.DynamicCollectionElementInitializer:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 1103, 21240);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 4747, 4863);

                        return f_10951_4754_4862(this, boundNode);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 1103, 21240);

                    case BoundKind.UnboundLambda:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 1103, 21240);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 4932, 4994);

                        return f_10951_4939_4993(this, boundNode);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 1103, 21240);

                    case BoundKind.Lambda:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 1103, 21240);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 5056, 5114);

                        return f_10951_5063_5113(this, boundNode);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 1103, 21240);

                    case BoundKind.Conversion:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 1103, 21240);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 5180, 5246);

                        return f_10951_5187_5245(this, boundNode);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 1103, 21240);

                    case BoundKind.AsOperator:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 1103, 21240);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 5312, 5378);

                        return f_10951_5319_5377(this, boundNode);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 1103, 21240);

                    case BoundKind.IsOperator:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 1103, 21240);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 5444, 5510);

                        return f_10951_5451_5509(this, boundNode);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 1103, 21240);

                    case BoundKind.SizeOfOperator:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 1103, 21240);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 5580, 5654);

                        return f_10951_5587_5653(this, boundNode);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 1103, 21240);

                    case BoundKind.TypeOfOperator:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 1103, 21240);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 5724, 5798);

                        return f_10951_5731_5797(this, boundNode);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 1103, 21240);

                    case BoundKind.ArrayCreation:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 1103, 21240);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 5867, 5939);

                        return f_10951_5874_5938(this, boundNode);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 1103, 21240);

                    case BoundKind.ArrayInitialization:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 1103, 21240);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 6014, 6098);

                        return f_10951_6021_6097(this, boundNode);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 1103, 21240);

                    case BoundKind.DefaultLiteral:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 1103, 21240);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 6168, 6242);

                        return f_10951_6175_6241(this, boundNode);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 1103, 21240);

                    case BoundKind.DefaultExpression:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 1103, 21240);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 6315, 6395);

                        return f_10951_6322_6394(this, boundNode);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 1103, 21240);

                    case BoundKind.BaseReference:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 1103, 21240);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 6464, 6536);

                        return f_10951_6471_6535(this, boundNode);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 1103, 21240);

                    case BoundKind.ThisReference:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 1103, 21240);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 6605, 6677);

                        return f_10951_6612_6676(this, boundNode);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 1103, 21240);

                    case BoundKind.AssignmentOperator:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 1103, 21240);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 6751, 6852);

                        return f_10951_6758_6851(this, boundNode);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 1103, 21240);

                    case BoundKind.CompoundAssignmentOperator:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 1103, 21240);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 6934, 7032);

                        return f_10951_6941_7031(this, boundNode);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 1103, 21240);

                    case BoundKind.IncrementOperator:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 1103, 21240);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 7105, 7185);

                        return f_10951_7112_7184(this, boundNode);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 1103, 21240);

                    case BoundKind.BadExpression:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 1103, 21240);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 7254, 7326);

                        return f_10951_7261_7325(this, boundNode);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 1103, 21240);

                    case BoundKind.NewT:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 1103, 21240);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 7386, 7440);

                        return f_10951_7393_7439(this, boundNode);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 1103, 21240);

                    case BoundKind.NoPiaObjectCreationExpression:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 1103, 21240);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 7525, 7624);

                        return f_10951_7532_7623(this, boundNode);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 1103, 21240);

                    case BoundKind.UnaryOperator:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 1103, 21240);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 7693, 7765);

                        return f_10951_7700_7764(this, boundNode);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 1103, 21240);

                    case BoundKind.BinaryOperator:
                    case BoundKind.UserDefinedConditionalLogicalOperator:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 1103, 21240);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 7906, 7979);

                        return f_10951_7913_7978(this, boundNode);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 1103, 21240);

                    case BoundKind.TupleBinaryOperator:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 1103, 21240);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 8054, 8138);

                        return f_10951_8061_8137(this, boundNode);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 1103, 21240);

                    case BoundKind.ConditionalOperator:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 1103, 21240);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 8213, 8297);

                        return f_10951_8220_8296(this, boundNode);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 1103, 21240);

                    case BoundKind.NullCoalescingOperator:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 1103, 21240);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 8375, 8465);

                        return f_10951_8382_8464(this, boundNode);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 1103, 21240);

                    case BoundKind.AwaitExpression:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 1103, 21240);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 8536, 8612);

                        return f_10951_8543_8611(this, boundNode);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 1103, 21240);

                    case BoundKind.ArrayAccess:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 1103, 21240);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 8679, 8747);

                        return f_10951_8686_8746(this, boundNode);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 1103, 21240);

                    case BoundKind.NameOfOperator:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 1103, 21240);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 8817, 8891);

                        return f_10951_8824_8890(this, boundNode);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 1103, 21240);

                    case BoundKind.ThrowExpression:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 1103, 21240);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 8962, 9038);

                        return f_10951_8969_9037(this, boundNode);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 1103, 21240);

                    case BoundKind.AddressOfOperator:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 1103, 21240);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 9111, 9191);

                        return f_10951_9118_9190(this, boundNode);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 1103, 21240);

                    case BoundKind.ImplicitReceiver:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 1103, 21240);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 9263, 9341);

                        return f_10951_9270_9340(this, boundNode);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 1103, 21240);

                    case BoundKind.ConditionalAccess:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 1103, 21240);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 9414, 9494);

                        return f_10951_9421_9493(this, boundNode);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 1103, 21240);

                    case BoundKind.ConditionalReceiver:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 1103, 21240);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 9569, 9653);

                        return f_10951_9576_9652(this, boundNode);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 1103, 21240);

                    case BoundKind.FieldEqualsValue:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 1103, 21240);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 9725, 9803);

                        return f_10951_9732_9802(this, boundNode);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 1103, 21240);

                    case BoundKind.PropertyEqualsValue:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 1103, 21240);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 9878, 9962);

                        return f_10951_9885_9961(this, boundNode);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 1103, 21240);

                    case BoundKind.ParameterEqualsValue:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 1103, 21240);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 10038, 10124);

                        return f_10951_10045_10123(this, boundNode);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 1103, 21240);

                    case BoundKind.Block:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 1103, 21240);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 10185, 10241);

                        return f_10951_10192_10240(this, boundNode);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 1103, 21240);

                    case BoundKind.ContinueStatement:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 1103, 21240);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 10314, 10394);

                        return f_10951_10321_10393(this, boundNode);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 1103, 21240);

                    case BoundKind.BreakStatement:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 1103, 21240);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 10464, 10538);

                        return f_10951_10471_10537(this, boundNode);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 1103, 21240);

                    case BoundKind.YieldBreakStatement:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 1103, 21240);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 10613, 10697);

                        return f_10951_10620_10696(this, boundNode);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 1103, 21240);

                    case BoundKind.GotoStatement:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 1103, 21240);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 10766, 10838);

                        return f_10951_10773_10837(this, boundNode);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 1103, 21240);

                    case BoundKind.NoOpStatement:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 1103, 21240);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 10907, 10979);

                        return f_10951_10914_10978(this, boundNode);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 1103, 21240);

                    case BoundKind.IfStatement:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 1103, 21240);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 11046, 11114);

                        return f_10951_11053_11113(this, boundNode);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 1103, 21240);

                    case BoundKind.WhileStatement:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 1103, 21240);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 11184, 11258);

                        return f_10951_11191_11257(this, boundNode);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 1103, 21240);

                    case BoundKind.DoStatement:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 1103, 21240);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 11325, 11393);

                        return f_10951_11332_11392(this, boundNode);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 1103, 21240);

                    case BoundKind.ForStatement:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 1103, 21240);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 11461, 11531);

                        return f_10951_11468_11530(this, boundNode);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 1103, 21240);

                    case BoundKind.ForEachStatement:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 1103, 21240);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 11603, 11681);

                        return f_10951_11610_11680(this, boundNode);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 1103, 21240);

                    case BoundKind.TryStatement:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 1103, 21240);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 11749, 11819);

                        return f_10951_11756_11818(this, boundNode);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 1103, 21240);

                    case BoundKind.CatchBlock:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 1103, 21240);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 11885, 11951);

                        return f_10951_11892_11950(this, boundNode);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 1103, 21240);

                    case BoundKind.FixedStatement:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 1103, 21240);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 12021, 12095);

                        return f_10951_12028_12094(this, boundNode);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 1103, 21240);

                    case BoundKind.UsingStatement:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 1103, 21240);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 12165, 12239);

                        return f_10951_12172_12238(this, boundNode);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 1103, 21240);

                    case BoundKind.ThrowStatement:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 1103, 21240);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 12309, 12383);

                        return f_10951_12316_12382(this, boundNode);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 1103, 21240);

                    case BoundKind.ReturnStatement:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 1103, 21240);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 12454, 12530);

                        return f_10951_12461_12529(this, boundNode);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 1103, 21240);

                    case BoundKind.YieldReturnStatement:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 1103, 21240);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 12606, 12692);

                        return f_10951_12613_12691(this, boundNode);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 1103, 21240);

                    case BoundKind.LockStatement:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 1103, 21240);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 12761, 12833);

                        return f_10951_12768_12832(this, boundNode);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 1103, 21240);

                    case BoundKind.BadStatement:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 1103, 21240);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 12901, 12971);

                        return f_10951_12908_12970(this, boundNode);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 1103, 21240);

                    case BoundKind.LocalDeclaration:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 1103, 21240);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 13043, 13121);

                        return f_10951_13050_13120(this, boundNode);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 1103, 21240);

                    case BoundKind.MultipleLocalDeclarations:
                    case BoundKind.UsingLocalDeclarations:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 1103, 21240);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 13258, 13362);

                        return f_10951_13265_13361(this, boundNode);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 1103, 21240);

                    case BoundKind.LabelStatement:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 1103, 21240);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 13432, 13506);

                        return f_10951_13439_13505(this, boundNode);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 1103, 21240);

                    case BoundKind.LabeledStatement:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 1103, 21240);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 13578, 13656);

                        return f_10951_13585_13655(this, boundNode);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 1103, 21240);

                    case BoundKind.ExpressionStatement:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 1103, 21240);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 13731, 13815);

                        return f_10951_13738_13814(this, boundNode);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 1103, 21240);

                    case BoundKind.TupleLiteral:
                    case BoundKind.ConvertedTupleLiteral:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 1103, 21240);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 13938, 14004);

                        return f_10951_13945_14003(this, boundNode);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 1103, 21240);

                    case BoundKind.InterpolatedString:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 1103, 21240);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 14078, 14170);

                        return f_10951_14085_14169(this, boundNode);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 1103, 21240);

                    case BoundKind.StringInsert:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 1103, 21240);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 14238, 14309);

                        return f_10951_14245_14308(this, boundNode);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 1103, 21240);

                    case BoundKind.LocalFunctionStatement:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 1103, 21240);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 14387, 14477);

                        return f_10951_14394_14476(this, boundNode);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 1103, 21240);

                    case BoundKind.AnonymousObjectCreationExpression:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 1103, 21240);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 14566, 14678);

                        return f_10951_14573_14677(this, boundNode);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 1103, 21240);

                    case BoundKind.AnonymousPropertyDeclaration:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 1103, 21240);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 14762, 14799);

                        throw f_10951_14768_14798();
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 1103, 21240);

                    case BoundKind.ConstantPattern:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 1103, 21240);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 14870, 14946);

                        return f_10951_14877_14945(this, boundNode);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 1103, 21240);

                    case BoundKind.DeclarationPattern:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 1103, 21240);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 15020, 15102);

                        return f_10951_15027_15101(this, boundNode);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 1103, 21240);

                    case BoundKind.RecursivePattern:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 1103, 21240);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 15174, 15252);

                        return f_10951_15181_15251(this, boundNode);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 1103, 21240);

                    case BoundKind.ITuplePattern:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 1103, 21240);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 15321, 15396);

                        return f_10951_15328_15395(this, boundNode);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 1103, 21240);

                    case BoundKind.DiscardPattern:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 1103, 21240);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 15466, 15540);

                        return f_10951_15473_15539(this, boundNode);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 1103, 21240);

                    case BoundKind.BinaryPattern:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 1103, 21240);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 15609, 15681);

                        return f_10951_15616_15680(this, boundNode);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 1103, 21240);

                    case BoundKind.NegatedPattern:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 1103, 21240);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 15751, 15825);

                        return f_10951_15758_15824(this, boundNode);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 1103, 21240);

                    case BoundKind.RelationalPattern:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 1103, 21240);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 15898, 15978);

                        return f_10951_15905_15977(this, boundNode);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 1103, 21240);

                    case BoundKind.TypePattern:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 1103, 21240);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 16045, 16113);

                        return f_10951_16052_16112(this, boundNode);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 1103, 21240);

                    case BoundKind.SwitchStatement:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 1103, 21240);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 16184, 16260);

                        return f_10951_16191_16259(this, boundNode);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 1103, 21240);

                    case BoundKind.SwitchLabel:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 1103, 21240);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 16327, 16395);

                        return f_10951_16334_16394(this, boundNode);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 1103, 21240);

                    case BoundKind.IsPatternExpression:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 1103, 21240);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 16470, 16554);

                        return f_10951_16477_16553(this, boundNode);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 1103, 21240);

                    case BoundKind.QueryClause:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 1103, 21240);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 16621, 16689);

                        return f_10951_16628_16688(this, boundNode);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 1103, 21240);

                    case BoundKind.DelegateCreationExpression:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 1103, 21240);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 16771, 16869);

                        return f_10951_16778_16868(this, boundNode);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 1103, 21240);

                    case BoundKind.RangeVariable:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 1103, 21240);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 16938, 17010);

                        return f_10951_16945_17009(this, boundNode);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 1103, 21240);

                    case BoundKind.ConstructorMethodBody:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 1103, 21240);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 17087, 17164);

                        return f_10951_17094_17163(this, boundNode);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 1103, 21240);

                    case BoundKind.NonConstructorMethodBody:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 1103, 21240);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 17244, 17319);

                        return f_10951_17251_17318(this, boundNode);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 1103, 21240);

                    case BoundKind.DiscardExpression:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 1103, 21240);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 17392, 17472);

                        return f_10951_17399_17471(this, boundNode);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 1103, 21240);

                    case BoundKind.NullCoalescingAssignmentOperator:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 1103, 21240);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 17560, 17670);

                        return f_10951_17567_17669(this, boundNode);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 1103, 21240);

                    case BoundKind.FromEndIndexExpression:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 1103, 21240);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 17748, 17833);

                        return f_10951_17755_17832(this, boundNode);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 1103, 21240);

                    case BoundKind.RangeExpression:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 1103, 21240);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 17904, 17975);

                        return f_10951_17911_17974(this, boundNode);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 1103, 21240);

                    case BoundKind.SwitchSection:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 1103, 21240);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 18044, 18116);

                        return f_10951_18051_18115(this, boundNode);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 1103, 21240);

                    case BoundKind.UnconvertedConditionalOperator:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 1103, 21240);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 18202, 18239);

                        throw f_10951_18208_18238();
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 1103, 21240);

                    case BoundKind.UnconvertedSwitchExpression:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 1103, 21240);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 18322, 18359);

                        throw f_10951_18328_18358();
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 1103, 21240);

                    case BoundKind.ConvertedSwitchExpression:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 1103, 21240);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 18440, 18518);

                        return f_10951_18447_18517(this, boundNode);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 1103, 21240);

                    case BoundKind.SwitchExpressionArm:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 1103, 21240);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 18593, 18677);

                        return f_10951_18600_18676(this, boundNode);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 1103, 21240);

                    case BoundKind.ObjectOrCollectionValuePlaceholder:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 1103, 21240);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 18767, 18868);

                        return f_10951_18774_18867(this, boundNode);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 1103, 21240);

                    case BoundKind.FunctionPointerInvocation:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 1103, 21240);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 18949, 19045);

                        return f_10951_18956_19044(this, boundNode);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 1103, 21240);

                    case BoundKind.UnconvertedAddressOfOperator:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 1103, 21240);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 19129, 19231);

                        return f_10951_19136_19230(this, boundNode);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 1103, 21240);

                    case BoundKind.Attribute:
                    case BoundKind.ArgList:
                    case BoundKind.ArgListOperator:
                    case BoundKind.ConvertedStackAllocExpression:
                    case BoundKind.FixedLocalCollectionInitializer:
                    case BoundKind.GlobalStatementInitializer:
                    case BoundKind.HostObjectMemberReference:
                    case BoundKind.MakeRefOperator:
                    case BoundKind.MethodGroup:
                    case BoundKind.NamespaceExpression:
                    case BoundKind.PointerElementAccess:
                    case BoundKind.PointerIndirectionOperator:
                    case BoundKind.PreviousSubmissionReference:
                    case BoundKind.RefTypeOperator:
                    case BoundKind.RefValueOperator:
                    case BoundKind.Sequence:
                    case BoundKind.StackAllocArrayCreation:
                    case BoundKind.TypeExpression:
                    case BoundKind.TypeOrValueExpression:
                    case BoundKind.IndexOrRangePatternIndexerAccess:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 1103, 21240);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 20357, 20452);

                        ConstantValue?
                        constantValue = (DynAbs.Tracing.TraceSender.Conditional_F1(10951, 20388, 20423) || (((boundNode is BoundExpression temp) && DynAbs.Tracing.TraceSender.Conditional_F2(10951, 20426, 20444)) || DynAbs.Tracing.TraceSender.Conditional_F3(10951, 20447, 20451))) ? f_10951_20426_20444((BoundExpression)boundNode) : null
                        ;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 20474, 20523);

                        bool
                        isImplicit = f_10951_20492_20522(boundNode)
                        ;

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 20547, 20881) || true) && (!isImplicit)
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 20547, 20881);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 20612, 20858);

                            switch (f_10951_20620_20634(boundNode))
                            {

                                case BoundKind.FixedLocalCollectionInitializer:
                                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 20612, 20858);
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 20773, 20791);

                                    isImplicit = true;
                                    DynAbs.Tracing.TraceSender.TraceBreak(10951, 20825, 20831);

                                    break;
                                    DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 20612, 20858);
                            }
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 20547, 20881);
                        }
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 20905, 20976);

                        ImmutableArray<IOperation>
                        children = f_10951_20943_20975(this, boundNode)
                        ;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 20998, 21118);

                        return f_10951_21005_21117(children, _semanticModel, boundNode.Syntax, type: null, constantValue, isImplicit: isImplicit);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 1103, 21240);

                    default:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 1103, 21240);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 21168, 21225);

                        throw f_10951_21174_21224(f_10951_21209_21223(boundNode));
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 1103, 21240);
                }
                DynAbs.Tracing.TraceSender.TraceExitMethod(10951, 884, 21251);

                Microsoft.CodeAnalysis.CSharp.BoundKind
                f_10951_1111_1125(Microsoft.CodeAnalysis.CSharp.BoundNode
                this_param)
                {
                    var return_v = this_param.Kind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 1111, 1125);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.IPlaceholderOperation
                f_10951_1231_1323(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundNode
                boundDeconstructValuePlaceholder)
                {
                    var return_v = this_param.CreateBoundDeconstructValuePlaceholderOperation((Microsoft.CodeAnalysis.CSharp.BoundDeconstructValuePlaceholder)boundDeconstructValuePlaceholder);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 1231, 1323);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.IDeconstructionAssignmentOperation
                f_10951_1419_1512(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundNode
                boundDeconstructionAssignmentOperator)
                {
                    var return_v = this_param.CreateBoundDeconstructionAssignmentOperator((Microsoft.CodeAnalysis.CSharp.BoundDeconstructionAssignmentOperator)boundDeconstructionAssignmentOperator);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 1419, 1512);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation
                f_10951_1580_1626(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundNode
                boundCall)
                {
                    var return_v = this_param.CreateBoundCallOperation((Microsoft.CodeAnalysis.CSharp.BoundCall)boundCall);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 1580, 1626);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation
                f_10951_1695_1743(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundNode
                boundLocal)
                {
                    var return_v = this_param.CreateBoundLocalOperation((Microsoft.CodeAnalysis.CSharp.BoundLocal)boundLocal);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 1695, 1743);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation
                f_10951_1818_1878(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundNode
                boundFieldAccess)
                {
                    var return_v = this_param.CreateBoundFieldAccessOperation((Microsoft.CodeAnalysis.CSharp.BoundFieldAccess)boundFieldAccess);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 1818, 1878);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.IPropertyReferenceOperation
                f_10951_1956_2022(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundNode
                boundPropertyAccess)
                {
                    var return_v = this_param.CreateBoundPropertyAccessOperation((Microsoft.CodeAnalysis.CSharp.BoundPropertyAccess)boundPropertyAccess);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 1956, 2022);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation
                f_10951_2099_2163(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundNode
                boundIndexerAccess)
                {
                    var return_v = this_param.CreateBoundIndexerAccessOperation((Microsoft.CodeAnalysis.CSharp.BoundIndexerAccess)boundIndexerAccess);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 2099, 2163);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.IEventReferenceOperation
                f_10951_2238_2298(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundNode
                boundEventAccess)
                {
                    var return_v = this_param.CreateBoundEventAccessOperation((Microsoft.CodeAnalysis.CSharp.BoundEventAccess)boundEventAccess);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 2238, 2298);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.IEventAssignmentOperation
                f_10951_2385_2469(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundNode
                boundEventAssignmentOperator)
                {
                    var return_v = this_param.CreateBoundEventAssignmentOperatorOperation((Microsoft.CodeAnalysis.CSharp.BoundEventAssignmentOperator)boundEventAssignmentOperator);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 2385, 2469);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.IParameterReferenceOperation
                f_10951_2542_2598(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundNode
                boundParameter)
                {
                    var return_v = this_param.CreateBoundParameterOperation((Microsoft.CodeAnalysis.CSharp.BoundParameter)boundParameter);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 2542, 2598);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.ILiteralOperation
                f_10951_2669_2721(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundNode
                boundLiteral)
                {
                    var return_v = this_param.CreateBoundLiteralOperation((Microsoft.CodeAnalysis.CSharp.BoundLiteral)boundLiteral);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 2669, 2721);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.IDynamicInvocationOperation
                f_10951_2802_2884(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundNode
                boundDynamicInvocation)
                {
                    var return_v = this_param.CreateBoundDynamicInvocationExpressionOperation((Microsoft.CodeAnalysis.CSharp.BoundDynamicInvocation)boundDynamicInvocation);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 2802, 2884);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.IDynamicIndexerAccessOperation
                f_10951_2968_3056(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundNode
                boundDynamicIndexerAccess)
                {
                    var return_v = this_param.CreateBoundDynamicIndexerAccessExpressionOperation((Microsoft.CodeAnalysis.CSharp.BoundDynamicIndexerAccess)boundDynamicIndexerAccess);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 2968, 3056);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation
                f_10951_3144_3230(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundNode
                boundObjectCreationExpression)
                {
                    var return_v = this_param.CreateBoundObjectCreationExpressionOperation((Microsoft.CodeAnalysis.CSharp.BoundObjectCreationExpression)boundObjectCreationExpression);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 3144, 3230);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation
                f_10951_3308_3374(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundNode
                boundWithExpression)
                {
                    var return_v = this_param.CreateBoundWithExpressionOperation((Microsoft.CodeAnalysis.CSharp.BoundWithExpression)boundWithExpression);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 3308, 3374);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.IDynamicObjectCreationOperation
                f_10951_3469_3569(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundNode
                boundDynamicObjectCreationExpression)
                {
                    var return_v = this_param.CreateBoundDynamicObjectCreationExpressionOperation((Microsoft.CodeAnalysis.CSharp.BoundDynamicObjectCreationExpression)boundDynamicObjectCreationExpression);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 3469, 3569);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.IObjectOrCollectionInitializerOperation
                f_10951_3660_3752(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundNode
                boundObjectInitializerExpression)
                {
                    var return_v = this_param.CreateBoundObjectInitializerExpressionOperation((Microsoft.CodeAnalysis.CSharp.BoundObjectInitializerExpression)boundObjectInitializerExpression);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 3660, 3752);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.IObjectOrCollectionInitializerOperation
                f_10951_3847_3947(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundNode
                boundCollectionInitializerExpression)
                {
                    var return_v = this_param.CreateBoundCollectionInitializerExpressionOperation((Microsoft.CodeAnalysis.CSharp.BoundCollectionInitializerExpression)boundCollectionInitializerExpression);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 3847, 3947);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation
                f_10951_4034_4118(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundNode
                boundObjectInitializerMember)
                {
                    var return_v = this_param.CreateBoundObjectInitializerMemberOperation((Microsoft.CodeAnalysis.CSharp.BoundObjectInitializerMember)boundObjectInitializerMember);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 4034, 4118);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation
                f_10951_4210_4304(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundNode
                boundCollectionElementInitializer)
                {
                    var return_v = this_param.CreateBoundCollectionElementInitializerOperation((Microsoft.CodeAnalysis.CSharp.BoundCollectionElementInitializer)boundCollectionElementInitializer);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 4210, 4304);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation
                f_10951_4398_4496(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundNode
                boundDynamicObjectInitializerMember)
                {
                    var return_v = this_param.CreateBoundDynamicObjectInitializerMemberOperation((Microsoft.CodeAnalysis.CSharp.BoundDynamicObjectInitializerMember)boundDynamicObjectInitializerMember);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 4398, 4496);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.IDynamicMemberReferenceOperation
                f_10951_4579_4655(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundNode
                boundDynamicMemberAccess)
                {
                    var return_v = this_param.CreateBoundDynamicMemberAccessOperation((Microsoft.CodeAnalysis.CSharp.BoundDynamicMemberAccess)boundDynamicMemberAccess);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 4579, 4655);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.IDynamicInvocationOperation
                f_10951_4754_4862(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundNode
                boundCollectionElementInitializer)
                {
                    var return_v = this_param.CreateBoundDynamicCollectionElementInitializerOperation((Microsoft.CodeAnalysis.CSharp.BoundDynamicCollectionElementInitializer)boundCollectionElementInitializer);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 4754, 4862);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation
                f_10951_4939_4993(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundNode
                unboundLambda)
                {
                    var return_v = this_param.CreateUnboundLambdaOperation((Microsoft.CodeAnalysis.CSharp.UnboundLambda)unboundLambda);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 4939, 4993);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.IAnonymousFunctionOperation
                f_10951_5063_5113(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundNode
                boundLambda)
                {
                    var return_v = this_param.CreateBoundLambdaOperation((Microsoft.CodeAnalysis.CSharp.BoundLambda)boundLambda);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 5063, 5113);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation
                f_10951_5187_5245(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundNode
                boundConversion)
                {
                    var return_v = this_param.CreateBoundConversionOperation((Microsoft.CodeAnalysis.CSharp.BoundConversion)boundConversion);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 5187, 5245);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.IConversionOperation
                f_10951_5319_5377(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundNode
                boundAsOperator)
                {
                    var return_v = this_param.CreateBoundAsOperatorOperation((Microsoft.CodeAnalysis.CSharp.BoundAsOperator)boundAsOperator);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 5319, 5377);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.IIsTypeOperation
                f_10951_5451_5509(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundNode
                boundIsOperator)
                {
                    var return_v = this_param.CreateBoundIsOperatorOperation((Microsoft.CodeAnalysis.CSharp.BoundIsOperator)boundIsOperator);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 5451, 5509);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.ISizeOfOperation
                f_10951_5587_5653(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundNode
                boundSizeOfOperator)
                {
                    var return_v = this_param.CreateBoundSizeOfOperatorOperation((Microsoft.CodeAnalysis.CSharp.BoundSizeOfOperator)boundSizeOfOperator);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 5587, 5653);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.ITypeOfOperation
                f_10951_5731_5797(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundNode
                boundTypeOfOperator)
                {
                    var return_v = this_param.CreateBoundTypeOfOperatorOperation((Microsoft.CodeAnalysis.CSharp.BoundTypeOfOperator)boundTypeOfOperator);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 5731, 5797);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.IArrayCreationOperation
                f_10951_5874_5938(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundNode
                boundArrayCreation)
                {
                    var return_v = this_param.CreateBoundArrayCreationOperation((Microsoft.CodeAnalysis.CSharp.BoundArrayCreation)boundArrayCreation);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 5874, 5938);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.IArrayInitializerOperation
                f_10951_6021_6097(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundNode
                boundArrayInitialization)
                {
                    var return_v = this_param.CreateBoundArrayInitializationOperation((Microsoft.CodeAnalysis.CSharp.BoundArrayInitialization)boundArrayInitialization);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 6021, 6097);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.IDefaultValueOperation
                f_10951_6175_6241(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundNode
                boundDefaultLiteral)
                {
                    var return_v = this_param.CreateBoundDefaultLiteralOperation((Microsoft.CodeAnalysis.CSharp.BoundDefaultLiteral)boundDefaultLiteral);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 6175, 6241);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.IDefaultValueOperation
                f_10951_6322_6394(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundNode
                boundDefaultExpression)
                {
                    var return_v = this_param.CreateBoundDefaultExpressionOperation((Microsoft.CodeAnalysis.CSharp.BoundDefaultExpression)boundDefaultExpression);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 6322, 6394);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.IInstanceReferenceOperation
                f_10951_6471_6535(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundNode
                boundBaseReference)
                {
                    var return_v = this_param.CreateBoundBaseReferenceOperation((Microsoft.CodeAnalysis.CSharp.BoundBaseReference)boundBaseReference);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 6471, 6535);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.IInstanceReferenceOperation
                f_10951_6612_6676(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundNode
                boundThisReference)
                {
                    var return_v = this_param.CreateBoundThisReferenceOperation((Microsoft.CodeAnalysis.CSharp.BoundThisReference)boundThisReference);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 6612, 6676);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation
                f_10951_6758_6851(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundNode
                boundAssignmentOperator)
                {
                    var return_v = this_param.CreateBoundAssignmentOperatorOrMemberInitializerOperation((Microsoft.CodeAnalysis.CSharp.BoundAssignmentOperator)boundAssignmentOperator);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 6758, 6851);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.ICompoundAssignmentOperation
                f_10951_6941_7031(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundNode
                boundCompoundAssignmentOperator)
                {
                    var return_v = this_param.CreateBoundCompoundAssignmentOperatorOperation((Microsoft.CodeAnalysis.CSharp.BoundCompoundAssignmentOperator)boundCompoundAssignmentOperator);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 6941, 7031);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.IIncrementOrDecrementOperation
                f_10951_7112_7184(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundNode
                boundIncrementOperator)
                {
                    var return_v = this_param.CreateBoundIncrementOperatorOperation((Microsoft.CodeAnalysis.CSharp.BoundIncrementOperator)boundIncrementOperator);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 7112, 7184);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.IInvalidOperation
                f_10951_7261_7325(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundNode
                boundBadExpression)
                {
                    var return_v = this_param.CreateBoundBadExpressionOperation((Microsoft.CodeAnalysis.CSharp.BoundBadExpression)boundBadExpression);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 7261, 7325);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.ITypeParameterObjectCreationOperation
                f_10951_7393_7439(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundNode
                boundNewT)
                {
                    var return_v = this_param.CreateBoundNewTOperation((Microsoft.CodeAnalysis.CSharp.BoundNewT)boundNewT);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 7393, 7439);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.INoPiaObjectCreationOperation
                f_10951_7532_7623(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundNode
                creation)
                {
                    var return_v = this_param.CreateNoPiaObjectCreationExpressionOperation((Microsoft.CodeAnalysis.CSharp.BoundNoPiaObjectCreationExpression)creation);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 7532, 7623);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.IUnaryOperation
                f_10951_7700_7764(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundNode
                boundUnaryOperator)
                {
                    var return_v = this_param.CreateBoundUnaryOperatorOperation((Microsoft.CodeAnalysis.CSharp.BoundUnaryOperator)boundUnaryOperator);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 7700, 7764);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation
                f_10951_7913_7978(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundNode
                boundBinaryOperatorBase)
                {
                    var return_v = this_param.CreateBoundBinaryOperatorBase((Microsoft.CodeAnalysis.CSharp.BoundBinaryOperatorBase)boundBinaryOperatorBase);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 7913, 7978);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.ITupleBinaryOperation
                f_10951_8061_8137(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundNode
                boundTupleBinaryOperator)
                {
                    var return_v = this_param.CreateBoundTupleBinaryOperatorOperation((Microsoft.CodeAnalysis.CSharp.BoundTupleBinaryOperator)boundTupleBinaryOperator);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 8061, 8137);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.IConditionalOperation
                f_10951_8220_8296(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundNode
                boundConditionalOperator)
                {
                    var return_v = this_param.CreateBoundConditionalOperatorOperation((Microsoft.CodeAnalysis.CSharp.BoundConditionalOperator)boundConditionalOperator);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 8220, 8296);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.ICoalesceOperation
                f_10951_8382_8464(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundNode
                boundNullCoalescingOperator)
                {
                    var return_v = this_param.CreateBoundNullCoalescingOperatorOperation((Microsoft.CodeAnalysis.CSharp.BoundNullCoalescingOperator)boundNullCoalescingOperator);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 8382, 8464);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.IAwaitOperation
                f_10951_8543_8611(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundNode
                boundAwaitExpression)
                {
                    var return_v = this_param.CreateBoundAwaitExpressionOperation((Microsoft.CodeAnalysis.CSharp.BoundAwaitExpression)boundAwaitExpression);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 8543, 8611);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.IArrayElementReferenceOperation
                f_10951_8686_8746(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundNode
                boundArrayAccess)
                {
                    var return_v = this_param.CreateBoundArrayAccessOperation((Microsoft.CodeAnalysis.CSharp.BoundArrayAccess)boundArrayAccess);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 8686, 8746);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.INameOfOperation
                f_10951_8824_8890(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundNode
                boundNameOfOperator)
                {
                    var return_v = this_param.CreateBoundNameOfOperatorOperation((Microsoft.CodeAnalysis.CSharp.BoundNameOfOperator)boundNameOfOperator);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 8824, 8890);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.IThrowOperation
                f_10951_8969_9037(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundNode
                boundThrowExpression)
                {
                    var return_v = this_param.CreateBoundThrowExpressionOperation((Microsoft.CodeAnalysis.CSharp.BoundThrowExpression)boundThrowExpression);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 8969, 9037);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.IAddressOfOperation
                f_10951_9118_9190(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundNode
                boundAddressOfOperator)
                {
                    var return_v = this_param.CreateBoundAddressOfOperatorOperation((Microsoft.CodeAnalysis.CSharp.BoundAddressOfOperator)boundAddressOfOperator);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 9118, 9190);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.IInstanceReferenceOperation
                f_10951_9270_9340(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundNode
                boundImplicitReceiver)
                {
                    var return_v = this_param.CreateBoundImplicitReceiverOperation((Microsoft.CodeAnalysis.CSharp.BoundImplicitReceiver)boundImplicitReceiver);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 9270, 9340);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.IConditionalAccessOperation
                f_10951_9421_9493(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundNode
                boundConditionalAccess)
                {
                    var return_v = this_param.CreateBoundConditionalAccessOperation((Microsoft.CodeAnalysis.CSharp.BoundConditionalAccess)boundConditionalAccess);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 9421, 9493);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.IConditionalAccessInstanceOperation
                f_10951_9576_9652(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundNode
                boundConditionalReceiver)
                {
                    var return_v = this_param.CreateBoundConditionalReceiverOperation((Microsoft.CodeAnalysis.CSharp.BoundConditionalReceiver)boundConditionalReceiver);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 9576, 9652);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.IFieldInitializerOperation
                f_10951_9732_9802(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundNode
                boundFieldEqualsValue)
                {
                    var return_v = this_param.CreateBoundFieldEqualsValueOperation((Microsoft.CodeAnalysis.CSharp.BoundFieldEqualsValue)boundFieldEqualsValue);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 9732, 9802);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.IPropertyInitializerOperation
                f_10951_9885_9961(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundNode
                boundPropertyEqualsValue)
                {
                    var return_v = this_param.CreateBoundPropertyEqualsValueOperation((Microsoft.CodeAnalysis.CSharp.BoundPropertyEqualsValue)boundPropertyEqualsValue);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 9885, 9961);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.IParameterInitializerOperation
                f_10951_10045_10123(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundNode
                boundParameterEqualsValue)
                {
                    var return_v = this_param.CreateBoundParameterEqualsValueOperation((Microsoft.CodeAnalysis.CSharp.BoundParameterEqualsValue)boundParameterEqualsValue);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 10045, 10123);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.IBlockOperation
                f_10951_10192_10240(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundNode
                boundBlock)
                {
                    var return_v = this_param.CreateBoundBlockOperation((Microsoft.CodeAnalysis.CSharp.BoundBlock)boundBlock);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 10192, 10240);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.IBranchOperation
                f_10951_10321_10393(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundNode
                boundContinueStatement)
                {
                    var return_v = this_param.CreateBoundContinueStatementOperation((Microsoft.CodeAnalysis.CSharp.BoundContinueStatement)boundContinueStatement);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 10321, 10393);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.IBranchOperation
                f_10951_10471_10537(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundNode
                boundBreakStatement)
                {
                    var return_v = this_param.CreateBoundBreakStatementOperation((Microsoft.CodeAnalysis.CSharp.BoundBreakStatement)boundBreakStatement);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 10471, 10537);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.IReturnOperation
                f_10951_10620_10696(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundNode
                boundYieldBreakStatement)
                {
                    var return_v = this_param.CreateBoundYieldBreakStatementOperation((Microsoft.CodeAnalysis.CSharp.BoundYieldBreakStatement)boundYieldBreakStatement);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 10620, 10696);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.IBranchOperation
                f_10951_10773_10837(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundNode
                boundGotoStatement)
                {
                    var return_v = this_param.CreateBoundGotoStatementOperation((Microsoft.CodeAnalysis.CSharp.BoundGotoStatement)boundGotoStatement);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 10773, 10837);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.IEmptyOperation
                f_10951_10914_10978(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundNode
                boundNoOpStatement)
                {
                    var return_v = this_param.CreateBoundNoOpStatementOperation((Microsoft.CodeAnalysis.CSharp.BoundNoOpStatement)boundNoOpStatement);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 10914, 10978);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.IConditionalOperation
                f_10951_11053_11113(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundNode
                boundIfStatement)
                {
                    var return_v = this_param.CreateBoundIfStatementOperation((Microsoft.CodeAnalysis.CSharp.BoundIfStatement)boundIfStatement);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 11053, 11113);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.IWhileLoopOperation
                f_10951_11191_11257(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundNode
                boundWhileStatement)
                {
                    var return_v = this_param.CreateBoundWhileStatementOperation((Microsoft.CodeAnalysis.CSharp.BoundWhileStatement)boundWhileStatement);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 11191, 11257);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.IWhileLoopOperation
                f_10951_11332_11392(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundNode
                boundDoStatement)
                {
                    var return_v = this_param.CreateBoundDoStatementOperation((Microsoft.CodeAnalysis.CSharp.BoundDoStatement)boundDoStatement);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 11332, 11392);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.IForLoopOperation
                f_10951_11468_11530(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundNode
                boundForStatement)
                {
                    var return_v = this_param.CreateBoundForStatementOperation((Microsoft.CodeAnalysis.CSharp.BoundForStatement)boundForStatement);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 11468, 11530);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.IForEachLoopOperation
                f_10951_11610_11680(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundNode
                boundForEachStatement)
                {
                    var return_v = this_param.CreateBoundForEachStatementOperation((Microsoft.CodeAnalysis.CSharp.BoundForEachStatement)boundForEachStatement);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 11610, 11680);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.ITryOperation
                f_10951_11756_11818(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundNode
                boundTryStatement)
                {
                    var return_v = this_param.CreateBoundTryStatementOperation((Microsoft.CodeAnalysis.CSharp.BoundTryStatement)boundTryStatement);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 11756, 11818);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.ICatchClauseOperation
                f_10951_11892_11950(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundNode
                boundCatchBlock)
                {
                    var return_v = this_param.CreateBoundCatchBlockOperation((Microsoft.CodeAnalysis.CSharp.BoundCatchBlock)boundCatchBlock);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 11892, 11950);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.IFixedOperation
                f_10951_12028_12094(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundNode
                boundFixedStatement)
                {
                    var return_v = this_param.CreateBoundFixedStatementOperation((Microsoft.CodeAnalysis.CSharp.BoundFixedStatement)boundFixedStatement);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 12028, 12094);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.IUsingOperation
                f_10951_12172_12238(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundNode
                boundUsingStatement)
                {
                    var return_v = this_param.CreateBoundUsingStatementOperation((Microsoft.CodeAnalysis.CSharp.BoundUsingStatement)boundUsingStatement);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 12172, 12238);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.IThrowOperation
                f_10951_12316_12382(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundNode
                boundThrowStatement)
                {
                    var return_v = this_param.CreateBoundThrowStatementOperation((Microsoft.CodeAnalysis.CSharp.BoundThrowStatement)boundThrowStatement);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 12316, 12382);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.IReturnOperation
                f_10951_12461_12529(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundNode
                boundReturnStatement)
                {
                    var return_v = this_param.CreateBoundReturnStatementOperation((Microsoft.CodeAnalysis.CSharp.BoundReturnStatement)boundReturnStatement);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 12461, 12529);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.IReturnOperation
                f_10951_12613_12691(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundNode
                boundYieldReturnStatement)
                {
                    var return_v = this_param.CreateBoundYieldReturnStatementOperation((Microsoft.CodeAnalysis.CSharp.BoundYieldReturnStatement)boundYieldReturnStatement);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 12613, 12691);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.ILockOperation
                f_10951_12768_12832(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundNode
                boundLockStatement)
                {
                    var return_v = this_param.CreateBoundLockStatementOperation((Microsoft.CodeAnalysis.CSharp.BoundLockStatement)boundLockStatement);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 12768, 12832);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.IInvalidOperation
                f_10951_12908_12970(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundNode
                boundBadStatement)
                {
                    var return_v = this_param.CreateBoundBadStatementOperation((Microsoft.CodeAnalysis.CSharp.BoundBadStatement)boundBadStatement);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 12908, 12970);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation
                f_10951_13050_13120(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundNode
                boundLocalDeclaration)
                {
                    var return_v = this_param.CreateBoundLocalDeclarationOperation((Microsoft.CodeAnalysis.CSharp.BoundLocalDeclaration)boundLocalDeclaration);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 13050, 13120);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation
                f_10951_13265_13361(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundNode
                boundMultipleLocalDeclarations)
                {
                    var return_v = this_param.CreateBoundMultipleLocalDeclarationsBaseOperation((Microsoft.CodeAnalysis.CSharp.BoundMultipleLocalDeclarationsBase)boundMultipleLocalDeclarations);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 13265, 13361);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.ILabeledOperation
                f_10951_13439_13505(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundNode
                boundLabelStatement)
                {
                    var return_v = this_param.CreateBoundLabelStatementOperation((Microsoft.CodeAnalysis.CSharp.BoundLabelStatement)boundLabelStatement);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 13439, 13505);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.ILabeledOperation
                f_10951_13585_13655(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundNode
                boundLabeledStatement)
                {
                    var return_v = this_param.CreateBoundLabeledStatementOperation((Microsoft.CodeAnalysis.CSharp.BoundLabeledStatement)boundLabeledStatement);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 13585, 13655);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.IExpressionStatementOperation
                f_10951_13738_13814(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundNode
                boundExpressionStatement)
                {
                    var return_v = this_param.CreateBoundExpressionStatementOperation((Microsoft.CodeAnalysis.CSharp.BoundExpressionStatement)boundExpressionStatement);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 13738, 13814);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation
                f_10951_13945_14003(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundNode
                boundTupleExpression)
                {
                    var return_v = this_param.CreateBoundTupleOperation((Microsoft.CodeAnalysis.CSharp.BoundTupleExpression)boundTupleExpression);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 13945, 14003);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.IInterpolatedStringOperation
                f_10951_14085_14169(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundNode
                boundInterpolatedString)
                {
                    var return_v = this_param.CreateBoundInterpolatedStringExpressionOperation((Microsoft.CodeAnalysis.CSharp.BoundInterpolatedString)boundInterpolatedString);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 14085, 14169);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.IInterpolationOperation
                f_10951_14245_14308(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundNode
                boundStringInsert)
                {
                    var return_v = this_param.CreateBoundInterpolationOperation((Microsoft.CodeAnalysis.CSharp.BoundStringInsert)boundStringInsert);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 14245, 14308);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.ILocalFunctionOperation
                f_10951_14394_14476(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundNode
                boundLocalFunctionStatement)
                {
                    var return_v = this_param.CreateBoundLocalFunctionStatementOperation((Microsoft.CodeAnalysis.CSharp.BoundLocalFunctionStatement)boundLocalFunctionStatement);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 14394, 14476);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.IAnonymousObjectCreationOperation
                f_10951_14573_14677(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundNode
                boundAnonymousObjectCreationExpression)
                {
                    var return_v = this_param.CreateBoundAnonymousObjectCreationExpressionOperation((Microsoft.CodeAnalysis.CSharp.BoundAnonymousObjectCreationExpression)boundAnonymousObjectCreationExpression);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 14573, 14677);
                    return return_v;
                }


                System.Exception
                f_10951_14768_14798()
                {
                    var return_v = ExceptionUtilities.Unreachable;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 14768, 14798);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.IConstantPatternOperation
                f_10951_14877_14945(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundNode
                boundConstantPattern)
                {
                    var return_v = this_param.CreateBoundConstantPatternOperation((Microsoft.CodeAnalysis.CSharp.BoundConstantPattern)boundConstantPattern);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 14877, 14945);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.IDeclarationPatternOperation
                f_10951_15027_15101(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundNode
                boundDeclarationPattern)
                {
                    var return_v = this_param.CreateBoundDeclarationPatternOperation((Microsoft.CodeAnalysis.CSharp.BoundDeclarationPattern)boundDeclarationPattern);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 15027, 15101);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.IRecursivePatternOperation
                f_10951_15181_15251(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundNode
                boundRecursivePattern)
                {
                    var return_v = this_param.CreateBoundRecursivePatternOperation((Microsoft.CodeAnalysis.CSharp.BoundRecursivePattern)boundRecursivePattern);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 15181, 15251);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.IRecursivePatternOperation
                f_10951_15328_15395(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundNode
                boundITuplePattern)
                {
                    var return_v = this_param.CreateBoundRecursivePatternOperation((Microsoft.CodeAnalysis.CSharp.BoundITuplePattern)boundITuplePattern);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 15328, 15395);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation
                f_10951_15473_15539(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundNode
                boundNode)
                {
                    var return_v = this_param.CreateBoundDiscardPatternOperation((Microsoft.CodeAnalysis.CSharp.BoundDiscardPattern)boundNode);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 15473, 15539);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation
                f_10951_15616_15680(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundNode
                boundBinaryPattern)
                {
                    var return_v = this_param.CreateBoundBinaryPatternOperation((Microsoft.CodeAnalysis.CSharp.BoundBinaryPattern)boundBinaryPattern);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 15616, 15680);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation
                f_10951_15758_15824(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundNode
                boundNegatedPattern)
                {
                    var return_v = this_param.CreateBoundNegatedPatternOperation((Microsoft.CodeAnalysis.CSharp.BoundNegatedPattern)boundNegatedPattern);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 15758, 15824);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation
                f_10951_15905_15977(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundNode
                boundRelationalPattern)
                {
                    var return_v = this_param.CreateBoundRelationalPatternOperation((Microsoft.CodeAnalysis.CSharp.BoundRelationalPattern)boundRelationalPattern);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 15905, 15977);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation
                f_10951_16052_16112(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundNode
                boundTypePattern)
                {
                    var return_v = this_param.CreateBoundTypePatternOperation((Microsoft.CodeAnalysis.CSharp.BoundTypePattern)boundTypePattern);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 16052, 16112);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.ISwitchOperation
                f_10951_16191_16259(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundNode
                boundSwitchStatement)
                {
                    var return_v = this_param.CreateBoundSwitchStatementOperation((Microsoft.CodeAnalysis.CSharp.BoundSwitchStatement)boundSwitchStatement);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 16191, 16259);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.ICaseClauseOperation
                f_10951_16334_16394(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundNode
                boundSwitchLabel)
                {
                    var return_v = this_param.CreateBoundSwitchLabelOperation((Microsoft.CodeAnalysis.CSharp.BoundSwitchLabel)boundSwitchLabel);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 16334, 16394);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.IIsPatternOperation
                f_10951_16477_16553(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundNode
                boundIsPatternExpression)
                {
                    var return_v = this_param.CreateBoundIsPatternExpressionOperation((Microsoft.CodeAnalysis.CSharp.BoundIsPatternExpression)boundIsPatternExpression);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 16477, 16553);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation
                f_10951_16628_16688(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundNode
                boundQueryClause)
                {
                    var return_v = this_param.CreateBoundQueryClauseOperation((Microsoft.CodeAnalysis.CSharp.BoundQueryClause)boundQueryClause);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 16628, 16688);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.IDelegateCreationOperation
                f_10951_16778_16868(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundNode
                boundDelegateCreationExpression)
                {
                    var return_v = this_param.CreateBoundDelegateCreationExpressionOperation((Microsoft.CodeAnalysis.CSharp.BoundDelegateCreationExpression)boundDelegateCreationExpression);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 16778, 16868);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation
                f_10951_16945_17009(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundNode
                boundRangeVariable)
                {
                    var return_v = this_param.CreateBoundRangeVariableOperation((Microsoft.CodeAnalysis.CSharp.BoundRangeVariable)boundRangeVariable);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 16945, 17009);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.IConstructorBodyOperation
                f_10951_17094_17163(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundNode
                boundNode)
                {
                    var return_v = this_param.CreateConstructorBodyOperation((Microsoft.CodeAnalysis.CSharp.BoundConstructorMethodBody)boundNode);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 17094, 17163);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.IMethodBodyOperation
                f_10951_17251_17318(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundNode
                boundNode)
                {
                    var return_v = this_param.CreateMethodBodyOperation((Microsoft.CodeAnalysis.CSharp.BoundNonConstructorMethodBody)boundNode);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 17251, 17318);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation
                f_10951_17399_17471(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundNode
                boundNode)
                {
                    var return_v = this_param.CreateBoundDiscardExpressionOperation((Microsoft.CodeAnalysis.CSharp.BoundDiscardExpression)boundNode);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 17399, 17471);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation
                f_10951_17567_17669(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundNode
                boundNode)
                {
                    var return_v = this_param.CreateBoundNullCoalescingAssignmentOperatorOperation((Microsoft.CodeAnalysis.CSharp.BoundNullCoalescingAssignmentOperator)boundNode);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 17567, 17669);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation
                f_10951_17755_17832(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundNode
                boundIndex)
                {
                    var return_v = this_param.CreateFromEndIndexExpressionOperation((Microsoft.CodeAnalysis.CSharp.BoundFromEndIndexExpression)boundIndex);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 17755, 17832);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation
                f_10951_17911_17974(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundNode
                boundRange)
                {
                    var return_v = this_param.CreateRangeExpressionOperation((Microsoft.CodeAnalysis.CSharp.BoundRangeExpression)boundRange);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 17911, 17974);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.ISwitchCaseOperation
                f_10951_18051_18115(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundNode
                boundSwitchSection)
                {
                    var return_v = this_param.CreateBoundSwitchSectionOperation((Microsoft.CodeAnalysis.CSharp.BoundSwitchSection)boundSwitchSection);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 18051, 18115);
                    return return_v;
                }


                System.Exception
                f_10951_18208_18238()
                {
                    var return_v = ExceptionUtilities.Unreachable;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 18208, 18238);
                    return return_v;
                }


                System.Exception
                f_10951_18328_18358()
                {
                    var return_v = ExceptionUtilities.Unreachable;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 18328, 18358);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.ISwitchExpressionOperation
                f_10951_18447_18517(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundNode
                boundSwitchExpression)
                {
                    var return_v = this_param.CreateBoundSwitchExpressionOperation((Microsoft.CodeAnalysis.CSharp.BoundSwitchExpression)boundSwitchExpression);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 18447, 18517);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.ISwitchExpressionArmOperation
                f_10951_18600_18676(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundNode
                boundSwitchExpressionArm)
                {
                    var return_v = this_param.CreateBoundSwitchExpressionArmOperation((Microsoft.CodeAnalysis.CSharp.BoundSwitchExpressionArm)boundSwitchExpressionArm);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 18600, 18676);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.IInstanceReferenceOperation
                f_10951_18774_18867(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundNode
                placeholder)
                {
                    var return_v = this_param.CreateCollectionValuePlaceholderOperation((Microsoft.CodeAnalysis.CSharp.BoundObjectOrCollectionValuePlaceholder)placeholder);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 18774, 18867);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation
                f_10951_18956_19044(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundNode
                boundFunctionPointerInvocation)
                {
                    var return_v = this_param.CreateBoundFunctionPointerInvocationOperation((Microsoft.CodeAnalysis.CSharp.BoundFunctionPointerInvocation)boundFunctionPointerInvocation);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 18956, 19044);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation
                f_10951_19136_19230(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundNode
                boundUnconvertedAddressOf)
                {
                    var return_v = this_param.CreateBoundUnconvertedAddressOfOperatorOperation((Microsoft.CodeAnalysis.CSharp.BoundUnconvertedAddressOfOperator)boundUnconvertedAddressOf);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 19136, 19230);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ConstantValue?
                f_10951_20426_20444(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.ConstantValue;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 20426, 20444);
                    return return_v;
                }


                bool
                f_10951_20492_20522(Microsoft.CodeAnalysis.CSharp.BoundNode
                this_param)
                {
                    var return_v = this_param.WasCompilerGenerated;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 20492, 20522);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundKind
                f_10951_20620_20634(Microsoft.CodeAnalysis.CSharp.BoundNode
                this_param)
                {
                    var return_v = this_param.Kind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 20620, 20634);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.IOperation>
                f_10951_20943_20975(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundNode
                boundNodeWithChildren)
                {
                    var return_v = this_param.GetIOperationChildren((Microsoft.CodeAnalysis.Operations.IBoundNodeWithIOperationChildren)boundNodeWithChildren);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 20943, 20975);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.NoneOperation
                f_10951_21005_21117(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.IOperation>
                children, Microsoft.CodeAnalysis.SemanticModel
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.ITypeSymbol?
                type, Microsoft.CodeAnalysis.ConstantValue?
                constantValue, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.NoneOperation(children, semanticModel, syntax, type: type, constantValue, isImplicit: isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 21005, 21117);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundKind
                f_10951_21209_21223(Microsoft.CodeAnalysis.CSharp.BoundNode
                this_param)
                {
                    var return_v = this_param.Kind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 21209, 21223);
                    return return_v;
                }


                System.Exception
                f_10951_21174_21224(Microsoft.CodeAnalysis.CSharp.BoundKind
                o)
                {
                    var return_v = ExceptionUtilities.UnexpectedValue((object)o);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 21174, 21224);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10951, 884, 21251);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10951, 884, 21251);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public ImmutableArray<TOperation> CreateFromArray<TBoundNode, TOperation>(ImmutableArray<TBoundNode> boundNodes) where TBoundNode : BoundNode where TOperation : class, IOperation
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10951, 21263, 21865);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 21466, 21579) || true) && (boundNodes.IsDefault)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 21466, 21579);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 21524, 21564);

                    return ImmutableArray<TOperation>.Empty;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 21466, 21579);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 21593, 21663);

                var
                builder = f_10951_21607_21662<TOperation, TBoundNode>(boundNodes.Length)
                ;
                try
                {
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 21677, 21804);
                    foreach (var node in f_10951_21698_21708_I<TBoundNode>(boundNodes))
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 21677, 21804);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 21742, 21789);

                        f_10951_21742_21788<TOperation, TBoundNode>(builder, f_10951_21775_21787<TBoundNode, TOperation>(this, node));
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 21677, 21804);
                    }
                }
                catch (System.Exception)
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoopByException(10951, 1, 128);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoop(10951, 1, 128);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 21818, 21854);

                return f_10951_21825_21853<TOperation, TBoundNode>(builder);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10951, 21263, 21865);

                Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<TOperation>
                f_10951_21607_21662<TOperation, TBoundNode>(int
                capacity) where TBoundNode : BoundNode where TOperation : class, IOperation

                {
                    var return_v = ArrayBuilder<TOperation>.GetInstance(capacity);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 21607, 21662);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_10951_21775_21787<TBoundNode, TOperation>(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, TBoundNode
                boundNode) where TBoundNode : BoundNode where TOperation : class, IOperation

                {
                    var return_v = this_param.Create((Microsoft.CodeAnalysis.CSharp.BoundNode)boundNode);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 21775, 21787);
                    return return_v;
                }


                int
                f_10951_21742_21788<TOperation, TBoundNode>(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<TOperation>
                builder, Microsoft.CodeAnalysis.IOperation
                value) where TBoundNode : BoundNode where TOperation : class, IOperation

                {
                    builder.AddIfNotNull<TOperation>((TOperation)value);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 21742, 21788);
                    return 0;
                }


                System.Collections.Immutable.ImmutableArray<TBoundNode>
                f_10951_21698_21708_I<TBoundNode>(System.Collections.Immutable.ImmutableArray<TBoundNode>
                i) where TBoundNode : BoundNode
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 21698, 21708);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<TOperation>
                f_10951_21825_21853<TOperation, TBoundNode>(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<TOperation>
                this_param) where TBoundNode : BoundNode where TOperation : class, IOperation

                {
                    var return_v = this_param.ToImmutableAndFree();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 21825, 21853);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10951, 21263, 21865);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10951, 21263, 21865);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private IMethodBodyOperation CreateMethodBodyOperation(BoundNonConstructorMethodBody boundNode)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10951, 21877, 22305);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 21997, 22294);

                return f_10951_22004_22293((IBlockOperation?)f_10951_22064_22091(this, f_10951_22071_22090(boundNode)), (IBlockOperation?)f_10951_22128_22160(this, f_10951_22135_22159(boundNode)), _semanticModel, boundNode.Syntax, isImplicit: f_10951_22262_22292(boundNode));
                DynAbs.Tracing.TraceSender.TraceExitMethod(10951, 21877, 22305);

                Microsoft.CodeAnalysis.CSharp.BoundBlock?
                f_10951_22071_22090(Microsoft.CodeAnalysis.CSharp.BoundNonConstructorMethodBody
                this_param)
                {
                    var return_v = this_param.BlockBody;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 22071, 22090);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_10951_22064_22091(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundBlock?
                boundNode)
                {
                    var return_v = this_param.Create((Microsoft.CodeAnalysis.CSharp.BoundNode?)boundNode);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 22064, 22091);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundBlock?
                f_10951_22135_22159(Microsoft.CodeAnalysis.CSharp.BoundNonConstructorMethodBody
                this_param)
                {
                    var return_v = this_param.ExpressionBody;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 22135, 22159);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_10951_22128_22160(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundBlock?
                boundNode)
                {
                    var return_v = this_param.Create((Microsoft.CodeAnalysis.CSharp.BoundNode?)boundNode);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 22128, 22160);
                    return return_v;
                }


                bool
                f_10951_22262_22292(Microsoft.CodeAnalysis.CSharp.BoundNonConstructorMethodBody
                this_param)
                {
                    var return_v = this_param.WasCompilerGenerated;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 22262, 22292);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.MethodBodyOperation
                f_10951_22004_22293(Microsoft.CodeAnalysis.IOperation?
                blockBody, Microsoft.CodeAnalysis.IOperation?
                expressionBody, Microsoft.CodeAnalysis.SemanticModel
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.MethodBodyOperation((Microsoft.CodeAnalysis.Operations.IBlockOperation?)blockBody, (Microsoft.CodeAnalysis.Operations.IBlockOperation?)expressionBody, semanticModel, syntax, isImplicit: isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 22004, 22293);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10951, 21877, 22305);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10951, 21877, 22305);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private IConstructorBodyOperation CreateConstructorBodyOperation(BoundConstructorMethodBody boundNode)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10951, 22317, 22856);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 22444, 22845);

                return f_10951_22451_22844(boundNode.Locals.GetPublicSymbols(), f_10951_22552_22581(this, f_10951_22559_22580(boundNode)), (IBlockOperation?)f_10951_22618_22645(this, f_10951_22625_22644(boundNode)), (IBlockOperation?)f_10951_22682_22714(this, f_10951_22689_22713(boundNode)), _semanticModel, boundNode.Syntax, isImplicit: f_10951_22813_22843(boundNode));
                DynAbs.Tracing.TraceSender.TraceExitMethod(10951, 22317, 22856);

                Microsoft.CodeAnalysis.CSharp.BoundExpressionStatement?
                f_10951_22559_22580(Microsoft.CodeAnalysis.CSharp.BoundConstructorMethodBody
                this_param)
                {
                    var return_v = this_param.Initializer;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 22559, 22580);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_10951_22552_22581(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpressionStatement?
                boundNode)
                {
                    var return_v = this_param.Create((Microsoft.CodeAnalysis.CSharp.BoundNode?)boundNode);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 22552, 22581);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundBlock?
                f_10951_22625_22644(Microsoft.CodeAnalysis.CSharp.BoundConstructorMethodBody
                this_param)
                {
                    var return_v = this_param.BlockBody;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 22625, 22644);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_10951_22618_22645(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundBlock?
                boundNode)
                {
                    var return_v = this_param.Create((Microsoft.CodeAnalysis.CSharp.BoundNode?)boundNode);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 22618, 22645);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundBlock?
                f_10951_22689_22713(Microsoft.CodeAnalysis.CSharp.BoundConstructorMethodBody
                this_param)
                {
                    var return_v = this_param.ExpressionBody;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 22689, 22713);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_10951_22682_22714(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundBlock?
                boundNode)
                {
                    var return_v = this_param.Create((Microsoft.CodeAnalysis.CSharp.BoundNode?)boundNode);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 22682, 22714);
                    return return_v;
                }


                bool
                f_10951_22813_22843(Microsoft.CodeAnalysis.CSharp.BoundConstructorMethodBody
                this_param)
                {
                    var return_v = this_param.WasCompilerGenerated;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 22813, 22843);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.ConstructorBodyOperation
                f_10951_22451_22844(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.ILocalSymbol>
                locals, Microsoft.CodeAnalysis.IOperation?
                initializer, Microsoft.CodeAnalysis.IOperation?
                blockBody, Microsoft.CodeAnalysis.IOperation?
                expressionBody, Microsoft.CodeAnalysis.SemanticModel
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.ConstructorBodyOperation(locals, initializer, (Microsoft.CodeAnalysis.Operations.IBlockOperation?)blockBody, (Microsoft.CodeAnalysis.Operations.IBlockOperation?)expressionBody, semanticModel, syntax, isImplicit: isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 22451, 22844);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10951, 22317, 22856);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10951, 22317, 22856);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        internal ImmutableArray<IOperation> GetIOperationChildren(IBoundNodeWithIOperationChildren boundNodeWithChildren)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10951, 22868, 23628);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 23006, 23052);

                var
                children = f_10951_23021_23051(boundNodeWithChildren)
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 23066, 23184) || true) && (children.IsDefaultOrEmpty)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 23066, 23184);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 23129, 23169);

                    return ImmutableArray<IOperation>.Empty;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 23066, 23184);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 23200, 23268);

                var
                builder = f_10951_23214_23267(children.Length)
                ;
                try
                {
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 23282, 23565);
                    foreach (BoundNode? childNode in f_10951_23315_23323_I(children))
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 23282, 23565);

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 23357, 23448) || true) && (childNode == null)
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 23357, 23448);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 23420, 23429);

                            continue;
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 23357, 23448);
                        }
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 23468, 23509);

                        IOperation
                        operation = f_10951_23491_23508(this, childNode)
                        ;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 23527, 23550);

                        f_10951_23527_23549(builder, operation);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 23282, 23565);
                    }
                }
                catch (System.Exception)
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoopByException(10951, 1, 284);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoop(10951, 1, 284);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 23581, 23617);

                return f_10951_23588_23616(builder);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10951, 22868, 23628);

                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundNode?>
                f_10951_23021_23051(Microsoft.CodeAnalysis.Operations.IBoundNodeWithIOperationChildren
                this_param)
                {
                    var return_v = this_param.Children;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 23021, 23051);
                    return return_v;
                }


                Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.IOperation>
                f_10951_23214_23267(int
                capacity)
                {
                    var return_v = ArrayBuilder<IOperation>.GetInstance(capacity);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 23214, 23267);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_10951_23491_23508(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundNode
                boundNode)
                {
                    var return_v = this_param.Create(boundNode);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 23491, 23508);
                    return return_v;
                }


                int
                f_10951_23527_23549(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.IOperation>
                this_param, Microsoft.CodeAnalysis.IOperation
                item)
                {
                    this_param.Add(item);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 23527, 23549);
                    return 0;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundNode?>
                f_10951_23315_23323_I(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundNode?>
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 23315, 23323);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.IOperation>
                f_10951_23588_23616(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.IOperation>
                this_param)
                {
                    var return_v = this_param.ToImmutableAndFree();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 23588, 23616);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10951, 22868, 23628);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10951, 22868, 23628);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        internal ImmutableArray<IVariableDeclaratorOperation> CreateVariableDeclarator(BoundNode declaration, SyntaxNode declarationSyntax)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10951, 23640, 25087);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 23796, 25076);

                switch (f_10951_23804_23820(declaration))
                {

                    case BoundKind.LocalDeclaration:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 23796, 25076);
                        {
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 23970, 24203);

                            return f_10951_23977_24202(f_10951_23999_24201(this, declaration, ((DynAbs.Tracing.TraceSender.Conditional_F1(10951, 24099, 24152) || (((declarationSyntax is VariableDeclarationSyntax temp) && DynAbs.Tracing.TraceSender.Conditional_F2(10951, 24154, 24171)) || DynAbs.Tracing.TraceSender.Conditional_F3(10951, 24174, 24178))) ? f_10951_24154_24168((VariableDeclarationSyntax)declarationSyntax)[0] : null) ?? (DynAbs.Tracing.TraceSender.Expression_Null<Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclaratorSyntax?>(10951, 24098, 24200) ?? declarationSyntax)));
                        }
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 23796, 25076);

                    case BoundKind.MultipleLocalDeclarations:
                    case BoundKind.UsingLocalDeclarations:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 23796, 25076);
                        {
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 24390, 24464);

                            var
                            multipleDeclaration = (BoundMultipleLocalDeclarationsBase)declaration
                            ;
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 24490, 24605);

                            var
                            builder = f_10951_24504_24604(multipleDeclaration.LocalDeclarations.Length)
                            ;
                            try
                            {
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 24631, 24869);
                                foreach (var decl in f_10951_24652_24689_I(f_10951_24652_24689(multipleDeclaration)))
                                {
                                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 24631, 24869);
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 24747, 24842);

                                    f_10951_24747_24841(builder, f_10951_24789_24840(this, decl, decl.Syntax));
                                    DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 24631, 24869);
                                }
                            }
                            catch (System.Exception)
                            {
                                DynAbs.Tracing.TraceSender.TraceExitLoopByException(10951, 1, 239);
                                throw;
                            }
                            finally
                            {
                                DynAbs.Tracing.TraceSender.TraceExitLoop(10951, 1, 239);
                            }
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 24895, 24931);

                            return f_10951_24902_24930(builder);
                        }
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 23796, 25076);

                    default:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 23796, 25076);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 25002, 25061);

                        throw f_10951_25008_25060(f_10951_25043_25059(declaration));
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 23796, 25076);
                }
                DynAbs.Tracing.TraceSender.TraceExitMethod(10951, 23640, 25087);

                Microsoft.CodeAnalysis.CSharp.BoundKind
                f_10951_23804_23820(Microsoft.CodeAnalysis.CSharp.BoundNode
                this_param)
                {
                    var return_v = this_param.Kind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 23804, 23820);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SeparatedSyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclaratorSyntax>
                f_10951_24154_24168(Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclarationSyntax
                this_param)
                {
                    var return_v = this_param.Variables;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 24154, 24168);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.IVariableDeclaratorOperation
                f_10951_23999_24201(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundNode
                boundLocalDeclaration, Microsoft.CodeAnalysis.SyntaxNode
                syntax)
                {
                    var return_v = this_param.CreateVariableDeclaratorInternal((Microsoft.CodeAnalysis.CSharp.BoundLocalDeclaration)boundLocalDeclaration, syntax);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 23999, 24201);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Operations.IVariableDeclaratorOperation>
                f_10951_23977_24202(Microsoft.CodeAnalysis.Operations.IVariableDeclaratorOperation
                item)
                {
                    var return_v = ImmutableArray.Create(item);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 23977, 24202);
                    return return_v;
                }


                Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.Operations.IVariableDeclaratorOperation>
                f_10951_24504_24604(int
                capacity)
                {
                    var return_v = ArrayBuilder<IVariableDeclaratorOperation>.GetInstance(capacity);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 24504, 24604);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundLocalDeclaration>
                f_10951_24652_24689(Microsoft.CodeAnalysis.CSharp.BoundMultipleLocalDeclarationsBase
                this_param)
                {
                    var return_v = this_param.LocalDeclarations;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 24652, 24689);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.IVariableDeclaratorOperation
                f_10951_24789_24840(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundLocalDeclaration
                boundLocalDeclaration, Microsoft.CodeAnalysis.SyntaxNode
                syntax)
                {
                    var return_v = this_param.CreateVariableDeclaratorInternal(boundLocalDeclaration, syntax);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 24789, 24840);
                    return return_v;
                }


                int
                f_10951_24747_24841(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.Operations.IVariableDeclaratorOperation>
                this_param, Microsoft.CodeAnalysis.Operations.IVariableDeclaratorOperation
                item)
                {
                    this_param.Add(item);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 24747, 24841);
                    return 0;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundLocalDeclaration>
                f_10951_24652_24689_I(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundLocalDeclaration>
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 24652, 24689);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Operations.IVariableDeclaratorOperation>
                f_10951_24902_24930(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.Operations.IVariableDeclaratorOperation>
                this_param)
                {
                    var return_v = this_param.ToImmutableAndFree();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 24902, 24930);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundKind
                f_10951_25043_25059(Microsoft.CodeAnalysis.CSharp.BoundNode
                this_param)
                {
                    var return_v = this_param.Kind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 25043, 25059);
                    return return_v;
                }


                System.Exception
                f_10951_25008_25060(Microsoft.CodeAnalysis.CSharp.BoundKind
                o)
                {
                    var return_v = ExceptionUtilities.UnexpectedValue((object)o);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 25008, 25060);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10951, 23640, 25087);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10951, 23640, 25087);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private IPlaceholderOperation CreateBoundDeconstructValuePlaceholderOperation(BoundDeconstructValuePlaceholder boundDeconstructValuePlaceholder)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10951, 25099, 25631);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 25268, 25328);

                SyntaxNode
                syntax = boundDeconstructValuePlaceholder.Syntax
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 25342, 25417);

                ITypeSymbol?
                type = f_10951_25362_25416(boundDeconstructValuePlaceholder)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 25431, 25503);

                bool
                isImplicit = f_10951_25449_25502(boundDeconstructValuePlaceholder)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 25517, 25620);

                return f_10951_25524_25619(PlaceholderKind.Unspecified, _semanticModel, syntax, type, isImplicit);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10951, 25099, 25631);

                Microsoft.CodeAnalysis.ITypeSymbol?
                f_10951_25362_25416(Microsoft.CodeAnalysis.CSharp.BoundDeconstructValuePlaceholder
                this_param)
                {
                    var return_v = this_param.GetPublicTypeSymbol();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 25362, 25416);
                    return return_v;
                }


                bool
                f_10951_25449_25502(Microsoft.CodeAnalysis.CSharp.BoundDeconstructValuePlaceholder
                this_param)
                {
                    var return_v = this_param.WasCompilerGenerated;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 25449, 25502);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.PlaceholderOperation
                f_10951_25524_25619(Microsoft.CodeAnalysis.Operations.PlaceholderKind
                placeholderKind, Microsoft.CodeAnalysis.SemanticModel
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.ITypeSymbol?
                type, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.PlaceholderOperation(placeholderKind, semanticModel, syntax, type, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 25524, 25619);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10951, 25099, 25631);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10951, 25099, 25631);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private IDeconstructionAssignmentOperation CreateBoundDeconstructionAssignmentOperator(BoundDeconstructionAssignmentOperator boundDeconstructionAssignmentOperator)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10951, 25643, 26618);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 25831, 25902);

                IOperation
                target = f_10951_25851_25901(this, f_10951_25858_25900(boundDeconstructionAssignmentOperator))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 26148, 26227);

                IOperation
                value = f_10951_26167_26226(this, f_10951_26174_26225(f_10951_26174_26217(boundDeconstructionAssignmentOperator)))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 26241, 26306);

                SyntaxNode
                syntax = boundDeconstructionAssignmentOperator.Syntax
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 26320, 26400);

                ITypeSymbol?
                type = f_10951_26340_26399(boundDeconstructionAssignmentOperator)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 26414, 26491);

                bool
                isImplicit = f_10951_26432_26490(boundDeconstructionAssignmentOperator)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 26505, 26607);

                return f_10951_26512_26606(target, value, _semanticModel, syntax, type, isImplicit);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10951, 25643, 26618);

                Microsoft.CodeAnalysis.CSharp.BoundTupleExpression
                f_10951_25858_25900(Microsoft.CodeAnalysis.CSharp.BoundDeconstructionAssignmentOperator
                this_param)
                {
                    var return_v = this_param.Left;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 25858, 25900);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_10951_25851_25901(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundTupleExpression
                boundNode)
                {
                    var return_v = this_param.Create((Microsoft.CodeAnalysis.CSharp.BoundNode)boundNode);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 25851, 25901);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundConversion
                f_10951_26174_26217(Microsoft.CodeAnalysis.CSharp.BoundDeconstructionAssignmentOperator
                this_param)
                {
                    var return_v = this_param.Right;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 26174, 26217);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10951_26174_26225(Microsoft.CodeAnalysis.CSharp.BoundConversion
                this_param)
                {
                    var return_v = this_param.Operand;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 26174, 26225);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_10951_26167_26226(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                boundNode)
                {
                    var return_v = this_param.Create((Microsoft.CodeAnalysis.CSharp.BoundNode)boundNode);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 26167, 26226);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ITypeSymbol?
                f_10951_26340_26399(Microsoft.CodeAnalysis.CSharp.BoundDeconstructionAssignmentOperator
                this_param)
                {
                    var return_v = this_param.GetPublicTypeSymbol();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 26340, 26399);
                    return return_v;
                }


                bool
                f_10951_26432_26490(Microsoft.CodeAnalysis.CSharp.BoundDeconstructionAssignmentOperator
                this_param)
                {
                    var return_v = this_param.WasCompilerGenerated;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 26432, 26490);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.DeconstructionAssignmentOperation
                f_10951_26512_26606(Microsoft.CodeAnalysis.IOperation
                target, Microsoft.CodeAnalysis.IOperation
                value, Microsoft.CodeAnalysis.SemanticModel
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.ITypeSymbol?
                type, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.DeconstructionAssignmentOperation(target, value, semanticModel, syntax, type, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 26512, 26606);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10951, 25643, 26618);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10951, 25643, 26618);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private IOperation CreateBoundCallOperation(BoundCall boundCall)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10951, 26630, 27850);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 26719, 26764);

                MethodSymbol
                targetMethod = f_10951_26747_26763(boundCall)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 26778, 26815);

                SyntaxNode
                syntax = boundCall.Syntax
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 26829, 26881);

                ITypeSymbol?
                type = f_10951_26849_26880(boundCall)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 26895, 26950);

                ConstantValue?
                constantValue = f_10951_26926_26949(boundCall)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 26964, 27013);

                bool
                isImplicit = f_10951_26982_27012(boundCall)
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 27029, 27418) || true) && (f_10951_27033_27072_M(!boundCall.OriginalMethodsOpt.IsDefault) || (DynAbs.Tracing.TraceSender.Expression_False(10951, 27033, 27127) || f_10951_27076_27127(this, f_10951_27092_27112(boundCall), targetMethod)))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 27029, 27418);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 27161, 27290);

                    ImmutableArray<IOperation>
                    children = f_10951_27199_27289(this, f_10951_27238_27288(((IBoundInvalidNode)boundCall)))
                    ;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 27308, 27403);

                    return f_10951_27315_27402(children, _semanticModel, syntax, type, constantValue, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 27029, 27418);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 27434, 27502);

                bool
                isVirtual = f_10951_27451_27501(this, targetMethod, f_10951_27479_27500(boundCall))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 27516, 27600);

                IOperation?
                receiver = f_10951_27539_27599(this, f_10951_27563_27584(boundCall), targetMethod)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 27614, 27688);

                ImmutableArray<IArgumentOperation>
                arguments = f_10951_27661_27687(this, boundCall)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 27702, 27839);

                return f_10951_27709_27838(f_10951_27733_27763(targetMethod), receiver, isVirtual, arguments, _semanticModel, syntax, type, isImplicit);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10951, 26630, 27850);

                Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                f_10951_26747_26763(Microsoft.CodeAnalysis.CSharp.BoundCall
                this_param)
                {
                    var return_v = this_param.Method;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 26747, 26763);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ITypeSymbol?
                f_10951_26849_26880(Microsoft.CodeAnalysis.CSharp.BoundCall
                this_param)
                {
                    var return_v = this_param.GetPublicTypeSymbol();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 26849, 26880);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ConstantValue?
                f_10951_26926_26949(Microsoft.CodeAnalysis.CSharp.BoundCall
                this_param)
                {
                    var return_v = this_param.ConstantValue;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 26926, 26949);
                    return return_v;
                }


                bool
                f_10951_26982_27012(Microsoft.CodeAnalysis.CSharp.BoundCall
                this_param)
                {
                    var return_v = this_param.WasCompilerGenerated;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 26982, 27012);
                    return return_v;
                }


                bool
                f_10951_27033_27072_M(bool
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 27033, 27072);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.LookupResultKind
                f_10951_27092_27112(Microsoft.CodeAnalysis.CSharp.BoundCall
                this_param)
                {
                    var return_v = this_param.ResultKind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 27092, 27112);
                    return return_v;
                }


                bool
                f_10951_27076_27127(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.LookupResultKind
                resultKind, Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                targetMethod)
                {
                    var return_v = this_param.IsMethodInvalid(resultKind, targetMethod);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 27076, 27127);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundNode>
                f_10951_27238_27288(Microsoft.CodeAnalysis.CSharp.IBoundInvalidNode
                this_param)
                {
                    var return_v = this_param.InvalidNodeChildren;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 27238, 27288);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.IOperation>
                f_10951_27199_27289(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundNode>
                boundNodes)
                {
                    var return_v = this_param.CreateFromArray<Microsoft.CodeAnalysis.CSharp.BoundNode, Microsoft.CodeAnalysis.IOperation>(boundNodes);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 27199, 27289);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.InvalidOperation
                f_10951_27315_27402(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.IOperation>
                children, Microsoft.CodeAnalysis.SemanticModel
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.ITypeSymbol?
                type, Microsoft.CodeAnalysis.ConstantValue?
                constantValue, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.InvalidOperation(children, semanticModel, syntax, type, constantValue, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 27315, 27402);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression?
                f_10951_27479_27500(Microsoft.CodeAnalysis.CSharp.BoundCall
                this_param)
                {
                    var return_v = this_param.ReceiverOpt;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 27479, 27500);
                    return return_v;
                }


                bool
                f_10951_27451_27501(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                targetMethod, Microsoft.CodeAnalysis.CSharp.BoundExpression?
                receiver)
                {
                    var return_v = this_param.IsCallVirtual(targetMethod, receiver);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 27451, 27501);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression?
                f_10951_27563_27584(Microsoft.CodeAnalysis.CSharp.BoundCall
                this_param)
                {
                    var return_v = this_param.ReceiverOpt;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 27563, 27584);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_10951_27539_27599(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression?
                instance, Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                symbol)
                {
                    var return_v = this_param.CreateReceiverOperation((Microsoft.CodeAnalysis.CSharp.BoundNode?)instance, (Microsoft.CodeAnalysis.CSharp.Symbol)symbol);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 27539, 27599);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Operations.IArgumentOperation>
                f_10951_27661_27687(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundCall
                containingExpression)
                {
                    var return_v = this_param.DeriveArguments((Microsoft.CodeAnalysis.CSharp.BoundNode)containingExpression);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 27661, 27687);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IMethodSymbol?
                f_10951_27733_27763(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                symbol)
                {
                    var return_v = symbol.GetPublicSymbol();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 27733, 27763);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.InvocationOperation
                f_10951_27709_27838(Microsoft.CodeAnalysis.IMethodSymbol
                targetMethod, Microsoft.CodeAnalysis.IOperation?
                instance, bool
                isVirtual, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Operations.IArgumentOperation>
                arguments, Microsoft.CodeAnalysis.SemanticModel
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.ITypeSymbol?
                type, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.InvocationOperation(targetMethod, instance, isVirtual, arguments, semanticModel, syntax, type, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 27709, 27838);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10951, 26630, 27850);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10951, 26630, 27850);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private IOperation CreateBoundFunctionPointerInvocationOperation(BoundFunctionPointerInvocation boundFunctionPointerInvocation)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10951, 27862, 28876);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 28014, 28087);

                ITypeSymbol?
                type = f_10951_28034_28086(boundFunctionPointerInvocation)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 28101, 28159);

                SyntaxNode
                syntax = boundFunctionPointerInvocation.Syntax
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 28173, 28243);

                bool
                isImplicit = f_10951_28191_28242(boundFunctionPointerInvocation)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 28257, 28293);

                ImmutableArray<IOperation>
                children
                = default(ImmutableArray<IOperation>);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 28309, 28672) || true) && (f_10951_28313_28354(boundFunctionPointerInvocation) != LookupResultKind.Viable)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 28309, 28672);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 28415, 28538);

                    children = f_10951_28426_28537(this, f_10951_28465_28536(((IBoundInvalidNode)boundFunctionPointerInvocation)));
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 28556, 28657);

                    return f_10951_28563_28656(children, _semanticModel, syntax, type, constantValue: null, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 28309, 28672);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 28688, 28753);

                children = f_10951_28699_28752(this, boundFunctionPointerInvocation);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 28767, 28865);

                return f_10951_28774_28864(children, _semanticModel, syntax, type, constantValue: null, isImplicit);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10951, 27862, 28876);

                Microsoft.CodeAnalysis.ITypeSymbol?
                f_10951_28034_28086(Microsoft.CodeAnalysis.CSharp.BoundFunctionPointerInvocation
                this_param)
                {
                    var return_v = this_param.GetPublicTypeSymbol();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 28034, 28086);
                    return return_v;
                }


                bool
                f_10951_28191_28242(Microsoft.CodeAnalysis.CSharp.BoundFunctionPointerInvocation
                this_param)
                {
                    var return_v = this_param.WasCompilerGenerated;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 28191, 28242);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.LookupResultKind
                f_10951_28313_28354(Microsoft.CodeAnalysis.CSharp.BoundFunctionPointerInvocation
                this_param)
                {
                    var return_v = this_param.ResultKind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 28313, 28354);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundNode>
                f_10951_28465_28536(Microsoft.CodeAnalysis.CSharp.IBoundInvalidNode
                this_param)
                {
                    var return_v = this_param.InvalidNodeChildren;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 28465, 28536);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.IOperation>
                f_10951_28426_28537(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundNode>
                boundNodes)
                {
                    var return_v = this_param.CreateFromArray<Microsoft.CodeAnalysis.CSharp.BoundNode, Microsoft.CodeAnalysis.IOperation>(boundNodes);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 28426, 28537);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.InvalidOperation
                f_10951_28563_28656(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.IOperation>
                children, Microsoft.CodeAnalysis.SemanticModel
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.ITypeSymbol?
                type, Microsoft.CodeAnalysis.ConstantValue?
                constantValue, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.InvalidOperation(children, semanticModel, syntax, type, constantValue: constantValue, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 28563, 28656);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.IOperation>
                f_10951_28699_28752(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundFunctionPointerInvocation
                boundNodeWithChildren)
                {
                    var return_v = this_param.GetIOperationChildren((Microsoft.CodeAnalysis.Operations.IBoundNodeWithIOperationChildren)boundNodeWithChildren);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 28699, 28752);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.NoneOperation
                f_10951_28774_28864(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.IOperation>
                children, Microsoft.CodeAnalysis.SemanticModel
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.ITypeSymbol?
                type, Microsoft.CodeAnalysis.ConstantValue?
                constantValue, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.NoneOperation(children, semanticModel, syntax, type, constantValue: constantValue, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 28774, 28864);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10951, 27862, 28876);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10951, 27862, 28876);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private IOperation CreateBoundUnconvertedAddressOfOperatorOperation(BoundUnconvertedAddressOfOperator boundUnconvertedAddressOf)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10951, 28888, 29358);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 29041, 29347);

                return f_10951_29048_29346(f_10951_29089_29130(this, f_10951_29096_29129(boundUnconvertedAddressOf)), _semanticModel, boundUnconvertedAddressOf.Syntax, f_10951_29233_29280(boundUnconvertedAddressOf), f_10951_29299_29345(boundUnconvertedAddressOf));
                DynAbs.Tracing.TraceSender.TraceExitMethod(10951, 28888, 29358);

                Microsoft.CodeAnalysis.CSharp.BoundMethodGroup
                f_10951_29096_29129(Microsoft.CodeAnalysis.CSharp.BoundUnconvertedAddressOfOperator
                this_param)
                {
                    var return_v = this_param.Operand;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 29096, 29129);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_10951_29089_29130(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundMethodGroup
                boundNode)
                {
                    var return_v = this_param.Create((Microsoft.CodeAnalysis.CSharp.BoundNode)boundNode);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 29089, 29130);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ITypeSymbol?
                f_10951_29233_29280(Microsoft.CodeAnalysis.CSharp.BoundUnconvertedAddressOfOperator
                this_param)
                {
                    var return_v = this_param.GetPublicTypeSymbol();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 29233, 29280);
                    return return_v;
                }


                bool
                f_10951_29299_29345(Microsoft.CodeAnalysis.CSharp.BoundUnconvertedAddressOfOperator
                this_param)
                {
                    var return_v = this_param.WasCompilerGenerated;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 29299, 29345);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.AddressOfOperation
                f_10951_29048_29346(Microsoft.CodeAnalysis.IOperation
                reference, Microsoft.CodeAnalysis.SemanticModel
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.ITypeSymbol?
                type, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.AddressOfOperation(reference, semanticModel, syntax, type, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 29048, 29346);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10951, 28888, 29358);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10951, 28888, 29358);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        internal ImmutableArray<IOperation> CreateIgnoredDimensions(BoundNode declaration, SyntaxNode declarationSyntax)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10951, 29370, 31025);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 29507, 31014);

                switch (f_10951_29515_29531(declaration))
                {

                    case BoundKind.LocalDeclaration:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 29507, 31014);
                        {
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 29646, 29738);

                            BoundTypeExpression?
                            declaredTypeOpt = f_10951_29685_29737(((BoundLocalDeclaration)declaration))
                            ;
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 29764, 29802);

                            f_10951_29764_29801(declaredTypeOpt != null);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 29828, 29916);

                            return f_10951_29835_29915(this, f_10951_29880_29914(declaredTypeOpt));
                        }
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 29507, 31014);

                    case BoundKind.MultipleLocalDeclarations:
                    case BoundKind.UsingLocalDeclarations:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 29507, 31014);
                        {
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 30103, 30190);

                            var
                            declarations = f_10951_30122_30189(((BoundMultipleLocalDeclarationsBase)declaration))
                            ;
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 30216, 30259);

                            ImmutableArray<BoundExpression>
                            dimensions
                            = default(ImmutableArray<BoundExpression>);

                            if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 30285, 30779) || true) && (declarations.Length > 0)
                            )

                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 30285, 30779);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 30370, 30441);

                                BoundTypeExpression?
                                declaredTypeOpt = f_10951_30409_30440(declarations[0])
                                ;
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 30471, 30509);

                                f_10951_30471_30508(declaredTypeOpt != null);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 30539, 30587);

                                dimensions = f_10951_30552_30586(declaredTypeOpt);
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 30285, 30779);
                            }

                            else

                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 30285, 30779);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 30701, 30752);

                                dimensions = ImmutableArray<BoundExpression>.Empty;
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 30285, 30779);
                            }
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 30805, 30869);

                            return f_10951_30812_30868(this, dimensions);
                        }
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 29507, 31014);

                    default:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 29507, 31014);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 30940, 30999);

                        throw f_10951_30946_30998(f_10951_30981_30997(declaration));
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 29507, 31014);
                }
                DynAbs.Tracing.TraceSender.TraceExitMethod(10951, 29370, 31025);

                Microsoft.CodeAnalysis.CSharp.BoundKind
                f_10951_29515_29531(Microsoft.CodeAnalysis.CSharp.BoundNode
                this_param)
                {
                    var return_v = this_param.Kind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 29515, 29531);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundTypeExpression?
                f_10951_29685_29737(Microsoft.CodeAnalysis.CSharp.BoundLocalDeclaration
                this_param)
                {
                    var return_v = this_param.DeclaredTypeOpt;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 29685, 29737);
                    return return_v;
                }


                int
                f_10951_29764_29801(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 29764, 29801);
                    return 0;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                f_10951_29880_29914(Microsoft.CodeAnalysis.CSharp.BoundTypeExpression
                this_param)
                {
                    var return_v = this_param.BoundDimensionsOpt;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 29880, 29914);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.IOperation>
                f_10951_29835_29915(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                boundNodes)
                {
                    var return_v = this_param.CreateFromArray<Microsoft.CodeAnalysis.CSharp.BoundExpression, Microsoft.CodeAnalysis.IOperation>(boundNodes);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 29835, 29915);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundLocalDeclaration>
                f_10951_30122_30189(Microsoft.CodeAnalysis.CSharp.BoundMultipleLocalDeclarationsBase
                this_param)
                {
                    var return_v = this_param.LocalDeclarations;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 30122, 30189);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundTypeExpression?
                f_10951_30409_30440(Microsoft.CodeAnalysis.CSharp.BoundLocalDeclaration
                this_param)
                {
                    var return_v = this_param.DeclaredTypeOpt;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 30409, 30440);
                    return return_v;
                }


                int
                f_10951_30471_30508(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 30471, 30508);
                    return 0;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                f_10951_30552_30586(Microsoft.CodeAnalysis.CSharp.BoundTypeExpression
                this_param)
                {
                    var return_v = this_param.BoundDimensionsOpt;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 30552, 30586);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.IOperation>
                f_10951_30812_30868(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                boundNodes)
                {
                    var return_v = this_param.CreateFromArray<Microsoft.CodeAnalysis.CSharp.BoundExpression, Microsoft.CodeAnalysis.IOperation>(boundNodes);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 30812, 30868);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundKind
                f_10951_30981_30997(Microsoft.CodeAnalysis.CSharp.BoundNode
                this_param)
                {
                    var return_v = this_param.Kind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 30981, 30997);
                    return return_v;
                }


                System.Exception
                f_10951_30946_30998(Microsoft.CodeAnalysis.CSharp.BoundKind
                o)
                {
                    var return_v = ExceptionUtilities.UnexpectedValue((object)o);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 30946, 30998);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10951, 29370, 31025);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10951, 29370, 31025);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        internal IOperation CreateBoundLocalOperation(BoundLocal boundLocal, bool createDeclaration = true)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10951, 31037, 32251);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 31161, 31223);

                ILocalSymbol
                local = f_10951_31182_31222(f_10951_31182_31204(boundLocal))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 31237, 31319);

                bool
                isDeclaration = f_10951_31258_31284(boundLocal) != BoundLocalDeclarationKind.None
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 31333, 31371);

                SyntaxNode
                syntax = boundLocal.Syntax
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 31385, 31438);

                ITypeSymbol?
                type = f_10951_31405_31437(boundLocal)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 31452, 31508);

                ConstantValue?
                constantValue = f_10951_31483_31507(boundLocal)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 31522, 31572);

                bool
                isImplicit = f_10951_31540_31571(boundLocal)
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 31586, 32112) || true) && (isDeclaration && (DynAbs.Tracing.TraceSender.Expression_True(10951, 31590, 31672) && syntax is DeclarationExpressionSyntax declarationExpressionSyntax))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 31586, 32112);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 31706, 31755);

                    syntax = f_10951_31715_31754(declarationExpressionSyntax);

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 31773, 32097) || true) && (createDeclaration)
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 31773, 32097);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 31836, 31928);

                        IOperation
                        localReference = f_10951_31864_31927(this, boundLocal, createDeclaration: false)
                        ;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 31950, 32078);

                        return f_10951_31957_32077(localReference, _semanticModel, declarationExpressionSyntax, type, isImplicit: false);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 31773, 32097);
                    }
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 31586, 32112);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 32126, 32240);

                return f_10951_32133_32239(local, isDeclaration, _semanticModel, syntax, type, constantValue, isImplicit);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10951, 31037, 32251);

                Microsoft.CodeAnalysis.CSharp.Symbols.LocalSymbol
                f_10951_31182_31204(Microsoft.CodeAnalysis.CSharp.BoundLocal
                this_param)
                {
                    var return_v = this_param.LocalSymbol;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 31182, 31204);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ILocalSymbol?
                f_10951_31182_31222(Microsoft.CodeAnalysis.CSharp.Symbols.LocalSymbol
                symbol)
                {
                    var return_v = symbol.GetPublicSymbol();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 31182, 31222);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundLocalDeclarationKind
                f_10951_31258_31284(Microsoft.CodeAnalysis.CSharp.BoundLocal
                this_param)
                {
                    var return_v = this_param.DeclarationKind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 31258, 31284);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ITypeSymbol?
                f_10951_31405_31437(Microsoft.CodeAnalysis.CSharp.BoundLocal
                this_param)
                {
                    var return_v = this_param.GetPublicTypeSymbol();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 31405, 31437);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ConstantValue?
                f_10951_31483_31507(Microsoft.CodeAnalysis.CSharp.BoundLocal
                this_param)
                {
                    var return_v = this_param.ConstantValue;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 31483, 31507);
                    return return_v;
                }


                bool
                f_10951_31540_31571(Microsoft.CodeAnalysis.CSharp.BoundLocal
                this_param)
                {
                    var return_v = this_param.WasCompilerGenerated;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 31540, 31571);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Syntax.VariableDesignationSyntax
                f_10951_31715_31754(Microsoft.CodeAnalysis.CSharp.Syntax.DeclarationExpressionSyntax
                this_param)
                {
                    var return_v = this_param.Designation;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 31715, 31754);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation
                f_10951_31864_31927(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundLocal
                boundLocal, bool
                createDeclaration)
                {
                    var return_v = this_param.CreateBoundLocalOperation(boundLocal, createDeclaration: createDeclaration);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 31864, 31927);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.DeclarationExpressionOperation
                f_10951_31957_32077(Microsoft.CodeAnalysis.IOperation
                expression, Microsoft.CodeAnalysis.SemanticModel
                semanticModel, Microsoft.CodeAnalysis.CSharp.Syntax.DeclarationExpressionSyntax
                syntax, Microsoft.CodeAnalysis.ITypeSymbol?
                type, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.DeclarationExpressionOperation(expression, semanticModel, (Microsoft.CodeAnalysis.SyntaxNode)syntax, type, isImplicit: isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 31957, 32077);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.LocalReferenceOperation
                f_10951_32133_32239(Microsoft.CodeAnalysis.ILocalSymbol
                local, bool
                isDeclaration, Microsoft.CodeAnalysis.SemanticModel
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.ITypeSymbol?
                type, Microsoft.CodeAnalysis.ConstantValue?
                constantValue, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.LocalReferenceOperation(local, isDeclaration, semanticModel, syntax, type, constantValue, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 32133, 32239);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10951, 31037, 32251);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10951, 31037, 32251);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        internal IOperation CreateBoundFieldAccessOperation(BoundFieldAccess boundFieldAccess, bool createDeclaration = true)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10951, 32263, 33636);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 32405, 32473);

                IFieldSymbol
                field = f_10951_32426_32472(f_10951_32426_32454(boundFieldAccess))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 32487, 32539);

                bool
                isDeclaration = f_10951_32508_32538(boundFieldAccess)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 32553, 32597);

                SyntaxNode
                syntax = boundFieldAccess.Syntax
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 32611, 32670);

                ITypeSymbol?
                type = f_10951_32631_32669(boundFieldAccess)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 32684, 32746);

                ConstantValue?
                constantValue = f_10951_32715_32745(boundFieldAccess)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 32760, 32816);

                bool
                isImplicit = f_10951_32778_32815(boundFieldAccess)
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 32830, 33364) || true) && (isDeclaration && (DynAbs.Tracing.TraceSender.Expression_True(10951, 32834, 32916) && syntax is DeclarationExpressionSyntax declarationExpressionSyntax))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 32830, 33364);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 32950, 32999);

                    syntax = f_10951_32959_32998(declarationExpressionSyntax);

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 33019, 33349) || true) && (createDeclaration)
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 33019, 33349);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 33082, 33183);

                        IOperation
                        fieldAccess = f_10951_33107_33182(this, boundFieldAccess, createDeclaration: false)
                        ;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 33205, 33330);

                        return f_10951_33212_33329(fieldAccess, _semanticModel, declarationExpressionSyntax, type, isImplicit: false);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 33019, 33349);
                    }
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 32830, 33364);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 33380, 33487);

                IOperation?
                instance = f_10951_33403_33486(this, f_10951_33427_33455(boundFieldAccess), f_10951_33457_33485(boundFieldAccess))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 33501, 33625);

                return f_10951_33508_33624(field, isDeclaration, instance, _semanticModel, syntax, type, constantValue, isImplicit);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10951, 32263, 33636);

                Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol
                f_10951_32426_32454(Microsoft.CodeAnalysis.CSharp.BoundFieldAccess
                this_param)
                {
                    var return_v = this_param.FieldSymbol;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 32426, 32454);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IFieldSymbol?
                f_10951_32426_32472(Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol
                symbol)
                {
                    var return_v = symbol.GetPublicSymbol();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 32426, 32472);
                    return return_v;
                }


                bool
                f_10951_32508_32538(Microsoft.CodeAnalysis.CSharp.BoundFieldAccess
                this_param)
                {
                    var return_v = this_param.IsDeclaration;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 32508, 32538);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ITypeSymbol?
                f_10951_32631_32669(Microsoft.CodeAnalysis.CSharp.BoundFieldAccess
                this_param)
                {
                    var return_v = this_param.GetPublicTypeSymbol();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 32631, 32669);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ConstantValue?
                f_10951_32715_32745(Microsoft.CodeAnalysis.CSharp.BoundFieldAccess
                this_param)
                {
                    var return_v = this_param.ConstantValue;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 32715, 32745);
                    return return_v;
                }


                bool
                f_10951_32778_32815(Microsoft.CodeAnalysis.CSharp.BoundFieldAccess
                this_param)
                {
                    var return_v = this_param.WasCompilerGenerated;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 32778, 32815);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Syntax.VariableDesignationSyntax
                f_10951_32959_32998(Microsoft.CodeAnalysis.CSharp.Syntax.DeclarationExpressionSyntax
                this_param)
                {
                    var return_v = this_param.Designation;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 32959, 32998);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation
                f_10951_33107_33182(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundFieldAccess
                boundFieldAccess, bool
                createDeclaration)
                {
                    var return_v = this_param.CreateBoundFieldAccessOperation(boundFieldAccess, createDeclaration: createDeclaration);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 33107, 33182);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.DeclarationExpressionOperation
                f_10951_33212_33329(Microsoft.CodeAnalysis.IOperation
                expression, Microsoft.CodeAnalysis.SemanticModel
                semanticModel, Microsoft.CodeAnalysis.CSharp.Syntax.DeclarationExpressionSyntax
                syntax, Microsoft.CodeAnalysis.ITypeSymbol?
                type, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.DeclarationExpressionOperation(expression, semanticModel, (Microsoft.CodeAnalysis.SyntaxNode)syntax, type, isImplicit: isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 33212, 33329);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression?
                f_10951_33427_33455(Microsoft.CodeAnalysis.CSharp.BoundFieldAccess
                this_param)
                {
                    var return_v = this_param.ReceiverOpt;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 33427, 33455);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol
                f_10951_33457_33485(Microsoft.CodeAnalysis.CSharp.BoundFieldAccess
                this_param)
                {
                    var return_v = this_param.FieldSymbol;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 33457, 33485);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_10951_33403_33486(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression?
                instance, Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol
                symbol)
                {
                    var return_v = this_param.CreateReceiverOperation((Microsoft.CodeAnalysis.CSharp.BoundNode?)instance, (Microsoft.CodeAnalysis.CSharp.Symbol)symbol);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 33403, 33486);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.FieldReferenceOperation
                f_10951_33508_33624(Microsoft.CodeAnalysis.IFieldSymbol
                field, bool
                isDeclaration, Microsoft.CodeAnalysis.IOperation?
                instance, Microsoft.CodeAnalysis.SemanticModel
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.ITypeSymbol?
                type, Microsoft.CodeAnalysis.ConstantValue?
                constantValue, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.FieldReferenceOperation(field, isDeclaration, instance, semanticModel, syntax, type, constantValue, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 33508, 33624);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10951, 32263, 33636);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10951, 32263, 33636);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        internal IOperation? CreateBoundPropertyReferenceInstance(BoundNode boundNode)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10951, 33648, 34615);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 33751, 34604);

                switch (boundNode)
                {

                    case BoundPropertyAccess boundPropertyAccess:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 33751, 34604);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 33869, 33969);

                        return f_10951_33876_33968(this, f_10951_33900_33931(boundPropertyAccess), f_10951_33933_33967(boundPropertyAccess));
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 33751, 34604);

                    case BoundObjectInitializerMember boundObjectInitializerMember:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 33751, 34604);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 34072, 34301);

                        return (DynAbs.Tracing.TraceSender.Conditional_F1(10951, 34079, 34138) || ((f_10951_34079_34130_M(DynAbs.Tracing.TraceSender.TraceConditionalAccessExpression(f_10951_34079_34120(boundObjectInitializerMember), 10951, 34079, 34130)?.IsStatic) == true && DynAbs.Tracing.TraceSender.Conditional_F2(10951, 34166, 34170)) || DynAbs.Tracing.TraceSender.Conditional_F3(10951, 34198, 34300))) ? null : f_10951_34198_34300(this, boundObjectInitializerMember.Syntax, f_10951_34258_34299(boundObjectInitializerMember));
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 33751, 34604);

                    case BoundIndexerAccess boundIndexerAccess:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 33751, 34604);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 34384, 34484);

                        return f_10951_34391_34483(this, f_10951_34415_34445(boundIndexerAccess), f_10951_34447_34482(boundIndexerAccess));
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 33751, 34604);

                    default:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 33751, 34604);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 34532, 34589);

                        throw f_10951_34538_34588(f_10951_34573_34587(boundNode));
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 33751, 34604);
                }
                DynAbs.Tracing.TraceSender.TraceExitMethod(10951, 33648, 34615);

                Microsoft.CodeAnalysis.CSharp.BoundExpression?
                f_10951_33900_33931(Microsoft.CodeAnalysis.CSharp.BoundPropertyAccess
                this_param)
                {
                    var return_v = this_param.ReceiverOpt;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 33900, 33931);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol
                f_10951_33933_33967(Microsoft.CodeAnalysis.CSharp.BoundPropertyAccess
                this_param)
                {
                    var return_v = this_param.PropertySymbol;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 33933, 33967);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_10951_33876_33968(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression?
                instance, Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol
                symbol)
                {
                    var return_v = this_param.CreateReceiverOperation((Microsoft.CodeAnalysis.CSharp.BoundNode?)instance, (Microsoft.CodeAnalysis.CSharp.Symbol)symbol);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 33876, 33968);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbol?
                f_10951_34079_34120(Microsoft.CodeAnalysis.CSharp.BoundObjectInitializerMember
                this_param)
                {
                    var return_v = this_param.MemberSymbol;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 34079, 34120);
                    return return_v;
                }


                bool?
                f_10951_34079_34130_M(bool?
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 34079, 34130);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                f_10951_34258_34299(Microsoft.CodeAnalysis.CSharp.BoundObjectInitializerMember
                this_param)
                {
                    var return_v = this_param.ReceiverType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 34258, 34299);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.IInstanceReferenceOperation
                f_10951_34198_34300(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                type)
                {
                    var return_v = this_param.CreateImplicitReceiver(syntax, type);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 34198, 34300);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression?
                f_10951_34415_34445(Microsoft.CodeAnalysis.CSharp.BoundIndexerAccess
                this_param)
                {
                    var return_v = this_param.ReceiverOpt;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 34415, 34445);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbol?
                f_10951_34447_34482(Microsoft.CodeAnalysis.CSharp.BoundIndexerAccess
                this_param)
                {
                    var return_v = this_param.ExpressionSymbol;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 34447, 34482);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_10951_34391_34483(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression?
                instance, Microsoft.CodeAnalysis.CSharp.Symbol?
                symbol)
                {
                    var return_v = this_param.CreateReceiverOperation((Microsoft.CodeAnalysis.CSharp.BoundNode?)instance, symbol);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 34391, 34483);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundKind
                f_10951_34573_34587(Microsoft.CodeAnalysis.CSharp.BoundNode
                this_param)
                {
                    var return_v = this_param.Kind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 34573, 34587);
                    return return_v;
                }


                System.Exception
                f_10951_34538_34588(Microsoft.CodeAnalysis.CSharp.BoundKind
                o)
                {
                    var return_v = ExceptionUtilities.UnexpectedValue((object)o);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 34538, 34588);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10951, 33648, 34615);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10951, 33648, 34615);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private IPropertyReferenceOperation CreateBoundPropertyAccessOperation(BoundPropertyAccess boundPropertyAccess)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10951, 34627, 35390);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 34763, 34879);

                IOperation?
                instance = f_10951_34786_34878(this, f_10951_34810_34841(boundPropertyAccess), f_10951_34843_34877(boundPropertyAccess))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 34893, 34950);

                var
                arguments = ImmutableArray<IArgumentOperation>.Empty
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 34964, 35044);

                IPropertySymbol
                property = f_10951_34991_35043(f_10951_34991_35025(boundPropertyAccess))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 35058, 35105);

                SyntaxNode
                syntax = boundPropertyAccess.Syntax
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 35119, 35181);

                ITypeSymbol?
                type = f_10951_35139_35180(boundPropertyAccess)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 35195, 35254);

                bool
                isImplicit = f_10951_35213_35253(boundPropertyAccess)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 35268, 35379);

                return f_10951_35275_35378(property, arguments, instance, _semanticModel, syntax, type, isImplicit);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10951, 34627, 35390);

                Microsoft.CodeAnalysis.CSharp.BoundExpression?
                f_10951_34810_34841(Microsoft.CodeAnalysis.CSharp.BoundPropertyAccess
                this_param)
                {
                    var return_v = this_param.ReceiverOpt;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 34810, 34841);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol
                f_10951_34843_34877(Microsoft.CodeAnalysis.CSharp.BoundPropertyAccess
                this_param)
                {
                    var return_v = this_param.PropertySymbol;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 34843, 34877);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_10951_34786_34878(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression?
                instance, Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol
                symbol)
                {
                    var return_v = this_param.CreateReceiverOperation((Microsoft.CodeAnalysis.CSharp.BoundNode?)instance, (Microsoft.CodeAnalysis.CSharp.Symbol)symbol);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 34786, 34878);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol
                f_10951_34991_35025(Microsoft.CodeAnalysis.CSharp.BoundPropertyAccess
                this_param)
                {
                    var return_v = this_param.PropertySymbol;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 34991, 35025);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IPropertySymbol?
                f_10951_34991_35043(Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol
                symbol)
                {
                    var return_v = symbol.GetPublicSymbol();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 34991, 35043);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ITypeSymbol?
                f_10951_35139_35180(Microsoft.CodeAnalysis.CSharp.BoundPropertyAccess
                this_param)
                {
                    var return_v = this_param.GetPublicTypeSymbol();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 35139, 35180);
                    return return_v;
                }


                bool
                f_10951_35213_35253(Microsoft.CodeAnalysis.CSharp.BoundPropertyAccess
                this_param)
                {
                    var return_v = this_param.WasCompilerGenerated;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 35213, 35253);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.PropertyReferenceOperation
                f_10951_35275_35378(Microsoft.CodeAnalysis.IPropertySymbol
                property, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Operations.IArgumentOperation>
                arguments, Microsoft.CodeAnalysis.IOperation?
                instance, Microsoft.CodeAnalysis.SemanticModel
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.ITypeSymbol?
                type, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.PropertyReferenceOperation(property, arguments, instance, semanticModel, syntax, type, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 35275, 35378);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10951, 34627, 35390);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10951, 34627, 35390);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private IOperation CreateBoundIndexerAccessOperation(BoundIndexerAccess boundIndexerAccess)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10951, 35402, 36632);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 35518, 35571);

                PropertySymbol
                property = f_10951_35544_35570(boundIndexerAccess)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 35585, 35631);

                SyntaxNode
                syntax = boundIndexerAccess.Syntax
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 35645, 35706);

                ITypeSymbol?
                type = f_10951_35665_35705(boundIndexerAccess)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 35720, 35778);

                bool
                isImplicit = f_10951_35738_35777(boundIndexerAccess)
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 35794, 36209) || true) && (f_10951_35798_35847_M(!boundIndexerAccess.OriginalIndexersOpt.IsDefault) || (DynAbs.Tracing.TraceSender.Expression_False(10951, 35798, 35926) || f_10951_35851_35880(boundIndexerAccess) == LookupResultKind.OverloadResolutionFailure))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 35794, 36209);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 35960, 36075);

                    var
                    children = f_10951_35975_36074(this, f_10951_36014_36073(((IBoundInvalidNode)boundIndexerAccess)))
                    ;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 36093, 36194);

                    return f_10951_36100_36193(children, _semanticModel, syntax, type, constantValue: null, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 35794, 36209);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 36225, 36348);

                ImmutableArray<IArgumentOperation>
                arguments = f_10951_36272_36347(this, boundIndexerAccess, isObjectOrCollectionInitializer: false)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 36362, 36478);

                IOperation?
                instance = f_10951_36385_36477(this, f_10951_36409_36439(boundIndexerAccess), f_10951_36441_36476(boundIndexerAccess))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 36492, 36621);

                return f_10951_36499_36620(f_10951_36530_36556(property), arguments, instance, _semanticModel, syntax, type, isImplicit);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10951, 35402, 36632);

                Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol
                f_10951_35544_35570(Microsoft.CodeAnalysis.CSharp.BoundIndexerAccess
                this_param)
                {
                    var return_v = this_param.Indexer;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 35544, 35570);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ITypeSymbol?
                f_10951_35665_35705(Microsoft.CodeAnalysis.CSharp.BoundIndexerAccess
                this_param)
                {
                    var return_v = this_param.GetPublicTypeSymbol();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 35665, 35705);
                    return return_v;
                }


                bool
                f_10951_35738_35777(Microsoft.CodeAnalysis.CSharp.BoundIndexerAccess
                this_param)
                {
                    var return_v = this_param.WasCompilerGenerated;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 35738, 35777);
                    return return_v;
                }


                bool
                f_10951_35798_35847_M(bool
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 35798, 35847);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.LookupResultKind
                f_10951_35851_35880(Microsoft.CodeAnalysis.CSharp.BoundIndexerAccess
                this_param)
                {
                    var return_v = this_param.ResultKind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 35851, 35880);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundNode>
                f_10951_36014_36073(Microsoft.CodeAnalysis.CSharp.IBoundInvalidNode
                this_param)
                {
                    var return_v = this_param.InvalidNodeChildren;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 36014, 36073);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.IOperation>
                f_10951_35975_36074(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundNode>
                boundNodes)
                {
                    var return_v = this_param.CreateFromArray<Microsoft.CodeAnalysis.CSharp.BoundNode, Microsoft.CodeAnalysis.IOperation>(boundNodes);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 35975, 36074);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.InvalidOperation
                f_10951_36100_36193(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.IOperation>
                children, Microsoft.CodeAnalysis.SemanticModel
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.ITypeSymbol?
                type, Microsoft.CodeAnalysis.ConstantValue?
                constantValue, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.InvalidOperation(children, semanticModel, syntax, type, constantValue: constantValue, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 36100, 36193);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Operations.IArgumentOperation>
                f_10951_36272_36347(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundIndexerAccess
                containingExpression, bool
                isObjectOrCollectionInitializer)
                {
                    var return_v = this_param.DeriveArguments((Microsoft.CodeAnalysis.CSharp.BoundNode)containingExpression, isObjectOrCollectionInitializer: isObjectOrCollectionInitializer);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 36272, 36347);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression?
                f_10951_36409_36439(Microsoft.CodeAnalysis.CSharp.BoundIndexerAccess
                this_param)
                {
                    var return_v = this_param.ReceiverOpt;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 36409, 36439);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbol?
                f_10951_36441_36476(Microsoft.CodeAnalysis.CSharp.BoundIndexerAccess
                this_param)
                {
                    var return_v = this_param.ExpressionSymbol;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 36441, 36476);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_10951_36385_36477(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression?
                instance, Microsoft.CodeAnalysis.CSharp.Symbol?
                symbol)
                {
                    var return_v = this_param.CreateReceiverOperation((Microsoft.CodeAnalysis.CSharp.BoundNode?)instance, symbol);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 36385, 36477);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IPropertySymbol?
                f_10951_36530_36556(Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol
                symbol)
                {
                    var return_v = symbol.GetPublicSymbol();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 36530, 36556);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.PropertyReferenceOperation
                f_10951_36499_36620(Microsoft.CodeAnalysis.IPropertySymbol
                property, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Operations.IArgumentOperation>
                arguments, Microsoft.CodeAnalysis.IOperation?
                instance, Microsoft.CodeAnalysis.SemanticModel
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.ITypeSymbol?
                type, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.PropertyReferenceOperation(property, arguments, instance, semanticModel, syntax, type, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 36499, 36620);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10951, 35402, 36632);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10951, 35402, 36632);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private IEventReferenceOperation CreateBoundEventAccessOperation(BoundEventAccess boundEventAccess)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10951, 36644, 37279);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 36768, 36837);

                IEventSymbol
                @event = f_10951_36790_36836(f_10951_36790_36818(boundEventAccess))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 36851, 36958);

                IOperation?
                instance = f_10951_36874_36957(this, f_10951_36898_36926(boundEventAccess), f_10951_36928_36956(boundEventAccess))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 36972, 37016);

                SyntaxNode
                syntax = boundEventAccess.Syntax
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 37030, 37089);

                ITypeSymbol?
                type = f_10951_37050_37088(boundEventAccess)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 37103, 37159);

                bool
                isImplicit = f_10951_37121_37158(boundEventAccess)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 37173, 37268);

                return f_10951_37180_37267(@event, instance, _semanticModel, syntax, type, isImplicit);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10951, 36644, 37279);

                Microsoft.CodeAnalysis.CSharp.Symbols.EventSymbol
                f_10951_36790_36818(Microsoft.CodeAnalysis.CSharp.BoundEventAccess
                this_param)
                {
                    var return_v = this_param.EventSymbol;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 36790, 36818);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IEventSymbol?
                f_10951_36790_36836(Microsoft.CodeAnalysis.CSharp.Symbols.EventSymbol
                symbol)
                {
                    var return_v = symbol.GetPublicSymbol();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 36790, 36836);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression?
                f_10951_36898_36926(Microsoft.CodeAnalysis.CSharp.BoundEventAccess
                this_param)
                {
                    var return_v = this_param.ReceiverOpt;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 36898, 36926);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.EventSymbol
                f_10951_36928_36956(Microsoft.CodeAnalysis.CSharp.BoundEventAccess
                this_param)
                {
                    var return_v = this_param.EventSymbol;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 36928, 36956);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_10951_36874_36957(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression?
                instance, Microsoft.CodeAnalysis.CSharp.Symbols.EventSymbol
                symbol)
                {
                    var return_v = this_param.CreateReceiverOperation((Microsoft.CodeAnalysis.CSharp.BoundNode?)instance, (Microsoft.CodeAnalysis.CSharp.Symbol)symbol);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 36874, 36957);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ITypeSymbol?
                f_10951_37050_37088(Microsoft.CodeAnalysis.CSharp.BoundEventAccess
                this_param)
                {
                    var return_v = this_param.GetPublicTypeSymbol();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 37050, 37088);
                    return return_v;
                }


                bool
                f_10951_37121_37158(Microsoft.CodeAnalysis.CSharp.BoundEventAccess
                this_param)
                {
                    var return_v = this_param.WasCompilerGenerated;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 37121, 37158);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.EventReferenceOperation
                f_10951_37180_37267(Microsoft.CodeAnalysis.IEventSymbol
                @event, Microsoft.CodeAnalysis.IOperation?
                instance, Microsoft.CodeAnalysis.SemanticModel
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.ITypeSymbol?
                type, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.EventReferenceOperation(@event, instance, semanticModel, syntax, type, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 37180, 37267);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10951, 36644, 37279);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10951, 36644, 37279);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private IEventAssignmentOperation CreateBoundEventAssignmentOperatorOperation(BoundEventAssignmentOperator boundEventAssignmentOperator)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10951, 37291, 38070);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 37452, 37542);

                IOperation
                eventReference = f_10951_37480_37541(this, boundEventAssignmentOperator)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 37556, 37628);

                IOperation
                handlerValue = f_10951_37582_37627(this, f_10951_37589_37626(boundEventAssignmentOperator))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 37642, 37698);

                SyntaxNode
                syntax = boundEventAssignmentOperator.Syntax
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 37712, 37764);

                bool
                adds = f_10951_37724_37763(boundEventAssignmentOperator)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 37778, 37849);

                ITypeSymbol?
                type = f_10951_37798_37848(boundEventAssignmentOperator)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 37863, 37931);

                bool
                isImplicit = f_10951_37881_37930(boundEventAssignmentOperator)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 37945, 38059);

                return f_10951_37952_38058(eventReference, handlerValue, adds, _semanticModel, syntax, type, isImplicit);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10951, 37291, 38070);

                Microsoft.CodeAnalysis.Operations.IEventReferenceOperation
                f_10951_37480_37541(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundEventAssignmentOperator
                boundEventAssignmentOperator)
                {
                    var return_v = this_param.CreateBoundEventAccessOperation(boundEventAssignmentOperator);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 37480, 37541);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10951_37589_37626(Microsoft.CodeAnalysis.CSharp.BoundEventAssignmentOperator
                this_param)
                {
                    var return_v = this_param.Argument;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 37589, 37626);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_10951_37582_37627(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                boundNode)
                {
                    var return_v = this_param.Create((Microsoft.CodeAnalysis.CSharp.BoundNode)boundNode);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 37582, 37627);
                    return return_v;
                }


                bool
                f_10951_37724_37763(Microsoft.CodeAnalysis.CSharp.BoundEventAssignmentOperator
                this_param)
                {
                    var return_v = this_param.IsAddition;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 37724, 37763);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ITypeSymbol?
                f_10951_37798_37848(Microsoft.CodeAnalysis.CSharp.BoundEventAssignmentOperator
                this_param)
                {
                    var return_v = this_param.GetPublicTypeSymbol();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 37798, 37848);
                    return return_v;
                }


                bool
                f_10951_37881_37930(Microsoft.CodeAnalysis.CSharp.BoundEventAssignmentOperator
                this_param)
                {
                    var return_v = this_param.WasCompilerGenerated;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 37881, 37930);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.EventAssignmentOperation
                f_10951_37952_38058(Microsoft.CodeAnalysis.IOperation
                eventReference, Microsoft.CodeAnalysis.IOperation
                handlerValue, bool
                adds, Microsoft.CodeAnalysis.SemanticModel
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.ITypeSymbol?
                type, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.EventAssignmentOperation(eventReference, handlerValue, adds, semanticModel, syntax, type, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 37952, 38058);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10951, 37291, 38070);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10951, 37291, 38070);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private IParameterReferenceOperation CreateBoundParameterOperation(BoundParameter boundParameter)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10951, 38082, 38594);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 38204, 38282);

                IParameterSymbol
                parameter = f_10951_38233_38281(f_10951_38233_38263(boundParameter))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 38296, 38338);

                SyntaxNode
                syntax = boundParameter.Syntax
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 38352, 38409);

                ITypeSymbol?
                type = f_10951_38372_38408(boundParameter)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 38423, 38477);

                bool
                isImplicit = f_10951_38441_38476(boundParameter)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 38491, 38583);

                return f_10951_38498_38582(parameter, _semanticModel, syntax, type, isImplicit);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10951, 38082, 38594);

                Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol
                f_10951_38233_38263(Microsoft.CodeAnalysis.CSharp.BoundParameter
                this_param)
                {
                    var return_v = this_param.ParameterSymbol;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 38233, 38263);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IParameterSymbol?
                f_10951_38233_38281(Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol
                symbol)
                {
                    var return_v = symbol.GetPublicSymbol();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 38233, 38281);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ITypeSymbol?
                f_10951_38372_38408(Microsoft.CodeAnalysis.CSharp.BoundParameter
                this_param)
                {
                    var return_v = this_param.GetPublicTypeSymbol();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 38372, 38408);
                    return return_v;
                }


                bool
                f_10951_38441_38476(Microsoft.CodeAnalysis.CSharp.BoundParameter
                this_param)
                {
                    var return_v = this_param.WasCompilerGenerated;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 38441, 38476);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.ParameterReferenceOperation
                f_10951_38498_38582(Microsoft.CodeAnalysis.IParameterSymbol
                parameter, Microsoft.CodeAnalysis.SemanticModel
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.ITypeSymbol?
                type, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.ParameterReferenceOperation(parameter, semanticModel, syntax, type, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 38498, 38582);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10951, 38082, 38594);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10951, 38082, 38594);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        internal ILiteralOperation CreateBoundLiteralOperation(BoundLiteral boundLiteral, bool @implicit = false)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10951, 38606, 39106);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 38736, 38776);

                SyntaxNode
                syntax = boundLiteral.Syntax
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 38790, 38845);

                ITypeSymbol?
                type = f_10951_38810_38844(boundLiteral)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 38859, 38917);

                ConstantValue?
                constantValue = f_10951_38890_38916(boundLiteral)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 38931, 38996);

                bool
                isImplicit = f_10951_38949_38982(boundLiteral) || (DynAbs.Tracing.TraceSender.Expression_False(10951, 38949, 38995) || @implicit)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 39010, 39095);

                return f_10951_39017_39094(_semanticModel, syntax, type, constantValue, isImplicit);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10951, 38606, 39106);

                Microsoft.CodeAnalysis.ITypeSymbol?
                f_10951_38810_38844(Microsoft.CodeAnalysis.CSharp.BoundLiteral
                this_param)
                {
                    var return_v = this_param.GetPublicTypeSymbol();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 38810, 38844);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ConstantValue?
                f_10951_38890_38916(Microsoft.CodeAnalysis.CSharp.BoundLiteral
                this_param)
                {
                    var return_v = this_param.ConstantValue;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 38890, 38916);
                    return return_v;
                }


                bool
                f_10951_38949_38982(Microsoft.CodeAnalysis.CSharp.BoundLiteral
                this_param)
                {
                    var return_v = this_param.WasCompilerGenerated;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 38949, 38982);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.LiteralOperation
                f_10951_39017_39094(Microsoft.CodeAnalysis.SemanticModel
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.ITypeSymbol?
                type, Microsoft.CodeAnalysis.ConstantValue?
                constantValue, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.LiteralOperation(semanticModel, syntax, type, constantValue, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 39017, 39094);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10951, 38606, 39106);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10951, 38606, 39106);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private IAnonymousObjectCreationOperation CreateBoundAnonymousObjectCreationExpressionOperation(BoundAnonymousObjectCreationExpression boundAnonymousObjectCreationExpression)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10951, 39118, 39964);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 39317, 39383);

                SyntaxNode
                syntax = boundAnonymousObjectCreationExpression.Syntax
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 39397, 39478);

                ITypeSymbol?
                type = f_10951_39417_39477(boundAnonymousObjectCreationExpression)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 39492, 39523);

                f_10951_39492_39522(type is not null);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 39537, 39615);

                bool
                isImplicit = f_10951_39555_39614(boundAnonymousObjectCreationExpression)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 39629, 39839);

                ImmutableArray<IOperation>
                initializers = f_10951_39671_39838(this, f_10951_39710_39758(boundAnonymousObjectCreationExpression), f_10951_39760_39811(boundAnonymousObjectCreationExpression), syntax, type, isImplicit)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 39853, 39953);

                return f_10951_39860_39952(initializers, _semanticModel, syntax, type, isImplicit);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10951, 39118, 39964);

                Microsoft.CodeAnalysis.ITypeSymbol?
                f_10951_39417_39477(Microsoft.CodeAnalysis.CSharp.BoundAnonymousObjectCreationExpression
                this_param)
                {
                    var return_v = this_param.GetPublicTypeSymbol();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 39417, 39477);
                    return return_v;
                }


                int
                f_10951_39492_39522(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 39492, 39522);
                    return 0;
                }


                bool
                f_10951_39555_39614(Microsoft.CodeAnalysis.CSharp.BoundAnonymousObjectCreationExpression
                this_param)
                {
                    var return_v = this_param.WasCompilerGenerated;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 39555, 39614);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                f_10951_39710_39758(Microsoft.CodeAnalysis.CSharp.BoundAnonymousObjectCreationExpression
                this_param)
                {
                    var return_v = this_param.Arguments;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 39710, 39758);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundAnonymousPropertyDeclaration>
                f_10951_39760_39811(Microsoft.CodeAnalysis.CSharp.BoundAnonymousObjectCreationExpression
                this_param)
                {
                    var return_v = this_param.Declarations;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 39760, 39811);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.IOperation>
                f_10951_39671_39838(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                arguments, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundAnonymousPropertyDeclaration>
                declarations, Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.ITypeSymbol
                type, bool
                isImplicit)
                {
                    var return_v = this_param.GetAnonymousObjectCreationInitializers(arguments, declarations, syntax, type, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 39671, 39838);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.AnonymousObjectCreationOperation
                f_10951_39860_39952(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.IOperation>
                initializers, Microsoft.CodeAnalysis.SemanticModel
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.ITypeSymbol
                type, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.AnonymousObjectCreationOperation(initializers, semanticModel, syntax, type, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 39860, 39952);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10951, 39118, 39964);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10951, 39118, 39964);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private IOperation CreateBoundObjectCreationExpressionOperation(BoundObjectCreationExpression boundObjectCreationExpression)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10951, 39976, 42191);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 40125, 40194);

                MethodSymbol
                constructor = f_10951_40152_40193(boundObjectCreationExpression)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 40208, 40265);

                SyntaxNode
                syntax = boundObjectCreationExpression.Syntax
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 40279, 40351);

                ITypeSymbol?
                type = f_10951_40299_40350(boundObjectCreationExpression)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 40365, 40440);

                ConstantValue?
                constantValue = f_10951_40396_40439(boundObjectCreationExpression)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 40454, 40523);

                bool
                isImplicit = f_10951_40472_40522(boundObjectCreationExpression)
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 40539, 41733) || true) && (f_10951_40543_40583(boundObjectCreationExpression) == LookupResultKind.OverloadResolutionFailure || (DynAbs.Tracing.TraceSender.Expression_False(10951, 40543, 40652) || constructor == null) || (DynAbs.Tracing.TraceSender.Expression_False(10951, 40543, 40707) || f_10951_40656_40686(constructor) is ErrorMethodSymbol))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 40539, 41733);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 40741, 40867);

                    var
                    children = f_10951_40756_40866(this, f_10951_40795_40865(((IBoundInvalidNode)boundObjectCreationExpression)))
                    ;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 40885, 40980);

                    return f_10951_40892_40979(children, _semanticModel, syntax, type, constantValue, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 40539, 41733);
                }

                else
                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 40539, 41733);

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 41014, 41733) || true) && (f_10951_41018_41068(f_10951_41018_41052(boundObjectCreationExpression)))
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 41014, 41733);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 41183, 41208);

                        f_10951_41183_41207(isImplicit);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 41226, 41257);

                        f_10951_41226_41256(type is not null);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 41275, 41600);

                        ImmutableArray<IOperation>
                        initializers = f_10951_41317_41599(this, f_10951_41378_41417(boundObjectCreationExpression), declarations: ImmutableArray<BoundAnonymousPropertyDeclaration>.Empty, syntax, type, isImplicit)
                        ;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 41618, 41718);

                        return f_10951_41625_41717(initializers, _semanticModel, syntax, type, isImplicit);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 41014, 41733);
                    }
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 40539, 41733);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 41749, 41843);

                ImmutableArray<IArgumentOperation>
                arguments = f_10951_41796_41842(this, boundObjectCreationExpression)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 41857, 42017);

                IObjectOrCollectionInitializerOperation?
                initializer = (IObjectOrCollectionInitializerOperation?)f_10951_41954_42016(this, f_10951_41961_42015(boundObjectCreationExpression))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 42033, 42180);

                return f_10951_42040_42179(f_10951_42068_42097(constructor), initializer, arguments, _semanticModel, syntax, type, constantValue, isImplicit);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10951, 39976, 42191);

                Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                f_10951_40152_40193(Microsoft.CodeAnalysis.CSharp.BoundObjectCreationExpression
                this_param)
                {
                    var return_v = this_param.Constructor;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 40152, 40193);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ITypeSymbol?
                f_10951_40299_40350(Microsoft.CodeAnalysis.CSharp.BoundObjectCreationExpression
                this_param)
                {
                    var return_v = this_param.GetPublicTypeSymbol();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 40299, 40350);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ConstantValue?
                f_10951_40396_40439(Microsoft.CodeAnalysis.CSharp.BoundObjectCreationExpression
                this_param)
                {
                    var return_v = this_param.ConstantValue;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 40396, 40439);
                    return return_v;
                }


                bool
                f_10951_40472_40522(Microsoft.CodeAnalysis.CSharp.BoundObjectCreationExpression
                this_param)
                {
                    var return_v = this_param.WasCompilerGenerated;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 40472, 40522);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.LookupResultKind
                f_10951_40543_40583(Microsoft.CodeAnalysis.CSharp.BoundObjectCreationExpression
                this_param)
                {
                    var return_v = this_param.ResultKind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 40543, 40583);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                f_10951_40656_40686(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                this_param)
                {
                    var return_v = this_param.OriginalDefinition;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 40656, 40686);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundNode>
                f_10951_40795_40865(Microsoft.CodeAnalysis.CSharp.IBoundInvalidNode
                this_param)
                {
                    var return_v = this_param.InvalidNodeChildren;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 40795, 40865);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.IOperation>
                f_10951_40756_40866(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundNode>
                boundNodes)
                {
                    var return_v = this_param.CreateFromArray<Microsoft.CodeAnalysis.CSharp.BoundNode, Microsoft.CodeAnalysis.IOperation>(boundNodes);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 40756, 40866);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.InvalidOperation
                f_10951_40892_40979(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.IOperation>
                children, Microsoft.CodeAnalysis.SemanticModel
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.ITypeSymbol?
                type, Microsoft.CodeAnalysis.ConstantValue?
                constantValue, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.InvalidOperation(children, semanticModel, syntax, type, constantValue, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 40892, 40979);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                f_10951_41018_41052(Microsoft.CodeAnalysis.CSharp.BoundObjectCreationExpression
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 41018, 41052);
                    return return_v;
                }


                bool
                f_10951_41018_41068(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                this_param)
                {
                    var return_v = this_param.IsAnonymousType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 41018, 41068);
                    return return_v;
                }


                int
                f_10951_41183_41207(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 41183, 41207);
                    return 0;
                }


                int
                f_10951_41226_41256(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 41226, 41256);
                    return 0;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                f_10951_41378_41417(Microsoft.CodeAnalysis.CSharp.BoundObjectCreationExpression
                this_param)
                {
                    var return_v = this_param.Arguments;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 41378, 41417);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.IOperation>
                f_10951_41317_41599(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                arguments, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundAnonymousPropertyDeclaration>
                declarations, Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.ITypeSymbol
                type, bool
                isImplicit)
                {
                    var return_v = this_param.GetAnonymousObjectCreationInitializers(arguments, declarations: declarations, syntax, type, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 41317, 41599);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.AnonymousObjectCreationOperation
                f_10951_41625_41717(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.IOperation>
                initializers, Microsoft.CodeAnalysis.SemanticModel
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.ITypeSymbol
                type, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.AnonymousObjectCreationOperation(initializers, semanticModel, syntax, type, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 41625, 41717);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Operations.IArgumentOperation>
                f_10951_41796_41842(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundObjectCreationExpression
                containingExpression)
                {
                    var return_v = this_param.DeriveArguments((Microsoft.CodeAnalysis.CSharp.BoundNode)containingExpression);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 41796, 41842);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundObjectInitializerExpressionBase?
                f_10951_41961_42015(Microsoft.CodeAnalysis.CSharp.BoundObjectCreationExpression
                this_param)
                {
                    var return_v = this_param.InitializerExpressionOpt;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 41961, 42015);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_10951_41954_42016(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundObjectInitializerExpressionBase?
                boundNode)
                {
                    var return_v = this_param.Create((Microsoft.CodeAnalysis.CSharp.BoundNode?)boundNode);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 41954, 42016);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IMethodSymbol?
                f_10951_42068_42097(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                symbol)
                {
                    var return_v = symbol.GetPublicSymbol();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 42068, 42097);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.ObjectCreationOperation
                f_10951_42040_42179(Microsoft.CodeAnalysis.IMethodSymbol
                constructor, Microsoft.CodeAnalysis.Operations.IObjectOrCollectionInitializerOperation?
                initializer, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Operations.IArgumentOperation>
                arguments, Microsoft.CodeAnalysis.SemanticModel
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.ITypeSymbol?
                type, Microsoft.CodeAnalysis.ConstantValue?
                constantValue, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.ObjectCreationOperation(constructor, initializer, arguments, semanticModel, syntax, type, constantValue, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 42040, 42179);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10951, 39976, 42191);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10951, 39976, 42191);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private IOperation CreateBoundWithExpressionOperation(BoundWithExpression boundWithExpression)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10951, 42203, 42968);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 42322, 42380);

                IOperation
                operand = f_10951_42343_42379(this, f_10951_42350_42378(boundWithExpression))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 42394, 42539);

                IObjectOrCollectionInitializerOperation
                initializer = (IObjectOrCollectionInitializerOperation)f_10951_42489_42538(this, f_10951_42496_42537(boundWithExpression))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 42553, 42613);

                MethodSymbol?
                constructor = f_10951_42581_42612(boundWithExpression)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 42627, 42674);

                SyntaxNode
                syntax = boundWithExpression.Syntax
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 42688, 42750);

                ITypeSymbol?
                type = f_10951_42708_42749(boundWithExpression)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 42764, 42823);

                bool
                isImplicit = f_10951_42782_42822(boundWithExpression)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 42837, 42957);

                return f_10951_42844_42956(operand, f_10951_42871_42900(constructor), initializer, _semanticModel, syntax, type, isImplicit);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10951, 42203, 42968);

                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10951_42350_42378(Microsoft.CodeAnalysis.CSharp.BoundWithExpression
                this_param)
                {
                    var return_v = this_param.Receiver;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 42350, 42378);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_10951_42343_42379(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                boundNode)
                {
                    var return_v = this_param.Create((Microsoft.CodeAnalysis.CSharp.BoundNode)boundNode);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 42343, 42379);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundObjectInitializerExpressionBase
                f_10951_42496_42537(Microsoft.CodeAnalysis.CSharp.BoundWithExpression
                this_param)
                {
                    var return_v = this_param.InitializerExpression;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 42496, 42537);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_10951_42489_42538(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundObjectInitializerExpressionBase
                boundNode)
                {
                    var return_v = this_param.Create((Microsoft.CodeAnalysis.CSharp.BoundNode)boundNode);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 42489, 42538);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol?
                f_10951_42581_42612(Microsoft.CodeAnalysis.CSharp.BoundWithExpression
                this_param)
                {
                    var return_v = this_param.CloneMethod;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 42581, 42612);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ITypeSymbol?
                f_10951_42708_42749(Microsoft.CodeAnalysis.CSharp.BoundWithExpression
                this_param)
                {
                    var return_v = this_param.GetPublicTypeSymbol();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 42708, 42749);
                    return return_v;
                }


                bool
                f_10951_42782_42822(Microsoft.CodeAnalysis.CSharp.BoundWithExpression
                this_param)
                {
                    var return_v = this_param.WasCompilerGenerated;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 42782, 42822);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IMethodSymbol?
                f_10951_42871_42900(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol?
                symbol)
                {
                    var return_v = symbol.GetPublicSymbol();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 42871, 42900);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.WithOperation
                f_10951_42844_42956(Microsoft.CodeAnalysis.IOperation
                operand, Microsoft.CodeAnalysis.IMethodSymbol?
                cloneMethod, Microsoft.CodeAnalysis.Operations.IObjectOrCollectionInitializerOperation
                initializer, Microsoft.CodeAnalysis.SemanticModel
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.ITypeSymbol?
                type, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.WithOperation(operand, cloneMethod, initializer, semanticModel, syntax, type, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 42844, 42956);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10951, 42203, 42968);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10951, 42203, 42968);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private IDynamicObjectCreationOperation CreateBoundDynamicObjectCreationExpressionOperation(BoundDynamicObjectCreationExpression boundDynamicObjectCreationExpression)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10951, 42980, 44160);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 43171, 43338);

                IObjectOrCollectionInitializerOperation?
                initializer = (IObjectOrCollectionInitializerOperation?)f_10951_43268_43337(this, f_10951_43275_43336(boundDynamicObjectCreationExpression))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 43352, 43484);

                ImmutableArray<IOperation>
                arguments = f_10951_43391_43483(this, f_10951_43436_43482(boundDynamicObjectCreationExpression))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 43498, 43605);

                ImmutableArray<string>
                argumentNames = boundDynamicObjectCreationExpression.ArgumentNamesOpt.NullToEmpty()
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 43619, 43733);

                ImmutableArray<RefKind>
                argumentRefKinds = boundDynamicObjectCreationExpression.ArgumentRefKindsOpt.NullToEmpty()
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 43747, 43811);

                SyntaxNode
                syntax = boundDynamicObjectCreationExpression.Syntax
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 43825, 43904);

                ITypeSymbol?
                type = f_10951_43845_43903(boundDynamicObjectCreationExpression)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 43918, 43994);

                bool
                isImplicit = f_10951_43936_43993(boundDynamicObjectCreationExpression)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 44008, 44149);

                return f_10951_44015_44148(initializer, arguments, argumentNames, argumentRefKinds, _semanticModel, syntax, type, isImplicit);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10951, 42980, 44160);

                Microsoft.CodeAnalysis.CSharp.BoundObjectInitializerExpressionBase?
                f_10951_43275_43336(Microsoft.CodeAnalysis.CSharp.BoundDynamicObjectCreationExpression
                this_param)
                {
                    var return_v = this_param.InitializerExpressionOpt;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 43275, 43336);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_10951_43268_43337(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundObjectInitializerExpressionBase?
                boundNode)
                {
                    var return_v = this_param.Create((Microsoft.CodeAnalysis.CSharp.BoundNode?)boundNode);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 43268, 43337);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                f_10951_43436_43482(Microsoft.CodeAnalysis.CSharp.BoundDynamicObjectCreationExpression
                this_param)
                {
                    var return_v = this_param.Arguments;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 43436, 43482);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.IOperation>
                f_10951_43391_43483(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                boundNodes)
                {
                    var return_v = this_param.CreateFromArray<Microsoft.CodeAnalysis.CSharp.BoundExpression, Microsoft.CodeAnalysis.IOperation>(boundNodes);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 43391, 43483);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ITypeSymbol?
                f_10951_43845_43903(Microsoft.CodeAnalysis.CSharp.BoundDynamicObjectCreationExpression
                this_param)
                {
                    var return_v = this_param.GetPublicTypeSymbol();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 43845, 43903);
                    return return_v;
                }


                bool
                f_10951_43936_43993(Microsoft.CodeAnalysis.CSharp.BoundDynamicObjectCreationExpression
                this_param)
                {
                    var return_v = this_param.WasCompilerGenerated;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 43936, 43993);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.DynamicObjectCreationOperation
                f_10951_44015_44148(Microsoft.CodeAnalysis.Operations.IObjectOrCollectionInitializerOperation?
                initializer, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.IOperation>
                arguments, System.Collections.Immutable.ImmutableArray<string>
                argumentNames, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.RefKind>
                argumentRefKinds, Microsoft.CodeAnalysis.SemanticModel
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.ITypeSymbol?
                type, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.DynamicObjectCreationOperation(initializer, arguments, argumentNames, argumentRefKinds, semanticModel, syntax, type, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 44015, 44148);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10951, 42980, 44160);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10951, 42980, 44160);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        internal IOperation CreateBoundDynamicInvocationExpressionReceiver(BoundNode receiver)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10951, 44172, 45152);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 44283, 45141);

                switch (receiver)
                {

                    case BoundObjectOrCollectionValuePlaceholder implicitReceiver:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 44283, 45141);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 44417, 44676);

                        return f_10951_44424_44675(this, implicitReceiver, typeArgumentsOpt: ImmutableArray<TypeSymbol>.Empty, memberName: "Add", implicitReceiver.Syntax, type: null, isImplicit: true);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 44283, 45141);

                    case BoundMethodGroup methodGroup:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 44283, 45141);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 44752, 45052);

                        return f_10951_44759_45051(this, f_10951_44799_44822(methodGroup), f_10951_44824_44875(f_10951_44846_44874(methodGroup)), f_10951_44877_44893(methodGroup), methodGroup.Syntax, f_10951_44983_45016(methodGroup), f_10951_45018_45050(methodGroup));
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 44283, 45141);

                    default:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 44283, 45141);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 45102, 45126);

                        return f_10951_45109_45125(this, receiver);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 44283, 45141);
                }
                DynAbs.Tracing.TraceSender.TraceExitMethod(10951, 44172, 45152);

                Microsoft.CodeAnalysis.Operations.IDynamicMemberReferenceOperation
                f_10951_44424_44675(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundObjectOrCollectionValuePlaceholder
                receiver, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol>
                typeArgumentsOpt, string
                memberName, Microsoft.CodeAnalysis.SyntaxNode
                syntaxNode, Microsoft.CodeAnalysis.ITypeSymbol?
                type, bool
                isImplicit)
                {
                    var return_v = this_param.CreateBoundDynamicMemberAccessOperation((Microsoft.CodeAnalysis.CSharp.BoundExpression)receiver, typeArgumentsOpt: typeArgumentsOpt, memberName: memberName, syntaxNode, type: type, isImplicit: isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 44424, 44675);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression?
                f_10951_44799_44822(Microsoft.CodeAnalysis.CSharp.BoundMethodGroup
                this_param)
                {
                    var return_v = this_param.ReceiverOpt;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 44799, 44822);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations>
                f_10951_44846_44874(Microsoft.CodeAnalysis.CSharp.BoundMethodGroup
                this_param)
                {
                    var return_v = this_param.TypeArgumentsOpt;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 44846, 44874);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol>
                f_10951_44824_44875(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations>
                typesOpt)
                {
                    var return_v = TypeMap.AsTypeSymbols(typesOpt);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 44824, 44875);
                    return return_v;
                }


                string
                f_10951_44877_44893(Microsoft.CodeAnalysis.CSharp.BoundMethodGroup
                this_param)
                {
                    var return_v = this_param.Name;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 44877, 44893);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ITypeSymbol?
                f_10951_44983_45016(Microsoft.CodeAnalysis.CSharp.BoundMethodGroup
                this_param)
                {
                    var return_v = this_param.GetPublicTypeSymbol();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 44983, 45016);
                    return return_v;
                }


                bool
                f_10951_45018_45050(Microsoft.CodeAnalysis.CSharp.BoundMethodGroup
                this_param)
                {
                    var return_v = this_param.WasCompilerGenerated;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 45018, 45050);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.IDynamicMemberReferenceOperation
                f_10951_44759_45051(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression?
                receiver, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol>
                typeArgumentsOpt, string
                memberName, Microsoft.CodeAnalysis.SyntaxNode
                syntaxNode, Microsoft.CodeAnalysis.ITypeSymbol?
                type, bool
                isImplicit)
                {
                    var return_v = this_param.CreateBoundDynamicMemberAccessOperation(receiver, typeArgumentsOpt, memberName, syntaxNode, type, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 44759, 45051);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_10951_45109_45125(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundNode
                boundNode)
                {
                    var return_v = this_param.Create(boundNode);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 45109, 45125);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10951, 44172, 45152);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10951, 44172, 45152);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private IDynamicInvocationOperation CreateBoundDynamicInvocationExpressionOperation(BoundDynamicInvocation boundDynamicInvocation)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10951, 45164, 46156);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 45319, 45424);

                IOperation
                operation = f_10951_45342_45423(this, f_10951_45389_45422(boundDynamicInvocation))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 45438, 45556);

                ImmutableArray<IOperation>
                arguments = f_10951_45477_45555(this, f_10951_45522_45554(boundDynamicInvocation))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 45570, 45663);

                ImmutableArray<string>
                argumentNames = boundDynamicInvocation.ArgumentNamesOpt.NullToEmpty()
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 45677, 45777);

                ImmutableArray<RefKind>
                argumentRefKinds = boundDynamicInvocation.ArgumentRefKindsOpt.NullToEmpty()
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 45791, 45841);

                SyntaxNode
                syntax = boundDynamicInvocation.Syntax
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 45855, 45920);

                ITypeSymbol?
                type = f_10951_45875_45919(boundDynamicInvocation)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 45934, 45996);

                bool
                isImplicit = f_10951_45952_45995(boundDynamicInvocation)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 46010, 46145);

                return f_10951_46017_46144(operation, arguments, argumentNames, argumentRefKinds, _semanticModel, syntax, type, isImplicit);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10951, 45164, 46156);

                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10951_45389_45422(Microsoft.CodeAnalysis.CSharp.BoundDynamicInvocation
                this_param)
                {
                    var return_v = this_param.Expression;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 45389, 45422);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation
                f_10951_45342_45423(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                receiver)
                {
                    var return_v = this_param.CreateBoundDynamicInvocationExpressionReceiver((Microsoft.CodeAnalysis.CSharp.BoundNode)receiver);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 45342, 45423);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                f_10951_45522_45554(Microsoft.CodeAnalysis.CSharp.BoundDynamicInvocation
                this_param)
                {
                    var return_v = this_param.Arguments;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 45522, 45554);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.IOperation>
                f_10951_45477_45555(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                boundNodes)
                {
                    var return_v = this_param.CreateFromArray<Microsoft.CodeAnalysis.CSharp.BoundExpression, Microsoft.CodeAnalysis.IOperation>(boundNodes);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 45477, 45555);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ITypeSymbol?
                f_10951_45875_45919(Microsoft.CodeAnalysis.CSharp.BoundDynamicInvocation
                this_param)
                {
                    var return_v = this_param.GetPublicTypeSymbol();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 45875, 45919);
                    return return_v;
                }


                bool
                f_10951_45952_45995(Microsoft.CodeAnalysis.CSharp.BoundDynamicInvocation
                this_param)
                {
                    var return_v = this_param.WasCompilerGenerated;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 45952, 45995);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.DynamicInvocationOperation
                f_10951_46017_46144(Microsoft.CodeAnalysis.IOperation
                operation, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.IOperation>
                arguments, System.Collections.Immutable.ImmutableArray<string>
                argumentNames, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.RefKind>
                argumentRefKinds, Microsoft.CodeAnalysis.SemanticModel
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.ITypeSymbol?
                type, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.DynamicInvocationOperation(operation, arguments, argumentNames, argumentRefKinds, semanticModel, syntax, type, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 46017, 46144);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10951, 45164, 46156);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10951, 45164, 46156);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        internal IOperation CreateBoundDynamicIndexerAccessExpressionReceiver(BoundExpression indexer)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10951, 46168, 46811);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 46287, 46800);

                switch (indexer)
                {

                    case BoundDynamicIndexerAccess boundDynamicIndexerAccess:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 46287, 46800);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 46415, 46465);

                        return f_10951_46422_46464(this, f_10951_46429_46463(boundDynamicIndexerAccess));
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 46287, 46800);

                    case BoundObjectInitializerMember boundObjectInitializerMember:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 46287, 46800);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 46570, 46680);

                        return f_10951_46577_46679(this, boundObjectInitializerMember.Syntax, f_10951_46637_46678(boundObjectInitializerMember));
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 46287, 46800);

                    default:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 46287, 46800);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 46730, 46785);

                        throw f_10951_46736_46784(f_10951_46771_46783(indexer));
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 46287, 46800);
                }
                DynAbs.Tracing.TraceSender.TraceExitMethod(10951, 46168, 46811);

                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10951_46429_46463(Microsoft.CodeAnalysis.CSharp.BoundDynamicIndexerAccess
                this_param)
                {
                    var return_v = this_param.Receiver;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 46429, 46463);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_10951_46422_46464(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                boundNode)
                {
                    var return_v = this_param.Create((Microsoft.CodeAnalysis.CSharp.BoundNode)boundNode);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 46422, 46464);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                f_10951_46637_46678(Microsoft.CodeAnalysis.CSharp.BoundObjectInitializerMember
                this_param)
                {
                    var return_v = this_param.ReceiverType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 46637, 46678);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.IInstanceReferenceOperation
                f_10951_46577_46679(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                type)
                {
                    var return_v = this_param.CreateImplicitReceiver(syntax, type);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 46577, 46679);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundKind
                f_10951_46771_46783(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.Kind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 46771, 46783);
                    return return_v;
                }


                System.Exception
                f_10951_46736_46784(Microsoft.CodeAnalysis.CSharp.BoundKind
                o)
                {
                    var return_v = ExceptionUtilities.UnexpectedValue((object)o);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 46736, 46784);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10951, 46168, 46811);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10951, 46168, 46811);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        internal ImmutableArray<IOperation> CreateBoundDynamicIndexerAccessArguments(BoundExpression indexer)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10951, 46823, 47480);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 46949, 47469);

                switch (indexer)
                {

                    case BoundDynamicIndexerAccess boundDynamicAccess:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 46949, 47469);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 47070, 47152);

                        return f_10951_47077_47151(this, f_10951_47122_47150(boundDynamicAccess));
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 46949, 47469);

                    case BoundObjectInitializerMember boundObjectInitializerMember:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 46949, 47469);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 47257, 47349);

                        return f_10951_47264_47348(this, f_10951_47309_47347(boundObjectInitializerMember));
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 46949, 47469);

                    default:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 46949, 47469);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 47399, 47454);

                        throw f_10951_47405_47453(f_10951_47440_47452(indexer));
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 46949, 47469);
                }
                DynAbs.Tracing.TraceSender.TraceExitMethod(10951, 46823, 47480);

                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                f_10951_47122_47150(Microsoft.CodeAnalysis.CSharp.BoundDynamicIndexerAccess
                this_param)
                {
                    var return_v = this_param.Arguments;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 47122, 47150);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.IOperation>
                f_10951_47077_47151(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                boundNodes)
                {
                    var return_v = this_param.CreateFromArray<Microsoft.CodeAnalysis.CSharp.BoundExpression, Microsoft.CodeAnalysis.IOperation>(boundNodes);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 47077, 47151);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                f_10951_47309_47347(Microsoft.CodeAnalysis.CSharp.BoundObjectInitializerMember
                this_param)
                {
                    var return_v = this_param.Arguments;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 47309, 47347);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.IOperation>
                f_10951_47264_47348(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                boundNodes)
                {
                    var return_v = this_param.CreateFromArray<Microsoft.CodeAnalysis.CSharp.BoundExpression, Microsoft.CodeAnalysis.IOperation>(boundNodes);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 47264, 47348);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundKind
                f_10951_47440_47452(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.Kind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 47440, 47452);
                    return return_v;
                }


                System.Exception
                f_10951_47405_47453(Microsoft.CodeAnalysis.CSharp.BoundKind
                o)
                {
                    var return_v = ExceptionUtilities.UnexpectedValue((object)o);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 47405, 47453);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10951, 46823, 47480);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10951, 46823, 47480);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private IDynamicIndexerAccessOperation CreateBoundDynamicIndexerAccessExpressionOperation(BoundDynamicIndexerAccess boundDynamicIndexerAccess)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10951, 47492, 48498);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 47659, 47759);

                IOperation
                operation = f_10951_47682_47758(this, boundDynamicIndexerAccess)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 47773, 47880);

                ImmutableArray<IOperation>
                arguments = f_10951_47812_47879(this, boundDynamicIndexerAccess)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 47894, 47990);

                ImmutableArray<string>
                argumentNames = boundDynamicIndexerAccess.ArgumentNamesOpt.NullToEmpty()
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 48004, 48107);

                ImmutableArray<RefKind>
                argumentRefKinds = boundDynamicIndexerAccess.ArgumentRefKindsOpt.NullToEmpty()
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 48121, 48174);

                SyntaxNode
                syntax = boundDynamicIndexerAccess.Syntax
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 48188, 48256);

                ITypeSymbol?
                type = f_10951_48208_48255(boundDynamicIndexerAccess)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 48270, 48335);

                bool
                isImplicit = f_10951_48288_48334(boundDynamicIndexerAccess)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 48349, 48487);

                return f_10951_48356_48486(operation, arguments, argumentNames, argumentRefKinds, _semanticModel, syntax, type, isImplicit);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10951, 47492, 48498);

                Microsoft.CodeAnalysis.IOperation
                f_10951_47682_47758(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundDynamicIndexerAccess
                indexer)
                {
                    var return_v = this_param.CreateBoundDynamicIndexerAccessExpressionReceiver((Microsoft.CodeAnalysis.CSharp.BoundExpression)indexer);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 47682, 47758);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.IOperation>
                f_10951_47812_47879(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundDynamicIndexerAccess
                indexer)
                {
                    var return_v = this_param.CreateBoundDynamicIndexerAccessArguments((Microsoft.CodeAnalysis.CSharp.BoundExpression)indexer);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 47812, 47879);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ITypeSymbol?
                f_10951_48208_48255(Microsoft.CodeAnalysis.CSharp.BoundDynamicIndexerAccess
                this_param)
                {
                    var return_v = this_param.GetPublicTypeSymbol();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 48208, 48255);
                    return return_v;
                }


                bool
                f_10951_48288_48334(Microsoft.CodeAnalysis.CSharp.BoundDynamicIndexerAccess
                this_param)
                {
                    var return_v = this_param.WasCompilerGenerated;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 48288, 48334);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.DynamicIndexerAccessOperation
                f_10951_48356_48486(Microsoft.CodeAnalysis.IOperation
                operation, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.IOperation>
                arguments, System.Collections.Immutable.ImmutableArray<string>
                argumentNames, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.RefKind>
                argumentRefKinds, Microsoft.CodeAnalysis.SemanticModel
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.ITypeSymbol?
                type, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.DynamicIndexerAccessOperation(operation, arguments, argumentNames, argumentRefKinds, semanticModel, syntax, type, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 48356, 48486);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10951, 47492, 48498);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10951, 47492, 48498);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private IObjectOrCollectionInitializerOperation CreateBoundObjectInitializerExpressionOperation(BoundObjectInitializerExpression boundObjectInitializerExpression)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10951, 48510, 49250);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 48697, 48870);

                ImmutableArray<IOperation>
                initializers = f_10951_48739_48869(this, f_10951_48784_48868(boundObjectInitializerExpression))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 48884, 48944);

                SyntaxNode
                syntax = boundObjectInitializerExpression.Syntax
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 48958, 49033);

                ITypeSymbol?
                type = f_10951_48978_49032(boundObjectInitializerExpression)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 49047, 49119);

                bool
                isImplicit = f_10951_49065_49118(boundObjectInitializerExpression)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 49133, 49239);

                return f_10951_49140_49238(initializers, _semanticModel, syntax, type, isImplicit);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10951, 48510, 49250);

                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                f_10951_48784_48868(Microsoft.CodeAnalysis.CSharp.BoundObjectInitializerExpression
                objectOrCollectionInitializer)
                {
                    var return_v = BoundObjectCreationExpression.GetChildInitializers((Microsoft.CodeAnalysis.CSharp.BoundExpression)objectOrCollectionInitializer);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 48784, 48868);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.IOperation>
                f_10951_48739_48869(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                boundNodes)
                {
                    var return_v = this_param.CreateFromArray<Microsoft.CodeAnalysis.CSharp.BoundExpression, Microsoft.CodeAnalysis.IOperation>(boundNodes);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 48739, 48869);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ITypeSymbol?
                f_10951_48978_49032(Microsoft.CodeAnalysis.CSharp.BoundObjectInitializerExpression
                this_param)
                {
                    var return_v = this_param.GetPublicTypeSymbol();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 48978, 49032);
                    return return_v;
                }


                bool
                f_10951_49065_49118(Microsoft.CodeAnalysis.CSharp.BoundObjectInitializerExpression
                this_param)
                {
                    var return_v = this_param.WasCompilerGenerated;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 49065, 49118);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.ObjectOrCollectionInitializerOperation
                f_10951_49140_49238(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.IOperation>
                initializers, Microsoft.CodeAnalysis.SemanticModel
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.ITypeSymbol?
                type, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.ObjectOrCollectionInitializerOperation(initializers, semanticModel, syntax, type, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 49140, 49238);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10951, 48510, 49250);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10951, 48510, 49250);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private IObjectOrCollectionInitializerOperation CreateBoundCollectionInitializerExpressionOperation(BoundCollectionInitializerExpression boundCollectionInitializerExpression)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10951, 49262, 50030);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 49461, 49638);

                ImmutableArray<IOperation>
                initializers = f_10951_49503_49637(this, f_10951_49548_49636(boundCollectionInitializerExpression))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 49652, 49716);

                SyntaxNode
                syntax = boundCollectionInitializerExpression.Syntax
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 49730, 49809);

                ITypeSymbol?
                type = f_10951_49750_49808(boundCollectionInitializerExpression)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 49823, 49899);

                bool
                isImplicit = f_10951_49841_49898(boundCollectionInitializerExpression)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 49913, 50019);

                return f_10951_49920_50018(initializers, _semanticModel, syntax, type, isImplicit);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10951, 49262, 50030);

                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                f_10951_49548_49636(Microsoft.CodeAnalysis.CSharp.BoundCollectionInitializerExpression
                objectOrCollectionInitializer)
                {
                    var return_v = BoundObjectCreationExpression.GetChildInitializers((Microsoft.CodeAnalysis.CSharp.BoundExpression)objectOrCollectionInitializer);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 49548, 49636);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.IOperation>
                f_10951_49503_49637(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                boundNodes)
                {
                    var return_v = this_param.CreateFromArray<Microsoft.CodeAnalysis.CSharp.BoundExpression, Microsoft.CodeAnalysis.IOperation>(boundNodes);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 49503, 49637);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ITypeSymbol?
                f_10951_49750_49808(Microsoft.CodeAnalysis.CSharp.BoundCollectionInitializerExpression
                this_param)
                {
                    var return_v = this_param.GetPublicTypeSymbol();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 49750, 49808);
                    return return_v;
                }


                bool
                f_10951_49841_49898(Microsoft.CodeAnalysis.CSharp.BoundCollectionInitializerExpression
                this_param)
                {
                    var return_v = this_param.WasCompilerGenerated;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 49841, 49898);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.ObjectOrCollectionInitializerOperation
                f_10951_49920_50018(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.IOperation>
                initializers, Microsoft.CodeAnalysis.SemanticModel
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.ITypeSymbol?
                type, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.ObjectOrCollectionInitializerOperation(initializers, semanticModel, syntax, type, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 49920, 50018);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10951, 49262, 50030);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10951, 49262, 50030);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private IOperation CreateBoundObjectInitializerMemberOperation(BoundObjectInitializerMember boundObjectInitializerMember, bool isObjectOrCollectionInitializer = false)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10951, 50042, 54003);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 50234, 50299);

                Symbol?
                memberSymbol = f_10951_50257_50298(boundObjectInitializerMember)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 50313, 50369);

                SyntaxNode
                syntax = boundObjectInitializerMember.Syntax
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 50383, 50454);

                ITypeSymbol?
                type = f_10951_50403_50453(boundObjectInitializerMember)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 50468, 50536);

                bool
                isImplicit = f_10951_50486_50535(boundObjectInitializerMember)
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 50552, 51342) || true) && ((object?)memberSymbol == null)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 50552, 51342);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 50619, 50679);

                    f_10951_50619_50678(f_10951_50632_50677(f_10951_50632_50665(boundObjectInitializerMember)));
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 50699, 50802);

                    IOperation
                    operation = f_10951_50722_50801(this, boundObjectInitializerMember)
                    ;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 50820, 50930);

                    ImmutableArray<IOperation>
                    arguments = f_10951_50859_50929(this, boundObjectInitializerMember)
                    ;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 50948, 51047);

                    ImmutableArray<string>
                    argumentNames = boundObjectInitializerMember.ArgumentNamesOpt.NullToEmpty()
                    ;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 51065, 51171);

                    ImmutableArray<RefKind>
                    argumentRefKinds = boundObjectInitializerMember.ArgumentRefKindsOpt.NullToEmpty()
                    ;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 51189, 51327);

                    return f_10951_51196_51326(operation, arguments, argumentNames, argumentRefKinds, _semanticModel, syntax, type, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 50552, 51342);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 51358, 53759);

                switch (f_10951_51366_51383(memberSymbol))
                {

                    case SymbolKind.Field:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 51358, 53759);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 51461, 51499);

                        var
                        field = (FieldSymbol)memberSymbol
                        ;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 51521, 51548);

                        bool
                        isDeclaration = false
                        ;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 51570, 51726);

                        return f_10951_51577_51725(f_10951_51605_51628(field), isDeclaration, f_10951_51645_51661(), _semanticModel, syntax, type, constantValue: null, isImplicit);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 51358, 53759);

                    case SymbolKind.Event:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 51358, 53759);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 51788, 51832);

                        var
                        eventSymbol = (EventSymbol)memberSymbol
                        ;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 51854, 51980);

                        return f_10951_51861_51979(f_10951_51889_51918(eventSymbol), f_10951_51920_51936(), _semanticModel, syntax, type, isImplicit);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 51358, 53759);

                    case SymbolKind.Property:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 51358, 53759);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 52045, 52089);

                        var
                        property = (PropertySymbol)memberSymbol
                        ;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 52113, 52158);

                        ImmutableArray<IArgumentOperation>
                        arguments
                        = default(ImmutableArray<IArgumentOperation>);

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 52180, 53498) || true) && (f_10951_52184_52231_M(!boundObjectInitializerMember.Arguments.IsEmpty))
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 52180, 53498);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 52540, 52677);

                            MethodSymbol?
                            accessor = (DynAbs.Tracing.TraceSender.Conditional_F1(10951, 52565, 52596) || ((isObjectOrCollectionInitializer && DynAbs.Tracing.TraceSender.Conditional_F2(10951, 52599, 52636)) || DynAbs.Tracing.TraceSender.Conditional_F3(10951, 52639, 52676))) ? f_10951_52599_52636(property) : f_10951_52639_52676(property)
                            ;

                            if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 52703, 53205) || true) && (accessor == null || (DynAbs.Tracing.TraceSender.Expression_False(10951, 52707, 52812) || f_10951_52727_52766(boundObjectInitializerMember) == LookupResultKind.OverloadResolutionFailure) || (DynAbs.Tracing.TraceSender.Expression_False(10951, 52707, 52864) || f_10951_52816_52843(accessor) is ErrorMethodSymbol))
                            )

                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 52703, 53205);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 52922, 53047);

                                var
                                children = f_10951_52937_53046(this, f_10951_52976_53045(((IBoundInvalidNode)boundObjectInitializerMember)))
                                ;
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 53077, 53178);

                                return f_10951_53084_53177(children, _semanticModel, syntax, type, constantValue: null, isImplicit);
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 52703, 53205);
                            }
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 53233, 53324);

                            arguments = f_10951_53245_53323(this, boundObjectInitializerMember, isObjectOrCollectionInitializer);
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 52180, 53498);
                        }

                        else

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 52180, 53498);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 53422, 53475);

                            arguments = ImmutableArray<IArgumentOperation>.Empty;
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 52180, 53498);
                        }
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 53522, 53659);

                        return f_10951_53529_53658(f_10951_53560_53586(property), arguments, f_10951_53599_53615(), _semanticModel, syntax, type, isImplicit);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 51358, 53759);

                    default:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 51358, 53759);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 53707, 53744);

                        throw f_10951_53713_53743();
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 51358, 53759);
                }

                IOperation? createReceiver()
                {
                    try
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterMethod(10951, 53804, 53991);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 53807, 53991);
                        return (DynAbs.Tracing.TraceSender.Conditional_F1(10951, 53807, 53837) || ((f_10951_53807_53829_M(DynAbs.Tracing.TraceSender.TraceConditionalAccessExpression(memberSymbol, 10951, 53807, 53829)?.IsStatic) == true && DynAbs.Tracing.TraceSender.Conditional_F2(10951, 53861, 53865)) || DynAbs.Tracing.TraceSender.Conditional_F3(10951, 53889, 53991))) ? null : f_10951_53889_53991(this, boundObjectInitializerMember.Syntax, f_10951_53949_53990(boundObjectInitializerMember)); DynAbs.Tracing.TraceSender.TraceExitMethod(10951, 53804, 53991);
                    }
                    catch
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10951, 53804, 53991);
                        throw;
                    }
                    finally
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10951, 53804, 53991);
                    }
                    throw new System.Exception("Slicer error: unreachable code");
                }
                DynAbs.Tracing.TraceSender.TraceExitMethod(10951, 50042, 54003);

                Microsoft.CodeAnalysis.CSharp.Symbol?
                f_10951_50257_50298(Microsoft.CodeAnalysis.CSharp.BoundObjectInitializerMember
                this_param)
                {
                    var return_v = this_param.MemberSymbol;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 50257, 50298);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ITypeSymbol?
                f_10951_50403_50453(Microsoft.CodeAnalysis.CSharp.BoundObjectInitializerMember
                this_param)
                {
                    var return_v = this_param.GetPublicTypeSymbol();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 50403, 50453);
                    return return_v;
                }


                bool
                f_10951_50486_50535(Microsoft.CodeAnalysis.CSharp.BoundObjectInitializerMember
                this_param)
                {
                    var return_v = this_param.WasCompilerGenerated;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 50486, 50535);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                f_10951_50632_50665(Microsoft.CodeAnalysis.CSharp.BoundObjectInitializerMember
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 50632, 50665);
                    return return_v;
                }


                bool
                f_10951_50632_50677(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                type)
                {
                    var return_v = type.IsDynamic();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 50632, 50677);
                    return return_v;
                }


                int
                f_10951_50619_50678(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 50619, 50678);
                    return 0;
                }


                Microsoft.CodeAnalysis.IOperation
                f_10951_50722_50801(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundObjectInitializerMember
                indexer)
                {
                    var return_v = this_param.CreateBoundDynamicIndexerAccessExpressionReceiver((Microsoft.CodeAnalysis.CSharp.BoundExpression)indexer);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 50722, 50801);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.IOperation>
                f_10951_50859_50929(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundObjectInitializerMember
                indexer)
                {
                    var return_v = this_param.CreateBoundDynamicIndexerAccessArguments((Microsoft.CodeAnalysis.CSharp.BoundExpression)indexer);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 50859, 50929);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.DynamicIndexerAccessOperation
                f_10951_51196_51326(Microsoft.CodeAnalysis.IOperation
                operation, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.IOperation>
                arguments, System.Collections.Immutable.ImmutableArray<string>
                argumentNames, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.RefKind>
                argumentRefKinds, Microsoft.CodeAnalysis.SemanticModel
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.ITypeSymbol?
                type, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.DynamicIndexerAccessOperation(operation, arguments, argumentNames, argumentRefKinds, semanticModel, syntax, type, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 51196, 51326);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SymbolKind
                f_10951_51366_51383(Microsoft.CodeAnalysis.CSharp.Symbol
                this_param)
                {
                    var return_v = this_param.Kind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 51366, 51383);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IFieldSymbol?
                f_10951_51605_51628(Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol
                symbol)
                {
                    var return_v = symbol.GetPublicSymbol();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 51605, 51628);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_10951_51645_51661()
                {
                    var return_v = createReceiver();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 51645, 51661);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.FieldReferenceOperation
                f_10951_51577_51725(Microsoft.CodeAnalysis.IFieldSymbol
                field, bool
                isDeclaration, Microsoft.CodeAnalysis.IOperation?
                instance, Microsoft.CodeAnalysis.SemanticModel
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.ITypeSymbol?
                type, Microsoft.CodeAnalysis.ConstantValue?
                constantValue, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.FieldReferenceOperation(field, isDeclaration, instance, semanticModel, syntax, type, constantValue: constantValue, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 51577, 51725);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IEventSymbol?
                f_10951_51889_51918(Microsoft.CodeAnalysis.CSharp.Symbols.EventSymbol
                symbol)
                {
                    var return_v = symbol.GetPublicSymbol();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 51889, 51918);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_10951_51920_51936()
                {
                    var return_v = createReceiver();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 51920, 51936);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.EventReferenceOperation
                f_10951_51861_51979(Microsoft.CodeAnalysis.IEventSymbol
                @event, Microsoft.CodeAnalysis.IOperation?
                instance, Microsoft.CodeAnalysis.SemanticModel
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.ITypeSymbol?
                type, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.EventReferenceOperation(@event, instance, semanticModel, syntax, type, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 51861, 51979);
                    return return_v;
                }


                bool
                f_10951_52184_52231_M(bool
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 52184, 52231);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol?
                f_10951_52599_52636(Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol
                property)
                {
                    var return_v = property.GetOwnOrInheritedGetMethod();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 52599, 52636);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol?
                f_10951_52639_52676(Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol
                property)
                {
                    var return_v = property.GetOwnOrInheritedSetMethod();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 52639, 52676);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.LookupResultKind
                f_10951_52727_52766(Microsoft.CodeAnalysis.CSharp.BoundObjectInitializerMember
                this_param)
                {
                    var return_v = this_param.ResultKind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 52727, 52766);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                f_10951_52816_52843(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                this_param)
                {
                    var return_v = this_param.OriginalDefinition;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 52816, 52843);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundNode>
                f_10951_52976_53045(Microsoft.CodeAnalysis.CSharp.IBoundInvalidNode
                this_param)
                {
                    var return_v = this_param.InvalidNodeChildren;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 52976, 53045);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.IOperation>
                f_10951_52937_53046(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundNode>
                boundNodes)
                {
                    var return_v = this_param.CreateFromArray<Microsoft.CodeAnalysis.CSharp.BoundNode, Microsoft.CodeAnalysis.IOperation>(boundNodes);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 52937, 53046);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.InvalidOperation
                f_10951_53084_53177(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.IOperation>
                children, Microsoft.CodeAnalysis.SemanticModel
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.ITypeSymbol?
                type, Microsoft.CodeAnalysis.ConstantValue?
                constantValue, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.InvalidOperation(children, semanticModel, syntax, type, constantValue: constantValue, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 53084, 53177);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Operations.IArgumentOperation>
                f_10951_53245_53323(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundObjectInitializerMember
                containingExpression, bool
                isObjectOrCollectionInitializer)
                {
                    var return_v = this_param.DeriveArguments((Microsoft.CodeAnalysis.CSharp.BoundNode)containingExpression, isObjectOrCollectionInitializer);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 53245, 53323);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IPropertySymbol?
                f_10951_53560_53586(Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol
                symbol)
                {
                    var return_v = symbol.GetPublicSymbol();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 53560, 53586);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_10951_53599_53615()
                {
                    var return_v = createReceiver();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 53599, 53615);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.PropertyReferenceOperation
                f_10951_53529_53658(Microsoft.CodeAnalysis.IPropertySymbol
                property, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Operations.IArgumentOperation>
                arguments, Microsoft.CodeAnalysis.IOperation?
                instance, Microsoft.CodeAnalysis.SemanticModel
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.ITypeSymbol?
                type, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.PropertyReferenceOperation(property, arguments, instance, semanticModel, syntax, type, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 53529, 53658);
                    return return_v;
                }


                System.Exception
                f_10951_53713_53743()
                {
                    var return_v = ExceptionUtilities.Unreachable;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 53713, 53743);
                    return return_v;
                }


                bool?
                f_10951_53807_53829_M(bool?
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 53807, 53829);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                f_10951_53949_53990(Microsoft.CodeAnalysis.CSharp.BoundObjectInitializerMember
                this_param)
                {
                    var return_v = this_param.ReceiverType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 53949, 53990);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.IInstanceReferenceOperation
                f_10951_53889_53991(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                type)
                {
                    var return_v = this_param.CreateImplicitReceiver(syntax, type);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 53889, 53991);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10951, 50042, 54003);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10951, 50042, 54003);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private IOperation CreateBoundDynamicObjectInitializerMemberOperation(BoundDynamicObjectInitializerMember boundDynamicObjectInitializerMember)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10951, 54015, 55043);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 54182, 54329);

                IOperation
                instanceReceiver = f_10951_54212_54328(this, boundDynamicObjectInitializerMember.Syntax, f_10951_54279_54327(boundDynamicObjectInitializerMember))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 54343, 54410);

                string
                memberName = f_10951_54363_54409(boundDynamicObjectInitializerMember)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 54424, 54502);

                ImmutableArray<ITypeSymbol>
                typeArguments = ImmutableArray<ITypeSymbol>.Empty
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 54516, 54612);

                ITypeSymbol
                containingType = f_10951_54545_54611(f_10951_54545_54593(boundDynamicObjectInitializerMember))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 54626, 54689);

                SyntaxNode
                syntax = boundDynamicObjectInitializerMember.Syntax
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 54703, 54781);

                ITypeSymbol?
                type = f_10951_54723_54780(boundDynamicObjectInitializerMember)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 54795, 54870);

                bool
                isImplicit = f_10951_54813_54869(boundDynamicObjectInitializerMember)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 54886, 55032);

                return f_10951_54893_55031(instanceReceiver, memberName, typeArguments, containingType, _semanticModel, syntax, type, isImplicit);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10951, 54015, 55043);

                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                f_10951_54279_54327(Microsoft.CodeAnalysis.CSharp.BoundDynamicObjectInitializerMember
                this_param)
                {
                    var return_v = this_param.ReceiverType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 54279, 54327);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.IInstanceReferenceOperation
                f_10951_54212_54328(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                type)
                {
                    var return_v = this_param.CreateImplicitReceiver(syntax, type);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 54212, 54328);
                    return return_v;
                }


                string
                f_10951_54363_54409(Microsoft.CodeAnalysis.CSharp.BoundDynamicObjectInitializerMember
                this_param)
                {
                    var return_v = this_param.MemberName;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 54363, 54409);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                f_10951_54545_54593(Microsoft.CodeAnalysis.CSharp.BoundDynamicObjectInitializerMember
                this_param)
                {
                    var return_v = this_param.ReceiverType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 54545, 54593);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ITypeSymbol?
                f_10951_54545_54611(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                symbol)
                {
                    var return_v = symbol.GetPublicSymbol();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 54545, 54611);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ITypeSymbol?
                f_10951_54723_54780(Microsoft.CodeAnalysis.CSharp.BoundDynamicObjectInitializerMember
                this_param)
                {
                    var return_v = this_param.GetPublicTypeSymbol();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 54723, 54780);
                    return return_v;
                }


                bool
                f_10951_54813_54869(Microsoft.CodeAnalysis.CSharp.BoundDynamicObjectInitializerMember
                this_param)
                {
                    var return_v = this_param.WasCompilerGenerated;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 54813, 54869);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.DynamicMemberReferenceOperation
                f_10951_54893_55031(Microsoft.CodeAnalysis.IOperation
                instance, string
                memberName, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.ITypeSymbol>
                typeArguments, Microsoft.CodeAnalysis.ITypeSymbol
                containingType, Microsoft.CodeAnalysis.SemanticModel
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.ITypeSymbol?
                type, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.DynamicMemberReferenceOperation(instance, memberName, typeArguments, containingType, semanticModel, syntax, type, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 54893, 55031);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10951, 54015, 55043);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10951, 54015, 55043);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private IOperation CreateBoundCollectionElementInitializerOperation(BoundCollectionElementInitializer boundCollectionElementInitializer)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10951, 55055, 56525);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 55216, 55285);

                MethodSymbol
                addMethod = f_10951_55241_55284(boundCollectionElementInitializer)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 55299, 55412);

                IOperation?
                receiver = f_10951_55322_55411(this, f_10951_55346_55399(boundCollectionElementInitializer), addMethod)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 55426, 55524);

                ImmutableArray<IArgumentOperation>
                arguments = f_10951_55473_55523(this, boundCollectionElementInitializer)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 55538, 55599);

                SyntaxNode
                syntax = boundCollectionElementInitializer.Syntax
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 55613, 55689);

                ITypeSymbol?
                type = f_10951_55633_55688(boundCollectionElementInitializer)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 55703, 55782);

                ConstantValue?
                constantValue = f_10951_55734_55781(boundCollectionElementInitializer)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 55796, 55869);

                bool
                isImplicit = f_10951_55814_55868(boundCollectionElementInitializer)
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 55885, 56253) || true) && (f_10951_55889_55961(this, f_10951_55905_55949(boundCollectionElementInitializer), addMethod))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 55885, 56253);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 55995, 56125);

                    var
                    children = f_10951_56010_56124(this, f_10951_56049_56123(((IBoundInvalidNode)boundCollectionElementInitializer)))
                    ;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 56143, 56238);

                    return f_10951_56150_56237(children, _semanticModel, syntax, type, constantValue, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 55885, 56253);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 56269, 56366);

                bool
                isVirtual = f_10951_56286_56365(this, addMethod, f_10951_56311_56364(boundCollectionElementInitializer))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 56380, 56514);

                return f_10951_56387_56513(f_10951_56411_56438(addMethod), receiver, isVirtual, arguments, _semanticModel, syntax, type, isImplicit);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10951, 55055, 56525);

                Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                f_10951_55241_55284(Microsoft.CodeAnalysis.CSharp.BoundCollectionElementInitializer
                this_param)
                {
                    var return_v = this_param.AddMethod;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 55241, 55284);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression?
                f_10951_55346_55399(Microsoft.CodeAnalysis.CSharp.BoundCollectionElementInitializer
                this_param)
                {
                    var return_v = this_param.ImplicitReceiverOpt;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 55346, 55399);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_10951_55322_55411(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression?
                instance, Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                symbol)
                {
                    var return_v = this_param.CreateReceiverOperation((Microsoft.CodeAnalysis.CSharp.BoundNode?)instance, (Microsoft.CodeAnalysis.CSharp.Symbol)symbol);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 55322, 55411);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Operations.IArgumentOperation>
                f_10951_55473_55523(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundCollectionElementInitializer
                containingExpression)
                {
                    var return_v = this_param.DeriveArguments((Microsoft.CodeAnalysis.CSharp.BoundNode)containingExpression);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 55473, 55523);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ITypeSymbol?
                f_10951_55633_55688(Microsoft.CodeAnalysis.CSharp.BoundCollectionElementInitializer
                this_param)
                {
                    var return_v = this_param.GetPublicTypeSymbol();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 55633, 55688);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ConstantValue?
                f_10951_55734_55781(Microsoft.CodeAnalysis.CSharp.BoundCollectionElementInitializer
                this_param)
                {
                    var return_v = this_param.ConstantValue;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 55734, 55781);
                    return return_v;
                }


                bool
                f_10951_55814_55868(Microsoft.CodeAnalysis.CSharp.BoundCollectionElementInitializer
                this_param)
                {
                    var return_v = this_param.WasCompilerGenerated;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 55814, 55868);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.LookupResultKind
                f_10951_55905_55949(Microsoft.CodeAnalysis.CSharp.BoundCollectionElementInitializer
                this_param)
                {
                    var return_v = this_param.ResultKind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 55905, 55949);
                    return return_v;
                }


                bool
                f_10951_55889_55961(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.LookupResultKind
                resultKind, Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                targetMethod)
                {
                    var return_v = this_param.IsMethodInvalid(resultKind, targetMethod);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 55889, 55961);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundNode>
                f_10951_56049_56123(Microsoft.CodeAnalysis.CSharp.IBoundInvalidNode
                this_param)
                {
                    var return_v = this_param.InvalidNodeChildren;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 56049, 56123);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.IOperation>
                f_10951_56010_56124(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundNode>
                boundNodes)
                {
                    var return_v = this_param.CreateFromArray<Microsoft.CodeAnalysis.CSharp.BoundNode, Microsoft.CodeAnalysis.IOperation>(boundNodes);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 56010, 56124);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.InvalidOperation
                f_10951_56150_56237(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.IOperation>
                children, Microsoft.CodeAnalysis.SemanticModel
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.ITypeSymbol?
                type, Microsoft.CodeAnalysis.ConstantValue?
                constantValue, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.InvalidOperation(children, semanticModel, syntax, type, constantValue, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 56150, 56237);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression?
                f_10951_56311_56364(Microsoft.CodeAnalysis.CSharp.BoundCollectionElementInitializer
                this_param)
                {
                    var return_v = this_param.ImplicitReceiverOpt;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 56311, 56364);
                    return return_v;
                }


                bool
                f_10951_56286_56365(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                targetMethod, Microsoft.CodeAnalysis.CSharp.BoundExpression?
                receiver)
                {
                    var return_v = this_param.IsCallVirtual(targetMethod, receiver);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 56286, 56365);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IMethodSymbol?
                f_10951_56411_56438(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                symbol)
                {
                    var return_v = symbol.GetPublicSymbol();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 56411, 56438);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.InvocationOperation
                f_10951_56387_56513(Microsoft.CodeAnalysis.IMethodSymbol
                targetMethod, Microsoft.CodeAnalysis.IOperation?
                instance, bool
                isVirtual, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Operations.IArgumentOperation>
                arguments, Microsoft.CodeAnalysis.SemanticModel
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.ITypeSymbol?
                type, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.InvocationOperation(targetMethod, instance, isVirtual, arguments, semanticModel, syntax, type, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 56387, 56513);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10951, 55055, 56525);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10951, 55055, 56525);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private IDynamicMemberReferenceOperation CreateBoundDynamicMemberAccessOperation(BoundDynamicMemberAccess boundDynamicMemberAccess)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10951, 56537, 57028);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 56693, 57017);

                return f_10951_56700_57016(this, f_10951_56740_56773(boundDynamicMemberAccess), f_10951_56775_56839(f_10951_56797_56838(boundDynamicMemberAccess)), f_10951_56841_56870(boundDynamicMemberAccess), boundDynamicMemberAccess.Syntax, f_10951_56922_56968(boundDynamicMemberAccess), f_10951_56970_57015(boundDynamicMemberAccess));
                DynAbs.Tracing.TraceSender.TraceExitMethod(10951, 56537, 57028);

                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10951_56740_56773(Microsoft.CodeAnalysis.CSharp.BoundDynamicMemberAccess
                this_param)
                {
                    var return_v = this_param.Receiver;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 56740, 56773);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations>
                f_10951_56797_56838(Microsoft.CodeAnalysis.CSharp.BoundDynamicMemberAccess
                this_param)
                {
                    var return_v = this_param.TypeArgumentsOpt;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 56797, 56838);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol>
                f_10951_56775_56839(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations>
                typesOpt)
                {
                    var return_v = TypeMap.AsTypeSymbols(typesOpt);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 56775, 56839);
                    return return_v;
                }


                string
                f_10951_56841_56870(Microsoft.CodeAnalysis.CSharp.BoundDynamicMemberAccess
                this_param)
                {
                    var return_v = this_param.Name;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 56841, 56870);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ITypeSymbol?
                f_10951_56922_56968(Microsoft.CodeAnalysis.CSharp.BoundDynamicMemberAccess
                this_param)
                {
                    var return_v = this_param.GetPublicTypeSymbol();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 56922, 56968);
                    return return_v;
                }


                bool
                f_10951_56970_57015(Microsoft.CodeAnalysis.CSharp.BoundDynamicMemberAccess
                this_param)
                {
                    var return_v = this_param.WasCompilerGenerated;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 56970, 57015);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.IDynamicMemberReferenceOperation
                f_10951_56700_57016(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                receiver, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol>
                typeArgumentsOpt, string
                memberName, Microsoft.CodeAnalysis.SyntaxNode
                syntaxNode, Microsoft.CodeAnalysis.ITypeSymbol?
                type, bool
                isImplicit)
                {
                    var return_v = this_param.CreateBoundDynamicMemberAccessOperation(receiver, typeArgumentsOpt, memberName, syntaxNode, type, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 56700, 57016);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10951, 56537, 57028);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10951, 56537, 57028);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private IDynamicMemberReferenceOperation CreateBoundDynamicMemberAccessOperation(
                    BoundExpression? receiver,
                    ImmutableArray<TypeSymbol> typeArgumentsOpt,
                    string memberName,
                    SyntaxNode syntaxNode,
                    ITypeSymbol? type,
                    bool isImplicit)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10951, 57040, 58063);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 57374, 57409);

                ITypeSymbol?
                containingType = null
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 57423, 57600) || true) && (f_10951_57427_57441_M(DynAbs.Tracing.TraceSender.TraceConditionalAccessExpression(receiver, 10951, 57427, 57441)?.Kind) == BoundKind.TypeExpression)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 57423, 57600);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 57503, 57551);

                    containingType = f_10951_57520_57550(receiver);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 57569, 57585);

                    receiver = null;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 57423, 57600);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 57616, 57694);

                ImmutableArray<ITypeSymbol>
                typeArguments = ImmutableArray<ITypeSymbol>.Empty
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 57708, 57840) || true) && (f_10951_57712_57739_M(!typeArgumentsOpt.IsDefault))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 57708, 57840);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 57773, 57825);

                    typeArguments = typeArgumentsOpt.GetPublicSymbols();
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 57708, 57840);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 57856, 57896);

                IOperation?
                instance = f_10951_57879_57895(this, receiver)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 57910, 58052);

                return f_10951_57917_58051(instance, memberName, typeArguments, containingType, _semanticModel, syntaxNode, type, isImplicit);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10951, 57040, 58063);

                Microsoft.CodeAnalysis.CSharp.BoundKind?
                f_10951_57427_57441_M(Microsoft.CodeAnalysis.CSharp.BoundKind?
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 57427, 57441);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ITypeSymbol?
                f_10951_57520_57550(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.GetPublicTypeSymbol();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 57520, 57550);
                    return return_v;
                }


                bool
                f_10951_57712_57739_M(bool
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 57712, 57739);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_10951_57879_57895(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression?
                boundNode)
                {
                    var return_v = this_param.Create((Microsoft.CodeAnalysis.CSharp.BoundNode?)boundNode);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 57879, 57895);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.DynamicMemberReferenceOperation
                f_10951_57917_58051(Microsoft.CodeAnalysis.IOperation?
                instance, string
                memberName, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.ITypeSymbol>
                typeArguments, Microsoft.CodeAnalysis.ITypeSymbol?
                containingType, Microsoft.CodeAnalysis.SemanticModel
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.ITypeSymbol?
                type, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.DynamicMemberReferenceOperation(instance, memberName, typeArguments, containingType, semanticModel, syntax, type, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 57917, 58051);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10951, 57040, 58063);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10951, 57040, 58063);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private IDynamicInvocationOperation CreateBoundDynamicCollectionElementInitializerOperation(BoundDynamicCollectionElementInitializer boundCollectionElementInitializer)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10951, 58075, 58999);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 58267, 58383);

                IOperation
                operation = f_10951_58290_58382(this, f_10951_58337_58381(boundCollectionElementInitializer))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 58397, 58526);

                ImmutableArray<IOperation>
                arguments = f_10951_58436_58525(this, f_10951_58481_58524(boundCollectionElementInitializer))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 58540, 58601);

                SyntaxNode
                syntax = boundCollectionElementInitializer.Syntax
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 58615, 58691);

                ITypeSymbol?
                type = f_10951_58635_58690(boundCollectionElementInitializer)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 58705, 58778);

                bool
                isImplicit = f_10951_58723_58777(boundCollectionElementInitializer)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 58792, 58988);

                return f_10951_58799_58987(operation, arguments, argumentNames: ImmutableArray<string>.Empty, argumentRefKinds: ImmutableArray<RefKind>.Empty, _semanticModel, syntax, type, isImplicit);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10951, 58075, 58999);

                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10951_58337_58381(Microsoft.CodeAnalysis.CSharp.BoundDynamicCollectionElementInitializer
                this_param)
                {
                    var return_v = this_param.Expression;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 58337, 58381);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation
                f_10951_58290_58382(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                receiver)
                {
                    var return_v = this_param.CreateBoundDynamicInvocationExpressionReceiver((Microsoft.CodeAnalysis.CSharp.BoundNode)receiver);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 58290, 58382);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                f_10951_58481_58524(Microsoft.CodeAnalysis.CSharp.BoundDynamicCollectionElementInitializer
                this_param)
                {
                    var return_v = this_param.Arguments;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 58481, 58524);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.IOperation>
                f_10951_58436_58525(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                boundNodes)
                {
                    var return_v = this_param.CreateFromArray<Microsoft.CodeAnalysis.CSharp.BoundExpression, Microsoft.CodeAnalysis.IOperation>(boundNodes);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 58436, 58525);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ITypeSymbol?
                f_10951_58635_58690(Microsoft.CodeAnalysis.CSharp.BoundDynamicCollectionElementInitializer
                this_param)
                {
                    var return_v = this_param.GetPublicTypeSymbol();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 58635, 58690);
                    return return_v;
                }


                bool
                f_10951_58723_58777(Microsoft.CodeAnalysis.CSharp.BoundDynamicCollectionElementInitializer
                this_param)
                {
                    var return_v = this_param.WasCompilerGenerated;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 58723, 58777);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.DynamicInvocationOperation
                f_10951_58799_58987(Microsoft.CodeAnalysis.IOperation
                operation, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.IOperation>
                arguments, System.Collections.Immutable.ImmutableArray<string>
                argumentNames, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.RefKind>
                argumentRefKinds, Microsoft.CodeAnalysis.SemanticModel
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.ITypeSymbol?
                type, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.DynamicInvocationOperation(operation, arguments, argumentNames: argumentNames, argumentRefKinds: argumentRefKinds, semanticModel, syntax, type, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 58799, 58987);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10951, 58075, 58999);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10951, 58075, 58999);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private IOperation CreateUnboundLambdaOperation(UnboundLambda unboundLambda)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10951, 59011, 59661);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 59546, 59609);

                BoundLambda
                boundLambda = f_10951_59572_59608(unboundLambda)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 59623, 59650);

                return f_10951_59630_59649(this, boundLambda);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10951, 59011, 59661);

                Microsoft.CodeAnalysis.CSharp.BoundLambda
                f_10951_59572_59608(Microsoft.CodeAnalysis.CSharp.UnboundLambda
                this_param)
                {
                    var return_v = this_param.BindForErrorRecovery();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 59572, 59608);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_10951_59630_59649(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundLambda
                boundNode)
                {
                    var return_v = this_param.Create((Microsoft.CodeAnalysis.CSharp.BoundNode)boundNode);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 59630, 59649);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10951, 59011, 59661);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10951, 59011, 59661);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private IAnonymousFunctionOperation CreateBoundLambdaOperation(BoundLambda boundLambda)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10951, 59673, 60155);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 59785, 59845);

                IMethodSymbol
                symbol = f_10951_59808_59844(f_10951_59808_59826(boundLambda))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 59859, 59924);

                IBlockOperation
                body = (IBlockOperation)f_10951_59899_59923(this, f_10951_59906_59922(boundLambda))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 59938, 59977);

                SyntaxNode
                syntax = boundLambda.Syntax
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 59991, 60042);

                bool
                isImplicit = f_10951_60009_60041(boundLambda)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 60056, 60144);

                return f_10951_60063_60143(symbol, body, _semanticModel, syntax, isImplicit);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10951, 59673, 60155);

                Microsoft.CodeAnalysis.CSharp.Symbols.LambdaSymbol
                f_10951_59808_59826(Microsoft.CodeAnalysis.CSharp.BoundLambda
                this_param)
                {
                    var return_v = this_param.Symbol;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 59808, 59826);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IMethodSymbol?
                f_10951_59808_59844(Microsoft.CodeAnalysis.CSharp.Symbols.LambdaSymbol
                symbol)
                {
                    var return_v = symbol.GetPublicSymbol();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 59808, 59844);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundBlock
                f_10951_59906_59922(Microsoft.CodeAnalysis.CSharp.BoundLambda
                this_param)
                {
                    var return_v = this_param.Body;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 59906, 59922);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_10951_59899_59923(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundBlock
                boundNode)
                {
                    var return_v = this_param.Create((Microsoft.CodeAnalysis.CSharp.BoundNode)boundNode);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 59899, 59923);
                    return return_v;
                }


                bool
                f_10951_60009_60041(Microsoft.CodeAnalysis.CSharp.BoundLambda
                this_param)
                {
                    var return_v = this_param.WasCompilerGenerated;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 60009, 60041);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.AnonymousFunctionOperation
                f_10951_60063_60143(Microsoft.CodeAnalysis.IMethodSymbol
                symbol, Microsoft.CodeAnalysis.Operations.IBlockOperation
                body, Microsoft.CodeAnalysis.SemanticModel
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.AnonymousFunctionOperation(symbol, body, semanticModel, syntax, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 60063, 60143);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10951, 59673, 60155);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10951, 59673, 60155);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private ILocalFunctionOperation CreateBoundLocalFunctionStatementOperation(BoundLocalFunctionStatement boundLocalFunctionStatement)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10951, 60167, 61008);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 60323, 60406);

                IBlockOperation?
                body = (IBlockOperation?)f_10951_60365_60405(this, f_10951_60372_60404(boundLocalFunctionStatement))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 60443, 60479);

                IBlockOperation?
                ignoredBody = null
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 60493, 60644) || true) && (boundLocalFunctionStatement is { BlockBody: { }, ExpressionBody: { } exprBody })
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 60493, 60644);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 60595, 60644);

                    ignoredBody = (IBlockOperation?)f_10951_60627_60643(this, exprBody);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 60493, 60644);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 60660, 60736);

                IMethodSymbol
                symbol = f_10951_60683_60735(f_10951_60683_60717(boundLocalFunctionStatement))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 60750, 60805);

                SyntaxNode
                syntax = boundLocalFunctionStatement.Syntax
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 60819, 60886);

                bool
                isImplicit = f_10951_60837_60885(boundLocalFunctionStatement)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 60900, 60997);

                return f_10951_60907_60996(symbol, body, ignoredBody, _semanticModel, syntax, isImplicit);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10951, 60167, 61008);

                Microsoft.CodeAnalysis.CSharp.BoundBlock?
                f_10951_60372_60404(Microsoft.CodeAnalysis.CSharp.BoundLocalFunctionStatement
                this_param)
                {
                    var return_v = this_param.Body;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 60372, 60404);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_10951_60365_60405(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundBlock?
                boundNode)
                {
                    var return_v = this_param.Create((Microsoft.CodeAnalysis.CSharp.BoundNode?)boundNode);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 60365, 60405);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_10951_60627_60643(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundBlock
                boundNode)
                {
                    var return_v = this_param.Create((Microsoft.CodeAnalysis.CSharp.BoundNode)boundNode);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 60627, 60643);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.LocalFunctionSymbol
                f_10951_60683_60717(Microsoft.CodeAnalysis.CSharp.BoundLocalFunctionStatement
                this_param)
                {
                    var return_v = this_param.Symbol;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 60683, 60717);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IMethodSymbol?
                f_10951_60683_60735(Microsoft.CodeAnalysis.CSharp.Symbols.LocalFunctionSymbol
                symbol)
                {
                    var return_v = symbol.GetPublicSymbol();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 60683, 60735);
                    return return_v;
                }


                bool
                f_10951_60837_60885(Microsoft.CodeAnalysis.CSharp.BoundLocalFunctionStatement
                this_param)
                {
                    var return_v = this_param.WasCompilerGenerated;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 60837, 60885);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.LocalFunctionOperation
                f_10951_60907_60996(Microsoft.CodeAnalysis.IMethodSymbol
                symbol, Microsoft.CodeAnalysis.Operations.IBlockOperation?
                body, Microsoft.CodeAnalysis.Operations.IBlockOperation?
                ignoredBody, Microsoft.CodeAnalysis.SemanticModel
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.LocalFunctionOperation(symbol, body, ignoredBody, semanticModel, syntax, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 60907, 60996);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10951, 60167, 61008);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10951, 60167, 61008);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private IOperation CreateBoundConversionOperation(BoundConversion boundConversion)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10951, 61020, 67555);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 61127, 61221);

                bool
                isImplicit = f_10951_61145_61181(boundConversion) || (DynAbs.Tracing.TraceSender.Expression_False(10951, 61145, 61220) || f_10951_61185_61220_M(!boundConversion.ExplicitCastInCode))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 61235, 61290);

                BoundExpression
                boundOperand = f_10951_61266_61289(boundConversion)
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 61304, 67544) || true) && (f_10951_61308_61338(boundConversion) == CSharp.ConversionKind.MethodGroup)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 61304, 67544);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 61409, 61452);

                    SyntaxNode
                    syntax = boundConversion.Syntax
                    ;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 61470, 61528);

                    ITypeSymbol?
                    type = f_10951_61490_61527(boundConversion)
                    ;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 61546, 61607);

                    ConstantValue?
                    constantValue = f_10951_61577_61606(boundConversion)
                    ;

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 61627, 62106) || true) && (f_10951_61631_61651(boundConversion) is FunctionPointerTypeSymbol)
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 61627, 62106);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 61722, 61772);

                        f_10951_61722_61771(f_10951_61735_61760(boundConversion) is object);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 61794, 62087);

                        return f_10951_61801_62086(f_10951_61850_61992(this, f_10951_61912_61935(boundConversion), f_10951_61937_61962(boundConversion), suppressVirtualCalls: false), _semanticModel, syntax, type, f_10951_62049_62085(boundConversion));
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 61627, 62106);
                    }
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 62415, 62482);

                    IOperation
                    target = f_10951_62435_62481(this, boundConversion)
                    ;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 62500, 62587);

                    return f_10951_62507_62586(target, _semanticModel, syntax, type, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 61304, 67544);
                }

                else

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 61304, 67544);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 62653, 62696);

                    SyntaxNode
                    syntax = boundConversion.Syntax
                    ;

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 62716, 64016) || true) && (f_10951_62720_62736(syntax))
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 62716, 64016);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 63480, 63947);

                        f_10951_63480_63946(f_10951_63493_63510(boundOperand) == BoundKind.BadExpression || (DynAbs.Tracing.TraceSender.Expression_False(10951, 63493, 63945) || ((DynAbs.Tracing.TraceSender.Conditional_F1(10951, 63576, 63676) || (((boundOperand is BoundLambda temp && (DynAbs.Tracing.TraceSender.Expression_True(10951, 63577, 63675) && f_10951_63613_63622((BoundLambda)boundOperand).Statements.SingleOrDefault() is BoundReturnStatement)) && DynAbs.Tracing.TraceSender.Conditional_F2(10951, 63717, 63936)) || DynAbs.Tracing.TraceSender.Conditional_F3(10951, 63939, 63944))) ? f_10951_63717_63793(((BoundReturnStatement)f_10951_63740_63749((BoundLambda)boundOperand).Statements.SingleOrDefault())) != null && (DynAbs.Tracing.TraceSender.Expression_True(10951, 63717, 63936) && f_10951_63842_63909(((BoundReturnStatement)f_10951_63865_63874((BoundLambda)boundOperand).Statements.SingleOrDefault())) == BoundKind.BadExpression) : false)));
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 63969, 63997);

                        return f_10951_63976_63996(this, boundOperand);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 62716, 64016);
                    }
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 64036, 64094);

                    BoundConversion
                    correctedConversionNode = boundConversion
                    ;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 64112, 64163);

                    Conversion
                    conversion = f_10951_64136_64162(boundConversion)
                    ;

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 64183, 64917) || true) && (boundOperand.Syntax == boundConversion.Syntax)
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 64183, 64917);

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 64274, 64898) || true) && (f_10951_64278_64295(boundOperand) == BoundKind.ConvertedTupleLiteral && (DynAbs.Tracing.TraceSender.Expression_True(10951, 64278, 64429) && f_10951_64334_64429(f_10951_64352_64369(boundOperand), f_10951_64371_64391(boundConversion), TypeCompareKind.ConsiderEverything2)))
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 64274, 64898);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 64673, 64701);

                            return f_10951_64680_64700(this, boundOperand);
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 64274, 64898);
                        }

                        else

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 64274, 64898);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 64857, 64875);

                            isImplicit = true;
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 64274, 64898);
                        }
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 64183, 64917);
                    }

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 64937, 66137) || true) && (f_10951_64941_64975(boundConversion) && (DynAbs.Tracing.TraceSender.Expression_True(10951, 64941, 65000) && conversion.IsIdentity) && (DynAbs.Tracing.TraceSender.Expression_True(10951, 64941, 65045) && f_10951_65004_65021(boundOperand) == BoundKind.Conversion))
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 64937, 66137);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 65087, 65140);

                        var
                        nestedConversion = (BoundConversion)boundOperand
                        ;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 65162, 65219);

                        BoundExpression
                        nestedOperand = f_10951_65194_65218(nestedConversion)
                        ;

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 65243, 66118) || true) && (nestedConversion.Syntax == nestedOperand.Syntax && (DynAbs.Tracing.TraceSender.Expression_True(10951, 65247, 65333) && f_10951_65298_65333(nestedConversion)) && (DynAbs.Tracing.TraceSender.Expression_True(10951, 65247, 65415) && f_10951_65362_65380(nestedOperand) == BoundKind.ConvertedTupleLiteral) && (DynAbs.Tracing.TraceSender.Expression_True(10951, 65247, 65542) && !f_10951_65445_65542(f_10951_65463_65484(nestedConversion), f_10951_65486_65504(nestedOperand), TypeCompareKind.ConsiderEverything2)))
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 65243, 66118);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 65985, 66026);

                            conversion = f_10951_65998_66025(nestedConversion);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 66052, 66095);

                            correctedConversionNode = nestedConversion;
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 65243, 66118);
                        }
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 64937, 66137);
                    }
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 66157, 66215);

                    ITypeSymbol?
                    type = f_10951_66177_66214(boundConversion)
                    ;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 66233, 66294);

                    ConstantValue?
                    constantValue = f_10951_66264_66293(boundConversion)
                    ;

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 66455, 67529) || true) && ((f_10951_66460_66477(boundOperand) == BoundKind.Lambda || (DynAbs.Tracing.TraceSender.Expression_False(10951, 66460, 66567) || f_10951_66523_66540(boundOperand) == BoundKind.UnboundLambda) || (DynAbs.Tracing.TraceSender.Expression_False(10951, 66460, 66635) || f_10951_66593_66610(boundOperand) == BoundKind.MethodGroup)) && (DynAbs.Tracing.TraceSender.Expression_True(10951, 66459, 66698) && f_10951_66661_66698(f_10951_66661_66681(boundConversion))))
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 66455, 67529);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 66740, 66815);

                        IOperation
                        target = f_10951_66760_66814(this, correctedConversionNode)
                        ;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 66837, 66924);

                        return f_10951_66844_66923(target, _semanticModel, syntax, type, isImplicit);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 66455, 67529);
                    }

                    else

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 66455, 67529);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 67006, 67029);

                        bool
                        isTryCast = false
                        ;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 67209, 67274);

                        bool
                        isChecked = conversion.IsNumeric && (DynAbs.Tracing.TraceSender.Expression_True(10951, 67226, 67273) && f_10951_67250_67273(boundConversion))
                        ;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 67296, 67357);

                        IOperation
                        operand = f_10951_67317_67356(this, f_10951_67324_67355(correctedConversionNode))
                        ;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 67379, 67510);

                        return f_10951_67386_67509(operand, conversion, isTryCast, isChecked, _semanticModel, syntax, type, constantValue, isImplicit);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 66455, 67529);
                    }
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 61304, 67544);
                }
                DynAbs.Tracing.TraceSender.TraceExitMethod(10951, 61020, 67555);

                bool
                f_10951_61145_61181(Microsoft.CodeAnalysis.CSharp.BoundConversion
                this_param)
                {
                    var return_v = this_param.WasCompilerGenerated;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 61145, 61181);
                    return return_v;
                }


                bool
                f_10951_61185_61220_M(bool
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 61185, 61220);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10951_61266_61289(Microsoft.CodeAnalysis.CSharp.BoundConversion
                this_param)
                {
                    var return_v = this_param.Operand;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 61266, 61289);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.ConversionKind
                f_10951_61308_61338(Microsoft.CodeAnalysis.CSharp.BoundConversion
                this_param)
                {
                    var return_v = this_param.ConversionKind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 61308, 61338);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ITypeSymbol?
                f_10951_61490_61527(Microsoft.CodeAnalysis.CSharp.BoundConversion
                this_param)
                {
                    var return_v = this_param.GetPublicTypeSymbol();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 61490, 61527);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ConstantValue?
                f_10951_61577_61606(Microsoft.CodeAnalysis.CSharp.BoundConversion
                this_param)
                {
                    var return_v = this_param.ConstantValue;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 61577, 61606);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                f_10951_61631_61651(Microsoft.CodeAnalysis.CSharp.BoundConversion
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 61631, 61651);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol?
                f_10951_61735_61760(Microsoft.CodeAnalysis.CSharp.BoundConversion
                this_param)
                {
                    var return_v = this_param.SymbolOpt;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 61735, 61760);
                    return return_v;
                }


                int
                f_10951_61722_61771(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 61722, 61771);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10951_61912_61935(Microsoft.CodeAnalysis.CSharp.BoundConversion
                this_param)
                {
                    var return_v = this_param.Operand;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 61912, 61935);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                f_10951_61937_61962(Microsoft.CodeAnalysis.CSharp.BoundConversion
                this_param)
                {
                    var return_v = this_param.SymbolOpt;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 61937, 61962);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.IMethodReferenceOperation
                f_10951_61850_61992(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                boundMethodGroup, Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                methodSymbol, bool
                suppressVirtualCalls)
                {
                    var return_v = this_param.CreateBoundMethodGroupSingleMethodOperation((Microsoft.CodeAnalysis.CSharp.BoundMethodGroup)boundMethodGroup, methodSymbol, suppressVirtualCalls: suppressVirtualCalls);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 61850, 61992);
                    return return_v;
                }


                bool
                f_10951_62049_62085(Microsoft.CodeAnalysis.CSharp.BoundConversion
                this_param)
                {
                    var return_v = this_param.WasCompilerGenerated;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 62049, 62085);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.AddressOfOperation
                f_10951_61801_62086(Microsoft.CodeAnalysis.Operations.IMethodReferenceOperation
                reference, Microsoft.CodeAnalysis.SemanticModel
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.ITypeSymbol?
                type, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.AddressOfOperation((Microsoft.CodeAnalysis.IOperation)reference, semanticModel, syntax, type, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 61801, 62086);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation
                f_10951_62435_62481(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundConversion
                delegateNode)
                {
                    var return_v = this_param.CreateDelegateTargetOperation((Microsoft.CodeAnalysis.CSharp.BoundNode)delegateNode);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 62435, 62481);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.DelegateCreationOperation
                f_10951_62507_62586(Microsoft.CodeAnalysis.IOperation
                target, Microsoft.CodeAnalysis.SemanticModel
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.ITypeSymbol?
                type, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.DelegateCreationOperation(target, semanticModel, syntax, type, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 62507, 62586);
                    return return_v;
                }


                bool
                f_10951_62720_62736(Microsoft.CodeAnalysis.SyntaxNode
                this_param)
                {
                    var return_v = this_param.IsMissing;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 62720, 62736);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundKind
                f_10951_63493_63510(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.Kind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 63493, 63510);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundBlock
                f_10951_63613_63622(Microsoft.CodeAnalysis.CSharp.BoundLambda
                this_param)
                {
                    var return_v = this_param.Body;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 63613, 63622);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundBlock
                f_10951_63740_63749(Microsoft.CodeAnalysis.CSharp.BoundLambda
                this_param)
                {
                    var return_v = this_param.Body;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 63740, 63749);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression?
                f_10951_63717_63793(Microsoft.CodeAnalysis.CSharp.BoundReturnStatement?
                this_param)
                {
                    var return_v = this_param.ExpressionOpt;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 63717, 63793);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundBlock
                f_10951_63865_63874(Microsoft.CodeAnalysis.CSharp.BoundLambda
                this_param)
                {
                    var return_v = this_param.Body;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 63865, 63874);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundKind
                f_10951_63842_63909(Microsoft.CodeAnalysis.CSharp.BoundReturnStatement?
                this_param)
                {
                    var return_v = this_param.Kind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 63842, 63909);
                    return return_v;
                }


                int
                f_10951_63480_63946(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 63480, 63946);
                    return 0;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_10951_63976_63996(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                boundNode)
                {
                    var return_v = this_param.Create((Microsoft.CodeAnalysis.CSharp.BoundNode)boundNode);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 63976, 63996);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Conversion
                f_10951_64136_64162(Microsoft.CodeAnalysis.CSharp.BoundConversion
                this_param)
                {
                    var return_v = this_param.Conversion;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 64136, 64162);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundKind
                f_10951_64278_64295(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.Kind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 64278, 64295);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?
                f_10951_64352_64369(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 64352, 64369);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                f_10951_64371_64391(Microsoft.CodeAnalysis.CSharp.BoundConversion
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 64371, 64391);
                    return return_v;
                }


                bool
                f_10951_64334_64429(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?
                left, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                right, Microsoft.CodeAnalysis.TypeCompareKind
                comparison)
                {
                    var return_v = TypeSymbol.Equals(left, right, comparison);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 64334, 64429);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_10951_64680_64700(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                boundNode)
                {
                    var return_v = this_param.Create((Microsoft.CodeAnalysis.CSharp.BoundNode)boundNode);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 64680, 64700);
                    return return_v;
                }


                bool
                f_10951_64941_64975(Microsoft.CodeAnalysis.CSharp.BoundConversion
                this_param)
                {
                    var return_v = this_param.ExplicitCastInCode;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 64941, 64975);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundKind
                f_10951_65004_65021(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.Kind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 65004, 65021);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10951_65194_65218(Microsoft.CodeAnalysis.CSharp.BoundConversion
                this_param)
                {
                    var return_v = this_param.Operand;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 65194, 65218);
                    return return_v;
                }


                bool
                f_10951_65298_65333(Microsoft.CodeAnalysis.CSharp.BoundConversion
                this_param)
                {
                    var return_v = this_param.ExplicitCastInCode;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 65298, 65333);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundKind
                f_10951_65362_65380(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.Kind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 65362, 65380);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                f_10951_65463_65484(Microsoft.CodeAnalysis.CSharp.BoundConversion
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 65463, 65484);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?
                f_10951_65486_65504(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 65486, 65504);
                    return return_v;
                }


                bool
                f_10951_65445_65542(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                left, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?
                right, Microsoft.CodeAnalysis.TypeCompareKind
                comparison)
                {
                    var return_v = TypeSymbol.Equals(left, right, comparison);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 65445, 65542);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Conversion
                f_10951_65998_66025(Microsoft.CodeAnalysis.CSharp.BoundConversion
                this_param)
                {
                    var return_v = this_param.Conversion;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 65998, 66025);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ITypeSymbol?
                f_10951_66177_66214(Microsoft.CodeAnalysis.CSharp.BoundConversion
                this_param)
                {
                    var return_v = this_param.GetPublicTypeSymbol();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 66177, 66214);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ConstantValue?
                f_10951_66264_66293(Microsoft.CodeAnalysis.CSharp.BoundConversion
                this_param)
                {
                    var return_v = this_param.ConstantValue;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 66264, 66293);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundKind
                f_10951_66460_66477(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.Kind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 66460, 66477);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundKind
                f_10951_66523_66540(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.Kind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 66523, 66540);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundKind
                f_10951_66593_66610(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.Kind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 66593, 66610);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                f_10951_66661_66681(Microsoft.CodeAnalysis.CSharp.BoundConversion
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 66661, 66681);
                    return return_v;
                }


                bool
                f_10951_66661_66698(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                type)
                {
                    var return_v = type.IsDelegateType();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 66661, 66698);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation
                f_10951_66760_66814(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundConversion
                delegateNode)
                {
                    var return_v = this_param.CreateDelegateTargetOperation((Microsoft.CodeAnalysis.CSharp.BoundNode)delegateNode);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 66760, 66814);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.DelegateCreationOperation
                f_10951_66844_66923(Microsoft.CodeAnalysis.IOperation
                target, Microsoft.CodeAnalysis.SemanticModel
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.ITypeSymbol?
                type, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.DelegateCreationOperation(target, semanticModel, syntax, type, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 66844, 66923);
                    return return_v;
                }


                bool
                f_10951_67250_67273(Microsoft.CodeAnalysis.CSharp.BoundConversion
                this_param)
                {
                    var return_v = this_param.Checked;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 67250, 67273);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10951_67324_67355(Microsoft.CodeAnalysis.CSharp.BoundConversion
                this_param)
                {
                    var return_v = this_param.Operand;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 67324, 67355);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_10951_67317_67356(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                boundNode)
                {
                    var return_v = this_param.Create((Microsoft.CodeAnalysis.CSharp.BoundNode)boundNode);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 67317, 67356);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.ConversionOperation
                f_10951_67386_67509(Microsoft.CodeAnalysis.IOperation
                operand, Microsoft.CodeAnalysis.CSharp.Conversion
                conversion, bool
                isTryCast, bool
                isChecked, Microsoft.CodeAnalysis.SemanticModel
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.ITypeSymbol?
                type, Microsoft.CodeAnalysis.ConstantValue?
                constantValue, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.ConversionOperation(operand, (Microsoft.CodeAnalysis.Operations.IConvertibleConversion)conversion, isTryCast, isChecked, semanticModel, syntax, type, constantValue, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 67386, 67509);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10951, 61020, 67555);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10951, 61020, 67555);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private IConversionOperation CreateBoundAsOperatorOperation(BoundAsOperator boundAsOperator)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10951, 67567, 68235);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 67684, 67737);

                IOperation
                operand = f_10951_67705_67736(this, f_10951_67712_67735(boundAsOperator))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 67751, 67794);

                SyntaxNode
                syntax = boundAsOperator.Syntax
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 67808, 67859);

                Conversion
                conversion = f_10951_67832_67858(boundAsOperator)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 67873, 67895);

                bool
                isTryCast = true
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 67909, 67932);

                bool
                isChecked = false
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 67946, 68004);

                ITypeSymbol?
                type = f_10951_67966_68003(boundAsOperator)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 68018, 68073);

                bool
                isImplicit = f_10951_68036_68072(boundAsOperator)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 68087, 68224);

                return f_10951_68094_68223(operand, conversion, isTryCast, isChecked, _semanticModel, syntax, type, constantValue: null, isImplicit);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10951, 67567, 68235);

                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10951_67712_67735(Microsoft.CodeAnalysis.CSharp.BoundAsOperator
                this_param)
                {
                    var return_v = this_param.Operand;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 67712, 67735);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_10951_67705_67736(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                boundNode)
                {
                    var return_v = this_param.Create((Microsoft.CodeAnalysis.CSharp.BoundNode)boundNode);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 67705, 67736);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Conversion
                f_10951_67832_67858(Microsoft.CodeAnalysis.CSharp.BoundAsOperator
                this_param)
                {
                    var return_v = this_param.Conversion;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 67832, 67858);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ITypeSymbol?
                f_10951_67966_68003(Microsoft.CodeAnalysis.CSharp.BoundAsOperator
                this_param)
                {
                    var return_v = this_param.GetPublicTypeSymbol();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 67966, 68003);
                    return return_v;
                }


                bool
                f_10951_68036_68072(Microsoft.CodeAnalysis.CSharp.BoundAsOperator
                this_param)
                {
                    var return_v = this_param.WasCompilerGenerated;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 68036, 68072);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.ConversionOperation
                f_10951_68094_68223(Microsoft.CodeAnalysis.IOperation
                operand, Microsoft.CodeAnalysis.CSharp.Conversion
                conversion, bool
                isTryCast, bool
                isChecked, Microsoft.CodeAnalysis.SemanticModel
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.ITypeSymbol?
                type, Microsoft.CodeAnalysis.ConstantValue?
                constantValue, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.ConversionOperation(operand, (Microsoft.CodeAnalysis.Operations.IConvertibleConversion)conversion, isTryCast, isChecked, semanticModel, syntax, type, constantValue: constantValue, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 68094, 68223);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10951, 67567, 68235);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10951, 67567, 68235);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private IDelegateCreationOperation CreateBoundDelegateCreationExpressionOperation(BoundDelegateCreationExpression boundDelegateCreationExpression)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10951, 68247, 68859);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 68418, 68501);

                IOperation
                target = f_10951_68438_68500(this, boundDelegateCreationExpression)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 68515, 68574);

                SyntaxNode
                syntax = boundDelegateCreationExpression.Syntax
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 68588, 68662);

                ITypeSymbol?
                type = f_10951_68608_68661(boundDelegateCreationExpression)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 68676, 68747);

                bool
                isImplicit = f_10951_68694_68746(boundDelegateCreationExpression)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 68761, 68848);

                return f_10951_68768_68847(target, _semanticModel, syntax, type, isImplicit);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10951, 68247, 68859);

                Microsoft.CodeAnalysis.IOperation
                f_10951_68438_68500(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundDelegateCreationExpression
                delegateNode)
                {
                    var return_v = this_param.CreateDelegateTargetOperation((Microsoft.CodeAnalysis.CSharp.BoundNode)delegateNode);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 68438, 68500);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ITypeSymbol?
                f_10951_68608_68661(Microsoft.CodeAnalysis.CSharp.BoundDelegateCreationExpression
                this_param)
                {
                    var return_v = this_param.GetPublicTypeSymbol();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 68608, 68661);
                    return return_v;
                }


                bool
                f_10951_68694_68746(Microsoft.CodeAnalysis.CSharp.BoundDelegateCreationExpression
                this_param)
                {
                    var return_v = this_param.WasCompilerGenerated;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 68694, 68746);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.DelegateCreationOperation
                f_10951_68768_68847(Microsoft.CodeAnalysis.IOperation
                target, Microsoft.CodeAnalysis.SemanticModel
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.ITypeSymbol?
                type, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.DelegateCreationOperation(target, semanticModel, syntax, type, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 68768, 68847);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10951, 68247, 68859);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10951, 68247, 68859);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private IMethodReferenceOperation CreateBoundMethodGroupSingleMethodOperation(BoundMethodGroup boundMethodGroup, MethodSymbol methodSymbol, bool suppressVirtualCalls)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10951, 68871, 69666);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 69062, 69183);

                bool
                isVirtual = (f_10951_69080_69103(methodSymbol) || (DynAbs.Tracing.TraceSender.Expression_False(10951, 69080, 69130) || f_10951_69107_69130(methodSymbol)) || (DynAbs.Tracing.TraceSender.Expression_False(10951, 69080, 69156) || f_10951_69134_69156(methodSymbol))) && (DynAbs.Tracing.TraceSender.Expression_True(10951, 69079, 69182) && !suppressVirtualCalls)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 69197, 69288);

                IOperation?
                instance = f_10951_69220_69287(this, f_10951_69244_69272(boundMethodGroup), methodSymbol)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 69302, 69353);

                SyntaxNode
                bindingSyntax = boundMethodGroup.Syntax
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 69367, 69399);

                ITypeSymbol?
                bindingType = null
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 69413, 69469);

                bool
                isImplicit = f_10951_69431_69468(boundMethodGroup)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 69483, 69655);

                return f_10951_69490_69654(f_10951_69519_69549(methodSymbol), isVirtual, instance, _semanticModel, bindingSyntax, bindingType, f_10951_69616_69653(boundMethodGroup));
                DynAbs.Tracing.TraceSender.TraceExitMethod(10951, 68871, 69666);

                bool
                f_10951_69080_69103(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                this_param)
                {
                    var return_v = this_param.IsAbstract;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 69080, 69103);
                    return return_v;
                }


                bool
                f_10951_69107_69130(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                this_param)
                {
                    var return_v = this_param.IsOverride;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 69107, 69130);
                    return return_v;
                }


                bool
                f_10951_69134_69156(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                this_param)
                {
                    var return_v = this_param.IsVirtual;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 69134, 69156);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression?
                f_10951_69244_69272(Microsoft.CodeAnalysis.CSharp.BoundMethodGroup
                this_param)
                {
                    var return_v = this_param.ReceiverOpt;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 69244, 69272);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_10951_69220_69287(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression?
                instance, Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                symbol)
                {
                    var return_v = this_param.CreateReceiverOperation((Microsoft.CodeAnalysis.CSharp.BoundNode?)instance, (Microsoft.CodeAnalysis.CSharp.Symbol)symbol);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 69220, 69287);
                    return return_v;
                }


                bool
                f_10951_69431_69468(Microsoft.CodeAnalysis.CSharp.BoundMethodGroup
                this_param)
                {
                    var return_v = this_param.WasCompilerGenerated;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 69431, 69468);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IMethodSymbol?
                f_10951_69519_69549(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                symbol)
                {
                    var return_v = symbol.GetPublicSymbol();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 69519, 69549);
                    return return_v;
                }


                bool
                f_10951_69616_69653(Microsoft.CodeAnalysis.CSharp.BoundMethodGroup
                this_param)
                {
                    var return_v = this_param.WasCompilerGenerated;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 69616, 69653);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.MethodReferenceOperation
                f_10951_69490_69654(Microsoft.CodeAnalysis.IMethodSymbol
                method, bool
                isVirtual, Microsoft.CodeAnalysis.IOperation?
                instance, Microsoft.CodeAnalysis.SemanticModel
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.ITypeSymbol?
                type, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.MethodReferenceOperation(method, isVirtual, instance, semanticModel, syntax, type, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 69490, 69654);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10951, 68871, 69666);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10951, 68871, 69666);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private IIsTypeOperation CreateBoundIsOperatorOperation(BoundIsOperator boundIsOperator)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10951, 69678, 70344);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 69791, 69842);

                IOperation
                value = f_10951_69810_69841(this, f_10951_69817_69840(boundIsOperator))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 69856, 69932);

                ITypeSymbol?
                typeOperand = f_10951_69883_69931(f_10951_69883_69909(boundIsOperator))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 69946, 69984);

                f_10951_69946_69983(typeOperand is not null);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 69998, 70041);

                SyntaxNode
                syntax = boundIsOperator.Syntax
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 70055, 70113);

                ITypeSymbol?
                type = f_10951_70075_70112(boundIsOperator)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 70127, 70150);

                bool
                isNegated = false
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 70164, 70219);

                bool
                isImplicit = f_10951_70182_70218(boundIsOperator)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 70233, 70333);

                return f_10951_70240_70332(value, typeOperand, isNegated, _semanticModel, syntax, type, isImplicit);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10951, 69678, 70344);

                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10951_69817_69840(Microsoft.CodeAnalysis.CSharp.BoundIsOperator
                this_param)
                {
                    var return_v = this_param.Operand;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 69817, 69840);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_10951_69810_69841(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                boundNode)
                {
                    var return_v = this_param.Create((Microsoft.CodeAnalysis.CSharp.BoundNode)boundNode);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 69810, 69841);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundTypeExpression
                f_10951_69883_69909(Microsoft.CodeAnalysis.CSharp.BoundIsOperator
                this_param)
                {
                    var return_v = this_param.TargetType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 69883, 69909);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ITypeSymbol?
                f_10951_69883_69931(Microsoft.CodeAnalysis.CSharp.BoundTypeExpression
                this_param)
                {
                    var return_v = this_param.GetPublicTypeSymbol();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 69883, 69931);
                    return return_v;
                }


                int
                f_10951_69946_69983(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 69946, 69983);
                    return 0;
                }


                Microsoft.CodeAnalysis.ITypeSymbol?
                f_10951_70075_70112(Microsoft.CodeAnalysis.CSharp.BoundIsOperator
                this_param)
                {
                    var return_v = this_param.GetPublicTypeSymbol();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 70075, 70112);
                    return return_v;
                }


                bool
                f_10951_70182_70218(Microsoft.CodeAnalysis.CSharp.BoundIsOperator
                this_param)
                {
                    var return_v = this_param.WasCompilerGenerated;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 70182, 70218);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.IsTypeOperation
                f_10951_70240_70332(Microsoft.CodeAnalysis.IOperation
                valueOperand, Microsoft.CodeAnalysis.ITypeSymbol
                typeOperand, bool
                isNegated, Microsoft.CodeAnalysis.SemanticModel
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.ITypeSymbol?
                type, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.IsTypeOperation(valueOperand, typeOperand, isNegated, semanticModel, syntax, type, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 70240, 70332);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10951, 69678, 70344);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10951, 69678, 70344);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private ISizeOfOperation CreateBoundSizeOfOperatorOperation(BoundSizeOfOperator boundSizeOfOperator)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10951, 70356, 71024);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 70481, 70561);

                ITypeSymbol?
                typeOperand = f_10951_70508_70560(f_10951_70508_70538(boundSizeOfOperator))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 70575, 70613);

                f_10951_70575_70612(typeOperand is not null);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 70627, 70674);

                SyntaxNode
                syntax = boundSizeOfOperator.Syntax
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 70688, 70750);

                ITypeSymbol?
                type = f_10951_70708_70749(boundSizeOfOperator)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 70764, 70829);

                ConstantValue?
                constantValue = f_10951_70795_70828(boundSizeOfOperator)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 70843, 70902);

                bool
                isImplicit = f_10951_70861_70901(boundSizeOfOperator)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 70916, 71013);

                return f_10951_70923_71012(typeOperand, _semanticModel, syntax, type, constantValue, isImplicit);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10951, 70356, 71024);

                Microsoft.CodeAnalysis.CSharp.BoundTypeExpression
                f_10951_70508_70538(Microsoft.CodeAnalysis.CSharp.BoundSizeOfOperator
                this_param)
                {
                    var return_v = this_param.SourceType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 70508, 70538);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ITypeSymbol?
                f_10951_70508_70560(Microsoft.CodeAnalysis.CSharp.BoundTypeExpression
                this_param)
                {
                    var return_v = this_param.GetPublicTypeSymbol();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 70508, 70560);
                    return return_v;
                }


                int
                f_10951_70575_70612(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 70575, 70612);
                    return 0;
                }


                Microsoft.CodeAnalysis.ITypeSymbol?
                f_10951_70708_70749(Microsoft.CodeAnalysis.CSharp.BoundSizeOfOperator
                this_param)
                {
                    var return_v = this_param.GetPublicTypeSymbol();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 70708, 70749);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ConstantValue?
                f_10951_70795_70828(Microsoft.CodeAnalysis.CSharp.BoundSizeOfOperator
                this_param)
                {
                    var return_v = this_param.ConstantValue;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 70795, 70828);
                    return return_v;
                }


                bool
                f_10951_70861_70901(Microsoft.CodeAnalysis.CSharp.BoundSizeOfOperator
                this_param)
                {
                    var return_v = this_param.WasCompilerGenerated;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 70861, 70901);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.SizeOfOperation
                f_10951_70923_71012(Microsoft.CodeAnalysis.ITypeSymbol
                typeOperand, Microsoft.CodeAnalysis.SemanticModel
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.ITypeSymbol?
                type, Microsoft.CodeAnalysis.ConstantValue?
                constantValue, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.SizeOfOperation(typeOperand, semanticModel, syntax, type, constantValue, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 70923, 71012);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10951, 70356, 71024);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10951, 70356, 71024);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private ITypeOfOperation CreateBoundTypeOfOperatorOperation(BoundTypeOfOperator boundTypeOfOperator)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10951, 71036, 71610);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 71161, 71241);

                ITypeSymbol?
                typeOperand = f_10951_71188_71240(f_10951_71188_71218(boundTypeOfOperator))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 71255, 71293);

                f_10951_71255_71292(typeOperand is not null);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 71307, 71354);

                SyntaxNode
                syntax = boundTypeOfOperator.Syntax
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 71368, 71430);

                ITypeSymbol?
                type = f_10951_71388_71429(boundTypeOfOperator)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 71444, 71503);

                bool
                isImplicit = f_10951_71462_71502(boundTypeOfOperator)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 71517, 71599);

                return f_10951_71524_71598(typeOperand, _semanticModel, syntax, type, isImplicit);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10951, 71036, 71610);

                Microsoft.CodeAnalysis.CSharp.BoundTypeExpression
                f_10951_71188_71218(Microsoft.CodeAnalysis.CSharp.BoundTypeOfOperator
                this_param)
                {
                    var return_v = this_param.SourceType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 71188, 71218);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ITypeSymbol?
                f_10951_71188_71240(Microsoft.CodeAnalysis.CSharp.BoundTypeExpression
                this_param)
                {
                    var return_v = this_param.GetPublicTypeSymbol();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 71188, 71240);
                    return return_v;
                }


                int
                f_10951_71255_71292(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 71255, 71292);
                    return 0;
                }


                Microsoft.CodeAnalysis.ITypeSymbol?
                f_10951_71388_71429(Microsoft.CodeAnalysis.CSharp.BoundTypeOfOperator
                this_param)
                {
                    var return_v = this_param.GetPublicTypeSymbol();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 71388, 71429);
                    return return_v;
                }


                bool
                f_10951_71462_71502(Microsoft.CodeAnalysis.CSharp.BoundTypeOfOperator
                this_param)
                {
                    var return_v = this_param.WasCompilerGenerated;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 71462, 71502);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.TypeOfOperation
                f_10951_71524_71598(Microsoft.CodeAnalysis.ITypeSymbol
                typeOperand, Microsoft.CodeAnalysis.SemanticModel
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.ITypeSymbol?
                type, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.TypeOfOperation(typeOperand, semanticModel, syntax, type, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 71524, 71598);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10951, 71036, 71610);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10951, 71036, 71610);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private IArrayCreationOperation CreateBoundArrayCreationOperation(BoundArrayCreation boundArrayCreation)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10951, 71622, 72488);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 71751, 71867);

                ImmutableArray<IOperation>
                dimensionSizes = f_10951_71795_71866(this, f_10951_71840_71865(boundArrayCreation))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 71881, 71999);

                IArrayInitializerOperation?
                arrayInitializer = (IArrayInitializerOperation?)f_10951_71957_71998(this, f_10951_71964_71997(boundArrayCreation))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 72013, 72059);

                SyntaxNode
                syntax = boundArrayCreation.Syntax
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 72073, 72134);

                ITypeSymbol?
                type = f_10951_72093_72133(boundArrayCreation)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 72148, 72353);

                bool
                isImplicit = f_10951_72166_72205(boundArrayCreation) || (DynAbs.Tracing.TraceSender.Expression_False(10951, 72166, 72352) || (DynAbs.Tracing.TraceSender.TraceConditionalAccessExpression(f_10951_72241_72274(boundArrayCreation), 10951, 72241, 72282)?.Syntax == syntax && (DynAbs.Tracing.TraceSender.Expression_True(10951, 72241, 72351) && f_10951_72296_72351_M(!f_10951_72297_72330(boundArrayCreation).WasCompilerGenerated))))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 72367, 72477);

                return f_10951_72374_72476(dimensionSizes, arrayInitializer, _semanticModel, syntax, type, isImplicit);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10951, 71622, 72488);

                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                f_10951_71840_71865(Microsoft.CodeAnalysis.CSharp.BoundArrayCreation
                this_param)
                {
                    var return_v = this_param.Bounds;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 71840, 71865);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.IOperation>
                f_10951_71795_71866(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                boundNodes)
                {
                    var return_v = this_param.CreateFromArray<Microsoft.CodeAnalysis.CSharp.BoundExpression, Microsoft.CodeAnalysis.IOperation>(boundNodes);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 71795, 71866);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundArrayInitialization?
                f_10951_71964_71997(Microsoft.CodeAnalysis.CSharp.BoundArrayCreation
                this_param)
                {
                    var return_v = this_param.InitializerOpt;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 71964, 71997);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_10951_71957_71998(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundArrayInitialization?
                boundNode)
                {
                    var return_v = this_param.Create((Microsoft.CodeAnalysis.CSharp.BoundNode?)boundNode);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 71957, 71998);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ITypeSymbol?
                f_10951_72093_72133(Microsoft.CodeAnalysis.CSharp.BoundArrayCreation
                this_param)
                {
                    var return_v = this_param.GetPublicTypeSymbol();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 72093, 72133);
                    return return_v;
                }


                bool
                f_10951_72166_72205(Microsoft.CodeAnalysis.CSharp.BoundArrayCreation
                this_param)
                {
                    var return_v = this_param.WasCompilerGenerated;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 72166, 72205);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundArrayInitialization?
                f_10951_72241_72274(Microsoft.CodeAnalysis.CSharp.BoundArrayCreation
                this_param)
                {
                    var return_v = this_param.InitializerOpt;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 72241, 72274);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundArrayInitialization
                f_10951_72297_72330(Microsoft.CodeAnalysis.CSharp.BoundArrayCreation
                this_param)
                {
                    var return_v = this_param.InitializerOpt;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 72297, 72330);
                    return return_v;
                }


                bool
                f_10951_72296_72351_M(bool
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 72296, 72351);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.ArrayCreationOperation
                f_10951_72374_72476(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.IOperation>
                dimensionSizes, Microsoft.CodeAnalysis.Operations.IArrayInitializerOperation?
                initializer, Microsoft.CodeAnalysis.SemanticModel
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.ITypeSymbol?
                type, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.ArrayCreationOperation(dimensionSizes, initializer, semanticModel, syntax, type, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 72374, 72476);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10951, 71622, 72488);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10951, 71622, 72488);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private IArrayInitializerOperation CreateBoundArrayInitializationOperation(BoundArrayInitialization boundArrayInitialization)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10951, 72500, 73034);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 72650, 72777);

                ImmutableArray<IOperation>
                elementValues = f_10951_72693_72776(this, f_10951_72738_72775(boundArrayInitialization))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 72791, 72843);

                SyntaxNode
                syntax = boundArrayInitialization.Syntax
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 72857, 72921);

                bool
                isImplicit = f_10951_72875_72920(boundArrayInitialization)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 72935, 73023);

                return f_10951_72942_73022(elementValues, _semanticModel, syntax, isImplicit);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10951, 72500, 73034);

                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                f_10951_72738_72775(Microsoft.CodeAnalysis.CSharp.BoundArrayInitialization
                this_param)
                {
                    var return_v = this_param.Initializers;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 72738, 72775);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.IOperation>
                f_10951_72693_72776(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                boundNodes)
                {
                    var return_v = this_param.CreateFromArray<Microsoft.CodeAnalysis.CSharp.BoundExpression, Microsoft.CodeAnalysis.IOperation>(boundNodes);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 72693, 72776);
                    return return_v;
                }


                bool
                f_10951_72875_72920(Microsoft.CodeAnalysis.CSharp.BoundArrayInitialization
                this_param)
                {
                    var return_v = this_param.WasCompilerGenerated;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 72875, 72920);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.ArrayInitializerOperation
                f_10951_72942_73022(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.IOperation>
                elementValues, Microsoft.CodeAnalysis.SemanticModel
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.ArrayInitializerOperation(elementValues, semanticModel, syntax, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 72942, 73022);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10951, 72500, 73034);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10951, 72500, 73034);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private IDefaultValueOperation CreateBoundDefaultLiteralOperation(BoundDefaultLiteral boundDefaultLiteral)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10951, 73046, 73497);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 73177, 73224);

                SyntaxNode
                syntax = boundDefaultLiteral.Syntax
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 73238, 73303);

                ConstantValue?
                constantValue = f_10951_73269_73302(boundDefaultLiteral)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 73317, 73376);

                bool
                isImplicit = f_10951_73335_73375(boundDefaultLiteral)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 73390, 73486);

                return f_10951_73397_73485(_semanticModel, syntax, type: null, constantValue, isImplicit);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10951, 73046, 73497);

                Microsoft.CodeAnalysis.ConstantValue?
                f_10951_73269_73302(Microsoft.CodeAnalysis.CSharp.BoundDefaultLiteral
                this_param)
                {
                    var return_v = this_param.ConstantValue;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 73269, 73302);
                    return return_v;
                }


                bool
                f_10951_73335_73375(Microsoft.CodeAnalysis.CSharp.BoundDefaultLiteral
                this_param)
                {
                    var return_v = this_param.WasCompilerGenerated;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 73335, 73375);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.DefaultValueOperation
                f_10951_73397_73485(Microsoft.CodeAnalysis.SemanticModel
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.ITypeSymbol?
                type, Microsoft.CodeAnalysis.ConstantValue?
                constantValue, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.DefaultValueOperation(semanticModel, syntax, type: type, constantValue, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 73397, 73485);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10951, 73046, 73497);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10951, 73046, 73497);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private IDefaultValueOperation CreateBoundDefaultExpressionOperation(BoundDefaultExpression boundDefaultExpression)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10951, 73509, 74051);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 73649, 73699);

                SyntaxNode
                syntax = boundDefaultExpression.Syntax
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 73713, 73778);

                ITypeSymbol?
                type = f_10951_73733_73777(boundDefaultExpression)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 73792, 73860);

                ConstantValue?
                constantValue = f_10951_73823_73859(boundDefaultExpression)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 73874, 73936);

                bool
                isImplicit = f_10951_73892_73935(boundDefaultExpression)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 73950, 74040);

                return f_10951_73957_74039(_semanticModel, syntax, type, constantValue, isImplicit);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10951, 73509, 74051);

                Microsoft.CodeAnalysis.ITypeSymbol?
                f_10951_73733_73777(Microsoft.CodeAnalysis.CSharp.BoundDefaultExpression
                this_param)
                {
                    var return_v = this_param.GetPublicTypeSymbol();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 73733, 73777);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ConstantValue?
                f_10951_73823_73859(Microsoft.CodeAnalysis.CSharp.BoundDefaultExpression
                this_param)
                {
                    var return_v = this_param.ConstantValue;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 73823, 73859);
                    return return_v;
                }


                bool
                f_10951_73892_73935(Microsoft.CodeAnalysis.CSharp.BoundDefaultExpression
                this_param)
                {
                    var return_v = this_param.WasCompilerGenerated;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 73892, 73935);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.DefaultValueOperation
                f_10951_73957_74039(Microsoft.CodeAnalysis.SemanticModel
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.ITypeSymbol?
                type, Microsoft.CodeAnalysis.ConstantValue?
                constantValue, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.DefaultValueOperation(semanticModel, syntax, type, constantValue, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 73957, 74039);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10951, 73509, 74051);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10951, 73509, 74051);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private IInstanceReferenceOperation CreateBoundBaseReferenceOperation(BoundBaseReference boundBaseReference)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10951, 74063, 74606);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 74196, 74279);

                InstanceReferenceKind
                referenceKind = InstanceReferenceKind.ContainingTypeInstance
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 74293, 74339);

                SyntaxNode
                syntax = boundBaseReference.Syntax
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 74353, 74414);

                ITypeSymbol?
                type = f_10951_74373_74413(boundBaseReference)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 74428, 74486);

                bool
                isImplicit = f_10951_74446_74485(boundBaseReference)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 74500, 74595);

                return f_10951_74507_74594(referenceKind, _semanticModel, syntax, type, isImplicit);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10951, 74063, 74606);

                Microsoft.CodeAnalysis.ITypeSymbol?
                f_10951_74373_74413(Microsoft.CodeAnalysis.CSharp.BoundBaseReference
                this_param)
                {
                    var return_v = this_param.GetPublicTypeSymbol();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 74373, 74413);
                    return return_v;
                }


                bool
                f_10951_74446_74485(Microsoft.CodeAnalysis.CSharp.BoundBaseReference
                this_param)
                {
                    var return_v = this_param.WasCompilerGenerated;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 74446, 74485);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.InstanceReferenceOperation
                f_10951_74507_74594(Microsoft.CodeAnalysis.Operations.InstanceReferenceKind
                referenceKind, Microsoft.CodeAnalysis.SemanticModel
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.ITypeSymbol?
                type, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.InstanceReferenceOperation(referenceKind, semanticModel, syntax, type, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 74507, 74594);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10951, 74063, 74606);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10951, 74063, 74606);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private IInstanceReferenceOperation CreateBoundThisReferenceOperation(BoundThisReference boundThisReference)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10951, 74618, 75161);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 74751, 74834);

                InstanceReferenceKind
                referenceKind = InstanceReferenceKind.ContainingTypeInstance
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 74848, 74894);

                SyntaxNode
                syntax = boundThisReference.Syntax
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 74908, 74969);

                ITypeSymbol?
                type = f_10951_74928_74968(boundThisReference)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 74983, 75041);

                bool
                isImplicit = f_10951_75001_75040(boundThisReference)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 75055, 75150);

                return f_10951_75062_75149(referenceKind, _semanticModel, syntax, type, isImplicit);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10951, 74618, 75161);

                Microsoft.CodeAnalysis.ITypeSymbol?
                f_10951_74928_74968(Microsoft.CodeAnalysis.CSharp.BoundThisReference
                this_param)
                {
                    var return_v = this_param.GetPublicTypeSymbol();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 74928, 74968);
                    return return_v;
                }


                bool
                f_10951_75001_75040(Microsoft.CodeAnalysis.CSharp.BoundThisReference
                this_param)
                {
                    var return_v = this_param.WasCompilerGenerated;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 75001, 75040);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.InstanceReferenceOperation
                f_10951_75062_75149(Microsoft.CodeAnalysis.Operations.InstanceReferenceKind
                referenceKind, Microsoft.CodeAnalysis.SemanticModel
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.ITypeSymbol?
                type, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.InstanceReferenceOperation(referenceKind, semanticModel, syntax, type, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 75062, 75149);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10951, 74618, 75161);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10951, 74618, 75161);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private IOperation CreateBoundAssignmentOperatorOrMemberInitializerOperation(BoundAssignmentOperator boundAssignmentOperator)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10951, 75173, 75563);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 75323, 75552);

                return (DynAbs.Tracing.TraceSender.Conditional_F1(10951, 75330, 75374) || ((f_10951_75330_75374(boundAssignmentOperator) && DynAbs.Tracing.TraceSender.Conditional_F2(10951, 75394, 75468)) || DynAbs.Tracing.TraceSender.Conditional_F3(10951, 75488, 75551))) ? (IOperation)f_10951_75406_75468(this, boundAssignmentOperator) : f_10951_75488_75551(this, boundAssignmentOperator);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10951, 75173, 75563);

                bool
                f_10951_75330_75374(Microsoft.CodeAnalysis.CSharp.BoundAssignmentOperator
                boundAssignmentOperator)
                {
                    var return_v = IsMemberInitializer(boundAssignmentOperator);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 75330, 75374);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.IMemberInitializerOperation
                f_10951_75406_75468(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundAssignmentOperator
                boundAssignmentOperator)
                {
                    var return_v = this_param.CreateBoundMemberInitializerOperation(boundAssignmentOperator);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 75406, 75468);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.ISimpleAssignmentOperation
                f_10951_75488_75551(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundAssignmentOperator
                boundAssignmentOperator)
                {
                    var return_v = this_param.CreateBoundAssignmentOperatorOperation(boundAssignmentOperator);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 75488, 75551);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10951, 75173, 75563);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10951, 75173, 75563);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private static bool IsMemberInitializer(BoundAssignmentOperator boundAssignmentOperator)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10951, 75664, 75853);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 75680, 75853);
                return f_10951_75680_75715_M(DynAbs.Tracing.TraceSender.TraceConditionalAccessExpression(f_10951_75680_75709(boundAssignmentOperator), 10951, 75680, 75715)?.Kind) == BoundKind.ObjectInitializerExpression || (DynAbs.Tracing.TraceSender.Expression_False(10951, 75680, 75853) || f_10951_75773_75808_M(DynAbs.Tracing.TraceSender.TraceConditionalAccessExpression(f_10951_75773_75802(boundAssignmentOperator), 10951, 75773, 75808)?.Kind) == BoundKind.CollectionInitializerExpression); DynAbs.Tracing.TraceSender.TraceExitMethod(10951, 75664, 75853);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10951, 75664, 75853);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10951, 75664, 75853);
            }
            throw new System.Exception("Slicer error: unreachable code");

            Microsoft.CodeAnalysis.CSharp.BoundExpression
            f_10951_75680_75709(Microsoft.CodeAnalysis.CSharp.BoundAssignmentOperator
            this_param)
            {
                var return_v = this_param.Right;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 75680, 75709);
                return return_v;
            }


            Microsoft.CodeAnalysis.CSharp.BoundKind?
            f_10951_75680_75715_M(Microsoft.CodeAnalysis.CSharp.BoundKind?
            i)
            {
                var return_v = i;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 75680, 75715);
                return return_v;
            }


            Microsoft.CodeAnalysis.CSharp.BoundExpression?
            f_10951_75773_75802(Microsoft.CodeAnalysis.CSharp.BoundAssignmentOperator
            this_param)
            {
                var return_v = this_param.Right;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 75773, 75802);
                return return_v;
            }


            Microsoft.CodeAnalysis.CSharp.BoundKind?
            f_10951_75773_75808_M(Microsoft.CodeAnalysis.CSharp.BoundKind?
            i)
            {
                var return_v = i;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 75773, 75808);
                return return_v;
            }

        }

        private ISimpleAssignmentOperation CreateBoundAssignmentOperatorOperation(BoundAssignmentOperator boundAssignmentOperator)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10951, 75866, 76720);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 76013, 76073);

                f_10951_76013_76072(!f_10951_76027_76071(boundAssignmentOperator));
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 76089, 76146);

                IOperation
                target = f_10951_76109_76145(this, f_10951_76116_76144(boundAssignmentOperator))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 76160, 76217);

                IOperation
                value = f_10951_76179_76216(this, f_10951_76186_76215(boundAssignmentOperator))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 76231, 76274);

                bool
                isRef = f_10951_76244_76273(boundAssignmentOperator)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 76288, 76339);

                SyntaxNode
                syntax = boundAssignmentOperator.Syntax
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 76353, 76419);

                ITypeSymbol?
                type = f_10951_76373_76418(boundAssignmentOperator)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 76433, 76502);

                ConstantValue?
                constantValue = f_10951_76464_76501(boundAssignmentOperator)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 76516, 76579);

                bool
                isImplicit = f_10951_76534_76578(boundAssignmentOperator)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 76593, 76709);

                return f_10951_76600_76708(isRef, target, value, _semanticModel, syntax, type, constantValue, isImplicit);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10951, 75866, 76720);

                bool
                f_10951_76027_76071(Microsoft.CodeAnalysis.CSharp.BoundAssignmentOperator
                boundAssignmentOperator)
                {
                    var return_v = IsMemberInitializer(boundAssignmentOperator);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 76027, 76071);
                    return return_v;
                }


                int
                f_10951_76013_76072(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 76013, 76072);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10951_76116_76144(Microsoft.CodeAnalysis.CSharp.BoundAssignmentOperator
                this_param)
                {
                    var return_v = this_param.Left;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 76116, 76144);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_10951_76109_76145(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                boundNode)
                {
                    var return_v = this_param.Create((Microsoft.CodeAnalysis.CSharp.BoundNode)boundNode);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 76109, 76145);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10951_76186_76215(Microsoft.CodeAnalysis.CSharp.BoundAssignmentOperator
                this_param)
                {
                    var return_v = this_param.Right;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 76186, 76215);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_10951_76179_76216(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                boundNode)
                {
                    var return_v = this_param.Create((Microsoft.CodeAnalysis.CSharp.BoundNode)boundNode);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 76179, 76216);
                    return return_v;
                }


                bool
                f_10951_76244_76273(Microsoft.CodeAnalysis.CSharp.BoundAssignmentOperator
                this_param)
                {
                    var return_v = this_param.IsRef;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 76244, 76273);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ITypeSymbol?
                f_10951_76373_76418(Microsoft.CodeAnalysis.CSharp.BoundAssignmentOperator
                this_param)
                {
                    var return_v = this_param.GetPublicTypeSymbol();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 76373, 76418);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ConstantValue?
                f_10951_76464_76501(Microsoft.CodeAnalysis.CSharp.BoundAssignmentOperator
                this_param)
                {
                    var return_v = this_param.ConstantValue;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 76464, 76501);
                    return return_v;
                }


                bool
                f_10951_76534_76578(Microsoft.CodeAnalysis.CSharp.BoundAssignmentOperator
                this_param)
                {
                    var return_v = this_param.WasCompilerGenerated;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 76534, 76578);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.SimpleAssignmentOperation
                f_10951_76600_76708(bool
                isRef, Microsoft.CodeAnalysis.IOperation
                target, Microsoft.CodeAnalysis.IOperation
                value, Microsoft.CodeAnalysis.SemanticModel
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.ITypeSymbol?
                type, Microsoft.CodeAnalysis.ConstantValue?
                constantValue, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.SimpleAssignmentOperation(isRef, target, value, semanticModel, syntax, type, constantValue, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 76600, 76708);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10951, 75866, 76720);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10951, 75866, 76720);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private IMemberInitializerOperation CreateBoundMemberInitializerOperation(BoundAssignmentOperator boundAssignmentOperator)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10951, 76732, 77560);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 76879, 76938);

                f_10951_76879_76937(f_10951_76892_76936(boundAssignmentOperator));
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 76952, 77054);

                IOperation
                initializedMember = f_10951_76983_77053(this, f_10951_77024_77052(boundAssignmentOperator))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 77068, 77201);

                IObjectOrCollectionInitializerOperation
                initializer = (IObjectOrCollectionInitializerOperation)f_10951_77163_77200(this, f_10951_77170_77199(boundAssignmentOperator))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 77215, 77266);

                SyntaxNode
                syntax = boundAssignmentOperator.Syntax
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 77280, 77346);

                ITypeSymbol?
                type = f_10951_77300_77345(boundAssignmentOperator)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 77360, 77423);

                bool
                isImplicit = f_10951_77378_77422(boundAssignmentOperator)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 77437, 77549);

                return f_10951_77444_77548(initializedMember, initializer, _semanticModel, syntax, type, isImplicit);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10951, 76732, 77560);

                bool
                f_10951_76892_76936(Microsoft.CodeAnalysis.CSharp.BoundAssignmentOperator
                boundAssignmentOperator)
                {
                    var return_v = IsMemberInitializer(boundAssignmentOperator);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 76892, 76936);
                    return return_v;
                }


                int
                f_10951_76879_76937(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 76879, 76937);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10951_77024_77052(Microsoft.CodeAnalysis.CSharp.BoundAssignmentOperator
                this_param)
                {
                    var return_v = this_param.Left;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 77024, 77052);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation
                f_10951_76983_77053(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                initializedMember)
                {
                    var return_v = this_param.CreateMemberInitializerInitializedMember((Microsoft.CodeAnalysis.CSharp.BoundNode)initializedMember);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 76983, 77053);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10951_77170_77199(Microsoft.CodeAnalysis.CSharp.BoundAssignmentOperator
                this_param)
                {
                    var return_v = this_param.Right;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 77170, 77199);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_10951_77163_77200(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                boundNode)
                {
                    var return_v = this_param.Create((Microsoft.CodeAnalysis.CSharp.BoundNode)boundNode);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 77163, 77200);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ITypeSymbol?
                f_10951_77300_77345(Microsoft.CodeAnalysis.CSharp.BoundAssignmentOperator
                this_param)
                {
                    var return_v = this_param.GetPublicTypeSymbol();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 77300, 77345);
                    return return_v;
                }


                bool
                f_10951_77378_77422(Microsoft.CodeAnalysis.CSharp.BoundAssignmentOperator
                this_param)
                {
                    var return_v = this_param.WasCompilerGenerated;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 77378, 77422);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.MemberInitializerOperation
                f_10951_77444_77548(Microsoft.CodeAnalysis.IOperation
                initializedMember, Microsoft.CodeAnalysis.Operations.IObjectOrCollectionInitializerOperation
                initializer, Microsoft.CodeAnalysis.SemanticModel
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.ITypeSymbol?
                type, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.MemberInitializerOperation(initializedMember, initializer, semanticModel, syntax, type, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 77444, 77548);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10951, 76732, 77560);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10951, 76732, 77560);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private ICompoundAssignmentOperation CreateBoundCompoundAssignmentOperatorOperation(BoundCompoundAssignmentOperator boundCompoundAssignmentOperator)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10951, 77572, 78926);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 77745, 77810);

                IOperation
                target = f_10951_77765_77809(this, f_10951_77772_77808(boundCompoundAssignmentOperator))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 77824, 77889);

                IOperation
                value = f_10951_77843_77888(this, f_10951_77850_77887(boundCompoundAssignmentOperator))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 77903, 78016);

                BinaryOperatorKind
                operatorKind = f_10951_77937_78015(boundCompoundAssignmentOperator.Operator.Kind)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 78030, 78103);

                Conversion
                inConversion = f_10951_78056_78102(boundCompoundAssignmentOperator)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 78117, 78192);

                Conversion
                outConversion = f_10951_78144_78191(boundCompoundAssignmentOperator)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 78206, 78279);

                bool
                isLifted = f_10951_78222_78278(boundCompoundAssignmentOperator.Operator.Kind)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 78293, 78368);

                bool
                isChecked = f_10951_78310_78367(boundCompoundAssignmentOperator.Operator.Kind)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 78382, 78479);

                IMethodSymbol
                operatorMethod = f_10951_78413_78478(boundCompoundAssignmentOperator.Operator.Method)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 78493, 78552);

                SyntaxNode
                syntax = boundCompoundAssignmentOperator.Syntax
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 78566, 78640);

                ITypeSymbol?
                type = f_10951_78586_78639(boundCompoundAssignmentOperator)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 78654, 78725);

                bool
                isImplicit = f_10951_78672_78724(boundCompoundAssignmentOperator)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 78739, 78915);

                return f_10951_78746_78914(inConversion, outConversion, operatorKind, isLifted, isChecked, operatorMethod, target, value, _semanticModel, syntax, type, isImplicit);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10951, 77572, 78926);

                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10951_77772_77808(Microsoft.CodeAnalysis.CSharp.BoundCompoundAssignmentOperator
                this_param)
                {
                    var return_v = this_param.Left;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 77772, 77808);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_10951_77765_77809(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                boundNode)
                {
                    var return_v = this_param.Create((Microsoft.CodeAnalysis.CSharp.BoundNode)boundNode);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 77765, 77809);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10951_77850_77887(Microsoft.CodeAnalysis.CSharp.BoundCompoundAssignmentOperator
                this_param)
                {
                    var return_v = this_param.Right;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 77850, 77887);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_10951_77843_77888(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                boundNode)
                {
                    var return_v = this_param.Create((Microsoft.CodeAnalysis.CSharp.BoundNode)boundNode);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 77843, 77888);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.BinaryOperatorKind
                f_10951_77937_78015(Microsoft.CodeAnalysis.CSharp.BinaryOperatorKind
                operatorKind)
                {
                    var return_v = Helper.DeriveBinaryOperatorKind(operatorKind);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 77937, 78015);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Conversion
                f_10951_78056_78102(Microsoft.CodeAnalysis.CSharp.BoundCompoundAssignmentOperator
                this_param)
                {
                    var return_v = this_param.LeftConversion;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 78056, 78102);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Conversion
                f_10951_78144_78191(Microsoft.CodeAnalysis.CSharp.BoundCompoundAssignmentOperator
                this_param)
                {
                    var return_v = this_param.FinalConversion;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 78144, 78191);
                    return return_v;
                }


                bool
                f_10951_78222_78278(Microsoft.CodeAnalysis.CSharp.BinaryOperatorKind
                kind)
                {
                    var return_v = kind.IsLifted();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 78222, 78278);
                    return return_v;
                }


                bool
                f_10951_78310_78367(Microsoft.CodeAnalysis.CSharp.BinaryOperatorKind
                kind)
                {
                    var return_v = kind.IsChecked();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 78310, 78367);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IMethodSymbol?
                f_10951_78413_78478(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                symbol)
                {
                    var return_v = symbol.GetPublicSymbol();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 78413, 78478);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ITypeSymbol?
                f_10951_78586_78639(Microsoft.CodeAnalysis.CSharp.BoundCompoundAssignmentOperator
                this_param)
                {
                    var return_v = this_param.GetPublicTypeSymbol();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 78586, 78639);
                    return return_v;
                }


                bool
                f_10951_78672_78724(Microsoft.CodeAnalysis.CSharp.BoundCompoundAssignmentOperator
                this_param)
                {
                    var return_v = this_param.WasCompilerGenerated;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 78672, 78724);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.CompoundAssignmentOperation
                f_10951_78746_78914(Microsoft.CodeAnalysis.CSharp.Conversion
                inConversion, Microsoft.CodeAnalysis.CSharp.Conversion
                outConversion, Microsoft.CodeAnalysis.Operations.BinaryOperatorKind
                operatorKind, bool
                isLifted, bool
                isChecked, Microsoft.CodeAnalysis.IMethodSymbol
                operatorMethod, Microsoft.CodeAnalysis.IOperation
                target, Microsoft.CodeAnalysis.IOperation
                value, Microsoft.CodeAnalysis.SemanticModel
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.ITypeSymbol?
                type, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.CompoundAssignmentOperation((Microsoft.CodeAnalysis.Operations.IConvertibleConversion)inConversion, (Microsoft.CodeAnalysis.Operations.IConvertibleConversion)outConversion, operatorKind, isLifted, isChecked, operatorMethod, target, value, semanticModel, syntax, type, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 78746, 78914);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10951, 77572, 78926);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10951, 77572, 78926);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private IIncrementOrDecrementOperation CreateBoundIncrementOperatorOperation(BoundIncrementOperator boundIncrementOperator)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10951, 78938, 80053);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 79086, 79224);

                OperationKind
                operationKind = (DynAbs.Tracing.TraceSender.Conditional_F1(10951, 79116, 79171) || ((f_10951_79116_79171(f_10951_79135_79170(boundIncrementOperator)) && DynAbs.Tracing.TraceSender.Conditional_F2(10951, 79174, 79197)) || DynAbs.Tracing.TraceSender.Conditional_F3(10951, 79200, 79223))) ? OperationKind.Decrement : OperationKind.Increment
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 79238, 79329);

                bool
                isPostfix = f_10951_79255_79328(f_10951_79292_79327(boundIncrementOperator))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 79343, 79406);

                bool
                isLifted = f_10951_79359_79405(f_10951_79359_79394(boundIncrementOperator))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 79420, 79485);

                bool
                isChecked = f_10951_79437_79484(f_10951_79437_79472(boundIncrementOperator))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 79499, 79558);

                IOperation
                target = f_10951_79519_79557(this, f_10951_79526_79556(boundIncrementOperator))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 79572, 79655);

                IMethodSymbol?
                operatorMethod = f_10951_79604_79654(f_10951_79604_79636(boundIncrementOperator))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 79669, 79719);

                SyntaxNode
                syntax = boundIncrementOperator.Syntax
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 79733, 79798);

                ITypeSymbol?
                type = f_10951_79753_79797(boundIncrementOperator)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 79812, 79874);

                bool
                isImplicit = f_10951_79830_79873(boundIncrementOperator)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 79888, 80042);

                return f_10951_79895_80041(isPostfix, isLifted, isChecked, target, operatorMethod, operationKind, _semanticModel, syntax, type, isImplicit);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10951, 78938, 80053);

                Microsoft.CodeAnalysis.CSharp.UnaryOperatorKind
                f_10951_79135_79170(Microsoft.CodeAnalysis.CSharp.BoundIncrementOperator
                this_param)
                {
                    var return_v = this_param.OperatorKind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 79135, 79170);
                    return return_v;
                }


                bool
                f_10951_79116_79171(Microsoft.CodeAnalysis.CSharp.UnaryOperatorKind
                operatorKind)
                {
                    var return_v = Helper.IsDecrement(operatorKind);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 79116, 79171);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.UnaryOperatorKind
                f_10951_79292_79327(Microsoft.CodeAnalysis.CSharp.BoundIncrementOperator
                this_param)
                {
                    var return_v = this_param.OperatorKind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 79292, 79327);
                    return return_v;
                }


                bool
                f_10951_79255_79328(Microsoft.CodeAnalysis.CSharp.UnaryOperatorKind
                operatorKind)
                {
                    var return_v = Helper.IsPostfixIncrementOrDecrement(operatorKind);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 79255, 79328);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.UnaryOperatorKind
                f_10951_79359_79394(Microsoft.CodeAnalysis.CSharp.BoundIncrementOperator
                this_param)
                {
                    var return_v = this_param.OperatorKind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 79359, 79394);
                    return return_v;
                }


                bool
                f_10951_79359_79405(Microsoft.CodeAnalysis.CSharp.UnaryOperatorKind
                kind)
                {
                    var return_v = kind.IsLifted();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 79359, 79405);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.UnaryOperatorKind
                f_10951_79437_79472(Microsoft.CodeAnalysis.CSharp.BoundIncrementOperator
                this_param)
                {
                    var return_v = this_param.OperatorKind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 79437, 79472);
                    return return_v;
                }


                bool
                f_10951_79437_79484(Microsoft.CodeAnalysis.CSharp.UnaryOperatorKind
                kind)
                {
                    var return_v = kind.IsChecked();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 79437, 79484);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10951_79526_79556(Microsoft.CodeAnalysis.CSharp.BoundIncrementOperator
                this_param)
                {
                    var return_v = this_param.Operand;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 79526, 79556);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_10951_79519_79557(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                boundNode)
                {
                    var return_v = this_param.Create((Microsoft.CodeAnalysis.CSharp.BoundNode)boundNode);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 79519, 79557);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol?
                f_10951_79604_79636(Microsoft.CodeAnalysis.CSharp.BoundIncrementOperator
                this_param)
                {
                    var return_v = this_param.MethodOpt;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 79604, 79636);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IMethodSymbol?
                f_10951_79604_79654(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol?
                symbol)
                {
                    var return_v = symbol.GetPublicSymbol();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 79604, 79654);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ITypeSymbol?
                f_10951_79753_79797(Microsoft.CodeAnalysis.CSharp.BoundIncrementOperator
                this_param)
                {
                    var return_v = this_param.GetPublicTypeSymbol();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 79753, 79797);
                    return return_v;
                }


                bool
                f_10951_79830_79873(Microsoft.CodeAnalysis.CSharp.BoundIncrementOperator
                this_param)
                {
                    var return_v = this_param.WasCompilerGenerated;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 79830, 79873);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.IncrementOrDecrementOperation
                f_10951_79895_80041(bool
                isPostfix, bool
                isLifted, bool
                isChecked, Microsoft.CodeAnalysis.IOperation
                target, Microsoft.CodeAnalysis.IMethodSymbol?
                operatorMethod, Microsoft.CodeAnalysis.OperationKind
                kind, Microsoft.CodeAnalysis.SemanticModel
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.ITypeSymbol?
                type, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.IncrementOrDecrementOperation(isPostfix, isLifted, isChecked, target, operatorMethod, kind, semanticModel, syntax, type, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 79895, 80041);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10951, 78938, 80053);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10951, 78938, 80053);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private IInvalidOperation CreateBoundBadExpressionOperation(BoundBadExpression boundBadExpression)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10951, 80065, 81000);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 80188, 80234);

                SyntaxNode
                syntax = boundBadExpression.Syntax
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 80389, 80476);

                ITypeSymbol?
                type = (DynAbs.Tracing.TraceSender.Conditional_F1(10951, 80409, 80425) || ((f_10951_80409_80425(syntax) && DynAbs.Tracing.TraceSender.Conditional_F2(10951, 80428, 80432)) || DynAbs.Tracing.TraceSender.Conditional_F3(10951, 80435, 80475))) ? null : f_10951_80435_80475(boundBadExpression)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 80619, 80764);

                bool
                isImplicit = f_10951_80637_80676(boundBadExpression) || (DynAbs.Tracing.TraceSender.Expression_False(10951, 80637, 80763) || boundBadExpression.ChildBoundNodes.Any(e => e?.Syntax == boundBadExpression.Syntax))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 80778, 80874);

                var
                children = f_10951_80793_80873(this, f_10951_80838_80872(boundBadExpression))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 80888, 80989);

                return f_10951_80895_80988(children, _semanticModel, syntax, type, constantValue: null, isImplicit);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10951, 80065, 81000);

                bool
                f_10951_80409_80425(Microsoft.CodeAnalysis.SyntaxNode
                this_param)
                {
                    var return_v = this_param.IsMissing;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 80409, 80425);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ITypeSymbol?
                f_10951_80435_80475(Microsoft.CodeAnalysis.CSharp.BoundBadExpression
                this_param)
                {
                    var return_v = this_param.GetPublicTypeSymbol();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 80435, 80475);
                    return return_v;
                }


                bool
                f_10951_80637_80676(Microsoft.CodeAnalysis.CSharp.BoundBadExpression
                this_param)
                {
                    var return_v = this_param.WasCompilerGenerated;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 80637, 80676);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                f_10951_80838_80872(Microsoft.CodeAnalysis.CSharp.BoundBadExpression
                this_param)
                {
                    var return_v = this_param.ChildBoundNodes;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 80838, 80872);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.IOperation>
                f_10951_80793_80873(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                boundNodes)
                {
                    var return_v = this_param.CreateFromArray<Microsoft.CodeAnalysis.CSharp.BoundExpression, Microsoft.CodeAnalysis.IOperation>(boundNodes);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 80793, 80873);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.InvalidOperation
                f_10951_80895_80988(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.IOperation>
                children, Microsoft.CodeAnalysis.SemanticModel
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.ITypeSymbol?
                type, Microsoft.CodeAnalysis.ConstantValue?
                constantValue, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.InvalidOperation(children, semanticModel, syntax, type, constantValue: constantValue, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 80895, 80988);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10951, 80065, 81000);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10951, 80065, 81000);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private ITypeParameterObjectCreationOperation CreateBoundNewTOperation(BoundNewT boundNewT)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10951, 81012, 81576);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 81128, 81268);

                IObjectOrCollectionInitializerOperation?
                initializer = (IObjectOrCollectionInitializerOperation?)f_10951_81225_81267(this, f_10951_81232_81266(boundNewT))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 81282, 81319);

                SyntaxNode
                syntax = boundNewT.Syntax
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 81333, 81385);

                ITypeSymbol?
                type = f_10951_81353_81384(boundNewT)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 81399, 81448);

                bool
                isImplicit = f_10951_81417_81447(boundNewT)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 81462, 81565);

                return f_10951_81469_81564(initializer, _semanticModel, syntax, type, isImplicit);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10951, 81012, 81576);

                Microsoft.CodeAnalysis.CSharp.BoundObjectInitializerExpressionBase?
                f_10951_81232_81266(Microsoft.CodeAnalysis.CSharp.BoundNewT
                this_param)
                {
                    var return_v = this_param.InitializerExpressionOpt;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 81232, 81266);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_10951_81225_81267(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundObjectInitializerExpressionBase?
                boundNode)
                {
                    var return_v = this_param.Create((Microsoft.CodeAnalysis.CSharp.BoundNode?)boundNode);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 81225, 81267);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ITypeSymbol?
                f_10951_81353_81384(Microsoft.CodeAnalysis.CSharp.BoundNewT
                this_param)
                {
                    var return_v = this_param.GetPublicTypeSymbol();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 81353, 81384);
                    return return_v;
                }


                bool
                f_10951_81417_81447(Microsoft.CodeAnalysis.CSharp.BoundNewT
                this_param)
                {
                    var return_v = this_param.WasCompilerGenerated;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 81417, 81447);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.TypeParameterObjectCreationOperation
                f_10951_81469_81564(Microsoft.CodeAnalysis.Operations.IObjectOrCollectionInitializerOperation?
                initializer, Microsoft.CodeAnalysis.SemanticModel
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.ITypeSymbol?
                type, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.TypeParameterObjectCreationOperation(initializer, semanticModel, syntax, type, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 81469, 81564);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10951, 81012, 81576);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10951, 81012, 81576);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private INoPiaObjectCreationOperation CreateNoPiaObjectCreationExpressionOperation(BoundNoPiaObjectCreationExpression creation)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10951, 81588, 82176);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 81740, 81879);

                IObjectOrCollectionInitializerOperation?
                initializer = (IObjectOrCollectionInitializerOperation?)f_10951_81837_81878(this, f_10951_81844_81877(creation))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 81893, 81929);

                SyntaxNode
                syntax = creation.Syntax
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 81943, 81994);

                ITypeSymbol?
                type = f_10951_81963_81993(creation)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 82008, 82056);

                bool
                isImplicit = f_10951_82026_82055(creation)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 82070, 82165);

                return f_10951_82077_82164(initializer, _semanticModel, syntax, type, isImplicit);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10951, 81588, 82176);

                Microsoft.CodeAnalysis.CSharp.BoundObjectInitializerExpressionBase?
                f_10951_81844_81877(Microsoft.CodeAnalysis.CSharp.BoundNoPiaObjectCreationExpression
                this_param)
                {
                    var return_v = this_param.InitializerExpressionOpt;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 81844, 81877);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_10951_81837_81878(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundObjectInitializerExpressionBase?
                boundNode)
                {
                    var return_v = this_param.Create((Microsoft.CodeAnalysis.CSharp.BoundNode?)boundNode);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 81837, 81878);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ITypeSymbol?
                f_10951_81963_81993(Microsoft.CodeAnalysis.CSharp.BoundNoPiaObjectCreationExpression
                this_param)
                {
                    var return_v = this_param.GetPublicTypeSymbol();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 81963, 81993);
                    return return_v;
                }


                bool
                f_10951_82026_82055(Microsoft.CodeAnalysis.CSharp.BoundNoPiaObjectCreationExpression
                this_param)
                {
                    var return_v = this_param.WasCompilerGenerated;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 82026, 82055);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.NoPiaObjectCreationOperation
                f_10951_82077_82164(Microsoft.CodeAnalysis.Operations.IObjectOrCollectionInitializerOperation?
                initializer, Microsoft.CodeAnalysis.SemanticModel
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.ITypeSymbol?
                type, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.NoPiaObjectCreationOperation(initializer, semanticModel, syntax, type, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 82077, 82164);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10951, 81588, 82176);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10951, 81588, 82176);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private IUnaryOperation CreateBoundUnaryOperatorOperation(BoundUnaryOperator boundUnaryOperator)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10951, 82188, 83180);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 82309, 82411);

                UnaryOperatorKind
                unaryOperatorKind = f_10951_82347_82410(f_10951_82378_82409(boundUnaryOperator))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 82425, 82481);

                IOperation
                operand = f_10951_82446_82480(this, f_10951_82453_82479(boundUnaryOperator))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 82495, 82574);

                IMethodSymbol?
                operatorMethod = f_10951_82527_82573(f_10951_82527_82555(boundUnaryOperator))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 82588, 82634);

                SyntaxNode
                syntax = boundUnaryOperator.Syntax
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 82648, 82709);

                ITypeSymbol?
                type = f_10951_82668_82708(boundUnaryOperator)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 82723, 82787);

                ConstantValue?
                constantValue = f_10951_82754_82786(boundUnaryOperator)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 82801, 82860);

                bool
                isLifted = f_10951_82817_82859(f_10951_82817_82848(boundUnaryOperator))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 82874, 82935);

                bool
                isChecked = f_10951_82891_82934(f_10951_82891_82922(boundUnaryOperator))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 82949, 83007);

                bool
                isImplicit = f_10951_82967_83006(boundUnaryOperator)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 83021, 83169);

                return f_10951_83028_83168(unaryOperatorKind, operand, isLifted, isChecked, operatorMethod, _semanticModel, syntax, type, constantValue, isImplicit);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10951, 82188, 83180);

                Microsoft.CodeAnalysis.CSharp.UnaryOperatorKind
                f_10951_82378_82409(Microsoft.CodeAnalysis.CSharp.BoundUnaryOperator
                this_param)
                {
                    var return_v = this_param.OperatorKind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 82378, 82409);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.UnaryOperatorKind
                f_10951_82347_82410(Microsoft.CodeAnalysis.CSharp.UnaryOperatorKind
                operatorKind)
                {
                    var return_v = Helper.DeriveUnaryOperatorKind(operatorKind);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 82347, 82410);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10951_82453_82479(Microsoft.CodeAnalysis.CSharp.BoundUnaryOperator
                this_param)
                {
                    var return_v = this_param.Operand;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 82453, 82479);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_10951_82446_82480(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                boundNode)
                {
                    var return_v = this_param.Create((Microsoft.CodeAnalysis.CSharp.BoundNode)boundNode);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 82446, 82480);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol?
                f_10951_82527_82555(Microsoft.CodeAnalysis.CSharp.BoundUnaryOperator
                this_param)
                {
                    var return_v = this_param.MethodOpt;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 82527, 82555);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IMethodSymbol?
                f_10951_82527_82573(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol?
                symbol)
                {
                    var return_v = symbol.GetPublicSymbol();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 82527, 82573);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ITypeSymbol?
                f_10951_82668_82708(Microsoft.CodeAnalysis.CSharp.BoundUnaryOperator
                this_param)
                {
                    var return_v = this_param.GetPublicTypeSymbol();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 82668, 82708);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ConstantValue?
                f_10951_82754_82786(Microsoft.CodeAnalysis.CSharp.BoundUnaryOperator
                this_param)
                {
                    var return_v = this_param.ConstantValue;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 82754, 82786);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.UnaryOperatorKind
                f_10951_82817_82848(Microsoft.CodeAnalysis.CSharp.BoundUnaryOperator
                this_param)
                {
                    var return_v = this_param.OperatorKind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 82817, 82848);
                    return return_v;
                }


                bool
                f_10951_82817_82859(Microsoft.CodeAnalysis.CSharp.UnaryOperatorKind
                kind)
                {
                    var return_v = kind.IsLifted();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 82817, 82859);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.UnaryOperatorKind
                f_10951_82891_82922(Microsoft.CodeAnalysis.CSharp.BoundUnaryOperator
                this_param)
                {
                    var return_v = this_param.OperatorKind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 82891, 82922);
                    return return_v;
                }


                bool
                f_10951_82891_82934(Microsoft.CodeAnalysis.CSharp.UnaryOperatorKind
                kind)
                {
                    var return_v = kind.IsChecked();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 82891, 82934);
                    return return_v;
                }


                bool
                f_10951_82967_83006(Microsoft.CodeAnalysis.CSharp.BoundUnaryOperator
                this_param)
                {
                    var return_v = this_param.WasCompilerGenerated;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 82967, 83006);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.UnaryOperation
                f_10951_83028_83168(Microsoft.CodeAnalysis.Operations.UnaryOperatorKind
                operatorKind, Microsoft.CodeAnalysis.IOperation
                operand, bool
                isLifted, bool
                isChecked, Microsoft.CodeAnalysis.IMethodSymbol?
                operatorMethod, Microsoft.CodeAnalysis.SemanticModel
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.ITypeSymbol?
                type, Microsoft.CodeAnalysis.ConstantValue?
                constantValue, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.UnaryOperation(operatorKind, operand, isLifted, isChecked, operatorMethod, semanticModel, syntax, type, constantValue, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 83028, 83168);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10951, 82188, 83180);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10951, 82188, 83180);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private IOperation CreateBoundBinaryOperatorBase(BoundBinaryOperatorBase boundBinaryOperatorBase)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10951, 83192, 87952);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 83504, 83568);

                var
                stack = f_10951_83516_83567()
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 83582, 83647);

                BoundBinaryOperatorBase?
                currentBinary = boundBinaryOperatorBase
                ;
                {
                    try
                    {
                        do

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 83663, 83854);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 83698, 83724);

                            f_10951_83698_83723(stack, currentBinary);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 83742, 83804);

                            currentBinary = f_10951_83758_83776(currentBinary) as BoundBinaryOperatorBase;
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 83663, 83854);
                        }
                        while ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 83663, 83854) || true) && (currentBinary is not null)
                        );
                    }
                    catch (System.Exception)
                    {
                        DynAbs.Tracing.TraceSender.TraceExitLoopByException(10951, 83663, 83854);
                        throw;
                    }
                    finally
                    {
                        DynAbs.Tracing.TraceSender.TraceExitLoop(10951, 83663, 83854);
                    }
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 83870, 83900);

                f_10951_83870_83899(f_10951_83883_83894(stack) > 0);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 83914, 83938);

                IOperation?
                left = null
                ;
                try
                {
                    while ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 83954, 84585) || true) && (f_10951_83961_83992(stack, out currentBinary))
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 83954, 84585);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 84026, 84068);

                        left = left ?? (DynAbs.Tracing.TraceSender.Expression_Null<Microsoft.CodeAnalysis.IOperation?>(10951, 84033, 84067) ?? f_10951_84041_84067(this, f_10951_84048_84066(currentBinary)));
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 84086, 84133);

                        IOperation
                        right = f_10951_84105_84132(this, f_10951_84112_84131(currentBinary))
                        ;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 84151, 84570);

                        left = currentBinary switch
                        {
                            BoundBinaryOperator binaryOp when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 84219, 84308) && DynAbs.Tracing.TraceSender.Expression_True(10951, 84219, 84308))
        => f_10951_84251_84308(binaryOp, left, right),
                            BoundUserDefinedConditionalLogicalOperator logicalOp when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 84331, 84459) && DynAbs.Tracing.TraceSender.Expression_True(10951, 84331, 84459))
        => f_10951_84387_84459(logicalOp, left, right),
                            { Kind: var kind } when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 84482, 84550) && DynAbs.Tracing.TraceSender.Expression_True(10951, 84482, 84550))
        => throw f_10951_84510_84550(kind)
                        };
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 83954, 84585);
                    }
                }
                catch (System.Exception)
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoopByException(10951, 83954, 84585);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoop(10951, 83954, 84585);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 84601, 84652);

                f_10951_84601_84651(left is not null && (DynAbs.Tracing.TraceSender.Expression_True(10951, 84614, 84650) && f_10951_84634_84645(stack) == 0));
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 84666, 84679);

                f_10951_84666_84678(stack);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 84693, 84705);

                return left;

                IBinaryOperation createBoundBinaryOperatorOperation(BoundBinaryOperator boundBinaryOperator, IOperation left, IOperation right)
                {
                    try
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterMethod(10951, 84721, 86404);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 84881, 84981);

                        BinaryOperatorKind
                        operatorKind = f_10951_84915_84980(f_10951_84947_84979(boundBinaryOperator))
                        ;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 84999, 85079);

                        IMethodSymbol?
                        operatorMethod = f_10951_85031_85078(f_10951_85031_85060(boundBinaryOperator))
                        ;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 85097, 85139);

                        IMethodSymbol?
                        unaryOperatorMethod = null
                        ;

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 85260, 85633) || true) && (f_10951_85264_85300(f_10951_85264_85288(boundBinaryOperator)) && (DynAbs.Tracing.TraceSender.Expression_True(10951, 85264, 85428) && (operatorKind == BinaryOperatorKind.ConditionalAnd || (DynAbs.Tracing.TraceSender.Expression_False(10951, 85326, 85427) || operatorKind == BinaryOperatorKind.ConditionalOr))) && (DynAbs.Tracing.TraceSender.Expression_True(10951, 85264, 85491) && f_10951_85453_85486_M(DynAbs.Tracing.TraceSender.TraceConditionalAccessExpression(operatorMethod, 10951, 85453, 85486)?.Parameters.Length) == 1))
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 85260, 85633);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 85533, 85570);

                            unaryOperatorMethod = operatorMethod;
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 85592, 85614);

                            operatorMethod = null;
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 85260, 85633);
                        }
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 85653, 85700);

                        SyntaxNode
                        syntax = boundBinaryOperator.Syntax
                        ;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 85718, 85780);

                        ITypeSymbol?
                        type = f_10951_85738_85779(boundBinaryOperator)
                        ;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 85798, 85863);

                        ConstantValue?
                        constantValue = f_10951_85829_85862(boundBinaryOperator)
                        ;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 85881, 85941);

                        bool
                        isLifted = f_10951_85897_85940(f_10951_85897_85929(boundBinaryOperator))
                        ;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 85959, 86021);

                        bool
                        isChecked = f_10951_85976_86020(f_10951_85976_86008(boundBinaryOperator))
                        ;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 86039, 86066);

                        bool
                        isCompareText = false
                        ;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 86084, 86143);

                        bool
                        isImplicit = f_10951_86102_86142(boundBinaryOperator)
                        ;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 86161, 86389);

                        return f_10951_86168_86388(operatorKind, left, right, isLifted, isChecked, isCompareText, operatorMethod, unaryOperatorMethod, _semanticModel, syntax, type, constantValue, isImplicit);
                        DynAbs.Tracing.TraceSender.TraceExitMethod(10951, 84721, 86404);

                        Microsoft.CodeAnalysis.CSharp.BinaryOperatorKind
                        f_10951_84947_84979(Microsoft.CodeAnalysis.CSharp.BoundBinaryOperator
                        this_param)
                        {
                            var return_v = this_param.OperatorKind;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 84947, 84979);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.Operations.BinaryOperatorKind
                        f_10951_84915_84980(Microsoft.CodeAnalysis.CSharp.BinaryOperatorKind
                        operatorKind)
                        {
                            var return_v = Helper.DeriveBinaryOperatorKind(operatorKind);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 84915, 84980);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol?
                        f_10951_85031_85060(Microsoft.CodeAnalysis.CSharp.BoundBinaryOperator
                        this_param)
                        {
                            var return_v = this_param.MethodOpt;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 85031, 85060);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.IMethodSymbol?
                        f_10951_85031_85078(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol?
                        symbol)
                        {
                            var return_v = symbol.GetPublicSymbol();
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 85031, 85078);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                        f_10951_85264_85288(Microsoft.CodeAnalysis.CSharp.BoundBinaryOperator
                        this_param)
                        {
                            var return_v = this_param.Type;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 85264, 85288);
                            return return_v;
                        }


                        bool
                        f_10951_85264_85300(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                        type)
                        {
                            var return_v = type.IsDynamic();
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 85264, 85300);
                            return return_v;
                        }


                        int?
                        f_10951_85453_85486_M(int?
                        i)
                        {
                            var return_v = i;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 85453, 85486);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.ITypeSymbol?
                        f_10951_85738_85779(Microsoft.CodeAnalysis.CSharp.BoundBinaryOperator
                        this_param)
                        {
                            var return_v = this_param.GetPublicTypeSymbol();
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 85738, 85779);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.ConstantValue?
                        f_10951_85829_85862(Microsoft.CodeAnalysis.CSharp.BoundBinaryOperator
                        this_param)
                        {
                            var return_v = this_param.ConstantValue;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 85829, 85862);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.CSharp.BinaryOperatorKind
                        f_10951_85897_85929(Microsoft.CodeAnalysis.CSharp.BoundBinaryOperator
                        this_param)
                        {
                            var return_v = this_param.OperatorKind;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 85897, 85929);
                            return return_v;
                        }


                        bool
                        f_10951_85897_85940(Microsoft.CodeAnalysis.CSharp.BinaryOperatorKind
                        kind)
                        {
                            var return_v = kind.IsLifted();
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 85897, 85940);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.CSharp.BinaryOperatorKind
                        f_10951_85976_86008(Microsoft.CodeAnalysis.CSharp.BoundBinaryOperator
                        this_param)
                        {
                            var return_v = this_param.OperatorKind;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 85976, 86008);
                            return return_v;
                        }


                        bool
                        f_10951_85976_86020(Microsoft.CodeAnalysis.CSharp.BinaryOperatorKind
                        kind)
                        {
                            var return_v = kind.IsChecked();
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 85976, 86020);
                            return return_v;
                        }


                        bool
                        f_10951_86102_86142(Microsoft.CodeAnalysis.CSharp.BoundBinaryOperator
                        this_param)
                        {
                            var return_v = this_param.WasCompilerGenerated;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 86102, 86142);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.Operations.BinaryOperation
                        f_10951_86168_86388(Microsoft.CodeAnalysis.Operations.BinaryOperatorKind
                        operatorKind, Microsoft.CodeAnalysis.IOperation
                        leftOperand, Microsoft.CodeAnalysis.IOperation
                        rightOperand, bool
                        isLifted, bool
                        isChecked, bool
                        isCompareText, Microsoft.CodeAnalysis.IMethodSymbol?
                        operatorMethod, Microsoft.CodeAnalysis.IMethodSymbol?
                        unaryOperatorMethod, Microsoft.CodeAnalysis.SemanticModel
                        semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                        syntax, Microsoft.CodeAnalysis.ITypeSymbol?
                        type, Microsoft.CodeAnalysis.ConstantValue?
                        constantValue, bool
                        isImplicit)
                        {
                            var return_v = new Microsoft.CodeAnalysis.Operations.BinaryOperation(operatorKind, leftOperand, rightOperand, isLifted, isChecked, isCompareText, operatorMethod, unaryOperatorMethod, semanticModel, syntax, type, constantValue, isImplicit);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 86168, 86388);
                            return return_v;
                        }

                    }
                    catch
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10951, 84721, 86404);
                        throw;
                    }
                    finally
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10951, 84721, 86404);
                    }
                    throw new System.Exception("Slicer error: unreachable code");
                }

                IBinaryOperation createBoundUserDefinedConditionalLogicalOperator(BoundUserDefinedConditionalLogicalOperator boundBinaryOperator, IOperation left, IOperation right)
                {
                    try
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterMethod(10951, 86420, 87941);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 86617, 86717);

                        BinaryOperatorKind
                        operatorKind = f_10951_86651_86716(f_10951_86683_86715(boundBinaryOperator))
                        ;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 86735, 86820);

                        IMethodSymbol
                        operatorMethod = f_10951_86766_86819(f_10951_86766_86801(boundBinaryOperator))
                        ;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 86838, 87172);

                        IMethodSymbol
                        unaryOperatorMethod = (DynAbs.Tracing.TraceSender.Conditional_F1(10951, 86874, 86950) || ((f_10951_86874_86917(f_10951_86874_86906(boundBinaryOperator)) == CSharp.BinaryOperatorKind.And && DynAbs.Tracing.TraceSender.Conditional_F2(10951, 87010, 87061)) || DynAbs.Tracing.TraceSender.Conditional_F3(10951, 87121, 87171))) ? f_10951_87010_87061(f_10951_87010_87043(boundBinaryOperator)) : f_10951_87121_87171(f_10951_87121_87153(boundBinaryOperator))
                        ;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 87190, 87237);

                        SyntaxNode
                        syntax = boundBinaryOperator.Syntax
                        ;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 87255, 87317);

                        ITypeSymbol?
                        type = f_10951_87275_87316(boundBinaryOperator)
                        ;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 87335, 87400);

                        ConstantValue?
                        constantValue = f_10951_87366_87399(boundBinaryOperator)
                        ;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 87418, 87478);

                        bool
                        isLifted = f_10951_87434_87477(f_10951_87434_87466(boundBinaryOperator))
                        ;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 87496, 87558);

                        bool
                        isChecked = f_10951_87513_87557(f_10951_87513_87545(boundBinaryOperator))
                        ;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 87576, 87603);

                        bool
                        isCompareText = false
                        ;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 87621, 87680);

                        bool
                        isImplicit = f_10951_87639_87679(boundBinaryOperator)
                        ;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 87698, 87926);

                        return f_10951_87705_87925(operatorKind, left, right, isLifted, isChecked, isCompareText, operatorMethod, unaryOperatorMethod, _semanticModel, syntax, type, constantValue, isImplicit);
                        DynAbs.Tracing.TraceSender.TraceExitMethod(10951, 86420, 87941);

                        Microsoft.CodeAnalysis.CSharp.BinaryOperatorKind
                        f_10951_86683_86715(Microsoft.CodeAnalysis.CSharp.BoundUserDefinedConditionalLogicalOperator
                        this_param)
                        {
                            var return_v = this_param.OperatorKind;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 86683, 86715);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.Operations.BinaryOperatorKind
                        f_10951_86651_86716(Microsoft.CodeAnalysis.CSharp.BinaryOperatorKind
                        operatorKind)
                        {
                            var return_v = Helper.DeriveBinaryOperatorKind(operatorKind);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 86651, 86716);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                        f_10951_86766_86801(Microsoft.CodeAnalysis.CSharp.BoundUserDefinedConditionalLogicalOperator
                        this_param)
                        {
                            var return_v = this_param.LogicalOperator;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 86766, 86801);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.IMethodSymbol?
                        f_10951_86766_86819(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                        symbol)
                        {
                            var return_v = symbol.GetPublicSymbol();
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 86766, 86819);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.CSharp.BinaryOperatorKind
                        f_10951_86874_86906(Microsoft.CodeAnalysis.CSharp.BoundUserDefinedConditionalLogicalOperator
                        this_param)
                        {
                            var return_v = this_param.OperatorKind;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 86874, 86906);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.CSharp.BinaryOperatorKind
                        f_10951_86874_86917(Microsoft.CodeAnalysis.CSharp.BinaryOperatorKind
                        kind)
                        {
                            var return_v = kind.Operator();
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 86874, 86917);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                        f_10951_87010_87043(Microsoft.CodeAnalysis.CSharp.BoundUserDefinedConditionalLogicalOperator
                        this_param)
                        {
                            var return_v = this_param.FalseOperator;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 87010, 87043);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.IMethodSymbol?
                        f_10951_87010_87061(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                        symbol)
                        {
                            var return_v = symbol.GetPublicSymbol();
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 87010, 87061);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                        f_10951_87121_87153(Microsoft.CodeAnalysis.CSharp.BoundUserDefinedConditionalLogicalOperator
                        this_param)
                        {
                            var return_v = this_param.TrueOperator;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 87121, 87153);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.IMethodSymbol?
                        f_10951_87121_87171(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                        symbol)
                        {
                            var return_v = symbol.GetPublicSymbol();
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 87121, 87171);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.ITypeSymbol?
                        f_10951_87275_87316(Microsoft.CodeAnalysis.CSharp.BoundUserDefinedConditionalLogicalOperator
                        this_param)
                        {
                            var return_v = this_param.GetPublicTypeSymbol();
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 87275, 87316);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.ConstantValue?
                        f_10951_87366_87399(Microsoft.CodeAnalysis.CSharp.BoundUserDefinedConditionalLogicalOperator
                        this_param)
                        {
                            var return_v = this_param.ConstantValue;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 87366, 87399);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.CSharp.BinaryOperatorKind
                        f_10951_87434_87466(Microsoft.CodeAnalysis.CSharp.BoundUserDefinedConditionalLogicalOperator
                        this_param)
                        {
                            var return_v = this_param.OperatorKind;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 87434, 87466);
                            return return_v;
                        }


                        bool
                        f_10951_87434_87477(Microsoft.CodeAnalysis.CSharp.BinaryOperatorKind
                        kind)
                        {
                            var return_v = kind.IsLifted();
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 87434, 87477);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.CSharp.BinaryOperatorKind
                        f_10951_87513_87545(Microsoft.CodeAnalysis.CSharp.BoundUserDefinedConditionalLogicalOperator
                        this_param)
                        {
                            var return_v = this_param.OperatorKind;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 87513, 87545);
                            return return_v;
                        }


                        bool
                        f_10951_87513_87557(Microsoft.CodeAnalysis.CSharp.BinaryOperatorKind
                        kind)
                        {
                            var return_v = kind.IsChecked();
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 87513, 87557);
                            return return_v;
                        }


                        bool
                        f_10951_87639_87679(Microsoft.CodeAnalysis.CSharp.BoundUserDefinedConditionalLogicalOperator
                        this_param)
                        {
                            var return_v = this_param.WasCompilerGenerated;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 87639, 87679);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.Operations.BinaryOperation
                        f_10951_87705_87925(Microsoft.CodeAnalysis.Operations.BinaryOperatorKind
                        operatorKind, Microsoft.CodeAnalysis.IOperation
                        leftOperand, Microsoft.CodeAnalysis.IOperation
                        rightOperand, bool
                        isLifted, bool
                        isChecked, bool
                        isCompareText, Microsoft.CodeAnalysis.IMethodSymbol
                        operatorMethod, Microsoft.CodeAnalysis.IMethodSymbol
                        unaryOperatorMethod, Microsoft.CodeAnalysis.SemanticModel
                        semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                        syntax, Microsoft.CodeAnalysis.ITypeSymbol?
                        type, Microsoft.CodeAnalysis.ConstantValue?
                        constantValue, bool
                        isImplicit)
                        {
                            var return_v = new Microsoft.CodeAnalysis.Operations.BinaryOperation(operatorKind, leftOperand, rightOperand, isLifted, isChecked, isCompareText, operatorMethod, unaryOperatorMethod, semanticModel, syntax, type, constantValue, isImplicit);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 87705, 87925);
                            return return_v;
                        }

                    }
                    catch
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10951, 86420, 87941);
                        throw;
                    }
                    finally
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10951, 86420, 87941);
                    }
                    throw new System.Exception("Slicer error: unreachable code");
                }
                DynAbs.Tracing.TraceSender.TraceExitMethod(10951, 83192, 87952);

                Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.BoundBinaryOperatorBase>
                f_10951_83516_83567()
                {
                    var return_v = ArrayBuilder<BoundBinaryOperatorBase>.GetInstance();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 83516, 83567);
                    return return_v;
                }


                int
                f_10951_83698_83723(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.BoundBinaryOperatorBase>
                builder, Microsoft.CodeAnalysis.CSharp.BoundBinaryOperatorBase
                e)
                {
                    builder.Push<Microsoft.CodeAnalysis.CSharp.BoundBinaryOperatorBase>(e);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 83698, 83723);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10951_83758_83776(Microsoft.CodeAnalysis.CSharp.BoundBinaryOperatorBase
                this_param)
                {
                    var return_v = this_param.Left;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 83758, 83776);
                    return return_v;
                }


                int
                f_10951_83883_83894(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.BoundBinaryOperatorBase>
                this_param)
                {
                    var return_v = this_param.Count;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 83883, 83894);
                    return return_v;
                }


                int
                f_10951_83870_83899(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 83870, 83899);
                    return 0;
                }


                bool
                f_10951_83961_83992(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.BoundBinaryOperatorBase>
                builder, out Microsoft.CodeAnalysis.CSharp.BoundBinaryOperatorBase?
                result)
                {
                    var return_v = builder.TryPop<Microsoft.CodeAnalysis.CSharp.BoundBinaryOperatorBase>(out result);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 83961, 83992);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10951_84048_84066(Microsoft.CodeAnalysis.CSharp.BoundBinaryOperatorBase
                this_param)
                {
                    var return_v = this_param.Left;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 84048, 84066);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_10951_84041_84067(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                boundNode)
                {
                    var return_v = this_param.Create((Microsoft.CodeAnalysis.CSharp.BoundNode)boundNode);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 84041, 84067);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10951_84112_84131(Microsoft.CodeAnalysis.CSharp.BoundBinaryOperatorBase
                this_param)
                {
                    var return_v = this_param.Right;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 84112, 84131);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_10951_84105_84132(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                boundNode)
                {
                    var return_v = this_param.Create((Microsoft.CodeAnalysis.CSharp.BoundNode)boundNode);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 84105, 84132);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.IBinaryOperation
                f_10951_84251_84308(Microsoft.CodeAnalysis.CSharp.BoundBinaryOperator
                boundBinaryOperator, Microsoft.CodeAnalysis.IOperation
                left, Microsoft.CodeAnalysis.IOperation
                right)
                {
                    var return_v = createBoundBinaryOperatorOperation(boundBinaryOperator, left, right);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 84251, 84308);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.IBinaryOperation
                f_10951_84387_84459(Microsoft.CodeAnalysis.CSharp.BoundUserDefinedConditionalLogicalOperator
                boundBinaryOperator, Microsoft.CodeAnalysis.IOperation
                left, Microsoft.CodeAnalysis.IOperation
                right)
                {
                    var return_v = createBoundUserDefinedConditionalLogicalOperator(boundBinaryOperator, left, right);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 84387, 84459);
                    return return_v;
                }


                System.Exception
                f_10951_84510_84550(Microsoft.CodeAnalysis.CSharp.BoundKind
                o)
                {
                    var return_v = ExceptionUtilities.UnexpectedValue((object)o);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 84510, 84550);
                    return return_v;
                }


                int
                f_10951_84634_84645(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.BoundBinaryOperatorBase>
                this_param)
                {
                    var return_v = this_param.Count;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 84634, 84645);
                    return return_v;
                }


                int
                f_10951_84601_84651(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 84601, 84651);
                    return 0;
                }


                int
                f_10951_84666_84678(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.BoundBinaryOperatorBase>
                this_param)
                {
                    this_param.Free();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 84666, 84678);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10951, 83192, 87952);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10951, 83192, 87952);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private ITupleBinaryOperation CreateBoundTupleBinaryOperatorOperation(BoundTupleBinaryOperator boundTupleBinaryOperator)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10951, 87964, 88707);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 88109, 88165);

                IOperation
                left = f_10951_88127_88164(this, f_10951_88134_88163(boundTupleBinaryOperator))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 88179, 88237);

                IOperation
                right = f_10951_88198_88236(this, f_10951_88205_88235(boundTupleBinaryOperator))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 88251, 88356);

                BinaryOperatorKind
                operatorKind = f_10951_88285_88355(f_10951_88317_88354(boundTupleBinaryOperator))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 88370, 88422);

                SyntaxNode
                syntax = boundTupleBinaryOperator.Syntax
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 88436, 88503);

                ITypeSymbol?
                type = f_10951_88456_88502(boundTupleBinaryOperator)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 88517, 88581);

                bool
                isImplicit = f_10951_88535_88580(boundTupleBinaryOperator)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 88595, 88696);

                return f_10951_88602_88695(operatorKind, left, right, _semanticModel, syntax, type, isImplicit);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10951, 87964, 88707);

                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10951_88134_88163(Microsoft.CodeAnalysis.CSharp.BoundTupleBinaryOperator
                this_param)
                {
                    var return_v = this_param.Left;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 88134, 88163);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_10951_88127_88164(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                boundNode)
                {
                    var return_v = this_param.Create((Microsoft.CodeAnalysis.CSharp.BoundNode)boundNode);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 88127, 88164);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10951_88205_88235(Microsoft.CodeAnalysis.CSharp.BoundTupleBinaryOperator
                this_param)
                {
                    var return_v = this_param.Right;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 88205, 88235);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_10951_88198_88236(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                boundNode)
                {
                    var return_v = this_param.Create((Microsoft.CodeAnalysis.CSharp.BoundNode)boundNode);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 88198, 88236);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BinaryOperatorKind
                f_10951_88317_88354(Microsoft.CodeAnalysis.CSharp.BoundTupleBinaryOperator
                this_param)
                {
                    var return_v = this_param.OperatorKind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 88317, 88354);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.BinaryOperatorKind
                f_10951_88285_88355(Microsoft.CodeAnalysis.CSharp.BinaryOperatorKind
                operatorKind)
                {
                    var return_v = Helper.DeriveBinaryOperatorKind(operatorKind);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 88285, 88355);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ITypeSymbol?
                f_10951_88456_88502(Microsoft.CodeAnalysis.CSharp.BoundTupleBinaryOperator
                this_param)
                {
                    var return_v = this_param.GetPublicTypeSymbol();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 88456, 88502);
                    return return_v;
                }


                bool
                f_10951_88535_88580(Microsoft.CodeAnalysis.CSharp.BoundTupleBinaryOperator
                this_param)
                {
                    var return_v = this_param.WasCompilerGenerated;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 88535, 88580);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.TupleBinaryOperation
                f_10951_88602_88695(Microsoft.CodeAnalysis.Operations.BinaryOperatorKind
                operatorKind, Microsoft.CodeAnalysis.IOperation
                leftOperand, Microsoft.CodeAnalysis.IOperation
                rightOperand, Microsoft.CodeAnalysis.SemanticModel
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.ITypeSymbol?
                type, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.TupleBinaryOperation(operatorKind, leftOperand, rightOperand, semanticModel, syntax, type, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 88602, 88695);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10951, 87964, 88707);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10951, 87964, 88707);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private IConditionalOperation CreateBoundConditionalOperatorOperation(BoundConditionalOperator boundConditionalOperator)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10951, 88719, 89613);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 88864, 88930);

                IOperation
                condition = f_10951_88887_88929(this, f_10951_88894_88928(boundConditionalOperator))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 88944, 89011);

                IOperation
                whenTrue = f_10951_88966_89010(this, f_10951_88973_89009(boundConditionalOperator))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 89025, 89093);

                IOperation
                whenFalse = f_10951_89048_89092(this, f_10951_89055_89091(boundConditionalOperator))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 89107, 89151);

                bool
                isRef = f_10951_89120_89150(boundConditionalOperator)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 89165, 89217);

                SyntaxNode
                syntax = boundConditionalOperator.Syntax
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 89231, 89298);

                ITypeSymbol?
                type = f_10951_89251_89297(boundConditionalOperator)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 89312, 89382);

                ConstantValue?
                constantValue = f_10951_89343_89381(boundConditionalOperator)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 89396, 89460);

                bool
                isImplicit = f_10951_89414_89459(boundConditionalOperator)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 89474, 89602);

                return f_10951_89481_89601(condition, whenTrue, whenFalse, isRef, _semanticModel, syntax, type, constantValue, isImplicit);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10951, 88719, 89613);

                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10951_88894_88928(Microsoft.CodeAnalysis.CSharp.BoundConditionalOperator
                this_param)
                {
                    var return_v = this_param.Condition;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 88894, 88928);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_10951_88887_88929(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                boundNode)
                {
                    var return_v = this_param.Create((Microsoft.CodeAnalysis.CSharp.BoundNode)boundNode);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 88887, 88929);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10951_88973_89009(Microsoft.CodeAnalysis.CSharp.BoundConditionalOperator
                this_param)
                {
                    var return_v = this_param.Consequence;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 88973, 89009);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_10951_88966_89010(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                boundNode)
                {
                    var return_v = this_param.Create((Microsoft.CodeAnalysis.CSharp.BoundNode)boundNode);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 88966, 89010);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10951_89055_89091(Microsoft.CodeAnalysis.CSharp.BoundConditionalOperator
                this_param)
                {
                    var return_v = this_param.Alternative;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 89055, 89091);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_10951_89048_89092(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                boundNode)
                {
                    var return_v = this_param.Create((Microsoft.CodeAnalysis.CSharp.BoundNode)boundNode);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 89048, 89092);
                    return return_v;
                }


                bool
                f_10951_89120_89150(Microsoft.CodeAnalysis.CSharp.BoundConditionalOperator
                this_param)
                {
                    var return_v = this_param.IsRef;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 89120, 89150);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ITypeSymbol?
                f_10951_89251_89297(Microsoft.CodeAnalysis.CSharp.BoundConditionalOperator
                this_param)
                {
                    var return_v = this_param.GetPublicTypeSymbol();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 89251, 89297);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ConstantValue?
                f_10951_89343_89381(Microsoft.CodeAnalysis.CSharp.BoundConditionalOperator
                this_param)
                {
                    var return_v = this_param.ConstantValue;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 89343, 89381);
                    return return_v;
                }


                bool
                f_10951_89414_89459(Microsoft.CodeAnalysis.CSharp.BoundConditionalOperator
                this_param)
                {
                    var return_v = this_param.WasCompilerGenerated;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 89414, 89459);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.ConditionalOperation
                f_10951_89481_89601(Microsoft.CodeAnalysis.IOperation
                condition, Microsoft.CodeAnalysis.IOperation
                whenTrue, Microsoft.CodeAnalysis.IOperation
                whenFalse, bool
                isRef, Microsoft.CodeAnalysis.SemanticModel
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.ITypeSymbol?
                type, Microsoft.CodeAnalysis.ConstantValue?
                constantValue, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.ConditionalOperation(condition, whenTrue, whenFalse, isRef, semanticModel, syntax, type, constantValue, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 89481, 89601);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10951, 88719, 89613);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10951, 88719, 89613);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private ICoalesceOperation CreateBoundNullCoalescingOperatorOperation(BoundNullCoalescingOperator boundNullCoalescingOperator)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10951, 89625, 90889);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 89776, 89843);

                IOperation
                value = f_10951_89795_89842(this, f_10951_89802_89841(boundNullCoalescingOperator))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 89857, 89928);

                IOperation
                whenNull = f_10951_89879_89927(this, f_10951_89886_89926(boundNullCoalescingOperator))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 89942, 89997);

                SyntaxNode
                syntax = boundNullCoalescingOperator.Syntax
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 90011, 90081);

                ITypeSymbol?
                type = f_10951_90031_90080(boundNullCoalescingOperator)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 90095, 90168);

                ConstantValue?
                constantValue = f_10951_90126_90167(boundNullCoalescingOperator)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 90182, 90249);

                bool
                isImplicit = f_10951_90200_90248(boundNullCoalescingOperator)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 90263, 90335);

                Conversion
                valueConversion = f_10951_90292_90334(boundNullCoalescingOperator)
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 90351, 90742) || true) && (valueConversion.Exists && (DynAbs.Tracing.TraceSender.Expression_True(10951, 90355, 90408) && f_10951_90381_90408_M(!valueConversion.IsIdentity)) && (DynAbs.Tracing.TraceSender.Expression_True(10951, 90355, 90655) && f_10951_90429_90655(f_10951_90429_90461(boundNullCoalescingOperator), f_10951_90514_90529(DynAbs.Tracing.TraceSender.TraceConditionalAccessExpression(f_10951_90469_90513(f_10951_90469_90508(boundNullCoalescingOperator)), 10951, 90469, 90529)), TypeCompareKind.IgnoreCustomModifiersAndArraySizesAndLowerBounds | TypeCompareKind.IgnoreNullableModifiersForReferenceTypes)))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 90351, 90742);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 90689, 90727);

                    valueConversion = Conversion.Identity;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 90351, 90742);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 90758, 90878);

                return f_10951_90765_90877(value, whenNull, valueConversion, _semanticModel, syntax, type, constantValue, isImplicit);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10951, 89625, 90889);

                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10951_89802_89841(Microsoft.CodeAnalysis.CSharp.BoundNullCoalescingOperator
                this_param)
                {
                    var return_v = this_param.LeftOperand;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 89802, 89841);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_10951_89795_89842(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                boundNode)
                {
                    var return_v = this_param.Create((Microsoft.CodeAnalysis.CSharp.BoundNode)boundNode);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 89795, 89842);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10951_89886_89926(Microsoft.CodeAnalysis.CSharp.BoundNullCoalescingOperator
                this_param)
                {
                    var return_v = this_param.RightOperand;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 89886, 89926);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_10951_89879_89927(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                boundNode)
                {
                    var return_v = this_param.Create((Microsoft.CodeAnalysis.CSharp.BoundNode)boundNode);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 89879, 89927);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ITypeSymbol?
                f_10951_90031_90080(Microsoft.CodeAnalysis.CSharp.BoundNullCoalescingOperator
                this_param)
                {
                    var return_v = this_param.GetPublicTypeSymbol();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 90031, 90080);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ConstantValue?
                f_10951_90126_90167(Microsoft.CodeAnalysis.CSharp.BoundNullCoalescingOperator
                this_param)
                {
                    var return_v = this_param.ConstantValue;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 90126, 90167);
                    return return_v;
                }


                bool
                f_10951_90200_90248(Microsoft.CodeAnalysis.CSharp.BoundNullCoalescingOperator
                this_param)
                {
                    var return_v = this_param.WasCompilerGenerated;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 90200, 90248);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Conversion
                f_10951_90292_90334(Microsoft.CodeAnalysis.CSharp.BoundNullCoalescingOperator
                this_param)
                {
                    var return_v = this_param.LeftConversion;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 90292, 90334);
                    return return_v;
                }


                bool
                f_10951_90381_90408_M(bool
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 90381, 90408);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                f_10951_90429_90461(Microsoft.CodeAnalysis.CSharp.BoundNullCoalescingOperator
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 90429, 90461);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10951_90469_90508(Microsoft.CodeAnalysis.CSharp.BoundNullCoalescingOperator
                this_param)
                {
                    var return_v = this_param.LeftOperand;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 90469, 90508);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?
                f_10951_90469_90513(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 90469, 90513);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                f_10951_90514_90529(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                type)
                {
                    var return_v = type?.StrippedType();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 90514, 90529);
                    return return_v;
                }


                bool
                f_10951_90429_90655(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?
                t2, Microsoft.CodeAnalysis.TypeCompareKind
                compareKind)
                {
                    var return_v = this_param.Equals(t2, compareKind);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 90429, 90655);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.CoalesceOperation
                f_10951_90765_90877(Microsoft.CodeAnalysis.IOperation
                value, Microsoft.CodeAnalysis.IOperation
                whenNull, Microsoft.CodeAnalysis.CSharp.Conversion
                valueConversion, Microsoft.CodeAnalysis.SemanticModel
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.ITypeSymbol?
                type, Microsoft.CodeAnalysis.ConstantValue?
                constantValue, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.CoalesceOperation(value, whenNull, (Microsoft.CodeAnalysis.Operations.IConvertibleConversion)valueConversion, semanticModel, syntax, type, constantValue, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 90765, 90877);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10951, 89625, 90889);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10951, 89625, 90889);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private IOperation CreateBoundNullCoalescingAssignmentOperatorOperation(BoundNullCoalescingAssignmentOperator boundNode)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10951, 90901, 91463);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 91046, 91096);

                IOperation
                target = f_10951_91066_91095(this, f_10951_91073_91094(boundNode))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 91110, 91160);

                IOperation
                value = f_10951_91129_91159(this, f_10951_91136_91158(boundNode))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 91174, 91211);

                SyntaxNode
                syntax = boundNode.Syntax
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 91225, 91277);

                ITypeSymbol?
                type = f_10951_91245_91276(boundNode)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 91291, 91340);

                bool
                isImplicit = f_10951_91309_91339(boundNode)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 91356, 91452);

                return f_10951_91363_91451(target, value, _semanticModel, syntax, type, isImplicit);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10951, 90901, 91463);

                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10951_91073_91094(Microsoft.CodeAnalysis.CSharp.BoundNullCoalescingAssignmentOperator
                this_param)
                {
                    var return_v = this_param.LeftOperand;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 91073, 91094);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_10951_91066_91095(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                boundNode)
                {
                    var return_v = this_param.Create((Microsoft.CodeAnalysis.CSharp.BoundNode)boundNode);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 91066, 91095);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10951_91136_91158(Microsoft.CodeAnalysis.CSharp.BoundNullCoalescingAssignmentOperator
                this_param)
                {
                    var return_v = this_param.RightOperand;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 91136, 91158);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_10951_91129_91159(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                boundNode)
                {
                    var return_v = this_param.Create((Microsoft.CodeAnalysis.CSharp.BoundNode)boundNode);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 91129, 91159);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ITypeSymbol?
                f_10951_91245_91276(Microsoft.CodeAnalysis.CSharp.BoundNullCoalescingAssignmentOperator
                this_param)
                {
                    var return_v = this_param.GetPublicTypeSymbol();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 91245, 91276);
                    return return_v;
                }


                bool
                f_10951_91309_91339(Microsoft.CodeAnalysis.CSharp.BoundNullCoalescingAssignmentOperator
                this_param)
                {
                    var return_v = this_param.WasCompilerGenerated;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 91309, 91339);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.CoalesceAssignmentOperation
                f_10951_91363_91451(Microsoft.CodeAnalysis.IOperation
                target, Microsoft.CodeAnalysis.IOperation
                value, Microsoft.CodeAnalysis.SemanticModel
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.ITypeSymbol?
                type, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.CoalesceAssignmentOperation(target, value, semanticModel, syntax, type, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 91363, 91451);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10951, 90901, 91463);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10951, 90901, 91463);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private IAwaitOperation CreateBoundAwaitExpressionOperation(BoundAwaitExpression boundAwaitExpression)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10951, 91475, 91988);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 91602, 91668);

                IOperation
                awaitedValue = f_10951_91628_91667(this, f_10951_91635_91666(boundAwaitExpression))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 91682, 91730);

                SyntaxNode
                syntax = boundAwaitExpression.Syntax
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 91744, 91807);

                ITypeSymbol?
                type = f_10951_91764_91806(boundAwaitExpression)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 91821, 91881);

                bool
                isImplicit = f_10951_91839_91880(boundAwaitExpression)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 91895, 91977);

                return f_10951_91902_91976(awaitedValue, _semanticModel, syntax, type, isImplicit);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10951, 91475, 91988);

                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10951_91635_91666(Microsoft.CodeAnalysis.CSharp.BoundAwaitExpression
                this_param)
                {
                    var return_v = this_param.Expression;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 91635, 91666);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_10951_91628_91667(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                boundNode)
                {
                    var return_v = this_param.Create((Microsoft.CodeAnalysis.CSharp.BoundNode)boundNode);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 91628, 91667);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ITypeSymbol?
                f_10951_91764_91806(Microsoft.CodeAnalysis.CSharp.BoundAwaitExpression
                this_param)
                {
                    var return_v = this_param.GetPublicTypeSymbol();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 91764, 91806);
                    return return_v;
                }


                bool
                f_10951_91839_91880(Microsoft.CodeAnalysis.CSharp.BoundAwaitExpression
                this_param)
                {
                    var return_v = this_param.WasCompilerGenerated;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 91839, 91880);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.AwaitOperation
                f_10951_91902_91976(Microsoft.CodeAnalysis.IOperation
                operation, Microsoft.CodeAnalysis.SemanticModel
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.ITypeSymbol?
                type, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.AwaitOperation(operation, semanticModel, syntax, type, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 91902, 91976);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10951, 91475, 91988);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10951, 91475, 91988);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private IArrayElementReferenceOperation CreateBoundArrayAccessOperation(BoundArrayAccess boundArrayAccess)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10951, 92000, 92654);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 92131, 92195);

                IOperation
                arrayReference = f_10951_92159_92194(this, f_10951_92166_92193(boundArrayAccess))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 92209, 92317);

                ImmutableArray<IOperation>
                indices = f_10951_92246_92316(this, f_10951_92291_92315(boundArrayAccess))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 92331, 92375);

                SyntaxNode
                syntax = boundArrayAccess.Syntax
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 92389, 92448);

                ITypeSymbol?
                type = f_10951_92409_92447(boundArrayAccess)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 92462, 92518);

                bool
                isImplicit = f_10951_92480_92517(boundArrayAccess)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 92534, 92643);

                return f_10951_92541_92642(arrayReference, indices, _semanticModel, syntax, type, isImplicit);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10951, 92000, 92654);

                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10951_92166_92193(Microsoft.CodeAnalysis.CSharp.BoundArrayAccess
                this_param)
                {
                    var return_v = this_param.Expression;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 92166, 92193);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_10951_92159_92194(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                boundNode)
                {
                    var return_v = this_param.Create((Microsoft.CodeAnalysis.CSharp.BoundNode)boundNode);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 92159, 92194);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                f_10951_92291_92315(Microsoft.CodeAnalysis.CSharp.BoundArrayAccess
                this_param)
                {
                    var return_v = this_param.Indices;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 92291, 92315);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.IOperation>
                f_10951_92246_92316(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                boundNodes)
                {
                    var return_v = this_param.CreateFromArray<Microsoft.CodeAnalysis.CSharp.BoundExpression, Microsoft.CodeAnalysis.IOperation>(boundNodes);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 92246, 92316);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ITypeSymbol?
                f_10951_92409_92447(Microsoft.CodeAnalysis.CSharp.BoundArrayAccess
                this_param)
                {
                    var return_v = this_param.GetPublicTypeSymbol();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 92409, 92447);
                    return return_v;
                }


                bool
                f_10951_92480_92517(Microsoft.CodeAnalysis.CSharp.BoundArrayAccess
                this_param)
                {
                    var return_v = this_param.WasCompilerGenerated;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 92480, 92517);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.ArrayElementReferenceOperation
                f_10951_92541_92642(Microsoft.CodeAnalysis.IOperation
                arrayReference, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.IOperation>
                indices, Microsoft.CodeAnalysis.SemanticModel
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.ITypeSymbol?
                type, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.ArrayElementReferenceOperation(arrayReference, indices, semanticModel, syntax, type, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 92541, 92642);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10951, 92000, 92654);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10951, 92000, 92654);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private INameOfOperation CreateBoundNameOfOperatorOperation(BoundNameOfOperator boundNameOfOperator)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10951, 92666, 93257);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 92791, 92850);

                IOperation
                argument = f_10951_92813_92849(this, f_10951_92820_92848(boundNameOfOperator))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 92864, 92911);

                SyntaxNode
                syntax = boundNameOfOperator.Syntax
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 92925, 92987);

                ITypeSymbol?
                type = f_10951_92945_92986(boundNameOfOperator)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 93001, 93065);

                ConstantValue
                constantValue = f_10951_93031_93064(boundNameOfOperator)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 93079, 93138);

                bool
                isImplicit = f_10951_93097_93137(boundNameOfOperator)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 93152, 93246);

                return f_10951_93159_93245(argument, _semanticModel, syntax, type, constantValue, isImplicit);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10951, 92666, 93257);

                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10951_92820_92848(Microsoft.CodeAnalysis.CSharp.BoundNameOfOperator
                this_param)
                {
                    var return_v = this_param.Argument;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 92820, 92848);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_10951_92813_92849(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                boundNode)
                {
                    var return_v = this_param.Create((Microsoft.CodeAnalysis.CSharp.BoundNode)boundNode);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 92813, 92849);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ITypeSymbol?
                f_10951_92945_92986(Microsoft.CodeAnalysis.CSharp.BoundNameOfOperator
                this_param)
                {
                    var return_v = this_param.GetPublicTypeSymbol();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 92945, 92986);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ConstantValue
                f_10951_93031_93064(Microsoft.CodeAnalysis.CSharp.BoundNameOfOperator
                this_param)
                {
                    var return_v = this_param.ConstantValue;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 93031, 93064);
                    return return_v;
                }


                bool
                f_10951_93097_93137(Microsoft.CodeAnalysis.CSharp.BoundNameOfOperator
                this_param)
                {
                    var return_v = this_param.WasCompilerGenerated;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 93097, 93137);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.NameOfOperation
                f_10951_93159_93245(Microsoft.CodeAnalysis.IOperation
                argument, Microsoft.CodeAnalysis.SemanticModel
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.ITypeSymbol?
                type, Microsoft.CodeAnalysis.ConstantValue
                constantValue, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.NameOfOperation(argument, semanticModel, syntax, type, constantValue, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 93159, 93245);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10951, 92666, 93257);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10951, 92666, 93257);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private IThrowOperation CreateBoundThrowExpressionOperation(BoundThrowExpression boundThrowExpression)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10951, 93269, 93778);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 93396, 93460);

                IOperation
                expression = f_10951_93420_93459(this, f_10951_93427_93458(boundThrowExpression))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 93474, 93522);

                SyntaxNode
                syntax = boundThrowExpression.Syntax
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 93536, 93599);

                ITypeSymbol?
                type = f_10951_93556_93598(boundThrowExpression)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 93613, 93673);

                bool
                isImplicit = f_10951_93631_93672(boundThrowExpression)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 93687, 93767);

                return f_10951_93694_93766(expression, _semanticModel, syntax, type, isImplicit);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10951, 93269, 93778);

                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10951_93427_93458(Microsoft.CodeAnalysis.CSharp.BoundThrowExpression
                this_param)
                {
                    var return_v = this_param.Expression;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 93427, 93458);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_10951_93420_93459(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                boundNode)
                {
                    var return_v = this_param.Create((Microsoft.CodeAnalysis.CSharp.BoundNode)boundNode);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 93420, 93459);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ITypeSymbol?
                f_10951_93556_93598(Microsoft.CodeAnalysis.CSharp.BoundThrowExpression
                this_param)
                {
                    var return_v = this_param.GetPublicTypeSymbol();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 93556, 93598);
                    return return_v;
                }


                bool
                f_10951_93631_93672(Microsoft.CodeAnalysis.CSharp.BoundThrowExpression
                this_param)
                {
                    var return_v = this_param.WasCompilerGenerated;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 93631, 93672);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.ThrowOperation
                f_10951_93694_93766(Microsoft.CodeAnalysis.IOperation
                exception, Microsoft.CodeAnalysis.SemanticModel
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.ITypeSymbol?
                type, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.ThrowOperation(exception, semanticModel, syntax, type, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 93694, 93766);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10951, 93269, 93778);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10951, 93269, 93778);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private IAddressOfOperation CreateBoundAddressOfOperatorOperation(BoundAddressOfOperator boundAddressOfOperator)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10951, 93790, 94316);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 93927, 93989);

                IOperation
                reference = f_10951_93950_93988(this, f_10951_93957_93987(boundAddressOfOperator))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 94003, 94053);

                SyntaxNode
                syntax = boundAddressOfOperator.Syntax
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 94067, 94132);

                ITypeSymbol?
                type = f_10951_94087_94131(boundAddressOfOperator)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 94146, 94208);

                bool
                isImplicit = f_10951_94164_94207(boundAddressOfOperator)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 94222, 94305);

                return f_10951_94229_94304(reference, _semanticModel, syntax, type, isImplicit);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10951, 93790, 94316);

                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10951_93957_93987(Microsoft.CodeAnalysis.CSharp.BoundAddressOfOperator
                this_param)
                {
                    var return_v = this_param.Operand;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 93957, 93987);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_10951_93950_93988(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                boundNode)
                {
                    var return_v = this_param.Create((Microsoft.CodeAnalysis.CSharp.BoundNode)boundNode);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 93950, 93988);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ITypeSymbol?
                f_10951_94087_94131(Microsoft.CodeAnalysis.CSharp.BoundAddressOfOperator
                this_param)
                {
                    var return_v = this_param.GetPublicTypeSymbol();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 94087, 94131);
                    return return_v;
                }


                bool
                f_10951_94164_94207(Microsoft.CodeAnalysis.CSharp.BoundAddressOfOperator
                this_param)
                {
                    var return_v = this_param.WasCompilerGenerated;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 94164, 94207);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.AddressOfOperation
                f_10951_94229_94304(Microsoft.CodeAnalysis.IOperation
                reference, Microsoft.CodeAnalysis.SemanticModel
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.ITypeSymbol?
                type, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.AddressOfOperation(reference, semanticModel, syntax, type, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 94229, 94304);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10951, 93790, 94316);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10951, 93790, 94316);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private IInstanceReferenceOperation CreateBoundImplicitReceiverOperation(BoundImplicitReceiver boundImplicitReceiver)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10951, 94328, 94883);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 94470, 94547);

                InstanceReferenceKind
                referenceKind = InstanceReferenceKind.ImplicitReceiver
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 94561, 94610);

                SyntaxNode
                syntax = boundImplicitReceiver.Syntax
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 94624, 94688);

                ITypeSymbol?
                type = f_10951_94644_94687(boundImplicitReceiver)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 94702, 94763);

                bool
                isImplicit = f_10951_94720_94762(boundImplicitReceiver)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 94777, 94872);

                return f_10951_94784_94871(referenceKind, _semanticModel, syntax, type, isImplicit);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10951, 94328, 94883);

                Microsoft.CodeAnalysis.ITypeSymbol?
                f_10951_94644_94687(Microsoft.CodeAnalysis.CSharp.BoundImplicitReceiver
                this_param)
                {
                    var return_v = this_param.GetPublicTypeSymbol();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 94644, 94687);
                    return return_v;
                }


                bool
                f_10951_94720_94762(Microsoft.CodeAnalysis.CSharp.BoundImplicitReceiver
                this_param)
                {
                    var return_v = this_param.WasCompilerGenerated;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 94720, 94762);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.InstanceReferenceOperation
                f_10951_94784_94871(Microsoft.CodeAnalysis.Operations.InstanceReferenceKind
                referenceKind, Microsoft.CodeAnalysis.SemanticModel
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.ITypeSymbol?
                type, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.InstanceReferenceOperation(referenceKind, semanticModel, syntax, type, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 94784, 94871);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10951, 94328, 94883);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10951, 94328, 94883);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private IConditionalAccessOperation CreateBoundConditionalAccessOperation(BoundConditionalAccess boundConditionalAccess)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10951, 94895, 95540);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 95040, 95103);

                IOperation
                operation = f_10951_95063_95102(this, f_10951_95070_95101(boundConditionalAccess))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 95117, 95190);

                IOperation
                whenNotNull = f_10951_95142_95189(this, f_10951_95149_95188(boundConditionalAccess))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 95204, 95254);

                SyntaxNode
                syntax = boundConditionalAccess.Syntax
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 95268, 95333);

                ITypeSymbol?
                type = f_10951_95288_95332(boundConditionalAccess)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 95347, 95409);

                bool
                isImplicit = f_10951_95365_95408(boundConditionalAccess)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 95425, 95529);

                return f_10951_95432_95528(operation, whenNotNull, _semanticModel, syntax, type, isImplicit);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10951, 94895, 95540);

                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10951_95070_95101(Microsoft.CodeAnalysis.CSharp.BoundConditionalAccess
                this_param)
                {
                    var return_v = this_param.Receiver;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 95070, 95101);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_10951_95063_95102(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                boundNode)
                {
                    var return_v = this_param.Create((Microsoft.CodeAnalysis.CSharp.BoundNode)boundNode);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 95063, 95102);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10951_95149_95188(Microsoft.CodeAnalysis.CSharp.BoundConditionalAccess
                this_param)
                {
                    var return_v = this_param.AccessExpression;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 95149, 95188);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_10951_95142_95189(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                boundNode)
                {
                    var return_v = this_param.Create((Microsoft.CodeAnalysis.CSharp.BoundNode)boundNode);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 95142, 95189);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ITypeSymbol?
                f_10951_95288_95332(Microsoft.CodeAnalysis.CSharp.BoundConditionalAccess
                this_param)
                {
                    var return_v = this_param.GetPublicTypeSymbol();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 95288, 95332);
                    return return_v;
                }


                bool
                f_10951_95365_95408(Microsoft.CodeAnalysis.CSharp.BoundConditionalAccess
                this_param)
                {
                    var return_v = this_param.WasCompilerGenerated;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 95365, 95408);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.ConditionalAccessOperation
                f_10951_95432_95528(Microsoft.CodeAnalysis.IOperation
                operation, Microsoft.CodeAnalysis.IOperation
                whenNotNull, Microsoft.CodeAnalysis.SemanticModel
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.ITypeSymbol?
                type, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.ConditionalAccessOperation(operation, whenNotNull, semanticModel, syntax, type, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 95432, 95528);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10951, 94895, 95540);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10951, 94895, 95540);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private IConditionalAccessInstanceOperation CreateBoundConditionalReceiverOperation(BoundConditionalReceiver boundConditionalReceiver)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10951, 95552, 96035);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 95711, 95763);

                SyntaxNode
                syntax = boundConditionalReceiver.Syntax
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 95777, 95844);

                ITypeSymbol?
                type = f_10951_95797_95843(boundConditionalReceiver)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 95858, 95922);

                bool
                isImplicit = f_10951_95876_95921(boundConditionalReceiver)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 95936, 96024);

                return f_10951_95943_96023(_semanticModel, syntax, type, isImplicit);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10951, 95552, 96035);

                Microsoft.CodeAnalysis.ITypeSymbol?
                f_10951_95797_95843(Microsoft.CodeAnalysis.CSharp.BoundConditionalReceiver
                this_param)
                {
                    var return_v = this_param.GetPublicTypeSymbol();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 95797, 95843);
                    return return_v;
                }


                bool
                f_10951_95876_95921(Microsoft.CodeAnalysis.CSharp.BoundConditionalReceiver
                this_param)
                {
                    var return_v = this_param.WasCompilerGenerated;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 95876, 95921);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.ConditionalAccessInstanceOperation
                f_10951_95943_96023(Microsoft.CodeAnalysis.SemanticModel
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.ITypeSymbol?
                type, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.ConditionalAccessInstanceOperation(semanticModel, syntax, type, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 95943, 96023);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10951, 95552, 96035);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10951, 95552, 96035);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private IFieldInitializerOperation CreateBoundFieldEqualsValueOperation(BoundFieldEqualsValue boundFieldEqualsValue)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10951, 96047, 96700);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 96188, 96320);

                ImmutableArray<IFieldSymbol>
                initializedFields = f_10951_96237_96319(f_10951_96273_96318(f_10951_96273_96300(boundFieldEqualsValue)))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 96334, 96389);

                IOperation
                value = f_10951_96353_96388(this, f_10951_96360_96387(boundFieldEqualsValue))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 96403, 96452);

                SyntaxNode
                syntax = boundFieldEqualsValue.Syntax
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 96466, 96527);

                bool
                isImplicit = f_10951_96484_96526(boundFieldEqualsValue)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 96541, 96689);

                return f_10951_96548_96688(initializedFields, boundFieldEqualsValue.Locals.GetPublicSymbols(), value, _semanticModel, syntax, isImplicit);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10951, 96047, 96700);

                Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol
                f_10951_96273_96300(Microsoft.CodeAnalysis.CSharp.BoundFieldEqualsValue
                this_param)
                {
                    var return_v = this_param.Field;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 96273, 96300);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IFieldSymbol?
                f_10951_96273_96318(Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol
                symbol)
                {
                    var return_v = symbol.GetPublicSymbol();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 96273, 96318);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.IFieldSymbol>
                f_10951_96237_96319(Microsoft.CodeAnalysis.IFieldSymbol
                item)
                {
                    var return_v = ImmutableArray.Create<IFieldSymbol>(item);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 96237, 96319);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10951_96360_96387(Microsoft.CodeAnalysis.CSharp.BoundFieldEqualsValue
                this_param)
                {
                    var return_v = this_param.Value;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 96360, 96387);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_10951_96353_96388(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                boundNode)
                {
                    var return_v = this_param.Create((Microsoft.CodeAnalysis.CSharp.BoundNode)boundNode);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 96353, 96388);
                    return return_v;
                }


                bool
                f_10951_96484_96526(Microsoft.CodeAnalysis.CSharp.BoundFieldEqualsValue
                this_param)
                {
                    var return_v = this_param.WasCompilerGenerated;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 96484, 96526);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.FieldInitializerOperation
                f_10951_96548_96688(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.IFieldSymbol>
                initializedFields, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.ILocalSymbol>
                locals, Microsoft.CodeAnalysis.IOperation
                value, Microsoft.CodeAnalysis.SemanticModel
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.FieldInitializerOperation(initializedFields, locals, value, semanticModel, syntax, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 96548, 96688);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10951, 96047, 96700);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10951, 96047, 96700);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private IPropertyInitializerOperation CreateBoundPropertyEqualsValueOperation(BoundPropertyEqualsValue boundPropertyEqualsValue)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10951, 96712, 97412);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 96865, 97013);

                ImmutableArray<IPropertySymbol>
                initializedProperties = f_10951_96921_97012(f_10951_96960_97011(f_10951_96960_96993(boundPropertyEqualsValue)))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 97027, 97085);

                IOperation
                value = f_10951_97046_97084(this, f_10951_97053_97083(boundPropertyEqualsValue))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 97099, 97151);

                SyntaxNode
                syntax = boundPropertyEqualsValue.Syntax
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 97165, 97229);

                bool
                isImplicit = f_10951_97183_97228(boundPropertyEqualsValue)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 97243, 97401);

                return f_10951_97250_97400(initializedProperties, boundPropertyEqualsValue.Locals.GetPublicSymbols(), value, _semanticModel, syntax, isImplicit);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10951, 96712, 97412);

                Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol
                f_10951_96960_96993(Microsoft.CodeAnalysis.CSharp.BoundPropertyEqualsValue
                this_param)
                {
                    var return_v = this_param.Property;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 96960, 96993);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IPropertySymbol?
                f_10951_96960_97011(Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol
                symbol)
                {
                    var return_v = symbol.GetPublicSymbol();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 96960, 97011);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.IPropertySymbol>
                f_10951_96921_97012(Microsoft.CodeAnalysis.IPropertySymbol
                item)
                {
                    var return_v = ImmutableArray.Create<IPropertySymbol>(item);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 96921, 97012);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10951_97053_97083(Microsoft.CodeAnalysis.CSharp.BoundPropertyEqualsValue
                this_param)
                {
                    var return_v = this_param.Value;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 97053, 97083);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_10951_97046_97084(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                boundNode)
                {
                    var return_v = this_param.Create((Microsoft.CodeAnalysis.CSharp.BoundNode)boundNode);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 97046, 97084);
                    return return_v;
                }


                bool
                f_10951_97183_97228(Microsoft.CodeAnalysis.CSharp.BoundPropertyEqualsValue
                this_param)
                {
                    var return_v = this_param.WasCompilerGenerated;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 97183, 97228);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.PropertyInitializerOperation
                f_10951_97250_97400(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.IPropertySymbol>
                initializedProperties, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.ILocalSymbol>
                locals, Microsoft.CodeAnalysis.IOperation
                value, Microsoft.CodeAnalysis.SemanticModel
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.PropertyInitializerOperation(initializedProperties, locals, value, semanticModel, syntax, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 97250, 97400);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10951, 96712, 97412);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10951, 96712, 97412);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private IParameterInitializerOperation CreateBoundParameterEqualsValueOperation(BoundParameterEqualsValue boundParameterEqualsValue)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10951, 97424, 98056);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 97581, 97664);

                IParameterSymbol
                parameter = f_10951_97610_97663(f_10951_97610_97645(boundParameterEqualsValue))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 97678, 97737);

                IOperation
                value = f_10951_97697_97736(this, f_10951_97704_97735(boundParameterEqualsValue))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 97751, 97804);

                SyntaxNode
                syntax = boundParameterEqualsValue.Syntax
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 97818, 97883);

                bool
                isImplicit = f_10951_97836_97882(boundParameterEqualsValue)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 97897, 98045);

                return f_10951_97904_98044(parameter, boundParameterEqualsValue.Locals.GetPublicSymbols(), value, _semanticModel, syntax, isImplicit);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10951, 97424, 98056);

                Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol
                f_10951_97610_97645(Microsoft.CodeAnalysis.CSharp.BoundParameterEqualsValue
                this_param)
                {
                    var return_v = this_param.Parameter;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 97610, 97645);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IParameterSymbol?
                f_10951_97610_97663(Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol
                symbol)
                {
                    var return_v = symbol.GetPublicSymbol();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 97610, 97663);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10951_97704_97735(Microsoft.CodeAnalysis.CSharp.BoundParameterEqualsValue
                this_param)
                {
                    var return_v = this_param.Value;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 97704, 97735);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_10951_97697_97736(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                boundNode)
                {
                    var return_v = this_param.Create((Microsoft.CodeAnalysis.CSharp.BoundNode)boundNode);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 97697, 97736);
                    return return_v;
                }


                bool
                f_10951_97836_97882(Microsoft.CodeAnalysis.CSharp.BoundParameterEqualsValue
                this_param)
                {
                    var return_v = this_param.WasCompilerGenerated;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 97836, 97882);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.ParameterInitializerOperation
                f_10951_97904_98044(Microsoft.CodeAnalysis.IParameterSymbol
                parameter, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.ILocalSymbol>
                locals, Microsoft.CodeAnalysis.IOperation
                value, Microsoft.CodeAnalysis.SemanticModel
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.ParameterInitializerOperation(parameter, locals, value, semanticModel, syntax, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 97904, 98044);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10951, 97424, 98056);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10951, 97424, 98056);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private IBlockOperation CreateBoundBlockOperation(BoundBlock boundBlock)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10951, 98068, 98584);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 98165, 98272);

                ImmutableArray<IOperation>
                operations = f_10951_98205_98271(this, f_10951_98249_98270(boundBlock))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 98286, 98361);

                ImmutableArray<ILocalSymbol>
                locals = boundBlock.Locals.GetPublicSymbols()
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 98375, 98413);

                SyntaxNode
                syntax = boundBlock.Syntax
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 98427, 98477);

                bool
                isImplicit = f_10951_98445_98476(boundBlock)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 98491, 98573);

                return f_10951_98498_98572(operations, locals, _semanticModel, syntax, isImplicit);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10951, 98068, 98584);

                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundStatement>
                f_10951_98249_98270(Microsoft.CodeAnalysis.CSharp.BoundBlock
                this_param)
                {
                    var return_v = this_param.Statements;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 98249, 98270);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.IOperation>
                f_10951_98205_98271(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundStatement>
                boundNodes)
                {
                    var return_v = this_param.CreateFromArray<Microsoft.CodeAnalysis.CSharp.BoundStatement, Microsoft.CodeAnalysis.IOperation>(boundNodes);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 98205, 98271);
                    return return_v;
                }


                bool
                f_10951_98445_98476(Microsoft.CodeAnalysis.CSharp.BoundBlock
                this_param)
                {
                    var return_v = this_param.WasCompilerGenerated;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 98445, 98476);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.BlockOperation
                f_10951_98498_98572(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.IOperation>
                operations, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.ILocalSymbol>
                locals, Microsoft.CodeAnalysis.SemanticModel
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.BlockOperation(operations, locals, semanticModel, syntax, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 98498, 98572);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10951, 98068, 98584);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10951, 98068, 98584);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private IBranchOperation CreateBoundContinueStatementOperation(BoundContinueStatement boundContinueStatement)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10951, 98596, 99105);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 98730, 98799);

                ILabelSymbol
                target = f_10951_98752_98798(f_10951_98752_98780(boundContinueStatement))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 98813, 98857);

                BranchKind
                branchKind = BranchKind.Continue
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 98871, 98921);

                SyntaxNode
                syntax = boundContinueStatement.Syntax
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 98935, 98997);

                bool
                isImplicit = f_10951_98953_98996(boundContinueStatement)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 99011, 99094);

                return f_10951_99018_99093(target, branchKind, _semanticModel, syntax, isImplicit);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10951, 98596, 99105);

                Microsoft.CodeAnalysis.CSharp.Symbols.GeneratedLabelSymbol
                f_10951_98752_98780(Microsoft.CodeAnalysis.CSharp.BoundContinueStatement
                this_param)
                {
                    var return_v = this_param.Label;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 98752, 98780);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ILabelSymbol?
                f_10951_98752_98798(Microsoft.CodeAnalysis.CSharp.Symbols.GeneratedLabelSymbol
                symbol)
                {
                    var return_v = symbol.GetPublicSymbol();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 98752, 98798);
                    return return_v;
                }


                bool
                f_10951_98953_98996(Microsoft.CodeAnalysis.CSharp.BoundContinueStatement
                this_param)
                {
                    var return_v = this_param.WasCompilerGenerated;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 98953, 98996);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.BranchOperation
                f_10951_99018_99093(Microsoft.CodeAnalysis.ILabelSymbol
                target, Microsoft.CodeAnalysis.Operations.BranchKind
                branchKind, Microsoft.CodeAnalysis.SemanticModel
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.BranchOperation(target, branchKind, semanticModel, syntax, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 99018, 99093);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10951, 98596, 99105);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10951, 98596, 99105);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private IBranchOperation CreateBoundBreakStatementOperation(BoundBreakStatement boundBreakStatement)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10951, 99117, 99605);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 99242, 99308);

                ILabelSymbol
                target = f_10951_99264_99307(f_10951_99264_99289(boundBreakStatement))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 99322, 99363);

                BranchKind
                branchKind = BranchKind.Break
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 99377, 99424);

                SyntaxNode
                syntax = boundBreakStatement.Syntax
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 99438, 99497);

                bool
                isImplicit = f_10951_99456_99496(boundBreakStatement)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 99511, 99594);

                return f_10951_99518_99593(target, branchKind, _semanticModel, syntax, isImplicit);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10951, 99117, 99605);

                Microsoft.CodeAnalysis.CSharp.Symbols.GeneratedLabelSymbol
                f_10951_99264_99289(Microsoft.CodeAnalysis.CSharp.BoundBreakStatement
                this_param)
                {
                    var return_v = this_param.Label;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 99264, 99289);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ILabelSymbol?
                f_10951_99264_99307(Microsoft.CodeAnalysis.CSharp.Symbols.GeneratedLabelSymbol
                symbol)
                {
                    var return_v = symbol.GetPublicSymbol();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 99264, 99307);
                    return return_v;
                }


                bool
                f_10951_99456_99496(Microsoft.CodeAnalysis.CSharp.BoundBreakStatement
                this_param)
                {
                    var return_v = this_param.WasCompilerGenerated;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 99456, 99496);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.BranchOperation
                f_10951_99518_99593(Microsoft.CodeAnalysis.ILabelSymbol
                target, Microsoft.CodeAnalysis.Operations.BranchKind
                branchKind, Microsoft.CodeAnalysis.SemanticModel
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.BranchOperation(target, branchKind, semanticModel, syntax, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 99518, 99593);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10951, 99117, 99605);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10951, 99117, 99605);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private IReturnOperation CreateBoundYieldBreakStatementOperation(BoundYieldBreakStatement boundYieldBreakStatement)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10951, 99617, 100063);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 99757, 99790);

                IOperation?
                returnedValue = null
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 99804, 99856);

                SyntaxNode
                syntax = boundYieldBreakStatement.Syntax
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 99870, 99934);

                bool
                isImplicit = f_10951_99888_99933(boundYieldBreakStatement)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 99948, 100052);

                return f_10951_99955_100051(returnedValue, OperationKind.YieldBreak, _semanticModel, syntax, isImplicit);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10951, 99617, 100063);

                bool
                f_10951_99888_99933(Microsoft.CodeAnalysis.CSharp.BoundYieldBreakStatement
                this_param)
                {
                    var return_v = this_param.WasCompilerGenerated;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 99888, 99933);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.ReturnOperation
                f_10951_99955_100051(Microsoft.CodeAnalysis.IOperation?
                returnedValue, Microsoft.CodeAnalysis.OperationKind
                kind, Microsoft.CodeAnalysis.SemanticModel
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.ReturnOperation(returnedValue, kind, semanticModel, syntax, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 99955, 100051);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10951, 99617, 100063);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10951, 99617, 100063);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private IBranchOperation CreateBoundGotoStatementOperation(BoundGotoStatement boundGotoStatement)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10951, 100075, 100556);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 100197, 100262);

                ILabelSymbol
                target = f_10951_100219_100261(f_10951_100219_100243(boundGotoStatement))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 100276, 100316);

                BranchKind
                branchKind = BranchKind.GoTo
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 100330, 100376);

                SyntaxNode
                syntax = boundGotoStatement.Syntax
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 100390, 100448);

                bool
                isImplicit = f_10951_100408_100447(boundGotoStatement)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 100462, 100545);

                return f_10951_100469_100544(target, branchKind, _semanticModel, syntax, isImplicit);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10951, 100075, 100556);

                Microsoft.CodeAnalysis.CSharp.Symbols.LabelSymbol
                f_10951_100219_100243(Microsoft.CodeAnalysis.CSharp.BoundGotoStatement
                this_param)
                {
                    var return_v = this_param.Label;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 100219, 100243);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ILabelSymbol?
                f_10951_100219_100261(Microsoft.CodeAnalysis.CSharp.Symbols.LabelSymbol
                symbol)
                {
                    var return_v = symbol.GetPublicSymbol();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 100219, 100261);
                    return return_v;
                }


                bool
                f_10951_100408_100447(Microsoft.CodeAnalysis.CSharp.BoundGotoStatement
                this_param)
                {
                    var return_v = this_param.WasCompilerGenerated;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 100408, 100447);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.BranchOperation
                f_10951_100469_100544(Microsoft.CodeAnalysis.ILabelSymbol
                target, Microsoft.CodeAnalysis.Operations.BranchKind
                branchKind, Microsoft.CodeAnalysis.SemanticModel
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.BranchOperation(target, branchKind, semanticModel, syntax, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 100469, 100544);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10951, 100075, 100556);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10951, 100075, 100556);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private IEmptyOperation CreateBoundNoOpStatementOperation(BoundNoOpStatement boundNoOpStatement)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10951, 100568, 100894);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 100689, 100735);

                SyntaxNode
                syntax = boundNoOpStatement.Syntax
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 100749, 100807);

                bool
                isImplicit = f_10951_100767_100806(boundNoOpStatement)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 100821, 100883);

                return f_10951_100828_100882(_semanticModel, syntax, isImplicit);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10951, 100568, 100894);

                bool
                f_10951_100767_100806(Microsoft.CodeAnalysis.CSharp.BoundNoOpStatement
                this_param)
                {
                    var return_v = this_param.WasCompilerGenerated;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 100767, 100806);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.EmptyOperation
                f_10951_100828_100882(Microsoft.CodeAnalysis.SemanticModel
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.EmptyOperation(semanticModel, syntax, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 100828, 100882);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10951, 100568, 100894);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10951, 100568, 100894);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private IConditionalOperation CreateBoundIfStatementOperation(BoundIfStatement boundIfStatement)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10951, 100906, 101639);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 101027, 101085);

                IOperation
                condition = f_10951_101050_101084(this, f_10951_101057_101083(boundIfStatement))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 101099, 101158);

                IOperation
                whenTrue = f_10951_101121_101157(this, f_10951_101128_101156(boundIfStatement))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 101172, 101236);

                IOperation?
                whenFalse = f_10951_101196_101235(this, f_10951_101203_101234(boundIfStatement))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 101250, 101269);

                bool
                isRef = false
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 101283, 101327);

                SyntaxNode
                syntax = boundIfStatement.Syntax
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 101341, 101366);

                ITypeSymbol?
                type = null
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 101380, 101416);

                ConstantValue?
                constantValue = null
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 101430, 101486);

                bool
                isImplicit = f_10951_101448_101485(boundIfStatement)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 101500, 101628);

                return f_10951_101507_101627(condition, whenTrue, whenFalse, isRef, _semanticModel, syntax, type, constantValue, isImplicit);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10951, 100906, 101639);

                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10951_101057_101083(Microsoft.CodeAnalysis.CSharp.BoundIfStatement
                this_param)
                {
                    var return_v = this_param.Condition;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 101057, 101083);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_10951_101050_101084(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                boundNode)
                {
                    var return_v = this_param.Create((Microsoft.CodeAnalysis.CSharp.BoundNode)boundNode);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 101050, 101084);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundStatement
                f_10951_101128_101156(Microsoft.CodeAnalysis.CSharp.BoundIfStatement
                this_param)
                {
                    var return_v = this_param.Consequence;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 101128, 101156);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_10951_101121_101157(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundStatement
                boundNode)
                {
                    var return_v = this_param.Create((Microsoft.CodeAnalysis.CSharp.BoundNode)boundNode);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 101121, 101157);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundStatement?
                f_10951_101203_101234(Microsoft.CodeAnalysis.CSharp.BoundIfStatement
                this_param)
                {
                    var return_v = this_param.AlternativeOpt;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 101203, 101234);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_10951_101196_101235(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundStatement?
                boundNode)
                {
                    var return_v = this_param.Create((Microsoft.CodeAnalysis.CSharp.BoundNode?)boundNode);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 101196, 101235);
                    return return_v;
                }


                bool
                f_10951_101448_101485(Microsoft.CodeAnalysis.CSharp.BoundIfStatement
                this_param)
                {
                    var return_v = this_param.WasCompilerGenerated;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 101448, 101485);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.ConditionalOperation
                f_10951_101507_101627(Microsoft.CodeAnalysis.IOperation
                condition, Microsoft.CodeAnalysis.IOperation
                whenTrue, Microsoft.CodeAnalysis.IOperation?
                whenFalse, bool
                isRef, Microsoft.CodeAnalysis.SemanticModel
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.ITypeSymbol?
                type, Microsoft.CodeAnalysis.ConstantValue?
                constantValue, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.ConditionalOperation(condition, whenTrue, whenFalse, isRef, semanticModel, syntax, type, constantValue, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 101507, 101627);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10951, 100906, 101639);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10951, 100906, 101639);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private IWhileLoopOperation CreateBoundWhileStatementOperation(BoundWhileStatement boundWhileStatement)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10951, 101651, 102605);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 101779, 101840);

                IOperation
                condition = f_10951_101802_101839(this, f_10951_101809_101838(boundWhileStatement))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 101854, 101905);

                IOperation
                body = f_10951_101872_101904(this, f_10951_101879_101903(boundWhileStatement))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 101919, 102003);

                ImmutableArray<ILocalSymbol>
                locals = boundWhileStatement.Locals.GetPublicSymbols()
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 102017, 102098);

                ILabelSymbol
                continueLabel = f_10951_102046_102097(f_10951_102046_102079(boundWhileStatement))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 102112, 102186);

                ILabelSymbol
                exitLabel = f_10951_102137_102185(f_10951_102137_102167(boundWhileStatement))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 102200, 102227);

                bool
                conditionIsTop = true
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 102241, 102271);

                bool
                conditionIsUntil = false
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 102285, 102332);

                SyntaxNode
                syntax = boundWhileStatement.Syntax
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 102346, 102405);

                bool
                isImplicit = f_10951_102364_102404(boundWhileStatement)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 102419, 102594);

                return f_10951_102426_102593(condition, conditionIsTop, conditionIsUntil, ignoredCondition: null, body, locals, continueLabel, exitLabel, _semanticModel, syntax, isImplicit);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10951, 101651, 102605);

                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10951_101809_101838(Microsoft.CodeAnalysis.CSharp.BoundWhileStatement
                this_param)
                {
                    var return_v = this_param.Condition;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 101809, 101838);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_10951_101802_101839(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                boundNode)
                {
                    var return_v = this_param.Create((Microsoft.CodeAnalysis.CSharp.BoundNode)boundNode);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 101802, 101839);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundStatement
                f_10951_101879_101903(Microsoft.CodeAnalysis.CSharp.BoundWhileStatement
                this_param)
                {
                    var return_v = this_param.Body;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 101879, 101903);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_10951_101872_101904(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundStatement
                boundNode)
                {
                    var return_v = this_param.Create((Microsoft.CodeAnalysis.CSharp.BoundNode)boundNode);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 101872, 101904);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.GeneratedLabelSymbol
                f_10951_102046_102079(Microsoft.CodeAnalysis.CSharp.BoundWhileStatement
                this_param)
                {
                    var return_v = this_param.ContinueLabel;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 102046, 102079);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ILabelSymbol?
                f_10951_102046_102097(Microsoft.CodeAnalysis.CSharp.Symbols.GeneratedLabelSymbol
                symbol)
                {
                    var return_v = symbol.GetPublicSymbol();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 102046, 102097);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.GeneratedLabelSymbol
                f_10951_102137_102167(Microsoft.CodeAnalysis.CSharp.BoundWhileStatement
                this_param)
                {
                    var return_v = this_param.BreakLabel;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 102137, 102167);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ILabelSymbol?
                f_10951_102137_102185(Microsoft.CodeAnalysis.CSharp.Symbols.GeneratedLabelSymbol
                symbol)
                {
                    var return_v = symbol.GetPublicSymbol();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 102137, 102185);
                    return return_v;
                }


                bool
                f_10951_102364_102404(Microsoft.CodeAnalysis.CSharp.BoundWhileStatement
                this_param)
                {
                    var return_v = this_param.WasCompilerGenerated;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 102364, 102404);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.WhileLoopOperation
                f_10951_102426_102593(Microsoft.CodeAnalysis.IOperation
                condition, bool
                conditionIsTop, bool
                conditionIsUntil, Microsoft.CodeAnalysis.IOperation?
                ignoredCondition, Microsoft.CodeAnalysis.IOperation
                body, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.ILocalSymbol>
                locals, Microsoft.CodeAnalysis.ILabelSymbol
                continueLabel, Microsoft.CodeAnalysis.ILabelSymbol
                exitLabel, Microsoft.CodeAnalysis.SemanticModel
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.WhileLoopOperation(condition, conditionIsTop, conditionIsUntil, ignoredCondition: ignoredCondition, body, locals, continueLabel, exitLabel, semanticModel, syntax, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 102426, 102593);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10951, 101651, 102605);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10951, 101651, 102605);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private IWhileLoopOperation CreateBoundDoStatementOperation(BoundDoStatement boundDoStatement)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10951, 102617, 103542);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 102736, 102794);

                IOperation
                condition = f_10951_102759_102793(this, f_10951_102766_102792(boundDoStatement))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 102808, 102856);

                IOperation
                body = f_10951_102826_102855(this, f_10951_102833_102854(boundDoStatement))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 102870, 102948);

                ILabelSymbol
                continueLabel = f_10951_102899_102947(f_10951_102899_102929(boundDoStatement))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 102962, 103033);

                ILabelSymbol
                exitLabel = f_10951_102987_103032(f_10951_102987_103014(boundDoStatement))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 103047, 103075);

                bool
                conditionIsTop = false
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 103089, 103119);

                bool
                conditionIsUntil = false
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 103133, 103214);

                ImmutableArray<ILocalSymbol>
                locals = boundDoStatement.Locals.GetPublicSymbols()
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 103228, 103272);

                SyntaxNode
                syntax = boundDoStatement.Syntax
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 103286, 103342);

                bool
                isImplicit = f_10951_103304_103341(boundDoStatement)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 103356, 103531);

                return f_10951_103363_103530(condition, conditionIsTop, conditionIsUntil, ignoredCondition: null, body, locals, continueLabel, exitLabel, _semanticModel, syntax, isImplicit);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10951, 102617, 103542);

                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10951_102766_102792(Microsoft.CodeAnalysis.CSharp.BoundDoStatement
                this_param)
                {
                    var return_v = this_param.Condition;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 102766, 102792);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_10951_102759_102793(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                boundNode)
                {
                    var return_v = this_param.Create((Microsoft.CodeAnalysis.CSharp.BoundNode)boundNode);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 102759, 102793);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundStatement
                f_10951_102833_102854(Microsoft.CodeAnalysis.CSharp.BoundDoStatement
                this_param)
                {
                    var return_v = this_param.Body;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 102833, 102854);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_10951_102826_102855(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundStatement
                boundNode)
                {
                    var return_v = this_param.Create((Microsoft.CodeAnalysis.CSharp.BoundNode)boundNode);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 102826, 102855);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.GeneratedLabelSymbol
                f_10951_102899_102929(Microsoft.CodeAnalysis.CSharp.BoundDoStatement
                this_param)
                {
                    var return_v = this_param.ContinueLabel;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 102899, 102929);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ILabelSymbol?
                f_10951_102899_102947(Microsoft.CodeAnalysis.CSharp.Symbols.GeneratedLabelSymbol
                symbol)
                {
                    var return_v = symbol.GetPublicSymbol();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 102899, 102947);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.GeneratedLabelSymbol
                f_10951_102987_103014(Microsoft.CodeAnalysis.CSharp.BoundDoStatement
                this_param)
                {
                    var return_v = this_param.BreakLabel;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 102987, 103014);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ILabelSymbol?
                f_10951_102987_103032(Microsoft.CodeAnalysis.CSharp.Symbols.GeneratedLabelSymbol
                symbol)
                {
                    var return_v = symbol.GetPublicSymbol();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 102987, 103032);
                    return return_v;
                }


                bool
                f_10951_103304_103341(Microsoft.CodeAnalysis.CSharp.BoundDoStatement
                this_param)
                {
                    var return_v = this_param.WasCompilerGenerated;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 103304, 103341);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.WhileLoopOperation
                f_10951_103363_103530(Microsoft.CodeAnalysis.IOperation
                condition, bool
                conditionIsTop, bool
                conditionIsUntil, Microsoft.CodeAnalysis.IOperation?
                ignoredCondition, Microsoft.CodeAnalysis.IOperation
                body, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.ILocalSymbol>
                locals, Microsoft.CodeAnalysis.ILabelSymbol
                continueLabel, Microsoft.CodeAnalysis.ILabelSymbol
                exitLabel, Microsoft.CodeAnalysis.SemanticModel
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.WhileLoopOperation(condition, conditionIsTop, conditionIsUntil, ignoredCondition: ignoredCondition, body, locals, continueLabel, exitLabel, semanticModel, syntax, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 103363, 103530);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10951, 102617, 103542);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10951, 102617, 103542);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private IForLoopOperation CreateBoundForStatementOperation(BoundForStatement boundForStatement)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10951, 103554, 104778);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 103674, 103799);

                ImmutableArray<IOperation>
                before = f_10951_103710_103798(this, f_10951_103754_103797(this, f_10951_103767_103796(boundForStatement)))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 103813, 103873);

                IOperation?
                condition = f_10951_103837_103872(this, f_10951_103844_103871(boundForStatement))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 103887, 104016);

                ImmutableArray<IOperation>
                atLoopBottom = f_10951_103929_104015(this, f_10951_103973_104014(this, f_10951_103986_104013(boundForStatement)))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 104030, 104079);

                IOperation
                body = f_10951_104048_104078(this, f_10951_104055_104077(boundForStatement))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 104093, 104180);

                ImmutableArray<ILocalSymbol>
                locals = boundForStatement.OuterLocals.GetPublicSymbols()
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 104194, 104290);

                ImmutableArray<ILocalSymbol>
                conditionLocals = boundForStatement.InnerLocals.GetPublicSymbols()
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 104304, 104383);

                ILabelSymbol
                continueLabel = f_10951_104333_104382(f_10951_104333_104364(boundForStatement))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 104397, 104469);

                ILabelSymbol
                exitLabel = f_10951_104422_104468(f_10951_104422_104450(boundForStatement))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 104483, 104528);

                SyntaxNode
                syntax = boundForStatement.Syntax
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 104542, 104599);

                bool
                isImplicit = f_10951_104560_104598(boundForStatement)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 104613, 104767);

                return f_10951_104620_104766(before, conditionLocals, condition, atLoopBottom, body, locals, continueLabel, exitLabel, _semanticModel, syntax, isImplicit);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10951, 103554, 104778);

                Microsoft.CodeAnalysis.CSharp.BoundStatement?
                f_10951_103767_103796(Microsoft.CodeAnalysis.CSharp.BoundForStatement
                this_param)
                {
                    var return_v = this_param.Initializer;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 103767, 103796);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundStatement>
                f_10951_103754_103797(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundStatement?
                statement)
                {
                    var return_v = this_param.ToStatements(statement);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 103754, 103797);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.IOperation>
                f_10951_103710_103798(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundStatement>
                boundNodes)
                {
                    var return_v = this_param.CreateFromArray<Microsoft.CodeAnalysis.CSharp.BoundStatement, Microsoft.CodeAnalysis.IOperation>(boundNodes);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 103710, 103798);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression?
                f_10951_103844_103871(Microsoft.CodeAnalysis.CSharp.BoundForStatement
                this_param)
                {
                    var return_v = this_param.Condition;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 103844, 103871);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_10951_103837_103872(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression?
                boundNode)
                {
                    var return_v = this_param.Create((Microsoft.CodeAnalysis.CSharp.BoundNode?)boundNode);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 103837, 103872);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundStatement?
                f_10951_103986_104013(Microsoft.CodeAnalysis.CSharp.BoundForStatement
                this_param)
                {
                    var return_v = this_param.Increment;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 103986, 104013);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundStatement>
                f_10951_103973_104014(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundStatement?
                statement)
                {
                    var return_v = this_param.ToStatements(statement);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 103973, 104014);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.IOperation>
                f_10951_103929_104015(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundStatement>
                boundNodes)
                {
                    var return_v = this_param.CreateFromArray<Microsoft.CodeAnalysis.CSharp.BoundStatement, Microsoft.CodeAnalysis.IOperation>(boundNodes);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 103929, 104015);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundStatement
                f_10951_104055_104077(Microsoft.CodeAnalysis.CSharp.BoundForStatement
                this_param)
                {
                    var return_v = this_param.Body;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 104055, 104077);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_10951_104048_104078(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundStatement
                boundNode)
                {
                    var return_v = this_param.Create((Microsoft.CodeAnalysis.CSharp.BoundNode)boundNode);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 104048, 104078);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.GeneratedLabelSymbol
                f_10951_104333_104364(Microsoft.CodeAnalysis.CSharp.BoundForStatement
                this_param)
                {
                    var return_v = this_param.ContinueLabel;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 104333, 104364);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ILabelSymbol?
                f_10951_104333_104382(Microsoft.CodeAnalysis.CSharp.Symbols.GeneratedLabelSymbol
                symbol)
                {
                    var return_v = symbol.GetPublicSymbol();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 104333, 104382);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.GeneratedLabelSymbol
                f_10951_104422_104450(Microsoft.CodeAnalysis.CSharp.BoundForStatement
                this_param)
                {
                    var return_v = this_param.BreakLabel;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 104422, 104450);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ILabelSymbol?
                f_10951_104422_104468(Microsoft.CodeAnalysis.CSharp.Symbols.GeneratedLabelSymbol
                symbol)
                {
                    var return_v = symbol.GetPublicSymbol();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 104422, 104468);
                    return return_v;
                }


                bool
                f_10951_104560_104598(Microsoft.CodeAnalysis.CSharp.BoundForStatement
                this_param)
                {
                    var return_v = this_param.WasCompilerGenerated;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 104560, 104598);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.ForLoopOperation
                f_10951_104620_104766(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.IOperation>
                before, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.ILocalSymbol>
                conditionLocals, Microsoft.CodeAnalysis.IOperation?
                condition, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.IOperation>
                atLoopBottom, Microsoft.CodeAnalysis.IOperation
                body, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.ILocalSymbol>
                locals, Microsoft.CodeAnalysis.ILabelSymbol
                continueLabel, Microsoft.CodeAnalysis.ILabelSymbol
                exitLabel, Microsoft.CodeAnalysis.SemanticModel
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.ForLoopOperation(before, conditionLocals, condition, atLoopBottom, body, locals, continueLabel, exitLabel, semanticModel, syntax, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 104620, 104766);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10951, 103554, 104778);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10951, 103554, 104778);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        internal ForEachLoopOperationInfo? GetForEachLoopOperatorInfo(BoundForEachStatement boundForEachStatement)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10951, 104790, 109157);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 104921, 105004);

                ForEachEnumeratorInfo?
                enumeratorInfoOpt = f_10951_104964_105003(boundForEachStatement)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 105018, 105049);

                ForEachLoopOperationInfo?
                info
                = default(ForEachLoopOperationInfo?);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 105065, 109118) || true) && (enumeratorInfoOpt != null)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 105065, 109118);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 105128, 105179);

                    HashSet<DiagnosticInfo>?
                    useSiteDiagnostics = null
                    ;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 105197, 105261);

                    var
                    compilation = (CSharpCompilation)f_10951_105234_105260(_semanticModel)
                    ;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 105281, 105530);

                    var
                    iDisposable = (DynAbs.Tracing.TraceSender.Conditional_F1(10951, 105299, 105324) || ((enumeratorInfoOpt.IsAsync
                    && DynAbs.Tracing.TraceSender.Conditional_F2(10951, 105364, 105431)) || DynAbs.Tracing.TraceSender.Conditional_F3(10951, 105471, 105529))) ? f_10951_105364_105431(compilation, WellKnownType.System_IAsyncDisposable) : f_10951_105471_105529(compilation, SpecialType.System_IDisposable)
                    ;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 105577, 105637);

                    var
                    getEnumeratorInfo = enumeratorInfoOpt.GetEnumeratorInfo
                    ;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 105655, 106712);

                    var
                    temp = (DynAbs.Tracing.TraceSender.Conditional_F1(10951, 105666, 105726) || ((getEnumeratorInfo is { Method: { IsExtensionMethod: true } }
                    && DynAbs.Tracing.TraceSender.Conditional_F2(10951, 105787, 106644)) || DynAbs.Tracing.TraceSender.Conditional_F3(10951, 106704, 106711))) ? f_10951_105787_106644(f_10951_105878_106576(this, f_10951_105960_105984(getEnumeratorInfo), f_10951_106051_106078(getEnumeratorInfo), argumentsToParametersOpt: default, f_10951_106245_106279(getEnumeratorInfo), f_10951_106346_106372(getEnumeratorInfo), f_10951_106439_106471(boundForEachStatement).Syntax, invokedAsExtensionMethod: true), null) : default
                    ;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 106732, 109025);

                    info = f_10951_106739_109024(f_10951_106768_106815(f_10951_106768_106797(enumeratorInfoOpt)), f_10951_106870_106930(f_10951_106870_106912(enumeratorInfoOpt.GetEnumeratorInfo)), f_10951_106985_107077(((PropertySymbol)f_10951_107002_107058(enumeratorInfoOpt.CurrentPropertyGetter))), f_10951_107132_107187(f_10951_107132_107169(enumeratorInfoOpt.MoveNextInfo)), isAsynchronous: enumeratorInfoOpt.IsAsync, needsDispose: enumeratorInfoOpt.NeedsDisposal, knownToImplementIDisposable: (DynAbs.Tracing.TraceSender.Conditional_F1(10951, 107467, 107498) || ((enumeratorInfoOpt.NeedsDisposal && DynAbs.Tracing.TraceSender.Conditional_F2(10951, 107587, 108089)) || DynAbs.Tracing.TraceSender.Conditional_F3(10951, 108178, 108183))) ? f_10951_107587_108078(f_10951_107587_107610(compilation), f_10951_107737_107790(f_10951_107737_107779(enumeratorInfoOpt.GetEnumeratorInfo)), iDisposable, ref useSiteDiagnostics).IsImplicit : false, (DynAbs.Tracing.TraceSender.Conditional_F1(10951, 108301, 108349) || ((                                                    // LAFHIS
                                                                        enumeratorInfoOpt.PatternDisposeInfo is not null && DynAbs.Tracing.TraceSender.Conditional_F2(10951, 108352, 108413)) || DynAbs.Tracing.TraceSender.Conditional_F3(10951, 108416, 108420))) ? f_10951_108352_108413(f_10951_108352_108395(enumeratorInfoOpt.PatternDisposeInfo)) : null, enumeratorInfoOpt.CurrentConversion, f_10951_108565_108604(boundForEachStatement), getEnumeratorArguments: temp, disposeArguments: (DynAbs.Tracing.TraceSender.Conditional_F1(10951, 108760, 108806) || ((enumeratorInfoOpt.PatternDisposeInfo is object
                    && DynAbs.Tracing.TraceSender.Conditional_F2(10951, 108866, 108956)) || DynAbs.Tracing.TraceSender.Conditional_F3(10951, 109016, 109023))) ? f_10951_108866_108956(this, enumeratorInfoOpt.PatternDisposeInfo, boundForEachStatement.Syntax) : default);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 105065, 109118);
                }

                else

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 105065, 109118);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 109091, 109103);

                    info = null;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 105065, 109118);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 109134, 109146);

                return info;
                DynAbs.Tracing.TraceSender.TraceExitMethod(10951, 104790, 109157);

                Microsoft.CodeAnalysis.CSharp.ForEachEnumeratorInfo?
                f_10951_104964_105003(Microsoft.CodeAnalysis.CSharp.BoundForEachStatement
                this_param)
                {
                    var return_v = this_param.EnumeratorInfoOpt;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 104964, 105003);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Compilation
                f_10951_105234_105260(Microsoft.CodeAnalysis.SemanticModel
                this_param)
                {
                    var return_v = this_param.Compilation;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 105234, 105260);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                f_10951_105364_105431(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param, Microsoft.CodeAnalysis.WellKnownType
                type)
                {
                    var return_v = this_param.GetWellKnownType(type);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 105364, 105431);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                f_10951_105471_105529(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param, Microsoft.CodeAnalysis.SpecialType
                specialType)
                {
                    var return_v = this_param.GetSpecialType(specialType);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 105471, 105529);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                f_10951_105960_105984(Microsoft.CodeAnalysis.CSharp.MethodArgumentInfo
                this_param)
                {
                    var return_v = this_param.Method;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 105960, 105984);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                f_10951_106051_106078(Microsoft.CodeAnalysis.CSharp.MethodArgumentInfo
                this_param)
                {
                    var return_v = this_param.Arguments;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 106051, 106078);
                    return return_v;
                }


                Microsoft.CodeAnalysis.BitVector
                f_10951_106245_106279(Microsoft.CodeAnalysis.CSharp.MethodArgumentInfo
                this_param)
                {
                    var return_v = this_param.DefaultArguments;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 106245, 106279);
                    return return_v;
                }


                bool
                f_10951_106346_106372(Microsoft.CodeAnalysis.CSharp.MethodArgumentInfo
                this_param)
                {
                    var return_v = this_param.Expanded;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 106346, 106372);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10951_106439_106471(Microsoft.CodeAnalysis.CSharp.BoundForEachStatement
                this_param)
                {
                    var return_v = this_param.Expression;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 106439, 106471);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Operations.IArgumentOperation>
                f_10951_105878_106576(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                methodOrIndexer, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                boundArguments, System.Collections.Immutable.ImmutableArray<int>
                argumentsToParametersOpt, Microsoft.CodeAnalysis.BitVector
                defaultArguments, bool
                expanded, Microsoft.CodeAnalysis.SyntaxNode
                invocationSyntax, bool
                invokedAsExtensionMethod)
                {
                    var return_v = this_param.DeriveArguments((Microsoft.CodeAnalysis.CSharp.Symbol)methodOrIndexer, boundArguments, argumentsToParametersOpt: argumentsToParametersOpt, defaultArguments, expanded, invocationSyntax, invokedAsExtensionMethod: invokedAsExtensionMethod);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 105878, 106576);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Operations.IArgumentOperation>
                f_10951_105787_106644(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Operations.IArgumentOperation>
                operations, Microsoft.CodeAnalysis.IOperation?
                parent)
                {
                    var return_v = Operation.SetParentOperation(operations, parent);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 105787, 106644);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                f_10951_106768_106797(Microsoft.CodeAnalysis.CSharp.ForEachEnumeratorInfo
                this_param)
                {
                    var return_v = this_param.ElementType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 106768, 106797);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ITypeSymbol?
                f_10951_106768_106815(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                symbol)
                {
                    var return_v = symbol.GetPublicSymbol();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 106768, 106815);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                f_10951_106870_106912(Microsoft.CodeAnalysis.CSharp.MethodArgumentInfo
                this_param)
                {
                    var return_v = this_param.Method;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 106870, 106912);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IMethodSymbol?
                f_10951_106870_106930(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                symbol)
                {
                    var return_v = symbol.GetPublicSymbol();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 106870, 106930);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbol
                f_10951_107002_107058(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                this_param)
                {
                    var return_v = this_param.AssociatedSymbol;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 107002, 107058);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IPropertySymbol?
                f_10951_106985_107077(Microsoft.CodeAnalysis.CSharp.Symbol
                symbol)
                {
                    var return_v = symbol.GetPublicSymbol();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 106985, 107077);
                    return (IPropertySymbol?)return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                f_10951_107132_107169(Microsoft.CodeAnalysis.CSharp.MethodArgumentInfo
                this_param)
                {
                    var return_v = this_param.Method;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 107132, 107169);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IMethodSymbol?
                f_10951_107132_107187(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                symbol)
                {
                    var return_v = symbol.GetPublicSymbol();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 107132, 107187);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Conversions
                f_10951_107587_107610(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param)
                {
                    var return_v = this_param.Conversions;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 107587, 107610);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                f_10951_107737_107779(Microsoft.CodeAnalysis.CSharp.MethodArgumentInfo
                this_param)
                {
                    var return_v = this_param.Method;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 107737, 107779);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                f_10951_107737_107790(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                this_param)
                {
                    var return_v = this_param.ReturnType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 107737, 107790);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Conversion
                f_10951_107587_108078(Microsoft.CodeAnalysis.CSharp.Conversions
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                source, Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                destination, ref System.Collections.Generic.HashSet<Microsoft.CodeAnalysis.DiagnosticInfo>?
                useSiteDiagnostics)
                {
                    var return_v = this_param.ClassifyImplicitConversionFromType(source, (Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol)destination, ref useSiteDiagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 107587, 108078);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                f_10951_108352_108395(Microsoft.CodeAnalysis.CSharp.MethodArgumentInfo
                this_param)
                {
                    var return_v = this_param.Method;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 108352, 108395);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IMethodSymbol?
                f_10951_108352_108413(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                symbol)
                {
                    var return_v = symbol.GetPublicSymbol();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 108352, 108413);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Conversion
                f_10951_108565_108604(Microsoft.CodeAnalysis.CSharp.BoundForEachStatement
                this_param)
                {
                    var return_v = this_param.ElementConversion;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 108565, 108604);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Operations.IArgumentOperation>
                f_10951_108866_108956(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.MethodArgumentInfo
                patternDisposeInfo, Microsoft.CodeAnalysis.SyntaxNode
                syntax)
                {
                    var return_v = this_param.CreateDisposeArguments(patternDisposeInfo, syntax);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 108866, 108956);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.ForEachLoopOperationInfo
                f_10951_106739_109024(Microsoft.CodeAnalysis.ITypeSymbol
                elementType, Microsoft.CodeAnalysis.IMethodSymbol
                getEnumeratorMethod, Microsoft.CodeAnalysis.IPropertySymbol
                currentProperty, Microsoft.CodeAnalysis.IMethodSymbol
                moveNextMethod, bool
                isAsynchronous, bool
                needsDispose, bool
                knownToImplementIDisposable, Microsoft.CodeAnalysis.IMethodSymbol?
                patternDisposeMethod, Microsoft.CodeAnalysis.CSharp.Conversion
                currentConversion, Microsoft.CodeAnalysis.CSharp.Conversion
                elementConversion, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Operations.IArgumentOperation>
                getEnumeratorArguments, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Operations.IArgumentOperation>
                disposeArguments)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.ForEachLoopOperationInfo(elementType, getEnumeratorMethod, currentProperty, moveNextMethod, isAsynchronous: isAsynchronous, needsDispose: needsDispose, knownToImplementIDisposable: knownToImplementIDisposable, patternDisposeMethod, (Microsoft.CodeAnalysis.Operations.IConvertibleConversion)currentConversion, (Microsoft.CodeAnalysis.Operations.IConvertibleConversion)elementConversion, getEnumeratorArguments: getEnumeratorArguments, disposeArguments: disposeArguments);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 106739, 109024);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10951, 104790, 109157);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10951, 104790, 109157);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        internal IOperation CreateBoundForEachStatementLoopControlVariable(BoundForEachStatement boundForEachStatement)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10951, 109169, 110373);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 109305, 110362) || true) && (f_10951_109309_109348(boundForEachStatement) != null)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 109305, 110362);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 109390, 109475);

                    return f_10951_109397_109474(this, f_10951_109404_109473(f_10951_109404_109468(f_10951_109404_109443(boundForEachStatement))));
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 109305, 110362);
                }

                else
                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 109305, 110362);

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 109509, 110362) || true) && (f_10951_109513_109562(boundForEachStatement) != null)
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 109509, 110362);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 109604, 109669);

                        return f_10951_109611_109668(this, f_10951_109618_109667(boundForEachStatement));
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 109509, 110362);
                    }

                    else

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 109509, 110362);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 109735, 109802);

                        f_10951_109735_109801(boundForEachStatement.IterationVariables.Length == 1);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 109820, 109876);

                        var
                        local = f_10951_109832_109872(boundForEachStatement)[0]
                        ;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 110044, 110118);

                        var
                        declaratorSyntax = f_10951_110067_110110(boundForEachStatement).Syntax
                        ;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 110136, 110347);

                        return f_10951_110143_110346(f_10951_110175_110198(local), initializer: null, ignoredArguments: ImmutableArray<IOperation>.Empty, semanticModel: _semanticModel, syntax: declaratorSyntax, isImplicit: false);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 109509, 110362);
                    }
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 109305, 110362);
                }
                DynAbs.Tracing.TraceSender.TraceExitMethod(10951, 109169, 110373);

                Microsoft.CodeAnalysis.CSharp.BoundForEachDeconstructStep?
                f_10951_109309_109348(Microsoft.CodeAnalysis.CSharp.BoundForEachStatement
                this_param)
                {
                    var return_v = this_param.DeconstructionOpt;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 109309, 109348);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundForEachDeconstructStep
                f_10951_109404_109443(Microsoft.CodeAnalysis.CSharp.BoundForEachStatement
                this_param)
                {
                    var return_v = this_param.DeconstructionOpt;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 109404, 109443);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundDeconstructionAssignmentOperator
                f_10951_109404_109468(Microsoft.CodeAnalysis.CSharp.BoundForEachDeconstructStep
                this_param)
                {
                    var return_v = this_param.DeconstructionAssignment;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 109404, 109468);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundTupleExpression
                f_10951_109404_109473(Microsoft.CodeAnalysis.CSharp.BoundDeconstructionAssignmentOperator
                this_param)
                {
                    var return_v = this_param.Left;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 109404, 109473);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_10951_109397_109474(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundTupleExpression
                boundNode)
                {
                    var return_v = this_param.Create((Microsoft.CodeAnalysis.CSharp.BoundNode)boundNode);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 109397, 109474);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression?
                f_10951_109513_109562(Microsoft.CodeAnalysis.CSharp.BoundForEachStatement
                this_param)
                {
                    var return_v = this_param.IterationErrorExpressionOpt;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 109513, 109562);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10951_109618_109667(Microsoft.CodeAnalysis.CSharp.BoundForEachStatement
                this_param)
                {
                    var return_v = this_param.IterationErrorExpressionOpt;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 109618, 109667);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_10951_109611_109668(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                boundNode)
                {
                    var return_v = this_param.Create((Microsoft.CodeAnalysis.CSharp.BoundNode)boundNode);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 109611, 109668);
                    return return_v;
                }


                int
                f_10951_109735_109801(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 109735, 109801);
                    return 0;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.LocalSymbol>
                f_10951_109832_109872(Microsoft.CodeAnalysis.CSharp.BoundForEachStatement
                this_param)
                {
                    var return_v = this_param.IterationVariables;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 109832, 109872);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundTypeExpression
                f_10951_110067_110110(Microsoft.CodeAnalysis.CSharp.BoundForEachStatement
                this_param)
                {
                    var return_v = this_param.IterationVariableType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 110067, 110110);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ILocalSymbol?
                f_10951_110175_110198(Microsoft.CodeAnalysis.CSharp.Symbols.LocalSymbol
                symbol)
                {
                    var return_v = symbol.GetPublicSymbol();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 110175, 110198);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.VariableDeclaratorOperation
                f_10951_110143_110346(Microsoft.CodeAnalysis.ILocalSymbol
                symbol, Microsoft.CodeAnalysis.Operations.IVariableInitializerOperation?
                initializer, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.IOperation>
                ignoredArguments, Microsoft.CodeAnalysis.SemanticModel
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.VariableDeclaratorOperation(symbol, initializer: initializer, ignoredArguments: ignoredArguments, semanticModel: semanticModel, syntax: syntax, isImplicit: isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 110143, 110346);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10951, 109169, 110373);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10951, 109169, 110373);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private IForEachLoopOperation CreateBoundForEachStatementOperation(BoundForEachStatement boundForEachStatement)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10951, 110385, 111653);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 110521, 110624);

                IOperation
                loopControlVariable = f_10951_110554_110623(this, boundForEachStatement)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 110638, 110703);

                IOperation
                collection = f_10951_110662_110702(this, f_10951_110669_110701(boundForEachStatement))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 110717, 110770);

                var
                nextVariables = ImmutableArray<IOperation>.Empty
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 110784, 110837);

                IOperation
                body = f_10951_110802_110836(this, f_10951_110809_110835(boundForEachStatement))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 110851, 110934);

                ForEachLoopOperationInfo?
                info = f_10951_110884_110933(this, boundForEachStatement)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 110950, 111048);

                ImmutableArray<ILocalSymbol>
                locals = boundForEachStatement.IterationVariables.GetPublicSymbols()
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 111064, 111147);

                ILabelSymbol
                continueLabel = f_10951_111093_111146(f_10951_111093_111128(boundForEachStatement))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 111161, 111237);

                ILabelSymbol
                exitLabel = f_10951_111186_111236(f_10951_111186_111218(boundForEachStatement))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 111251, 111300);

                SyntaxNode
                syntax = boundForEachStatement.Syntax
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 111314, 111375);

                bool
                isImplicit = f_10951_111332_111374(boundForEachStatement)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 111389, 111450);

                bool
                isAsynchronous = f_10951_111411_111441(boundForEachStatement) != null
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 111464, 111642);

                return f_10951_111471_111641(loopControlVariable, collection, nextVariables, info, isAsynchronous, body, locals, continueLabel, exitLabel, _semanticModel, syntax, isImplicit);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10951, 110385, 111653);

                Microsoft.CodeAnalysis.IOperation
                f_10951_110554_110623(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundForEachStatement
                boundForEachStatement)
                {
                    var return_v = this_param.CreateBoundForEachStatementLoopControlVariable(boundForEachStatement);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 110554, 110623);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10951_110669_110701(Microsoft.CodeAnalysis.CSharp.BoundForEachStatement
                this_param)
                {
                    var return_v = this_param.Expression;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 110669, 110701);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_10951_110662_110702(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                boundNode)
                {
                    var return_v = this_param.Create((Microsoft.CodeAnalysis.CSharp.BoundNode)boundNode);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 110662, 110702);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundStatement
                f_10951_110809_110835(Microsoft.CodeAnalysis.CSharp.BoundForEachStatement
                this_param)
                {
                    var return_v = this_param.Body;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 110809, 110835);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_10951_110802_110836(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundStatement
                boundNode)
                {
                    var return_v = this_param.Create((Microsoft.CodeAnalysis.CSharp.BoundNode)boundNode);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 110802, 110836);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.ForEachLoopOperationInfo?
                f_10951_110884_110933(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundForEachStatement
                boundForEachStatement)
                {
                    var return_v = this_param.GetForEachLoopOperatorInfo(boundForEachStatement);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 110884, 110933);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.GeneratedLabelSymbol
                f_10951_111093_111128(Microsoft.CodeAnalysis.CSharp.BoundForEachStatement
                this_param)
                {
                    var return_v = this_param.ContinueLabel;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 111093, 111128);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ILabelSymbol?
                f_10951_111093_111146(Microsoft.CodeAnalysis.CSharp.Symbols.GeneratedLabelSymbol
                symbol)
                {
                    var return_v = symbol.GetPublicSymbol();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 111093, 111146);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.GeneratedLabelSymbol
                f_10951_111186_111218(Microsoft.CodeAnalysis.CSharp.BoundForEachStatement
                this_param)
                {
                    var return_v = this_param.BreakLabel;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 111186, 111218);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ILabelSymbol?
                f_10951_111186_111236(Microsoft.CodeAnalysis.CSharp.Symbols.GeneratedLabelSymbol
                symbol)
                {
                    var return_v = symbol.GetPublicSymbol();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 111186, 111236);
                    return return_v;
                }


                bool
                f_10951_111332_111374(Microsoft.CodeAnalysis.CSharp.BoundForEachStatement
                this_param)
                {
                    var return_v = this_param.WasCompilerGenerated;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 111332, 111374);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundAwaitableInfo?
                f_10951_111411_111441(Microsoft.CodeAnalysis.CSharp.BoundForEachStatement
                this_param)
                {
                    var return_v = this_param.AwaitOpt;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 111411, 111441);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.ForEachLoopOperation
                f_10951_111471_111641(Microsoft.CodeAnalysis.IOperation
                loopControlVariable, Microsoft.CodeAnalysis.IOperation
                collection, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.IOperation>
                nextVariables, Microsoft.CodeAnalysis.Operations.ForEachLoopOperationInfo?
                info, bool
                isAsynchronous, Microsoft.CodeAnalysis.IOperation
                body, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.ILocalSymbol>
                locals, Microsoft.CodeAnalysis.ILabelSymbol
                continueLabel, Microsoft.CodeAnalysis.ILabelSymbol
                exitLabel, Microsoft.CodeAnalysis.SemanticModel
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.ForEachLoopOperation(loopControlVariable, collection, nextVariables, info, isAsynchronous, body, locals, continueLabel, exitLabel, semanticModel, syntax, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 111471, 111641);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10951, 110385, 111653);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10951, 110385, 111653);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private ITryOperation CreateBoundTryStatementOperation(BoundTryStatement boundTryStatement)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10951, 111665, 112339);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 111781, 111844);

                var
                body = (IBlockOperation)f_10951_111809_111843(this, f_10951_111816_111842(boundTryStatement))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 111858, 111993);

                ImmutableArray<ICatchClauseOperation>
                catches = f_10951_111906_111992(this, f_10951_111962_111991(boundTryStatement))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 112007, 112082);

                var
                @finally = (IBlockOperation?)f_10951_112040_112081(this, f_10951_112047_112080(boundTryStatement))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 112096, 112141);

                SyntaxNode
                syntax = boundTryStatement.Syntax
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 112155, 112212);

                bool
                isImplicit = f_10951_112173_112211(boundTryStatement)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 112226, 112328);

                return f_10951_112233_112327(body, catches, @finally, exitLabel: null, _semanticModel, syntax, isImplicit);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10951, 111665, 112339);

                Microsoft.CodeAnalysis.CSharp.BoundBlock
                f_10951_111816_111842(Microsoft.CodeAnalysis.CSharp.BoundTryStatement
                this_param)
                {
                    var return_v = this_param.TryBlock;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 111816, 111842);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_10951_111809_111843(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundBlock
                boundNode)
                {
                    var return_v = this_param.Create((Microsoft.CodeAnalysis.CSharp.BoundNode)boundNode);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 111809, 111843);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundCatchBlock>
                f_10951_111962_111991(Microsoft.CodeAnalysis.CSharp.BoundTryStatement
                this_param)
                {
                    var return_v = this_param.CatchBlocks;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 111962, 111991);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Operations.ICatchClauseOperation>
                f_10951_111906_111992(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundCatchBlock>
                boundNodes)
                {
                    var return_v = this_param.CreateFromArray<Microsoft.CodeAnalysis.CSharp.BoundCatchBlock, Microsoft.CodeAnalysis.Operations.ICatchClauseOperation>(boundNodes);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 111906, 111992);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundBlock?
                f_10951_112047_112080(Microsoft.CodeAnalysis.CSharp.BoundTryStatement
                this_param)
                {
                    var return_v = this_param.FinallyBlockOpt;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 112047, 112080);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_10951_112040_112081(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundBlock?
                boundNode)
                {
                    var return_v = this_param.Create((Microsoft.CodeAnalysis.CSharp.BoundNode?)boundNode);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 112040, 112081);
                    return return_v;
                }


                bool
                f_10951_112173_112211(Microsoft.CodeAnalysis.CSharp.BoundTryStatement
                this_param)
                {
                    var return_v = this_param.WasCompilerGenerated;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 112173, 112211);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.TryOperation
                f_10951_112233_112327(Microsoft.CodeAnalysis.Operations.IBlockOperation
                body, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Operations.ICatchClauseOperation>
                catches, Microsoft.CodeAnalysis.Operations.IBlockOperation?
                @finally, Microsoft.CodeAnalysis.ILabelSymbol?
                exitLabel, Microsoft.CodeAnalysis.SemanticModel
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.TryOperation(body, catches, @finally, exitLabel: exitLabel, semanticModel, syntax, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 112233, 112327);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10951, 111665, 112339);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10951, 111665, 112339);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private ICatchClauseOperation CreateBoundCatchBlockOperation(BoundCatchBlock boundCatchBlock)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10951, 112351, 113455);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 112469, 112590);

                IOperation?
                exceptionDeclarationOrExpression = f_10951_112516_112589(this, f_10951_112554_112588(boundCatchBlock))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 112705, 112770);

                f_10951_112705_112769(f_10951_112718_112760(boundCatchBlock) is null);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 112784, 112848);

                IOperation?
                filter = f_10951_112805_112847(this, f_10951_112812_112846(boundCatchBlock))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 112862, 112934);

                IBlockOperation
                handler = (IBlockOperation)f_10951_112905_112933(this, f_10951_112912_112932(boundCatchBlock))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 112948, 113068);

                ITypeSymbol
                exceptionType = f_10951_112976_113026(f_10951_112976_113008(boundCatchBlock)) ?? (DynAbs.Tracing.TraceSender.Expression_Null<Microsoft.CodeAnalysis.ITypeSymbol?>(10951, 112976, 113067) ?? f_10951_113030_113067(f_10951_113030_113056(_semanticModel)))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 113082, 113162);

                ImmutableArray<ILocalSymbol>
                locals = boundCatchBlock.Locals.GetPublicSymbols()
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 113176, 113219);

                SyntaxNode
                syntax = boundCatchBlock.Syntax
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 113233, 113288);

                bool
                isImplicit = f_10951_113251_113287(boundCatchBlock)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 113302, 113444);

                return f_10951_113309_113443(exceptionDeclarationOrExpression, exceptionType, locals, filter, handler, _semanticModel, syntax, isImplicit);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10951, 112351, 113455);

                Microsoft.CodeAnalysis.CSharp.BoundExpression?
                f_10951_112554_112588(Microsoft.CodeAnalysis.CSharp.BoundCatchBlock
                this_param)
                {
                    var return_v = this_param.ExceptionSourceOpt;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 112554, 112588);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.IVariableDeclaratorOperation?
                f_10951_112516_112589(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression?
                boundLocal)
                {
                    var return_v = this_param.CreateVariableDeclarator((Microsoft.CodeAnalysis.CSharp.BoundLocal?)boundLocal);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 112516, 112589);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundStatementList?
                f_10951_112718_112760(Microsoft.CodeAnalysis.CSharp.BoundCatchBlock
                this_param)
                {
                    var return_v = this_param.ExceptionFilterPrologueOpt;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 112718, 112760);
                    return return_v;
                }


                int
                f_10951_112705_112769(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 112705, 112769);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression?
                f_10951_112812_112846(Microsoft.CodeAnalysis.CSharp.BoundCatchBlock
                this_param)
                {
                    var return_v = this_param.ExceptionFilterOpt;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 112812, 112846);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_10951_112805_112847(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression?
                boundNode)
                {
                    var return_v = this_param.Create((Microsoft.CodeAnalysis.CSharp.BoundNode?)boundNode);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 112805, 112847);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundBlock
                f_10951_112912_112932(Microsoft.CodeAnalysis.CSharp.BoundCatchBlock
                this_param)
                {
                    var return_v = this_param.Body;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 112912, 112932);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_10951_112905_112933(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundBlock
                boundNode)
                {
                    var return_v = this_param.Create((Microsoft.CodeAnalysis.CSharp.BoundNode)boundNode);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 112905, 112933);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?
                f_10951_112976_113008(Microsoft.CodeAnalysis.CSharp.BoundCatchBlock
                this_param)
                {
                    var return_v = this_param.ExceptionTypeOpt;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 112976, 113008);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ITypeSymbol?
                f_10951_112976_113026(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?
                symbol)
                {
                    var return_v = symbol.GetPublicSymbol();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 112976, 113026);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Compilation
                f_10951_113030_113056(Microsoft.CodeAnalysis.SemanticModel
                this_param)
                {
                    var return_v = this_param.Compilation;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 113030, 113056);
                    return return_v;
                }


                Microsoft.CodeAnalysis.INamedTypeSymbol
                f_10951_113030_113067(Microsoft.CodeAnalysis.Compilation
                this_param)
                {
                    var return_v = this_param.ObjectType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 113030, 113067);
                    return return_v;
                }


                bool
                f_10951_113251_113287(Microsoft.CodeAnalysis.CSharp.BoundCatchBlock
                this_param)
                {
                    var return_v = this_param.WasCompilerGenerated;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 113251, 113287);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.CatchClauseOperation
                f_10951_113309_113443(Microsoft.CodeAnalysis.IOperation?
                exceptionDeclarationOrExpression, Microsoft.CodeAnalysis.ITypeSymbol
                exceptionType, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.ILocalSymbol>
                locals, Microsoft.CodeAnalysis.IOperation?
                filter, Microsoft.CodeAnalysis.Operations.IBlockOperation
                handler, Microsoft.CodeAnalysis.SemanticModel
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.CatchClauseOperation(exceptionDeclarationOrExpression, exceptionType, locals, filter, handler, semanticModel, syntax, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 113309, 113443);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10951, 112351, 113455);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10951, 112351, 113455);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private IFixedOperation CreateBoundFixedStatementOperation(BoundFixedStatement boundFixedStatement)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10951, 113467, 114124);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 113591, 113715);

                IVariableDeclarationGroupOperation
                variables = (IVariableDeclarationGroupOperation)f_10951_113674_113714(this, f_10951_113681_113713(boundFixedStatement))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 113729, 113780);

                IOperation
                body = f_10951_113747_113779(this, f_10951_113754_113778(boundFixedStatement))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 113794, 113878);

                ImmutableArray<ILocalSymbol>
                locals = boundFixedStatement.Locals.GetPublicSymbols()
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 113892, 113939);

                SyntaxNode
                syntax = boundFixedStatement.Syntax
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 113953, 114012);

                bool
                isImplicit = f_10951_113971_114011(boundFixedStatement)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 114026, 114113);

                return f_10951_114033_114112(locals, variables, body, _semanticModel, syntax, isImplicit);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10951, 113467, 114124);

                Microsoft.CodeAnalysis.CSharp.BoundMultipleLocalDeclarations
                f_10951_113681_113713(Microsoft.CodeAnalysis.CSharp.BoundFixedStatement
                this_param)
                {
                    var return_v = this_param.Declarations;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 113681, 113713);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_10951_113674_113714(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundMultipleLocalDeclarations
                boundNode)
                {
                    var return_v = this_param.Create((Microsoft.CodeAnalysis.CSharp.BoundNode)boundNode);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 113674, 113714);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundStatement
                f_10951_113754_113778(Microsoft.CodeAnalysis.CSharp.BoundFixedStatement
                this_param)
                {
                    var return_v = this_param.Body;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 113754, 113778);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_10951_113747_113779(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundStatement
                boundNode)
                {
                    var return_v = this_param.Create((Microsoft.CodeAnalysis.CSharp.BoundNode)boundNode);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 113747, 113779);
                    return return_v;
                }


                bool
                f_10951_113971_114011(Microsoft.CodeAnalysis.CSharp.BoundFixedStatement
                this_param)
                {
                    var return_v = this_param.WasCompilerGenerated;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 113971, 114011);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.FixedOperation
                f_10951_114033_114112(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.ILocalSymbol>
                locals, Microsoft.CodeAnalysis.Operations.IVariableDeclarationGroupOperation
                variables, Microsoft.CodeAnalysis.IOperation
                body, Microsoft.CodeAnalysis.SemanticModel
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.FixedOperation(locals, variables, body, semanticModel, syntax, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 114033, 114112);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10951, 113467, 114124);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10951, 113467, 114124);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private IUsingOperation CreateBoundUsingStatementOperation(BoundUsingStatement boundUsingStatement)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10951, 114136, 115722);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 114260, 114367);

                f_10951_114260_114366((f_10951_114274_114309(boundUsingStatement) == null) != (f_10951_114323_114356(boundUsingStatement) == null));
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 114381, 114480);

                f_10951_114381_114479(f_10951_114394_114427(boundUsingStatement) is object || (DynAbs.Tracing.TraceSender.Expression_False(10951, 114394, 114478) || boundUsingStatement.Locals.Length > 0));
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 114494, 114610);

                IOperation
                resources = f_10951_114517_114609(this, f_10951_114524_114559(boundUsingStatement) ?? (DynAbs.Tracing.TraceSender.Expression_Null<Microsoft.CodeAnalysis.CSharp.BoundMultipleLocalDeclarations?>(10951, 114524, 114608) ?? (BoundNode)boundUsingStatement.ExpressionOpt!))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 114624, 114675);

                IOperation
                body = f_10951_114642_114674(this, f_10951_114649_114673(boundUsingStatement))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 114689, 114773);

                ImmutableArray<ILocalSymbol>
                locals = boundUsingStatement.Locals.GetPublicSymbols()
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 114787, 114846);

                bool
                isAsynchronous = f_10951_114809_114837(boundUsingStatement) != null
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 114860, 115438);

                DisposeOperationInfo
                disposeOperationInfo = (DynAbs.Tracing.TraceSender.Conditional_F1(10951, 114904, 114955) || ((f_10951_114904_114945(boundUsingStatement) is object
                && DynAbs.Tracing.TraceSender.Conditional_F2(10951, 115016, 115369)) || DynAbs.Tracing.TraceSender.Conditional_F3(10951, 115430, 115437))) ? f_10951_115016_115369(disposeMethod: f_10951_115123_115189(f_10951_115123_115171(f_10951_115123_115164(boundUsingStatement))), disposeArguments: f_10951_115275_115368(this, f_10951_115298_115339(boundUsingStatement), boundUsingStatement.Syntax)) : default
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 115452, 115499);

                SyntaxNode
                syntax = boundUsingStatement.Syntax
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 115513, 115572);

                bool
                isImplicit = f_10951_115531_115571(boundUsingStatement)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 115586, 115711);

                return f_10951_115593_115710(resources, body, locals, isAsynchronous, disposeOperationInfo, _semanticModel, syntax, isImplicit);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10951, 114136, 115722);

                Microsoft.CodeAnalysis.CSharp.BoundMultipleLocalDeclarations?
                f_10951_114274_114309(Microsoft.CodeAnalysis.CSharp.BoundUsingStatement
                this_param)
                {
                    var return_v = this_param.DeclarationsOpt;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 114274, 114309);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression?
                f_10951_114323_114356(Microsoft.CodeAnalysis.CSharp.BoundUsingStatement
                this_param)
                {
                    var return_v = this_param.ExpressionOpt;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 114323, 114356);
                    return return_v;
                }


                int
                f_10951_114260_114366(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 114260, 114366);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression?
                f_10951_114394_114427(Microsoft.CodeAnalysis.CSharp.BoundUsingStatement
                this_param)
                {
                    var return_v = this_param.ExpressionOpt;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 114394, 114427);
                    return return_v;
                }


                int
                f_10951_114381_114479(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 114381, 114479);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.BoundMultipleLocalDeclarations?
                f_10951_114524_114559(Microsoft.CodeAnalysis.CSharp.BoundUsingStatement
                this_param)
                {
                    var return_v = this_param.DeclarationsOpt;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 114524, 114559);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_10951_114517_114609(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundNode
                boundNode)
                {
                    var return_v = this_param.Create(boundNode);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 114517, 114609);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundStatement
                f_10951_114649_114673(Microsoft.CodeAnalysis.CSharp.BoundUsingStatement
                this_param)
                {
                    var return_v = this_param.Body;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 114649, 114673);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_10951_114642_114674(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundStatement
                boundNode)
                {
                    var return_v = this_param.Create((Microsoft.CodeAnalysis.CSharp.BoundNode)boundNode);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 114642, 114674);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundAwaitableInfo?
                f_10951_114809_114837(Microsoft.CodeAnalysis.CSharp.BoundUsingStatement
                this_param)
                {
                    var return_v = this_param.AwaitOpt;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 114809, 114837);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.MethodArgumentInfo?
                f_10951_114904_114945(Microsoft.CodeAnalysis.CSharp.BoundUsingStatement
                this_param)
                {
                    var return_v = this_param.PatternDisposeInfoOpt;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 114904, 114945);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.MethodArgumentInfo
                f_10951_115123_115164(Microsoft.CodeAnalysis.CSharp.BoundUsingStatement
                this_param)
                {
                    var return_v = this_param.PatternDisposeInfoOpt;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 115123, 115164);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                f_10951_115123_115171(Microsoft.CodeAnalysis.CSharp.MethodArgumentInfo
                this_param)
                {
                    var return_v = this_param.Method;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 115123, 115171);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IMethodSymbol?
                f_10951_115123_115189(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                symbol)
                {
                    var return_v = symbol.GetPublicSymbol();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 115123, 115189);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.MethodArgumentInfo
                f_10951_115298_115339(Microsoft.CodeAnalysis.CSharp.BoundUsingStatement
                this_param)
                {
                    var return_v = this_param.PatternDisposeInfoOpt;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 115298, 115339);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Operations.IArgumentOperation>
                f_10951_115275_115368(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.MethodArgumentInfo
                patternDisposeInfo, Microsoft.CodeAnalysis.SyntaxNode
                syntax)
                {
                    var return_v = this_param.CreateDisposeArguments(patternDisposeInfo, syntax);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 115275, 115368);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.DisposeOperationInfo
                f_10951_115016_115369(Microsoft.CodeAnalysis.IMethodSymbol
                disposeMethod, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Operations.IArgumentOperation>
                disposeArguments)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.DisposeOperationInfo(disposeMethod: disposeMethod, disposeArguments: disposeArguments);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 115016, 115369);
                    return return_v;
                }


                bool
                f_10951_115531_115571(Microsoft.CodeAnalysis.CSharp.BoundUsingStatement
                this_param)
                {
                    var return_v = this_param.WasCompilerGenerated;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 115531, 115571);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.UsingOperation
                f_10951_115593_115710(Microsoft.CodeAnalysis.IOperation
                resources, Microsoft.CodeAnalysis.IOperation
                body, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.ILocalSymbol>
                locals, bool
                isAsynchronous, Microsoft.CodeAnalysis.Operations.DisposeOperationInfo
                disposeInfo, Microsoft.CodeAnalysis.SemanticModel
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.UsingOperation(resources, body, locals, isAsynchronous, disposeInfo, semanticModel, syntax, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 115593, 115710);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10951, 114136, 115722);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10951, 114136, 115722);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private IThrowOperation CreateBoundThrowStatementOperation(BoundThrowStatement boundThrowStatement)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10951, 115734, 116225);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 115858, 115927);

                IOperation?
                thrownObject = f_10951_115885_115926(this, f_10951_115892_115925(boundThrowStatement))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 115941, 115988);

                SyntaxNode
                syntax = boundThrowStatement.Syntax
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 116002, 116036);

                ITypeSymbol?
                statementType = null
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 116050, 116109);

                bool
                isImplicit = f_10951_116068_116108(boundThrowStatement)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 116123, 116214);

                return f_10951_116130_116213(thrownObject, _semanticModel, syntax, statementType, isImplicit);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10951, 115734, 116225);

                Microsoft.CodeAnalysis.CSharp.BoundExpression?
                f_10951_115892_115925(Microsoft.CodeAnalysis.CSharp.BoundThrowStatement
                this_param)
                {
                    var return_v = this_param.ExpressionOpt;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 115892, 115925);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_10951_115885_115926(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression?
                boundNode)
                {
                    var return_v = this_param.Create((Microsoft.CodeAnalysis.CSharp.BoundNode?)boundNode);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 115885, 115926);
                    return return_v;
                }


                bool
                f_10951_116068_116108(Microsoft.CodeAnalysis.CSharp.BoundThrowStatement
                this_param)
                {
                    var return_v = this_param.WasCompilerGenerated;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 116068, 116108);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.ThrowOperation
                f_10951_116130_116213(Microsoft.CodeAnalysis.IOperation?
                exception, Microsoft.CodeAnalysis.SemanticModel
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.ITypeSymbol?
                type, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.ThrowOperation(exception, semanticModel, syntax, type, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 116130, 116213);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10951, 115734, 116225);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10951, 115734, 116225);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private IReturnOperation CreateBoundReturnStatementOperation(BoundReturnStatement boundReturnStatement)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10951, 116237, 116697);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 116365, 116436);

                IOperation?
                returnedValue = f_10951_116393_116435(this, f_10951_116400_116434(boundReturnStatement))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 116450, 116498);

                SyntaxNode
                syntax = boundReturnStatement.Syntax
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 116512, 116572);

                bool
                isImplicit = f_10951_116530_116571(boundReturnStatement)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 116586, 116686);

                return f_10951_116593_116685(returnedValue, OperationKind.Return, _semanticModel, syntax, isImplicit);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10951, 116237, 116697);

                Microsoft.CodeAnalysis.CSharp.BoundExpression?
                f_10951_116400_116434(Microsoft.CodeAnalysis.CSharp.BoundReturnStatement
                this_param)
                {
                    var return_v = this_param.ExpressionOpt;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 116400, 116434);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_10951_116393_116435(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression?
                boundNode)
                {
                    var return_v = this_param.Create((Microsoft.CodeAnalysis.CSharp.BoundNode?)boundNode);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 116393, 116435);
                    return return_v;
                }


                bool
                f_10951_116530_116571(Microsoft.CodeAnalysis.CSharp.BoundReturnStatement
                this_param)
                {
                    var return_v = this_param.WasCompilerGenerated;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 116530, 116571);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.ReturnOperation
                f_10951_116593_116685(Microsoft.CodeAnalysis.IOperation?
                returnedValue, Microsoft.CodeAnalysis.OperationKind
                kind, Microsoft.CodeAnalysis.SemanticModel
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.ReturnOperation(returnedValue, kind, semanticModel, syntax, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 116593, 116685);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10951, 116237, 116697);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10951, 116237, 116697);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private IReturnOperation CreateBoundYieldReturnStatementOperation(BoundYieldReturnStatement boundYieldReturnStatement)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10951, 116709, 117200);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 116852, 116924);

                IOperation
                returnedValue = f_10951_116879_116923(this, f_10951_116886_116922(boundYieldReturnStatement))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 116938, 116991);

                SyntaxNode
                syntax = boundYieldReturnStatement.Syntax
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 117005, 117070);

                bool
                isImplicit = f_10951_117023_117069(boundYieldReturnStatement)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 117084, 117189);

                return f_10951_117091_117188(returnedValue, OperationKind.YieldReturn, _semanticModel, syntax, isImplicit);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10951, 116709, 117200);

                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10951_116886_116922(Microsoft.CodeAnalysis.CSharp.BoundYieldReturnStatement
                this_param)
                {
                    var return_v = this_param.Expression;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 116886, 116922);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_10951_116879_116923(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                boundNode)
                {
                    var return_v = this_param.Create((Microsoft.CodeAnalysis.CSharp.BoundNode)boundNode);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 116879, 116923);
                    return return_v;
                }


                bool
                f_10951_117023_117069(Microsoft.CodeAnalysis.CSharp.BoundYieldReturnStatement
                this_param)
                {
                    var return_v = this_param.WasCompilerGenerated;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 117023, 117069);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.ReturnOperation
                f_10951_117091_117188(Microsoft.CodeAnalysis.IOperation
                returnedValue, Microsoft.CodeAnalysis.OperationKind
                kind, Microsoft.CodeAnalysis.SemanticModel
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.ReturnOperation(returnedValue, kind, semanticModel, syntax, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 117091, 117188);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10951, 116709, 117200);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10951, 116709, 117200);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private ILockOperation CreateBoundLockStatementOperation(BoundLockStatement boundLockStatement)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10951, 117212, 118546);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 117421, 117553);

                bool
                legacyMode = f_10951_117439_117544(f_10951_117439_117465(_semanticModel), WellKnownMember.System_Threading_Monitor__Enter2) == null
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 117567, 118151);

                ILocalSymbol?
                lockTakenSymbol =
                (DynAbs.Tracing.TraceSender.Conditional_F1(10951, 117616, 117626) || ((legacyMode && DynAbs.Tracing.TraceSender.Conditional_F2(10951, 117629, 117633)) || DynAbs.Tracing.TraceSender.Conditional_F3(10951, 117636, 118150))) ? null : f_10951_117636_118150(f_10951_117636_118132(f_10951_117657_117758((f_10951_117658_117728(_semanticModel, f_10951_117692_117727(boundLockStatement.Syntax)) as IMethodSymbol)), TypeWithAnnotations.Create(f_10951_117845_117935(((CSharpCompilation)f_10951_117865_117891(_semanticModel)), SpecialType.System_Boolean)), SynthesizedLocalKind.LockTaken, syntaxOpt: f_10951_118097_118124(boundLockStatement).Syntax))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 118165, 118226);

                IOperation
                lockedValue = f_10951_118190_118225(this, f_10951_118197_118224(boundLockStatement))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 118240, 118290);

                IOperation
                body = f_10951_118258_118289(this, f_10951_118265_118288(boundLockStatement))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 118304, 118350);

                SyntaxNode
                syntax = boundLockStatement.Syntax
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 118364, 118422);

                bool
                isImplicit = f_10951_118382_118421(boundLockStatement)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 118438, 118535);

                return f_10951_118445_118534(lockedValue, body, lockTakenSymbol, _semanticModel, syntax, isImplicit);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10951, 117212, 118546);

                Microsoft.CodeAnalysis.Compilation
                f_10951_117439_117465(Microsoft.CodeAnalysis.SemanticModel
                this_param)
                {
                    var return_v = this_param.Compilation;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 117439, 117465);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Symbols.ISymbolInternal?
                f_10951_117439_117544(Microsoft.CodeAnalysis.Compilation
                this_param, Microsoft.CodeAnalysis.WellKnownMember
                member)
                {
                    var return_v = this_param.CommonGetWellKnownTypeMember(member);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 117439, 117544);
                    return return_v;
                }


                int
                f_10951_117692_117727(Microsoft.CodeAnalysis.SyntaxNode
                this_param)
                {
                    var return_v = this_param.SpanStart;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 117692, 117727);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ISymbol?
                f_10951_117658_117728(Microsoft.CodeAnalysis.SemanticModel
                this_param, int
                position)
                {
                    var return_v = this_param.GetEnclosingSymbol(position);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 117658, 117728);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol?
                f_10951_117657_117758(Microsoft.CodeAnalysis.ISymbol?
                symbol)
                {
                    var return_v = symbol.GetSymbol();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 117657, 117758);
                    return (MethodSymbol?)return_v;
                }


                Microsoft.CodeAnalysis.Compilation
                f_10951_117865_117891(Microsoft.CodeAnalysis.SemanticModel
                this_param)
                {
                    var return_v = this_param.Compilation;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 117865, 117891);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                f_10951_117845_117935(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param, Microsoft.CodeAnalysis.SpecialType
                specialType)
                {
                    var return_v = this_param.GetSpecialType(specialType);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 117845, 117935);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10951_118097_118124(Microsoft.CodeAnalysis.CSharp.BoundLockStatement
                this_param)
                {
                    var return_v = this_param.Argument;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 118097, 118124);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedLocal
                f_10951_117636_118132(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol?
                containingMethodOpt, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                type, Microsoft.CodeAnalysis.SynthesizedLocalKind
                kind, Microsoft.CodeAnalysis.SyntaxNode
                syntaxOpt)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedLocal(containingMethodOpt, type, kind, syntaxOpt: syntaxOpt);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 117636, 118132);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ILocalSymbol?
                f_10951_117636_118150(Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedLocal
                symbol)
                {
                    var return_v = symbol.GetPublicSymbol();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 117636, 118150);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10951_118197_118224(Microsoft.CodeAnalysis.CSharp.BoundLockStatement
                this_param)
                {
                    var return_v = this_param.Argument;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 118197, 118224);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_10951_118190_118225(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                boundNode)
                {
                    var return_v = this_param.Create((Microsoft.CodeAnalysis.CSharp.BoundNode)boundNode);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 118190, 118225);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundStatement
                f_10951_118265_118288(Microsoft.CodeAnalysis.CSharp.BoundLockStatement
                this_param)
                {
                    var return_v = this_param.Body;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 118265, 118288);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_10951_118258_118289(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundStatement
                boundNode)
                {
                    var return_v = this_param.Create((Microsoft.CodeAnalysis.CSharp.BoundNode)boundNode);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 118258, 118289);
                    return return_v;
                }


                bool
                f_10951_118382_118421(Microsoft.CodeAnalysis.CSharp.BoundLockStatement
                this_param)
                {
                    var return_v = this_param.WasCompilerGenerated;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 118382, 118421);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.LockOperation
                f_10951_118445_118534(Microsoft.CodeAnalysis.IOperation
                lockedValue, Microsoft.CodeAnalysis.IOperation
                body, Microsoft.CodeAnalysis.ILocalSymbol?
                lockTakenSymbol, Microsoft.CodeAnalysis.SemanticModel
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.LockOperation(lockedValue, body, lockTakenSymbol, semanticModel, syntax, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 118445, 118534);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10951, 117212, 118546);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10951, 117212, 118546);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private IInvalidOperation CreateBoundBadStatementOperation(BoundBadStatement boundBadStatement)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10951, 118558, 119241);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 118678, 118723);

                SyntaxNode
                syntax = boundBadStatement.Syntax
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 118864, 119006);

                bool
                isImplicit = f_10951_118882_118920(boundBadStatement) || (DynAbs.Tracing.TraceSender.Expression_False(10951, 118882, 119005) || boundBadStatement.ChildBoundNodes.Any(e => e?.Syntax == boundBadStatement.Syntax))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 119020, 119109);

                var
                children = f_10951_119035_119108(this, f_10951_119074_119107(boundBadStatement))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 119123, 119230);

                return f_10951_119130_119229(children, _semanticModel, syntax, type: null, constantValue: null, isImplicit);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10951, 118558, 119241);

                bool
                f_10951_118882_118920(Microsoft.CodeAnalysis.CSharp.BoundBadStatement
                this_param)
                {
                    var return_v = this_param.WasCompilerGenerated;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 118882, 118920);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundNode>
                f_10951_119074_119107(Microsoft.CodeAnalysis.CSharp.BoundBadStatement
                this_param)
                {
                    var return_v = this_param.ChildBoundNodes;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 119074, 119107);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.IOperation>
                f_10951_119035_119108(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundNode>
                boundNodes)
                {
                    var return_v = this_param.CreateFromArray<Microsoft.CodeAnalysis.CSharp.BoundNode, Microsoft.CodeAnalysis.IOperation>(boundNodes);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 119035, 119108);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.InvalidOperation
                f_10951_119130_119229(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.IOperation>
                children, Microsoft.CodeAnalysis.SemanticModel
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.ITypeSymbol?
                type, Microsoft.CodeAnalysis.ConstantValue?
                constantValue, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.InvalidOperation(children, semanticModel, syntax, type: type, constantValue: constantValue, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 119130, 119229);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10951, 118558, 119241);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10951, 118558, 119241);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private IOperation CreateBoundLocalDeclarationOperation(BoundLocalDeclaration boundLocalDeclaration)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10951, 119253, 122027);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 119378, 119418);

                var
                node = boundLocalDeclaration.Syntax
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 119432, 119455);

                var
                kind = f_10951_119443_119454(node)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 119471, 119495);

                SyntaxNode
                varStatement
                = default(SyntaxNode);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 119509, 119535);

                SyntaxNode
                varDeclaration
                = default(SyntaxNode);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 119549, 120981);

                switch (kind)
                {

                    case SyntaxKind.LocalDeclarationStatement:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 119549, 120981);
                        {
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 119686, 119740);

                            var
                            statement = (LocalDeclarationStatementSyntax)node
                            ;
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 119914, 119939);

                            varStatement = statement;
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 119967, 120006);

                            varDeclaration = f_10951_119984_120005(statement);
                            DynAbs.Tracing.TraceSender.TraceBreak(10951, 120032, 120038);

                            break;
                        }
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 119549, 120981);

                    case SyntaxKind.VariableDeclarator:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 119549, 120981);
                        {
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 120439, 120473);

                            f_10951_120439_120472(f_10951_120452_120463(node) != null);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 120499, 120526);

                            varStatement = f_10951_120514_120525(node);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 120554, 120583);

                            varDeclaration = f_10951_120571_120582(node);
                            DynAbs.Tracing.TraceSender.TraceBreak(10951, 120609, 120615);

                            break;
                        }
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 119549, 120981);

                    default:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 119549, 120981);
                        {
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 120713, 120754);

                            f_10951_120713_120753($"Unexpected syntax: {kind}");
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 120874, 120911);

                            varStatement = varDeclaration = node;
                            DynAbs.Tracing.TraceSender.TraceBreak(10951, 120937, 120943);

                            break;
                        }
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 119549, 120981);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 120997, 121069);

                bool
                multiVariableImplicit = f_10951_121026_121068(boundLocalDeclaration)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 121083, 121206);

                ImmutableArray<IVariableDeclaratorOperation>
                declarators = f_10951_121142_121205(this, boundLocalDeclaration, varDeclaration)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 121220, 121330);

                ImmutableArray<IOperation>
                ignoredDimensions = f_10951_121267_121329(this, boundLocalDeclaration, varDeclaration)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 121344, 121540);

                IVariableDeclarationOperation
                multiVariableDeclaration = f_10951_121401_121539(declarators, initializer: null, ignoredDimensions, _semanticModel, varDeclaration, multiVariableImplicit)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 121769, 121866);

                bool
                isImplicit = (varStatement == varDeclaration) || (DynAbs.Tracing.TraceSender.Expression_False(10951, 121787, 121865) || f_10951_121823_121865(boundLocalDeclaration))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 121880, 122016);

                return f_10951_121887_122015(f_10951_121925_121972(multiVariableDeclaration), _semanticModel, varStatement, isImplicit);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10951, 119253, 122027);

                Microsoft.CodeAnalysis.CSharp.SyntaxKind
                f_10951_119443_119454(Microsoft.CodeAnalysis.SyntaxNode
                node)
                {
                    var return_v = node.Kind();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 119443, 119454);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclarationSyntax
                f_10951_119984_120005(Microsoft.CodeAnalysis.CSharp.Syntax.LocalDeclarationStatementSyntax
                this_param)
                {
                    var return_v = this_param.Declaration;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 119984, 120005);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SyntaxNode?
                f_10951_120452_120463(Microsoft.CodeAnalysis.SyntaxNode
                this_param)
                {
                    var return_v = this_param.Parent;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 120452, 120463);
                    return return_v;
                }


                int
                f_10951_120439_120472(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 120439, 120472);
                    return 0;
                }


                Microsoft.CodeAnalysis.SyntaxNode
                f_10951_120514_120525(Microsoft.CodeAnalysis.SyntaxNode
                this_param)
                {
                    var return_v = this_param.Parent;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 120514, 120525);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SyntaxNode
                f_10951_120571_120582(Microsoft.CodeAnalysis.SyntaxNode
                this_param)
                {
                    var return_v = this_param.Parent;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 120571, 120582);
                    return return_v;
                }


                int
                f_10951_120713_120753(string
                message)
                {
                    Debug.Fail(message);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 120713, 120753);
                    return 0;
                }


                bool
                f_10951_121026_121068(Microsoft.CodeAnalysis.CSharp.BoundLocalDeclaration
                this_param)
                {
                    var return_v = this_param.WasCompilerGenerated;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 121026, 121068);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Operations.IVariableDeclaratorOperation>
                f_10951_121142_121205(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundLocalDeclaration
                declaration, Microsoft.CodeAnalysis.SyntaxNode
                declarationSyntax)
                {
                    var return_v = this_param.CreateVariableDeclarator((Microsoft.CodeAnalysis.CSharp.BoundNode)declaration, declarationSyntax);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 121142, 121205);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.IOperation>
                f_10951_121267_121329(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundLocalDeclaration
                declaration, Microsoft.CodeAnalysis.SyntaxNode
                declarationSyntax)
                {
                    var return_v = this_param.CreateIgnoredDimensions((Microsoft.CodeAnalysis.CSharp.BoundNode)declaration, declarationSyntax);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 121267, 121329);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.VariableDeclarationOperation
                f_10951_121401_121539(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Operations.IVariableDeclaratorOperation>
                declarators, Microsoft.CodeAnalysis.Operations.IVariableInitializerOperation?
                initializer, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.IOperation>
                ignoredDimensions, Microsoft.CodeAnalysis.SemanticModel
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.VariableDeclarationOperation(declarators, initializer: initializer, ignoredDimensions, semanticModel, syntax, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 121401, 121539);
                    return return_v;
                }


                bool
                f_10951_121823_121865(Microsoft.CodeAnalysis.CSharp.BoundLocalDeclaration
                this_param)
                {
                    var return_v = this_param.WasCompilerGenerated;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 121823, 121865);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Operations.IVariableDeclarationOperation>
                f_10951_121925_121972(Microsoft.CodeAnalysis.Operations.IVariableDeclarationOperation
                item)
                {
                    var return_v = ImmutableArray.Create(item);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 121925, 121972);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.VariableDeclarationGroupOperation
                f_10951_121887_122015(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Operations.IVariableDeclarationOperation>
                declarations, Microsoft.CodeAnalysis.SemanticModel
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.VariableDeclarationGroupOperation(declarations, semanticModel, syntax, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 121887, 122015);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10951, 119253, 122027);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10951, 119253, 122027);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private IOperation CreateBoundMultipleLocalDeclarationsBaseOperation(BoundMultipleLocalDeclarationsBase boundMultipleLocalDeclarations)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10951, 122039, 125188);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 122558, 122632);

                SyntaxNode
                declarationGroupSyntax = boundMultipleLocalDeclarations.Syntax
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 122646, 122884);

                SyntaxNode
                declarationSyntax = (DynAbs.Tracing.TraceSender.Conditional_F1(10951, 122677, 122744) || ((f_10951_122677_122744(declarationGroupSyntax, SyntaxKind.LocalDeclarationStatement) && DynAbs.Tracing.TraceSender.Conditional_F2(10951, 122768, 122837)) || DynAbs.Tracing.TraceSender.Conditional_F3(10951, 122861, 122883))) ? f_10951_122768_122837(((LocalDeclarationStatementSyntax)declarationGroupSyntax)) : declarationGroupSyntax
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 122900, 122981);

                bool
                declarationIsImplicit = f_10951_122929_122980(boundMultipleLocalDeclarations)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 122995, 123130);

                ImmutableArray<IVariableDeclaratorOperation>
                declarators = f_10951_123054_123129(this, boundMultipleLocalDeclarations, declarationSyntax)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 123144, 123266);

                ImmutableArray<IOperation>
                ignoredDimensions = f_10951_123191_123265(this, boundMultipleLocalDeclarations, declarationSyntax)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 123280, 123479);

                IVariableDeclarationOperation
                multiVariableDeclaration = f_10951_123337_123478(declarators, initializer: null, ignoredDimensions, _semanticModel, declarationSyntax, declarationIsImplicit)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 123876, 124058);

                bool
                isImplicit = declarationGroupSyntax == declarationSyntax || (DynAbs.Tracing.TraceSender.Expression_False(10951, 123894, 123992) || f_10951_123941_123992(boundMultipleLocalDeclarations)) || (DynAbs.Tracing.TraceSender.Expression_False(10951, 123894, 124057) || boundMultipleLocalDeclarations is BoundUsingLocalDeclarations)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 124072, 124237);

                var
                variableDeclaration = f_10951_124098_124236(f_10951_124136_124183(multiVariableDeclaration), _semanticModel, declarationGroupSyntax, isImplicit)
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 124253, 125134) || true) && (boundMultipleLocalDeclarations is BoundUsingLocalDeclarations usingDecl)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 124253, 125134);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 124362, 125119);

                    return f_10951_124369_125118(variableDeclaration, isAsynchronous: f_10951_124479_124497(usingDecl) is object, disposeInfo: (DynAbs.Tracing.TraceSender.Conditional_F1(10951, 124543, 124584) || ((f_10951_124543_124574(usingDecl) is object
                    && DynAbs.Tracing.TraceSender.Conditional_F2(10951, 124623, 124902)) || DynAbs.Tracing.TraceSender.Conditional_F3(10951, 124941, 124948))) ? f_10951_124623_124902(disposeMethod: f_10951_124708_124764(f_10951_124708_124746(f_10951_124708_124739(usingDecl))), disposeArguments: f_10951_124828_124901(this, f_10951_124851_124882(usingDecl), usingDecl.Syntax)) : default, _semanticModel, declarationGroupSyntax, isImplicit: f_10951_125066_125117(boundMultipleLocalDeclarations));
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 124253, 125134);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 125150, 125177);

                return variableDeclaration;
                DynAbs.Tracing.TraceSender.TraceExitMethod(10951, 122039, 125188);

                bool
                f_10951_122677_122744(Microsoft.CodeAnalysis.SyntaxNode
                node, Microsoft.CodeAnalysis.CSharp.SyntaxKind
                kind)
                {
                    var return_v = node.IsKind(kind);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 122677, 122744);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclarationSyntax
                f_10951_122768_122837(Microsoft.CodeAnalysis.CSharp.Syntax.LocalDeclarationStatementSyntax
                this_param)
                {
                    var return_v = this_param.Declaration;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 122768, 122837);
                    return return_v;
                }


                bool
                f_10951_122929_122980(Microsoft.CodeAnalysis.CSharp.BoundMultipleLocalDeclarationsBase
                this_param)
                {
                    var return_v = this_param.WasCompilerGenerated;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 122929, 122980);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Operations.IVariableDeclaratorOperation>
                f_10951_123054_123129(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundMultipleLocalDeclarationsBase
                declaration, Microsoft.CodeAnalysis.SyntaxNode
                declarationSyntax)
                {
                    var return_v = this_param.CreateVariableDeclarator((Microsoft.CodeAnalysis.CSharp.BoundNode)declaration, declarationSyntax);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 123054, 123129);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.IOperation>
                f_10951_123191_123265(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundMultipleLocalDeclarationsBase
                declaration, Microsoft.CodeAnalysis.SyntaxNode
                declarationSyntax)
                {
                    var return_v = this_param.CreateIgnoredDimensions((Microsoft.CodeAnalysis.CSharp.BoundNode)declaration, declarationSyntax);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 123191, 123265);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.VariableDeclarationOperation
                f_10951_123337_123478(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Operations.IVariableDeclaratorOperation>
                declarators, Microsoft.CodeAnalysis.Operations.IVariableInitializerOperation?
                initializer, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.IOperation>
                ignoredDimensions, Microsoft.CodeAnalysis.SemanticModel
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.VariableDeclarationOperation(declarators, initializer: initializer, ignoredDimensions, semanticModel, syntax, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 123337, 123478);
                    return return_v;
                }


                bool
                f_10951_123941_123992(Microsoft.CodeAnalysis.CSharp.BoundMultipleLocalDeclarationsBase
                this_param)
                {
                    var return_v = this_param.WasCompilerGenerated;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 123941, 123992);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Operations.IVariableDeclarationOperation>
                f_10951_124136_124183(Microsoft.CodeAnalysis.Operations.IVariableDeclarationOperation
                item)
                {
                    var return_v = ImmutableArray.Create(item);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 124136, 124183);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.VariableDeclarationGroupOperation
                f_10951_124098_124236(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Operations.IVariableDeclarationOperation>
                declarations, Microsoft.CodeAnalysis.SemanticModel
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.VariableDeclarationGroupOperation(declarations, semanticModel, syntax, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 124098, 124236);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundAwaitableInfo?
                f_10951_124479_124497(Microsoft.CodeAnalysis.CSharp.BoundUsingLocalDeclarations
                this_param)
                {
                    var return_v = this_param.AwaitOpt;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 124479, 124497);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.MethodArgumentInfo?
                f_10951_124543_124574(Microsoft.CodeAnalysis.CSharp.BoundUsingLocalDeclarations
                this_param)
                {
                    var return_v = this_param.PatternDisposeInfoOpt;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 124543, 124574);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.MethodArgumentInfo
                f_10951_124708_124739(Microsoft.CodeAnalysis.CSharp.BoundUsingLocalDeclarations
                this_param)
                {
                    var return_v = this_param.PatternDisposeInfoOpt;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 124708, 124739);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                f_10951_124708_124746(Microsoft.CodeAnalysis.CSharp.MethodArgumentInfo
                this_param)
                {
                    var return_v = this_param.Method;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 124708, 124746);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IMethodSymbol?
                f_10951_124708_124764(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                symbol)
                {
                    var return_v = symbol.GetPublicSymbol();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 124708, 124764);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.MethodArgumentInfo
                f_10951_124851_124882(Microsoft.CodeAnalysis.CSharp.BoundUsingLocalDeclarations
                this_param)
                {
                    var return_v = this_param.PatternDisposeInfoOpt;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 124851, 124882);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Operations.IArgumentOperation>
                f_10951_124828_124901(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.MethodArgumentInfo
                patternDisposeInfo, Microsoft.CodeAnalysis.SyntaxNode
                syntax)
                {
                    var return_v = this_param.CreateDisposeArguments(patternDisposeInfo, syntax);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 124828, 124901);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.DisposeOperationInfo
                f_10951_124623_124902(Microsoft.CodeAnalysis.IMethodSymbol
                disposeMethod, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Operations.IArgumentOperation>
                disposeArguments)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.DisposeOperationInfo(disposeMethod: disposeMethod, disposeArguments: disposeArguments);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 124623, 124902);
                    return return_v;
                }


                bool
                f_10951_125066_125117(Microsoft.CodeAnalysis.CSharp.BoundMultipleLocalDeclarationsBase
                this_param)
                {
                    var return_v = this_param.WasCompilerGenerated;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 125066, 125117);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.UsingDeclarationOperation
                f_10951_124369_125118(Microsoft.CodeAnalysis.Operations.VariableDeclarationGroupOperation
                declarationGroup, bool
                isAsynchronous, Microsoft.CodeAnalysis.Operations.DisposeOperationInfo
                disposeInfo, Microsoft.CodeAnalysis.SemanticModel
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.UsingDeclarationOperation((Microsoft.CodeAnalysis.Operations.IVariableDeclarationGroupOperation)declarationGroup, isAsynchronous: isAsynchronous, disposeInfo: disposeInfo, semanticModel, syntax, isImplicit: isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 124369, 125118);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10951, 122039, 125188);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10951, 122039, 125188);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private ILabeledOperation CreateBoundLabelStatementOperation(BoundLabelStatement boundLabelStatement)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10951, 125200, 125638);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 125326, 125391);

                ILabelSymbol
                label = f_10951_125347_125390(f_10951_125347_125372(boundLabelStatement))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 125405, 125452);

                SyntaxNode
                syntax = boundLabelStatement.Syntax
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 125466, 125525);

                bool
                isImplicit = f_10951_125484_125524(boundLabelStatement)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 125539, 125627);

                return f_10951_125546_125626(label, operation: null, _semanticModel, syntax, isImplicit);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10951, 125200, 125638);

                Microsoft.CodeAnalysis.CSharp.Symbols.LabelSymbol
                f_10951_125347_125372(Microsoft.CodeAnalysis.CSharp.BoundLabelStatement
                this_param)
                {
                    var return_v = this_param.Label;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 125347, 125372);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ILabelSymbol?
                f_10951_125347_125390(Microsoft.CodeAnalysis.CSharp.Symbols.LabelSymbol
                symbol)
                {
                    var return_v = symbol.GetPublicSymbol();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 125347, 125390);
                    return return_v;
                }


                bool
                f_10951_125484_125524(Microsoft.CodeAnalysis.CSharp.BoundLabelStatement
                this_param)
                {
                    var return_v = this_param.WasCompilerGenerated;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 125484, 125524);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.LabeledOperation
                f_10951_125546_125626(Microsoft.CodeAnalysis.ILabelSymbol
                label, Microsoft.CodeAnalysis.IOperation?
                operation, Microsoft.CodeAnalysis.SemanticModel
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.LabeledOperation(label, operation: operation, semanticModel, syntax, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 125546, 125626);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10951, 125200, 125638);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10951, 125200, 125638);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private ILabeledOperation CreateBoundLabeledStatementOperation(BoundLabeledStatement boundLabeledStatement)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10951, 125650, 126180);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 125782, 125849);

                ILabelSymbol
                label = f_10951_125803_125848(f_10951_125803_125830(boundLabeledStatement))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 125863, 125928);

                IOperation
                labeledStatement = f_10951_125893_125927(this, f_10951_125900_125926(boundLabeledStatement))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 125942, 125991);

                SyntaxNode
                syntax = boundLabeledStatement.Syntax
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 126005, 126066);

                bool
                isImplicit = f_10951_126023_126065(boundLabeledStatement)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 126080, 126169);

                return f_10951_126087_126168(label, labeledStatement, _semanticModel, syntax, isImplicit);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10951, 125650, 126180);

                Microsoft.CodeAnalysis.CSharp.Symbols.LabelSymbol
                f_10951_125803_125830(Microsoft.CodeAnalysis.CSharp.BoundLabeledStatement
                this_param)
                {
                    var return_v = this_param.Label;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 125803, 125830);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ILabelSymbol?
                f_10951_125803_125848(Microsoft.CodeAnalysis.CSharp.Symbols.LabelSymbol
                symbol)
                {
                    var return_v = symbol.GetPublicSymbol();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 125803, 125848);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundStatement
                f_10951_125900_125926(Microsoft.CodeAnalysis.CSharp.BoundLabeledStatement
                this_param)
                {
                    var return_v = this_param.Body;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 125900, 125926);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_10951_125893_125927(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundStatement
                boundNode)
                {
                    var return_v = this_param.Create((Microsoft.CodeAnalysis.CSharp.BoundNode)boundNode);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 125893, 125927);
                    return return_v;
                }


                bool
                f_10951_126023_126065(Microsoft.CodeAnalysis.CSharp.BoundLabeledStatement
                this_param)
                {
                    var return_v = this_param.WasCompilerGenerated;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 126023, 126065);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.LabeledOperation
                f_10951_126087_126168(Microsoft.CodeAnalysis.ILabelSymbol
                label, Microsoft.CodeAnalysis.IOperation
                operation, Microsoft.CodeAnalysis.SemanticModel
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.LabeledOperation(label, operation, semanticModel, syntax, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 126087, 126168);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10951, 125650, 126180);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10951, 125650, 126180);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private IExpressionStatementOperation CreateBoundExpressionStatementOperation(BoundExpressionStatement boundExpressionStatement)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10951, 126192, 127541);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 126673, 126818);

                bool
                isImplicit = f_10951_126691_126736(boundExpressionStatement) || (DynAbs.Tracing.TraceSender.Expression_False(10951, 126691, 126817) || boundExpressionStatement.Syntax == f_10951_126775_126810(boundExpressionStatement).Syntax)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 126832, 126884);

                SyntaxNode
                syntax = boundExpressionStatement.Syntax
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 127123, 127191);

                IOperation
                expression = f_10951_127147_127190(this, f_10951_127154_127189(boundExpressionStatement))
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 127205, 127426) || true) && (f_10951_127209_127244(boundExpressionStatement) is BoundSequence sequence)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 127205, 127426);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 127304, 127375);

                    f_10951_127304_127374(boundExpressionStatement.Syntax == f_10951_127352_127366(sequence).Syntax);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 127393, 127411);

                    isImplicit = true;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 127205, 127426);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 127442, 127530);

                return f_10951_127449_127529(expression, _semanticModel, syntax, isImplicit);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10951, 126192, 127541);

                bool
                f_10951_126691_126736(Microsoft.CodeAnalysis.CSharp.BoundExpressionStatement
                this_param)
                {
                    var return_v = this_param.WasCompilerGenerated;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 126691, 126736);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10951_126775_126810(Microsoft.CodeAnalysis.CSharp.BoundExpressionStatement
                this_param)
                {
                    var return_v = this_param.Expression;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 126775, 126810);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10951_127154_127189(Microsoft.CodeAnalysis.CSharp.BoundExpressionStatement
                this_param)
                {
                    var return_v = this_param.Expression;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 127154, 127189);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_10951_127147_127190(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                boundNode)
                {
                    var return_v = this_param.Create((Microsoft.CodeAnalysis.CSharp.BoundNode)boundNode);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 127147, 127190);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10951_127209_127244(Microsoft.CodeAnalysis.CSharp.BoundExpressionStatement
                this_param)
                {
                    var return_v = this_param.Expression;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 127209, 127244);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10951_127352_127366(Microsoft.CodeAnalysis.CSharp.BoundSequence
                this_param)
                {
                    var return_v = this_param.Value;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 127352, 127366);
                    return return_v;
                }


                int
                f_10951_127304_127374(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 127304, 127374);
                    return 0;
                }


                Microsoft.CodeAnalysis.Operations.ExpressionStatementOperation
                f_10951_127449_127529(Microsoft.CodeAnalysis.IOperation
                operation, Microsoft.CodeAnalysis.SemanticModel
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.ExpressionStatementOperation(operation, semanticModel, syntax, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 127449, 127529);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10951, 126192, 127541);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10951, 126192, 127541);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        internal IOperation CreateBoundTupleOperation(BoundTupleExpression boundTupleExpression, bool createDeclaration = true)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10951, 127553, 129068);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 127697, 127745);

                SyntaxNode
                syntax = boundTupleExpression.Syntax
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 127759, 127819);

                bool
                isImplicit = f_10951_127777_127818(boundTupleExpression)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 127833, 127896);

                ITypeSymbol?
                type = f_10951_127853_127895(boundTupleExpression)
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 127912, 128424) || true) && (syntax is DeclarationExpressionSyntax declarationExpressionSyntax)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 127912, 128424);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 128015, 128064);

                    syntax = f_10951_128024_128063(declarationExpressionSyntax);

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 128082, 128409) || true) && (createDeclaration)
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 128082, 128409);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 128145, 128240);

                        var
                        tupleOperation = f_10951_128166_128239(this, boundTupleExpression, createDeclaration: false)
                        ;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 128262, 128390);

                        return f_10951_128269_128389(tupleOperation, _semanticModel, declarationExpressionSyntax, type, isImplicit: false);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 128082, 128409);
                    }
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 127912, 128424);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 128440, 128803);

                TypeSymbol?
                naturalType = boundTupleExpression switch
                {
                    BoundTupleLiteral { Type: var t } when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 128526, 128564) && DynAbs.Tracing.TraceSender.Expression_True(10951, 128526, 128564))
=> t,
                    BoundConvertedTupleLiteral { SourceTuple: { Type: var t } } when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 128583, 128647) && DynAbs.Tracing.TraceSender.Expression_True(10951, 128583, 128647))
=> t,
                    BoundConvertedTupleLiteral when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 128666, 128700) && DynAbs.Tracing.TraceSender.Expression_True(10951, 128666, 128700))
=> null,
                    { Kind: var kind } when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 128719, 128787) && DynAbs.Tracing.TraceSender.Expression_True(10951, 128719, 128787))
=> throw f_10951_128747_128787(kind)
                }
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 128819, 128934);

                ImmutableArray<IOperation>
                elements = f_10951_128857_128933(this, f_10951_128902_128932(boundTupleExpression))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 128948, 129057);

                return f_10951_128955_129056(elements, f_10951_128984_129013(naturalType), _semanticModel, syntax, type, isImplicit);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10951, 127553, 129068);

                bool
                f_10951_127777_127818(Microsoft.CodeAnalysis.CSharp.BoundTupleExpression
                this_param)
                {
                    var return_v = this_param.WasCompilerGenerated;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 127777, 127818);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ITypeSymbol?
                f_10951_127853_127895(Microsoft.CodeAnalysis.CSharp.BoundTupleExpression
                this_param)
                {
                    var return_v = this_param.GetPublicTypeSymbol();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 127853, 127895);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Syntax.VariableDesignationSyntax
                f_10951_128024_128063(Microsoft.CodeAnalysis.CSharp.Syntax.DeclarationExpressionSyntax
                this_param)
                {
                    var return_v = this_param.Designation;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 128024, 128063);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation
                f_10951_128166_128239(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundTupleExpression
                boundTupleExpression, bool
                createDeclaration)
                {
                    var return_v = this_param.CreateBoundTupleOperation(boundTupleExpression, createDeclaration: createDeclaration);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 128166, 128239);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.DeclarationExpressionOperation
                f_10951_128269_128389(Microsoft.CodeAnalysis.IOperation
                expression, Microsoft.CodeAnalysis.SemanticModel
                semanticModel, Microsoft.CodeAnalysis.CSharp.Syntax.DeclarationExpressionSyntax
                syntax, Microsoft.CodeAnalysis.ITypeSymbol?
                type, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.DeclarationExpressionOperation(expression, semanticModel, (Microsoft.CodeAnalysis.SyntaxNode)syntax, type, isImplicit: isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 128269, 128389);
                    return return_v;
                }


                System.Exception
                f_10951_128747_128787(Microsoft.CodeAnalysis.CSharp.BoundKind
                o)
                {
                    var return_v = ExceptionUtilities.UnexpectedValue((object)o);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 128747, 128787);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                f_10951_128902_128932(Microsoft.CodeAnalysis.CSharp.BoundTupleExpression
                this_param)
                {
                    var return_v = this_param.Arguments;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 128902, 128932);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.IOperation>
                f_10951_128857_128933(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                boundNodes)
                {
                    var return_v = this_param.CreateFromArray<Microsoft.CodeAnalysis.CSharp.BoundExpression, Microsoft.CodeAnalysis.IOperation>(boundNodes);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 128857, 128933);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ITypeSymbol?
                f_10951_128984_129013(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?
                symbol)
                {
                    var return_v = symbol.GetPublicSymbol();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 128984, 129013);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.TupleOperation
                f_10951_128955_129056(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.IOperation>
                elements, Microsoft.CodeAnalysis.ITypeSymbol?
                naturalType, Microsoft.CodeAnalysis.SemanticModel
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.ITypeSymbol?
                type, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.TupleOperation(elements, naturalType, semanticModel, syntax, type, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 128955, 129056);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10951, 127553, 129068);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10951, 127553, 129068);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private IInterpolatedStringOperation CreateBoundInterpolatedStringExpressionOperation(BoundInterpolatedString boundInterpolatedString)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10951, 129080, 129809);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 129239, 129376);

                ImmutableArray<IInterpolatedStringContentOperation>
                parts = f_10951_129299_129375(this, f_10951_129345_129374(boundInterpolatedString))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 129390, 129441);

                SyntaxNode
                syntax = boundInterpolatedString.Syntax
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 129455, 129521);

                ITypeSymbol?
                type = f_10951_129475_129520(boundInterpolatedString)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 129535, 129604);

                ConstantValue?
                constantValue = f_10951_129566_129603(boundInterpolatedString)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 129618, 129681);

                bool
                isImplicit = f_10951_129636_129680(boundInterpolatedString)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 129695, 129798);

                return f_10951_129702_129797(parts, _semanticModel, syntax, type, constantValue, isImplicit);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10951, 129080, 129809);

                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                f_10951_129345_129374(Microsoft.CodeAnalysis.CSharp.BoundInterpolatedString
                this_param)
                {
                    var return_v = this_param.Parts;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 129345, 129374);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Operations.IInterpolatedStringContentOperation>
                f_10951_129299_129375(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                parts)
                {
                    var return_v = this_param.CreateBoundInterpolatedStringContentOperation(parts);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 129299, 129375);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ITypeSymbol?
                f_10951_129475_129520(Microsoft.CodeAnalysis.CSharp.BoundInterpolatedString
                this_param)
                {
                    var return_v = this_param.GetPublicTypeSymbol();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 129475, 129520);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ConstantValue?
                f_10951_129566_129603(Microsoft.CodeAnalysis.CSharp.BoundInterpolatedString
                this_param)
                {
                    var return_v = this_param.ConstantValue;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 129566, 129603);
                    return return_v;
                }


                bool
                f_10951_129636_129680(Microsoft.CodeAnalysis.CSharp.BoundInterpolatedString
                this_param)
                {
                    var return_v = this_param.WasCompilerGenerated;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 129636, 129680);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.InterpolatedStringOperation
                f_10951_129702_129797(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Operations.IInterpolatedStringContentOperation>
                parts, Microsoft.CodeAnalysis.SemanticModel
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.ITypeSymbol?
                type, Microsoft.CodeAnalysis.ConstantValue?
                constantValue, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.InterpolatedStringOperation(parts, semanticModel, syntax, type, constantValue, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 129702, 129797);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10951, 129080, 129809);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10951, 129080, 129809);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        internal ImmutableArray<IInterpolatedStringContentOperation> CreateBoundInterpolatedStringContentOperation(ImmutableArray<BoundExpression> parts)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10951, 129821, 130552);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 129991, 130081);

                var
                builder = f_10951_130005_130080(parts.Length)
                ;
                try
                {
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 130095, 130491);
                    foreach (var part in f_10951_130116_130121_I(parts))
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 130095, 130491);

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 130155, 130476) || true) && (f_10951_130159_130168(part) == BoundKind.StringInsert)
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 130155, 130476);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 130236, 130299);

                            f_10951_130236_130298(builder, f_10951_130285_130297(this, part));
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 130155, 130476);
                        }

                        else

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 130155, 130476);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 130381, 130457);

                            f_10951_130381_130456(builder, f_10951_130393_130455(this, part));
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 130155, 130476);
                        }
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 130095, 130491);
                    }
                }
                catch (System.Exception)
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoopByException(10951, 1, 397);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoop(10951, 1, 397);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 130505, 130541);

                return f_10951_130512_130540(builder);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10951, 129821, 130552);

                Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.Operations.IInterpolatedStringContentOperation>
                f_10951_130005_130080(int
                capacity)
                {
                    var return_v = ArrayBuilder<IInterpolatedStringContentOperation>.GetInstance(capacity);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 130005, 130080);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundKind
                f_10951_130159_130168(Microsoft.CodeAnalysis.CSharp.BoundExpression
                this_param)
                {
                    var return_v = this_param.Kind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 130159, 130168);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_10951_130285_130297(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                boundNode)
                {
                    var return_v = this_param.Create((Microsoft.CodeAnalysis.CSharp.BoundNode)boundNode);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 130285, 130297);
                    return return_v;
                }


                int
                f_10951_130236_130298(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.Operations.IInterpolatedStringContentOperation>
                this_param, Microsoft.CodeAnalysis.IOperation
                item)
                {
                    this_param.Add((Microsoft.CodeAnalysis.Operations.IInterpolatedStringContentOperation)item);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 130236, 130298);
                    return 0;
                }


                Microsoft.CodeAnalysis.Operations.IInterpolatedStringTextOperation
                f_10951_130393_130455(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                boundNode)
                {
                    var return_v = this_param.CreateBoundInterpolatedStringTextOperation((Microsoft.CodeAnalysis.CSharp.BoundLiteral)boundNode);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 130393, 130455);
                    return return_v;
                }


                int
                f_10951_130381_130456(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.Operations.IInterpolatedStringContentOperation>
                this_param, Microsoft.CodeAnalysis.Operations.IInterpolatedStringTextOperation
                item)
                {
                    this_param.Add((Microsoft.CodeAnalysis.Operations.IInterpolatedStringContentOperation)item);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 130381, 130456);
                    return 0;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                f_10951_130116_130121_I(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 130116, 130121);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Operations.IInterpolatedStringContentOperation>
                f_10951_130512_130540(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.Operations.IInterpolatedStringContentOperation>
                this_param)
                {
                    var return_v = this_param.ToImmutableAndFree();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 130512, 130540);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10951, 129821, 130552);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10951, 129821, 130552);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private IInterpolationOperation CreateBoundInterpolationOperation(BoundStringInsert boundStringInsert)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10951, 130564, 131157);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 130691, 130747);

                IOperation
                expression = f_10951_130715_130746(this, f_10951_130722_130745(boundStringInsert))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 130761, 130821);

                IOperation?
                alignment = f_10951_130785_130820(this, f_10951_130792_130819(boundStringInsert))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 130835, 130895);

                IOperation?
                formatString = f_10951_130862_130894(this, f_10951_130869_130893(boundStringInsert))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 130909, 130954);

                SyntaxNode
                syntax = boundStringInsert.Syntax
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 130968, 131025);

                bool
                isImplicit = f_10951_130986_131024(boundStringInsert)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 131039, 131146);

                return f_10951_131046_131145(expression, alignment, formatString, _semanticModel, syntax, isImplicit);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10951, 130564, 131157);

                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10951_130722_130745(Microsoft.CodeAnalysis.CSharp.BoundStringInsert
                this_param)
                {
                    var return_v = this_param.Value;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 130722, 130745);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_10951_130715_130746(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                boundNode)
                {
                    var return_v = this_param.Create((Microsoft.CodeAnalysis.CSharp.BoundNode)boundNode);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 130715, 130746);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression?
                f_10951_130792_130819(Microsoft.CodeAnalysis.CSharp.BoundStringInsert
                this_param)
                {
                    var return_v = this_param.Alignment;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 130792, 130819);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_10951_130785_130820(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression?
                boundNode)
                {
                    var return_v = this_param.Create((Microsoft.CodeAnalysis.CSharp.BoundNode?)boundNode);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 130785, 130820);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundLiteral?
                f_10951_130869_130893(Microsoft.CodeAnalysis.CSharp.BoundStringInsert
                this_param)
                {
                    var return_v = this_param.Format;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 130869, 130893);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_10951_130862_130894(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundLiteral?
                boundNode)
                {
                    var return_v = this_param.Create((Microsoft.CodeAnalysis.CSharp.BoundNode?)boundNode);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 130862, 130894);
                    return return_v;
                }


                bool
                f_10951_130986_131024(Microsoft.CodeAnalysis.CSharp.BoundStringInsert
                this_param)
                {
                    var return_v = this_param.WasCompilerGenerated;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 130986, 131024);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.InterpolationOperation
                f_10951_131046_131145(Microsoft.CodeAnalysis.IOperation
                expression, Microsoft.CodeAnalysis.IOperation?
                alignment, Microsoft.CodeAnalysis.IOperation?
                formatString, Microsoft.CodeAnalysis.SemanticModel
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.InterpolationOperation(expression, alignment, formatString, semanticModel, syntax, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 131046, 131145);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10951, 130564, 131157);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10951, 130564, 131157);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private IInterpolatedStringTextOperation CreateBoundInterpolatedStringTextOperation(BoundLiteral boundNode)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10951, 131169, 131599);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 131301, 131375);

                IOperation
                text = f_10951_131319_131374(this, boundNode, @implicit: true)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 131389, 131426);

                SyntaxNode
                syntax = boundNode.Syntax
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 131440, 131489);

                bool
                isImplicit = f_10951_131458_131488(boundNode)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 131503, 131588);

                return f_10951_131510_131587(text, _semanticModel, syntax, isImplicit);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10951, 131169, 131599);

                Microsoft.CodeAnalysis.Operations.ILiteralOperation
                f_10951_131319_131374(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundLiteral
                boundLiteral, bool
                @implicit)
                {
                    var return_v = this_param.CreateBoundLiteralOperation(boundLiteral, @implicit: @implicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 131319, 131374);
                    return return_v;
                }


                bool
                f_10951_131458_131488(Microsoft.CodeAnalysis.CSharp.BoundLiteral
                this_param)
                {
                    var return_v = this_param.WasCompilerGenerated;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 131458, 131488);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.InterpolatedStringTextOperation
                f_10951_131510_131587(Microsoft.CodeAnalysis.IOperation
                text, Microsoft.CodeAnalysis.SemanticModel
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.InterpolatedStringTextOperation(text, semanticModel, syntax, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 131510, 131587);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10951, 131169, 131599);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10951, 131169, 131599);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private IConstantPatternOperation CreateBoundConstantPatternOperation(BoundConstantPattern boundConstantPattern)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10951, 131611, 132245);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 131748, 131802);

                IOperation
                value = f_10951_131767_131801(this, f_10951_131774_131800(boundConstantPattern))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 131816, 131864);

                SyntaxNode
                syntax = boundConstantPattern.Syntax
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 131878, 131938);

                bool
                isImplicit = f_10951_131896_131937(boundConstantPattern)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 131952, 132006);

                TypeSymbol
                inputType = f_10951_131975_132005(boundConstantPattern)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 132020, 132080);

                TypeSymbol
                narrowedType = f_10951_132046_132079(boundConstantPattern)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 132094, 132234);

                return f_10951_132101_132233(value, f_10951_132137_132164(inputType), f_10951_132166_132196(narrowedType), _semanticModel, syntax, isImplicit);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10951, 131611, 132245);

                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10951_131774_131800(Microsoft.CodeAnalysis.CSharp.BoundConstantPattern
                this_param)
                {
                    var return_v = this_param.Value;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 131774, 131800);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_10951_131767_131801(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                boundNode)
                {
                    var return_v = this_param.Create((Microsoft.CodeAnalysis.CSharp.BoundNode)boundNode);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 131767, 131801);
                    return return_v;
                }


                bool
                f_10951_131896_131937(Microsoft.CodeAnalysis.CSharp.BoundConstantPattern
                this_param)
                {
                    var return_v = this_param.WasCompilerGenerated;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 131896, 131937);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                f_10951_131975_132005(Microsoft.CodeAnalysis.CSharp.BoundConstantPattern
                this_param)
                {
                    var return_v = this_param.InputType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 131975, 132005);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                f_10951_132046_132079(Microsoft.CodeAnalysis.CSharp.BoundConstantPattern
                this_param)
                {
                    var return_v = this_param.NarrowedType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 132046, 132079);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ITypeSymbol?
                f_10951_132137_132164(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                symbol)
                {
                    var return_v = symbol.GetPublicSymbol();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 132137, 132164);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ITypeSymbol?
                f_10951_132166_132196(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                symbol)
                {
                    var return_v = symbol.GetPublicSymbol();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 132166, 132196);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.ConstantPatternOperation
                f_10951_132101_132233(Microsoft.CodeAnalysis.IOperation
                value, Microsoft.CodeAnalysis.ITypeSymbol
                inputType, Microsoft.CodeAnalysis.ITypeSymbol
                narrowedType, Microsoft.CodeAnalysis.SemanticModel
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.ConstantPatternOperation(value, inputType, narrowedType, semanticModel, syntax, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 132101, 132233);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10951, 131611, 132245);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10951, 131611, 132245);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private IOperation CreateBoundRelationalPatternOperation(BoundRelationalPattern boundRelationalPattern)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10951, 132257, 133021);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 132385, 132484);

                BinaryOperatorKind
                operatorKind = f_10951_132419_132483(f_10951_132451_132482(boundRelationalPattern))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 132498, 132554);

                IOperation
                value = f_10951_132517_132553(this, f_10951_132524_132552(boundRelationalPattern))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 132568, 132618);

                SyntaxNode
                syntax = boundRelationalPattern.Syntax
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 132632, 132694);

                bool
                isImplicit = f_10951_132650_132693(boundRelationalPattern)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 132708, 132764);

                TypeSymbol
                inputType = f_10951_132731_132763(boundRelationalPattern)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 132778, 132840);

                TypeSymbol
                narrowedType = f_10951_132804_132839(boundRelationalPattern)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 132854, 133010);

                return f_10951_132861_133009(operatorKind, value, f_10951_132913_132940(inputType), f_10951_132942_132972(narrowedType), _semanticModel, syntax, isImplicit);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10951, 132257, 133021);

                Microsoft.CodeAnalysis.CSharp.BinaryOperatorKind
                f_10951_132451_132482(Microsoft.CodeAnalysis.CSharp.BoundRelationalPattern
                this_param)
                {
                    var return_v = this_param.Relation;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 132451, 132482);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.BinaryOperatorKind
                f_10951_132419_132483(Microsoft.CodeAnalysis.CSharp.BinaryOperatorKind
                operatorKind)
                {
                    var return_v = Helper.DeriveBinaryOperatorKind(operatorKind);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 132419, 132483);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10951_132524_132552(Microsoft.CodeAnalysis.CSharp.BoundRelationalPattern
                this_param)
                {
                    var return_v = this_param.Value;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 132524, 132552);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_10951_132517_132553(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                boundNode)
                {
                    var return_v = this_param.Create((Microsoft.CodeAnalysis.CSharp.BoundNode)boundNode);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 132517, 132553);
                    return return_v;
                }


                bool
                f_10951_132650_132693(Microsoft.CodeAnalysis.CSharp.BoundRelationalPattern
                this_param)
                {
                    var return_v = this_param.WasCompilerGenerated;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 132650, 132693);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                f_10951_132731_132763(Microsoft.CodeAnalysis.CSharp.BoundRelationalPattern
                this_param)
                {
                    var return_v = this_param.InputType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 132731, 132763);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                f_10951_132804_132839(Microsoft.CodeAnalysis.CSharp.BoundRelationalPattern
                this_param)
                {
                    var return_v = this_param.NarrowedType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 132804, 132839);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ITypeSymbol?
                f_10951_132913_132940(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                symbol)
                {
                    var return_v = symbol.GetPublicSymbol();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 132913, 132940);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ITypeSymbol?
                f_10951_132942_132972(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                symbol)
                {
                    var return_v = symbol.GetPublicSymbol();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 132942, 132972);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.RelationalPatternOperation
                f_10951_132861_133009(Microsoft.CodeAnalysis.Operations.BinaryOperatorKind
                operatorKind, Microsoft.CodeAnalysis.IOperation
                value, Microsoft.CodeAnalysis.ITypeSymbol
                inputType, Microsoft.CodeAnalysis.ITypeSymbol
                narrowedType, Microsoft.CodeAnalysis.SemanticModel
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.RelationalPatternOperation(operatorKind, value, inputType, narrowedType, semanticModel, syntax, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 132861, 133009);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10951, 132257, 133021);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10951, 132257, 133021);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private IDeclarationPatternOperation CreateBoundDeclarationPatternOperation(BoundDeclarationPattern boundDeclarationPattern)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10951, 133033, 134201);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 133182, 133253);

                ISymbol?
                variable = f_10951_133202_133252(f_10951_133202_133234(boundDeclarationPattern))
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 133267, 133526) || true) && (variable == null && (DynAbs.Tracing.TraceSender.Expression_True(10951, 133271, 133366) && f_10951_133291_133335_M(DynAbs.Tracing.TraceSender.TraceConditionalAccessExpression(f_10951_133291_133329(boundDeclarationPattern), 10951, 133291, 133335)?.Kind) == BoundKind.DiscardExpression))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 133267, 133526);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 133400, 133511);

                    variable = f_10951_133411_133510(f_10951_133411_133492(((BoundDiscardExpression)f_10951_133436_133474(boundDeclarationPattern))));
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 133267, 133526);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 133542, 133618);

                ITypeSymbol
                inputType = f_10951_133566_133617(f_10951_133566_133599(boundDeclarationPattern))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 133632, 133714);

                ITypeSymbol
                narrowedType = f_10951_133659_133713(f_10951_133659_133695(boundDeclarationPattern))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 133728, 133777);

                bool
                acceptsNull = f_10951_133747_133776(boundDeclarationPattern)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 133791, 133898);

                ITypeSymbol?
                matchedType = (DynAbs.Tracing.TraceSender.Conditional_F1(10951, 133818, 133829) || ((acceptsNull && DynAbs.Tracing.TraceSender.Conditional_F2(10951, 133832, 133836)) || DynAbs.Tracing.TraceSender.Conditional_F3(10951, 133839, 133897))) ? null : f_10951_133839_133897(f_10951_133839_133875(boundDeclarationPattern))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 133912, 133963);

                SyntaxNode
                syntax = boundDeclarationPattern.Syntax
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 133977, 134040);

                bool
                isImplicit = f_10951_133995_134039(boundDeclarationPattern)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 134054, 134190);

                return f_10951_134061_134189(matchedType, acceptsNull, variable, inputType, narrowedType, _semanticModel, syntax, isImplicit);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10951, 133033, 134201);

                Microsoft.CodeAnalysis.CSharp.Symbol?
                f_10951_133202_133234(Microsoft.CodeAnalysis.CSharp.BoundDeclarationPattern
                this_param)
                {
                    var return_v = this_param.Variable;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 133202, 133234);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ISymbol?
                f_10951_133202_133252(Microsoft.CodeAnalysis.CSharp.Symbol?
                symbol)
                {
                    var return_v = symbol.GetPublicSymbol();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 133202, 133252);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression?
                f_10951_133291_133329(Microsoft.CodeAnalysis.CSharp.BoundDeclarationPattern
                this_param)
                {
                    var return_v = this_param.VariableAccess;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 133291, 133329);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundKind?
                f_10951_133291_133335_M(Microsoft.CodeAnalysis.CSharp.BoundKind?
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 133291, 133335);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10951_133436_133474(Microsoft.CodeAnalysis.CSharp.BoundDeclarationPattern
                this_param)
                {
                    var return_v = this_param.VariableAccess;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 133436, 133474);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbol
                f_10951_133411_133492(Microsoft.CodeAnalysis.CSharp.BoundDiscardExpression
                this_param)
                {
                    var return_v = this_param.ExpressionSymbol;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 133411, 133492);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ISymbol?
                f_10951_133411_133510(Microsoft.CodeAnalysis.CSharp.Symbol
                symbol)
                {
                    var return_v = symbol.GetPublicSymbol();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 133411, 133510);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                f_10951_133566_133599(Microsoft.CodeAnalysis.CSharp.BoundDeclarationPattern
                this_param)
                {
                    var return_v = this_param.InputType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 133566, 133599);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ITypeSymbol?
                f_10951_133566_133617(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                symbol)
                {
                    var return_v = symbol.GetPublicSymbol();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 133566, 133617);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                f_10951_133659_133695(Microsoft.CodeAnalysis.CSharp.BoundDeclarationPattern
                this_param)
                {
                    var return_v = this_param.NarrowedType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 133659, 133695);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ITypeSymbol?
                f_10951_133659_133713(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                symbol)
                {
                    var return_v = symbol.GetPublicSymbol();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 133659, 133713);
                    return return_v;
                }


                bool
                f_10951_133747_133776(Microsoft.CodeAnalysis.CSharp.BoundDeclarationPattern
                this_param)
                {
                    var return_v = this_param.IsVar;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 133747, 133776);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundTypeExpression
                f_10951_133839_133875(Microsoft.CodeAnalysis.CSharp.BoundDeclarationPattern
                this_param)
                {
                    var return_v = this_param.DeclaredType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 133839, 133875);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ITypeSymbol?
                f_10951_133839_133897(Microsoft.CodeAnalysis.CSharp.BoundTypeExpression
                this_param)
                {
                    var return_v = this_param.GetPublicTypeSymbol();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 133839, 133897);
                    return return_v;
                }


                bool
                f_10951_133995_134039(Microsoft.CodeAnalysis.CSharp.BoundDeclarationPattern
                this_param)
                {
                    var return_v = this_param.WasCompilerGenerated;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 133995, 134039);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.DeclarationPatternOperation
                f_10951_134061_134189(Microsoft.CodeAnalysis.ITypeSymbol?
                matchedType, bool
                matchesNull, Microsoft.CodeAnalysis.ISymbol?
                declaredSymbol, Microsoft.CodeAnalysis.ITypeSymbol
                inputType, Microsoft.CodeAnalysis.ITypeSymbol
                narrowedType, Microsoft.CodeAnalysis.SemanticModel
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.DeclarationPatternOperation(matchedType, matchesNull, declaredSymbol, inputType, narrowedType, semanticModel, syntax, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 134061, 134189);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10951, 133033, 134201);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10951, 133033, 134201);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private IRecursivePatternOperation CreateBoundRecursivePatternOperation(BoundRecursivePattern boundRecursivePattern)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10951, 134213, 135790);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 134354, 134491);

                ITypeSymbol
                matchedType = f_10951_134380_134490((f_10951_134381_134421_M(DynAbs.Tracing.TraceSender.TraceConditionalAccessExpression(f_10951_134381_134415(boundRecursivePattern), 10951, 134381, 134421)?.Type) ?? (DynAbs.Tracing.TraceSender.Expression_Null<Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?>(10951, 134381, 134471) ?? f_10951_134425_134471(f_10951_134425_134456(boundRecursivePattern)))))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 134505, 134812);

                ImmutableArray<IPatternOperation>
                deconstructionSubpatterns = (DynAbs.Tracing.TraceSender.Conditional_F1(10951, 134567, 134643) || ((f_10951_134567_134603(boundRecursivePattern) is { IsDefault: false } deconstructions
                && DynAbs.Tracing.TraceSender.Conditional_F2(10951, 134663, 134752)) || DynAbs.Tracing.TraceSender.Conditional_F3(10951, 134772, 134811))) ? deconstructions.SelectAsArray((p, fac) => (IPatternOperation)fac.Create(p.Pattern), this) : ImmutableArray<IPatternOperation>.Empty
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 134826, 135180);

                ImmutableArray<IPropertySubpatternOperation>
                propertySubpatterns = (DynAbs.Tracing.TraceSender.Conditional_F1(10951, 134893, 134960) || ((f_10951_134893_134925(boundRecursivePattern) is { IsDefault: false } properties
                && DynAbs.Tracing.TraceSender.Conditional_F2(10951, 134980, 135109)) || DynAbs.Tracing.TraceSender.Conditional_F3(10951, 135129, 135179))) ? properties.SelectAsArray((p, arg) => arg.Fac.CreatePropertySubpattern(p, arg.MatchedType), (Fac: this, MatchedType: matchedType)) : ImmutableArray<IPropertySubpatternOperation>.Empty
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 135194, 135779);

                return f_10951_135201_135778(matchedType, f_10951_135279_135336(f_10951_135279_135318(boundRecursivePattern)), deconstructionSubpatterns, propertySubpatterns, f_10951_135437_135485(f_10951_135437_135467(boundRecursivePattern)), f_10951_135504_135553(f_10951_135504_135535(boundRecursivePattern)), f_10951_135572_135624(f_10951_135572_135606(boundRecursivePattern)), _semanticModel, boundRecursivePattern.Syntax, isImplicit: f_10951_135735_135777(boundRecursivePattern));
                DynAbs.Tracing.TraceSender.TraceExitMethod(10951, 134213, 135790);

                Microsoft.CodeAnalysis.CSharp.BoundTypeExpression?
                f_10951_134381_134415(Microsoft.CodeAnalysis.CSharp.BoundRecursivePattern
                this_param)
                {
                    var return_v = this_param.DeclaredType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 134381, 134415);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?
                f_10951_134381_134421_M(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 134381, 134421);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                f_10951_134425_134456(Microsoft.CodeAnalysis.CSharp.BoundRecursivePattern
                this_param)
                {
                    var return_v = this_param.InputType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 134425, 134456);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                f_10951_134425_134471(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                type)
                {
                    var return_v = type.StrippedType();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 134425, 134471);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ITypeSymbol?
                f_10951_134380_134490(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                symbol)
                {
                    var return_v = symbol.GetPublicSymbol();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 134380, 134490);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundSubpattern>
                f_10951_134567_134603(Microsoft.CodeAnalysis.CSharp.BoundRecursivePattern
                this_param)
                {
                    var return_v = this_param.Deconstruction;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 134567, 134603);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundSubpattern>
                f_10951_134893_134925(Microsoft.CodeAnalysis.CSharp.BoundRecursivePattern
                this_param)
                {
                    var return_v = this_param.Properties;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 134893, 134925);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol?
                f_10951_135279_135318(Microsoft.CodeAnalysis.CSharp.BoundRecursivePattern
                this_param)
                {
                    var return_v = this_param.DeconstructMethod;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 135279, 135318);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IMethodSymbol?
                f_10951_135279_135336(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol?
                symbol)
                {
                    var return_v = symbol.GetPublicSymbol();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 135279, 135336);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbol?
                f_10951_135437_135467(Microsoft.CodeAnalysis.CSharp.BoundRecursivePattern
                this_param)
                {
                    var return_v = this_param.Variable;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 135437, 135467);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ISymbol?
                f_10951_135437_135485(Microsoft.CodeAnalysis.CSharp.Symbol?
                symbol)
                {
                    var return_v = symbol.GetPublicSymbol();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 135437, 135485);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                f_10951_135504_135535(Microsoft.CodeAnalysis.CSharp.BoundRecursivePattern
                this_param)
                {
                    var return_v = this_param.InputType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 135504, 135535);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ITypeSymbol?
                f_10951_135504_135553(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                symbol)
                {
                    var return_v = symbol.GetPublicSymbol();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 135504, 135553);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                f_10951_135572_135606(Microsoft.CodeAnalysis.CSharp.BoundRecursivePattern
                this_param)
                {
                    var return_v = this_param.NarrowedType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 135572, 135606);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ITypeSymbol?
                f_10951_135572_135624(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                symbol)
                {
                    var return_v = symbol.GetPublicSymbol();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 135572, 135624);
                    return return_v;
                }


                bool
                f_10951_135735_135777(Microsoft.CodeAnalysis.CSharp.BoundRecursivePattern
                this_param)
                {
                    var return_v = this_param.WasCompilerGenerated;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 135735, 135777);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.RecursivePatternOperation
                f_10951_135201_135778(Microsoft.CodeAnalysis.ITypeSymbol
                matchedType, Microsoft.CodeAnalysis.IMethodSymbol?
                deconstructSymbol, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Operations.IPatternOperation>
                deconstructionSubpatterns, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Operations.IPropertySubpatternOperation>
                propertySubpatterns, Microsoft.CodeAnalysis.ISymbol?
                declaredSymbol, Microsoft.CodeAnalysis.ITypeSymbol
                inputType, Microsoft.CodeAnalysis.ITypeSymbol
                narrowedType, Microsoft.CodeAnalysis.SemanticModel
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.RecursivePatternOperation(matchedType, (Microsoft.CodeAnalysis.ISymbol?)deconstructSymbol, deconstructionSubpatterns, propertySubpatterns, declaredSymbol, inputType, narrowedType, semanticModel, syntax, isImplicit: isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 135201, 135778);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10951, 134213, 135790);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10951, 134213, 135790);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private IRecursivePatternOperation CreateBoundRecursivePatternOperation(BoundITuplePattern boundITuplePattern)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10951, 135802, 136914);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 135937, 136230);

                ImmutableArray<IPatternOperation>
                deconstructionSubpatterns = (DynAbs.Tracing.TraceSender.Conditional_F1(10951, 135999, 136065) || ((f_10951_135999_136029(boundITuplePattern) is { IsDefault: false } subpatterns
                && DynAbs.Tracing.TraceSender.Conditional_F2(10951, 136085, 136170)) || DynAbs.Tracing.TraceSender.Conditional_F3(10951, 136190, 136229))) ? subpatterns.SelectAsArray((p, fac) => (IPatternOperation)fac.Create(p.Pattern), this) : ImmutableArray<IPatternOperation>.Empty
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 136246, 136903);

                return f_10951_136253_136902(f_10951_136301_136362(f_10951_136301_136344(f_10951_136301_136329(boundITuplePattern))), f_10951_136381_136448(f_10951_136381_136430(f_10951_136381_136415(boundITuplePattern))), deconstructionSubpatterns, propertySubpatterns: ImmutableArray<IPropertySubpatternOperation>.Empty, declaredSymbol: null, f_10951_136640_136686(f_10951_136640_136668(boundITuplePattern)), f_10951_136705_136754(f_10951_136705_136736(boundITuplePattern)), _semanticModel, boundITuplePattern.Syntax, isImplicit: f_10951_136862_136901(boundITuplePattern));
                DynAbs.Tracing.TraceSender.TraceExitMethod(10951, 135802, 136914);

                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundSubpattern>
                f_10951_135999_136029(Microsoft.CodeAnalysis.CSharp.BoundITuplePattern
                this_param)
                {
                    var return_v = this_param.Subpatterns;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 135999, 136029);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                f_10951_136301_136329(Microsoft.CodeAnalysis.CSharp.BoundITuplePattern
                this_param)
                {
                    var return_v = this_param.InputType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 136301, 136329);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                f_10951_136301_136344(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                type)
                {
                    var return_v = type.StrippedType();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 136301, 136344);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ITypeSymbol?
                f_10951_136301_136362(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                symbol)
                {
                    var return_v = symbol.GetPublicSymbol();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 136301, 136362);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                f_10951_136381_136415(Microsoft.CodeAnalysis.CSharp.BoundITuplePattern
                this_param)
                {
                    var return_v = this_param.GetLengthMethod;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 136381, 136415);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                f_10951_136381_136430(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                this_param)
                {
                    var return_v = this_param.ContainingType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 136381, 136430);
                    return return_v;
                }


                Microsoft.CodeAnalysis.INamedTypeSymbol?
                f_10951_136381_136448(Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                symbol)
                {
                    var return_v = symbol.GetPublicSymbol();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 136381, 136448);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                f_10951_136640_136668(Microsoft.CodeAnalysis.CSharp.BoundITuplePattern
                this_param)
                {
                    var return_v = this_param.InputType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 136640, 136668);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ITypeSymbol?
                f_10951_136640_136686(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                symbol)
                {
                    var return_v = symbol.GetPublicSymbol();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 136640, 136686);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                f_10951_136705_136736(Microsoft.CodeAnalysis.CSharp.BoundITuplePattern
                this_param)
                {
                    var return_v = this_param.NarrowedType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 136705, 136736);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ITypeSymbol?
                f_10951_136705_136754(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                symbol)
                {
                    var return_v = symbol.GetPublicSymbol();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 136705, 136754);
                    return return_v;
                }


                bool
                f_10951_136862_136901(Microsoft.CodeAnalysis.CSharp.BoundITuplePattern
                this_param)
                {
                    var return_v = this_param.WasCompilerGenerated;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 136862, 136901);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.RecursivePatternOperation
                f_10951_136253_136902(Microsoft.CodeAnalysis.ITypeSymbol
                matchedType, Microsoft.CodeAnalysis.INamedTypeSymbol
                deconstructSymbol, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Operations.IPatternOperation>
                deconstructionSubpatterns, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Operations.IPropertySubpatternOperation>
                propertySubpatterns, Microsoft.CodeAnalysis.ISymbol?
                declaredSymbol, Microsoft.CodeAnalysis.ITypeSymbol
                inputType, Microsoft.CodeAnalysis.ITypeSymbol
                narrowedType, Microsoft.CodeAnalysis.SemanticModel
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.RecursivePatternOperation(matchedType, (Microsoft.CodeAnalysis.ISymbol)deconstructSymbol, deconstructionSubpatterns, propertySubpatterns: propertySubpatterns, declaredSymbol: declaredSymbol, inputType, narrowedType, semanticModel, syntax, isImplicit: isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 136253, 136902);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10951, 135802, 136914);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10951, 135802, 136914);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private IOperation CreateBoundTypePatternOperation(BoundTypePattern boundTypePattern)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10951, 136926, 137479);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 137036, 137468);

                return f_10951_137043_137467(matchedType: f_10951_137099_137146(f_10951_137099_137128(boundTypePattern)), inputType: f_10951_137176_137220(f_10951_137176_137202(boundTypePattern)), narrowedType: f_10951_137253_137300(f_10951_137253_137282(boundTypePattern)), semanticModel: _semanticModel, syntax: boundTypePattern.Syntax, isImplicit: f_10951_137429_137466(boundTypePattern));
                DynAbs.Tracing.TraceSender.TraceExitMethod(10951, 136926, 137479);

                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                f_10951_137099_137128(Microsoft.CodeAnalysis.CSharp.BoundTypePattern
                this_param)
                {
                    var return_v = this_param.NarrowedType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 137099, 137128);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ITypeSymbol?
                f_10951_137099_137146(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                symbol)
                {
                    var return_v = symbol.GetPublicSymbol();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 137099, 137146);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                f_10951_137176_137202(Microsoft.CodeAnalysis.CSharp.BoundTypePattern
                this_param)
                {
                    var return_v = this_param.InputType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 137176, 137202);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ITypeSymbol?
                f_10951_137176_137220(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                symbol)
                {
                    var return_v = symbol.GetPublicSymbol();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 137176, 137220);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                f_10951_137253_137282(Microsoft.CodeAnalysis.CSharp.BoundTypePattern
                this_param)
                {
                    var return_v = this_param.NarrowedType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 137253, 137282);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ITypeSymbol?
                f_10951_137253_137300(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                symbol)
                {
                    var return_v = symbol.GetPublicSymbol();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 137253, 137300);
                    return return_v;
                }


                bool
                f_10951_137429_137466(Microsoft.CodeAnalysis.CSharp.BoundTypePattern
                this_param)
                {
                    var return_v = this_param.WasCompilerGenerated;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 137429, 137466);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.TypePatternOperation
                f_10951_137043_137467(Microsoft.CodeAnalysis.ITypeSymbol
                matchedType, Microsoft.CodeAnalysis.ITypeSymbol
                inputType, Microsoft.CodeAnalysis.ITypeSymbol
                narrowedType, Microsoft.CodeAnalysis.SemanticModel
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.TypePatternOperation(matchedType: matchedType, inputType: inputType, narrowedType: narrowedType, semanticModel: semanticModel, syntax: syntax, isImplicit: isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 137043, 137467);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10951, 136926, 137479);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10951, 136926, 137479);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private IOperation CreateBoundNegatedPatternOperation(BoundNegatedPattern boundNegatedPattern)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10951, 137491, 138014);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 137610, 138003);

                return f_10951_137617_138002((IPatternOperation)f_10951_137682_137717(this, f_10951_137689_137716(boundNegatedPattern)), f_10951_137736_137783(f_10951_137736_137765(boundNegatedPattern)), f_10951_137802_137852(f_10951_137802_137834(boundNegatedPattern)), _semanticModel, boundNegatedPattern.Syntax, isImplicit: f_10951_137961_138001(boundNegatedPattern));
                DynAbs.Tracing.TraceSender.TraceExitMethod(10951, 137491, 138014);

                Microsoft.CodeAnalysis.CSharp.BoundPattern
                f_10951_137689_137716(Microsoft.CodeAnalysis.CSharp.BoundNegatedPattern
                this_param)
                {
                    var return_v = this_param.Negated;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 137689, 137716);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_10951_137682_137717(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundPattern
                boundNode)
                {
                    var return_v = this_param.Create((Microsoft.CodeAnalysis.CSharp.BoundNode)boundNode);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 137682, 137717);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                f_10951_137736_137765(Microsoft.CodeAnalysis.CSharp.BoundNegatedPattern
                this_param)
                {
                    var return_v = this_param.InputType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 137736, 137765);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ITypeSymbol?
                f_10951_137736_137783(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                symbol)
                {
                    var return_v = symbol.GetPublicSymbol();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 137736, 137783);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                f_10951_137802_137834(Microsoft.CodeAnalysis.CSharp.BoundNegatedPattern
                this_param)
                {
                    var return_v = this_param.NarrowedType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 137802, 137834);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ITypeSymbol?
                f_10951_137802_137852(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                symbol)
                {
                    var return_v = symbol.GetPublicSymbol();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 137802, 137852);
                    return return_v;
                }


                bool
                f_10951_137961_138001(Microsoft.CodeAnalysis.CSharp.BoundNegatedPattern
                this_param)
                {
                    var return_v = this_param.WasCompilerGenerated;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 137961, 138001);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.NegatedPatternOperation
                f_10951_137617_138002(Microsoft.CodeAnalysis.IOperation
                pattern, Microsoft.CodeAnalysis.ITypeSymbol
                inputType, Microsoft.CodeAnalysis.ITypeSymbol
                narrowedType, Microsoft.CodeAnalysis.SemanticModel
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.NegatedPatternOperation((Microsoft.CodeAnalysis.Operations.IPatternOperation)pattern, inputType, narrowedType, semanticModel, syntax, isImplicit: isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 137617, 138002);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10951, 137491, 138014);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10951, 137491, 138014);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private IOperation CreateBoundBinaryPatternOperation(BoundBinaryPattern boundBinaryPattern)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10951, 138026, 138705);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 138142, 138694);

                return f_10951_138149_138693((DynAbs.Tracing.TraceSender.Conditional_F1(10951, 138194, 138224) || ((f_10951_138194_138224(boundBinaryPattern) && DynAbs.Tracing.TraceSender.Conditional_F2(10951, 138227, 138248)) || DynAbs.Tracing.TraceSender.Conditional_F3(10951, 138251, 138273))) ? BinaryOperatorKind.Or : BinaryOperatorKind.And, (IPatternOperation)f_10951_138311_138342(this, f_10951_138318_138341(boundBinaryPattern)), (IPatternOperation)f_10951_138380_138412(this, f_10951_138387_138411(boundBinaryPattern)), f_10951_138431_138477(f_10951_138431_138459(boundBinaryPattern)), f_10951_138496_138545(f_10951_138496_138527(boundBinaryPattern)), _semanticModel, boundBinaryPattern.Syntax, isImplicit: f_10951_138653_138692(boundBinaryPattern));
                DynAbs.Tracing.TraceSender.TraceExitMethod(10951, 138026, 138705);

                bool
                f_10951_138194_138224(Microsoft.CodeAnalysis.CSharp.BoundBinaryPattern
                this_param)
                {
                    var return_v = this_param.Disjunction;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 138194, 138224);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundPattern
                f_10951_138318_138341(Microsoft.CodeAnalysis.CSharp.BoundBinaryPattern
                this_param)
                {
                    var return_v = this_param.Left;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 138318, 138341);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_10951_138311_138342(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundPattern
                boundNode)
                {
                    var return_v = this_param.Create((Microsoft.CodeAnalysis.CSharp.BoundNode)boundNode);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 138311, 138342);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundPattern
                f_10951_138387_138411(Microsoft.CodeAnalysis.CSharp.BoundBinaryPattern
                this_param)
                {
                    var return_v = this_param.Right;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 138387, 138411);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_10951_138380_138412(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundPattern
                boundNode)
                {
                    var return_v = this_param.Create((Microsoft.CodeAnalysis.CSharp.BoundNode)boundNode);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 138380, 138412);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                f_10951_138431_138459(Microsoft.CodeAnalysis.CSharp.BoundBinaryPattern
                this_param)
                {
                    var return_v = this_param.InputType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 138431, 138459);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ITypeSymbol?
                f_10951_138431_138477(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                symbol)
                {
                    var return_v = symbol.GetPublicSymbol();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 138431, 138477);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                f_10951_138496_138527(Microsoft.CodeAnalysis.CSharp.BoundBinaryPattern
                this_param)
                {
                    var return_v = this_param.NarrowedType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 138496, 138527);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ITypeSymbol?
                f_10951_138496_138545(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                symbol)
                {
                    var return_v = symbol.GetPublicSymbol();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 138496, 138545);
                    return return_v;
                }


                bool
                f_10951_138653_138692(Microsoft.CodeAnalysis.CSharp.BoundBinaryPattern
                this_param)
                {
                    var return_v = this_param.WasCompilerGenerated;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 138653, 138692);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.BinaryPatternOperation
                f_10951_138149_138693(Microsoft.CodeAnalysis.Operations.BinaryOperatorKind
                operatorKind, Microsoft.CodeAnalysis.IOperation
                leftPattern, Microsoft.CodeAnalysis.IOperation
                rightPattern, Microsoft.CodeAnalysis.ITypeSymbol
                inputType, Microsoft.CodeAnalysis.ITypeSymbol
                narrowedType, Microsoft.CodeAnalysis.SemanticModel
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.BinaryPatternOperation(operatorKind, (Microsoft.CodeAnalysis.Operations.IPatternOperation)leftPattern, (Microsoft.CodeAnalysis.Operations.IPatternOperation)rightPattern, inputType, narrowedType, semanticModel, syntax, isImplicit: isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 138149, 138693);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10951, 138026, 138705);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10951, 138026, 138705);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private ISwitchOperation CreateBoundSwitchStatementOperation(BoundSwitchStatement boundSwitchStatement)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10951, 138717, 139508);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 138845, 138904);

                IOperation
                value = f_10951_138864_138903(this, f_10951_138871_138902(boundSwitchStatement))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 138918, 139058);

                ImmutableArray<ISwitchCaseOperation>
                cases = f_10951_138963_139057(this, f_10951_139021_139056(boundSwitchStatement))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 139072, 139162);

                ImmutableArray<ILocalSymbol>
                locals = boundSwitchStatement.InnerLocals.GetPublicSymbols()
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 139176, 139251);

                ILabelSymbol
                exitLabel = f_10951_139201_139250(f_10951_139201_139232(boundSwitchStatement))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 139265, 139313);

                SyntaxNode
                syntax = boundSwitchStatement.Syntax
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 139327, 139387);

                bool
                isImplicit = f_10951_139345_139386(boundSwitchStatement)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 139401, 139497);

                return f_10951_139408_139496(locals, value, cases, exitLabel, _semanticModel, syntax, isImplicit);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10951, 138717, 139508);

                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10951_138871_138902(Microsoft.CodeAnalysis.CSharp.BoundSwitchStatement
                this_param)
                {
                    var return_v = this_param.Expression;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 138871, 138902);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_10951_138864_138903(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                boundNode)
                {
                    var return_v = this_param.Create((Microsoft.CodeAnalysis.CSharp.BoundNode)boundNode);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 138864, 138903);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundSwitchSection>
                f_10951_139021_139056(Microsoft.CodeAnalysis.CSharp.BoundSwitchStatement
                this_param)
                {
                    var return_v = this_param.SwitchSections;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 139021, 139056);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Operations.ISwitchCaseOperation>
                f_10951_138963_139057(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundSwitchSection>
                boundNodes)
                {
                    var return_v = this_param.CreateFromArray<Microsoft.CodeAnalysis.CSharp.BoundSwitchSection, Microsoft.CodeAnalysis.Operations.ISwitchCaseOperation>(boundNodes);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 138963, 139057);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.GeneratedLabelSymbol
                f_10951_139201_139232(Microsoft.CodeAnalysis.CSharp.BoundSwitchStatement
                this_param)
                {
                    var return_v = this_param.BreakLabel;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 139201, 139232);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ILabelSymbol?
                f_10951_139201_139250(Microsoft.CodeAnalysis.CSharp.Symbols.GeneratedLabelSymbol
                symbol)
                {
                    var return_v = symbol.GetPublicSymbol();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 139201, 139250);
                    return return_v;
                }


                bool
                f_10951_139345_139386(Microsoft.CodeAnalysis.CSharp.BoundSwitchStatement
                this_param)
                {
                    var return_v = this_param.WasCompilerGenerated;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 139345, 139386);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.SwitchOperation
                f_10951_139408_139496(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.ILocalSymbol>
                locals, Microsoft.CodeAnalysis.IOperation
                value, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Operations.ISwitchCaseOperation>
                cases, Microsoft.CodeAnalysis.ILabelSymbol
                exitLabel, Microsoft.CodeAnalysis.SemanticModel
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.SwitchOperation(locals, value, cases, exitLabel, semanticModel, syntax, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 139408, 139496);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10951, 138717, 139508);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10951, 138717, 139508);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private ISwitchCaseOperation CreateBoundSwitchSectionOperation(BoundSwitchSection boundSwitchSection)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10951, 139520, 140196);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 139646, 139782);

                ImmutableArray<ICaseClauseOperation>
                clauses = f_10951_139693_139781(this, f_10951_139749_139780(boundSwitchSection))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 139796, 139905);

                ImmutableArray<IOperation>
                body = f_10951_139830_139904(this, f_10951_139874_139903(boundSwitchSection))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 139919, 140002);

                ImmutableArray<ILocalSymbol>
                locals = boundSwitchSection.Locals.GetPublicSymbols()
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 140018, 140185);

                return f_10951_140025_140184(clauses, body, locals, condition: null, _semanticModel, boundSwitchSection.Syntax, isImplicit: f_10951_140144_140183(boundSwitchSection));
                DynAbs.Tracing.TraceSender.TraceExitMethod(10951, 139520, 140196);

                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundSwitchLabel>
                f_10951_139749_139780(Microsoft.CodeAnalysis.CSharp.BoundSwitchSection
                this_param)
                {
                    var return_v = this_param.SwitchLabels;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 139749, 139780);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Operations.ICaseClauseOperation>
                f_10951_139693_139781(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundSwitchLabel>
                boundNodes)
                {
                    var return_v = this_param.CreateFromArray<Microsoft.CodeAnalysis.CSharp.BoundSwitchLabel, Microsoft.CodeAnalysis.Operations.ICaseClauseOperation>(boundNodes);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 139693, 139781);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundStatement>
                f_10951_139874_139903(Microsoft.CodeAnalysis.CSharp.BoundSwitchSection
                this_param)
                {
                    var return_v = this_param.Statements;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 139874, 139903);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.IOperation>
                f_10951_139830_139904(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundStatement>
                boundNodes)
                {
                    var return_v = this_param.CreateFromArray<Microsoft.CodeAnalysis.CSharp.BoundStatement, Microsoft.CodeAnalysis.IOperation>(boundNodes);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 139830, 139904);
                    return return_v;
                }


                bool
                f_10951_140144_140183(Microsoft.CodeAnalysis.CSharp.BoundSwitchSection
                this_param)
                {
                    var return_v = this_param.WasCompilerGenerated;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 140144, 140183);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.SwitchCaseOperation
                f_10951_140025_140184(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Operations.ICaseClauseOperation>
                clauses, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.IOperation>
                body, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.ILocalSymbol>
                locals, Microsoft.CodeAnalysis.IOperation?
                condition, Microsoft.CodeAnalysis.SemanticModel
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.SwitchCaseOperation(clauses, body, locals, condition: condition, semanticModel, syntax, isImplicit: isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 140025, 140184);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10951, 139520, 140196);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10951, 139520, 140196);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private ISwitchExpressionOperation CreateBoundSwitchExpressionOperation(BoundSwitchExpression boundSwitchExpression)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10951, 140208, 140896);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 140349, 140409);

                IOperation
                value = f_10951_140368_140408(this, f_10951_140375_140407(boundSwitchExpression))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 140423, 140583);

                ImmutableArray<ISwitchExpressionArmOperation>
                arms = f_10951_140476_140582(this, f_10951_140549_140581(boundSwitchExpression))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 140597, 140885);

                return f_10951_140604_140884(value, arms, _semanticModel, boundSwitchExpression.Syntax, f_10951_140779_140822(boundSwitchExpression), f_10951_140841_140883(boundSwitchExpression));
                DynAbs.Tracing.TraceSender.TraceExitMethod(10951, 140208, 140896);

                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10951_140375_140407(Microsoft.CodeAnalysis.CSharp.BoundSwitchExpression
                this_param)
                {
                    var return_v = this_param.Expression;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 140375, 140407);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_10951_140368_140408(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                boundNode)
                {
                    var return_v = this_param.Create((Microsoft.CodeAnalysis.CSharp.BoundNode)boundNode);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 140368, 140408);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundSwitchExpressionArm>
                f_10951_140549_140581(Microsoft.CodeAnalysis.CSharp.BoundSwitchExpression
                this_param)
                {
                    var return_v = this_param.SwitchArms;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 140549, 140581);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Operations.ISwitchExpressionArmOperation>
                f_10951_140476_140582(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundSwitchExpressionArm>
                boundNodes)
                {
                    var return_v = this_param.CreateFromArray<Microsoft.CodeAnalysis.CSharp.BoundSwitchExpressionArm, Microsoft.CodeAnalysis.Operations.ISwitchExpressionArmOperation>(boundNodes);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 140476, 140582);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ITypeSymbol?
                f_10951_140779_140822(Microsoft.CodeAnalysis.CSharp.BoundSwitchExpression
                this_param)
                {
                    var return_v = this_param.GetPublicTypeSymbol();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 140779, 140822);
                    return return_v;
                }


                bool
                f_10951_140841_140883(Microsoft.CodeAnalysis.CSharp.BoundSwitchExpression
                this_param)
                {
                    var return_v = this_param.WasCompilerGenerated;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 140841, 140883);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.SwitchExpressionOperation
                f_10951_140604_140884(Microsoft.CodeAnalysis.IOperation
                value, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Operations.ISwitchExpressionArmOperation>
                arms, Microsoft.CodeAnalysis.SemanticModel
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.ITypeSymbol?
                type, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.SwitchExpressionOperation(value, arms, semanticModel, syntax, type, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 140604, 140884);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10951, 140208, 140896);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10951, 140208, 140896);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private ISwitchExpressionArmOperation CreateBoundSwitchExpressionArmOperation(BoundSwitchExpressionArm boundSwitchExpressionArm)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10951, 140908, 141655);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 141061, 141149);

                IPatternOperation
                pattern = (IPatternOperation)f_10951_141108_141148(this, f_10951_141115_141147(boundSwitchExpressionArm))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 141163, 141227);

                IOperation?
                guard = f_10951_141183_141226(this, f_10951_141190_141225(boundSwitchExpressionArm))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 141241, 141299);

                IOperation
                value = f_10951_141260_141298(this, f_10951_141267_141297(boundSwitchExpressionArm))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 141313, 141644);

                return f_10951_141320_141643(pattern, guard, value, boundSwitchExpressionArm.Locals.GetPublicSymbols(), _semanticModel, boundSwitchExpressionArm.Syntax, f_10951_141597_141642(boundSwitchExpressionArm));
                DynAbs.Tracing.TraceSender.TraceExitMethod(10951, 140908, 141655);

                Microsoft.CodeAnalysis.CSharp.BoundPattern
                f_10951_141115_141147(Microsoft.CodeAnalysis.CSharp.BoundSwitchExpressionArm
                this_param)
                {
                    var return_v = this_param.Pattern;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 141115, 141147);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_10951_141108_141148(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundPattern
                boundNode)
                {
                    var return_v = this_param.Create((Microsoft.CodeAnalysis.CSharp.BoundNode)boundNode);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 141108, 141148);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression?
                f_10951_141190_141225(Microsoft.CodeAnalysis.CSharp.BoundSwitchExpressionArm
                this_param)
                {
                    var return_v = this_param.WhenClause;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 141190, 141225);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_10951_141183_141226(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression?
                boundNode)
                {
                    var return_v = this_param.Create((Microsoft.CodeAnalysis.CSharp.BoundNode?)boundNode);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 141183, 141226);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10951_141267_141297(Microsoft.CodeAnalysis.CSharp.BoundSwitchExpressionArm
                this_param)
                {
                    var return_v = this_param.Value;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 141267, 141297);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_10951_141260_141298(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                boundNode)
                {
                    var return_v = this_param.Create((Microsoft.CodeAnalysis.CSharp.BoundNode)boundNode);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 141260, 141298);
                    return return_v;
                }


                bool
                f_10951_141597_141642(Microsoft.CodeAnalysis.CSharp.BoundSwitchExpressionArm
                this_param)
                {
                    var return_v = this_param.WasCompilerGenerated;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 141597, 141642);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.SwitchExpressionArmOperation
                f_10951_141320_141643(Microsoft.CodeAnalysis.Operations.IPatternOperation
                pattern, Microsoft.CodeAnalysis.IOperation?
                guard, Microsoft.CodeAnalysis.IOperation
                value, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.ILocalSymbol>
                locals, Microsoft.CodeAnalysis.SemanticModel
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.SwitchExpressionArmOperation(pattern, guard, value, locals, semanticModel, syntax, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 141320, 141643);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10951, 140908, 141655);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10951, 140908, 141655);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private ICaseClauseOperation CreateBoundSwitchLabelOperation(BoundSwitchLabel boundSwitchLabel)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10951, 141667, 143101);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 141787, 141831);

                SyntaxNode
                syntax = boundSwitchLabel.Syntax
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 141845, 141901);

                bool
                isImplicit = f_10951_141863_141900(boundSwitchLabel)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 141915, 141958);

                LabelSymbol
                label = f_10951_141935_141957(boundSwitchLabel)
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 141974, 143090) || true) && (f_10951_141978_142008(boundSwitchLabel.Syntax) == SyntaxKind.DefaultSwitchLabel)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 141974, 143090);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 142075, 142147);

                    f_10951_142075_142146(f_10951_142088_142117(f_10951_142088_142112(boundSwitchLabel)) == BoundKind.DiscardPattern);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 142165, 142264);

                    return f_10951_142172_142263(f_10951_142203_142226(label), _semanticModel, syntax, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 141974, 143090);
                }

                else
                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 141974, 143090);

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 142298, 143090) || true) && (f_10951_142302_142329(boundSwitchLabel) == null && (DynAbs.Tracing.TraceSender.Expression_True(10951, 142302, 142421) && f_10951_142363_142392(f_10951_142363_142387(boundSwitchLabel)) == BoundKind.ConstantPattern) && (DynAbs.Tracing.TraceSender.Expression_True(10951, 142302, 142498) && f_10951_142447_142471(boundSwitchLabel) is BoundConstantPattern cp) && (DynAbs.Tracing.TraceSender.Expression_True(10951, 142302, 142567) && f_10951_142524_142567(f_10951_142524_142536(cp))))
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 142298, 143090);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 142601, 142722);

                        return f_10951_142608_142721(f_10951_142643_142659(this, f_10951_142650_142658(cp)), f_10951_142661_142684(label), _semanticModel, syntax, isImplicit);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 142298, 143090);
                    }

                    else

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 142298, 143090);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 142788, 142868);

                        IPatternOperation
                        pattern = (IPatternOperation)f_10951_142835_142867(this, f_10951_142842_142866(boundSwitchLabel))
                        ;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 142886, 142942);

                        IOperation?
                        guard = f_10951_142906_142941(this, f_10951_142913_142940(boundSwitchLabel))
                        ;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 142960, 143075);

                        return f_10951_142967_143074(f_10951_142998_143021(label), pattern, guard, _semanticModel, syntax, isImplicit);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 142298, 143090);
                    }
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 141974, 143090);
                }
                DynAbs.Tracing.TraceSender.TraceExitMethod(10951, 141667, 143101);

                bool
                f_10951_141863_141900(Microsoft.CodeAnalysis.CSharp.BoundSwitchLabel
                this_param)
                {
                    var return_v = this_param.WasCompilerGenerated;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 141863, 141900);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.LabelSymbol
                f_10951_141935_141957(Microsoft.CodeAnalysis.CSharp.BoundSwitchLabel
                this_param)
                {
                    var return_v = this_param.Label;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 141935, 141957);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.SyntaxKind
                f_10951_141978_142008(Microsoft.CodeAnalysis.SyntaxNode
                node)
                {
                    var return_v = node.Kind();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 141978, 142008);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundPattern
                f_10951_142088_142112(Microsoft.CodeAnalysis.CSharp.BoundSwitchLabel
                this_param)
                {
                    var return_v = this_param.Pattern;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 142088, 142112);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundKind
                f_10951_142088_142117(Microsoft.CodeAnalysis.CSharp.BoundPattern
                this_param)
                {
                    var return_v = this_param.Kind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 142088, 142117);
                    return return_v;
                }


                int
                f_10951_142075_142146(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 142075, 142146);
                    return 0;
                }


                Microsoft.CodeAnalysis.ILabelSymbol?
                f_10951_142203_142226(Microsoft.CodeAnalysis.CSharp.Symbols.LabelSymbol
                symbol)
                {
                    var return_v = symbol.GetPublicSymbol();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 142203, 142226);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.DefaultCaseClauseOperation
                f_10951_142172_142263(Microsoft.CodeAnalysis.ILabelSymbol
                label, Microsoft.CodeAnalysis.SemanticModel
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.DefaultCaseClauseOperation(label, semanticModel, syntax, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 142172, 142263);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression?
                f_10951_142302_142329(Microsoft.CodeAnalysis.CSharp.BoundSwitchLabel
                this_param)
                {
                    var return_v = this_param.WhenClause;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 142302, 142329);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundPattern
                f_10951_142363_142387(Microsoft.CodeAnalysis.CSharp.BoundSwitchLabel
                this_param)
                {
                    var return_v = this_param.Pattern;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 142363, 142387);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundKind
                f_10951_142363_142392(Microsoft.CodeAnalysis.CSharp.BoundPattern
                this_param)
                {
                    var return_v = this_param.Kind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 142363, 142392);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundPattern
                f_10951_142447_142471(Microsoft.CodeAnalysis.CSharp.BoundSwitchLabel
                this_param)
                {
                    var return_v = this_param.Pattern;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 142447, 142471);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                f_10951_142524_142536(Microsoft.CodeAnalysis.CSharp.BoundConstantPattern
                this_param)
                {
                    var return_v = this_param.InputType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 142524, 142536);
                    return return_v;
                }


                bool
                f_10951_142524_142567(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                type)
                {
                    var return_v = type.IsValidV6SwitchGoverningType();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 142524, 142567);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10951_142650_142658(Microsoft.CodeAnalysis.CSharp.BoundConstantPattern
                this_param)
                {
                    var return_v = this_param.Value;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 142650, 142658);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_10951_142643_142659(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                boundNode)
                {
                    var return_v = this_param.Create((Microsoft.CodeAnalysis.CSharp.BoundNode)boundNode);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 142643, 142659);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ILabelSymbol?
                f_10951_142661_142684(Microsoft.CodeAnalysis.CSharp.Symbols.LabelSymbol
                symbol)
                {
                    var return_v = symbol.GetPublicSymbol();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 142661, 142684);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.SingleValueCaseClauseOperation
                f_10951_142608_142721(Microsoft.CodeAnalysis.IOperation
                value, Microsoft.CodeAnalysis.ILabelSymbol
                label, Microsoft.CodeAnalysis.SemanticModel
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.SingleValueCaseClauseOperation(value, label, semanticModel, syntax, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 142608, 142721);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundPattern
                f_10951_142842_142866(Microsoft.CodeAnalysis.CSharp.BoundSwitchLabel
                this_param)
                {
                    var return_v = this_param.Pattern;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 142842, 142866);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_10951_142835_142867(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundPattern
                boundNode)
                {
                    var return_v = this_param.Create((Microsoft.CodeAnalysis.CSharp.BoundNode)boundNode);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 142835, 142867);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression?
                f_10951_142913_142940(Microsoft.CodeAnalysis.CSharp.BoundSwitchLabel
                this_param)
                {
                    var return_v = this_param.WhenClause;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 142913, 142940);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_10951_142906_142941(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression?
                boundNode)
                {
                    var return_v = this_param.Create((Microsoft.CodeAnalysis.CSharp.BoundNode?)boundNode);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 142906, 142941);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ILabelSymbol?
                f_10951_142998_143021(Microsoft.CodeAnalysis.CSharp.Symbols.LabelSymbol
                symbol)
                {
                    var return_v = symbol.GetPublicSymbol();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 142998, 143021);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.PatternCaseClauseOperation
                f_10951_142967_143074(Microsoft.CodeAnalysis.ILabelSymbol
                label, Microsoft.CodeAnalysis.Operations.IPatternOperation
                pattern, Microsoft.CodeAnalysis.IOperation?
                guard, Microsoft.CodeAnalysis.SemanticModel
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.PatternCaseClauseOperation(label, pattern, guard, semanticModel, syntax, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 142967, 143074);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10951, 141667, 143101);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10951, 141667, 143101);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private IIsPatternOperation CreateBoundIsPatternExpressionOperation(BoundIsPatternExpression boundIsPatternExpression)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10951, 143113, 143759);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 143256, 143319);

                IOperation
                value = f_10951_143275_143318(this, f_10951_143282_143317(boundIsPatternExpression))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 143333, 143421);

                IPatternOperation
                pattern = (IPatternOperation)f_10951_143380_143420(this, f_10951_143387_143419(boundIsPatternExpression))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 143435, 143487);

                SyntaxNode
                syntax = boundIsPatternExpression.Syntax
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 143501, 143568);

                ITypeSymbol?
                type = f_10951_143521_143567(boundIsPatternExpression)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 143582, 143646);

                bool
                isImplicit = f_10951_143600_143645(boundIsPatternExpression)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 143660, 143748);

                return f_10951_143667_143747(value, pattern, _semanticModel, syntax, type, isImplicit);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10951, 143113, 143759);

                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10951_143282_143317(Microsoft.CodeAnalysis.CSharp.BoundIsPatternExpression
                this_param)
                {
                    var return_v = this_param.Expression;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 143282, 143317);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_10951_143275_143318(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                boundNode)
                {
                    var return_v = this_param.Create((Microsoft.CodeAnalysis.CSharp.BoundNode)boundNode);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 143275, 143318);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundPattern
                f_10951_143387_143419(Microsoft.CodeAnalysis.CSharp.BoundIsPatternExpression
                this_param)
                {
                    var return_v = this_param.Pattern;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 143387, 143419);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_10951_143380_143420(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundPattern
                boundNode)
                {
                    var return_v = this_param.Create((Microsoft.CodeAnalysis.CSharp.BoundNode)boundNode);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 143380, 143420);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ITypeSymbol?
                f_10951_143521_143567(Microsoft.CodeAnalysis.CSharp.BoundIsPatternExpression
                this_param)
                {
                    var return_v = this_param.GetPublicTypeSymbol();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 143521, 143567);
                    return return_v;
                }


                bool
                f_10951_143600_143645(Microsoft.CodeAnalysis.CSharp.BoundIsPatternExpression
                this_param)
                {
                    var return_v = this_param.WasCompilerGenerated;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 143600, 143645);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.IsPatternOperation
                f_10951_143667_143747(Microsoft.CodeAnalysis.IOperation
                value, Microsoft.CodeAnalysis.Operations.IPatternOperation
                pattern, Microsoft.CodeAnalysis.SemanticModel
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.ITypeSymbol?
                type, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.IsPatternOperation(value, pattern, semanticModel, syntax, type, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 143667, 143747);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10951, 143113, 143759);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10951, 143113, 143759);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private IOperation CreateBoundQueryClauseOperation(BoundQueryClause boundQueryClause)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10951, 143771, 144519);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 143881, 144134) || true) && (f_10951_143885_143915(boundQueryClause.Syntax) != SyntaxKind.QueryExpression)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 143881, 144134);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 144081, 144119);

                    return f_10951_144088_144118(this, f_10951_144095_144117(boundQueryClause));
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 143881, 144134);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 144150, 144204);

                IOperation
                operation = f_10951_144173_144203(this, f_10951_144180_144202(boundQueryClause))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 144218, 144262);

                SyntaxNode
                syntax = boundQueryClause.Syntax
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 144276, 144335);

                ITypeSymbol?
                type = f_10951_144296_144334(boundQueryClause)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 144349, 144405);

                bool
                isImplicit = f_10951_144367_144404(boundQueryClause)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 144419, 144508);

                return f_10951_144426_144507(operation, _semanticModel, syntax, type, isImplicit);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10951, 143771, 144519);

                Microsoft.CodeAnalysis.CSharp.SyntaxKind
                f_10951_143885_143915(Microsoft.CodeAnalysis.SyntaxNode
                node)
                {
                    var return_v = node.Kind();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 143885, 143915);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10951_144095_144117(Microsoft.CodeAnalysis.CSharp.BoundQueryClause
                this_param)
                {
                    var return_v = this_param.Value;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 144095, 144117);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_10951_144088_144118(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                boundNode)
                {
                    var return_v = this_param.Create((Microsoft.CodeAnalysis.CSharp.BoundNode)boundNode);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 144088, 144118);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10951_144180_144202(Microsoft.CodeAnalysis.CSharp.BoundQueryClause
                this_param)
                {
                    var return_v = this_param.Value;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 144180, 144202);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_10951_144173_144203(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                boundNode)
                {
                    var return_v = this_param.Create((Microsoft.CodeAnalysis.CSharp.BoundNode)boundNode);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 144173, 144203);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ITypeSymbol?
                f_10951_144296_144334(Microsoft.CodeAnalysis.CSharp.BoundQueryClause
                this_param)
                {
                    var return_v = this_param.GetPublicTypeSymbol();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 144296, 144334);
                    return return_v;
                }


                bool
                f_10951_144367_144404(Microsoft.CodeAnalysis.CSharp.BoundQueryClause
                this_param)
                {
                    var return_v = this_param.WasCompilerGenerated;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 144367, 144404);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.TranslatedQueryOperation
                f_10951_144426_144507(Microsoft.CodeAnalysis.IOperation
                operation, Microsoft.CodeAnalysis.SemanticModel
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.ITypeSymbol?
                type, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.TranslatedQueryOperation(operation, semanticModel, syntax, type, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 144426, 144507);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10951, 143771, 144519);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10951, 143771, 144519);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private IOperation CreateBoundRangeVariableOperation(BoundRangeVariable boundRangeVariable)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10951, 144531, 144793);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 144742, 144782);

                return f_10951_144749_144781(this, f_10951_144756_144780(boundRangeVariable));
                DynAbs.Tracing.TraceSender.TraceExitMethod(10951, 144531, 144793);

                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10951_144756_144780(Microsoft.CodeAnalysis.CSharp.BoundRangeVariable
                this_param)
                {
                    var return_v = this_param.Value;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 144756, 144780);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_10951_144749_144781(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                boundNode)
                {
                    var return_v = this_param.Create((Microsoft.CodeAnalysis.CSharp.BoundNode)boundNode);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 144749, 144781);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10951, 144531, 144793);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10951, 144531, 144793);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private IOperation CreateBoundDiscardExpressionOperation(BoundDiscardExpression boundNode)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10951, 144805, 145219);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 144920, 145208);

                return f_10951_144927_145207(f_10951_144966_145027(((DiscardSymbol)f_10951_144982_145008(boundNode))), _semanticModel, boundNode.Syntax, f_10951_145114_145145(boundNode), isImplicit: f_10951_145176_145206(boundNode));
                DynAbs.Tracing.TraceSender.TraceExitMethod(10951, 144805, 145219);

                Microsoft.CodeAnalysis.CSharp.Symbol
                f_10951_144982_145008(Microsoft.CodeAnalysis.CSharp.BoundDiscardExpression
                this_param)
                {
                    var return_v = this_param.ExpressionSymbol;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 144982, 145008);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IDiscardSymbol?
                f_10951_144966_145027(Microsoft.CodeAnalysis.CSharp.Symbol
                symbol)
                {
                    var return_v = symbol.GetPublicSymbol();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 144966, 145027);
                    return (IDiscardSymbol?)return_v;
                }


                Microsoft.CodeAnalysis.ITypeSymbol?
                f_10951_145114_145145(Microsoft.CodeAnalysis.CSharp.BoundDiscardExpression
                this_param)
                {
                    var return_v = this_param.GetPublicTypeSymbol();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 145114, 145145);
                    return return_v;
                }


                bool
                f_10951_145176_145206(Microsoft.CodeAnalysis.CSharp.BoundDiscardExpression
                this_param)
                {
                    var return_v = this_param.WasCompilerGenerated;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 145176, 145206);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.DiscardOperation
                f_10951_144927_145207(Microsoft.CodeAnalysis.IDiscardSymbol
                discardSymbol, Microsoft.CodeAnalysis.SemanticModel
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.ITypeSymbol?
                type, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.DiscardOperation(discardSymbol, semanticModel, syntax, type, isImplicit: isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 144927, 145207);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10951, 144805, 145219);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10951, 144805, 145219);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private IOperation CreateFromEndIndexExpressionOperation(BoundFromEndIndexExpression boundIndex)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10951, 145231, 145830);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 145352, 145819);

                return f_10951_145359_145818(UnaryOperatorKind.Hat, f_10951_145436_145462(this, f_10951_145443_145461(boundIndex)), isLifted: f_10951_145491_145523(f_10951_145491_145506(boundIndex)), isChecked: false, operatorMethod: null, _semanticModel, boundIndex.Syntax, f_10951_145685_145717(boundIndex), constantValue: null, isImplicit: f_10951_145786_145817(boundIndex));
                DynAbs.Tracing.TraceSender.TraceExitMethod(10951, 145231, 145830);

                Microsoft.CodeAnalysis.CSharp.BoundExpression
                f_10951_145443_145461(Microsoft.CodeAnalysis.CSharp.BoundFromEndIndexExpression
                this_param)
                {
                    var return_v = this_param.Operand;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 145443, 145461);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_10951_145436_145462(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression
                boundNode)
                {
                    var return_v = this_param.Create((Microsoft.CodeAnalysis.CSharp.BoundNode)boundNode);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 145436, 145462);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                f_10951_145491_145506(Microsoft.CodeAnalysis.CSharp.BoundFromEndIndexExpression
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 145491, 145506);
                    return return_v;
                }


                bool
                f_10951_145491_145523(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                type)
                {
                    var return_v = type.IsNullableType();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 145491, 145523);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ITypeSymbol?
                f_10951_145685_145717(Microsoft.CodeAnalysis.CSharp.BoundFromEndIndexExpression
                this_param)
                {
                    var return_v = this_param.GetPublicTypeSymbol();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 145685, 145717);
                    return return_v;
                }


                bool
                f_10951_145786_145817(Microsoft.CodeAnalysis.CSharp.BoundFromEndIndexExpression
                this_param)
                {
                    var return_v = this_param.WasCompilerGenerated;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 145786, 145817);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.UnaryOperation
                f_10951_145359_145818(Microsoft.CodeAnalysis.Operations.UnaryOperatorKind
                operatorKind, Microsoft.CodeAnalysis.IOperation
                operand, bool
                isLifted, bool
                isChecked, Microsoft.CodeAnalysis.IMethodSymbol?
                operatorMethod, Microsoft.CodeAnalysis.SemanticModel
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.ITypeSymbol?
                type, Microsoft.CodeAnalysis.ConstantValue?
                constantValue, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.UnaryOperation(operatorKind, operand, isLifted: isLifted, isChecked: isChecked, operatorMethod: operatorMethod, semanticModel, syntax, type, constantValue: constantValue, isImplicit: isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 145359, 145818);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10951, 145231, 145830);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10951, 145231, 145830);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private IOperation CreateRangeExpressionOperation(BoundRangeExpression boundRange)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10951, 145842, 146453);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 145949, 146002);

                IOperation?
                left = f_10951_145968_146001(this, f_10951_145975_146000(boundRange))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 146016, 146071);

                IOperation?
                right = f_10951_146036_146070(this, f_10951_146043_146069(boundRange))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 146085, 146442);

                return f_10951_146092_146441(left, right, isLifted: f_10951_146169_146201(f_10951_146169_146184(boundRange)), f_10951_146220_146258(f_10951_146220_146240(boundRange)), _semanticModel, boundRange.Syntax, f_10951_146346_146378(boundRange), isImplicit: f_10951_146409_146440(boundRange));
                DynAbs.Tracing.TraceSender.TraceExitMethod(10951, 145842, 146453);

                Microsoft.CodeAnalysis.CSharp.BoundExpression?
                f_10951_145975_146000(Microsoft.CodeAnalysis.CSharp.BoundRangeExpression
                this_param)
                {
                    var return_v = this_param.LeftOperandOpt;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 145975, 146000);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_10951_145968_146001(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression?
                boundNode)
                {
                    var return_v = this_param.Create((Microsoft.CodeAnalysis.CSharp.BoundNode?)boundNode);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 145968, 146001);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundExpression?
                f_10951_146043_146069(Microsoft.CodeAnalysis.CSharp.BoundRangeExpression
                this_param)
                {
                    var return_v = this_param.RightOperandOpt;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 146043, 146069);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_10951_146036_146070(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundExpression?
                boundNode)
                {
                    var return_v = this_param.Create((Microsoft.CodeAnalysis.CSharp.BoundNode?)boundNode);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 146036, 146070);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                f_10951_146169_146184(Microsoft.CodeAnalysis.CSharp.BoundRangeExpression
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 146169, 146184);
                    return return_v;
                }


                bool
                f_10951_146169_146201(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                type)
                {
                    var return_v = type.IsNullableType();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 146169, 146201);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol?
                f_10951_146220_146240(Microsoft.CodeAnalysis.CSharp.BoundRangeExpression
                this_param)
                {
                    var return_v = this_param.MethodOpt;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 146220, 146240);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IMethodSymbol?
                f_10951_146220_146258(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol?
                symbol)
                {
                    var return_v = symbol.GetPublicSymbol();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 146220, 146258);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ITypeSymbol?
                f_10951_146346_146378(Microsoft.CodeAnalysis.CSharp.BoundRangeExpression
                this_param)
                {
                    var return_v = this_param.GetPublicTypeSymbol();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 146346, 146378);
                    return return_v;
                }


                bool
                f_10951_146409_146440(Microsoft.CodeAnalysis.CSharp.BoundRangeExpression
                this_param)
                {
                    var return_v = this_param.WasCompilerGenerated;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 146409, 146440);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.RangeOperation
                f_10951_146092_146441(Microsoft.CodeAnalysis.IOperation?
                leftOperand, Microsoft.CodeAnalysis.IOperation?
                rightOperand, bool
                isLifted, Microsoft.CodeAnalysis.IMethodSymbol?
                method, Microsoft.CodeAnalysis.SemanticModel
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.ITypeSymbol?
                type, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.RangeOperation(leftOperand, rightOperand, isLifted: isLifted, method, semanticModel, syntax, type, isImplicit: isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 146092, 146441);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10951, 145842, 146453);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10951, 145842, 146453);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private IOperation CreateBoundDiscardPatternOperation(BoundDiscardPattern boundNode)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10951, 146465, 146890);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 146574, 146879);

                return f_10951_146581_146878(inputType: f_10951_146638_146675(f_10951_146638_146657(boundNode)), narrowedType: f_10951_146708_146748(f_10951_146708_146730(boundNode)), _semanticModel, boundNode.Syntax, isImplicit: f_10951_146847_146877(boundNode));
                DynAbs.Tracing.TraceSender.TraceExitMethod(10951, 146465, 146890);

                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                f_10951_146638_146657(Microsoft.CodeAnalysis.CSharp.BoundDiscardPattern
                this_param)
                {
                    var return_v = this_param.InputType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 146638, 146657);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ITypeSymbol?
                f_10951_146638_146675(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                symbol)
                {
                    var return_v = symbol.GetPublicSymbol();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 146638, 146675);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                f_10951_146708_146730(Microsoft.CodeAnalysis.CSharp.BoundDiscardPattern
                this_param)
                {
                    var return_v = this_param.NarrowedType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 146708, 146730);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ITypeSymbol?
                f_10951_146708_146748(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                symbol)
                {
                    var return_v = symbol.GetPublicSymbol();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 146708, 146748);
                    return return_v;
                }


                bool
                f_10951_146847_146877(Microsoft.CodeAnalysis.CSharp.BoundDiscardPattern
                this_param)
                {
                    var return_v = this_param.WasCompilerGenerated;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 146847, 146877);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.DiscardPatternOperation
                f_10951_146581_146878(Microsoft.CodeAnalysis.ITypeSymbol
                inputType, Microsoft.CodeAnalysis.ITypeSymbol
                narrowedType, Microsoft.CodeAnalysis.SemanticModel
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.DiscardPatternOperation(inputType: inputType, narrowedType: narrowedType, semanticModel, syntax, isImplicit: isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 146581, 146878);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10951, 146465, 146890);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10951, 146465, 146890);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        internal IPropertySubpatternOperation CreatePropertySubpattern(BoundSubpattern subpattern, ITypeSymbol matchedType)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10951, 146902, 147397);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 147042, 147080);

                SyntaxNode
                syntax = subpattern.Syntax
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 147094, 147185);

                IOperation
                member = f_10951_147114_147184(this, f_10951_147145_147162(subpattern), matchedType, syntax)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 147199, 147273);

                IPatternOperation
                pattern = (IPatternOperation)f_10951_147246_147272(this, f_10951_147253_147271(subpattern))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 147287, 147386);

                return f_10951_147294_147385(member, pattern, _semanticModel, syntax, isImplicit: false);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10951, 146902, 147397);

                Microsoft.CodeAnalysis.CSharp.Symbol?
                f_10951_147145_147162(Microsoft.CodeAnalysis.CSharp.BoundSubpattern
                this_param)
                {
                    var return_v = this_param.Symbol;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 147145, 147162);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation
                f_10951_147114_147184(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.Symbol?
                symbol, Microsoft.CodeAnalysis.ITypeSymbol
                matchedType, Microsoft.CodeAnalysis.SyntaxNode
                syntax)
                {
                    var return_v = this_param.CreatePropertySubpatternMember(symbol, matchedType, syntax);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 147114, 147184);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.BoundPattern
                f_10951_147253_147271(Microsoft.CodeAnalysis.CSharp.BoundSubpattern
                this_param)
                {
                    var return_v = this_param.Pattern;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 147253, 147271);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_10951_147246_147272(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.BoundPattern
                boundNode)
                {
                    var return_v = this_param.Create((Microsoft.CodeAnalysis.CSharp.BoundNode)boundNode);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 147246, 147272);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.PropertySubpatternOperation
                f_10951_147294_147385(Microsoft.CodeAnalysis.IOperation
                member, Microsoft.CodeAnalysis.Operations.IPatternOperation
                pattern, Microsoft.CodeAnalysis.SemanticModel
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.PropertySubpatternOperation(member, pattern, semanticModel, syntax, isImplicit: isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 147294, 147385);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10951, 146902, 147397);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10951, 146902, 147397);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        internal IOperation CreatePropertySubpatternMember(Symbol? symbol, ITypeSymbol matchedType, SyntaxNode syntax)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10951, 147409, 149184);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 147544, 147651);

                var
                nameSyntax = ((DynAbs.Tracing.TraceSender.Conditional_F1(10951, 147562, 147601) || ((syntax is SubpatternSyntax subpatSyntax && DynAbs.Tracing.TraceSender.Conditional_F2(10951, 147604, 147632)) || DynAbs.Tracing.TraceSender.Conditional_F3(10951, 147635, 147639))) ? f_10951_147604_147632_M(DynAbs.Tracing.TraceSender.TraceConditionalAccessExpression(f_10951_147604_147626((SubpatternSyntax)syntax), 10951, 147604, 147632)?.Name) : null) ?? (DynAbs.Tracing.TraceSender.Expression_Null<Microsoft.CodeAnalysis.CSharp.Syntax.IdentifierNameSyntax?>(10951, 147561, 147650) ?? syntax)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 147665, 147704);

                bool
                isImplicit = nameSyntax == syntax
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 147718, 148947);

                switch (symbol)
                {

                    case FieldSymbol field:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 147718, 148947);
                        {
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 147838, 147954);

                            var
                            constantValue = f_10951_147858_147953(field, ConstantFieldsInProgress.Empty, earlyDecodingWellKnownAttributes: false)
                            ;
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 147980, 148207);

                            return f_10951_147987_148206(f_10951_148045_148068(field), isDeclaration: false, f_10951_148092_148108(), _semanticModel, nameSyntax, f_10951_148138_148166(f_10951_148138_148148(field)), constantValue, isImplicit: isImplicit);
                        }
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 147718, 148947);

                    case PropertySymbol property:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 147718, 148947);
                        {
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 148326, 148596);

                            return f_10951_148333_148595(f_10951_148394_148420(property), ImmutableArray<IArgumentOperation>.Empty, f_10951_148464_148480(), _semanticModel, nameSyntax, f_10951_148510_148541(f_10951_148510_148523(property)), isImplicit: isImplicit);
                        }
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 147718, 148947);

                    default:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 147718, 148947);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 148811, 148932);

                        return f_10951_148818_148931(_semanticModel, nameSyntax, ImmutableArray<IOperation>.Empty, isImplicit);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 147718, 148947);
                }

                IOperation? createReceiver()
                {
                    try
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterMethod(10951, 149009, 149172);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 149012, 149172);
                        return (DynAbs.Tracing.TraceSender.Conditional_F1(10951, 149012, 149037) || ((f_10951_149012_149028_M(DynAbs.Tracing.TraceSender.TraceConditionalAccessExpression(symbol, 10951, 149012, 149028)?.IsStatic) == false && DynAbs.Tracing.TraceSender.Conditional_F2(10951, 149040, 149165)) || DynAbs.Tracing.TraceSender.Conditional_F3(10951, 149168, 149172))) ? f_10951_149040_149165(InstanceReferenceKind.PatternInput, _semanticModel, nameSyntax, matchedType, isImplicit: true) : null; DynAbs.Tracing.TraceSender.TraceExitMethod(10951, 149009, 149172);
                    }
                    catch
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10951, 149009, 149172);
                        throw;
                    }
                    finally
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10951, 149009, 149172);
                    }
                    throw new System.Exception("Slicer error: unreachable code");
                }
                DynAbs.Tracing.TraceSender.TraceExitMethod(10951, 147409, 149184);

                Microsoft.CodeAnalysis.CSharp.Syntax.NameColonSyntax?
                f_10951_147604_147626(Microsoft.CodeAnalysis.CSharp.Syntax.SubpatternSyntax
                this_param)
                {
                    var return_v = this_param.NameColon;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 147604, 147626);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Syntax.IdentifierNameSyntax?
                f_10951_147604_147632_M(Microsoft.CodeAnalysis.CSharp.Syntax.IdentifierNameSyntax?
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 147604, 147632);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ConstantValue
                f_10951_147858_147953(Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol
                this_param, Microsoft.CodeAnalysis.CSharp.ConstantFieldsInProgress
                inProgress, bool
                earlyDecodingWellKnownAttributes)
                {
                    var return_v = this_param.GetConstantValue(inProgress, earlyDecodingWellKnownAttributes: earlyDecodingWellKnownAttributes);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 147858, 147953);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IFieldSymbol?
                f_10951_148045_148068(Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol
                symbol)
                {
                    var return_v = symbol.GetPublicSymbol();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 148045, 148068);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_10951_148092_148108()
                {
                    var return_v = createReceiver();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 148092, 148108);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                f_10951_148138_148148(Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 148138, 148148);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ITypeSymbol?
                f_10951_148138_148166(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                symbol)
                {
                    var return_v = symbol.GetPublicSymbol();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 148138, 148166);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.FieldReferenceOperation
                f_10951_147987_148206(Microsoft.CodeAnalysis.IFieldSymbol
                field, bool
                isDeclaration, Microsoft.CodeAnalysis.IOperation?
                instance, Microsoft.CodeAnalysis.SemanticModel
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.ITypeSymbol
                type, Microsoft.CodeAnalysis.ConstantValue
                constantValue, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.FieldReferenceOperation(field, isDeclaration: isDeclaration, instance, semanticModel, syntax, type, constantValue, isImplicit: isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 147987, 148206);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IPropertySymbol?
                f_10951_148394_148420(Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol
                symbol)
                {
                    var return_v = symbol.GetPublicSymbol();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 148394, 148420);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_10951_148464_148480()
                {
                    var return_v = createReceiver();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 148464, 148480);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                f_10951_148510_148523(Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 148510, 148523);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ITypeSymbol?
                f_10951_148510_148541(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                symbol)
                {
                    var return_v = symbol.GetPublicSymbol();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 148510, 148541);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.PropertyReferenceOperation
                f_10951_148333_148595(Microsoft.CodeAnalysis.IPropertySymbol
                property, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Operations.IArgumentOperation>
                arguments, Microsoft.CodeAnalysis.IOperation?
                instance, Microsoft.CodeAnalysis.SemanticModel
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.ITypeSymbol
                type, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.PropertyReferenceOperation(property, arguments, instance, semanticModel, syntax, type, isImplicit: isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 148333, 148595);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.IInvalidOperation
                f_10951_148818_148931(Microsoft.CodeAnalysis.SemanticModel
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.IOperation>
                children, bool
                isImplicit)
                {
                    var return_v = OperationFactory.CreateInvalidOperation(semanticModel, syntax, children, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 148818, 148931);
                    return return_v;
                }


                bool?
                f_10951_149012_149028_M(bool?
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 149012, 149028);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.InstanceReferenceOperation
                f_10951_149040_149165(Microsoft.CodeAnalysis.Operations.InstanceReferenceKind
                referenceKind, Microsoft.CodeAnalysis.SemanticModel
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.ITypeSymbol
                type, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.InstanceReferenceOperation(referenceKind, semanticModel, syntax, type, isImplicit: isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 149040, 149165);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10951, 147409, 149184);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10951, 147409, 149184);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private IInstanceReferenceOperation CreateCollectionValuePlaceholderOperation(BoundObjectOrCollectionValuePlaceholder placeholder)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10951, 149196, 149734);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 149351, 149428);

                InstanceReferenceKind
                referenceKind = InstanceReferenceKind.ImplicitReceiver
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 149442, 149481);

                SyntaxNode
                syntax = placeholder.Syntax
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 149495, 149549);

                ITypeSymbol?
                type = f_10951_149515_149548(placeholder)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 149563, 149614);

                bool
                isImplicit = f_10951_149581_149613(placeholder)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 149628, 149723);

                return f_10951_149635_149722(referenceKind, _semanticModel, syntax, type, isImplicit);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10951, 149196, 149734);

                Microsoft.CodeAnalysis.ITypeSymbol?
                f_10951_149515_149548(Microsoft.CodeAnalysis.CSharp.BoundObjectOrCollectionValuePlaceholder
                this_param)
                {
                    var return_v = this_param.GetPublicTypeSymbol();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 149515, 149548);
                    return return_v;
                }


                bool
                f_10951_149581_149613(Microsoft.CodeAnalysis.CSharp.BoundObjectOrCollectionValuePlaceholder
                this_param)
                {
                    var return_v = this_param.WasCompilerGenerated;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 149581, 149613);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.InstanceReferenceOperation
                f_10951_149635_149722(Microsoft.CodeAnalysis.Operations.InstanceReferenceKind
                referenceKind, Microsoft.CodeAnalysis.SemanticModel
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.ITypeSymbol?
                type, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.InstanceReferenceOperation(referenceKind, semanticModel, syntax, type, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 149635, 149722);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10951, 149196, 149734);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10951, 149196, 149734);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private ImmutableArray<IArgumentOperation> CreateDisposeArguments(MethodArgumentInfo patternDisposeInfo, SyntaxNode syntax)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10951, 149746, 150832);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 149951, 150001);

                f_10951_149951_150000(f_10951_149964_149999_M(!f_10951_149965_149990(patternDisposeInfo).IsStatic));

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 150017, 150163) || true) && (f_10951_150021_150061(f_10951_150021_150046(patternDisposeInfo)) == 0)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10951, 150017, 150163);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 150100, 150148);

                    return ImmutableArray<IArgumentOperation>.Empty;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10951, 150017, 150163);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 150179, 150310);

                f_10951_150179_150309(f_10951_150192_150220_M(!patternDisposeInfo.Expanded) || (DynAbs.Tracing.TraceSender.Expression_False(10951, 150192, 150308) || f_10951_150224_150308(f_10951_150224_150296(f_10951_150224_150291(f_10951_150224_150265(f_10951_150224_150249(patternDisposeInfo)).Last())))));
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 150326, 150757);

                var
                args = f_10951_150337_150756(this, f_10951_150383_150408(patternDisposeInfo), f_10951_150439_150467(patternDisposeInfo), f_10951_150498_150532(patternDisposeInfo), f_10951_150563_150598(patternDisposeInfo), f_10951_150629_150656(patternDisposeInfo), syntax, invokedAsExtensionMethod: false)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10951, 150773, 150821);

                return f_10951_150780_150820(args, null);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10951, 149746, 150832);

                Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                f_10951_149965_149990(Microsoft.CodeAnalysis.CSharp.MethodArgumentInfo
                this_param)
                {
                    var return_v = this_param.Method;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 149965, 149990);
                    return return_v;
                }


                bool
                f_10951_149964_149999_M(bool
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 149964, 149999);
                    return return_v;
                }


                int
                f_10951_149951_150000(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 149951, 150000);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                f_10951_150021_150046(Microsoft.CodeAnalysis.CSharp.MethodArgumentInfo
                this_param)
                {
                    var return_v = this_param.Method;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 150021, 150046);
                    return return_v;
                }


                int
                f_10951_150021_150061(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                this_param)
                {
                    var return_v = this_param.ParameterCount;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 150021, 150061);
                    return return_v;
                }


                bool
                f_10951_150192_150220_M(bool
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 150192, 150220);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                f_10951_150224_150249(Microsoft.CodeAnalysis.CSharp.MethodArgumentInfo
                this_param)
                {
                    var return_v = this_param.Method;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 150224, 150249);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol>
                f_10951_150224_150265(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                member)
                {
                    var return_v = member.GetParameters();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 150224, 150265);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol
                f_10951_150224_150291(Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol
                this_param)
                {
                    var return_v = this_param.OriginalDefinition;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 150224, 150291);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                f_10951_150224_150296(Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 150224, 150296);
                    return return_v;
                }


                bool
                f_10951_150224_150308(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                type)
                {
                    var return_v = type.IsSZArray();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 150224, 150308);
                    return return_v;
                }


                int
                f_10951_150179_150309(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 150179, 150309);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                f_10951_150383_150408(Microsoft.CodeAnalysis.CSharp.MethodArgumentInfo
                this_param)
                {
                    var return_v = this_param.Method;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 150383, 150408);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                f_10951_150439_150467(Microsoft.CodeAnalysis.CSharp.MethodArgumentInfo
                this_param)
                {
                    var return_v = this_param.Arguments;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 150439, 150467);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<int>
                f_10951_150498_150532(Microsoft.CodeAnalysis.CSharp.MethodArgumentInfo
                this_param)
                {
                    var return_v = this_param.ArgsToParamsOpt;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 150498, 150532);
                    return return_v;
                }


                Microsoft.CodeAnalysis.BitVector
                f_10951_150563_150598(Microsoft.CodeAnalysis.CSharp.MethodArgumentInfo
                this_param)
                {
                    var return_v = this_param.DefaultArguments;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 150563, 150598);
                    return return_v;
                }


                bool
                f_10951_150629_150656(Microsoft.CodeAnalysis.CSharp.MethodArgumentInfo
                this_param)
                {
                    var return_v = this_param.Expanded;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10951, 150629, 150656);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Operations.IArgumentOperation>
                f_10951_150337_150756(Microsoft.CodeAnalysis.Operations.CSharpOperationFactory
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                methodOrIndexer, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression>
                boundArguments, System.Collections.Immutable.ImmutableArray<int>
                argumentsToParametersOpt, Microsoft.CodeAnalysis.BitVector
                defaultArguments, bool
                expanded, Microsoft.CodeAnalysis.SyntaxNode
                invocationSyntax, bool
                invokedAsExtensionMethod)
                {
                    var return_v = this_param.DeriveArguments((Microsoft.CodeAnalysis.CSharp.Symbol)methodOrIndexer, boundArguments, argumentsToParametersOpt, defaultArguments, expanded, invocationSyntax, invokedAsExtensionMethod: invokedAsExtensionMethod);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 150337, 150756);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Operations.IArgumentOperation>
                f_10951_150780_150820(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Operations.IArgumentOperation>
                operations, Microsoft.CodeAnalysis.IOperation?
                parent)
                {
                    var return_v = Operation.SetParentOperation(operations, parent);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10951, 150780, 150820);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10951, 149746, 150832);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10951, 149746, 150832);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        static CSharpOperationFactory()
        {
            DynAbs.Tracing.TraceSender.TraceEnterStaticConstructor(10951, 620, 150839);
            DynAbs.Tracing.TraceSender.TraceExitStaticConstructor(10951, 620, 150839);

            DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10951, 620, 150839);
        }

        int ___ignore_me___ = DynAbs.Tracing.TraceSender.TraceBeforeConstructor(10951, 620, 150839);
    }
}
