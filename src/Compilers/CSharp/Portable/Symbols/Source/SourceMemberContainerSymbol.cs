// Licensed to the .NET Foundation under one or more agreements.
// The .NET Foundation licenses this file to you under the MIT license.
// See the LICENSE file in the project root for more information.

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Diagnostics;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Threading;
using Microsoft.CodeAnalysis;
using Microsoft.CodeAnalysis.CSharp.Emit;
using Microsoft.CodeAnalysis.CSharp.Syntax;
using Microsoft.CodeAnalysis.PooledObjects;
using Microsoft.CodeAnalysis.Text;
using Roslyn.Utilities;

namespace Microsoft.CodeAnalysis.CSharp.Symbols
{
    internal abstract partial class SourceMemberContainerTypeSymbol : NamedTypeSymbol
    {
        private struct Flags
        {

            private int _flags;

            private const int
            SpecialTypeOffset = 0
            ;

            private const int
            SpecialTypeSize = 6
            ;

            private const int
            ManagedKindOffset = SpecialTypeOffset + SpecialTypeSize
            ;

            private const int
            ManagedKindSize = 2
            ;

            private const int
            FieldDefinitionsNotedOffset = ManagedKindOffset + ManagedKindSize
            ;

            private const int
            FieldDefinitionsNotedSize = 1
            ;

            private const int
            FlattenedMembersIsSortedOffset = FieldDefinitionsNotedOffset + FieldDefinitionsNotedSize
            ;

            private const int
            FlattenedMembersIsSortedSize = 1
            ;

            private const int
            TypeKindOffset = FlattenedMembersIsSortedOffset + FlattenedMembersIsSortedSize
            ;

            private const int
            TypeKindSize = 4
            ;

            private const int
            NullableContextOffset = TypeKindOffset + TypeKindSize
            ;

            private const int
            NullableContextSize = 3
            ;

            private const int
            SpecialTypeMask = (1 << SpecialTypeSize) - 1
            ;

            private const int
            ManagedKindMask = (1 << ManagedKindSize) - 1
            ;

            private const int
            TypeKindMask = (1 << TypeKindSize) - 1
            ;

            private const int
            NullableContextMask = (1 << NullableContextSize) - 1
            ;

            private const int
            FieldDefinitionsNotedBit = 1 << FieldDefinitionsNotedOffset
            ;

            private const int
            FlattenedMembersIsSortedBit = 1 << FlattenedMembersIsSortedOffset
            ;

            public SpecialType SpecialType
            {
                get
                {
                    try
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterMethod(10073, 3042, 3120);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 3048, 3118);

                        return (SpecialType)((_flags >> SpecialTypeOffset) & SpecialTypeMask);
                        DynAbs.Tracing.TraceSender.TraceExitMethod(10073, 3042, 3120);
                    }
                    catch
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10073, 2979, 3135);
                        throw;
                    }
                    finally
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10073, 2979, 3135);
                    }
                    throw new System.Exception("Slicer error: unreachable code");
                }
            }

            public ManagedKind ManagedKind
            {
                get
                {
                    try
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterMethod(10073, 3214, 3292);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 3220, 3290);

                        return (ManagedKind)((_flags >> ManagedKindOffset) & ManagedKindMask);
                        DynAbs.Tracing.TraceSender.TraceExitMethod(10073, 3214, 3292);
                    }
                    catch
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10073, 3151, 3307);
                        throw;
                    }
                    finally
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10073, 3151, 3307);
                    }
                    throw new System.Exception("Slicer error: unreachable code");
                }
            }

            public bool FieldDefinitionsNoted
            {
                get
                {
                    try
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterMethod(10073, 3389, 3445);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 3395, 3443);

                        return (_flags & FieldDefinitionsNotedBit) != 0;
                        DynAbs.Tracing.TraceSender.TraceExitMethod(10073, 3389, 3445);
                    }
                    catch
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10073, 3323, 3460);
                        throw;
                    }
                    finally
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10073, 3323, 3460);
                    }
                    throw new System.Exception("Slicer error: unreachable code");
                }
            }

            public bool FlattenedMembersIsSorted
            {
                get
                {
                    try
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterMethod(10073, 3603, 3662);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 3609, 3660);

                        return (_flags & FlattenedMembersIsSortedBit) != 0;
                        DynAbs.Tracing.TraceSender.TraceExitMethod(10073, 3603, 3662);
                    }
                    catch
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10073, 3534, 3677);
                        throw;
                    }
                    finally
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10073, 3534, 3677);
                    }
                    throw new System.Exception("Slicer error: unreachable code");
                }
            }

            public TypeKind TypeKind
            {
                get
                {
                    try
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterMethod(10073, 3750, 3819);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 3756, 3817);

                        return (TypeKind)((_flags >> TypeKindOffset) & TypeKindMask);
                        DynAbs.Tracing.TraceSender.TraceExitMethod(10073, 3750, 3819);
                    }
                    catch
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10073, 3693, 3834);
                        throw;
                    }
                    finally
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10073, 3693, 3834);
                    }
                    throw new System.Exception("Slicer error: unreachable code");
                }
            }

            static Flags()
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterStaticConstructor(10073, 3861, 4165);

                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 1585, 1606);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 1639, 1658);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 1693, 1748);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 1781, 1800);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 1835, 1900);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 1933, 1962);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 1997, 2085);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 2118, 2150);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 2185, 2263);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 2296, 2312);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 2347, 2400);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 2433, 2456);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 2491, 2535);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 2568, 2612);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 2645, 2683);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 2716, 2768);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 2803, 2862);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 2895, 2960);

                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 3968, 4044);

                    f_10073_3968_4043(f_10073_3981_4042(SpecialTypeMask));
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 4062, 4150);

                    f_10073_4062_4149(f_10073_4075_4148(NullableContextMask));
                    DynAbs.Tracing.TraceSender.TraceExitStaticConstructor(10073, 3861, 4165);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10073, 3861, 4165);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10073, 3861, 4165);
                }
            }

            public Flags(SpecialType specialType, TypeKind typeKind)
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterConstructor(10073, 4189, 4515);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 4278, 4357);

                    int
                    specialTypeInt = ((int)specialType & SpecialTypeMask) << SpecialTypeOffset
                    ;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 4375, 4442);

                    int
                    typeKindInt = ((int)typeKind & TypeKindMask) << TypeKindOffset
                    ;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 4462, 4500);

                    _flags = specialTypeInt | typeKindInt;
                    DynAbs.Tracing.TraceSender.TraceExitConstructor(10073, 4189, 4515);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10073, 4189, 4515);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10073, 4189, 4515);
                }
            }

            public void SetFieldDefinitionsNoted()
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(10073, 4531, 4684);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 4602, 4669);

                    f_10073_4602_4668(ref _flags, FieldDefinitionsNotedBit);
                    DynAbs.Tracing.TraceSender.TraceExitMethod(10073, 4531, 4684);

                    bool
                    f_10073_4602_4668(ref int
                    flags, int
                    toSet)
                    {
                        var return_v = ThreadSafeFlagOperations.Set(ref flags, toSet);
                        DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 4602, 4668);
                        return return_v;
                    }

                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10073, 4531, 4684);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10073, 4531, 4684);
                }
            }

            public void SetFlattenedMembersIsSorted()
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(10073, 4700, 4861);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 4774, 4846);

                    f_10073_4774_4845(ref _flags, (FlattenedMembersIsSortedBit));
                    DynAbs.Tracing.TraceSender.TraceExitMethod(10073, 4700, 4861);

                    bool
                    f_10073_4774_4845(ref int
                    flags, int
                    toSet)
                    {
                        var return_v = ThreadSafeFlagOperations.Set(ref flags, toSet);
                        DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 4774, 4845);
                        return return_v;
                    }

                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10073, 4700, 4861);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10073, 4700, 4861);
                }
            }

            private static bool BitsAreUnsetOrSame(int bits, int mask)
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterStaticMethod(10073, 4877, 5034);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 4968, 5019);

                    return (bits & mask) == 0 || (DynAbs.Tracing.TraceSender.Expression_False(10073, 4975, 5018) || (bits & mask) == mask);
                    DynAbs.Tracing.TraceSender.TraceExitStaticMethod(10073, 4877, 5034);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10073, 4877, 5034);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10073, 4877, 5034);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }

            public void SetManagedKind(ManagedKind managedKind)
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(10073, 5050, 5363);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 5134, 5208);

                    int
                    bitsToSet = ((int)managedKind & ManagedKindMask) << ManagedKindOffset
                    ;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 5226, 5278);

                    f_10073_5226_5277(BitsAreUnsetOrSame(_flags, bitsToSet));
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 5296, 5348);

                    f_10073_5296_5347(ref _flags, bitsToSet);
                    DynAbs.Tracing.TraceSender.TraceExitMethod(10073, 5050, 5363);

                    int
                    f_10073_5226_5277(bool
                    condition)
                    {
                        Debug.Assert(condition);
                        DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 5226, 5277);
                        return 0;
                    }


                    bool
                    f_10073_5296_5347(ref int
                    flags, int
                    toSet)
                    {
                        var return_v = ThreadSafeFlagOperations.Set(ref flags, toSet);
                        DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 5296, 5347);
                        return return_v;
                    }

                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10073, 5050, 5363);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10073, 5050, 5363);
                }
            }

            public bool TryGetNullableContext(out byte? value)
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(10073, 5379, 5587);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 5462, 5572);

                    return f_10073_5469_5571(((NullableContextKind)((_flags >> NullableContextOffset) & NullableContextMask)), out value);
                    DynAbs.Tracing.TraceSender.TraceExitMethod(10073, 5379, 5587);

                    bool
                    f_10073_5469_5571(NullableContextKind
                    kind, out byte?
                    value)
                    {
                        var return_v = kind.TryGetByte(out value);
                        DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 5469, 5571);
                        return return_v;
                    }

                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10073, 5379, 5587);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10073, 5379, 5587);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }

            public bool SetNullableContext(byte? value)
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(10073, 5603, 5830);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 5679, 5815);

                    return f_10073_5686_5814(ref _flags, (((int)f_10073_5734_5764(value) & NullableContextMask) << NullableContextOffset));
                    DynAbs.Tracing.TraceSender.TraceExitMethod(10073, 5603, 5830);

                    Microsoft.CodeAnalysis.CSharp.Symbols.NullableContextKind
                    f_10073_5734_5764(byte?
                    value)
                    {
                        var return_v = value.ToNullableContextFlags();
                        DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 5734, 5764);
                        return return_v;
                    }


                    bool
                    f_10073_5686_5814(ref int
                    flags, int
                    toSet)
                    {
                        var return_v = ThreadSafeFlagOperations.Set(ref flags, toSet);
                        DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 5686, 5814);
                        return return_v;
                    }

                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10073, 5603, 5830);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10073, 5603, 5830);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }

            static bool
            f_10073_3981_4042(int
            mask)
            {
                var return_v = EnumUtilities.ContainsAllValues<SpecialType>(mask);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 3981, 4042);
                return return_v;
            }


            static int
            f_10073_3968_4043(bool
            condition)
            {
                Debug.Assert(condition);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 3968, 4043);
                return 0;
            }


            static bool
            f_10073_4075_4148(int
            mask)
            {
                var return_v = EnumUtilities.ContainsAllValues<NullableContextKind>(mask);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 4075, 4148);
                return return_v;
            }


            static int
            f_10073_4062_4149(bool
            condition)
            {
                Debug.Assert(condition);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 4062, 4149);
                return 0;
            }

        }

        private static readonly ObjectPool<PooledDictionary<Symbol, Symbol>> s_duplicateRecordMemberSignatureDictionary;

        protected SymbolCompletionState state;

        private Flags _flags;

        private ImmutableArray<DiagnosticInfo> _managedKindUseSiteDiagnostics;

        private readonly DeclarationModifiers _declModifiers;

        private readonly NamespaceOrTypeSymbol _containingSymbol;

        protected readonly MergedTypeDeclaration declaration;

        private DeclaredMembersAndInitializers? _lazyDeclaredMembersAndInitializers;

        private MembersAndInitializers? _lazyMembersAndInitializers;

        private Dictionary<string, ImmutableArray<Symbol>>? _lazyMembersDictionary;

        private Dictionary<string, ImmutableArray<Symbol>>? _lazyEarlyAttributeDecodingMembersDictionary;

        private static readonly Dictionary<string, ImmutableArray<NamedTypeSymbol>> s_emptyTypeMembers;

        private Dictionary<string, ImmutableArray<NamedTypeSymbol>>? _lazyTypeMembers;

        private ImmutableArray<Symbol> _lazyMembersFlattened;

        private ImmutableArray<SynthesizedExplicitImplementationForwardingMethod> _lazySynthesizedExplicitImplementations;

        private int _lazyKnownCircularStruct;

        private LexicalSortKey _lazyLexicalSortKey;

        private ThreeState _lazyContainsExtensionMethods;

        private ThreeState _lazyAnyMemberHasAttributes;

        internal SourceMemberContainerTypeSymbol(
                    NamespaceOrTypeSymbol containingSymbol,
                    MergedTypeDeclaration declaration,
                    DiagnosticBag diagnostics,
                    TupleExtraData? tupleData = null)
        : base(f_10073_8156_8165_C(tupleData))
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterConstructor(10073, 7906, 9884);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 6289, 6303);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 6353, 6370);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 6422, 6433);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 6793, 6883);
                this._lazyDeclaredMembersAndInitializers = DeclaredMembersAndInitializers.UninitializedSentinel; DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 6928, 6955);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 7018, 7040);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 7103, 7147);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 7408, 7424);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 7634, 7658);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 7692, 7743);
                this._lazyLexicalSortKey = LexicalSortKey.NotInitialized; DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 7775, 7804);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 7834, 7861);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 8191, 8228);

                _containingSymbol = containingSymbol;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 8242, 8273);

                this.declaration = declaration;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 8289, 8339);

                TypeKind
                typeKind = f_10073_8309_8338(f_10073_8309_8325(declaration))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 8353, 8406);

                var
                modifiers = f_10073_8369_8405(this, typeKind, diagnostics)
                ;
                try
                {
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 8422, 8581);
                    foreach (var singleDeclaration in f_10073_8456_8480_I(f_10073_8456_8480(declaration)))
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 8422, 8581);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 8514, 8566);

                        f_10073_8514_8565(diagnostics, singleDeclaration.Diagnostics);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 8422, 8581);
                    }
                }
                catch (System.Exception)
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoopByException(10073, 1, 160);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoop(10073, 1, 160);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 8597, 8668);

                int
                access = (int)(modifiers & DeclarationModifiers.AccessibilityMask)
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 8682, 9203) || true) && ((access & (access - 1)) != 0)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 8682, 9203);

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 8783, 8932) || true) && ((modifiers & DeclarationModifiers.Partial) != 0)
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 8783, 8932);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 8857, 8932);

                        f_10073_8857_8931(diagnostics, ErrorCode.ERR_PartialModifierConflict, f_10073_8912_8921()[0], this);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 8783, 8932);
                    }
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 8950, 8982);

                    access = access & ~(access - 1);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 9038, 9091);

                    modifiers &= ~DeclarationModifiers.AccessibilityMask;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 9128, 9170);

                    modifiers |= (DeclarationModifiers)access;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 8682, 9203);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 9217, 9244);

                _declModifiers = modifiers;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 9260, 9394);

                var
                specialType = (DynAbs.Tracing.TraceSender.Conditional_F1(10073, 9278, 9320) || ((access == (int)DeclarationModifiers.Public
                && DynAbs.Tracing.TraceSender.Conditional_F2(10073, 9340, 9357)) || DynAbs.Tracing.TraceSender.Conditional_F3(10073, 9377, 9393))) ? f_10073_9340_9357(this) : SpecialType.None
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 9410, 9452);

                _flags = f_10073_9419_9451(specialType, typeKind);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 9468, 9509);

                var
                containingType = f_10073_9489_9508(this)
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 9523, 9754) || true) && (f_10073_9527_9551_M(DynAbs.Tracing.TraceSender.TraceConditionalAccessExpression(containingType, 10073, 9527, 9551)?.IsSealed) == true && (DynAbs.Tracing.TraceSender.Expression_True(10073, 9527, 9604) && f_10073_9563_9604(f_10073_9563_9589(this))))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 9523, 9754);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 9638, 9739);

                    f_10073_9638_9738(diagnostics, f_10073_9654_9717(f_10073_9702_9716()), f_10073_9719_9728()[0], this);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 9523, 9754);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 9770, 9823);

                state.NotePartComplete(CompletionPart.TypeArguments);
                DynAbs.Tracing.TraceSender.TraceExitConstructor(10073, 7906, 9884);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10073, 7906, 9884);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10073, 7906, 9884);
            }
        }

        private SpecialType MakeSpecialType()
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10073, 9896, 10679);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 10020, 10668) || true) && (f_10073_10024_10045(f_10073_10024_10040()) == SymbolKind.Namespace && (DynAbs.Tracing.TraceSender.Expression_True(10073, 10024, 10160) && f_10073_10090_10160(f_10073_10090_10125(f_10073_10090_10106()))))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 10020, 10668);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 10296, 10392);

                    var
                    emittedName = f_10073_10314_10391(f_10073_10314_10330(), SymbolDisplayFormat.QualifiedNameOnlyFormat)
                    ;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 10410, 10486);

                    emittedName = f_10073_10424_10485(emittedName, f_10073_10472_10484());
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 10506, 10563);

                    return f_10073_10513_10562(emittedName);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 10020, 10668);
                }

                else

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 10020, 10668);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 10629, 10653);

                    return SpecialType.None;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 10020, 10668);
                }
                DynAbs.Tracing.TraceSender.TraceExitMethod(10073, 9896, 10679);

                Microsoft.CodeAnalysis.CSharp.Symbol
                f_10073_10024_10040()
                {
                    var return_v = ContainingSymbol;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 10024, 10040);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SymbolKind
                f_10073_10024_10045(Microsoft.CodeAnalysis.CSharp.Symbol
                this_param)
                {
                    var return_v = this_param.Kind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 10024, 10045);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbol
                f_10073_10090_10106()
                {
                    var return_v = ContainingSymbol;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 10090, 10106);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.AssemblySymbol
                f_10073_10090_10125(Microsoft.CodeAnalysis.CSharp.Symbol
                this_param)
                {
                    var return_v = this_param.ContainingAssembly;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 10090, 10125);
                    return return_v;
                }


                bool
                f_10073_10090_10160(Microsoft.CodeAnalysis.CSharp.Symbols.AssemblySymbol
                this_param)
                {
                    var return_v = this_param.KeepLookingForDeclaredSpecialTypes;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 10090, 10160);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbol
                f_10073_10314_10330()
                {
                    var return_v = ContainingSymbol;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 10314, 10330);
                    return return_v;
                }


                string
                f_10073_10314_10391(Microsoft.CodeAnalysis.CSharp.Symbol
                this_param, Microsoft.CodeAnalysis.SymbolDisplayFormat
                format)
                {
                    var return_v = this_param.ToDisplayString(format);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 10314, 10391);
                    return return_v;
                }


                string
                f_10073_10472_10484()
                {
                    var return_v = MetadataName;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 10472, 10484);
                    return return_v;
                }


                string
                f_10073_10424_10485(string
                qualifier, string
                name)
                {
                    var return_v = MetadataHelpers.BuildQualifiedName(qualifier, name);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 10424, 10485);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SpecialType
                f_10073_10513_10562(string
                metadataName)
                {
                    var return_v = SpecialTypes.GetTypeFromMetadataName(metadataName);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 10513, 10562);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10073, 9896, 10679);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10073, 9896, 10679);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private DeclarationModifiers MakeModifiers(TypeKind typeKind, DiagnosticBag diagnostics)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10073, 10691, 14035);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 10804, 10852);

                Symbol
                containingSymbol = f_10073_10830_10851(this)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 10866, 10901);

                DeclarationModifiers
                defaultAccess
                = default(DeclarationModifiers);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 10915, 10977);

                var
                allowedModifiers = DeclarationModifiers.AccessibilityMask
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 10993, 11551) || true) && (f_10073_10997_11018(containingSymbol) == SymbolKind.Namespace)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 10993, 11551);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 11076, 11122);

                    defaultAccess = DeclarationModifiers.Internal;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 10993, 11551);
                }

                else

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 10993, 11551);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 11188, 11233);

                    allowedModifiers |= DeclarationModifiers.New;

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 11253, 11536) || true) && (f_10073_11257_11304(((NamedTypeSymbol)containingSymbol)))
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 11253, 11536);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 11346, 11390);

                        defaultAccess = DeclarationModifiers.Public;
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 11253, 11536);
                    }

                    else

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 11253, 11536);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 11472, 11517);

                        defaultAccess = DeclarationModifiers.Private;
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 11253, 11536);
                    }
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 10993, 11551);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 11567, 12613);

                switch (typeKind)
                {

                    case TypeKind.Class:
                    case TypeKind.Submission:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 11567, 12613);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 11702, 11868);

                        allowedModifiers |= DeclarationModifiers.Partial | DeclarationModifiers.Sealed | DeclarationModifiers.Abstract
                                                | DeclarationModifiers.Unsafe;

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 11892, 12031) || true) && (f_10073_11896_11910_M(!this.IsRecord))
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 11892, 12031);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 11960, 12008);

                            allowedModifiers |= DeclarationModifiers.Static;
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 11892, 12031);
                        }
                        DynAbs.Tracing.TraceSender.TraceBreak(10073, 12055, 12061);

                        break;
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 11567, 12613);

                    case TypeKind.Struct:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 11567, 12613);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 12122, 12260);

                        allowedModifiers |= DeclarationModifiers.Partial | DeclarationModifiers.Ref | DeclarationModifiers.ReadOnly | DeclarationModifiers.Unsafe;
                        DynAbs.Tracing.TraceSender.TraceBreak(10073, 12282, 12288);

                        break;
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 11567, 12613);

                    case TypeKind.Interface:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 11567, 12613);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 12352, 12431);

                        allowedModifiers |= DeclarationModifiers.Partial | DeclarationModifiers.Unsafe;
                        DynAbs.Tracing.TraceSender.TraceBreak(10073, 12453, 12459);

                        break;
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 11567, 12613);

                    case TypeKind.Delegate:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 11567, 12613);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 12522, 12570);

                        allowedModifiers |= DeclarationModifiers.Unsafe;
                        DynAbs.Tracing.TraceSender.TraceBreak(10073, 12592, 12598);

                        break;
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 11567, 12613);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 12629, 12649);

                bool
                modifierErrors
                = default(bool);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 12663, 12835);

                var
                mods = f_10073_12674_12834(this, defaultAccess, allowedModifiers, diagnostics, out modifierErrors)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 12851, 12895);

                f_10073_12851_12894(
                            this, mods, diagnostics);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 12911, 13209) || true) && (!modifierErrors && (DynAbs.Tracing.TraceSender.Expression_True(10073, 12915, 12994) && (mods & DeclarationModifiers.Abstract) != 0) && (DynAbs.Tracing.TraceSender.Expression_True(10073, 12915, 13088) && (mods & (DeclarationModifiers.Sealed | DeclarationModifiers.Static)) != 0))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 12911, 13209);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 13122, 13194);

                    f_10073_13122_13193(diagnostics, ErrorCode.ERR_AbstractSealedStatic, f_10073_13174_13183()[0], this);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 12911, 13209);
                }

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 13225, 13514) || true) && (!modifierErrors && (DynAbs.Tracing.TraceSender.Expression_True(10073, 13229, 13396) && (mods & (DeclarationModifiers.Sealed | DeclarationModifiers.Static)) == (DeclarationModifiers.Sealed | DeclarationModifiers.Static)))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 13225, 13514);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 13430, 13499);

                    f_10073_13430_13498(diagnostics, ErrorCode.ERR_SealedStaticClass, f_10073_13479_13488()[0], this);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 13225, 13514);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 13530, 13996);

                switch (typeKind)
                {

                    case TypeKind.Interface:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 13530, 13996);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 13626, 13664);

                        mods |= DeclarationModifiers.Abstract;
                        DynAbs.Tracing.TraceSender.TraceBreak(10073, 13686, 13692);

                        break;
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 13530, 13996);

                    case TypeKind.Struct:
                    case TypeKind.Enum:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 13530, 13996);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 13790, 13826);

                        mods |= DeclarationModifiers.Sealed;
                        DynAbs.Tracing.TraceSender.TraceBreak(10073, 13848, 13854);

                        break;
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 13530, 13996);

                    case TypeKind.Delegate:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 13530, 13996);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 13917, 13953);

                        mods |= DeclarationModifiers.Sealed;
                        DynAbs.Tracing.TraceSender.TraceBreak(10073, 13975, 13981);

                        break;
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 13530, 13996);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 14012, 14024);

                return mods;
                DynAbs.Tracing.TraceSender.TraceExitMethod(10073, 10691, 14035);

                Microsoft.CodeAnalysis.CSharp.Symbol
                f_10073_10830_10851(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                this_param)
                {
                    var return_v = this_param.ContainingSymbol;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 10830, 10851);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SymbolKind
                f_10073_10997_11018(Microsoft.CodeAnalysis.CSharp.Symbol
                this_param)
                {
                    var return_v = this_param.Kind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 10997, 11018);
                    return return_v;
                }


                bool
                f_10073_11257_11304(Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                this_param)
                {
                    var return_v = this_param.IsInterface;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 11257, 11304);
                    return return_v;
                }


                bool
                f_10073_11896_11910_M(bool
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 11896, 11910);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.DeclarationModifiers
                f_10073_12674_12834(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                this_param, Microsoft.CodeAnalysis.CSharp.DeclarationModifiers
                defaultAccess, Microsoft.CodeAnalysis.CSharp.DeclarationModifiers
                allowedModifiers, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, out bool
                modifierErrors)
                {
                    var return_v = this_param.MakeAndCheckTypeModifiers(defaultAccess, allowedModifiers, diagnostics, out modifierErrors);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 12674, 12834);
                    return return_v;
                }


                int
                f_10073_12851_12894(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                symbol, Microsoft.CodeAnalysis.CSharp.DeclarationModifiers
                modifiers, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    symbol.CheckUnsafeModifier(modifiers, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 12851, 12894);
                    return 0;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Location>
                f_10073_13174_13183()
                {
                    var return_v = Locations;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 13174, 13183);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo
                f_10073_13122_13193(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, Microsoft.CodeAnalysis.Location
                location, params object[]
                args)
                {
                    var return_v = diagnostics.Add(code, location, args);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 13122, 13193);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Location>
                f_10073_13479_13488()
                {
                    var return_v = Locations;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 13479, 13488);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo
                f_10073_13430_13498(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, Microsoft.CodeAnalysis.Location
                location, params object[]
                args)
                {
                    var return_v = diagnostics.Add(code, location, args);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 13430, 13498);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10073, 10691, 14035);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10073, 10691, 14035);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private DeclarationModifiers MakeAndCheckTypeModifiers(
                    DeclarationModifiers defaultAccess,
                    DeclarationModifiers allowedModifiers,
                    DiagnosticBag diagnostics,
                    out bool modifierErrors)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10073, 14047, 18790);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 14306, 14329);

                modifierErrors = false;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 14345, 14385);

                var
                result = DeclarationModifiers.Unset
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 14399, 14447);

                var
                partCount = declaration.Declarations.Length
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 14461, 14488);

                var
                missingPartial = false
                ;
                try
                {
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 14513, 14518);

                    for (var
        i = 0
        ; (DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 14504, 15915) || true) && (i < partCount)
        ; DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 14535, 14538)
        , i++, DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 14504, 15915))

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 14504, 15915);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 14572, 14611);

                        var
                        decl = f_10073_14583_14607(declaration)[i]
                        ;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 14629, 14655);

                        var
                        mods = f_10073_14640_14654(decl)
                        ;

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 14675, 14821) || true) && (partCount > 1 && (DynAbs.Tracing.TraceSender.Expression_True(10073, 14679, 14738) && (mods & DeclarationModifiers.Partial) == 0))
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 14675, 14821);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 14780, 14802);

                            missingPartial = true;
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 14675, 14821);
                        }

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 14841, 15666) || true) && (!modifierErrors)
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 14841, 15666);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 14902, 15126);

                            mods = f_10073_14909_15125(mods, allowedModifiers, f_10073_14988_15028(f_10073_14988_15012(declaration)[i]), diagnostics, modifierTokens: null, modifierErrors: out modifierErrors);

                            if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 15237, 15647) || true) && (!modifierErrors)
                            )

                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 15237, 15647);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 15306, 15404);

                                var
                                info = f_10073_15317_15403(mods, this, isExplicitInterfaceImplementation: false)
                                ;

                                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 15430, 15624) || true) && (info != null)
                                )

                                {
                                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 15430, 15624);
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 15504, 15545);

                                    f_10073_15504_15544(diagnostics, info, f_10073_15526_15540(this)[0]);
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 15575, 15597);

                                    modifierErrors = true;
                                    DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 15430, 15624);
                                }
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 15237, 15647);
                            }
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 14841, 15666);
                        }

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 15686, 15898) || true) && (result == DeclarationModifiers.Unset)
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 15686, 15898);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 15768, 15782);

                            result = mods;
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 15686, 15898);
                        }

                        else

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 15686, 15898);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 15864, 15879);

                            result |= mods;
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 15686, 15898);
                        }
                    }
                }
                catch (System.Exception)
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoopByException(10073, 1, 1412);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoop(10073, 1, 1412);
                }
                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 15931, 16062) || true) && ((result & DeclarationModifiers.AccessibilityMask) == 0)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 15931, 16062);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 16023, 16047);

                    result |= defaultAccess;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 15931, 16062);
                }

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 16078, 17960) || true) && (missingPartial)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 16078, 17960);

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 16130, 17945) || true) && ((result & DeclarationModifiers.Partial) == 0)
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 16130, 17945);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 16266, 17322);

                        switch (f_10073_16274_16300(f_10073_16274_16295(this)))
                        {

                            case SymbolKind.Namespace:
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 16266, 17322);
                                try
                                {
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 16415, 16420);
                                    for (var
        i = 1
        ; (DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 16406, 16718) || true) && (i < partCount)
        ; DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 16437, 16440)
        , i++, DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 16406, 16718))

                                    {
                                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 16406, 16718);
                                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 16506, 16631);

                                        f_10073_16506_16630(diagnostics, ErrorCode.ERR_DuplicateNameInNS, f_10073_16555_16595(f_10073_16555_16579(declaration)[i]), f_10073_16597_16606(this), f_10073_16608_16629(this));
                                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 16665, 16687);

                                        modifierErrors = true;
                                    }
                                }
                                catch (System.Exception)
                                {
                                    DynAbs.Tracing.TraceSender.TraceExitLoopByException(10073, 1, 313);
                                    throw;
                                }
                                finally
                                {
                                    DynAbs.Tracing.TraceSender.TraceExitLoop(10073, 1, 313);
                                }
                                DynAbs.Tracing.TraceSender.TraceBreak(10073, 16748, 16754);

                                break;
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 16266, 17322);

                            case SymbolKind.NamedType:
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 16266, 17322);
                                try
                                {
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 16847, 16852);
                                    for (var
        i = 1
        ; (DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 16838, 17263) || true) && (i < partCount)
        ; DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 16869, 16872)
        , i++, DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 16838, 17263))

                                    {
                                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 16838, 17263);

                                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 16938, 17176) || true) && (ContainingType!.Locations.Length == 1 || (DynAbs.Tracing.TraceSender.Expression_False(10073, 16942, 17009) || f_10073_16983_17009(f_10073_16983_16997())))
                                        )

                                        {
                                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 16938, 17176);
                                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 17048, 17176);

                                            f_10073_17048_17175(diagnostics, ErrorCode.ERR_DuplicateNameInClass, f_10073_17100_17140(f_10073_17100_17124(declaration)[i]), f_10073_17142_17163(this), f_10073_17165_17174(this));
                                            DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 16938, 17176);
                                        }
                                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 17210, 17232);

                                        modifierErrors = true;
                                    }
                                }
                                catch (System.Exception)
                                {
                                    DynAbs.Tracing.TraceSender.TraceExitLoopByException(10073, 1, 426);
                                    throw;
                                }
                                finally
                                {
                                    DynAbs.Tracing.TraceSender.TraceExitLoop(10073, 1, 426);
                                }
                                DynAbs.Tracing.TraceSender.TraceBreak(10073, 17293, 17299);

                                break;
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 16266, 17322);
                        }
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 16130, 17945);
                    }

                    else

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 16130, 17945);
                        try
                        {
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 17413, 17418);
                            for (var
        i = 0
        ; (DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 17404, 17926) || true) && (i < partCount)
        ; DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 17435, 17438)
        , i++, DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 17404, 17926))

                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 17404, 17926);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 17488, 17540);

                                var
                                singleDeclaration = f_10073_17512_17536(declaration)[i]
                                ;
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 17566, 17605);

                                var
                                mods = f_10073_17577_17604(singleDeclaration)
                                ;

                                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 17631, 17903) || true) && ((mods & DeclarationModifiers.Partial) == 0)
                                )

                                {
                                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 17631, 17903);
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 17735, 17824);

                                    f_10073_17735_17823(diagnostics, ErrorCode.ERR_MissingPartial, f_10073_17781_17811(singleDeclaration), f_10073_17813_17822(this));
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 17854, 17876);

                                    modifierErrors = true;
                                    DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 17631, 17903);
                                }
                            }
                        }
                        catch (System.Exception)
                        {
                            DynAbs.Tracing.TraceSender.TraceExitLoopByException(10073, 1, 523);
                            throw;
                        }
                        finally
                        {
                            DynAbs.Tracing.TraceSender.TraceExitLoop(10073, 1, 523);
                        }
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 16130, 17945);
                    }
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 16078, 17960);
                }

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 17976, 18749) || true) && (f_10073_17980_17989(this) == f_10073_17993_18038(SyntaxKind.RecordKeyword))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 17976, 18749);
                    try
                    {
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 18072, 18734);
                        foreach (var syntaxRef in f_10073_18098_18114_I(f_10073_18098_18114()))
                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 18072, 18734);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 18156, 18468);

                            SyntaxToken?
                            identifier = f_10073_18182_18203(syntaxRef) switch
                            {
                                BaseTypeDeclarationSyntax typeDecl when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 18259, 18316) && DynAbs.Tracing.TraceSender.Expression_True(10073, 18259, 18316))
=> f_10073_18297_18316(typeDecl),
                                DelegateDeclarationSyntax delegateDecl when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 18343, 18408) && DynAbs.Tracing.TraceSender.Expression_True(10073, 18343, 18408))
=> f_10073_18385_18408(delegateDecl),
                                _ when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 18435, 18444) && DynAbs.Tracing.TraceSender.Expression_True(10073, 18435, 18444))
=> null
                            }
                            ;
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 18523, 18715);

                            f_10073_18523_18714((DynAbs.Tracing.TraceSender.Conditional_F1(10073, 18545, 18563) || ((identifier != null && DynAbs.Tracing.TraceSender.Conditional_F2(10073, 18566, 18587)) || DynAbs.Tracing.TraceSender.Conditional_F3(10073, 18590, 18594))) ? identifier.Value.Text : null, f_10073_18596_18621(this), diagnostics, ((DynAbs.Tracing.TraceSender.Conditional_F1(10073, 18637, 18655) || ((identifier != null && DynAbs.Tracing.TraceSender.Conditional_F2(10073, 18658, 18688)) || DynAbs.Tracing.TraceSender.Conditional_F3(10073, 18691, 18695))) ? identifier.Value.GetLocation() : null) ?? (DynAbs.Tracing.TraceSender.Expression_Null<Microsoft.CodeAnalysis.Location?>(10073, 18636, 18713) ?? f_10073_18700_18713()));
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 18072, 18734);
                        }
                    }
                    catch (System.Exception)
                    {
                        DynAbs.Tracing.TraceSender.TraceExitLoopByException(10073, 1, 663);
                        throw;
                    }
                    finally
                    {
                        DynAbs.Tracing.TraceSender.TraceExitLoop(10073, 1, 663);
                    }
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 17976, 18749);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 18765, 18779);

                return result;
                DynAbs.Tracing.TraceSender.TraceExitMethod(10073, 14047, 18790);

                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.SingleTypeDeclaration>
                f_10073_14583_14607(Microsoft.CodeAnalysis.CSharp.MergedTypeDeclaration
                this_param)
                {
                    var return_v = this_param.Declarations;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 14583, 14607);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.DeclarationModifiers
                f_10073_14640_14654(Microsoft.CodeAnalysis.CSharp.SingleTypeDeclaration
                this_param)
                {
                    var return_v = this_param.Modifiers;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 14640, 14654);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.SingleTypeDeclaration>
                f_10073_14988_15012(Microsoft.CodeAnalysis.CSharp.MergedTypeDeclaration
                this_param)
                {
                    var return_v = this_param.Declarations;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 14988, 15012);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SourceLocation
                f_10073_14988_15028(Microsoft.CodeAnalysis.CSharp.SingleTypeDeclaration
                this_param)
                {
                    var return_v = this_param.NameLocation;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 14988, 15028);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.DeclarationModifiers
                f_10073_14909_15125(Microsoft.CodeAnalysis.CSharp.DeclarationModifiers
                modifiers, Microsoft.CodeAnalysis.CSharp.DeclarationModifiers
                allowedModifiers, Microsoft.CodeAnalysis.SourceLocation
                errorLocation, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.SyntaxTokenList?
                modifierTokens, out bool
                modifierErrors)
                {
                    var return_v = ModifierUtils.CheckModifiers(modifiers, allowedModifiers, (Microsoft.CodeAnalysis.Location)errorLocation, diagnostics, modifierTokens: modifierTokens, out modifierErrors);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 14909, 15125);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo
                f_10073_15317_15403(Microsoft.CodeAnalysis.CSharp.DeclarationModifiers
                modifiers, Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                symbol, bool
                isExplicitInterfaceImplementation)
                {
                    var return_v = ModifierUtils.CheckAccessibility(modifiers, (Microsoft.CodeAnalysis.CSharp.Symbol)symbol, isExplicitInterfaceImplementation: isExplicitInterfaceImplementation);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 15317, 15403);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Location>
                f_10073_15526_15540(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                this_param)
                {
                    var return_v = this_param.Locations;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 15526, 15540);
                    return return_v;
                }


                int
                f_10073_15504_15544(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo
                info, Microsoft.CodeAnalysis.Location
                location)
                {
                    diagnostics.Add((Microsoft.CodeAnalysis.DiagnosticInfo)info, location);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 15504, 15544);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.Symbol
                f_10073_16274_16295(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                this_param)
                {
                    var return_v = this_param.ContainingSymbol;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 16274, 16295);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SymbolKind
                f_10073_16274_16300(Microsoft.CodeAnalysis.CSharp.Symbol
                this_param)
                {
                    var return_v = this_param.Kind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 16274, 16300);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.SingleTypeDeclaration>
                f_10073_16555_16579(Microsoft.CodeAnalysis.CSharp.MergedTypeDeclaration
                this_param)
                {
                    var return_v = this_param.Declarations;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 16555, 16579);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SourceLocation
                f_10073_16555_16595(Microsoft.CodeAnalysis.CSharp.SingleTypeDeclaration
                this_param)
                {
                    var return_v = this_param.NameLocation;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 16555, 16595);
                    return return_v;
                }


                string
                f_10073_16597_16606(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                this_param)
                {
                    var return_v = this_param.Name;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 16597, 16606);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbol
                f_10073_16608_16629(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                this_param)
                {
                    var return_v = this_param.ContainingSymbol;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 16608, 16629);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo
                f_10073_16506_16630(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, Microsoft.CodeAnalysis.SourceLocation
                location, params object[]
                args)
                {
                    var return_v = diagnostics.Add(code, (Microsoft.CodeAnalysis.Location)location, args);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 16506, 16630);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                f_10073_16983_16997()
                {
                    var return_v = ContainingType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 16983, 16997);
                    return return_v;
                }


                bool
                f_10073_16983_17009(Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                type)
                {
                    var return_v = type.IsPartial();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 16983, 17009);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.SingleTypeDeclaration>
                f_10073_17100_17124(Microsoft.CodeAnalysis.CSharp.MergedTypeDeclaration
                this_param)
                {
                    var return_v = this_param.Declarations;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 17100, 17124);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SourceLocation
                f_10073_17100_17140(Microsoft.CodeAnalysis.CSharp.SingleTypeDeclaration
                this_param)
                {
                    var return_v = this_param.NameLocation;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 17100, 17140);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbol
                f_10073_17142_17163(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                this_param)
                {
                    var return_v = this_param.ContainingSymbol;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 17142, 17163);
                    return return_v;
                }


                string
                f_10073_17165_17174(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                this_param)
                {
                    var return_v = this_param.Name;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 17165, 17174);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo
                f_10073_17048_17175(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, Microsoft.CodeAnalysis.SourceLocation
                location, params object[]
                args)
                {
                    var return_v = diagnostics.Add(code, (Microsoft.CodeAnalysis.Location)location, args);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 17048, 17175);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.SingleTypeDeclaration>
                f_10073_17512_17536(Microsoft.CodeAnalysis.CSharp.MergedTypeDeclaration
                this_param)
                {
                    var return_v = this_param.Declarations;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 17512, 17536);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.DeclarationModifiers
                f_10073_17577_17604(Microsoft.CodeAnalysis.CSharp.SingleTypeDeclaration
                this_param)
                {
                    var return_v = this_param.Modifiers;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 17577, 17604);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SourceLocation
                f_10073_17781_17811(Microsoft.CodeAnalysis.CSharp.SingleTypeDeclaration
                this_param)
                {
                    var return_v = this_param.NameLocation;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 17781, 17811);
                    return return_v;
                }


                string
                f_10073_17813_17822(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                this_param)
                {
                    var return_v = this_param.Name;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 17813, 17822);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo
                f_10073_17735_17823(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, Microsoft.CodeAnalysis.SourceLocation
                location, params object[]
                args)
                {
                    var return_v = diagnostics.Add(code, (Microsoft.CodeAnalysis.Location)location, args);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 17735, 17823);
                    return return_v;
                }


                string
                f_10073_17980_17989(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                this_param)
                {
                    var return_v = this_param.Name;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 17980, 17989);
                    return return_v;
                }


                string
                f_10073_17993_18038(Microsoft.CodeAnalysis.CSharp.SyntaxKind
                kind)
                {
                    var return_v = SyntaxFacts.GetText(kind);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 17993, 18038);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.SyntaxReference>
                f_10073_18098_18114()
                {
                    var return_v = SyntaxReferences;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 18098, 18114);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SyntaxNode
                f_10073_18182_18203(Microsoft.CodeAnalysis.SyntaxReference
                this_param)
                {
                    var return_v = this_param.GetSyntax();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 18182, 18203);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SyntaxToken
                f_10073_18297_18316(Microsoft.CodeAnalysis.CSharp.Syntax.BaseTypeDeclarationSyntax
                this_param)
                {
                    var return_v = this_param.Identifier;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 18297, 18316);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SyntaxToken
                f_10073_18385_18408(Microsoft.CodeAnalysis.CSharp.Syntax.DelegateDeclarationSyntax
                this_param)
                {
                    var return_v = this_param.Identifier;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 18385, 18408);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                f_10073_18596_18621(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                this_param)
                {
                    var return_v = this_param.DeclaringCompilation;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 18596, 18621);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Location
                f_10073_18700_18713()
                {
                    var return_v = Location.None;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 18700, 18713);
                    return return_v;
                }


                int
                f_10073_18523_18714(string?
                name, Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                compilation, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.Location
                location)
                {
                    ReportTypeNamedRecord(name, compilation, diagnostics, location);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 18523, 18714);
                    return 0;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.SyntaxReference>
                f_10073_18098_18114_I(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.SyntaxReference>
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 18098, 18114);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10073, 14047, 18790);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10073, 14047, 18790);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        internal static void ReportTypeNamedRecord(string? name, CSharpCompilation compilation, DiagnosticBag diagnostics, Location location)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterStaticMethod(10073, 18802, 19244);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 18960, 19233) || true) && (name == f_10073_18972_19017(SyntaxKind.RecordKeyword) && (DynAbs.Tracing.TraceSender.Expression_True(10073, 18964, 19115) && f_10073_19038_19065(compilation) >= f_10073_19069_19115(MessageID.IDS_FeatureRecords)))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 18960, 19233);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 19149, 19218);

                    f_10073_19149_19217(diagnostics, ErrorCode.WRN_RecordNamedDisallowed, location, name);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 18960, 19233);
                }
                DynAbs.Tracing.TraceSender.TraceExitStaticMethod(10073, 18802, 19244);

                string
                f_10073_18972_19017(Microsoft.CodeAnalysis.CSharp.SyntaxKind
                kind)
                {
                    var return_v = SyntaxFacts.GetText(kind);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 18972, 19017);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.LanguageVersion
                f_10073_19038_19065(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param)
                {
                    var return_v = this_param.LanguageVersion;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 19038, 19065);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.LanguageVersion
                f_10073_19069_19115(Microsoft.CodeAnalysis.CSharp.MessageID
                feature)
                {
                    var return_v = feature.RequiredVersion();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 19069, 19115);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo
                f_10073_19149_19217(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, Microsoft.CodeAnalysis.Location
                location, params object[]
                args)
                {
                    var return_v = diagnostics.Add(code, location, args);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 19149, 19217);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10073, 18802, 19244);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10073, 18802, 19244);
            }
        }

        internal sealed override bool RequiresCompletion
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(10073, 19381, 19401);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 19387, 19399);

                    return true;
                    DynAbs.Tracing.TraceSender.TraceExitMethod(10073, 19381, 19401);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10073, 19308, 19412);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10073, 19308, 19412);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        internal sealed override bool HasComplete(CompletionPart part)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10073, 19424, 19553);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 19511, 19542);

                return state.HasComplete(part);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10073, 19424, 19553);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10073, 19424, 19553);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10073, 19424, 19553);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        protected abstract void CheckBase(DiagnosticBag diagnostics);

        protected abstract void CheckInterfaces(DiagnosticBag diagnostics);

        internal override void ForceComplete(SourceLocation? locationOpt, CancellationToken cancellationToken)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10073, 19715, 26643);
                try
                {
                    while ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 19842, 26579) || true) && (true)
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 19842, 26579);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 19995, 20044);

                        cancellationToken.ThrowIfCancellationRequested();
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 20062, 20108);

                        var
                        incompletePart = state.NextIncompletePart
                        ;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 20126, 26486);

                        switch (incompletePart)
                        {

                            case CompletionPart.Attributes:
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 20126, 26486);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 20247, 20263);

                                f_10073_20247_20262(this);
                                DynAbs.Tracing.TraceSender.TraceBreak(10073, 20289, 20295);

                                break;
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 20126, 26486);

                            case CompletionPart.StartBaseType:
                            case CompletionPart.FinishBaseType:
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 20126, 26486);

                                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 20436, 20878) || true) && (state.NotePartComplete(CompletionPart.StartBaseType))
                                )

                                {
                                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 20436, 20878);
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 20550, 20596);

                                    var
                                    diagnostics = f_10073_20568_20595()
                                    ;
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 20626, 20649);

                                    f_10073_20626_20648(this, diagnostics);
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 20679, 20718);

                                    f_10073_20679_20717(this, diagnostics);
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 20748, 20802);

                                    state.NotePartComplete(CompletionPart.FinishBaseType);
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 20832, 20851);

                                    f_10073_20832_20850(diagnostics);
                                    DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 20436, 20878);
                                }
                                DynAbs.Tracing.TraceSender.TraceBreak(10073, 20904, 20910);

                                break;
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 20126, 26486);

                            case CompletionPart.StartInterfaces:
                            case CompletionPart.FinishInterfaces:
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 20126, 26486);

                                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 21055, 21507) || true) && (state.NotePartComplete(CompletionPart.StartInterfaces))
                                )

                                {
                                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 21055, 21507);
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 21171, 21217);

                                    var
                                    diagnostics = f_10073_21189_21216()
                                    ;
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 21247, 21276);

                                    f_10073_21247_21275(this, diagnostics);
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 21306, 21345);

                                    f_10073_21306_21344(this, diagnostics);
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 21375, 21431);

                                    state.NotePartComplete(CompletionPart.FinishInterfaces);
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 21461, 21480);

                                    f_10073_21461_21479(diagnostics);
                                    DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 21055, 21507);
                                }
                                DynAbs.Tracing.TraceSender.TraceBreak(10073, 21533, 21539);

                                break;
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 20126, 26486);

                            case CompletionPart.EnumUnderlyingType:
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 20126, 26486);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 21628, 21668);

                                var
                                discarded = f_10073_21644_21667(this)
                                ;
                                DynAbs.Tracing.TraceSender.TraceBreak(10073, 21694, 21700);

                                break;
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 20126, 26486);

                            case CompletionPart.TypeArguments:
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 20126, 26486);
                                {
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 21815, 21879);

                                    var
                                    tmp = f_10073_21825_21878(this)
                                    ;
                                }
                                DynAbs.Tracing.TraceSender.TraceBreak(10073, 21956, 21962);

                                break;
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 20126, 26486);

                            case CompletionPart.TypeParameters:
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 20126, 26486);
                                try
                                {
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 22097, 22291);
                                    foreach (var typeParameter in f_10073_22127_22146_I(f_10073_22127_22146(this)))
                                    {
                                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 22097, 22291);
                                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 22204, 22264);

                                        f_10073_22204_22263(typeParameter, locationOpt, cancellationToken);
                                        DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 22097, 22291);
                                    }
                                }
                                catch (System.Exception)
                                {
                                    DynAbs.Tracing.TraceSender.TraceExitLoopByException(10073, 1, 195);
                                    throw;
                                }
                                finally
                                {
                                    DynAbs.Tracing.TraceSender.TraceExitLoop(10073, 1, 195);
                                }
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 22319, 22373);

                                state.NotePartComplete(CompletionPart.TypeParameters);
                                DynAbs.Tracing.TraceSender.TraceBreak(10073, 22399, 22405);

                                break;
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 20126, 26486);

                            case CompletionPart.Members:
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 20126, 26486);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 22483, 22507);

                                f_10073_22483_22506(this);
                                DynAbs.Tracing.TraceSender.TraceBreak(10073, 22533, 22539);

                                break;
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 20126, 26486);

                            case CompletionPart.TypeMembers:
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 20126, 26486);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 22621, 22652);

                                f_10073_22621_22651(this);
                                DynAbs.Tracing.TraceSender.TraceBreak(10073, 22678, 22684);

                                break;
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 20126, 26486);

                            case CompletionPart.SynthesizedExplicitImplementations:
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 20126, 26486);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 22789, 22851);

                                f_10073_22789_22850(this, cancellationToken);
                                DynAbs.Tracing.TraceSender.TraceBreak(10073, 22931, 22937);

                                break;
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 20126, 26486);

                            case CompletionPart.StartMemberChecks:
                            case CompletionPart.FinishMemberChecks:
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 20126, 26486);

                                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 23086, 23846) || true) && (state.NotePartComplete(CompletionPart.StartMemberChecks))
                                )

                                {
                                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 23086, 23846);
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 23204, 23250);

                                    var
                                    diagnostics = f_10073_23222_23249()
                                    ;
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 23280, 23312);

                                    f_10073_23280_23311(this, diagnostics);
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 23342, 23381);

                                    f_10073_23342_23380(this, diagnostics);
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 23545, 23592);

                                    f_10073_23545_23591(f_10073_23545_23565(), this);
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 23622, 23706);

                                    var
                                    thisThreadCompleted = state.NotePartComplete(CompletionPart.FinishMemberChecks)
                                    ;
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 23736, 23770);

                                    f_10073_23736_23769(thisThreadCompleted);
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 23800, 23819);

                                    f_10073_23800_23818(diagnostics);
                                    DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 23086, 23846);
                                }
                                DynAbs.Tracing.TraceSender.TraceBreak(10073, 23872, 23878);

                                break;
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 20126, 26486);

                            case CompletionPart.MembersCompleted:
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 20126, 26486);
                                {
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 23996, 24056);

                                    ImmutableArray<Symbol>
                                    members = f_10073_24029_24055(this)
                                    ;
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 24088, 24113);

                                    bool
                                    allCompleted = true
                                    ;

                                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 24145, 24991) || true) && (locationOpt == null)
                                    )

                                    {
                                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 24145, 24991);
                                        try
                                        {
                                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 24234, 24513);
                                            foreach (var member in f_10073_24257_24264_I(members))
                                            {
                                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 24234, 24513);
                                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 24338, 24387);

                                                cancellationToken.ThrowIfCancellationRequested();
                                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 24425, 24478);

                                                f_10073_24425_24477(member, locationOpt, cancellationToken);
                                                DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 24234, 24513);
                                            }
                                        }
                                        catch (System.Exception)
                                        {
                                            DynAbs.Tracing.TraceSender.TraceExitLoopByException(10073, 1, 280);
                                            throw;
                                        }
                                        finally
                                        {
                                            DynAbs.Tracing.TraceSender.TraceExitLoop(10073, 1, 280);
                                        }
                                        DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 24145, 24991);
                                    }

                                    else

                                    {
                                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 24145, 24991);
                                        try
                                        {
                                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 24643, 24960);
                                            foreach (var member in f_10073_24666_24673_I(members))
                                            {
                                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 24643, 24960);
                                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 24747, 24817);

                                                f_10073_24747_24816(locationOpt, member, cancellationToken);
                                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 24855, 24925);

                                                allCompleted = allCompleted && (DynAbs.Tracing.TraceSender.Expression_True(10073, 24870, 24924) && f_10073_24886_24924(member, CompletionPart.All));
                                                DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 24643, 24960);
                                            }
                                        }
                                        catch (System.Exception)
                                        {
                                            DynAbs.Tracing.TraceSender.TraceExitLoopByException(10073, 1, 318);
                                            throw;
                                        }
                                        finally
                                        {
                                            DynAbs.Tracing.TraceSender.TraceExitLoop(10073, 1, 318);
                                        }
                                        DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 24145, 24991);
                                    }

                                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 25023, 25523) || true) && (!allCompleted)
                                    )

                                    {
                                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 25023, 25523);
                                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 25304, 25365);

                                        var
                                        allParts = CompletionPart.NamedTypeSymbolWithLocationAll
                                        ;
                                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 25399, 25451);

                                        state.SpinWaitComplete(allParts, cancellationToken);
                                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 25485, 25492);

                                        return;
                                        DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 25023, 25523);
                                    }
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 25555, 25585);

                                    f_10073_25555_25584(this);
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 25792, 25848);

                                    state.NotePartComplete(CompletionPart.MembersCompleted);
                                    DynAbs.Tracing.TraceSender.TraceBreak(10073, 25878, 25884);

                                    break;
                                }
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 20126, 26486);

                            case CompletionPart.None:
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 20126, 26486);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 25986, 25993);

                                return;
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 20126, 26486);

                            default:
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 20126, 26486);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 26155, 26227);

                                f_10073_26155_26226((incompletePart & CompletionPart.NamedTypeSymbolAll) == 0);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 26355, 26435);

                                state.NotePartComplete(CompletionPart.All & ~CompletionPart.NamedTypeSymbolAll);
                                DynAbs.Tracing.TraceSender.TraceBreak(10073, 26461, 26467);

                                break;
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 20126, 26486);
                        }
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 26506, 26564);

                        state.SpinWaitComplete(incompletePart, cancellationToken);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 19842, 26579);
                    }
                }
                catch (System.Exception)
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoopByException(10073, 19842, 26579);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoop(10073, 19842, 26579);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 26595, 26632);

                throw f_10073_26601_26631();
                DynAbs.Tracing.TraceSender.TraceExitMethod(10073, 19715, 26643);

                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.CSharpAttributeData>
                f_10073_20247_20262(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                this_param)
                {
                    var return_v = this_param.GetAttributes();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 20247, 20262);
                    return return_v;
                }


                Microsoft.CodeAnalysis.DiagnosticBag
                f_10073_20568_20595()
                {
                    var return_v = DiagnosticBag.GetInstance();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 20568, 20595);
                    return return_v;
                }


                int
                f_10073_20626_20648(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                this_param, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    this_param.CheckBase(diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 20626, 20648);
                    return 0;
                }


                int
                f_10073_20679_20717(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                this_param, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    this_param.AddDeclarationDiagnostics(diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 20679, 20717);
                    return 0;
                }


                int
                f_10073_20832_20850(Microsoft.CodeAnalysis.DiagnosticBag
                this_param)
                {
                    this_param.Free();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 20832, 20850);
                    return 0;
                }


                Microsoft.CodeAnalysis.DiagnosticBag
                f_10073_21189_21216()
                {
                    var return_v = DiagnosticBag.GetInstance();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 21189, 21216);
                    return return_v;
                }


                int
                f_10073_21247_21275(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                this_param, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    this_param.CheckInterfaces(diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 21247, 21275);
                    return 0;
                }


                int
                f_10073_21306_21344(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                this_param, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    this_param.AddDeclarationDiagnostics(diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 21306, 21344);
                    return 0;
                }


                int
                f_10073_21461_21479(Microsoft.CodeAnalysis.DiagnosticBag
                this_param)
                {
                    this_param.Free();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 21461, 21479);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                f_10073_21644_21667(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                this_param)
                {
                    var return_v = this_param.EnumUnderlyingType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 21644, 21667);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations>
                f_10073_21825_21878(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                this_param)
                {
                    var return_v = this_param.TypeArgumentsWithAnnotationsNoUseSiteDiagnostics;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 21825, 21878);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.TypeParameterSymbol>
                f_10073_22127_22146(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                this_param)
                {
                    var return_v = this_param.TypeParameters;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 22127, 22146);
                    return return_v;
                }


                int
                f_10073_22204_22263(Microsoft.CodeAnalysis.CSharp.Symbols.TypeParameterSymbol
                this_param, Microsoft.CodeAnalysis.SourceLocation?
                locationOpt, System.Threading.CancellationToken
                cancellationToken)
                {
                    this_param.ForceComplete(locationOpt, cancellationToken);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 22204, 22263);
                    return 0;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.TypeParameterSymbol>
                f_10073_22127_22146_I(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.TypeParameterSymbol>
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 22127, 22146);
                    return return_v;
                }


                System.Collections.Generic.Dictionary<string, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>>
                f_10073_22483_22506(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                this_param)
                {
                    var return_v = this_param.GetMembersByName();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 22483, 22506);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol>
                f_10073_22621_22651(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                this_param)
                {
                    var return_v = this_param.GetTypeMembersUnordered();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 22621, 22651);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedExplicitImplementationForwardingMethod>
                f_10073_22789_22850(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                this_param, System.Threading.CancellationToken
                cancellationToken)
                {
                    var return_v = this_param.GetSynthesizedExplicitImplementations(cancellationToken);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 22789, 22850);
                    return return_v;
                }


                Microsoft.CodeAnalysis.DiagnosticBag
                f_10073_23222_23249()
                {
                    var return_v = DiagnosticBag.GetInstance();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 23222, 23249);
                    return return_v;
                }


                int
                f_10073_23280_23311(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                this_param, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    this_param.AfterMembersChecks(diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 23280, 23311);
                    return 0;
                }


                int
                f_10073_23342_23380(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                this_param, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    this_param.AddDeclarationDiagnostics(diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 23342, 23380);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                f_10073_23545_23565()
                {
                    var return_v = DeclaringCompilation;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 23545, 23565);
                    return return_v;
                }


                int
                f_10073_23545_23591(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                symbol)
                {
                    this_param.SymbolDeclaredEvent((Microsoft.CodeAnalysis.CSharp.Symbol)symbol);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 23545, 23591);
                    return 0;
                }


                int
                f_10073_23736_23769(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 23736, 23769);
                    return 0;
                }


                int
                f_10073_23800_23818(Microsoft.CodeAnalysis.DiagnosticBag
                this_param)
                {
                    this_param.Free();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 23800, 23818);
                    return 0;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>
                f_10073_24029_24055(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                this_param)
                {
                    var return_v = this_param.GetMembersUnordered();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 24029, 24055);
                    return return_v;
                }


                int
                f_10073_24425_24477(Microsoft.CodeAnalysis.CSharp.Symbol
                this_param, Microsoft.CodeAnalysis.SourceLocation?
                locationOpt, System.Threading.CancellationToken
                cancellationToken)
                {
                    this_param.ForceComplete(locationOpt, cancellationToken);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 24425, 24477);
                    return 0;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>
                f_10073_24257_24264_I(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 24257, 24264);
                    return return_v;
                }


                int
                f_10073_24747_24816(Microsoft.CodeAnalysis.SourceLocation
                locationOpt, Microsoft.CodeAnalysis.CSharp.Symbol
                member, System.Threading.CancellationToken
                cancellationToken)
                {
                    ForceCompleteMemberByLocation(locationOpt, member, cancellationToken);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 24747, 24816);
                    return 0;
                }


                bool
                f_10073_24886_24924(Microsoft.CodeAnalysis.CSharp.Symbol
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.CompletionPart
                part)
                {
                    var return_v = this_param.HasComplete(part);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 24886, 24924);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>
                f_10073_24666_24673_I(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 24666, 24673);
                    return return_v;
                }


                int
                f_10073_25555_25584(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                this_param)
                {
                    this_param.EnsureFieldDefinitionsNoted();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 25555, 25584);
                    return 0;
                }


                int
                f_10073_26155_26226(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 26155, 26226);
                    return 0;
                }


                System.Exception
                f_10073_26601_26631()
                {
                    var return_v = ExceptionUtilities.Unreachable;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 26601, 26631);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10073, 19715, 26643);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10073, 19715, 26643);
            }
        }

        internal void EnsureFieldDefinitionsNoted()
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10073, 26655, 26861);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 26723, 26811) || true) && (_flags.FieldDefinitionsNoted)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 26723, 26811);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 26789, 26796);

                    return;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 26723, 26811);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 26827, 26850);

                f_10073_26827_26849(this);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10073, 26655, 26861);

                int
                f_10073_26827_26849(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                this_param)
                {
                    this_param.NoteFieldDefinitions();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 26827, 26849);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10073, 26655, 26861);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10073, 26655, 26861);
            }
        }

        private void NoteFieldDefinitions()
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10073, 26873, 29327);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 27004, 27066);

                var
                membersAndInitializers = f_10073_27033_27065(this)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 27086, 27108);
                lock (membersAndInitializers)
                {

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 27142, 29301) || true) && (f_10073_27146_27175_M(!_flags.FieldDefinitionsNoted))
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 27142, 29301);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 27217, 27273);

                        var
                        assembly = (SourceAssemblySymbol)f_10073_27254_27272()
                        ;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 27297, 27370);

                        Accessibility
                        containerEffectiveAccessibility = f_10073_27345_27369(this)
                        ;
                        try
                        {
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 27394, 29226);
                            foreach (var member in f_10073_27417_27454_I(membersAndInitializers.NonTypeMembers))
                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 27394, 29226);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 27504, 27522);

                                FieldSymbol
                                field
                                = default(FieldSymbol);

                                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 27548, 27732) || true) && (!f_10073_27553_27594(member, out field) || (DynAbs.Tracing.TraceSender.Expression_False(10073, 27552, 27611) || f_10073_27598_27611(field)) || (DynAbs.Tracing.TraceSender.Expression_False(10073, 27552, 27638) || f_10073_27615_27638(field)))
                                )

                                {
                                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 27548, 27732);
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 27696, 27705);

                                    continue;
                                    DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 27548, 27732);
                                }
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 27760, 27831);

                                Accessibility
                                fieldDeclaredAccessibility = f_10073_27803_27830(field)
                                ;

                                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 27857, 29203) || true) && (fieldDeclaredAccessibility == Accessibility.Private)
                                )

                                {
                                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 27857, 29203);
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 28089, 28160);

                                    f_10073_28089_28159(                            // mark private fields as tentatively unassigned and unread unless we discover otherwise.
                                                                assembly, field, isInternal: false, isUnread: true);
                                    DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 27857, 29203);
                                }

                                else
                                {
                                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 27857, 29203);

                                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 28218, 29203) || true) && (containerEffectiveAccessibility == Accessibility.Private)
                                    )

                                    {
                                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 28218, 29203);
                                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 28456, 28528);

                                        f_10073_28456_28527(                            // mark effectively private fields as tentatively unassigned unless we discover otherwise.
                                                                    assembly, field, isInternal: false, isUnread: false);
                                        DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 28218, 29203);
                                    }

                                    else
                                    {
                                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 28218, 29203);

                                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 28586, 29203) || true) && (fieldDeclaredAccessibility == Accessibility.Internal || (DynAbs.Tracing.TraceSender.Expression_False(10073, 28590, 28703) || containerEffectiveAccessibility == Accessibility.Internal))
                                        )

                                        {
                                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 28586, 29203);
                                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 29105, 29176);

                                            f_10073_29105_29175(                            // mark effectively internal fields as tentatively unassigned unless we discover otherwise.
                                                                                            // NOTE: These fields will be reported as unassigned only if internals are not visible from this assembly.
                                                                                            // See property SourceAssemblySymbol.UnusedFieldWarnings.
                                                                        assembly, field, isInternal: true, isUnread: false);
                                            DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 28586, 29203);
                                        }
                                        DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 28218, 29203);
                                    }
                                    DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 27857, 29203);
                                }
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 27394, 29226);
                            }
                        }
                        catch (System.Exception)
                        {
                            DynAbs.Tracing.TraceSender.TraceExitLoopByException(10073, 1, 1833);
                            throw;
                        }
                        finally
                        {
                            DynAbs.Tracing.TraceSender.TraceExitLoop(10073, 1, 1833);
                        }
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 29248, 29282);

                        _flags.SetFieldDefinitionsNoted();
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 27142, 29301);
                    }
                }
                DynAbs.Tracing.TraceSender.TraceExitMethod(10073, 26873, 29327);

                Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol.MembersAndInitializers
                f_10073_27033_27065(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                this_param)
                {
                    var return_v = this_param.GetMembersAndInitializers();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 27033, 27065);
                    return return_v;
                }


                bool
                f_10073_27146_27175_M(bool
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 27146, 27175);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.AssemblySymbol
                f_10073_27254_27272()
                {
                    var return_v = ContainingAssembly;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 27254, 27272);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Accessibility
                f_10073_27345_27369(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                this_param)
                {
                    var return_v = this_param.EffectiveAccessibility();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 27345, 27369);
                    return return_v;
                }


                bool
                f_10073_27553_27594(Microsoft.CodeAnalysis.CSharp.Symbol
                member, out Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol
                field)
                {
                    var return_v = member.IsFieldOrFieldLikeEvent(out field);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 27553, 27594);
                    return return_v;
                }


                bool
                f_10073_27598_27611(Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol
                this_param)
                {
                    var return_v = this_param.IsConst;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 27598, 27611);
                    return return_v;
                }


                bool
                f_10073_27615_27638(Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol
                this_param)
                {
                    var return_v = this_param.IsFixedSizeBuffer;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 27615, 27638);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Accessibility
                f_10073_27803_27830(Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol
                this_param)
                {
                    var return_v = this_param.DeclaredAccessibility;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 27803, 27830);
                    return return_v;
                }


                int
                f_10073_28089_28159(Microsoft.CodeAnalysis.CSharp.Symbols.SourceAssemblySymbol
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol
                field, bool
                isInternal, bool
                isUnread)
                {
                    this_param.NoteFieldDefinition(field, isInternal: isInternal, isUnread: isUnread);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 28089, 28159);
                    return 0;
                }


                int
                f_10073_28456_28527(Microsoft.CodeAnalysis.CSharp.Symbols.SourceAssemblySymbol
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol
                field, bool
                isInternal, bool
                isUnread)
                {
                    this_param.NoteFieldDefinition(field, isInternal: isInternal, isUnread: isUnread);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 28456, 28527);
                    return 0;
                }


                int
                f_10073_29105_29175(Microsoft.CodeAnalysis.CSharp.Symbols.SourceAssemblySymbol
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol
                field, bool
                isInternal, bool
                isUnread)
                {
                    this_param.NoteFieldDefinition(field, isInternal: isInternal, isUnread: isUnread);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 29105, 29175);
                    return 0;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>
                f_10073_27417_27454_I(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 27417, 27454);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10073, 26873, 29327);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10073, 26873, 29327);
            }
        }

        public sealed override NamedTypeSymbol? ContainingType
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(10073, 29470, 29565);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 29506, 29550);

                    return _containingSymbol as NamedTypeSymbol;
                    DynAbs.Tracing.TraceSender.TraceExitMethod(10073, 29470, 29565);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10073, 29391, 29576);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10073, 29391, 29576);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public sealed override Symbol ContainingSymbol
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(10073, 29659, 29735);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 29695, 29720);

                    return _containingSymbol;
                    DynAbs.Tracing.TraceSender.TraceExitMethod(10073, 29659, 29735);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10073, 29588, 29746);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10073, 29588, 29746);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override SpecialType SpecialType
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(10073, 29888, 29965);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 29924, 29950);

                    return _flags.SpecialType;
                    DynAbs.Tracing.TraceSender.TraceExitMethod(10073, 29888, 29965);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10073, 29824, 29976);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10073, 29824, 29976);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override TypeKind TypeKind
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(10073, 30046, 30120);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 30082, 30105);

                    return _flags.TypeKind;
                    DynAbs.Tracing.TraceSender.TraceExitMethod(10073, 30046, 30120);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10073, 29988, 30131);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10073, 29988, 30131);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        internal MergedTypeDeclaration MergedDeclaration
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(10073, 30216, 30291);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 30252, 30276);

                    return this.declaration;
                    DynAbs.Tracing.TraceSender.TraceExitMethod(10073, 30216, 30291);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10073, 30143, 30302);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10073, 30143, 30302);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        internal sealed override bool IsInterface
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(10073, 30380, 30542);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 30484, 30527);

                    return f_10073_30491_30504(this) == TypeKind.Interface;
                    DynAbs.Tracing.TraceSender.TraceExitMethod(10073, 30380, 30542);

                    Microsoft.CodeAnalysis.TypeKind
                    f_10073_30491_30504(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                    this_param)
                    {
                        var return_v = this_param.TypeKind;
                        DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 30491, 30504);
                        return return_v;
                    }

                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10073, 30314, 30553);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10073, 30314, 30553);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        internal override ManagedKind GetManagedKind(ref HashSet<DiagnosticInfo> useSiteDiagnostics)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10073, 30565, 31579);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 30682, 30719);

                var
                managedKind = _flags.ManagedKind
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 30733, 31218) || true) && (managedKind == ManagedKind.Unknown || (DynAbs.Tracing.TraceSender.Expression_False(10073, 30737, 30815) || _managedKindUseSiteDiagnostics.IsDefault))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 30733, 31218);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 30849, 30911);

                    HashSet<DiagnosticInfo>?
                    managedKindUseSiteDiagnostics = null
                    ;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 30929, 30998);

                    managedKind = DynAbs.Tracing.TraceSender.TraceInvocationWrapper(() => base.GetManagedKind(ref managedKindUseSiteDiagnostics), 10073, 30943, 30997);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 31016, 31150);

                    f_10073_31016_31149(ref _managedKindUseSiteDiagnostics, f_10073_31093_31148(managedKindUseSiteDiagnostics));
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 31168, 31203);

                    _flags.SetManagedKind(managedKind);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 30733, 31218);
                }

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 31234, 31533) || true) && (f_10073_31238_31277_M(!_managedKindUseSiteDiagnostics.IsEmpty))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 31234, 31533);

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 31338, 31442) || true) && (useSiteDiagnostics == null)
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 31338, 31442);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 31391, 31442);

                        useSiteDiagnostics = f_10073_31412_31441();
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 31338, 31442);
                    }
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 31460, 31518);

                    useSiteDiagnostics.AddAll(_managedKindUseSiteDiagnostics);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 31234, 31533);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 31549, 31568);

                return managedKind;
                DynAbs.Tracing.TraceSender.TraceExitMethod(10073, 30565, 31579);

                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.DiagnosticInfo>
                f_10073_31093_31148(System.Collections.Generic.HashSet<Microsoft.CodeAnalysis.DiagnosticInfo>
                items)
                {
                    var return_v = items.ToImmutableArrayOrEmpty<Microsoft.CodeAnalysis.DiagnosticInfo>();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 31093, 31148);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.DiagnosticInfo>
                f_10073_31016_31149(ref System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.DiagnosticInfo>
                location, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.DiagnosticInfo>
                value)
                {
                    var return_v = ImmutableInterlocked.InterlockedExchange(ref location, value);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 31016, 31149);
                    return return_v;
                }


                bool
                f_10073_31238_31277_M(bool
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 31238, 31277);
                    return return_v;
                }


                System.Collections.Generic.HashSet<Microsoft.CodeAnalysis.DiagnosticInfo>
                f_10073_31412_31441()
                {
                    var return_v = new System.Collections.Generic.HashSet<Microsoft.CodeAnalysis.DiagnosticInfo>();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 31412, 31441);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10073, 30565, 31579);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10073, 30565, 31579);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override bool IsStatic
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(10073, 31621, 31660);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 31624, 31660);
                    return f_10073_31624_31660(this, DeclarationModifiers.Static); DynAbs.Tracing.TraceSender.TraceExitMethod(10073, 31621, 31660);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10073, 31621, 31660);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10073, 31621, 31660);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public sealed override bool IsRefLikeType
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(10073, 31715, 31751);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 31718, 31751);
                    return f_10073_31718_31751(this, DeclarationModifiers.Ref); DynAbs.Tracing.TraceSender.TraceExitMethod(10073, 31715, 31751);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10073, 31715, 31751);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10073, 31715, 31751);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override bool IsReadOnly
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(10073, 31796, 31837);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 31799, 31837);
                    return f_10073_31799_31837(this, DeclarationModifiers.ReadOnly); DynAbs.Tracing.TraceSender.TraceExitMethod(10073, 31796, 31837);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10073, 31796, 31837);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10073, 31796, 31837);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override bool IsSealed
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(10073, 31880, 31919);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 31883, 31919);
                    return f_10073_31883_31919(this, DeclarationModifiers.Sealed); DynAbs.Tracing.TraceSender.TraceExitMethod(10073, 31880, 31919);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10073, 31880, 31919);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10073, 31880, 31919);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override bool IsAbstract
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(10073, 31964, 32005);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 31967, 32005);
                    return f_10073_31967_32005(this, DeclarationModifiers.Abstract); DynAbs.Tracing.TraceSender.TraceExitMethod(10073, 31964, 32005);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10073, 31964, 32005);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10073, 31964, 32005);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        internal bool IsPartial
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(10073, 32042, 32082);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 32045, 32082);
                    return f_10073_32045_32082(this, DeclarationModifiers.Partial); DynAbs.Tracing.TraceSender.TraceExitMethod(10073, 32042, 32082);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10073, 32042, 32082);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10073, 32042, 32082);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        internal bool IsNew
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(10073, 32115, 32151);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 32118, 32151);
                    return f_10073_32118_32151(this, DeclarationModifiers.New); DynAbs.Tracing.TraceSender.TraceExitMethod(10073, 32115, 32151);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10073, 32115, 32151);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10073, 32115, 32151);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        private bool HasFlag(DeclarationModifiers flag)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10073, 32272, 32303);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 32275, 32303);
                return (_declModifiers & flag) != 0; DynAbs.Tracing.TraceSender.TraceExitMethod(10073, 32272, 32303);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10073, 32272, 32303);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10073, 32272, 32303);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override Accessibility DeclaredAccessibility
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(10073, 32392, 32503);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 32428, 32488);

                    return f_10073_32435_32487(_declModifiers);
                    DynAbs.Tracing.TraceSender.TraceExitMethod(10073, 32392, 32503);

                    Microsoft.CodeAnalysis.Accessibility
                    f_10073_32435_32487(Microsoft.CodeAnalysis.CSharp.DeclarationModifiers
                    modifiers)
                    {
                        var return_v = ModifierUtils.EffectiveAccessibility(modifiers);
                        DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 32435, 32487);
                        return return_v;
                    }

                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10073, 32316, 32514);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10073, 32316, 32514);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        private Accessibility EffectiveAccessibility()
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10073, 32694, 33413);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 32765, 32800);

                var
                result = f_10073_32778_32799()
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 32814, 32880) || true) && (result == Accessibility.Private)
                )
                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 32814, 32880);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 32851, 32880);

                    return Accessibility.Private;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 32814, 32880);
                }
                try
                {
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 32907, 32938);
                    for (Symbol?
        container = f_10073_32919_32938(this)
        ; (DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 32894, 33372) || true) && (!(container is null))
        ; DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 32962, 32998)
        , container = f_10073_32974_32998(container), DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 32894, 33372))

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 32894, 33372);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 33032, 33357);

                        switch (f_10073_33040_33071(container))
                        {

                            case Accessibility.Private:
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 33032, 33357);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 33166, 33195);

                                return Accessibility.Private;
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 33032, 33357);

                            case Accessibility.Internal:
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 33032, 33357);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 33271, 33303);

                                result = Accessibility.Internal;
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 33329, 33338);

                                continue;
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 33032, 33357);
                        }
                    }
                }
                catch (System.Exception)
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoopByException(10073, 1, 479);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoop(10073, 1, 479);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 33388, 33402);

                return result;
                DynAbs.Tracing.TraceSender.TraceExitMethod(10073, 32694, 33413);

                Microsoft.CodeAnalysis.Accessibility
                f_10073_32778_32799()
                {
                    var return_v = DeclaredAccessibility;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 32778, 32799);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol?
                f_10073_32919_32938(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                this_param)
                {
                    var return_v = this_param.ContainingType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 32919, 32938);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                f_10073_32974_32998(Microsoft.CodeAnalysis.CSharp.Symbol
                this_param)
                {
                    var return_v = this_param.ContainingType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 32974, 32998);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Accessibility
                f_10073_33040_33071(Microsoft.CodeAnalysis.CSharp.Symbol
                this_param)
                {
                    var return_v = this_param.DeclaredAccessibility;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 33040, 33071);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10073, 32694, 33413);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10073, 32694, 33413);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override bool IsScriptClass
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(10073, 33532, 33726);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 33568, 33617);

                    var
                    kind = f_10073_33579_33616(f_10073_33579_33608(this.declaration)[0])
                    ;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 33635, 33711);

                    return kind == DeclarationKind.Script || (DynAbs.Tracing.TraceSender.Expression_False(10073, 33642, 33710) || kind == DeclarationKind.Submission);
                    DynAbs.Tracing.TraceSender.TraceExitMethod(10073, 33532, 33726);

                    System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.SingleTypeDeclaration>
                    f_10073_33579_33608(Microsoft.CodeAnalysis.CSharp.MergedTypeDeclaration
                    this_param)
                    {
                        var return_v = this_param.Declarations;
                        DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 33579, 33608);
                        return return_v;
                    }


                    Microsoft.CodeAnalysis.CSharp.DeclarationKind
                    f_10073_33579_33616(Microsoft.CodeAnalysis.CSharp.SingleTypeDeclaration
                    this_param)
                    {
                        var return_v = this_param.Kind;
                        DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 33579, 33616);
                        return return_v;
                    }

                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10073, 33473, 33737);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10073, 33473, 33737);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override bool IsImplicitClass
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(10073, 33810, 33939);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 33846, 33924);

                    return f_10073_33853_33890(f_10073_33853_33882(this.declaration)[0]) == DeclarationKind.ImplicitClass;
                    DynAbs.Tracing.TraceSender.TraceExitMethod(10073, 33810, 33939);

                    System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.SingleTypeDeclaration>
                    f_10073_33853_33882(Microsoft.CodeAnalysis.CSharp.MergedTypeDeclaration
                    this_param)
                    {
                        var return_v = this_param.Declarations;
                        DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 33853, 33882);
                        return return_v;
                    }


                    Microsoft.CodeAnalysis.CSharp.DeclarationKind
                    f_10073_33853_33890(Microsoft.CodeAnalysis.CSharp.SingleTypeDeclaration
                    this_param)
                    {
                        var return_v = this_param.Kind;
                        DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 33853, 33890);
                        return return_v;
                    }

                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10073, 33749, 33950);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10073, 33749, 33950);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        internal override bool IsRecord
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(10073, 34018, 34140);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 34054, 34125);

                    return f_10073_34061_34098(f_10073_34061_34090(this.declaration)[0]) == DeclarationKind.Record;
                    DynAbs.Tracing.TraceSender.TraceExitMethod(10073, 34018, 34140);

                    System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.SingleTypeDeclaration>
                    f_10073_34061_34090(Microsoft.CodeAnalysis.CSharp.MergedTypeDeclaration
                    this_param)
                    {
                        var return_v = this_param.Declarations;
                        DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 34061, 34090);
                        return return_v;
                    }


                    Microsoft.CodeAnalysis.CSharp.DeclarationKind
                    f_10073_34061_34098(Microsoft.CodeAnalysis.CSharp.SingleTypeDeclaration
                    this_param)
                    {
                        var return_v = this_param.Kind;
                        DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 34061, 34098);
                        return return_v;
                    }

                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10073, 33962, 34151);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10073, 33962, 34151);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override bool IsImplicitlyDeclared
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(10073, 34229, 34320);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 34265, 34305);

                    return f_10073_34272_34287() || (DynAbs.Tracing.TraceSender.Expression_False(10073, 34272, 34304) || f_10073_34291_34304());
                    DynAbs.Tracing.TraceSender.TraceExitMethod(10073, 34229, 34320);

                    bool
                    f_10073_34272_34287()
                    {
                        var return_v = IsImplicitClass;
                        DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 34272, 34287);
                        return return_v;
                    }


                    bool
                    f_10073_34291_34304()
                    {
                        var return_v = IsScriptClass;
                        DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 34291, 34304);
                        return return_v;
                    }

                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10073, 34163, 34331);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10073, 34163, 34331);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override int Arity
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(10073, 34393, 34469);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 34429, 34454);

                    return f_10073_34436_34453(declaration);
                    DynAbs.Tracing.TraceSender.TraceExitMethod(10073, 34393, 34469);

                    int
                    f_10073_34436_34453(Microsoft.CodeAnalysis.CSharp.MergedTypeDeclaration
                    this_param)
                    {
                        var return_v = this_param.Arity;
                        DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 34436, 34453);
                        return return_v;
                    }

                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10073, 34343, 34480);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10073, 34343, 34480);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override string Name
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(10073, 34544, 34619);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 34580, 34604);

                    return f_10073_34587_34603(declaration);
                    DynAbs.Tracing.TraceSender.TraceExitMethod(10073, 34544, 34619);

                    string
                    f_10073_34587_34603(Microsoft.CodeAnalysis.CSharp.MergedTypeDeclaration
                    this_param)
                    {
                        var return_v = this_param.Name;
                        DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 34587, 34603);
                        return return_v;
                    }

                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10073, 34492, 34630);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10073, 34492, 34630);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        internal override bool MangleName
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(10073, 34700, 34768);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 34736, 34753);

                    return f_10073_34743_34748() > 0;
                    DynAbs.Tracing.TraceSender.TraceExitMethod(10073, 34700, 34768);

                    int
                    f_10073_34743_34748()
                    {
                        var return_v = Arity;
                        DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 34743, 34748);
                        return return_v;
                    }

                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10073, 34642, 34779);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10073, 34642, 34779);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        internal override LexicalSortKey GetLexicalSortKey()
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10073, 34791, 35093);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 34868, 35041) || true) && (f_10073_34872_34906_M(!_lazyLexicalSortKey.IsInitialized))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 34868, 35041);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 34940, 35026);

                    _lazyLexicalSortKey.SetFrom(f_10073_34968_35024(declaration, f_10073_34998_35023(this)));
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 34868, 35041);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 35055, 35082);

                return _lazyLexicalSortKey;
                DynAbs.Tracing.TraceSender.TraceExitMethod(10073, 34791, 35093);

                bool
                f_10073_34872_34906_M(bool
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 34872, 34906);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                f_10073_34998_35023(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                this_param)
                {
                    var return_v = this_param.DeclaringCompilation;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 34998, 35023);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.LexicalSortKey
                f_10073_34968_35024(Microsoft.CodeAnalysis.CSharp.MergedTypeDeclaration
                this_param, Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                compilation)
                {
                    var return_v = this_param.GetLexicalSortKey(compilation);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 34968, 35024);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10073, 34791, 35093);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10073, 34791, 35093);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override ImmutableArray<Location> Locations
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(10073, 35180, 35297);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 35216, 35282);

                    return declaration.NameLocations.Cast<SourceLocation, Location>();
                    DynAbs.Tracing.TraceSender.TraceExitMethod(10073, 35180, 35297);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10073, 35105, 35308);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10073, 35105, 35308);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public ImmutableArray<SyntaxReference> SyntaxReferences
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(10073, 35400, 35492);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 35436, 35477);

                    return f_10073_35443_35476(this.declaration);
                    DynAbs.Tracing.TraceSender.TraceExitMethod(10073, 35400, 35492);

                    System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.SyntaxReference>
                    f_10073_35443_35476(Microsoft.CodeAnalysis.CSharp.MergedTypeDeclaration
                    this_param)
                    {
                        var return_v = this_param.SyntaxReferences;
                        DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 35443, 35476);
                        return return_v;
                    }

                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10073, 35320, 35503);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10073, 35320, 35503);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override ImmutableArray<SyntaxReference> DeclaringSyntaxReferences
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(10073, 35613, 35688);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 35649, 35673);

                    return f_10073_35656_35672();
                    DynAbs.Tracing.TraceSender.TraceExitMethod(10073, 35613, 35688);

                    System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.SyntaxReference>
                    f_10073_35656_35672()
                    {
                        var return_v = SyntaxReferences;
                        DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 35656, 35672);
                        return return_v;
                    }

                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10073, 35515, 35699);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10073, 35515, 35699);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        internal override bool IsDefinedInSourceTree(SyntaxTree tree, TextSpan? definedWithinSpan, CancellationToken cancellationToken)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10073, 35840, 36730);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 35992, 36036);

                var
                declarations = f_10073_36011_36035(declaration)
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 36050, 36237) || true) && (f_10073_36054_36074() && (DynAbs.Tracing.TraceSender.Expression_True(10073, 36054, 36098) && declarations.IsEmpty))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 36050, 36237);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 36132, 36222);

                    return f_10073_36139_36221(f_10073_36139_36155(), tree, definedWithinSpan, cancellationToken);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 36050, 36237);
                }
                try
                {
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 36253, 36690);
                    foreach (var declaration in f_10073_36281_36293_I(declarations))
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 36253, 36690);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 36327, 36376);

                        cancellationToken.ThrowIfCancellationRequested();
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 36396, 36440);

                        var
                        syntaxRef = f_10073_36412_36439(declaration)
                        ;

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 36458, 36675) || true) && (f_10073_36462_36482(syntaxRef) == tree && (DynAbs.Tracing.TraceSender.Expression_True(10073, 36462, 36602) && (f_10073_36516_36543_M(!definedWithinSpan.HasValue) || (DynAbs.Tracing.TraceSender.Expression_False(10073, 36516, 36601) || syntaxRef.Span.IntersectsWith(definedWithinSpan.Value)))))
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 36458, 36675);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 36644, 36656);

                            return true;
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 36458, 36675);
                        }
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 36253, 36690);
                    }
                }
                catch (System.Exception)
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoopByException(10073, 1, 438);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoop(10073, 1, 438);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 36706, 36719);

                return false;
                DynAbs.Tracing.TraceSender.TraceExitMethod(10073, 35840, 36730);

                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.SingleTypeDeclaration>
                f_10073_36011_36035(Microsoft.CodeAnalysis.CSharp.MergedTypeDeclaration
                this_param)
                {
                    var return_v = this_param.Declarations;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 36011, 36035);
                    return return_v;
                }


                bool
                f_10073_36054_36074()
                {
                    var return_v = IsImplicitlyDeclared;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 36054, 36074);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbol
                f_10073_36139_36155()
                {
                    var return_v = ContainingSymbol;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 36139, 36155);
                    return return_v;
                }


                bool
                f_10073_36139_36221(Microsoft.CodeAnalysis.CSharp.Symbol
                this_param, Microsoft.CodeAnalysis.SyntaxTree
                tree, Microsoft.CodeAnalysis.Text.TextSpan?
                definedWithinSpan, System.Threading.CancellationToken
                cancellationToken)
                {
                    var return_v = this_param.IsDefinedInSourceTree(tree, definedWithinSpan, cancellationToken);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 36139, 36221);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SyntaxReference
                f_10073_36412_36439(Microsoft.CodeAnalysis.CSharp.SingleTypeDeclaration
                this_param)
                {
                    var return_v = this_param.SyntaxReference;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 36412, 36439);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SyntaxTree
                f_10073_36462_36482(Microsoft.CodeAnalysis.SyntaxReference
                this_param)
                {
                    var return_v = this_param.SyntaxTree;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 36462, 36482);
                    return return_v;
                }


                bool
                f_10073_36516_36543_M(bool
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 36516, 36543);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.SingleTypeDeclaration>
                f_10073_36281_36293_I(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.SingleTypeDeclaration>
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 36281, 36293);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10073, 35840, 36730);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10073, 35840, 36730);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }
        protected sealed class MembersAndInitializers
        {
            internal readonly ImmutableArray<Symbol> NonTypeMembers;

            internal readonly ImmutableArray<ImmutableArray<FieldOrPropertyInitializer>> StaticInitializers;

            internal readonly ImmutableArray<ImmutableArray<FieldOrPropertyInitializer>> InstanceInitializers;

            internal readonly bool HaveIndexers;

            internal readonly bool IsNullableEnabledForInstanceConstructorsAndFields;

            internal readonly bool IsNullableEnabledForStaticConstructorsAndFields;

            public MembersAndInitializers(
                            ImmutableArray<Symbol> nonTypeMembers,
                            ImmutableArray<ImmutableArray<FieldOrPropertyInitializer>> staticInitializers,
                            ImmutableArray<ImmutableArray<FieldOrPropertyInitializer>> instanceInitializers,
                            bool haveIndexers,
                            bool isNullableEnabledForInstanceConstructorsAndFields,
                            bool isNullableEnabledForStaticConstructorsAndFields)
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterConstructor(10073, 37846, 39317);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 37645, 37657);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 37695, 37744);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 37782, 37829);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 38339, 38379);

                    f_10073_38339_38378(f_10073_38352_38377_M(!nonTypeMembers.IsDefault));
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 38397, 38441);

                    f_10073_38397_38440(f_10073_38410_38439_M(!staticInitializers.IsDefault));
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 38459, 38515);

                    f_10073_38459_38514(staticInitializers.All(g => !g.IsDefault));
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 38533, 38579);

                    f_10073_38533_38578(f_10073_38546_38577_M(!instanceInitializers.IsDefault));
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 38597, 38655);

                    f_10073_38597_38654(instanceInitializers.All(g => !g.IsDefault));
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 38675, 38731);

                    f_10073_38675_38730(!nonTypeMembers.Any(s => s is TypeSymbol));
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 38749, 38818);

                    f_10073_38749_38817(haveIndexers == nonTypeMembers.Any(s => s.IsIndexer()));
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 38838, 38875);

                    this.NonTypeMembers = nonTypeMembers;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 38893, 38938);

                    this.StaticInitializers = staticInitializers;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 38956, 39005);

                    this.InstanceInitializers = instanceInitializers;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 39023, 39056);

                    this.HaveIndexers = haveIndexers;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 39074, 39181);

                    this.IsNullableEnabledForInstanceConstructorsAndFields = isNullableEnabledForInstanceConstructorsAndFields;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 39199, 39302);

                    this.IsNullableEnabledForStaticConstructorsAndFields = isNullableEnabledForStaticConstructorsAndFields;
                    DynAbs.Tracing.TraceSender.TraceExitConstructor(10073, 37846, 39317);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10073, 37846, 39317);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10073, 37846, 39317);
                }
            }

            static MembersAndInitializers()
            {
                DynAbs.Tracing.TraceSender.TraceEnterStaticConstructor(10073, 37260, 39328);
                DynAbs.Tracing.TraceSender.TraceExitStaticConstructor(10073, 37260, 39328);

                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10073, 37260, 39328);
            }

            int ___ignore_me___ = DynAbs.Tracing.TraceSender.TraceBeforeConstructor(10073, 37260, 39328);

            bool
            f_10073_38352_38377_M(bool
            i)
            {
                var return_v = i;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 38352, 38377);
                return return_v;
            }


            int
            f_10073_38339_38378(bool
            condition)
            {
                Debug.Assert(condition);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 38339, 38378);
                return 0;
            }


            bool
            f_10073_38410_38439_M(bool
            i)
            {
                var return_v = i;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 38410, 38439);
                return return_v;
            }


            int
            f_10073_38397_38440(bool
            condition)
            {
                Debug.Assert(condition);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 38397, 38440);
                return 0;
            }


            int
            f_10073_38459_38514(bool
            condition)
            {
                Debug.Assert(condition);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 38459, 38514);
                return 0;
            }


            bool
            f_10073_38546_38577_M(bool
            i)
            {
                var return_v = i;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 38546, 38577);
                return return_v;
            }


            int
            f_10073_38533_38578(bool
            condition)
            {
                Debug.Assert(condition);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 38533, 38578);
                return 0;
            }


            int
            f_10073_38597_38654(bool
            condition)
            {
                Debug.Assert(condition);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 38597, 38654);
                return 0;
            }


            int
            f_10073_38675_38730(bool
            condition)
            {
                Debug.Assert(condition);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 38675, 38730);
                return 0;
            }


            int
            f_10073_38749_38817(bool
            condition)
            {
                Debug.Assert(condition);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 38749, 38817);
                return 0;
            }

        }

        internal ImmutableArray<ImmutableArray<FieldOrPropertyInitializer>> StaticInitializers
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(10073, 39451, 39513);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 39457, 39511);

                    return f_10073_39464_39491(this).StaticInitializers;
                    DynAbs.Tracing.TraceSender.TraceExitMethod(10073, 39451, 39513);

                    Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol.MembersAndInitializers
                    f_10073_39464_39491(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                    this_param)
                    {
                        var return_v = this_param.GetMembersAndInitializers();
                        DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 39464, 39491);
                        return return_v;
                    }

                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10073, 39340, 39524);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10073, 39340, 39524);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        internal ImmutableArray<ImmutableArray<FieldOrPropertyInitializer>> InstanceInitializers
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(10073, 39649, 39713);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 39655, 39711);

                    return f_10073_39662_39689(this).InstanceInitializers;
                    DynAbs.Tracing.TraceSender.TraceExitMethod(10073, 39649, 39713);

                    Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol.MembersAndInitializers
                    f_10073_39662_39689(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                    this_param)
                    {
                        var return_v = this_param.GetMembersAndInitializers();
                        DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 39662, 39689);
                        return return_v;
                    }

                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10073, 39536, 39724);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10073, 39536, 39724);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        internal int CalculateSyntaxOffsetInSynthesizedConstructor(int position, SyntaxTree tree, bool isStatic)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10073, 39736, 41614);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 39865, 40433) || true) && (f_10073_39869_39882() && (DynAbs.Tracing.TraceSender.Expression_True(10073, 39869, 39895) && !isStatic))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 39865, 40433);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 39929, 39953);

                    int
                    aggregateLength = 0
                    ;
                    try
                    {
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 39973, 40361);
                        foreach (var declaration in f_10073_40001_40030_I(f_10073_40001_40030(this.declaration)))
                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 39973, 40361);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 40072, 40116);

                            var
                            syntaxRef = f_10073_40088_40115(declaration)
                            ;

                            if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 40138, 40277) || true) && (tree == f_10073_40150_40170(syntaxRef))
                            )

                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 40138, 40277);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 40220, 40254);

                                return aggregateLength + position;
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 40138, 40277);
                            }
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 40301, 40342);

                            aggregateLength += syntaxRef.Span.Length;
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 39973, 40361);
                        }
                    }
                    catch (System.Exception)
                    {
                        DynAbs.Tracing.TraceSender.TraceExitLoopByException(10073, 1, 389);
                        throw;
                    }
                    finally
                    {
                        DynAbs.Tracing.TraceSender.TraceExitLoop(10073, 1, 389);
                    }
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 40381, 40418);

                    throw f_10073_40387_40417();
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 39865, 40433);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 40449, 40466);

                int
                syntaxOffset
                = default(int);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 40480, 40684) || true) && (f_10073_40484_40615(this, position, tree, isStatic, ctorInitializerLength: 0, syntaxOffset: out syntaxOffset))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 40480, 40684);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 40649, 40669);

                    return syntaxOffset;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 40480, 40684);
                }

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 40700, 41419) || true) && (declaration.Declarations.Length >= 1 && (DynAbs.Tracing.TraceSender.Expression_True(10073, 40704, 40809) && position == f_10073_40756_40792(f_10073_40756_40780(declaration)[0]).SourceSpan.Start))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 40700, 41419);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 41395, 41404);

                    return 0;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 40700, 41419);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 41566, 41603);

                throw f_10073_41572_41602();
                DynAbs.Tracing.TraceSender.TraceExitMethod(10073, 39736, 41614);

                bool
                f_10073_39869_39882()
                {
                    var return_v = IsScriptClass;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 39869, 39882);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.SingleTypeDeclaration>
                f_10073_40001_40030(Microsoft.CodeAnalysis.CSharp.MergedTypeDeclaration
                this_param)
                {
                    var return_v = this_param.Declarations;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 40001, 40030);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SyntaxReference
                f_10073_40088_40115(Microsoft.CodeAnalysis.CSharp.SingleTypeDeclaration
                this_param)
                {
                    var return_v = this_param.SyntaxReference;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 40088, 40115);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SyntaxTree
                f_10073_40150_40170(Microsoft.CodeAnalysis.SyntaxReference
                this_param)
                {
                    var return_v = this_param.SyntaxTree;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 40150, 40170);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.SingleTypeDeclaration>
                f_10073_40001_40030_I(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.SingleTypeDeclaration>
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 40001, 40030);
                    return return_v;
                }


                System.Exception
                f_10073_40387_40417()
                {
                    var return_v = ExceptionUtilities.Unreachable;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 40387, 40417);
                    return return_v;
                }


                bool
                f_10073_40484_40615(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                this_param, int
                position, Microsoft.CodeAnalysis.SyntaxTree
                tree, bool
                isStatic, int
                ctorInitializerLength, out int
                syntaxOffset)
                {
                    var return_v = this_param.TryCalculateSyntaxOffsetOfPositionInInitializer(position, tree, isStatic, ctorInitializerLength: ctorInitializerLength, out syntaxOffset);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 40484, 40615);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.SingleTypeDeclaration>
                f_10073_40756_40780(Microsoft.CodeAnalysis.CSharp.MergedTypeDeclaration
                this_param)
                {
                    var return_v = this_param.Declarations;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 40756, 40780);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SourceLocation
                f_10073_40756_40792(Microsoft.CodeAnalysis.CSharp.SingleTypeDeclaration
                this_param)
                {
                    var return_v = this_param.Location;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 40756, 40792);
                    return return_v;
                }


                System.Exception
                f_10073_41572_41602()
                {
                    var return_v = ExceptionUtilities.Unreachable;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 41572, 41602);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10073, 39736, 41614);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10073, 39736, 41614);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        internal bool TryCalculateSyntaxOffsetOfPositionInInitializer(int position, SyntaxTree tree, bool isStatic, int ctorInitializerLength, out int syntaxOffset)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10073, 41824, 46336);
                Microsoft.CodeAnalysis.CSharp.Symbols.FieldOrPropertyInitializer initializer = default(Microsoft.CodeAnalysis.CSharp.Symbols.FieldOrPropertyInitializer);
                int precedingLength = default(int);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 42005, 42046);

                f_10073_42005_42045(ctorInitializerLength >= 0);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 42062, 42119);

                var
                membersAndInitializers = f_10073_42091_42118(this)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 42133, 42254);

                var
                allInitializers = (DynAbs.Tracing.TraceSender.Conditional_F1(10073, 42155, 42163) || ((isStatic && DynAbs.Tracing.TraceSender.Conditional_F2(10073, 42166, 42207)) || DynAbs.Tracing.TraceSender.Conditional_F3(10073, 42210, 42253))) ? membersAndInitializers.StaticInitializers : membersAndInitializers.InstanceInitializers
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 42270, 42489) || true) && (!f_10073_42275_42392(allInitializers, position, tree, out initializer, out precedingLength))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 42270, 42489);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 42426, 42443);

                    syntaxOffset = 0;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 42461, 42474);

                    return false;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 42270, 42489);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 42810, 42874);

                int
                initializersLength = f_10073_42835_42873(allInitializers)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 42888, 42964);

                int
                distanceFromInitializerStart = position - initializer.Syntax.Span.Start
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 42980, 43135);

                int
                distanceFromCtorBody =
                                initializersLength + ctorInitializerLength -
                                (precedingLength + distanceFromInitializerStart)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 43151, 43190);

                f_10073_43151_43189(distanceFromCtorBody > 0);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 43272, 43309);

                syntaxOffset = -distanceFromCtorBody;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 43323, 43335);

                return true;

                static bool findInitializer(ImmutableArray<ImmutableArray<FieldOrPropertyInitializer>> initializers, int position, SyntaxTree tree,
                                out FieldOrPropertyInitializer found, out int precedingLength)
                {
                    try
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterStaticMethod(10073, 43351, 44566);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 43595, 43615);

                        precedingLength = 0;
                        try
                        {
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 43633, 44484);
                            foreach (var group in f_10073_43655_43667_I(initializers))
                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 43633, 44484);

                                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 43709, 44400) || true) && (f_10073_43713_43727_M(!group.IsEmpty) && (DynAbs.Tracing.TraceSender.Expression_True(10073, 43713, 43790) && f_10073_43756_43782(group[0].Syntax) == tree) && (DynAbs.Tracing.TraceSender.Expression_True(10073, 43713, 43858) && position < group.Last().Syntax.Span.End))
                                )

                                {
                                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 43709, 44400);
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 43960, 44037);

                                    var
                                    initializerIndex = f_10073_43983_44036(group, position)
                                    ;

                                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 44063, 44178) || true) && (initializerIndex < 0)
                                    )

                                    {
                                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 44063, 44178);
                                        DynAbs.Tracing.TraceSender.TraceBreak(10073, 44145, 44151);

                                        break;
                                        DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 44063, 44178);
                                    }
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 44206, 44281);

                                    precedingLength += f_10073_44225_44280(group, initializerIndex);
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 44307, 44339);

                                    found = group[initializerIndex];
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 44365, 44377);

                                    return true;
                                    DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 43709, 44400);
                                }
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 44424, 44465);

                                precedingLength += f_10073_44443_44464(group);
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 43633, 44484);
                            }
                        }
                        catch (System.Exception)
                        {
                            DynAbs.Tracing.TraceSender.TraceExitLoopByException(10073, 1, 852);
                            throw;
                        }
                        finally
                        {
                            DynAbs.Tracing.TraceSender.TraceExitLoop(10073, 1, 852);
                        }
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 44504, 44520);

                        found = default;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 44538, 44551);

                        return false;
                        DynAbs.Tracing.TraceSender.TraceExitStaticMethod(10073, 43351, 44566);

                        bool
                        f_10073_43713_43727_M(bool
                        i)
                        {
                            var return_v = i;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 43713, 43727);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.SyntaxTree
                        f_10073_43756_43782(Microsoft.CodeAnalysis.SyntaxReference
                        this_param)
                        {
                            var return_v = this_param.SyntaxTree;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 43756, 43782);
                            return return_v;
                        }


                        int
                        f_10073_43983_44036(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.FieldOrPropertyInitializer>
                        initializers, int
                        position)
                        {
                            var return_v = IndexOfInitializerContainingPosition(initializers, position);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 43983, 44036);
                            return return_v;
                        }


                        int
                        f_10073_44225_44280(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.FieldOrPropertyInitializer>
                        initializers, int
                        index)
                        {
                            var return_v = getPrecedingInitializersLength(initializers, index);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 44225, 44280);
                            return return_v;
                        }


                        int
                        f_10073_44443_44464(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.FieldOrPropertyInitializer>
                        initializers)
                        {
                            var return_v = getGroupLength(initializers);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 44443, 44464);
                            return return_v;
                        }


                        System.Collections.Immutable.ImmutableArray<System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.FieldOrPropertyInitializer>>
                        f_10073_43655_43667_I(System.Collections.Immutable.ImmutableArray<System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.FieldOrPropertyInitializer>>
                        i)
                        {
                            var return_v = i;
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 43655, 43667);
                            return return_v;
                        }

                    }
                    catch
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10073, 43351, 44566);
                        throw;
                    }
                    finally
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10073, 43351, 44566);
                    }
                    throw new System.Exception("Slicer error: unreachable code");
                }

                static int getGroupLength(ImmutableArray<FieldOrPropertyInitializer> initializers)
                {
                    try
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterStaticMethod(10073, 44582, 44924);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 44697, 44712);

                        int
                        length = 0
                        ;
                        try
                        {
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 44730, 44875);
                            foreach (var initializer in f_10073_44758_44770_I(initializers))
                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 44730, 44875);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 44812, 44856);

                                length += f_10073_44822_44855(initializer);
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 44730, 44875);
                            }
                        }
                        catch (System.Exception)
                        {
                            DynAbs.Tracing.TraceSender.TraceExitLoopByException(10073, 1, 146);
                            throw;
                        }
                        finally
                        {
                            DynAbs.Tracing.TraceSender.TraceExitLoop(10073, 1, 146);
                        }
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 44895, 44909);

                        return length;
                        DynAbs.Tracing.TraceSender.TraceExitStaticMethod(10073, 44582, 44924);

                        int
                        f_10073_44822_44855(Microsoft.CodeAnalysis.CSharp.Symbols.FieldOrPropertyInitializer
                        initializer)
                        {
                            var return_v = getInitializerLength(initializer);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 44822, 44855);
                            return return_v;
                        }


                        System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.FieldOrPropertyInitializer>
                        f_10073_44758_44770_I(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.FieldOrPropertyInitializer>
                        i)
                        {
                            var return_v = i;
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 44758, 44770);
                            return return_v;
                        }

                    }
                    catch
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10073, 44582, 44924);
                        throw;
                    }
                    finally
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10073, 44582, 44924);
                    }
                    throw new System.Exception("Slicer error: unreachable code");
                }

                static int getPrecedingInitializersLength(ImmutableArray<FieldOrPropertyInitializer> initializers, int index)
                {
                    try
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterStaticMethod(10073, 44940, 45303);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 45082, 45097);

                        int
                        length = 0
                        ;
                        try
                        {
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 45124, 45129);
                            for (var
            i = 0
            ; (DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 45115, 45254) || true) && (i < index)
            ; DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 45142, 45145)
            , i++, DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 45115, 45254))

                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 45115, 45254);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 45187, 45235);

                                length += f_10073_45197_45234(initializers[i]);
                            }
                        }
                        catch (System.Exception)
                        {
                            DynAbs.Tracing.TraceSender.TraceExitLoopByException(10073, 1, 140);
                            throw;
                        }
                        finally
                        {
                            DynAbs.Tracing.TraceSender.TraceExitLoop(10073, 1, 140);
                        }
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 45274, 45288);

                        return length;
                        DynAbs.Tracing.TraceSender.TraceExitStaticMethod(10073, 44940, 45303);

                        int
                        f_10073_45197_45234(Microsoft.CodeAnalysis.CSharp.Symbols.FieldOrPropertyInitializer
                        initializer)
                        {
                            var return_v = getInitializerLength(initializer);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 45197, 45234);
                            return return_v;
                        }

                    }
                    catch
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10073, 44940, 45303);
                        throw;
                    }
                    finally
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10073, 44940, 45303);
                    }
                    throw new System.Exception("Slicer error: unreachable code");
                }

                static int getInitializersLength(ImmutableArray<ImmutableArray<FieldOrPropertyInitializer>> initializers)
                {
                    try
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterStaticMethod(10073, 45319, 45666);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 45457, 45472);

                        int
                        length = 0
                        ;
                        try
                        {
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 45490, 45617);
                            foreach (var group in f_10073_45512_45524_I(initializers))
                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 45490, 45617);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 45566, 45598);

                                length += f_10073_45576_45597(group);
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 45490, 45617);
                            }
                        }
                        catch (System.Exception)
                        {
                            DynAbs.Tracing.TraceSender.TraceExitLoopByException(10073, 1, 128);
                            throw;
                        }
                        finally
                        {
                            DynAbs.Tracing.TraceSender.TraceExitLoop(10073, 1, 128);
                        }
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 45637, 45651);

                        return length;
                        DynAbs.Tracing.TraceSender.TraceExitStaticMethod(10073, 45319, 45666);

                        int
                        f_10073_45576_45597(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.FieldOrPropertyInitializer>
                        initializers)
                        {
                            var return_v = getGroupLength(initializers);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 45576, 45597);
                            return return_v;
                        }


                        System.Collections.Immutable.ImmutableArray<System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.FieldOrPropertyInitializer>>
                        f_10073_45512_45524_I(System.Collections.Immutable.ImmutableArray<System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.FieldOrPropertyInitializer>>
                        i)
                        {
                            var return_v = i;
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 45512, 45524);
                            return return_v;
                        }

                    }
                    catch
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10073, 45319, 45666);
                        throw;
                    }
                    finally
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10073, 45319, 45666);
                    }
                    throw new System.Exception("Slicer error: unreachable code");
                }

                static int getInitializerLength(FieldOrPropertyInitializer initializer)
                {
                    try
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterStaticMethod(10073, 45682, 46325);

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 46034, 46281) || true) && (initializer.FieldOpt == null || (DynAbs.Tracing.TraceSender.Expression_False(10073, 46038, 46110) || f_10073_46070_46110_M(!initializer.FieldOpt.IsMetadataConstant)))
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 46034, 46281);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 46224, 46262);

                            return initializer.Syntax.Span.Length;
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 46034, 46281);
                        }
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 46301, 46310);

                        return 0;
                        DynAbs.Tracing.TraceSender.TraceExitStaticMethod(10073, 45682, 46325);

                        bool
                        f_10073_46070_46110_M(bool
                        i)
                        {
                            var return_v = i;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 46070, 46110);
                            return return_v;
                        }

                    }
                    catch
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10073, 45682, 46325);
                        throw;
                    }
                    finally
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10073, 45682, 46325);
                    }
                    throw new System.Exception("Slicer error: unreachable code");
                }
                DynAbs.Tracing.TraceSender.TraceExitMethod(10073, 41824, 46336);

                int
                f_10073_42005_42045(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 42005, 42045);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol.MembersAndInitializers
                f_10073_42091_42118(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                this_param)
                {
                    var return_v = this_param.GetMembersAndInitializers();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 42091, 42118);
                    return return_v;
                }


                bool
                f_10073_42275_42392(System.Collections.Immutable.ImmutableArray<System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.FieldOrPropertyInitializer>>
                initializers, int
                position, Microsoft.CodeAnalysis.SyntaxTree
                tree, out Microsoft.CodeAnalysis.CSharp.Symbols.FieldOrPropertyInitializer
                found, out int
                precedingLength)
                {
                    var return_v = findInitializer(initializers, position, tree, out found, out precedingLength);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 42275, 42392);
                    return return_v;
                }


                int
                f_10073_42835_42873(System.Collections.Immutable.ImmutableArray<System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.FieldOrPropertyInitializer>>
                initializers)
                {
                    var return_v = getInitializersLength(initializers);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 42835, 42873);
                    return return_v;
                }


                int
                f_10073_43151_43189(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 43151, 43189);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10073, 41824, 46336);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10073, 41824, 46336);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private static int IndexOfInitializerContainingPosition(ImmutableArray<FieldOrPropertyInitializer> initializers, int position)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterStaticMethod(10073, 46348, 47386);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 46591, 46707);

                int
                index = initializers.BinarySearch(position, (initializer, pos) => initializer.Syntax.Span.Start.CompareTo(pos))
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 46832, 46908) || true) && (index >= 0)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 46832, 46908);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 46880, 46893);

                    return index;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 46832, 46908);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 47102, 47145);

                int
                precedingInitializerIndex = ~index - 1
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 47159, 47349) || true) && (precedingInitializerIndex >= 0 && (DynAbs.Tracing.TraceSender.Expression_True(10073, 47163, 47267) && initializers[precedingInitializerIndex].Syntax.Span.Contains(position)))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 47159, 47349);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 47301, 47334);

                    return precedingInitializerIndex;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 47159, 47349);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 47365, 47375);

                return -1;
                DynAbs.Tracing.TraceSender.TraceExitStaticMethod(10073, 46348, 47386);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10073, 46348, 47386);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10073, 46348, 47386);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override IEnumerable<string> MemberNames
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(10073, 47470, 47620);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 47506, 47605);

                    return (DynAbs.Tracing.TraceSender.Conditional_F1(10073, 47513, 47538) || (((f_10073_47514_47525() || (DynAbs.Tracing.TraceSender.Expression_False(10073, 47514, 47537) || f_10073_47529_47537())) && DynAbs.Tracing.TraceSender.Conditional_F2(10073, 47541, 47573)) || DynAbs.Tracing.TraceSender.Conditional_F3(10073, 47576, 47604))) ? f_10073_47541_47553(this).Select(m => m.Name) : f_10073_47576_47604(this.declaration);
                    DynAbs.Tracing.TraceSender.TraceExitMethod(10073, 47470, 47620);

                    bool
                    f_10073_47514_47525()
                    {
                        var return_v = IsTupleType;
                        DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 47514, 47525);
                        return return_v;
                    }


                    bool
                    f_10073_47529_47537()
                    {
                        var return_v = IsRecord;
                        DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 47529, 47537);
                        return return_v;
                    }


                    System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>
                    f_10073_47541_47553(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                    this_param)
                    {
                        var return_v = this_param.GetMembers();
                        DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 47541, 47553);
                        return return_v;
                    }


                    System.Collections.Generic.ICollection<string>
                    f_10073_47576_47604(Microsoft.CodeAnalysis.CSharp.MergedTypeDeclaration
                    this_param)
                    {
                        var return_v = this_param.MemberNames;
                        DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 47576, 47604);
                        return return_v;
                    }

                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10073, 47398, 47631);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10073, 47398, 47631);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        internal override ImmutableArray<NamedTypeSymbol> GetTypeMembersUnordered()
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10073, 47643, 47798);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 47743, 47787);

                return f_10073_47750_47786(f_10073_47750_47776(this));
                DynAbs.Tracing.TraceSender.TraceExitMethod(10073, 47643, 47798);

                System.Collections.Generic.Dictionary<string, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol>>
                f_10073_47750_47776(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                this_param)
                {
                    var return_v = this_param.GetTypeMembersDictionary();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 47750, 47776);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol>
                f_10073_47750_47786(System.Collections.Generic.Dictionary<string, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol>>
                dictionary)
                {
                    var return_v = dictionary.Flatten<string, Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol>();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 47750, 47786);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10073, 47643, 47798);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10073, 47643, 47798);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override ImmutableArray<NamedTypeSymbol> GetTypeMembers()
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10073, 47810, 47989);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 47899, 47978);

                return f_10073_47906_47977(f_10073_47906_47932(this), LexicalOrderSymbolComparer.Instance);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10073, 47810, 47989);

                System.Collections.Generic.Dictionary<string, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol>>
                f_10073_47906_47932(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                this_param)
                {
                    var return_v = this_param.GetTypeMembersDictionary();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 47906, 47932);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol>
                f_10073_47906_47977(System.Collections.Generic.Dictionary<string, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol>>
                dictionary, Microsoft.CodeAnalysis.CSharp.LexicalOrderSymbolComparer
                comparer)
                {
                    var return_v = dictionary.Flatten<string, Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol>((System.Collections.Generic.IComparer<Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol>)comparer);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 47906, 47977);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10073, 47810, 47989);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10073, 47810, 47989);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override ImmutableArray<NamedTypeSymbol> GetTypeMembers(string name)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10073, 48001, 48352);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 48101, 48141);

                ImmutableArray<NamedTypeSymbol>
                members
                = default(ImmutableArray<NamedTypeSymbol>);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 48155, 48280) || true) && (f_10073_48159_48216(f_10073_48159_48185(this), name, out members))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 48155, 48280);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 48250, 48265);

                    return members;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 48155, 48280);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 48296, 48341);

                return ImmutableArray<NamedTypeSymbol>.Empty;
                DynAbs.Tracing.TraceSender.TraceExitMethod(10073, 48001, 48352);

                System.Collections.Generic.Dictionary<string, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol>>
                f_10073_48159_48185(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                this_param)
                {
                    var return_v = this_param.GetTypeMembersDictionary();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 48159, 48185);
                    return return_v;
                }


                bool
                f_10073_48159_48216(System.Collections.Generic.Dictionary<string, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol>>
                this_param, string
                key, out System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol>
                value)
                {
                    var return_v = this_param.TryGetValue(key, out value);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 48159, 48216);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10073, 48001, 48352);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10073, 48001, 48352);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override ImmutableArray<NamedTypeSymbol> GetTypeMembers(string name, int arity)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10073, 48364, 48566);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 48475, 48555);

                return f_10073_48482_48502(this, name).WhereAsArray((t, arity) => t.Arity == arity, arity);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10073, 48364, 48566);

                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol>
                f_10073_48482_48502(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                this_param, string
                name)
                {
                    var return_v = this_param.GetTypeMembers(name);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 48482, 48502);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10073, 48364, 48566);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10073, 48364, 48566);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private Dictionary<string, ImmutableArray<NamedTypeSymbol>> GetTypeMembersDictionary()
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10073, 48578, 49192);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 48689, 49141) || true) && (_lazyTypeMembers == null)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 48689, 49141);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 48751, 48797);

                    var
                    diagnostics = f_10073_48769_48796()
                    ;

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 48815, 49087) || true) && (f_10073_48819_48904(ref _lazyTypeMembers, f_10073_48869_48897(this, diagnostics), null) == null)
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 48815, 49087);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 48954, 48993);

                        f_10073_48954_48992(this, diagnostics);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 49017, 49068);

                        state.NotePartComplete(CompletionPart.TypeMembers);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 48815, 49087);
                    }
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 49107, 49126);

                    f_10073_49107_49125(
                                    diagnostics);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 48689, 49141);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 49157, 49181);

                return _lazyTypeMembers;
                DynAbs.Tracing.TraceSender.TraceExitMethod(10073, 48578, 49192);

                Microsoft.CodeAnalysis.DiagnosticBag
                f_10073_48769_48796()
                {
                    var return_v = DiagnosticBag.GetInstance();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 48769, 48796);
                    return return_v;
                }


                System.Collections.Generic.Dictionary<string, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol>>
                f_10073_48869_48897(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                this_param, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.MakeTypeMembers(diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 48869, 48897);
                    return return_v;
                }


                System.Collections.Generic.Dictionary<string, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol>>?
                f_10073_48819_48904(ref System.Collections.Generic.Dictionary<string, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol>>?
                location1, System.Collections.Generic.Dictionary<string, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol>>
                value, System.Collections.Generic.Dictionary<string, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol>>?
                comparand)
                {
                    var return_v = Interlocked.CompareExchange(ref location1, value, comparand);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 48819, 48904);
                    return return_v;
                }


                int
                f_10073_48954_48992(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                this_param, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    this_param.AddDeclarationDiagnostics(diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 48954, 48992);
                    return 0;
                }


                int
                f_10073_49107_49125(Microsoft.CodeAnalysis.DiagnosticBag
                this_param)
                {
                    this_param.Free();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 49107, 49125);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10073, 48578, 49192);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10073, 48578, 49192);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private Dictionary<string, ImmutableArray<NamedTypeSymbol>> MakeTypeMembers(DiagnosticBag diagnostics)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10073, 49204, 51424);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 49331, 49389);

                var
                symbols = f_10073_49345_49388()
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 49403, 49477);

                var
                conflictDict = f_10073_49422_49476()
                ;
                try
                {
                    try
                    {
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 49527, 50731);
                        foreach (var childDeclaration in f_10073_49560_49580_I(f_10073_49560_49580(declaration)))
                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 49527, 50731);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 49622, 49693);

                            var
                            t = f_10073_49630_49692(this, childDeclaration, diagnostics)
                            ;
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 49715, 49768);

                            f_10073_49715_49767(this, t, diagnostics);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 49792, 49820);

                            var
                            key = (f_10073_49803_49809(t), f_10073_49811_49818(t))
                            ;
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 49842, 49871);

                            SourceNamedTypeSymbol?
                            other
                            = default(SourceNamedTypeSymbol?);

                            if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 49893, 50673) || true) && (f_10073_49897_49937(conflictDict, key, out other))
                            )

                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 49893, 50673);

                                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 49987, 50527) || true) && (f_10073_49991_50000().Length == 1 || (DynAbs.Tracing.TraceSender.Expression_False(10073, 49991, 50025) || f_10073_50016_50025()))
                                )

                                {
                                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 49987, 50527);

                                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 50083, 50500) || true) && (f_10073_50087_50098(t) && (DynAbs.Tracing.TraceSender.Expression_True(10073, 50087, 50117) && f_10073_50102_50117(other)))
                                    )

                                    {
                                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 50083, 50500);
                                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 50183, 50257);

                                        f_10073_50183_50256(diagnostics, ErrorCode.ERR_PartialTypeKindConflict, f_10073_50238_50249(t)[0], t);
                                        DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 50083, 50500);
                                    }

                                    else

                                    {
                                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 50083, 50500);
                                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 50387, 50469);

                                        f_10073_50387_50468(diagnostics, ErrorCode.ERR_DuplicateNameInClass, f_10073_50439_50450(t)[0], this, f_10073_50461_50467(t));
                                        DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 50083, 50500);
                                    }
                                    DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 49987, 50527);
                                }
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 49893, 50673);
                            }

                            else

                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 49893, 50673);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 50625, 50650);

                                f_10073_50625_50649(conflictDict, key, t);
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 49893, 50673);
                            }
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 50697, 50712);

                            f_10073_50697_50711(
                                                symbols, t);
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 49527, 50731);
                        }
                    }
                    catch (System.Exception)
                    {
                        DynAbs.Tracing.TraceSender.TraceExitLoopByException(10073, 1, 1205);
                        throw;
                    }
                    finally
                    {
                        DynAbs.Tracing.TraceSender.TraceExitLoop(10073, 1, 1205);
                    }
                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 50751, 51076) || true) && (f_10073_50755_50766())
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 50751, 51076);
                        try
                        {
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 50808, 51057);
                            foreach (var t in f_10073_50826_50833_I(symbols))
                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 50808, 51057);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 50883, 51034);

                                f_10073_50883_51033(f_10073_50915_50957(f_10073_50915_50942(t)[0]), MessageID.IDS_DefaultInterfaceImplementation, diagnostics, f_10073_51018_51029(t)[0]);
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 50808, 51057);
                            }
                        }
                        catch (System.Exception)
                        {
                            DynAbs.Tracing.TraceSender.TraceExitLoopByException(10073, 1, 250);
                            throw;
                        }
                        finally
                        {
                            DynAbs.Tracing.TraceSender.TraceExitLoop(10073, 1, 250);
                        }
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 50751, 51076);
                    }
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 51096, 51140);

                    f_10073_51096_51139(f_10073_51109_51133(s_emptyTypeMembers) == 0);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 51158, 51314);

                    return (DynAbs.Tracing.TraceSender.Conditional_F1(10073, 51165, 51182) || ((f_10073_51165_51178(symbols) > 0 && DynAbs.Tracing.TraceSender.Conditional_F2(10073, 51206, 51271)) || DynAbs.Tracing.TraceSender.Conditional_F3(10073, 51295, 51313))) ? f_10073_51206_51271(symbols, s => s.Name, StringOrdinalComparer.Instance) : s_emptyTypeMembers;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinally(10073, 51343, 51413);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 51383, 51398);

                    f_10073_51383_51397(symbols);
                    DynAbs.Tracing.TraceSender.TraceExitFinally(10073, 51343, 51413);
                }
                DynAbs.Tracing.TraceSender.TraceExitMethod(10073, 49204, 51424);

                Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol>
                f_10073_49345_49388()
                {
                    var return_v = ArrayBuilder<NamedTypeSymbol>.GetInstance();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 49345, 49388);
                    return return_v;
                }


                System.Collections.Generic.Dictionary<(string, int), Microsoft.CodeAnalysis.CSharp.Symbols.SourceNamedTypeSymbol>
                f_10073_49422_49476()
                {
                    var return_v = new System.Collections.Generic.Dictionary<(string, int), Microsoft.CodeAnalysis.CSharp.Symbols.SourceNamedTypeSymbol>();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 49422, 49476);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.MergedTypeDeclaration>
                f_10073_49560_49580(Microsoft.CodeAnalysis.CSharp.MergedTypeDeclaration
                this_param)
                {
                    var return_v = this_param.Children;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 49560, 49580);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.SourceNamedTypeSymbol
                f_10073_49630_49692(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                containingSymbol, Microsoft.CodeAnalysis.CSharp.MergedTypeDeclaration
                declaration, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.Symbols.SourceNamedTypeSymbol((Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceOrTypeSymbol)containingSymbol, declaration, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 49630, 49692);
                    return return_v;
                }


                int
                f_10073_49715_49767(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.SourceNamedTypeSymbol
                member, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    this_param.CheckMemberNameDistinctFromType((Microsoft.CodeAnalysis.CSharp.Symbol)member, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 49715, 49767);
                    return 0;
                }


                string
                f_10073_49803_49809(Microsoft.CodeAnalysis.CSharp.Symbols.SourceNamedTypeSymbol
                this_param)
                {
                    var return_v = this_param.Name;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 49803, 49809);
                    return return_v;
                }


                int
                f_10073_49811_49818(Microsoft.CodeAnalysis.CSharp.Symbols.SourceNamedTypeSymbol
                this_param)
                {
                    var return_v = this_param.Arity;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 49811, 49818);
                    return return_v;
                }


                bool
                f_10073_49897_49937(System.Collections.Generic.Dictionary<(string, int), Microsoft.CodeAnalysis.CSharp.Symbols.SourceNamedTypeSymbol>
                this_param, (string Name, int Arity)
                key, out Microsoft.CodeAnalysis.CSharp.Symbols.SourceNamedTypeSymbol?
                value)
                {
                    var return_v = this_param.TryGetValue(key, out value);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 49897, 49937);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Location>
                f_10073_49991_50000()
                {
                    var return_v = Locations;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 49991, 50000);
                    return return_v;
                }


                bool
                f_10073_50016_50025()
                {
                    var return_v = IsPartial;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 50016, 50025);
                    return return_v;
                }


                bool
                f_10073_50087_50098(Microsoft.CodeAnalysis.CSharp.Symbols.SourceNamedTypeSymbol
                this_param)
                {
                    var return_v = this_param.IsPartial;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 50087, 50098);
                    return return_v;
                }


                bool
                f_10073_50102_50117(Microsoft.CodeAnalysis.CSharp.Symbols.SourceNamedTypeSymbol
                this_param)
                {
                    var return_v = this_param.IsPartial;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 50102, 50117);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Location>
                f_10073_50238_50249(Microsoft.CodeAnalysis.CSharp.Symbols.SourceNamedTypeSymbol
                this_param)
                {
                    var return_v = this_param.Locations;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 50238, 50249);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo
                f_10073_50183_50256(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, Microsoft.CodeAnalysis.Location
                location, params object[]
                args)
                {
                    var return_v = diagnostics.Add(code, location, args);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 50183, 50256);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Location>
                f_10073_50439_50450(Microsoft.CodeAnalysis.CSharp.Symbols.SourceNamedTypeSymbol
                this_param)
                {
                    var return_v = this_param.Locations;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 50439, 50450);
                    return return_v;
                }


                string
                f_10073_50461_50467(Microsoft.CodeAnalysis.CSharp.Symbols.SourceNamedTypeSymbol
                this_param)
                {
                    var return_v = this_param.Name;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 50461, 50467);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo
                f_10073_50387_50468(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, Microsoft.CodeAnalysis.Location
                location, params object[]
                args)
                {
                    var return_v = diagnostics.Add(code, location, args);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 50387, 50468);
                    return return_v;
                }


                int
                f_10073_50625_50649(System.Collections.Generic.Dictionary<(string, int), Microsoft.CodeAnalysis.CSharp.Symbols.SourceNamedTypeSymbol>
                this_param, (string Name, int Arity)
                key, Microsoft.CodeAnalysis.CSharp.Symbols.SourceNamedTypeSymbol
                value)
                {
                    this_param.Add(key, value);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 50625, 50649);
                    return 0;
                }


                int
                f_10073_50697_50711(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol>
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.SourceNamedTypeSymbol
                item)
                {
                    this_param.Add((Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol)item);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 50697, 50711);
                    return 0;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.MergedTypeDeclaration>
                f_10073_49560_49580_I(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.MergedTypeDeclaration>
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 49560, 49580);
                    return return_v;
                }


                bool
                f_10073_50755_50766()
                {
                    var return_v = IsInterface;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 50755, 50766);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.SyntaxReference>
                f_10073_50915_50942(Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                this_param)
                {
                    var return_v = this_param.DeclaringSyntaxReferences;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 50915, 50942);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SyntaxNode
                f_10073_50915_50957(Microsoft.CodeAnalysis.SyntaxReference
                this_param)
                {
                    var return_v = this_param.GetSyntax();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 50915, 50957);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Location>
                f_10073_51018_51029(Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                this_param)
                {
                    var return_v = this_param.Locations;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 51018, 51029);
                    return return_v;
                }


                bool
                f_10073_50883_51033(Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.CSharp.MessageID
                feature, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.Location
                location)
                {
                    var return_v = Binder.CheckFeatureAvailability(syntax, feature, diagnostics, location);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 50883, 51033);
                    return return_v;
                }


                Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol>
                f_10073_50826_50833_I(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol>
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 50826, 50833);
                    return return_v;
                }


                int
                f_10073_51109_51133(System.Collections.Generic.Dictionary<string, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol>>
                this_param)
                {
                    var return_v = this_param.Count;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 51109, 51133);
                    return return_v;
                }


                int
                f_10073_51096_51139(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 51096, 51139);
                    return 0;
                }


                int
                f_10073_51165_51178(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol>
                this_param)
                {
                    var return_v = this_param.Count;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 51165, 51178);
                    return return_v;
                }


                System.Collections.Generic.Dictionary<string, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol>>
                f_10073_51206_51271(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol>
                this_param, System.Func<Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol, string>
                keySelector, Roslyn.Utilities.StringOrdinalComparer
                comparer)
                {
                    var return_v = this_param.ToDictionary<string>(keySelector, (System.Collections.Generic.IEqualityComparer<string>)comparer);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 51206, 51271);
                    return return_v;
                }


                int
                f_10073_51383_51397(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol>
                this_param)
                {
                    this_param.Free();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 51383, 51397);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10073, 49204, 51424);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10073, 49204, 51424);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private void CheckMemberNameDistinctFromType(Symbol member, DiagnosticBag diagnostics)
        {
            switch (this.TypeKind)
            {
                case TypeKind.Class:
                case TypeKind.Struct:
                    if (member.Name == this.Name)
                    {
                        diagnostics.Add(ErrorCode.ERR_MemberNameSameAsType, member.Locations[0], this.Name);
                    }
                    break;
                case TypeKind.Interface:
                    if (member.IsStatic)
                    {
                        goto case TypeKind.Class;
                    }
                    break;
            }
        }

        internal override ImmutableArray<Symbol> GetMembersUnordered()
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10073, 52143, 52618);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 52230, 52265);

                var
                result = _lazyMembersFlattened
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 52281, 52554) || true) && (result.IsDefault)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 52281, 52554);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 52335, 52377);

                    result = f_10073_52344_52376(f_10073_52344_52362(this), null);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 52412, 52490);

                    f_10073_52412_52489(ref _lazyMembersFlattened, result);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 52508, 52539);

                    result = _lazyMembersFlattened;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 52281, 52554);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 52570, 52607);

                return result.ConditionallyDeOrder();
                DynAbs.Tracing.TraceSender.TraceExitMethod(10073, 52143, 52618);

                System.Collections.Generic.Dictionary<string, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>>
                f_10073_52344_52362(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                this_param)
                {
                    var return_v = this_param.GetMembersByName();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 52344, 52362);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>
                f_10073_52344_52376(System.Collections.Generic.Dictionary<string, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>>
                dictionary, System.Collections.Generic.IComparer<Microsoft.CodeAnalysis.CSharp.Symbol>?
                comparer)
                {
                    var return_v = dictionary.Flatten<string, Microsoft.CodeAnalysis.CSharp.Symbol>(comparer);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 52344, 52376);
                    return return_v;
                }


                bool
                f_10073_52412_52489(ref System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>
                location, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>
                value)
                {
                    var return_v = ImmutableInterlocked.InterlockedInitialize(ref location, value);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 52412, 52489);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10073, 52143, 52618);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10073, 52143, 52618);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override ImmutableArray<Symbol> GetMembers()
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10073, 52630, 53395);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 52706, 53384) || true) && (_flags.FlattenedMembersIsSorted)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 52706, 53384);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 52775, 52804);

                    return _lazyMembersFlattened;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 52706, 53384);
                }

                else

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 52706, 53384);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 52870, 52914);

                    var
                    allMembers = f_10073_52887_52913(this)
                    ;

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 52934, 53276) || true) && (allMembers.Length > 1)
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 52934, 53276);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 53089, 53155);

                        allMembers = allMembers.Sort(LexicalOrderSymbolComparer.Instance);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 53177, 53257);

                        f_10073_53177_53256(ref _lazyMembersFlattened, allMembers);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 52934, 53276);
                    }
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 53296, 53333);

                    _flags.SetFlattenedMembersIsSorted();
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 53351, 53369);

                    return allMembers;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 52706, 53384);
                }
                DynAbs.Tracing.TraceSender.TraceExitMethod(10073, 52630, 53395);

                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>
                f_10073_52887_52913(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                this_param)
                {
                    var return_v = this_param.GetMembersUnordered();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 52887, 52913);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>
                f_10073_53177_53256(ref System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>
                location, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>
                value)
                {
                    var return_v = ImmutableInterlocked.InterlockedExchange(ref location, value);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 53177, 53256);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10073, 52630, 53395);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10073, 52630, 53395);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public sealed override ImmutableArray<Symbol> GetMembers(string name)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10073, 53407, 53726);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 53501, 53532);

                ImmutableArray<Symbol>
                members
                = default(ImmutableArray<Symbol>);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 53546, 53663) || true) && (f_10073_53550_53599(f_10073_53550_53568(this), name, out members))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 53546, 53663);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 53633, 53648);

                    return members;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 53546, 53663);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 53679, 53715);

                return ImmutableArray<Symbol>.Empty;
                DynAbs.Tracing.TraceSender.TraceExitMethod(10073, 53407, 53726);

                System.Collections.Generic.Dictionary<string, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>>
                f_10073_53550_53568(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                this_param)
                {
                    var return_v = this_param.GetMembersByName();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 53550, 53568);
                    return return_v;
                }


                bool
                f_10073_53550_53599(System.Collections.Generic.Dictionary<string, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>>
                this_param, string
                key, out System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>
                value)
                {
                    var return_v = this_param.TryGetValue(key, out value);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 53550, 53599);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10073, 53407, 53726);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10073, 53407, 53726);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        internal override bool HasPossibleWellKnownCloneMethod()
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10073, 54094, 54105);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 54097, 54105);
                return f_10073_54097_54105(); DynAbs.Tracing.TraceSender.TraceExitMethod(10073, 54094, 54105);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10073, 54094, 54105);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10073, 54094, 54105);
            }
            throw new System.Exception("Slicer error: unreachable code");

            bool
            f_10073_54097_54105()
            {
                var return_v = IsRecord;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 54097, 54105);
                return return_v;
            }

        }

        internal override ImmutableArray<Symbol> GetSimpleNonTypeMembers(string name)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10073, 54118, 54478);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 54220, 54415) || true) && (_lazyMembersDictionary != null || (DynAbs.Tracing.TraceSender.Expression_False(10073, 54224, 54296) || f_10073_54258_54296(f_10073_54258_54281(declaration), name)) || (DynAbs.Tracing.TraceSender.Expression_False(10073, 54224, 54342) || f_10073_54300_54316(declaration) == DeclarationKind.Record))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 54220, 54415);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 54376, 54400);

                    return f_10073_54383_54399(this, name);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 54220, 54415);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 54431, 54467);

                return ImmutableArray<Symbol>.Empty;
                DynAbs.Tracing.TraceSender.TraceExitMethod(10073, 54118, 54478);

                System.Collections.Generic.ICollection<string>
                f_10073_54258_54281(Microsoft.CodeAnalysis.CSharp.MergedTypeDeclaration
                this_param)
                {
                    var return_v = this_param.MemberNames;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 54258, 54281);
                    return return_v;
                }


                bool
                f_10073_54258_54296(System.Collections.Generic.ICollection<string>
                this_param, string
                item)
                {
                    var return_v = this_param.Contains(item);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 54258, 54296);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.DeclarationKind
                f_10073_54300_54316(Microsoft.CodeAnalysis.CSharp.MergedTypeDeclaration
                this_param)
                {
                    var return_v = this_param.Kind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 54300, 54316);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>
                f_10073_54383_54399(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                this_param, string
                name)
                {
                    var return_v = this_param.GetMembers(name);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 54383, 54399);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10073, 54118, 54478);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10073, 54118, 54478);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        internal override IEnumerable<FieldSymbol> GetFieldsToEmit()
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10073, 54490, 55651);

                var listYield = new List<FieldSymbol>();

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 54575, 54901) || true) && (f_10073_54579_54592(this) == TypeKind.Enum)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 54575, 54901);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 54717, 54779);

                    var
                    valueField = f_10073_54734_54778(((SourceNamedTypeSymbol)this))
                    ;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 54797, 54844);

                    f_10073_54797_54843((object)valueField != null);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 54862, 54886);

                    listYield.Add(valueField);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 54575, 54901);
                }
                try
                {
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 54917, 55640);
                    foreach (var m in f_10073_54935_54952_I(f_10073_54935_54952(this)))
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 54917, 55640);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 54986, 55625);

                        switch (f_10073_54994_55000(m))
                        {

                            case SymbolKind.Field:
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 54986, 55625);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 55090, 55117);

                                var
                                field = (FieldSymbol)m
                                ;
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 55143, 55192);

                                listYield.Add(f_10073_55156_55182(field) ?? (DynAbs.Tracing.TraceSender.Expression_Null<Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol>(10073, 55156, 55191) ?? field));
                                DynAbs.Tracing.TraceSender.TraceBreak(10073, 55218, 55224);

                                break;
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 54986, 55625);

                            case SymbolKind.Event:
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 54986, 55625);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 55294, 55358);

                                FieldSymbol?
                                associatedField = f_10073_55325_55357(((EventSymbol)m))
                                ;

                                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 55384, 55574) || true) && ((object?)associatedField != null)
                                )

                                {
                                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 55384, 55574);
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 55478, 55547);

                                    listYield.Add(f_10073_55491_55527(associatedField) ?? (DynAbs.Tracing.TraceSender.Expression_Null<Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol>(10073, 55491, 55546) ?? associatedField));
                                    DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 55384, 55574);
                                }
                                DynAbs.Tracing.TraceSender.TraceBreak(10073, 55600, 55606);

                                break;
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 54986, 55625);
                        }
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 54917, 55640);
                    }
                }
                catch (System.Exception)
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoopByException(10073, 1, 724);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoop(10073, 1, 724);
                }
                DynAbs.Tracing.TraceSender.TraceExitMethod(10073, 54490, 55651);

                return listYield;

                Microsoft.CodeAnalysis.TypeKind
                f_10073_54579_54592(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                this_param)
                {
                    var return_v = this_param.TypeKind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 54579, 54592);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol
                f_10073_54734_54778(Microsoft.CodeAnalysis.CSharp.Symbols.SourceNamedTypeSymbol
                this_param)
                {
                    var return_v = this_param.EnumValueField;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 54734, 54778);
                    return return_v;
                }


                int
                f_10073_54797_54843(bool
                b)
                {
                    RoslynDebug.Assert(b);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 54797, 54843);
                    return 0;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>
                f_10073_54935_54952(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                this_param)
                {
                    var return_v = this_param.GetMembers();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 54935, 54952);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SymbolKind
                f_10073_54994_55000(Microsoft.CodeAnalysis.CSharp.Symbol
                this_param)
                {
                    var return_v = this_param.Kind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 54994, 55000);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol
                f_10073_55156_55182(Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol
                this_param)
                {
                    var return_v = this_param.TupleUnderlyingField;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 55156, 55182);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol?
                f_10073_55325_55357(Microsoft.CodeAnalysis.CSharp.Symbols.EventSymbol
                this_param)
                {
                    var return_v = this_param.AssociatedField;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 55325, 55357);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol
                f_10073_55491_55527(Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol
                this_param)
                {
                    var return_v = this_param.TupleUnderlyingField;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 55491, 55527);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>
                f_10073_54935_54952_I(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 54935, 54952);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10073, 54490, 55651);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10073, 54490, 55651);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        internal override ImmutableArray<Symbol> GetEarlyAttributeDecodingMembers()
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10073, 56035, 56208);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 56135, 56197);

                return f_10073_56142_56196(f_10073_56142_56186(this));
                DynAbs.Tracing.TraceSender.TraceExitMethod(10073, 56035, 56208);

                System.Collections.Generic.Dictionary<string, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>>
                f_10073_56142_56186(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                this_param)
                {
                    var return_v = this_param.GetEarlyAttributeDecodingMembersDictionary();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 56142, 56186);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>
                f_10073_56142_56196(System.Collections.Generic.Dictionary<string, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>>
                dictionary)
                {
                    var return_v = dictionary.Flatten<string, Microsoft.CodeAnalysis.CSharp.Symbol>();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 56142, 56196);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10073, 56035, 56208);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10073, 56035, 56208);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        internal override ImmutableArray<Symbol> GetEarlyAttributeDecodingMembers(string name)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10073, 56620, 56908);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 56731, 56761);

                ImmutableArray<Symbol>
                result
                = default(ImmutableArray<Symbol>);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 56775, 56897);

                return (DynAbs.Tracing.TraceSender.Conditional_F1(10073, 56782, 56856) || ((f_10073_56782_56856(f_10073_56782_56826(this), name, out result) && DynAbs.Tracing.TraceSender.Conditional_F2(10073, 56859, 56865)) || DynAbs.Tracing.TraceSender.Conditional_F3(10073, 56868, 56896))) ? result : ImmutableArray<Symbol>.Empty;
                DynAbs.Tracing.TraceSender.TraceExitMethod(10073, 56620, 56908);

                System.Collections.Generic.Dictionary<string, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>>
                f_10073_56782_56826(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                this_param)
                {
                    var return_v = this_param.GetEarlyAttributeDecodingMembersDictionary();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 56782, 56826);
                    return return_v;
                }


                bool
                f_10073_56782_56856(System.Collections.Generic.Dictionary<string, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>>
                this_param, string
                key, out System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>
                value)
                {
                    var return_v = this_param.TryGetValue(key, out value);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 56782, 56856);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10073, 56620, 56908);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10073, 56620, 56908);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private Dictionary<string, ImmutableArray<Symbol>> GetEarlyAttributeDecodingMembersDictionary()
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10073, 56920, 58666);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 57040, 58587) || true) && (_lazyEarlyAttributeDecodingMembersDictionary == null)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 57040, 58587);

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 57130, 57303) || true) && (f_10073_57134_57175(ref _lazyMembersDictionary) is Dictionary<string, ImmutableArray<Symbol>> result)
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 57130, 57303);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 57270, 57284);

                        return result;
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 57130, 57303);
                    }
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 57323, 57380);

                    var
                    membersAndInitializers = f_10073_57352_57379(this)
                    ;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 57564, 57621);

                    Dictionary<string, ImmutableArray<Symbol>>
                    membersByName
                    = default(Dictionary<string, ImmutableArray<Symbol>>);

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 57641, 58363) || true) && (!membersAndInitializers.HaveIndexers)
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 57641, 58363);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 57723, 57803);

                        membersByName = membersAndInitializers.NonTypeMembers.ToDictionary(s => s.Name);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 57641, 58363);
                    }

                    else

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 57641, 58363);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 58098, 58344);

                        membersByName = membersAndInitializers.NonTypeMembers.
                                                WhereAsArray(s => !s.IsIndexer() && (!s.IsAccessor() || ((MethodSymbol)s).AssociatedSymbol?.IsIndexer() != true)).
                                                ToDictionary(s => s.Name);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 57641, 58363);
                    }
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 58383, 58453);

                    f_10073_58383_58452(membersByName, f_10073_58425_58451(this));
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 58473, 58572);

                    f_10073_58473_58571(ref _lazyEarlyAttributeDecodingMembersDictionary, membersByName, null);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 57040, 58587);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 58603, 58655);

                return _lazyEarlyAttributeDecodingMembersDictionary;
                DynAbs.Tracing.TraceSender.TraceExitMethod(10073, 56920, 58666);

                System.Collections.Generic.Dictionary<string, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>>?
                f_10073_57134_57175(ref System.Collections.Generic.Dictionary<string, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>>?
                location)
                {
                    var return_v = Volatile.Read(ref location);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 57134, 57175);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol.MembersAndInitializers
                f_10073_57352_57379(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                this_param)
                {
                    var return_v = this_param.GetMembersAndInitializers();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 57352, 57379);
                    return return_v;
                }


                System.Collections.Generic.Dictionary<string, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol>>
                f_10073_58425_58451(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                this_param)
                {
                    var return_v = this_param.GetTypeMembersDictionary();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 58425, 58451);
                    return return_v;
                }


                int
                f_10073_58383_58452(System.Collections.Generic.Dictionary<string, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>>
                membersByName, System.Collections.Generic.Dictionary<string, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol>>
                typesByName)
                {
                    AddNestedTypesToDictionary(membersByName, typesByName);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 58383, 58452);
                    return 0;
                }


                System.Collections.Generic.Dictionary<string, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>>?
                f_10073_58473_58571(ref System.Collections.Generic.Dictionary<string, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>>?
                location1, System.Collections.Generic.Dictionary<string, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>>
                value, System.Collections.Generic.Dictionary<string, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>>?
                comparand)
                {
                    var return_v = Interlocked.CompareExchange(ref location1, value, comparand);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 58473, 58571);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10073, 56920, 58666);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10073, 56920, 58666);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        protected MembersAndInitializers GetMembersAndInitializers()
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10073, 58920, 59804);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 59005, 59062);

                var
                membersAndInitializers = _lazyMembersAndInitializers
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 59076, 59189) || true) && (membersAndInitializers != null)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 59076, 59189);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 59144, 59174);

                    return membersAndInitializers;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 59076, 59189);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 59205, 59251);

                var
                diagnostics = f_10073_59223_59250()
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 59265, 59331);

                membersAndInitializers = f_10073_59290_59330(this, diagnostics);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 59347, 59457);

                var
                alreadyKnown = f_10073_59366_59456(ref _lazyMembersAndInitializers, membersAndInitializers, null)
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 59471, 59601) || true) && (alreadyKnown != null)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 59471, 59601);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 59529, 59548);

                    f_10073_59529_59547(diagnostics);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 59566, 59586);

                    return alreadyKnown;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 59471, 59601);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 59617, 59656);

                f_10073_59617_59655(this, diagnostics);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 59670, 59689);

                f_10073_59670_59688(diagnostics);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 59703, 59746);

                _lazyDeclaredMembersAndInitializers = null;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 59762, 59793);

                return membersAndInitializers!;
                DynAbs.Tracing.TraceSender.TraceExitMethod(10073, 58920, 59804);

                Microsoft.CodeAnalysis.DiagnosticBag
                f_10073_59223_59250()
                {
                    var return_v = DiagnosticBag.GetInstance();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 59223, 59250);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol.MembersAndInitializers?
                f_10073_59290_59330(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                this_param, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.BuildMembersAndInitializers(diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 59290, 59330);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol.MembersAndInitializers?
                f_10073_59366_59456(ref Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol.MembersAndInitializers?
                location1, Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol.MembersAndInitializers?
                value, Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol.MembersAndInitializers?
                comparand)
                {
                    var return_v = Interlocked.CompareExchange(ref location1, value, comparand);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 59366, 59456);
                    return return_v;
                }


                int
                f_10073_59529_59547(Microsoft.CodeAnalysis.DiagnosticBag
                this_param)
                {
                    this_param.Free();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 59529, 59547);
                    return 0;
                }


                int
                f_10073_59617_59655(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                this_param, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    this_param.AddDeclarationDiagnostics(diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 59617, 59655);
                    return 0;
                }


                int
                f_10073_59670_59688(Microsoft.CodeAnalysis.DiagnosticBag
                this_param)
                {
                    this_param.Free();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 59670, 59688);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10073, 58920, 59804);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10073, 58920, 59804);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        [Conditional("DEBUG")]
        internal void AssertMemberExposure(Symbol member, bool forDiagnostics = false)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10073, 60252, 62196);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 60387, 61140) || true) && (member is NamedTypeSymbol type)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 60387, 61140);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 60455, 60484);

                    f_10073_60455_60483(forDiagnostics);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 60529, 60576);

                    var
                    temp = f_10073_60540_60575(ref _lazyTypeMembers)
                    ;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 60594, 60704);

                    f_10073_60594_60703((DynAbs.Tracing.TraceSender.Conditional_F1(10073, 60607, 60619) || ((temp != null && DynAbs.Tracing.TraceSender.Conditional_F2(10073, 60622, 60694)) || DynAbs.Tracing.TraceSender.Conditional_F3(10073, 60697, 60702))) ? f_10073_60622_60686(f_10073_60622_60633(temp), types => types.Contains(t => t == (object)type)) == true : false);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 60722, 60729);

                    return;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 60387, 61140);
                }

                else
                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 60387, 61140);

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 60763, 61140) || true) && (member is TypeParameterSymbol || (DynAbs.Tracing.TraceSender.Expression_False(10073, 60767, 60837) || member is SynthesizedMethodBaseSymbol))
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 60763, 61140);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 60871, 60900);

                        f_10073_60871_60899(forDiagnostics);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 60918, 60925);

                        return;
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 60763, 61140);
                    }

                    else
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 60763, 61140);

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 60959, 61140) || true) && (member is FieldSymbol field && (DynAbs.Tracing.TraceSender.Expression_True(10073, 60963, 61033) && f_10073_60994_61016(field) is EventSymbol e))
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 60959, 61140);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 61067, 61096);

                            f_10073_61067_61095(forDiagnostics);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 61114, 61125);

                            member = e;
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 60959, 61140);
                        }
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 60763, 61140);
                    }
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 60387, 61140);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 61156, 61226);

                var
                declared = f_10073_61171_61225(ref _lazyDeclaredMembersAndInitializers)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 61263, 61322);

                var
                temp2 = f_10073_61275_61321(ref _lazyMembersAndInitializers)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 61336, 61415);

                f_10073_61336_61414(declared != DeclaredMembersAndInitializers.UninitializedSentinel);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 61431, 61740) || true) && ((declared is object && (DynAbs.Tracing.TraceSender.Expression_True(10073, 61436, 61573) && (f_10073_61459_61517(declared.NonTypeMembers, m => m == (object)member) || (DynAbs.Tracing.TraceSender.Expression_False(10073, 61459, 61572) || declared.RecordPrimaryConstructor == (object)member)))) || (DynAbs.Tracing.TraceSender.Expression_False(10073, 61435, 61684) || ((DynAbs.Tracing.TraceSender.Conditional_F1(10073, 61596, 61609) || ((temp2 != null && DynAbs.Tracing.TraceSender.Conditional_F2(10073, 61612, 61675)) || DynAbs.Tracing.TraceSender.Conditional_F3(10073, 61678, 61683))) ? f_10073_61612_61667(temp2.NonTypeMembers, m => m == (object)member) == true : false)))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 61431, 61740);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 61718, 61725);

                    return;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 61431, 61740);
                }

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 61756, 62119) || true) && (member is FieldSymbol && (DynAbs.Tracing.TraceSender.Expression_True(10073, 61760, 61801) && f_10073_61785_61801(this)))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 61756, 62119);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 61835, 61864);

                    f_10073_61835_61863(forDiagnostics);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 61882, 61889);

                    return;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 61756, 62119);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 62135, 62185);

                f_10073_62135_62184(false, "Premature symbol exposure.");
                DynAbs.Tracing.TraceSender.TraceExitMethod(10073, 60252, 62196);

                int
                f_10073_60455_60483(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 60455, 60483);
                    return 0;
                }


                System.Collections.Generic.Dictionary<string, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol>>?
                f_10073_60540_60575(ref System.Collections.Generic.Dictionary<string, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol>>?
                location)
                {
                    var return_v = Volatile.Read(ref location);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 60540, 60575);
                    return return_v;
                }


                System.Collections.Generic.Dictionary<string, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol>>.ValueCollection
                f_10073_60622_60633(System.Collections.Generic.Dictionary<string, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol>>
                this_param)
                {
                    var return_v = this_param.Values;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 60622, 60633);
                    return return_v;
                }


                bool
                f_10073_60622_60686(System.Collections.Generic.Dictionary<string, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol>>.ValueCollection
                source, System.Func<System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol>, bool>
                predicate)
                {
                    var return_v = source.Any<System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol>>(predicate);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 60622, 60686);
                    return return_v;
                }


                int
                f_10073_60594_60703(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 60594, 60703);
                    return 0;
                }


                int
                f_10073_60871_60899(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 60871, 60899);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.Symbol
                f_10073_60994_61016(Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol
                this_param)
                {
                    var return_v = this_param.AssociatedSymbol;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 60994, 61016);
                    return return_v;
                }


                int
                f_10073_61067_61095(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 61067, 61095);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol.DeclaredMembersAndInitializers?
                f_10073_61171_61225(ref Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol.DeclaredMembersAndInitializers?
                location)
                {
                    var return_v = Volatile.Read(ref location);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 61171, 61225);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol.MembersAndInitializers?
                f_10073_61275_61321(ref Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol.MembersAndInitializers?
                location)
                {
                    var return_v = Volatile.Read(ref location);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 61275, 61321);
                    return return_v;
                }


                int
                f_10073_61336_61414(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 61336, 61414);
                    return 0;
                }


                bool
                f_10073_61459_61517(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>
                sequence, System.Func<Microsoft.CodeAnalysis.CSharp.Symbol, bool>
                predicate)
                {
                    var return_v = sequence.Contains<Microsoft.CodeAnalysis.CSharp.Symbol>(predicate);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 61459, 61517);
                    return return_v;
                }


                bool
                f_10073_61612_61667(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>
                sequence, System.Func<Microsoft.CodeAnalysis.CSharp.Symbol, bool>
                predicate)
                {
                    var return_v = sequence.Contains<Microsoft.CodeAnalysis.CSharp.Symbol>(predicate);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 61612, 61667);
                    return return_v;
                }


                bool
                f_10073_61785_61801(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                this_param)
                {
                    var return_v = this_param.IsTupleType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 61785, 61801);
                    return return_v;
                }


                int
                f_10073_61835_61863(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 61835, 61863);
                    return 0;
                }


                int
                f_10073_62135_62184(bool
                condition, string
                message)
                {
                    Debug.Assert(condition, message);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 62135, 62184);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10073, 60252, 62196);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10073, 60252, 62196);
            }
        }

        protected Dictionary<string, ImmutableArray<Symbol>> GetMembersByName()
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10073, 62208, 62491);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 62304, 62434) || true) && (this.state.HasComplete(CompletionPart.Members))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 62304, 62434);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 62388, 62419);

                    return _lazyMembersDictionary!;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 62304, 62434);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 62450, 62480);

                return f_10073_62457_62479(this);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10073, 62208, 62491);

                System.Collections.Generic.Dictionary<string, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>>
                f_10073_62457_62479(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                this_param)
                {
                    var return_v = this_param.GetMembersByNameSlow();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 62457, 62479);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10073, 62208, 62491);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10073, 62208, 62491);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private Dictionary<string, ImmutableArray<Symbol>> GetMembersByNameSlow()
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10073, 62503, 63266);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 62601, 63120) || true) && (_lazyMembersDictionary == null)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 62601, 63120);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 62669, 62715);

                    var
                    diagnostics = f_10073_62687_62714()
                    ;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 62733, 62785);

                    var
                    membersDictionary = f_10073_62757_62784(this, diagnostics)
                    ;

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 62805, 63066) || true) && (f_10073_62809_62889(ref _lazyMembersDictionary, membersDictionary, null) == null)
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 62805, 63066);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 62939, 62978);

                        f_10073_62939_62977(this, diagnostics);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 63000, 63047);

                        state.NotePartComplete(CompletionPart.Members);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 62805, 63066);
                    }
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 63086, 63105);

                    f_10073_63086_63104(
                                    diagnostics);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 62601, 63120);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 63136, 63211);

                state.SpinWaitComplete(CompletionPart.Members, default(CancellationToken));
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 63225, 63255);

                return _lazyMembersDictionary;
                DynAbs.Tracing.TraceSender.TraceExitMethod(10073, 62503, 63266);

                Microsoft.CodeAnalysis.DiagnosticBag
                f_10073_62687_62714()
                {
                    var return_v = DiagnosticBag.GetInstance();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 62687, 62714);
                    return return_v;
                }


                System.Collections.Generic.Dictionary<string, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>>
                f_10073_62757_62784(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                this_param, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.MakeAllMembers(diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 62757, 62784);
                    return return_v;
                }


                System.Collections.Generic.Dictionary<string, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>>?
                f_10073_62809_62889(ref System.Collections.Generic.Dictionary<string, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>>?
                location1, System.Collections.Generic.Dictionary<string, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>>
                value, System.Collections.Generic.Dictionary<string, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>>?
                comparand)
                {
                    var return_v = Interlocked.CompareExchange(ref location1, value, comparand);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 62809, 62889);
                    return return_v;
                }


                int
                f_10073_62939_62977(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                this_param, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    this_param.AddDeclarationDiagnostics(diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 62939, 62977);
                    return 0;
                }


                int
                f_10073_63086_63104(Microsoft.CodeAnalysis.DiagnosticBag
                this_param)
                {
                    this_param.Free();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 63086, 63104);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10073, 62503, 63266);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10073, 62503, 63266);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        internal override IEnumerable<Symbol> GetInstanceFieldsAndEvents()
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10073, 63278, 63531);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 63369, 63431);

                var
                membersAndInitializers = f_10073_63398_63430(this)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 63445, 63520);

                return membersAndInitializers.NonTypeMembers.Where(IsInstanceFieldOrEvent);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10073, 63278, 63531);

                Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol.MembersAndInitializers
                f_10073_63398_63430(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                this_param)
                {
                    var return_v = this_param.GetMembersAndInitializers();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 63398, 63430);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10073, 63278, 63531);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10073, 63278, 63531);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        protected void AfterMembersChecks(DiagnosticBag diagnostics)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10073, 63543, 67077);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 63628, 63776) || true) && (f_10073_63632_63643())
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 63628, 63776);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 63677, 63761);

                    f_10073_63677_63760(f_10073_63699_63731(this).NonTypeMembers, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 63628, 63776);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 63792, 63838);

                f_10073_63792_63837(this, diagnostics);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 63852, 63890);

                f_10073_63852_63889(this, diagnostics);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 63904, 63940);

                f_10073_63904_63939(this, diagnostics);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 63954, 63992);

                f_10073_63954_63991(this, diagnostics);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 64006, 64051);

                f_10073_64006_64050(this, diagnostics);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 64065, 64105);

                f_10073_64065_64104(this, diagnostics);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 64121, 64155);

                bool
                unused = f_10073_64135_64154()
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 64171, 64213);

                f_10073_64171_64212(this, diagnostics);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 64227, 64271);

                f_10073_64227_64270(this, diagnostics);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 64285, 64325);

                f_10073_64285_64324(this, diagnostics);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 64341, 64369);

                var
                location = f_10073_64356_64365()[0]
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 64383, 64422);

                var
                compilation = f_10073_64401_64421()
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 64438, 64602) || true) && (f_10073_64442_64460(this))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 64438, 64602);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 64494, 64587);

                    f_10073_64494_64586(compilation, diagnostics, location, modifyCompilation: true);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 64438, 64602);
                }

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 64618, 64778) || true) && (f_10073_64622_64637(this))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 64618, 64778);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 64671, 64763);

                    f_10073_64671_64762(compilation, diagnostics, location, modifyCompilation: true);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 64618, 64778);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 64794, 64838);

                var
                baseType = f_10073_64809_64837()
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 64852, 64891);

                var
                interfaces = f_10073_64869_64890(this)
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 65069, 65293) || true) && (f_10073_65073_65149(t => t.ContainsNativeInteger(), baseType, interfaces))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 65069, 65293);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 65183, 65278);

                    f_10073_65183_65277(compilation, diagnostics, location, modifyCompilation: true);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 65069, 65293);
                }

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 65309, 65859) || true) && (f_10073_65313_65359(compilation, this))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 65309, 65859);

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 65393, 65592) || true) && (f_10073_65397_65434(this, out _))
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 65393, 65592);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 65476, 65573);

                        f_10073_65476_65572(compilation, diagnostics, location, modifyCompilation: true);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 65393, 65592);
                    }

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 65612, 65844) || true) && (f_10073_65616_65693(t => t.NeedsNullableAttribute(), baseType, interfaces))
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 65612, 65844);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 65735, 65825);

                        f_10073_65735_65824(compilation, diagnostics, location, modifyCompilation: true);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 65612, 65844);
                    }
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 65309, 65859);
                }

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 65875, 66294) || true) && (interfaces.Any(t => needsTupleElementNamesAttribute(t)))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 65875, 66294);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 66187, 66279);

                    f_10073_66187_66278(compilation, location, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 65875, 66294);
                }

                bool hasBaseTypeOrInterface(Func<NamedTypeSymbol, bool> predicate, NamedTypeSymbol baseTy, ImmutableArray<NamedTypeSymbol> inter)
                {
                    try
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterMethod(10073, 66333, 66608);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 66495, 66593);

                        return ((object)baseTy != null && (DynAbs.Tracing.TraceSender.Expression_True(10073, 66503, 66546) && f_10073_66529_66546(predicate, baseTy))) || (DynAbs.Tracing.TraceSender.Expression_False(10073, 66502, 66592) || inter.Any(predicate));
                        DynAbs.Tracing.TraceSender.TraceExitMethod(10073, 66333, 66608);

                        bool
                        f_10073_66529_66546(System.Func<Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol, bool>
                        this_param, Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                        arg)
                        {
                            var return_v = this_param.Invoke(arg);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 66529, 66546);
                            return return_v;
                        }

                    }
                    catch
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10073, 66333, 66608);
                        throw;
                    }
                    finally
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10073, 66333, 66608);
                    }
                    throw new System.Exception("Slicer error: unreachable code");
                }

                static bool needsTupleElementNamesAttribute(TypeSymbol type)
                {
                    try
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterStaticMethod(10073, 66624, 67066);

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 66717, 66807) || true) && (type is null)
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 66717, 66807);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 66775, 66788);

                            return false;
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 66717, 66807);
                        }
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 66827, 67005);

                        var
                        resultType = f_10073_66844_67004(type, predicate: (t, a, b) => !t.TupleElementNames.IsDefaultOrEmpty && !t.IsErrorType(), null)
                        ;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 67023, 67051);

                        return resultType is object;
                        DynAbs.Tracing.TraceSender.TraceExitStaticMethod(10073, 66624, 67066);

                        Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol?
                        f_10073_66844_67004(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                        type, System.Func<Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol, object, bool, bool>
                        predicate, object?
                        arg)
                        {
                            var return_v = type.VisitType<object?>(predicate: predicate, arg: arg);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 66844, 67004);
                            return return_v;
                        }

                    }
                    catch
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10073, 66624, 67066);
                        throw;
                    }
                    finally
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10073, 66624, 67066);
                    }
                    throw new System.Exception("Slicer error: unreachable code");
                }
                DynAbs.Tracing.TraceSender.TraceExitMethod(10073, 63543, 67077);

                bool
                f_10073_63632_63643()
                {
                    var return_v = IsInterface;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 63632, 63643);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol.MembersAndInitializers
                f_10073_63699_63731(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                this_param)
                {
                    var return_v = this_param.GetMembersAndInitializers();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 63699, 63731);
                    return return_v;
                }


                int
                f_10073_63677_63760(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>
                nonTypeMembers, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    CheckInterfaceMembers(nonTypeMembers, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 63677, 63760);
                    return 0;
                }


                int
                f_10073_63792_63837(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                this_param, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    this_param.CheckMemberNamesDistinctFromType(diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 63792, 63837);
                    return 0;
                }


                int
                f_10073_63852_63889(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                this_param, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    this_param.CheckMemberNameConflicts(diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 63852, 63889);
                    return 0;
                }


                int
                f_10073_63904_63939(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                this_param, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    this_param.CheckRecordMemberNames(diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 63904, 63939);
                    return 0;
                }


                int
                f_10073_63954_63991(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                this_param, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    this_param.CheckSpecialMemberErrors(diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 63954, 63991);
                    return 0;
                }


                int
                f_10073_64006_64050(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                this_param, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    this_param.CheckTypeParameterNameConflicts(diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 64006, 64050);
                    return 0;
                }


                int
                f_10073_64065_64104(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                this_param, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    this_param.CheckAccessorNameConflicts(diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 64065, 64104);
                    return 0;
                }


                bool
                f_10073_64135_64154()
                {
                    var return_v = KnownCircularStruct;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 64135, 64154);
                    return return_v;
                }


                int
                f_10073_64171_64212(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                this_param, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    this_param.CheckSequentialOnPartialType(diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 64171, 64212);
                    return 0;
                }


                int
                f_10073_64227_64270(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                this_param, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    this_param.CheckForProtectedInStaticClass(diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 64227, 64270);
                    return 0;
                }


                int
                f_10073_64285_64324(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                this_param, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    this_param.CheckForUnmatchedOperators(diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 64285, 64324);
                    return 0;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Location>
                f_10073_64356_64365()
                {
                    var return_v = Locations;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 64356, 64365);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                f_10073_64401_64421()
                {
                    var return_v = DeclaringCompilation;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 64401, 64421);
                    return return_v;
                }


                bool
                f_10073_64442_64460(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                this_param)
                {
                    var return_v = this_param.IsRefLikeType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 64442, 64460);
                    return return_v;
                }


                int
                f_10073_64494_64586(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.Location
                location, bool
                modifyCompilation)
                {
                    this_param.EnsureIsByRefLikeAttributeExists(diagnostics, location, modifyCompilation: modifyCompilation);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 64494, 64586);
                    return 0;
                }


                bool
                f_10073_64622_64637(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                this_param)
                {
                    var return_v = this_param.IsReadOnly;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 64622, 64637);
                    return return_v;
                }


                int
                f_10073_64671_64762(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.Location
                location, bool
                modifyCompilation)
                {
                    this_param.EnsureIsReadOnlyAttributeExists(diagnostics, location, modifyCompilation: modifyCompilation);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 64671, 64762);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                f_10073_64809_64837()
                {
                    var return_v = BaseTypeNoUseSiteDiagnostics;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 64809, 64837);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol>
                f_10073_64869_64890(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                this_param)
                {
                    var return_v = this_param.GetInterfacesToEmit();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 64869, 64890);
                    return return_v;
                }


                bool
                f_10073_65073_65149(System.Func<Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol, bool>
                predicate, Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                baseTy, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol>
                inter)
                {
                    var return_v = hasBaseTypeOrInterface(predicate, baseTy, inter);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 65073, 65149);
                    return return_v;
                }


                int
                f_10073_65183_65277(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.Location
                location, bool
                modifyCompilation)
                {
                    this_param.EnsureNativeIntegerAttributeExists(diagnostics, location, modifyCompilation: modifyCompilation);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 65183, 65277);
                    return 0;
                }


                bool
                f_10073_65313_65359(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                symbol)
                {
                    var return_v = this_param.ShouldEmitNullableAttributes((Microsoft.CodeAnalysis.CSharp.Symbol)symbol);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 65313, 65359);
                    return return_v;
                }


                bool
                f_10073_65397_65434(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                this_param, out byte
                value)
                {
                    var return_v = this_param.ShouldEmitNullableContextValue(out value);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 65397, 65434);
                    return return_v;
                }


                int
                f_10073_65476_65572(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.Location
                location, bool
                modifyCompilation)
                {
                    this_param.EnsureNullableContextAttributeExists(diagnostics, location, modifyCompilation: modifyCompilation);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 65476, 65572);
                    return 0;
                }


                bool
                f_10073_65616_65693(System.Func<Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol, bool>
                predicate, Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                baseTy, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol>
                inter)
                {
                    var return_v = hasBaseTypeOrInterface(predicate, baseTy, inter);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 65616, 65693);
                    return return_v;
                }


                int
                f_10073_65735_65824(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.Location
                location, bool
                modifyCompilation)
                {
                    this_param.EnsureNullableAttributeExists(diagnostics, location, modifyCompilation: modifyCompilation);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 65735, 65824);
                    return 0;
                }


                int
                f_10073_66187_66278(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                compilation, Microsoft.CodeAnalysis.Location
                location, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    Binder.ReportMissingTupleElementNamesAttributesIfNeeded(compilation, location, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 66187, 66278);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10073, 63543, 67077);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10073, 63543, 67077);
            }
        }

        private void CheckMemberNamesDistinctFromType(DiagnosticBag diagnostics)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10073, 67089, 67364);
                try
                {
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 67186, 67353);
                    foreach (var member in f_10073_67209_67251_I(f_10073_67209_67236(this).NonTypeMembers))
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 67186, 67353);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 67285, 67338);

                        f_10073_67285_67337(this, member, diagnostics);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 67186, 67353);
                    }
                }
                catch (System.Exception)
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoopByException(10073, 1, 168);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoop(10073, 1, 168);
                }
                DynAbs.Tracing.TraceSender.TraceExitMethod(10073, 67089, 67364);

                Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol.MembersAndInitializers
                f_10073_67209_67236(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                this_param)
                {
                    var return_v = this_param.GetMembersAndInitializers();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 67209, 67236);
                    return return_v;
                }


                int
                f_10073_67285_67337(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                this_param, Microsoft.CodeAnalysis.CSharp.Symbol
                member, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    this_param.CheckMemberNameDistinctFromType(member, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 67285, 67337);
                    return 0;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>
                f_10073_67209_67251_I(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 67209, 67251);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10073, 67089, 67364);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10073, 67089, 67364);
            }
        }

        private void CheckRecordMemberNames(DiagnosticBag diagnostics)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10073, 67376, 67759);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 67463, 67565) || true) && (f_10073_67467_67483(declaration) != DeclarationKind.Record)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 67463, 67565);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 67543, 67550);

                    return;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 67463, 67565);
                }
                try
                {
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 67581, 67748);
                    foreach (var member in f_10073_67604_67623_I(f_10073_67604_67623(this, "Clone")))
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 67581, 67748);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 67657, 67733);

                        f_10073_67657_67732(diagnostics, ErrorCode.ERR_CloneDisallowedInRecord, f_10073_67712_67728(member)[0]);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 67581, 67748);
                    }
                }
                catch (System.Exception)
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoopByException(10073, 1, 168);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoop(10073, 1, 168);
                }
                DynAbs.Tracing.TraceSender.TraceExitMethod(10073, 67376, 67759);

                Microsoft.CodeAnalysis.CSharp.DeclarationKind
                f_10073_67467_67483(Microsoft.CodeAnalysis.CSharp.MergedTypeDeclaration
                this_param)
                {
                    var return_v = this_param.Kind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 67467, 67483);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>
                f_10073_67604_67623(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                this_param, string
                name)
                {
                    var return_v = this_param.GetMembers(name);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 67604, 67623);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Location>
                f_10073_67712_67728(Microsoft.CodeAnalysis.CSharp.Symbol
                this_param)
                {
                    var return_v = this_param.Locations;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 67712, 67728);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo
                f_10073_67657_67732(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, Microsoft.CodeAnalysis.Location
                location)
                {
                    var return_v = diagnostics.Add(code, location);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 67657, 67732);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>
                f_10073_67604_67623_I(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 67604, 67623);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10073, 67376, 67759);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10073, 67376, 67759);
            }
        }

        private void CheckMemberNameConflicts(DiagnosticBag diagnostics)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10073, 67771, 78181);
                Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberMethodSymbol previousMethod = default(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberMethodSymbol);
                Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberMethodSymbol previousConversion = default(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberMethodSymbol);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 67860, 67938);

                Dictionary<string, ImmutableArray<Symbol>>
                membersByName = f_10073_67919_67937(this)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 68023, 68077);

                f_10073_68023_68076(this, diagnostics, membersByName);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 68170, 68311);

                var
                methodsBySignature = f_10073_68195_68310(MemberSignatureComparer.DuplicateSourceComparer)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 68325, 68468);

                var
                conversionsAsMethods = f_10073_68352_68467(MemberSignatureComparer.DuplicateSourceComparer)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 68482, 68598);

                var
                conversionsAsConversions = f_10073_68513_68597(f_10073_68560_68596())
                ;
                try
                {
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 70870, 78170);
                    foreach (var pair in f_10073_70891_70904_I(membersByName))
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 70870, 78170);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 70938, 70958);

                        var
                        name = pair.Key
                        ;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 70976, 71032);

                        Symbol?
                        lastSym = f_10073_70994_71014(this, name).FirstOrDefault()
                        ;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 71050, 71077);

                        f_10073_71050_71076(methodsBySignature);
                        try
                        {
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 71234, 78155);
                            foreach (var symbol in f_10073_71257_71267_I(pair.Value))
                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 71234, 78155);

                                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 71309, 71525) || true) && (f_10073_71313_71324(symbol) == SymbolKind.NamedType || (DynAbs.Tracing.TraceSender.Expression_False(10073, 71313, 71396) || f_10073_71377_71396(symbol)) || (DynAbs.Tracing.TraceSender.Expression_False(10073, 71313, 71443) || f_10073_71425_71443(symbol)))
                                )

                                {
                                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 71309, 71525);
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 71493, 71502);

                                    continue;
                                    DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 71309, 71525);
                                }

                                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 73883, 74927) || true) && (lastSym is object)
                                )

                                {
                                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 73883, 74927);

                                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 73954, 74789) || true) && (f_10073_73958_73969(symbol) != SymbolKind.Method || (DynAbs.Tracing.TraceSender.Expression_False(10073, 73958, 74027) || f_10073_73994_74006(lastSym) != SymbolKind.Method))
                                    )

                                    {
                                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 73954, 74789);

                                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 74085, 74579) || true) && (f_10073_74089_74100(symbol) != SymbolKind.Field || (DynAbs.Tracing.TraceSender.Expression_False(10073, 74089, 74152) || f_10073_74124_74152_M(!symbol.IsImplicitlyDeclared)))
                                        )

                                        {
                                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 74085, 74579);

                                            if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 74309, 74548) || true) && (f_10073_74313_74322().Length == 1 || (DynAbs.Tracing.TraceSender.Expression_False(10073, 74313, 74347) || f_10073_74338_74347()))
                                            )

                                            {
                                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 74309, 74548);
                                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 74421, 74513);

                                                f_10073_74421_74512(diagnostics, ErrorCode.ERR_DuplicateNameInClass, f_10073_74473_74489(symbol)[0], this, f_10073_74500_74511(symbol));
                                                DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 74309, 74548);
                                            }
                                            DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 74085, 74579);
                                        }

                                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 74611, 74762) || true) && (f_10073_74615_74627(lastSym) == SymbolKind.Method)
                                        )

                                        {
                                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 74611, 74762);
                                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 74714, 74731);

                                            lastSym = symbol;
                                            DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 74611, 74762);
                                        }
                                        DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 73954, 74789);
                                    }
                                    DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 73883, 74927);
                                }

                                else

                                {
                                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 73883, 74927);
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 74887, 74904);

                                    lastSym = symbol;
                                    DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 73883, 74927);
                                }
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 75106, 75167);

                                var
                                conversion = symbol as SourceUserDefinedConversionSymbol
                                ;
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 75189, 75237);

                                var
                                method = symbol as SourceMemberMethodSymbol
                                ;

                                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 75259, 78136) || true) && (!(conversion is null))
                                )

                                {
                                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 75259, 78136);

                                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 75476, 76266) || true) && (!f_10073_75481_75521(conversionsAsConversions, conversion))
                                    )

                                    {
                                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 75476, 76266);
                                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 75665, 75754);

                                        f_10073_75665_75753(                            // CS0557: Duplicate user-defined conversion in type 'C'
                                                                    diagnostics, ErrorCode.ERR_DuplicateConversionInClass, f_10073_75723_75743(conversion)[0], this);
                                        DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 75476, 76266);
                                    }

                                    else

                                    {
                                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 75476, 76266);

                                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 76044, 76239) || true) && (!f_10073_76049_76093(conversionsAsMethods, conversion))
                                        )

                                        {
                                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 76044, 76239);
                                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 76159, 76208);

                                            f_10073_76159_76207(conversionsAsMethods, conversion, conversion);
                                            DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 76044, 76239);
                                        }
                                        DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 75476, 76266);
                                    }

                                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 76443, 76670) || true) && (f_10073_76447_76513(methodsBySignature, conversion, out previousMethod))
                                    )

                                    {
                                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 76443, 76670);
                                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 76571, 76643);

                                        f_10073_76571_76642(this, diagnostics, conversion, previousMethod);
                                        DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 76443, 76670);
                                    }
                                    DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 75259, 78136);
                                }

                                else
                                {
                                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 75259, 78136);

                                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 76882, 78136) || true) && (!(method is null))
                                    )

                                    {
                                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 76882, 78136);

                                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 77087, 77316) || true) && (f_10073_77091_77159(conversionsAsMethods, method, out previousConversion))
                                        )

                                        {
                                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 77087, 77316);
                                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 77217, 77289);

                                            f_10073_77217_77288(this, diagnostics, method, previousConversion);
                                            DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 77087, 77316);
                                        }

                                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 77582, 78113) || true) && (f_10073_77586_77648(methodsBySignature, method, out previousMethod))
                                        )

                                        {
                                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 77582, 78113);
                                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 77706, 77774);

                                            f_10073_77706_77773(this, diagnostics, method, previousMethod);
                                            DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 77582, 78113);
                                        }

                                        else

                                        {
                                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 77582, 78113);
                                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 78047, 78086);

                                            f_10073_78047_78085(                            // We haven't seen this method before. Make a note of it in case
                                                                                            // we see a colliding method later.
                                                                        methodsBySignature, method, method);
                                            DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 77582, 78113);
                                        }
                                        DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 76882, 78136);
                                    }
                                    DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 75259, 78136);
                                }
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 71234, 78155);
                            }
                        }
                        catch (System.Exception)
                        {
                            DynAbs.Tracing.TraceSender.TraceExitLoopByException(10073, 1, 6922);
                            throw;
                        }
                        finally
                        {
                            DynAbs.Tracing.TraceSender.TraceExitLoop(10073, 1, 6922);
                        }
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 70870, 78170);
                    }
                }
                catch (System.Exception)
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoopByException(10073, 1, 7301);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoop(10073, 1, 7301);
                }
                DynAbs.Tracing.TraceSender.TraceExitMethod(10073, 67771, 78181);

                System.Collections.Generic.Dictionary<string, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>>
                f_10073_67919_67937(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                this_param)
                {
                    var return_v = this_param.GetMembersByName();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 67919, 67937);
                    return return_v;
                }


                int
                f_10073_68023_68076(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                this_param, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, System.Collections.Generic.Dictionary<string, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>>
                membersByName)
                {
                    this_param.CheckIndexerNameConflicts(diagnostics, membersByName);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 68023, 68076);
                    return 0;
                }


                System.Collections.Generic.Dictionary<Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberMethodSymbol, Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberMethodSymbol>
                f_10073_68195_68310(Microsoft.CodeAnalysis.CSharp.Symbols.MemberSignatureComparer
                comparer)
                {
                    var return_v = new System.Collections.Generic.Dictionary<Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberMethodSymbol, Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberMethodSymbol>((System.Collections.Generic.IEqualityComparer<Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberMethodSymbol>)comparer);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 68195, 68310);
                    return return_v;
                }


                System.Collections.Generic.Dictionary<Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberMethodSymbol, Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberMethodSymbol>
                f_10073_68352_68467(Microsoft.CodeAnalysis.CSharp.Symbols.MemberSignatureComparer
                comparer)
                {
                    var return_v = new System.Collections.Generic.Dictionary<Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberMethodSymbol, Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberMethodSymbol>((System.Collections.Generic.IEqualityComparer<Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberMethodSymbol>)comparer);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 68352, 68467);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.ConversionSignatureComparer
                f_10073_68560_68596()
                {
                    var return_v = ConversionSignatureComparer.Comparer;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 68560, 68596);
                    return return_v;
                }


                System.Collections.Generic.HashSet<Microsoft.CodeAnalysis.CSharp.Symbols.SourceUserDefinedConversionSymbol>
                f_10073_68513_68597(Microsoft.CodeAnalysis.CSharp.Symbols.ConversionSignatureComparer
                comparer)
                {
                    var return_v = new System.Collections.Generic.HashSet<Microsoft.CodeAnalysis.CSharp.Symbols.SourceUserDefinedConversionSymbol>((System.Collections.Generic.IEqualityComparer<Microsoft.CodeAnalysis.CSharp.Symbols.SourceUserDefinedConversionSymbol>)comparer);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 68513, 68597);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol>
                f_10073_70994_71014(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                this_param, string
                name)
                {
                    var return_v = this_param.GetTypeMembers(name);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 70994, 71014);
                    return return_v;
                }


                int
                f_10073_71050_71076(System.Collections.Generic.Dictionary<Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberMethodSymbol, Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberMethodSymbol>
                this_param)
                {
                    this_param.Clear();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 71050, 71076);
                    return 0;
                }


                Microsoft.CodeAnalysis.SymbolKind
                f_10073_71313_71324(Microsoft.CodeAnalysis.CSharp.Symbol
                this_param)
                {
                    var return_v = this_param.Kind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 71313, 71324);
                    return return_v;
                }


                bool
                f_10073_71377_71396(Microsoft.CodeAnalysis.CSharp.Symbol
                symbol)
                {
                    var return_v = symbol.IsAccessor();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 71377, 71396);
                    return return_v;
                }


                bool
                f_10073_71425_71443(Microsoft.CodeAnalysis.CSharp.Symbol
                symbol)
                {
                    var return_v = symbol.IsIndexer();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 71425, 71443);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SymbolKind
                f_10073_73958_73969(Microsoft.CodeAnalysis.CSharp.Symbol
                this_param)
                {
                    var return_v = this_param.Kind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 73958, 73969);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SymbolKind
                f_10073_73994_74006(Microsoft.CodeAnalysis.CSharp.Symbol
                this_param)
                {
                    var return_v = this_param.Kind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 73994, 74006);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SymbolKind
                f_10073_74089_74100(Microsoft.CodeAnalysis.CSharp.Symbol
                this_param)
                {
                    var return_v = this_param.Kind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 74089, 74100);
                    return return_v;
                }


                bool
                f_10073_74124_74152_M(bool
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 74124, 74152);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Location>
                f_10073_74313_74322()
                {
                    var return_v = Locations;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 74313, 74322);
                    return return_v;
                }


                bool
                f_10073_74338_74347()
                {
                    var return_v = IsPartial;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 74338, 74347);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Location>
                f_10073_74473_74489(Microsoft.CodeAnalysis.CSharp.Symbol
                this_param)
                {
                    var return_v = this_param.Locations;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 74473, 74489);
                    return return_v;
                }


                string
                f_10073_74500_74511(Microsoft.CodeAnalysis.CSharp.Symbol
                this_param)
                {
                    var return_v = this_param.Name;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 74500, 74511);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo
                f_10073_74421_74512(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, Microsoft.CodeAnalysis.Location
                location, params object[]
                args)
                {
                    var return_v = diagnostics.Add(code, location, args);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 74421, 74512);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SymbolKind
                f_10073_74615_74627(Microsoft.CodeAnalysis.CSharp.Symbol
                this_param)
                {
                    var return_v = this_param.Kind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 74615, 74627);
                    return return_v;
                }


                bool
                f_10073_75481_75521(System.Collections.Generic.HashSet<Microsoft.CodeAnalysis.CSharp.Symbols.SourceUserDefinedConversionSymbol>
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.SourceUserDefinedConversionSymbol
                item)
                {
                    var return_v = this_param.Add(item);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 75481, 75521);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Location>
                f_10073_75723_75743(Microsoft.CodeAnalysis.CSharp.Symbols.SourceUserDefinedConversionSymbol
                this_param)
                {
                    var return_v = this_param.Locations;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 75723, 75743);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo
                f_10073_75665_75753(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, Microsoft.CodeAnalysis.Location
                location, params object[]
                args)
                {
                    var return_v = diagnostics.Add(code, location, args);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 75665, 75753);
                    return return_v;
                }


                bool
                f_10073_76049_76093(System.Collections.Generic.Dictionary<Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberMethodSymbol, Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberMethodSymbol>
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.SourceUserDefinedConversionSymbol
                key)
                {
                    var return_v = this_param.ContainsKey((Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberMethodSymbol)key);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 76049, 76093);
                    return return_v;
                }


                int
                f_10073_76159_76207(System.Collections.Generic.Dictionary<Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberMethodSymbol, Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberMethodSymbol>
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.SourceUserDefinedConversionSymbol
                key, Microsoft.CodeAnalysis.CSharp.Symbols.SourceUserDefinedConversionSymbol
                value)
                {
                    this_param.Add((Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberMethodSymbol)key, (Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberMethodSymbol)value);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 76159, 76207);
                    return 0;
                }


                bool
                f_10073_76447_76513(System.Collections.Generic.Dictionary<Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberMethodSymbol, Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberMethodSymbol>
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.SourceUserDefinedConversionSymbol
                key, out Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberMethodSymbol
                value)
                {
                    var return_v = this_param.TryGetValue((Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberMethodSymbol)key, out value);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 76447, 76513);
                    return return_v;
                }


                int
                f_10073_76571_76642(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                this_param, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.Symbols.SourceUserDefinedConversionSymbol
                method1, Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberMethodSymbol
                method2)
                {
                    this_param.ReportMethodSignatureCollision(diagnostics, (Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberMethodSymbol)method1, method2);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 76571, 76642);
                    return 0;
                }


                bool
                f_10073_77091_77159(System.Collections.Generic.Dictionary<Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberMethodSymbol, Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberMethodSymbol>
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberMethodSymbol
                key, out Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberMethodSymbol
                value)
                {
                    var return_v = this_param.TryGetValue(key, out value);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 77091, 77159);
                    return return_v;
                }


                int
                f_10073_77217_77288(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                this_param, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberMethodSymbol
                method1, Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberMethodSymbol
                method2)
                {
                    this_param.ReportMethodSignatureCollision(diagnostics, method1, method2);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 77217, 77288);
                    return 0;
                }


                bool
                f_10073_77586_77648(System.Collections.Generic.Dictionary<Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberMethodSymbol, Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberMethodSymbol>
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberMethodSymbol
                key, out Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberMethodSymbol
                value)
                {
                    var return_v = this_param.TryGetValue(key, out value);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 77586, 77648);
                    return return_v;
                }


                int
                f_10073_77706_77773(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                this_param, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberMethodSymbol
                method1, Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberMethodSymbol
                method2)
                {
                    this_param.ReportMethodSignatureCollision(diagnostics, method1, method2);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 77706, 77773);
                    return 0;
                }


                int
                f_10073_78047_78085(System.Collections.Generic.Dictionary<Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberMethodSymbol, Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberMethodSymbol>
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberMethodSymbol
                key, Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberMethodSymbol
                value)
                {
                    this_param.Add(key, value);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 78047, 78085);
                    return 0;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>
                f_10073_71257_71267_I(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 71257, 71267);
                    return return_v;
                }


                System.Collections.Generic.Dictionary<string, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>>
                f_10073_70891_70904_I(System.Collections.Generic.Dictionary<string, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>>
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 70891, 70904);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10073, 67771, 78181);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10073, 67771, 78181);
            }
        }

        private void ReportMethodSignatureCollision(DiagnosticBag diagnostics, SourceMemberMethodSymbol method1, SourceMemberMethodSymbol method2)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10073, 78367, 81100);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 78530, 79199);

                switch (method1, method2)
                {

                    case (SourceOrdinaryMethodSymbol { IsPartialDefinition: true }, SourceOrdinaryMethodSymbol { IsPartialImplementation: true }):
                    case (SourceOrdinaryMethodSymbol { IsPartialImplementation: true }, SourceOrdinaryMethodSymbol { IsPartialDefinition: true }):
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 78530, 79199);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 79032, 79039);

                        return;
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 78530, 79199);

                    case (SynthesizedSimpleProgramEntryPointSymbol { }, SynthesizedSimpleProgramEntryPointSymbol { }):
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 78530, 79199);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 79177, 79184);

                        return;
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 78530, 79199);
                }

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 79459, 79679) || true) && (f_10073_79463_79481(method1) == MethodKind.Constructor && (DynAbs.Tracing.TraceSender.Expression_True(10073, 79463, 79623) && ((ConstructorDeclarationSyntax)f_10073_79559_79588(f_10073_79559_79576(method1))).Identifier.ValueText != f_10073_79614_79623(this)))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 79459, 79679);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 79657, 79664);

                    return;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 79459, 79679);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 79695, 79758);

                f_10073_79695_79757(f_10073_79708_79730(method1) == f_10073_79734_79756(method2));
                try
                {
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 79783, 79788);

                    for (int
        i = 0
        ; (DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 79774, 80546) || true) && (i < f_10073_79794_79816(method1))
        ; DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 79818, 79821)
        , i++, DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 79774, 80546))

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 79774, 80546);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 79855, 79900);

                        var
                        refKind1 = f_10073_79870_79899(f_10073_79870_79888(method1)[i])
                        ;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 79918, 79963);

                        var
                        refKind2 = f_10073_79933_79962(f_10073_79933_79951(method2)[i])
                        ;

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 79983, 80531) || true) && (refKind1 != refKind2)
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 79983, 80531);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 80168, 80287);

                            var
                            methodKind = (DynAbs.Tracing.TraceSender.Conditional_F1(10073, 80185, 80229) || ((f_10073_80185_80203(method1) == MethodKind.Constructor && DynAbs.Tracing.TraceSender.Conditional_F2(10073, 80232, 80260)) || DynAbs.Tracing.TraceSender.Conditional_F3(10073, 80263, 80286))) ? MessageID.IDS_SK_CONSTRUCTOR : MessageID.IDS_SK_METHOD
                            ;
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 80309, 80481);

                            f_10073_80309_80480(diagnostics, ErrorCode.ERR_OverloadRefKind, f_10073_80356_80373(method1)[0], this, f_10073_80384_80405(methodKind), f_10073_80407_80442(refKind1), f_10073_80444_80479(refKind2));
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 80505, 80512);

                            return;
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 79983, 80531);
                        }
                    }
                }
                catch (System.Exception)
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoopByException(10073, 1, 773);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoop(10073, 1, 773);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 80670, 80887);

                var
                methodName = (DynAbs.Tracing.TraceSender.Conditional_F1(10073, 80687, 80779) || (((f_10073_80688_80706(method1) == MethodKind.Destructor && (DynAbs.Tracing.TraceSender.Expression_True(10073, 80688, 80778) && f_10073_80735_80753(method2) == MethodKind.Destructor)) && DynAbs.Tracing.TraceSender.Conditional_F2(10073, 80799, 80814)) || DynAbs.Tracing.TraceSender.Conditional_F3(10073, 80834, 80886))) ? "~" + f_10073_80805_80814(this) : ((DynAbs.Tracing.TraceSender.Conditional_F1(10073, 80835, 80858) || ((f_10073_80835_80858(method1) && DynAbs.Tracing.TraceSender.Conditional_F2(10073, 80861, 80870)) || DynAbs.Tracing.TraceSender.Conditional_F3(10073, 80873, 80885))) ? f_10073_80861_80870(this) : f_10073_80873_80885(method1))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 80998, 81089);

                f_10073_80998_81088(
                            // Type '{1}' already defines a member called '{0}' with the same parameter types
                            diagnostics, ErrorCode.ERR_MemberAlreadyExists, f_10073_81049_81066(method1)[0], methodName, this);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10073, 78367, 81100);

                Microsoft.CodeAnalysis.MethodKind
                f_10073_79463_79481(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberMethodSymbol
                this_param)
                {
                    var return_v = this_param.MethodKind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 79463, 79481);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SyntaxReference
                f_10073_79559_79576(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberMethodSymbol
                this_param)
                {
                    var return_v = this_param.SyntaxRef;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 79559, 79576);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SyntaxNode
                f_10073_79559_79588(Microsoft.CodeAnalysis.SyntaxReference
                this_param)
                {
                    var return_v = this_param.GetSyntax();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 79559, 79588);
                    return return_v;
                }


                string
                f_10073_79614_79623(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                this_param)
                {
                    var return_v = this_param.Name;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 79614, 79623);
                    return return_v;
                }


                int
                f_10073_79708_79730(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberMethodSymbol
                this_param)
                {
                    var return_v = this_param.ParameterCount;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 79708, 79730);
                    return return_v;
                }


                int
                f_10073_79734_79756(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberMethodSymbol
                this_param)
                {
                    var return_v = this_param.ParameterCount;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 79734, 79756);
                    return return_v;
                }


                int
                f_10073_79695_79757(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 79695, 79757);
                    return 0;
                }


                int
                f_10073_79794_79816(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberMethodSymbol
                this_param)
                {
                    var return_v = this_param.ParameterCount;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 79794, 79816);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol>
                f_10073_79870_79888(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberMethodSymbol
                this_param)
                {
                    var return_v = this_param.Parameters;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 79870, 79888);
                    return return_v;
                }


                Microsoft.CodeAnalysis.RefKind
                f_10073_79870_79899(Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol
                this_param)
                {
                    var return_v = this_param.RefKind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 79870, 79899);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol>
                f_10073_79933_79951(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberMethodSymbol
                this_param)
                {
                    var return_v = this_param.Parameters;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 79933, 79951);
                    return return_v;
                }


                Microsoft.CodeAnalysis.RefKind
                f_10073_79933_79962(Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol
                this_param)
                {
                    var return_v = this_param.RefKind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 79933, 79962);
                    return return_v;
                }


                Microsoft.CodeAnalysis.MethodKind
                f_10073_80185_80203(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberMethodSymbol
                this_param)
                {
                    var return_v = this_param.MethodKind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 80185, 80203);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Location>
                f_10073_80356_80373(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberMethodSymbol
                this_param)
                {
                    var return_v = this_param.Locations;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 80356, 80373);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.LocalizableErrorArgument
                f_10073_80384_80405(Microsoft.CodeAnalysis.CSharp.MessageID
                id)
                {
                    var return_v = id.Localize();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 80384, 80405);
                    return return_v;
                }


                string
                f_10073_80407_80442(Microsoft.CodeAnalysis.RefKind
                kind)
                {
                    var return_v = kind.ToParameterDisplayString();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 80407, 80442);
                    return return_v;
                }


                string
                f_10073_80444_80479(Microsoft.CodeAnalysis.RefKind
                kind)
                {
                    var return_v = kind.ToParameterDisplayString();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 80444, 80479);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo
                f_10073_80309_80480(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, Microsoft.CodeAnalysis.Location
                location, params object[]
                args)
                {
                    var return_v = diagnostics.Add(code, location, args);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 80309, 80480);
                    return return_v;
                }


                Microsoft.CodeAnalysis.MethodKind
                f_10073_80688_80706(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberMethodSymbol
                this_param)
                {
                    var return_v = this_param.MethodKind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 80688, 80706);
                    return return_v;
                }


                Microsoft.CodeAnalysis.MethodKind
                f_10073_80735_80753(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberMethodSymbol
                this_param)
                {
                    var return_v = this_param.MethodKind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 80735, 80753);
                    return return_v;
                }


                string
                f_10073_80805_80814(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                this_param)
                {
                    var return_v = this_param.Name;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 80805, 80814);
                    return return_v;
                }


                bool
                f_10073_80835_80858(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberMethodSymbol
                method)
                {
                    var return_v = method.IsConstructor();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 80835, 80858);
                    return return_v;
                }


                string
                f_10073_80861_80870(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                this_param)
                {
                    var return_v = this_param.Name;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 80861, 80870);
                    return return_v;
                }


                string
                f_10073_80873_80885(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberMethodSymbol
                this_param)
                {
                    var return_v = this_param.Name;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 80873, 80885);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Location>
                f_10073_81049_81066(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberMethodSymbol
                this_param)
                {
                    var return_v = this_param.Locations;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 81049, 81066);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo
                f_10073_80998_81088(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, Microsoft.CodeAnalysis.Location
                location, params object[]
                args)
                {
                    var return_v = diagnostics.Add(code, location, args);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 80998, 81088);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10073, 78367, 81100);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10073, 78367, 81100);
            }
        }

        private void CheckIndexerNameConflicts(DiagnosticBag diagnostics, Dictionary<string, ImmutableArray<Symbol>> membersByName)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10073, 81112, 83426);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 81260, 81309);

                PooledHashSet<string>?
                typeParameterNames = null
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 81323, 81634) || true) && (f_10073_81327_81337(this) > 0)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 81323, 81634);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 81375, 81432);

                    typeParameterNames = f_10073_81396_81431();
                    try
                    {
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 81450, 81619);
                        foreach (TypeParameterSymbol typeParameter in f_10073_81496_81515_I(f_10073_81496_81515(this)))
                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 81450, 81619);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 81557, 81600);

                            f_10073_81557_81599(typeParameterNames, f_10073_81580_81598(typeParameter));
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 81450, 81619);
                        }
                    }
                    catch (System.Exception)
                    {
                        DynAbs.Tracing.TraceSender.TraceExitLoopByException(10073, 1, 170);
                        throw;
                    }
                    finally
                    {
                        DynAbs.Tracing.TraceSender.TraceExitLoop(10073, 1, 170);
                    }
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 81323, 81634);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 81650, 81772);

                var
                indexersBySignature = f_10073_81676_81771(MemberSignatureComparer.DuplicateSourceComparer)
                ;
                try
                {
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 81953, 83372);
                    foreach (var members in f_10073_81977_81997_I(f_10073_81977_81997(membersByName)))
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 81953, 83372);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 82031, 82062);

                        string?
                        lastIndexerName = null
                        ;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 82080, 82108);

                        f_10073_82080_82107(indexersBySignature);
                        try
                        {
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 82126, 83357);
                            foreach (var symbol in f_10073_82149_82156_I(members))
                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 82126, 83357);

                                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 82198, 83338) || true) && (f_10073_82202_82220(symbol))
                                )

                                {
                                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 82198, 83338);
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 82270, 82318);

                                    PropertySymbol
                                    indexer = (PropertySymbol)symbol
                                    ;
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 82344, 82601);

                                    f_10073_82344_82600(this, indexer, diagnostics, membersByName, indexersBySignature, ref lastIndexerName);

                                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 82851, 83315) || true) && (typeParameterNames != null)
                                    )

                                    {
                                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 82851, 83315);
                                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 82939, 82981);

                                        string
                                        indexerName = f_10073_82960_82980(indexer)
                                        ;

                                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 83011, 83288) || true) && (f_10073_83015_83055(typeParameterNames, indexerName))
                                        )

                                        {
                                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 83011, 83288);
                                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 83121, 83214);

                                            f_10073_83121_83213(diagnostics, ErrorCode.ERR_DuplicateNameInClass, f_10073_83173_83190(indexer)[0], this, indexerName);
                                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 83248, 83257);

                                            continue;
                                            DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 83011, 83288);
                                        }
                                        DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 82851, 83315);
                                    }
                                    DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 82198, 83338);
                                }
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 82126, 83357);
                            }
                        }
                        catch (System.Exception)
                        {
                            DynAbs.Tracing.TraceSender.TraceExitLoopByException(10073, 1, 1232);
                            throw;
                        }
                        finally
                        {
                            DynAbs.Tracing.TraceSender.TraceExitLoop(10073, 1, 1232);
                        }
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 81953, 83372);
                    }
                }
                catch (System.Exception)
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoopByException(10073, 1, 1420);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoop(10073, 1, 1420);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 83388, 83415);

                DynAbs.Tracing.TraceSender.TraceInvocationWrapper(() => DynAbs.Tracing.TraceSender.TraceConditionalAccessExpression(typeParameterNames, 10073, 83388, 83414)?.Free(), 10073, 83407, 83414);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10073, 81112, 83426);

                int
                f_10073_81327_81337(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                this_param)
                {
                    var return_v = this_param.Arity;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 81327, 81337);
                    return return_v;
                }


                Microsoft.CodeAnalysis.PooledObjects.PooledHashSet<string>
                f_10073_81396_81431()
                {
                    var return_v = PooledHashSet<string>.GetInstance();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 81396, 81431);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.TypeParameterSymbol>
                f_10073_81496_81515(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                this_param)
                {
                    var return_v = this_param.TypeParameters;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 81496, 81515);
                    return return_v;
                }


                string
                f_10073_81580_81598(Microsoft.CodeAnalysis.CSharp.Symbols.TypeParameterSymbol
                this_param)
                {
                    var return_v = this_param.Name;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 81580, 81598);
                    return return_v;
                }


                bool
                f_10073_81557_81599(Microsoft.CodeAnalysis.PooledObjects.PooledHashSet<string>
                this_param, string
                item)
                {
                    var return_v = this_param.Add(item);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 81557, 81599);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.TypeParameterSymbol>
                f_10073_81496_81515_I(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.TypeParameterSymbol>
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 81496, 81515);
                    return return_v;
                }


                System.Collections.Generic.Dictionary<Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol, Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol>
                f_10073_81676_81771(Microsoft.CodeAnalysis.CSharp.Symbols.MemberSignatureComparer
                comparer)
                {
                    var return_v = new System.Collections.Generic.Dictionary<Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol, Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol>((System.Collections.Generic.IEqualityComparer<Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol>)comparer);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 81676, 81771);
                    return return_v;
                }


                System.Collections.Generic.Dictionary<string, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>>.ValueCollection
                f_10073_81977_81997(System.Collections.Generic.Dictionary<string, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>>
                this_param)
                {
                    var return_v = this_param.Values;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 81977, 81997);
                    return return_v;
                }


                int
                f_10073_82080_82107(System.Collections.Generic.Dictionary<Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol, Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol>
                this_param)
                {
                    this_param.Clear();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 82080, 82107);
                    return 0;
                }


                bool
                f_10073_82202_82220(Microsoft.CodeAnalysis.CSharp.Symbol
                symbol)
                {
                    var return_v = symbol.IsIndexer();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 82202, 82220);
                    return return_v;
                }


                int
                f_10073_82344_82600(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol
                indexer, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, System.Collections.Generic.Dictionary<string, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>>
                membersByName, System.Collections.Generic.Dictionary<Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol, Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol>
                indexersBySignature, ref string?
                lastIndexerName)
                {
                    this_param.CheckIndexerSignatureCollisions(indexer, diagnostics, membersByName, indexersBySignature, ref lastIndexerName);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 82344, 82600);
                    return 0;
                }


                string
                f_10073_82960_82980(Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol
                this_param)
                {
                    var return_v = this_param.MetadataName;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 82960, 82980);
                    return return_v;
                }


                bool
                f_10073_83015_83055(Microsoft.CodeAnalysis.PooledObjects.PooledHashSet<string>
                this_param, string
                item)
                {
                    var return_v = this_param.Contains(item);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 83015, 83055);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Location>
                f_10073_83173_83190(Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol
                this_param)
                {
                    var return_v = this_param.Locations;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 83173, 83190);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo
                f_10073_83121_83213(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, Microsoft.CodeAnalysis.Location
                location, params object[]
                args)
                {
                    var return_v = diagnostics.Add(code, location, args);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 83121, 83213);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>
                f_10073_82149_82156_I(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 82149, 82156);
                    return return_v;
                }


                System.Collections.Generic.Dictionary<string, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>>.ValueCollection
                f_10073_81977_81997_I(System.Collections.Generic.Dictionary<string, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>>.ValueCollection
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 81977, 81997);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10073, 81112, 83426);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10073, 81112, 83426);
            }
        }

        private void CheckIndexerSignatureCollisions(
                    PropertySymbol indexer,
                    DiagnosticBag diagnostics,
                    Dictionary<string, ImmutableArray<Symbol>> membersByName,
                    Dictionary<PropertySymbol, PropertySymbol> indexersBySignature,
                    ref string? lastIndexerName)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10073, 83438, 85841);
                Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol prevIndexerBySignature = default(Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 83775, 85287) || true) && (f_10073_83779_83821_M(!indexer.IsExplicitInterfaceImplementation))
                ) //explicit implementation names are not checked

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 83775, 85287);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 83903, 83945);

                    string
                    indexerName = f_10073_83924_83944(indexer)
                    ;

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 83965, 84690) || true) && (lastIndexerName != null && (DynAbs.Tracing.TraceSender.Expression_True(10073, 83969, 84026) && lastIndexerName != indexerName))
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 83965, 84690);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 84593, 84671);

                        f_10073_84593_84670(                    // NOTE: dev10 checks indexer names by comparing each to the previous.
                                                                // For example, if indexers are declared with names A, B, A, B, then there
                                                                // will be three errors - one for each time the name is different from the
                                                                // previous one.  If, on the other hand, the names are A, A, B, B, then
                                                                // there will only be one error because only one indexer has a different
                                                                // name from the previous one.

                                            diagnostics, ErrorCode.ERR_InconsistentIndexerNames, f_10073_84649_84666(indexer)[0]);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 83965, 84690);
                    }
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 84710, 84740);

                    lastIndexerName = indexerName;

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 84760, 85272) || true) && (f_10073_84764_84773().Length == 1 || (DynAbs.Tracing.TraceSender.Expression_False(10073, 84764, 84798) || f_10073_84789_84798()))
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 84760, 85272);

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 84840, 85253) || true) && (f_10073_84844_84882(membersByName, indexerName))
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 84840, 85253);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 85037, 85111);

                            f_10073_85037_85110(!membersByName[indexerName].Any(SymbolExtensions.IsIndexer));
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 85137, 85230);

                            f_10073_85137_85229(diagnostics, ErrorCode.ERR_DuplicateNameInClass, f_10073_85189_85206(indexer)[0], this, indexerName);
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 84840, 85253);
                        }
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 84760, 85272);
                    }
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 83775, 85287);
                }

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 85303, 85830) || true) && (f_10073_85307_85379(indexersBySignature, indexer, out prevIndexerBySignature))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 85303, 85830);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 85586, 85710);

                    f_10073_85586_85709(                // Type '{1}' already defines a member called '{0}' with the same parameter types
                                                        // NOTE: Dev10 prints "this" as the name of the indexer.
                                    diagnostics, ErrorCode.ERR_MemberAlreadyExists, f_10073_85637_85654(indexer)[0], f_10073_85659_85702(SyntaxKind.ThisKeyword), this);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 85303, 85830);
                }

                else

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 85303, 85830);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 85776, 85815);

                    indexersBySignature[indexer] = indexer;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 85303, 85830);
                }
                DynAbs.Tracing.TraceSender.TraceExitMethod(10073, 83438, 85841);

                bool
                f_10073_83779_83821_M(bool
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 83779, 83821);
                    return return_v;
                }


                string
                f_10073_83924_83944(Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol
                this_param)
                {
                    var return_v = this_param.MetadataName;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 83924, 83944);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Location>
                f_10073_84649_84666(Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol
                this_param)
                {
                    var return_v = this_param.Locations;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 84649, 84666);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo
                f_10073_84593_84670(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, Microsoft.CodeAnalysis.Location
                location)
                {
                    var return_v = diagnostics.Add(code, location);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 84593, 84670);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Location>
                f_10073_84764_84773()
                {
                    var return_v = Locations;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 84764, 84773);
                    return return_v;
                }


                bool
                f_10073_84789_84798()
                {
                    var return_v = IsPartial;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 84789, 84798);
                    return return_v;
                }


                bool
                f_10073_84844_84882(System.Collections.Generic.Dictionary<string, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>>
                this_param, string
                key)
                {
                    var return_v = this_param.ContainsKey(key);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 84844, 84882);
                    return return_v;
                }


                int
                f_10073_85037_85110(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 85037, 85110);
                    return 0;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Location>
                f_10073_85189_85206(Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol
                this_param)
                {
                    var return_v = this_param.Locations;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 85189, 85206);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo
                f_10073_85137_85229(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, Microsoft.CodeAnalysis.Location
                location, params object[]
                args)
                {
                    var return_v = diagnostics.Add(code, location, args);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 85137, 85229);
                    return return_v;
                }


                bool
                f_10073_85307_85379(System.Collections.Generic.Dictionary<Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol, Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol>
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol
                key, out Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol
                value)
                {
                    var return_v = this_param.TryGetValue(key, out value);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 85307, 85379);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Location>
                f_10073_85637_85654(Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol
                this_param)
                {
                    var return_v = this_param.Locations;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 85637, 85654);
                    return return_v;
                }


                string
                f_10073_85659_85702(Microsoft.CodeAnalysis.CSharp.SyntaxKind
                kind)
                {
                    var return_v = SyntaxFacts.GetText(kind);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 85659, 85702);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo
                f_10073_85586_85709(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, Microsoft.CodeAnalysis.Location
                location, params object[]
                args)
                {
                    var return_v = diagnostics.Add(code, location, args);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 85586, 85709);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10073, 83438, 85841);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10073, 83438, 85841);
            }
        }

        private void CheckSpecialMemberErrors(DiagnosticBag diagnostics)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10073, 85853, 86201);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 85942, 86016);

                var
                conversions = f_10073_85960_86015(f_10073_85980_86014(f_10073_85980_86003(this)))
                ;
                try
                {
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 86030, 86190);
                    foreach (var member in f_10073_86053_86079_I(f_10073_86053_86079(this)))
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 86030, 86190);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 86113, 86175);

                        f_10073_86113_86174(member, conversions, diagnostics);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 86030, 86190);
                    }
                }
                catch (System.Exception)
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoopByException(10073, 1, 161);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoop(10073, 1, 161);
                }
                DynAbs.Tracing.TraceSender.TraceExitMethod(10073, 85853, 86201);

                Microsoft.CodeAnalysis.CSharp.Symbols.AssemblySymbol
                f_10073_85980_86003(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                this_param)
                {
                    var return_v = this_param.ContainingAssembly;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 85980, 86003);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.AssemblySymbol
                f_10073_85980_86014(Microsoft.CodeAnalysis.CSharp.Symbols.AssemblySymbol
                this_param)
                {
                    var return_v = this_param.CorLibrary;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 85980, 86014);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.TypeConversions
                f_10073_85960_86015(Microsoft.CodeAnalysis.CSharp.Symbols.AssemblySymbol
                corLibrary)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.TypeConversions(corLibrary);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 85960, 86015);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>
                f_10073_86053_86079(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                this_param)
                {
                    var return_v = this_param.GetMembersUnordered();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 86053, 86079);
                    return return_v;
                }


                int
                f_10073_86113_86174(Microsoft.CodeAnalysis.CSharp.Symbol
                this_param, Microsoft.CodeAnalysis.CSharp.TypeConversions
                conversions, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    this_param.AfterAddingTypeMembersChecks((Microsoft.CodeAnalysis.CSharp.ConversionsBase)conversions, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 86113, 86174);
                    return 0;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>
                f_10073_86053_86079_I(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 86053, 86079);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10073, 85853, 86201);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10073, 85853, 86201);
            }
        }

        private void CheckTypeParameterNameConflicts(DiagnosticBag diagnostics)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10073, 86213, 87023);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 86309, 86618) || true) && (f_10073_86313_86326(this) == TypeKind.Delegate)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 86309, 86618);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 86596, 86603);

                    return;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 86309, 86618);
                }

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 86634, 87012) || true) && (f_10073_86638_86647().Length == 1 || (DynAbs.Tracing.TraceSender.Expression_False(10073, 86638, 86672) || f_10073_86663_86672()))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 86634, 87012);
                    try
                    {
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 86706, 86997);
                        foreach (var tp in f_10073_86725_86739_I(f_10073_86725_86739()))
                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 86706, 86997);
                            try
                            {
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 86781, 86978);
                                foreach (var dup in f_10073_86801_86820_I(f_10073_86801_86820(this, f_10073_86812_86819(tp))))
                                {
                                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 86781, 86978);
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 86870, 86955);

                                    f_10073_86870_86954(diagnostics, ErrorCode.ERR_DuplicateNameInClass, f_10073_86922_86935(dup)[0], this, f_10073_86946_86953(tp));
                                    DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 86781, 86978);
                                }
                            }
                            catch (System.Exception)
                            {
                                DynAbs.Tracing.TraceSender.TraceExitLoopByException(10073, 1, 198);
                                throw;
                            }
                            finally
                            {
                                DynAbs.Tracing.TraceSender.TraceExitLoop(10073, 1, 198);
                            }
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 86706, 86997);
                        }
                    }
                    catch (System.Exception)
                    {
                        DynAbs.Tracing.TraceSender.TraceExitLoopByException(10073, 1, 292);
                        throw;
                    }
                    finally
                    {
                        DynAbs.Tracing.TraceSender.TraceExitLoop(10073, 1, 292);
                    }
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 86634, 87012);
                }
                DynAbs.Tracing.TraceSender.TraceExitMethod(10073, 86213, 87023);

                Microsoft.CodeAnalysis.TypeKind
                f_10073_86313_86326(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                this_param)
                {
                    var return_v = this_param.TypeKind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 86313, 86326);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Location>
                f_10073_86638_86647()
                {
                    var return_v = Locations;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 86638, 86647);
                    return return_v;
                }


                bool
                f_10073_86663_86672()
                {
                    var return_v = IsPartial;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 86663, 86672);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.TypeParameterSymbol>
                f_10073_86725_86739()
                {
                    var return_v = TypeParameters;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 86725, 86739);
                    return return_v;
                }


                string
                f_10073_86812_86819(Microsoft.CodeAnalysis.CSharp.Symbols.TypeParameterSymbol
                this_param)
                {
                    var return_v = this_param.Name;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 86812, 86819);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>
                f_10073_86801_86820(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                this_param, string
                name)
                {
                    var return_v = this_param.GetMembers(name);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 86801, 86820);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Location>
                f_10073_86922_86935(Microsoft.CodeAnalysis.CSharp.Symbol
                this_param)
                {
                    var return_v = this_param.Locations;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 86922, 86935);
                    return return_v;
                }


                string
                f_10073_86946_86953(Microsoft.CodeAnalysis.CSharp.Symbols.TypeParameterSymbol
                this_param)
                {
                    var return_v = this_param.Name;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 86946, 86953);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo
                f_10073_86870_86954(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, Microsoft.CodeAnalysis.Location
                location, params object[]
                args)
                {
                    var return_v = diagnostics.Add(code, location, args);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 86870, 86954);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>
                f_10073_86801_86820_I(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 86801, 86820);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.TypeParameterSymbol>
                f_10073_86725_86739_I(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.TypeParameterSymbol>
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 86725, 86739);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10073, 86213, 87023);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10073, 86213, 87023);
            }
        }

        private void CheckAccessorNameConflicts(DiagnosticBag diagnostics)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10073, 87035, 88646);
                try
                {
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 87253, 88635);
                    foreach (Symbol symbol in f_10073_87279_87305_I(f_10073_87279_87305(this)))
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 87253, 88635);

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 87339, 87597) || true) && (f_10073_87343_87385(symbol))
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 87339, 87597);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 87569, 87578);

                            continue;
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 87339, 87597);
                        }
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 87615, 88620);

                        switch (f_10073_87623_87634(symbol))
                        {

                            case SymbolKind.Property:
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 87615, 88620);
                                {
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 87758, 87802);

                                    var
                                    propertySymbol = (PropertySymbol)symbol
                                    ;
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 87832, 87939);

                                    f_10073_87832_87938(this, propertySymbol, getNotSet: true, diagnostics: diagnostics);
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 87969, 88077);

                                    f_10073_87969_88076(this, propertySymbol, getNotSet: false, diagnostics: diagnostics);
                                    DynAbs.Tracing.TraceSender.TraceBreak(10073, 88107, 88113);

                                    break;
                                }
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 87615, 88620);

                            case SymbolKind.Event:
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 87615, 88620);
                                {
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 88241, 88279);

                                    var
                                    eventSymbol = (EventSymbol)symbol
                                    ;
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 88309, 88408);

                                    f_10073_88309_88407(this, eventSymbol, isAdder: true, diagnostics: diagnostics);
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 88438, 88538);

                                    f_10073_88438_88537(this, eventSymbol, isAdder: false, diagnostics: diagnostics);
                                    DynAbs.Tracing.TraceSender.TraceBreak(10073, 88568, 88574);

                                    break;
                                }
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 87615, 88620);
                        }
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 87253, 88635);
                    }
                }
                catch (System.Exception)
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoopByException(10073, 1, 1383);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoop(10073, 1, 1383);
                }
                DynAbs.Tracing.TraceSender.TraceExitMethod(10073, 87035, 88646);

                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>
                f_10073_87279_87305(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                this_param)
                {
                    var return_v = this_param.GetMembersUnordered();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 87279, 87305);
                    return return_v;
                }


                bool
                f_10073_87343_87385(Microsoft.CodeAnalysis.CSharp.Symbol
                member)
                {
                    var return_v = member.IsExplicitInterfaceImplementation();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 87343, 87385);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SymbolKind
                f_10073_87623_87634(Microsoft.CodeAnalysis.CSharp.Symbol
                this_param)
                {
                    var return_v = this_param.Kind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 87623, 87634);
                    return return_v;
                }


                int
                f_10073_87832_87938(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol
                propertySymbol, bool
                getNotSet, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    this_param.CheckForMemberConflictWithPropertyAccessor(propertySymbol, getNotSet: getNotSet, diagnostics: diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 87832, 87938);
                    return 0;
                }


                int
                f_10073_87969_88076(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol
                propertySymbol, bool
                getNotSet, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    this_param.CheckForMemberConflictWithPropertyAccessor(propertySymbol, getNotSet: getNotSet, diagnostics: diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 87969, 88076);
                    return 0;
                }


                int
                f_10073_88309_88407(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.EventSymbol
                eventSymbol, bool
                isAdder, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    this_param.CheckForMemberConflictWithEventAccessor(eventSymbol, isAdder: isAdder, diagnostics: diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 88309, 88407);
                    return 0;
                }


                int
                f_10073_88438_88537(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.EventSymbol
                eventSymbol, bool
                isAdder, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    this_param.CheckForMemberConflictWithEventAccessor(eventSymbol, isAdder: isAdder, diagnostics: diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 88438, 88537);
                    return 0;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>
                f_10073_87279_87305_I(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 87279, 87305);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10073, 87035, 88646);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10073, 87035, 88646);
            }
        }

        internal override bool KnownCircularStruct
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(10073, 88725, 89809);

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 88761, 89718) || true) && (_lazyKnownCircularStruct == (int)ThreeState.Unknown)
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 88761, 89718);

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 88858, 89699) || true) && (f_10073_88862_88870() != TypeKind.Struct)
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 88858, 89699);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 88939, 89045);

                            f_10073_88939_89044(ref _lazyKnownCircularStruct, ThreeState.False, ThreeState.Unknown);
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 88858, 89699);
                        }

                        else

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 88858, 89699);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 89143, 89189);

                            var
                            diagnostics = f_10073_89161_89188()
                            ;
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 89215, 89283);

                            var
                            value = (int)f_10073_89232_89282(f_10073_89232_89267(this, diagnostics))
                            ;

                            if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 89311, 89555) || true) && (f_10073_89315_89404(ref _lazyKnownCircularStruct, value, ThreeState.Unknown) == (int)ThreeState.Unknown)
                            )

                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 89311, 89555);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 89489, 89528);

                                f_10073_89489_89527(this, diagnostics);
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 89311, 89555);
                            }
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 89583, 89631);

                            f_10073_89583_89630(value == _lazyKnownCircularStruct);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 89657, 89676);

                            f_10073_89657_89675(diagnostics);
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 88858, 89699);
                        }
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 88761, 89718);
                    }
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 89738, 89794);

                    return _lazyKnownCircularStruct == (int)ThreeState.True;
                    DynAbs.Tracing.TraceSender.TraceExitMethod(10073, 88725, 89809);

                    Microsoft.CodeAnalysis.TypeKind
                    f_10073_88862_88870()
                    {
                        var return_v = TypeKind;
                        DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 88862, 88870);
                        return return_v;
                    }


                    int
                    f_10073_88939_89044(ref int
                    location1, Microsoft.CodeAnalysis.ThreeState
                    value, Microsoft.CodeAnalysis.ThreeState
                    comparand)
                    {
                        var return_v = Interlocked.CompareExchange(ref location1, (int)value, (int)comparand);
                        DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 88939, 89044);
                        return return_v;
                    }


                    Microsoft.CodeAnalysis.DiagnosticBag
                    f_10073_89161_89188()
                    {
                        var return_v = DiagnosticBag.GetInstance();
                        DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 89161, 89188);
                        return return_v;
                    }


                    bool
                    f_10073_89232_89267(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                    this_param, Microsoft.CodeAnalysis.DiagnosticBag
                    diagnostics)
                    {
                        var return_v = this_param.CheckStructCircularity(diagnostics);
                        DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 89232, 89267);
                        return return_v;
                    }


                    Microsoft.CodeAnalysis.ThreeState
                    f_10073_89232_89282(bool
                    value)
                    {
                        var return_v = value.ToThreeState();
                        DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 89232, 89282);
                        return return_v;
                    }


                    int
                    f_10073_89315_89404(ref int
                    location1, int
                    value, Microsoft.CodeAnalysis.ThreeState
                    comparand)
                    {
                        var return_v = Interlocked.CompareExchange(ref location1, value, (int)comparand);
                        DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 89315, 89404);
                        return return_v;
                    }


                    int
                    f_10073_89489_89527(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                    this_param, Microsoft.CodeAnalysis.DiagnosticBag
                    diagnostics)
                    {
                        this_param.AddDeclarationDiagnostics(diagnostics);
                        DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 89489, 89527);
                        return 0;
                    }


                    int
                    f_10073_89583_89630(bool
                    condition)
                    {
                        Debug.Assert(condition);
                        DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 89583, 89630);
                        return 0;
                    }


                    int
                    f_10073_89657_89675(Microsoft.CodeAnalysis.DiagnosticBag
                    this_param)
                    {
                        this_param.Free();
                        DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 89657, 89675);
                        return 0;
                    }

                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10073, 88658, 89820);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10073, 88658, 89820);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        private bool CheckStructCircularity(DiagnosticBag diagnostics)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10073, 89832, 90083);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 89919, 89961);

                f_10073_89919_89960(f_10073_89932_89940() == TypeKind.Struct);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 89977, 90017);

                f_10073_89977_90016(this, diagnostics);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 90031, 90072);

                return f_10073_90038_90071(this, diagnostics);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10073, 89832, 90083);

                Microsoft.CodeAnalysis.TypeKind
                f_10073_89932_89940()
                {
                    var return_v = TypeKind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 89932, 89940);
                    return return_v;
                }


                int
                f_10073_89919_89960(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 89919, 89960);
                    return 0;
                }


                int
                f_10073_89977_90016(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                this_param, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    this_param.CheckFiniteFlatteningGraph(diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 89977, 90016);
                    return 0;
                }


                bool
                f_10073_90038_90071(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                this_param, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = this_param.HasStructCircularity(diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 90038, 90071);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10073, 89832, 90083);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10073, 89832, 90083);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private bool HasStructCircularity(DiagnosticBag diagnostics)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10073, 90095, 91907);
                try
                {
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 90180, 91869);
                    foreach (var valuesByName in f_10073_90209_90234_I(f_10073_90209_90234(f_10073_90209_90227(this))))
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 90180, 91869);
                        try
                        {
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 90268, 91854);
                            foreach (var member in f_10073_90291_90303_I(valuesByName))
                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 90268, 91854);

                                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 90345, 90573) || true) && (f_10073_90349_90360(member) != SymbolKind.Field)
                                )

                                {
                                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 90345, 90573);
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 90541, 90550);

                                    continue;
                                    DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 90345, 90573);
                                }
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 90595, 90627);

                                var
                                field = (FieldSymbol)member
                                ;

                                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 90649, 90749) || true) && (f_10073_90653_90667(field))
                                )

                                {
                                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 90649, 90749);
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 90717, 90726);

                                    continue;
                                    DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 90649, 90749);
                                }
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 90771, 90805);

                                var
                                type = f_10073_90782_90804(field)
                                ;

                                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 90827, 91835) || true) && (((object)type != null) && (DynAbs.Tracing.TraceSender.Expression_True(10073, 90831, 90916) && (f_10073_90883_90896(type) == TypeKind.Struct)) && (DynAbs.Tracing.TraceSender.Expression_True(10073, 90831, 91006) && f_10073_90945_91006(type, this)) && (DynAbs.Tracing.TraceSender.Expression_True(10073, 90831, 91069) && !f_10073_91036_91069(type)))
                                ) // allow System.Int32 to contain a field of its own type

                                {
                                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 90827, 91835);
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 91277, 91322);

                                    var
                                    symbol = f_10073_91290_91312(field) ?? (DynAbs.Tracing.TraceSender.Expression_Null<Microsoft.CodeAnalysis.CSharp.Symbol>(10073, 91290, 91321) ?? field)
                                    ;

                                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 91350, 91564) || true) && (f_10073_91354_91365(symbol) == SymbolKind.Parameter)
                                    )

                                    {
                                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 91350, 91564);
                                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 91522, 91537);

                                        symbol = field;
                                        DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 91350, 91564);
                                    }
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 91690, 91774);

                                    f_10073_91690_91773(
                                                            // Struct member '{0}' of type '{1}' causes a cycle in the struct layout
                                                            diagnostics, ErrorCode.ERR_StructLayoutCycle, f_10073_91739_91755(symbol)[0], symbol, type);
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 91800, 91812);

                                    return true;
                                    DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 90827, 91835);
                                }
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 90268, 91854);
                            }
                        }
                        catch (System.Exception)
                        {
                            DynAbs.Tracing.TraceSender.TraceExitLoopByException(10073, 1, 1587);
                            throw;
                        }
                        finally
                        {
                            DynAbs.Tracing.TraceSender.TraceExitLoop(10073, 1, 1587);
                        }
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 90180, 91869);
                    }
                }
                catch (System.Exception)
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoopByException(10073, 1, 1690);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoop(10073, 1, 1690);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 91883, 91896);

                return false;
                DynAbs.Tracing.TraceSender.TraceExitMethod(10073, 90095, 91907);

                System.Collections.Generic.Dictionary<string, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>>
                f_10073_90209_90227(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                this_param)
                {
                    var return_v = this_param.GetMembersByName();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 90209, 90227);
                    return return_v;
                }


                System.Collections.Generic.Dictionary<string, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>>.ValueCollection
                f_10073_90209_90234(System.Collections.Generic.Dictionary<string, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>>
                this_param)
                {
                    var return_v = this_param.Values;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 90209, 90234);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SymbolKind
                f_10073_90349_90360(Microsoft.CodeAnalysis.CSharp.Symbol
                this_param)
                {
                    var return_v = this_param.Kind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 90349, 90360);
                    return return_v;
                }


                bool
                f_10073_90653_90667(Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol
                this_param)
                {
                    var return_v = this_param.IsStatic;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 90653, 90667);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                f_10073_90782_90804(Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol
                field)
                {
                    var return_v = field.NonPointerType();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 90782, 90804);
                    return return_v;
                }


                Microsoft.CodeAnalysis.TypeKind
                f_10073_90883_90896(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                this_param)
                {
                    var return_v = this_param.TypeKind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 90883, 90896);
                    return return_v;
                }


                bool
                f_10073_90945_91006(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                depends, Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                on)
                {
                    var return_v = BaseTypeAnalysis.StructDependsOn((Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol)depends, (Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol)on);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 90945, 91006);
                    return return_v;
                }


                bool
                f_10073_91036_91069(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                t)
                {
                    var return_v = t.IsPrimitiveRecursiveStruct();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 91036, 91069);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbol
                f_10073_91290_91312(Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol
                this_param)
                {
                    var return_v = this_param.AssociatedSymbol;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 91290, 91312);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SymbolKind
                f_10073_91354_91365(Microsoft.CodeAnalysis.CSharp.Symbol
                this_param)
                {
                    var return_v = this_param.Kind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 91354, 91365);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Location>
                f_10073_91739_91755(Microsoft.CodeAnalysis.CSharp.Symbol
                this_param)
                {
                    var return_v = this_param.Locations;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 91739, 91755);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo
                f_10073_91690_91773(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, Microsoft.CodeAnalysis.Location
                location, params object[]
                args)
                {
                    var return_v = diagnostics.Add(code, location, args);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 91690, 91773);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>
                f_10073_90291_90303_I(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 90291, 90303);
                    return return_v;
                }


                System.Collections.Generic.Dictionary<string, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>>.ValueCollection
                f_10073_90209_90234_I(System.Collections.Generic.Dictionary<string, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>>.ValueCollection
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 90209, 90234);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10073, 90095, 91907);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10073, 90095, 91907);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private void CheckForProtectedInStaticClass(DiagnosticBag diagnostics)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10073, 91919, 92943);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 92014, 92083) || true) && (f_10073_92018_92027_M(!IsStatic))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 92014, 92083);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 92061, 92068);

                    return;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 92014, 92083);
                }
                try
                {
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 92144, 92932);
                    foreach (var valuesByName in f_10073_92173_92198_I(f_10073_92173_92198(f_10073_92173_92191(this))))
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 92144, 92932);
                        try
                        {
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 92232, 92917);
                            foreach (var member in f_10073_92255_92267_I(valuesByName))
                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 92232, 92917);

                                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 92309, 92493) || true) && (member is TypeSymbol)
                                )

                                {
                                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 92309, 92493);
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 92461, 92470);

                                    continue;
                                    DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 92309, 92493);
                                }

                                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 92517, 92898) || true) && (f_10073_92521_92564(f_10073_92521_92549(member)))
                                )

                                {
                                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 92517, 92898);

                                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 92614, 92875) || true) && (f_10073_92618_92629(member) != SymbolKind.Method || (DynAbs.Tracing.TraceSender.Expression_False(10073, 92618, 92712) || f_10073_92654_92687(((MethodSymbol)member)) != MethodKind.Destructor))
                                    )

                                    {
                                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 92614, 92875);
                                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 92770, 92848);

                                        f_10073_92770_92847(diagnostics, ErrorCode.ERR_ProtectedInStatic, f_10073_92819_92835(member)[0], member);
                                        DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 92614, 92875);
                                    }
                                    DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 92517, 92898);
                                }
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 92232, 92917);
                            }
                        }
                        catch (System.Exception)
                        {
                            DynAbs.Tracing.TraceSender.TraceExitLoopByException(10073, 1, 686);
                            throw;
                        }
                        finally
                        {
                            DynAbs.Tracing.TraceSender.TraceExitLoop(10073, 1, 686);
                        }
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 92144, 92932);
                    }
                }
                catch (System.Exception)
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoopByException(10073, 1, 789);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoop(10073, 1, 789);
                }
                DynAbs.Tracing.TraceSender.TraceExitMethod(10073, 91919, 92943);

                bool
                f_10073_92018_92027_M(bool
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 92018, 92027);
                    return return_v;
                }


                System.Collections.Generic.Dictionary<string, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>>
                f_10073_92173_92191(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                this_param)
                {
                    var return_v = this_param.GetMembersByName();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 92173, 92191);
                    return return_v;
                }


                System.Collections.Generic.Dictionary<string, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>>.ValueCollection
                f_10073_92173_92198(System.Collections.Generic.Dictionary<string, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>>
                this_param)
                {
                    var return_v = this_param.Values;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 92173, 92198);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Accessibility
                f_10073_92521_92549(Microsoft.CodeAnalysis.CSharp.Symbol
                this_param)
                {
                    var return_v = this_param.DeclaredAccessibility;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 92521, 92549);
                    return return_v;
                }


                bool
                f_10073_92521_92564(Microsoft.CodeAnalysis.Accessibility
                accessibility)
                {
                    var return_v = accessibility.HasProtected();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 92521, 92564);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SymbolKind
                f_10073_92618_92629(Microsoft.CodeAnalysis.CSharp.Symbol
                this_param)
                {
                    var return_v = this_param.Kind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 92618, 92629);
                    return return_v;
                }


                Microsoft.CodeAnalysis.MethodKind
                f_10073_92654_92687(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                this_param)
                {
                    var return_v = this_param.MethodKind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 92654, 92687);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Location>
                f_10073_92819_92835(Microsoft.CodeAnalysis.CSharp.Symbol
                this_param)
                {
                    var return_v = this_param.Locations;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 92819, 92835);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo
                f_10073_92770_92847(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, Microsoft.CodeAnalysis.Location
                location, params object[]
                args)
                {
                    var return_v = diagnostics.Add(code, location, args);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 92770, 92847);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>
                f_10073_92255_92267_I(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 92255, 92267);
                    return return_v;
                }


                System.Collections.Generic.Dictionary<string, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>>.ValueCollection
                f_10073_92173_92198_I(System.Collections.Generic.Dictionary<string, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>>.ValueCollection
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 92173, 92198);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10073, 91919, 92943);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10073, 91919, 92943);
            }
        }

        private void CheckForUnmatchedOperators(DiagnosticBag diagnostics)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10073, 92955, 94929);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 94120, 94238);

                f_10073_94120_94237(this, diagnostics, WellKnownMemberNames.TrueOperatorName, WellKnownMemberNames.FalseOperatorName);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 94252, 94379);

                f_10073_94252_94378(this, diagnostics, WellKnownMemberNames.EqualityOperatorName, WellKnownMemberNames.InequalityOperatorName);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 94393, 94521);

                f_10073_94393_94520(this, diagnostics, WellKnownMemberNames.LessThanOperatorName, WellKnownMemberNames.GreaterThanOperatorName);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 94535, 94677);

                f_10073_94535_94676(this, diagnostics, WellKnownMemberNames.LessThanOrEqualOperatorName, WellKnownMemberNames.GreaterThanOrEqualOperatorName);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 94874, 94918);

                f_10073_94874_94917(this, diagnostics);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10073, 92955, 94929);

                int
                f_10073_94120_94237(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                this_param, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, string
                operatorName1, string
                operatorName2)
                {
                    this_param.CheckForUnmatchedOperator(diagnostics, operatorName1, operatorName2);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 94120, 94237);
                    return 0;
                }


                int
                f_10073_94252_94378(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                this_param, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, string
                operatorName1, string
                operatorName2)
                {
                    this_param.CheckForUnmatchedOperator(diagnostics, operatorName1, operatorName2);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 94252, 94378);
                    return 0;
                }


                int
                f_10073_94393_94520(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                this_param, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, string
                operatorName1, string
                operatorName2)
                {
                    this_param.CheckForUnmatchedOperator(diagnostics, operatorName1, operatorName2);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 94393, 94520);
                    return 0;
                }


                int
                f_10073_94535_94676(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                this_param, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, string
                operatorName1, string
                operatorName2)
                {
                    this_param.CheckForUnmatchedOperator(diagnostics, operatorName1, operatorName2);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 94535, 94676);
                    return 0;
                }


                int
                f_10073_94874_94917(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                this_param, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    this_param.CheckForEqualityAndGetHashCode(diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 94874, 94917);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10073, 92955, 94929);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10073, 92955, 94929);
            }
        }

        private void CheckForUnmatchedOperator(DiagnosticBag diagnostics, string operatorName1, string operatorName2)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10073, 94941, 95348);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 95075, 95119);

                var
                ops1 = f_10073_95086_95118(this, operatorName1)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 95133, 95177);

                var
                ops2 = f_10073_95144_95176(this, operatorName2)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 95191, 95257);

                f_10073_95191_95256(diagnostics, ops1, ops2, operatorName2);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 95271, 95337);

                f_10073_95271_95336(diagnostics, ops2, ops1, operatorName1);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10073, 94941, 95348);

                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol>
                f_10073_95086_95118(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                this_param, string
                name)
                {
                    var return_v = this_param.GetOperators(name);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 95086, 95118);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol>
                f_10073_95144_95176(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                this_param, string
                name)
                {
                    var return_v = this_param.GetOperators(name);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 95144, 95176);
                    return return_v;
                }


                int
                f_10073_95191_95256(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol>
                ops1, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol>
                ops2, string
                operatorName2)
                {
                    CheckForUnmatchedOperator(diagnostics, ops1, ops2, operatorName2);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 95191, 95256);
                    return 0;
                }


                int
                f_10073_95271_95336(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol>
                ops1, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol>
                ops2, string
                operatorName2)
                {
                    CheckForUnmatchedOperator(diagnostics, ops1, ops2, operatorName2);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 95271, 95336);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10073, 94941, 95348);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10073, 94941, 95348);
            }
        }

        private static void CheckForUnmatchedOperator(
                    DiagnosticBag diagnostics,
                    ImmutableArray<MethodSymbol> ops1,
                    ImmutableArray<MethodSymbol> ops2,
                    string operatorName2)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterStaticMethod(10073, 95360, 96348);
                try
                {
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 95602, 96337);
                    foreach (var op1 in f_10073_95622_95626_I(ops1))
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 95602, 96337);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 95660, 95684);

                        bool
                        foundMatch = false
                        ;
                        try
                        {
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 95702, 95941);
                            foreach (var op2 in f_10073_95722_95726_I(ops2))
                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 95702, 95941);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 95768, 95807);

                                foundMatch = f_10073_95781_95806(op1, op2);

                                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 95829, 95922) || true) && (foundMatch)
                                )

                                {
                                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 95829, 95922);
                                    DynAbs.Tracing.TraceSender.TraceBreak(10073, 95893, 95899);

                                    break;
                                    DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 95829, 95922);
                                }
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 95702, 95941);
                            }
                        }
                        catch (System.Exception)
                        {
                            DynAbs.Tracing.TraceSender.TraceExitLoopByException(10073, 1, 240);
                            throw;
                        }
                        finally
                        {
                            DynAbs.Tracing.TraceSender.TraceExitLoop(10073, 1, 240);
                        }
                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 95961, 96322) || true) && (!foundMatch)
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 95961, 96322);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 96140, 96303);

                            f_10073_96140_96302(                    // CS0216: The operator 'C.operator true(C)' requires a matching operator 'false' to also be defined
                                                diagnostics, ErrorCode.ERR_OperatorNeedsMatch, f_10073_96190_96203(op1)[0], op1, f_10073_96238_96301(f_10073_96258_96300(operatorName2)));
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 95961, 96322);
                        }
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 95602, 96337);
                    }
                }
                catch (System.Exception)
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoopByException(10073, 1, 736);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoop(10073, 1, 736);
                }
                DynAbs.Tracing.TraceSender.TraceExitStaticMethod(10073, 95360, 96348);

                bool
                f_10073_95781_95806(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                op1, Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                op2)
                {
                    var return_v = DoOperatorsPair(op1, op2);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 95781, 95806);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol>
                f_10073_95722_95726_I(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol>
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 95722, 95726);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Location>
                f_10073_96190_96203(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                this_param)
                {
                    var return_v = this_param.Locations;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 96190, 96203);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.SyntaxKind
                f_10073_96258_96300(string
                operatorMetadataName)
                {
                    var return_v = SyntaxFacts.GetOperatorKind(operatorMetadataName);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 96258, 96300);
                    return return_v;
                }


                string
                f_10073_96238_96301(Microsoft.CodeAnalysis.CSharp.SyntaxKind
                kind)
                {
                    var return_v = SyntaxFacts.GetText(kind);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 96238, 96301);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo
                f_10073_96140_96302(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, Microsoft.CodeAnalysis.Location
                location, params object[]
                args)
                {
                    var return_v = diagnostics.Add(code, location, args);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 96140, 96302);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol>
                f_10073_95622_95626_I(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol>
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 95622, 95626);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10073, 95360, 96348);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10073, 95360, 96348);
            }
        }

        private static bool DoOperatorsPair(MethodSymbol op1, MethodSymbol op2)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterStaticMethod(10073, 96360, 97057);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 96456, 96562) || true) && (f_10073_96460_96478(op1) != f_10073_96482_96500(op2))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 96456, 96562);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 96534, 96547);

                    return false;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 96456, 96562);
                }
                try
                {
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 96587, 96592);

                    for (int
        p = 0
        ; (DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 96578, 96864) || true) && (p < f_10073_96598_96616(op1))
        ; DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 96618, 96621)
        , ++p, DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 96578, 96864))

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 96578, 96864);

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 96655, 96849) || true) && (!f_10073_96660_96693(op1)[p].Equals(f_10073_96704_96737(op2)[p], TypeCompareKind.AllIgnoreOptions))
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 96655, 96849);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 96817, 96830);

                            return false;
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 96655, 96849);
                        }
                    }
                }
                catch (System.Exception)
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoopByException(10073, 1, 287);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoop(10073, 1, 287);
                }
                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 96880, 97018) || true) && (!f_10073_96885_96956(f_10073_96885_96899(op1), f_10073_96907_96921(op2), TypeCompareKind.AllIgnoreOptions))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 96880, 97018);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 96990, 97003);

                    return false;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 96880, 97018);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 97034, 97046);

                return true;
                DynAbs.Tracing.TraceSender.TraceExitStaticMethod(10073, 96360, 97057);

                int
                f_10073_96460_96478(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                this_param)
                {
                    var return_v = this_param.ParameterCount;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 96460, 96478);
                    return return_v;
                }


                int
                f_10073_96482_96500(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                this_param)
                {
                    var return_v = this_param.ParameterCount;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 96482, 96500);
                    return return_v;
                }


                int
                f_10073_96598_96616(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                this_param)
                {
                    var return_v = this_param.ParameterCount;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 96598, 96616);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations>
                f_10073_96660_96693(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                this_param)
                {
                    var return_v = this_param.ParameterTypesWithAnnotations;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 96660, 96693);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations>
                f_10073_96704_96737(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                this_param)
                {
                    var return_v = this_param.ParameterTypesWithAnnotations;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 96704, 96737);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                f_10073_96885_96899(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                this_param)
                {
                    var return_v = this_param.ReturnType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 96885, 96899);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                f_10073_96907_96921(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                this_param)
                {
                    var return_v = this_param.ReturnType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 96907, 96921);
                    return return_v;
                }


                bool
                f_10073_96885_96956(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                t2, Microsoft.CodeAnalysis.TypeCompareKind
                compareKind)
                {
                    var return_v = this_param.Equals(t2, compareKind);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 96885, 96956);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10073, 96360, 97057);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10073, 96360, 97057);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private void CheckForEqualityAndGetHashCode(DiagnosticBag diagnostics)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10073, 97069, 98930);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 97164, 97340) || true) && (f_10073_97168_97190(this))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 97164, 97340);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 97318, 97325);

                    return;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 97164, 97340);
                }

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 97356, 97575) || true) && (f_10073_97360_97368())
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 97356, 97575);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 97553, 97560);

                    return;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 97356, 97575);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 97591, 97760);

                bool
                hasOp = f_10073_97604_97664(this, WellKnownMemberNames.EqualityOperatorName).Any() || (DynAbs.Tracing.TraceSender.Expression_False(10073, 97604, 97759) || f_10073_97691_97753(this, WellKnownMemberNames.InequalityOperatorName).Any())
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 97774, 97838);

                bool
                overridesEquals = f_10073_97797_97837(this, "Equals")
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 97854, 98919) || true) && (hasOp || (DynAbs.Tracing.TraceSender.Expression_False(10073, 97858, 97882) || overridesEquals))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 97854, 98919);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 97916, 97982);

                    bool
                    overridesGHC = f_10073_97936_97981(this, "GetHashCode")
                    ;

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 98000, 98291) || true) && (overridesEquals && (DynAbs.Tracing.TraceSender.Expression_True(10073, 98004, 98036) && !overridesGHC))
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 98000, 98291);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 98191, 98272);

                        f_10073_98191_98271(                    // CS0659: 'C' overrides Object.Equals(object o) but does not override Object.GetHashCode()
                                            diagnostics, ErrorCode.WRN_EqualsWithoutGetHashCode, f_10073_98247_98261(this)[0], this);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 98000, 98291);
                    }

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 98311, 98598) || true) && (hasOp && (DynAbs.Tracing.TraceSender.Expression_True(10073, 98315, 98340) && !overridesEquals))
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 98311, 98598);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 98499, 98579);

                        f_10073_98499_98578(                    // CS0660: 'C' defines operator == or operator != but does not override Object.Equals(object o)
                                            diagnostics, ErrorCode.WRN_EqualityOpWithoutEquals, f_10073_98554_98568(this)[0], this);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 98311, 98598);
                    }

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 98618, 98904) || true) && (hasOp && (DynAbs.Tracing.TraceSender.Expression_True(10073, 98622, 98644) && !overridesGHC))
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 98618, 98904);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 98800, 98885);

                        f_10073_98800_98884(                    // CS0661: 'C' defines operator == or operator != but does not override Object.GetHashCode()
                                            diagnostics, ErrorCode.WRN_EqualityOpWithoutGetHashCode, f_10073_98860_98874(this)[0], this);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 98618, 98904);
                    }
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 97854, 98919);
                }
                DynAbs.Tracing.TraceSender.TraceExitMethod(10073, 97069, 98930);

                bool
                f_10073_97168_97190(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                type)
                {
                    var return_v = type.IsInterfaceType();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 97168, 97190);
                    return return_v;
                }


                bool
                f_10073_97360_97368()
                {
                    var return_v = IsRecord;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 97360, 97368);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol>
                f_10073_97604_97664(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                this_param, string
                name)
                {
                    var return_v = this_param.GetOperators(name);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 97604, 97664);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol>
                f_10073_97691_97753(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                this_param, string
                name)
                {
                    var return_v = this_param.GetOperators(name);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 97691, 97753);
                    return return_v;
                }


                bool
                f_10073_97797_97837(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                this_param, string
                name)
                {
                    var return_v = this_param.TypeOverridesObjectMethod(name);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 97797, 97837);
                    return return_v;
                }


                bool
                f_10073_97936_97981(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                this_param, string
                name)
                {
                    var return_v = this_param.TypeOverridesObjectMethod(name);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 97936, 97981);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Location>
                f_10073_98247_98261(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                this_param)
                {
                    var return_v = this_param.Locations;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 98247, 98261);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo
                f_10073_98191_98271(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, Microsoft.CodeAnalysis.Location
                location, params object[]
                args)
                {
                    var return_v = diagnostics.Add(code, location, args);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 98191, 98271);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Location>
                f_10073_98554_98568(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                this_param)
                {
                    var return_v = this_param.Locations;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 98554, 98568);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo
                f_10073_98499_98578(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, Microsoft.CodeAnalysis.Location
                location, params object[]
                args)
                {
                    var return_v = diagnostics.Add(code, location, args);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 98499, 98578);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Location>
                f_10073_98860_98874(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                this_param)
                {
                    var return_v = this_param.Locations;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 98860, 98874);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo
                f_10073_98800_98884(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, Microsoft.CodeAnalysis.Location
                location, params object[]
                args)
                {
                    var return_v = diagnostics.Add(code, location, args);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 98800, 98884);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10073, 97069, 98930);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10073, 97069, 98930);
            }
        }

        private bool TypeOverridesObjectMethod(string name)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10073, 98942, 99427);
                try
                {
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 99018, 99389);
                    foreach (var method in f_10073_99041_99085_I(f_10073_99041_99062(this, name).OfType<MethodSymbol>()))
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 99018, 99389);

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 99119, 99374) || true) && (f_10073_99123_99140(method) && (DynAbs.Tracing.TraceSender.Expression_True(10073, 99123, 99301) && f_10073_99144_99249(f_10073_99144_99237(f_10073_99144_99222(method, this, requireSameReturnType: false))) == Microsoft.CodeAnalysis.SpecialType.System_Object))
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 99119, 99374);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 99343, 99355);

                            return true;
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 99119, 99374);
                        }
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 99018, 99389);
                    }
                }
                catch (System.Exception)
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoopByException(10073, 1, 372);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoop(10073, 1, 372);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 99403, 99416);

                return false;
                DynAbs.Tracing.TraceSender.TraceExitMethod(10073, 98942, 99427);

                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>
                f_10073_99041_99062(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                this_param, string
                name)
                {
                    var return_v = this_param.GetMembers(name);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 99041, 99062);
                    return return_v;
                }


                bool
                f_10073_99123_99140(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                this_param)
                {
                    var return_v = this_param.IsOverride;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 99123, 99140);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                f_10073_99144_99222(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                accessingTypeOpt, bool
                requireSameReturnType)
                {
                    var return_v = this_param.GetConstructedLeastOverriddenMethod((Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol)accessingTypeOpt, requireSameReturnType: requireSameReturnType);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 99144, 99222);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                f_10073_99144_99237(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                this_param)
                {
                    var return_v = this_param.ContainingType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 99144, 99237);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SpecialType
                f_10073_99144_99249(Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                this_param)
                {
                    var return_v = this_param.SpecialType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 99144, 99249);
                    return return_v;
                }


                System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol>
                f_10073_99041_99085_I(System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol>
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 99041, 99085);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10073, 98942, 99427);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10073, 98942, 99427);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private void CheckFiniteFlatteningGraph(DiagnosticBag diagnostics)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10073, 99439, 100479);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 99530, 99591);

                f_10073_99530_99590(f_10073_99543_99589(this, f_10073_99565_99588(this)));

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 99605, 99645) || true) && (f_10073_99609_99631(this) == 0)
                )
                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 99605, 99645);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 99638, 99645);

                    return;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 99605, 99645);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 99659, 99762);

                var
                instanceMap = f_10073_99677_99761(ReferenceEqualityComparer.Instance)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 99776, 99804);

                f_10073_99776_99803(instanceMap, this, this);
                try
                {
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 99818, 100468);
                    foreach (var m in f_10073_99836_99862_I(f_10073_99836_99862(this)))
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 99818, 100468);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 99896, 99921);

                        var
                        f = m as FieldSymbol
                        ;

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 99939, 100016) || true) && (f is null || (DynAbs.Tracing.TraceSender.Expression_False(10073, 99943, 99967) || f_10073_99956_99967_M(!f.IsStatic)) || (DynAbs.Tracing.TraceSender.Expression_False(10073, 99943, 100005) || f_10073_99971_99986(f_10073_99971_99977(f)) != TypeKind.Struct))
                        )
                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 99939, 100016);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 100007, 100016);

                            continue;
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 99939, 100016);
                        }
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 100034, 100069);

                        var
                        type = (NamedTypeSymbol)f_10073_100062_100068(f)
                        ;

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 100087, 100453) || true) && (f_10073_100091_100139(this, type, instanceMap))
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 100087, 100453);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 100275, 100349);

                            f_10073_100275_100348(                    // Struct member '{0}' of type '{1}' causes a cycle in the struct layout
                                                diagnostics, ErrorCode.ERR_StructLayoutCycle, f_10073_100324_100335(f)[0], f, type);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 100427, 100434);

                            return;
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 100087, 100453);
                        }
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 99818, 100468);
                    }
                }
                catch (System.Exception)
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoopByException(10073, 1, 651);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoop(10073, 1, 651);
                }
                DynAbs.Tracing.TraceSender.TraceExitMethod(10073, 99439, 100479);

                Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                f_10073_99565_99588(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                this_param)
                {
                    var return_v = this_param.OriginalDefinition;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 99565, 99588);
                    return return_v;
                }


                bool
                f_10073_99543_99589(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                objA, Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                objB)
                {
                    var return_v = ReferenceEquals((object)objA, (object)objB);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 99543, 99589);
                    return return_v;
                }


                int
                f_10073_99530_99590(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 99530, 99590);
                    return 0;
                }


                int
                f_10073_99609_99631(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                this_param)
                {
                    var return_v = this_param.AllTypeArgumentCount();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 99609, 99631);
                    return return_v;
                }


                System.Collections.Generic.Dictionary<Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol, Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol>
                f_10073_99677_99761(Roslyn.Utilities.ReferenceEqualityComparer
                comparer)
                {
                    var return_v = new System.Collections.Generic.Dictionary<Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol, Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol>((System.Collections.Generic.IEqualityComparer<Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol>)comparer);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 99677, 99761);
                    return return_v;
                }


                int
                f_10073_99776_99803(System.Collections.Generic.Dictionary<Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol, Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol>
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                key, Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                value)
                {
                    this_param.Add((Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol)key, (Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol)value);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 99776, 99803);
                    return 0;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>
                f_10073_99836_99862(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                this_param)
                {
                    var return_v = this_param.GetMembersUnordered();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 99836, 99862);
                    return return_v;
                }


                bool
                f_10073_99956_99967_M(bool
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 99956, 99967);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                f_10073_99971_99977(Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 99971, 99977);
                    return return_v;
                }


                Microsoft.CodeAnalysis.TypeKind
                f_10073_99971_99986(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                this_param)
                {
                    var return_v = this_param.TypeKind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 99971, 99986);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                f_10073_100062_100068(Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 100062, 100068);
                    return return_v;
                }


                bool
                f_10073_100091_100139(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                top, Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                t, System.Collections.Generic.Dictionary<Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol, Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol>
                instanceMap)
                {
                    var return_v = InfiniteFlatteningGraph(top, t, instanceMap);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 100091, 100139);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Location>
                f_10073_100324_100335(Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol
                this_param)
                {
                    var return_v = this_param.Locations;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 100324, 100335);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo
                f_10073_100275_100348(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, Microsoft.CodeAnalysis.Location
                location, params object[]
                args)
                {
                    var return_v = diagnostics.Add(code, location, args);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 100275, 100348);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>
                f_10073_99836_99862_I(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 99836, 99862);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10073, 99439, 100479);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10073, 99439, 100479);
            }
        }

        private static bool InfiniteFlatteningGraph(SourceMemberContainerTypeSymbol top, NamedTypeSymbol t, Dictionary<NamedTypeSymbol, NamedTypeSymbol> instanceMap)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterStaticMethod(10073, 100491, 101860);
                Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol oldInstance = default(Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 100673, 100718) || true) && (!f_10073_100678_100703(t))
                )
                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 100673, 100718);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 100705, 100718);

                    return false;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 100673, 100718);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 100732, 100769);

                var
                tOriginal = f_10073_100748_100768(t)
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 100783, 101849) || true) && (f_10073_100787_100842(instanceMap, tOriginal, out oldInstance))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 100783, 101849);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 100992, 101113);

                    return (!f_10073_101001_101076(oldInstance, t, TypeCompareKind.AllNullableIgnoreOptions)) && (DynAbs.Tracing.TraceSender.Expression_True(10073, 100999, 101112) && f_10073_101081_101112(tOriginal, top));
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 100783, 101849);
                }

                else

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 100783, 101849);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 101179, 101209);

                    f_10073_101179_101208(instanceMap, tOriginal, t);
                    try
                    {
                        try
                        {
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 101271, 101665);
                            foreach (var m in f_10073_101289_101312_I(f_10073_101289_101312(t)))
                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 101271, 101665);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 101362, 101387);

                                var
                                f = m as FieldSymbol
                                ;

                                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 101413, 101490) || true) && (f is null || (DynAbs.Tracing.TraceSender.Expression_False(10073, 101417, 101441) || f_10073_101430_101441_M(!f.IsStatic)) || (DynAbs.Tracing.TraceSender.Expression_False(10073, 101417, 101479) || f_10073_101445_101460(f_10073_101445_101451(f)) != TypeKind.Struct))
                                )
                                {
                                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 101413, 101490);
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 101481, 101490);

                                    continue;
                                    DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 101413, 101490);
                                }
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 101516, 101551);

                                var
                                type = (NamedTypeSymbol)f_10073_101544_101550(f)
                                ;

                                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 101577, 101642) || true) && (f_10073_101581_101628(top, type, instanceMap))
                                )
                                {
                                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 101577, 101642);
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 101630, 101642);

                                    return true;
                                    DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 101577, 101642);
                                }
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 101271, 101665);
                            }
                        }
                        catch (System.Exception)
                        {
                            DynAbs.Tracing.TraceSender.TraceExitLoopByException(10073, 1, 395);
                            throw;
                        }
                        finally
                        {
                            DynAbs.Tracing.TraceSender.TraceExitLoop(10073, 1, 395);
                        }
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 101687, 101700);

                        return false;
                    }
                    finally
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinally(10073, 101737, 101834);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 101785, 101815);

                        f_10073_101785_101814(instanceMap, tOriginal);
                        DynAbs.Tracing.TraceSender.TraceExitFinally(10073, 101737, 101834);
                    }
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 100783, 101849);
                }
                DynAbs.Tracing.TraceSender.TraceExitStaticMethod(10073, 100491, 101860);

                bool
                f_10073_100678_100703(Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                type)
                {
                    var return_v = type.ContainsTypeParameter();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 100678, 100703);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                f_10073_100748_100768(Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                this_param)
                {
                    var return_v = this_param.OriginalDefinition;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 100748, 100768);
                    return return_v;
                }


                bool
                f_10073_100787_100842(System.Collections.Generic.Dictionary<Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol, Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol>
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                key, out Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                value)
                {
                    var return_v = this_param.TryGetValue(key, out value);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 100787, 100842);
                    return return_v;
                }


                bool
                f_10073_101001_101076(Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                left, Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                right, Microsoft.CodeAnalysis.TypeCompareKind
                comparison)
                {
                    var return_v = TypeSymbol.Equals((Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol)left, (Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol)right, comparison);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 101001, 101076);
                    return return_v;
                }


                bool
                f_10073_101081_101112(Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                objA, Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                objB)
                {
                    var return_v = ReferenceEquals((object)objA, (object)objB);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 101081, 101112);
                    return return_v;
                }


                int
                f_10073_101179_101208(System.Collections.Generic.Dictionary<Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol, Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol>
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                key, Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                value)
                {
                    this_param.Add(key, value);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 101179, 101208);
                    return 0;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>
                f_10073_101289_101312(Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                this_param)
                {
                    var return_v = this_param.GetMembersUnordered();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 101289, 101312);
                    return return_v;
                }


                bool
                f_10073_101430_101441_M(bool
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 101430, 101441);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                f_10073_101445_101451(Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 101445, 101451);
                    return return_v;
                }


                Microsoft.CodeAnalysis.TypeKind
                f_10073_101445_101460(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                this_param)
                {
                    var return_v = this_param.TypeKind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 101445, 101460);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                f_10073_101544_101550(Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 101544, 101550);
                    return return_v;
                }


                bool
                f_10073_101581_101628(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                top, Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                t, System.Collections.Generic.Dictionary<Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol, Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol>
                instanceMap)
                {
                    var return_v = InfiniteFlatteningGraph(top, t, instanceMap);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 101581, 101628);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>
                f_10073_101289_101312_I(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 101289, 101312);
                    return return_v;
                }


                bool
                f_10073_101785_101814(System.Collections.Generic.Dictionary<Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol, Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol>
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                key)
                {
                    var return_v = this_param.Remove(key);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 101785, 101814);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10073, 100491, 101860);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10073, 100491, 101860);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private void CheckSequentialOnPartialType(DiagnosticBag diagnostics)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10073, 101872, 103053);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 101965, 102080) || true) && (f_10073_101969_101979_M(!IsPartial) || (DynAbs.Tracing.TraceSender.Expression_False(10073, 101969, 102024) || this.Layout.Kind != LayoutKind.Sequential))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 101965, 102080);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 102058, 102065);

                    return;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 101965, 102080);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 102096, 102136);

                SyntaxReference?
                whereFoundField = null
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 102150, 102243) || true) && (this.SyntaxReferences.Length <= 1)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 102150, 102243);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 102221, 102228);

                    return;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 102150, 102243);
                }
                try
                {
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 102259, 103042);
                    foreach (var syntaxRef in f_10073_102285_102306_I(f_10073_102285_102306(this)))
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 102259, 103042);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 102340, 102400);

                        var
                        syntax = f_10073_102353_102374(syntaxRef) as TypeDeclarationSyntax
                        ;

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 102418, 102506) || true) && (syntax == null)
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 102418, 102506);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 102478, 102487);

                            continue;
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 102418, 102506);
                        }
                        try
                        {
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 102526, 103027);
                            foreach (var m in f_10073_102544_102558_I(f_10073_102544_102558(syntax)))
                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 102526, 103027);

                                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 102600, 103008) || true) && (f_10073_102604_102622(m))
                                )

                                {
                                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 102600, 103008);

                                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 102672, 102929) || true) && (whereFoundField != null && (DynAbs.Tracing.TraceSender.Expression_True(10073, 102676, 102731) && whereFoundField != syntaxRef))
                                    )

                                    {
                                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 102672, 102929);
                                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 102789, 102865);

                                        f_10073_102789_102864(diagnostics, ErrorCode.WRN_SequentialOnPartialClass, f_10073_102845_102854()[0], this);
                                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 102895, 102902);

                                        return;
                                        DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 102672, 102929);
                                    }
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 102957, 102985);

                                    whereFoundField = syntaxRef;
                                    DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 102600, 103008);
                                }
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 102526, 103027);
                            }
                        }
                        catch (System.Exception)
                        {
                            DynAbs.Tracing.TraceSender.TraceExitLoopByException(10073, 1, 502);
                            throw;
                        }
                        finally
                        {
                            DynAbs.Tracing.TraceSender.TraceExitLoop(10073, 1, 502);
                        }
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 102259, 103042);
                    }
                }
                catch (System.Exception)
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoopByException(10073, 1, 784);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoop(10073, 1, 784);
                }
                DynAbs.Tracing.TraceSender.TraceExitMethod(10073, 101872, 103053);

                bool
                f_10073_101969_101979_M(bool
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 101969, 101979);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.SyntaxReference>
                f_10073_102285_102306(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                this_param)
                {
                    var return_v = this_param.SyntaxReferences;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 102285, 102306);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SyntaxNode
                f_10073_102353_102374(Microsoft.CodeAnalysis.SyntaxReference
                this_param)
                {
                    var return_v = this_param.GetSyntax();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 102353, 102374);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.MemberDeclarationSyntax>
                f_10073_102544_102558(Microsoft.CodeAnalysis.CSharp.Syntax.TypeDeclarationSyntax
                this_param)
                {
                    var return_v = this_param.Members;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 102544, 102558);
                    return return_v;
                }


                bool
                f_10073_102604_102622(Microsoft.CodeAnalysis.CSharp.Syntax.MemberDeclarationSyntax
                m)
                {
                    var return_v = HasInstanceData(m);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 102604, 102622);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Location>
                f_10073_102845_102854()
                {
                    var return_v = Locations;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 102845, 102854);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo
                f_10073_102789_102864(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, Microsoft.CodeAnalysis.Location
                location, params object[]
                args)
                {
                    var return_v = diagnostics.Add(code, location, args);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 102789, 102864);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.MemberDeclarationSyntax>
                f_10073_102544_102558_I(Microsoft.CodeAnalysis.SyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.MemberDeclarationSyntax>
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 102544, 102558);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.SyntaxReference>
                f_10073_102285_102306_I(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.SyntaxReference>
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 102285, 102306);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10073, 101872, 103053);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10073, 101872, 103053);
            }
        }

        private static bool HasInstanceData(MemberDeclarationSyntax m)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterStaticMethod(10073, 103065, 104760);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 103152, 104749);

                switch (f_10073_103160_103168(m))
                {

                    case SyntaxKind.FieldDeclaration:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 103152, 104749);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 103257, 103299);

                        var
                        fieldDecl = (FieldDeclarationSyntax)m
                        ;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 103321, 103510);

                        return
                                                !f_10073_103354_103417(f_10073_103371_103390(fieldDecl), SyntaxKind.StaticKeyword) && (DynAbs.Tracing.TraceSender.Expression_True(10073, 103353, 103509) && !f_10073_103447_103509(f_10073_103464_103483(fieldDecl), SyntaxKind.ConstKeyword));
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 103152, 104749);

                    case SyntaxKind.PropertyDeclaration:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 103152, 104749);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 103624, 103672);

                        var
                        propertyDecl = (PropertyDeclarationSyntax)m
                        ;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 103694, 104168);

                        return
                                                !f_10073_103727_103793(f_10073_103744_103766(propertyDecl), SyntaxKind.StaticKeyword) && (DynAbs.Tracing.TraceSender.Expression_True(10073, 103726, 103891) && !f_10073_103823_103891(f_10073_103840_103862(propertyDecl), SyntaxKind.AbstractKeyword)) && (DynAbs.Tracing.TraceSender.Expression_True(10073, 103726, 103987) && !f_10073_103921_103987(f_10073_103938_103960(propertyDecl), SyntaxKind.ExternKeyword)) && (DynAbs.Tracing.TraceSender.Expression_True(10073, 103726, 104049) && f_10073_104016_104041(propertyDecl) != null) && (DynAbs.Tracing.TraceSender.Expression_True(10073, 103726, 104167) && f_10073_104078_104167(f_10073_104082_104117(f_10073_104082_104107(propertyDecl)), a => a.Body == null && a.ExpressionBody == null));
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 103152, 104749);

                    case SyntaxKind.EventFieldDeclaration:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 103152, 104749);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 104299, 104351);

                        var
                        eventFieldDecl = (EventFieldDeclarationSyntax)m
                        ;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 104373, 104673);

                        return
                                                !f_10073_104406_104474(f_10073_104423_104447(eventFieldDecl), SyntaxKind.StaticKeyword) && (DynAbs.Tracing.TraceSender.Expression_True(10073, 104405, 104574) && !f_10073_104504_104574(f_10073_104521_104545(eventFieldDecl), SyntaxKind.AbstractKeyword)) && (DynAbs.Tracing.TraceSender.Expression_True(10073, 104405, 104672) && !f_10073_104604_104672(f_10073_104621_104645(eventFieldDecl), SyntaxKind.ExternKeyword));
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 103152, 104749);

                    default:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 103152, 104749);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 104721, 104734);

                        return false;
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 103152, 104749);
                }
                DynAbs.Tracing.TraceSender.TraceExitStaticMethod(10073, 103065, 104760);

                Microsoft.CodeAnalysis.CSharp.SyntaxKind
                f_10073_103160_103168(Microsoft.CodeAnalysis.CSharp.Syntax.MemberDeclarationSyntax
                this_param)
                {
                    var return_v = this_param.Kind();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 103160, 103168);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SyntaxTokenList
                f_10073_103371_103390(Microsoft.CodeAnalysis.CSharp.Syntax.FieldDeclarationSyntax
                this_param)
                {
                    var return_v = this_param.Modifiers;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 103371, 103390);
                    return return_v;
                }


                bool
                f_10073_103354_103417(Microsoft.CodeAnalysis.SyntaxTokenList
                modifiers, Microsoft.CodeAnalysis.CSharp.SyntaxKind
                modifier)
                {
                    var return_v = ContainsModifier(modifiers, modifier);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 103354, 103417);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SyntaxTokenList
                f_10073_103464_103483(Microsoft.CodeAnalysis.CSharp.Syntax.FieldDeclarationSyntax
                this_param)
                {
                    var return_v = this_param.Modifiers;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 103464, 103483);
                    return return_v;
                }


                bool
                f_10073_103447_103509(Microsoft.CodeAnalysis.SyntaxTokenList
                modifiers, Microsoft.CodeAnalysis.CSharp.SyntaxKind
                modifier)
                {
                    var return_v = ContainsModifier(modifiers, modifier);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 103447, 103509);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SyntaxTokenList
                f_10073_103744_103766(Microsoft.CodeAnalysis.CSharp.Syntax.PropertyDeclarationSyntax
                this_param)
                {
                    var return_v = this_param.Modifiers;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 103744, 103766);
                    return return_v;
                }


                bool
                f_10073_103727_103793(Microsoft.CodeAnalysis.SyntaxTokenList
                modifiers, Microsoft.CodeAnalysis.CSharp.SyntaxKind
                modifier)
                {
                    var return_v = ContainsModifier(modifiers, modifier);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 103727, 103793);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SyntaxTokenList
                f_10073_103840_103862(Microsoft.CodeAnalysis.CSharp.Syntax.PropertyDeclarationSyntax
                this_param)
                {
                    var return_v = this_param.Modifiers;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 103840, 103862);
                    return return_v;
                }


                bool
                f_10073_103823_103891(Microsoft.CodeAnalysis.SyntaxTokenList
                modifiers, Microsoft.CodeAnalysis.CSharp.SyntaxKind
                modifier)
                {
                    var return_v = ContainsModifier(modifiers, modifier);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 103823, 103891);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SyntaxTokenList
                f_10073_103938_103960(Microsoft.CodeAnalysis.CSharp.Syntax.PropertyDeclarationSyntax
                this_param)
                {
                    var return_v = this_param.Modifiers;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 103938, 103960);
                    return return_v;
                }


                bool
                f_10073_103921_103987(Microsoft.CodeAnalysis.SyntaxTokenList
                modifiers, Microsoft.CodeAnalysis.CSharp.SyntaxKind
                modifier)
                {
                    var return_v = ContainsModifier(modifiers, modifier);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 103921, 103987);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Syntax.AccessorListSyntax?
                f_10073_104016_104041(Microsoft.CodeAnalysis.CSharp.Syntax.PropertyDeclarationSyntax
                this_param)
                {
                    var return_v = this_param.AccessorList;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 104016, 104041);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Syntax.AccessorListSyntax
                f_10073_104082_104107(Microsoft.CodeAnalysis.CSharp.Syntax.PropertyDeclarationSyntax
                this_param)
                {
                    var return_v = this_param.AccessorList;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 104082, 104107);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.AccessorDeclarationSyntax>
                f_10073_104082_104117(Microsoft.CodeAnalysis.CSharp.Syntax.AccessorListSyntax
                this_param)
                {
                    var return_v = this_param.Accessors;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 104082, 104117);
                    return return_v;
                }


                bool
                f_10073_104078_104167(Microsoft.CodeAnalysis.SyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.AccessorDeclarationSyntax>
                list, System.Func<Microsoft.CodeAnalysis.CSharp.Syntax.AccessorDeclarationSyntax, bool>
                predicate)
                {
                    var return_v = All(list, predicate);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 104078, 104167);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SyntaxTokenList
                f_10073_104423_104447(Microsoft.CodeAnalysis.CSharp.Syntax.EventFieldDeclarationSyntax
                this_param)
                {
                    var return_v = this_param.Modifiers;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 104423, 104447);
                    return return_v;
                }


                bool
                f_10073_104406_104474(Microsoft.CodeAnalysis.SyntaxTokenList
                modifiers, Microsoft.CodeAnalysis.CSharp.SyntaxKind
                modifier)
                {
                    var return_v = ContainsModifier(modifiers, modifier);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 104406, 104474);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SyntaxTokenList
                f_10073_104521_104545(Microsoft.CodeAnalysis.CSharp.Syntax.EventFieldDeclarationSyntax
                this_param)
                {
                    var return_v = this_param.Modifiers;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 104521, 104545);
                    return return_v;
                }


                bool
                f_10073_104504_104574(Microsoft.CodeAnalysis.SyntaxTokenList
                modifiers, Microsoft.CodeAnalysis.CSharp.SyntaxKind
                modifier)
                {
                    var return_v = ContainsModifier(modifiers, modifier);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 104504, 104574);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SyntaxTokenList
                f_10073_104621_104645(Microsoft.CodeAnalysis.CSharp.Syntax.EventFieldDeclarationSyntax
                this_param)
                {
                    var return_v = this_param.Modifiers;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 104621, 104645);
                    return return_v;
                }


                bool
                f_10073_104604_104672(Microsoft.CodeAnalysis.SyntaxTokenList
                modifiers, Microsoft.CodeAnalysis.CSharp.SyntaxKind
                modifier)
                {
                    var return_v = ContainsModifier(modifiers, modifier);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 104604, 104672);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10073, 103065, 104760);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10073, 103065, 104760);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private static bool All<T>(SyntaxList<T> list, Func<T, bool> predicate) where T : CSharpSyntaxNode
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterStaticMethod(10073, 104772, 104992);
                try
                {
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 104895, 104953);
                    foreach (var t in f_10073_104913_104917_I<T>(list))
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 104895, 104953);

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 104921, 104951) || true) && (f_10073_104925_104937<T>(predicate, t))
                        )
                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 104921, 104951);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 104939, 104951);

                            return true;
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 104921, 104951);
                        }
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 104895, 104953);
                    }
                }
                catch (System.Exception)
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoopByException(10073, 1, 59);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoop(10073, 1, 59);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 104953, 104954);
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 104968, 104981);

                return false;
                DynAbs.Tracing.TraceSender.TraceExitStaticMethod(10073, 104772, 104992);

                bool
                f_10073_104925_104937<T>(System.Func<T, bool>
                this_param, T
                arg) where T : CSharpSyntaxNode

                {
                    var return_v = this_param.Invoke(arg);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 104925, 104937);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SyntaxList<T>
                f_10073_104913_104917_I<T>(Microsoft.CodeAnalysis.SyntaxList<T>
                i) where T : CSharpSyntaxNode

                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 104913, 104917);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10073, 104772, 104992);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10073, 104772, 104992);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private static bool ContainsModifier(SyntaxTokenList modifiers, SyntaxKind modifier)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterStaticMethod(10073, 105004, 105221);
                try
                {
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 105113, 105182);
                    foreach (var m in f_10073_105131_105140_I(modifiers))
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 105113, 105182);

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 105144, 105180) || true) && (m.IsKind(modifier))
                        )
                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 105144, 105180);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 105168, 105180);

                            return true;
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 105144, 105180);
                        }
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 105113, 105182);
                    }
                }
                catch (System.Exception)
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoopByException(10073, 1, 70);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoop(10073, 1, 70);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 105182, 105183);
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 105197, 105210);

                return false;
                DynAbs.Tracing.TraceSender.TraceExitStaticMethod(10073, 105004, 105221);

                Microsoft.CodeAnalysis.SyntaxTokenList
                f_10073_105131_105140_I(Microsoft.CodeAnalysis.SyntaxTokenList
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 105131, 105140);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10073, 105004, 105221);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10073, 105004, 105221);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private Dictionary<string, ImmutableArray<Symbol>> MakeAllMembers(DiagnosticBag diagnostics)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10073, 105233, 106391);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 105350, 105407);

                Dictionary<string, ImmutableArray<Symbol>>
                membersByName
                = default(Dictionary<string, ImmutableArray<Symbol>>);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 105421, 105478);

                var
                membersAndInitializers = f_10073_105450_105477(this)
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 105719, 106275) || true) && (!membersAndInitializers.HaveIndexers && (DynAbs.Tracing.TraceSender.Expression_True(10073, 105723, 105780) && f_10073_105763_105780_M(!this.IsTupleType)) && (DynAbs.Tracing.TraceSender.Expression_True(10073, 105723, 105838) && _lazyEarlyAttributeDecodingMembersDictionary is object))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 105719, 106275);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 105872, 105933);

                    membersByName = _lazyEarlyAttributeDecodingMembersDictionary;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 105719, 106275);
                }

                else

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 105719, 106275);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 105999, 106111);

                    membersByName = membersAndInitializers.NonTypeMembers.ToDictionary(s => s.Name, StringOrdinalComparer.Instance);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 106190, 106260);

                    f_10073_106190_106259(membersByName, f_10073_106232_106258(this));
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 105719, 106275);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 106291, 106343);

                f_10073_106291_106342(this, ref membersByName, diagnostics);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 106359, 106380);

                return membersByName;
                DynAbs.Tracing.TraceSender.TraceExitMethod(10073, 105233, 106391);

                Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol.MembersAndInitializers
                f_10073_105450_105477(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                this_param)
                {
                    var return_v = this_param.GetMembersAndInitializers();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 105450, 105477);
                    return return_v;
                }


                bool
                f_10073_105763_105780_M(bool
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 105763, 105780);
                    return return_v;
                }


                System.Collections.Generic.Dictionary<string, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol>>
                f_10073_106232_106258(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                this_param)
                {
                    var return_v = this_param.GetTypeMembersDictionary();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 106232, 106258);
                    return return_v;
                }


                int
                f_10073_106190_106259(System.Collections.Generic.Dictionary<string, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>>
                membersByName, System.Collections.Generic.Dictionary<string, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol>>
                typesByName)
                {
                    AddNestedTypesToDictionary(membersByName, typesByName);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 106190, 106259);
                    return 0;
                }


                int
                f_10073_106291_106342(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                this_param, ref System.Collections.Generic.Dictionary<string, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>>
                membersByName, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    this_param.MergePartialMembers(ref membersByName, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 106291, 106342);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10073, 105233, 106391);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10073, 105233, 106391);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private static void AddNestedTypesToDictionary(Dictionary<string, ImmutableArray<Symbol>> membersByName, Dictionary<string, ImmutableArray<NamedTypeSymbol>> typesByName)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterStaticMethod(10073, 106403, 107244);
                try
                {
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 106597, 107233);
                    foreach (var pair in f_10073_106618_106629_I(typesByName))
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 106597, 107233);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 106663, 106686);

                        string
                        name = pair.Key
                        ;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 106704, 106755);

                        ImmutableArray<NamedTypeSymbol>
                        types = pair.Value
                        ;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 106773, 106844);

                        ImmutableArray<Symbol>
                        typesAsSymbols = f_10073_106813_106843(types)
                        ;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 106864, 106902);

                        ImmutableArray<Symbol>
                        membersForName
                        = default(ImmutableArray<Symbol>);

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 106920, 107218) || true) && (f_10073_106924_106975(membersByName, name, out membersForName))
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 106920, 107218);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 107017, 107077);

                            membersByName[name] = membersForName.Concat(typesAsSymbols);
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 106920, 107218);
                        }

                        else

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 106920, 107218);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 107159, 107199);

                            f_10073_107159_107198(membersByName, name, typesAsSymbols);
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 106920, 107218);
                        }
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 106597, 107233);
                    }
                }
                catch (System.Exception)
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoopByException(10073, 1, 637);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoop(10073, 1, 637);
                }
                DynAbs.Tracing.TraceSender.TraceExitStaticMethod(10073, 106403, 107244);

                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>
                f_10073_106813_106843(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol>
                from)
                {
                    var return_v = StaticCast<Symbol>.From(from);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 106813, 106843);
                    return return_v;
                }


                bool
                f_10073_106924_106975(System.Collections.Generic.Dictionary<string, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>>
                this_param, string
                key, out System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>
                value)
                {
                    var return_v = this_param.TryGetValue(key, out value);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 106924, 106975);
                    return return_v;
                }


                int
                f_10073_107159_107198(System.Collections.Generic.Dictionary<string, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>>
                this_param, string
                key, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>
                value)
                {
                    this_param.Add(key, value);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 107159, 107198);
                    return 0;
                }


                System.Collections.Generic.Dictionary<string, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol>>
                f_10073_106618_106629_I(System.Collections.Generic.Dictionary<string, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol>>
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 106618, 106629);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10073, 106403, 107244);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10073, 106403, 107244);
            }
        }
        private sealed class DeclaredMembersAndInitializersBuilder
        {
            public ArrayBuilder<Symbol> NonTypeMembers;

            public readonly ArrayBuilder<ArrayBuilder<FieldOrPropertyInitializer>> StaticInitializers;

            public readonly ArrayBuilder<ArrayBuilder<FieldOrPropertyInitializer>> InstanceInitializers;

            public bool HaveIndexers;

            public RecordDeclarationSyntax? RecordDeclarationWithParameters;

            public SynthesizedRecordConstructor? RecordPrimaryConstructor;

            public int InstanceInitializersIndexForRecordDeclarationWithParameters;

            public bool IsNullableEnabledForInstanceConstructorsAndFields;

            public bool IsNullableEnabledForStaticConstructorsAndFields;

            public DeclaredMembersAndInitializers ToReadOnlyAndFree()
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(10073, 108470, 109318);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 108560, 109303);

                    return f_10073_108567_109302(f_10073_108624_108659(NonTypeMembers), f_10073_108682_108749(StaticInitializers), f_10073_108772_108841(InstanceInitializers), HaveIndexers, RecordDeclarationWithParameters, RecordPrimaryConstructor, InstanceInitializersIndexForRecordDeclarationWithParameters, isNullableEnabledForInstanceConstructorsAndFields: IsNullableEnabledForInstanceConstructorsAndFields, isNullableEnabledForStaticConstructorsAndFields: IsNullableEnabledForStaticConstructorsAndFields);
                    DynAbs.Tracing.TraceSender.TraceExitMethod(10073, 108470, 109318);

                    System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>
                    f_10073_108624_108659(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbol>
                    this_param)
                    {
                        var return_v = this_param.ToImmutableAndFree();
                        DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 108624, 108659);
                        return return_v;
                    }


                    System.Collections.Immutable.ImmutableArray<System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.FieldOrPropertyInitializer>>
                    f_10073_108682_108749(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbols.FieldOrPropertyInitializer>>
                    initializers)
                    {
                        var return_v = MembersAndInitializersBuilder.ToReadOnlyAndFree(initializers);
                        DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 108682, 108749);
                        return return_v;
                    }


                    System.Collections.Immutable.ImmutableArray<System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.FieldOrPropertyInitializer>>
                    f_10073_108772_108841(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbols.FieldOrPropertyInitializer>>
                    initializers)
                    {
                        var return_v = MembersAndInitializersBuilder.ToReadOnlyAndFree(initializers);
                        DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 108772, 108841);
                        return return_v;
                    }


                    Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol.DeclaredMembersAndInitializers
                    f_10073_108567_109302(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>
                    nonTypeMembers, System.Collections.Immutable.ImmutableArray<System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.FieldOrPropertyInitializer>>
                    staticInitializers, System.Collections.Immutable.ImmutableArray<System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.FieldOrPropertyInitializer>>
                    instanceInitializers, bool
                    haveIndexers, Microsoft.CodeAnalysis.CSharp.Syntax.RecordDeclarationSyntax?
                    recordDeclarationWithParameters, Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedRecordConstructor?
                    recordPrimaryConstructor, int
                    instanceInitializersIndexForRecordDeclarationWithParameters, bool
                    isNullableEnabledForInstanceConstructorsAndFields, bool
                    isNullableEnabledForStaticConstructorsAndFields)
                    {
                        var return_v = new Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol.DeclaredMembersAndInitializers(nonTypeMembers, staticInitializers, instanceInitializers, haveIndexers, recordDeclarationWithParameters, recordPrimaryConstructor, instanceInitializersIndexForRecordDeclarationWithParameters, isNullableEnabledForInstanceConstructorsAndFields: isNullableEnabledForInstanceConstructorsAndFields, isNullableEnabledForStaticConstructorsAndFields: isNullableEnabledForStaticConstructorsAndFields);
                        DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 108567, 109302);
                        return return_v;
                    }

                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10073, 108470, 109318);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10073, 108470, 109318);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }

            public void UpdateIsNullableEnabledForConstructorsAndFields(bool useStatic, CSharpCompilation compilation, CSharpSyntaxNode syntax)
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(10073, 109334, 109709);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 109498, 109587);

                    // LAFHIS
                    //ref bool isNullableEnabled = ref f_10073_109531_109586(this, useStatic);
                    ref bool isNullableEnabled = ref this.GetIsNullableEnabledForConstructorsAndFields(useStatic);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 109531, 109586);

                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 109605, 109694);

                    isNullableEnabled = isNullableEnabled || (DynAbs.Tracing.TraceSender.Expression_False(10073, 109625, 109693) || f_10073_109646_109693(compilation, syntax));
                    DynAbs.Tracing.TraceSender.TraceExitMethod(10073, 109334, 109709);

                    bool
                    f_10073_109531_109586(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol.DeclaredMembersAndInitializersBuilder
                    this_param, bool
                    useStatic)
                    {
                        var return_v = this_param.GetIsNullableEnabledForConstructorsAndFields(useStatic);
                        DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 109531, 109586);
                        return return_v;
                    }


                    bool
                    f_10073_109646_109693(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                    this_param, Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode
                    syntax)
                    {
                        var return_v = this_param.IsNullableAnalysisEnabledIn((Microsoft.CodeAnalysis.SyntaxNode)syntax);
                        DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 109646, 109693);
                        return return_v;
                    }

                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10073, 109334, 109709);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10073, 109334, 109709);
                }
            }

            public void UpdateIsNullableEnabledForConstructorsAndFields(bool useStatic, bool value)
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(10073, 109725, 110014);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 109845, 109934);

                    // LAFHIS
                    //ref bool isNullableEnabled = ref f_10073_109878_109933(this, useStatic);
                    ref bool isNullableEnabled = ref this.GetIsNullableEnabledForConstructorsAndFields(useStatic);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 109878, 109933);

                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 109952, 109999);

                    isNullableEnabled = isNullableEnabled || (DynAbs.Tracing.TraceSender.Expression_False(10073, 109972, 109998) || value);
                    DynAbs.Tracing.TraceSender.TraceExitMethod(10073, 109725, 110014);

                    bool
                    f_10073_109878_109933(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol.DeclaredMembersAndInitializersBuilder
                    this_param, bool
                    useStatic)
                    {
                        var return_v = this_param.GetIsNullableEnabledForConstructorsAndFields(useStatic);
                        DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 109878, 109933);
                        return return_v;
                    }

                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10073, 109725, 110014);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10073, 109725, 110014);
                }
            }

            private ref bool GetIsNullableEnabledForConstructorsAndFields(bool useStatic)
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(10073, 110030, 110286);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 110140, 110271);

                    return ref (DynAbs.Tracing.TraceSender.Conditional_F1(10073, 110151, 110160) || ((useStatic && DynAbs.Tracing.TraceSender.Conditional_F2(10073, 110163, 110214)) || DynAbs.Tracing.TraceSender.Conditional_F3(10073, 110217, 110270))) ? ref IsNullableEnabledForStaticConstructorsAndFields : ref IsNullableEnabledForInstanceConstructorsAndFields;
                    DynAbs.Tracing.TraceSender.TraceExitMethod(10073, 110030, 110286);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10073, 110030, 110286);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10073, 110030, 110286);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }

            public void Free()
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(10073, 110302, 110750);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 110353, 110375);

                    f_10073_110353_110374(NonTypeMembers);
                    try
                    {
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 110395, 110509);
                        foreach (var group in f_10073_110417_110435_I(StaticInitializers))
                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 110395, 110509);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 110477, 110490);

                            f_10073_110477_110489(group);
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 110395, 110509);
                        }
                    }
                    catch (System.Exception)
                    {
                        DynAbs.Tracing.TraceSender.TraceExitLoopByException(10073, 1, 115);
                        throw;
                    }
                    finally
                    {
                        DynAbs.Tracing.TraceSender.TraceExitLoop(10073, 1, 115);
                    }
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 110527, 110553);

                    f_10073_110527_110552(StaticInitializers);
                    try
                    {
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 110573, 110689);
                        foreach (var group in f_10073_110595_110615_I(InstanceInitializers))
                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 110573, 110689);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 110657, 110670);

                            f_10073_110657_110669(group);
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 110573, 110689);
                        }
                    }
                    catch (System.Exception)
                    {
                        DynAbs.Tracing.TraceSender.TraceExitLoopByException(10073, 1, 117);
                        throw;
                    }
                    finally
                    {
                        DynAbs.Tracing.TraceSender.TraceExitLoop(10073, 1, 117);
                    }
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 110707, 110735);

                    f_10073_110707_110734(InstanceInitializers);
                    DynAbs.Tracing.TraceSender.TraceExitMethod(10073, 110302, 110750);

                    int
                    f_10073_110353_110374(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbol>
                    this_param)
                    {
                        this_param.Free();
                        DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 110353, 110374);
                        return 0;
                    }


                    int
                    f_10073_110477_110489(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbols.FieldOrPropertyInitializer>
                    this_param)
                    {
                        this_param.Free();
                        DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 110477, 110489);
                        return 0;
                    }


                    Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbols.FieldOrPropertyInitializer>>
                    f_10073_110417_110435_I(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbols.FieldOrPropertyInitializer>>
                    i)
                    {
                        var return_v = i;
                        DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 110417, 110435);
                        return return_v;
                    }


                    int
                    f_10073_110527_110552(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbols.FieldOrPropertyInitializer>>
                    this_param)
                    {
                        this_param.Free();
                        DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 110527, 110552);
                        return 0;
                    }


                    int
                    f_10073_110657_110669(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbols.FieldOrPropertyInitializer>
                    this_param)
                    {
                        this_param.Free();
                        DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 110657, 110669);
                        return 0;
                    }


                    Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbols.FieldOrPropertyInitializer>>
                    f_10073_110595_110615_I(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbols.FieldOrPropertyInitializer>>
                    i)
                    {
                        var return_v = i;
                        DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 110595, 110615);
                        return return_v;
                    }


                    int
                    f_10073_110707_110734(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbols.FieldOrPropertyInitializer>>
                    this_param)
                    {
                        this_param.Free();
                        DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 110707, 110734);
                        return 0;
                    }

                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10073, 110302, 110750);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10073, 110302, 110750);
                }
            }

            internal void AddOrWrapTupleMembers(SourceMemberContainerTypeSymbol type)
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(10073, 110766, 110978);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 110872, 110963);

                    this.NonTypeMembers = f_10073_110894_110962(type, f_10073_110921_110961(this.NonTypeMembers));
                    DynAbs.Tracing.TraceSender.TraceExitMethod(10073, 110766, 110978);

                    System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>
                    f_10073_110921_110961(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbol>
                    this_param)
                    {
                        var return_v = this_param.ToImmutableAndFree();
                        DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 110921, 110961);
                        return return_v;
                    }


                    Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbol>
                    f_10073_110894_110962(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                    this_param, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>
                    currentMembers)
                    {
                        var return_v = this_param.AddOrWrapTupleMembers(currentMembers);
                        DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 110894, 110962);
                        return return_v;
                    }

                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10073, 110766, 110978);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10073, 110766, 110978);
                }
            }

            public DeclaredMembersAndInitializersBuilder()
            {
                DynAbs.Tracing.TraceSender.TraceEnterConstructor(10073, 107256, 110989);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 107367, 107418);
                this.NonTypeMembers = f_10073_107384_107418(); DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 107504, 107593);
                this.StaticInitializers = f_10073_107525_107593(); DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 107679, 107770);
                this.InstanceInitializers = f_10073_107702_107770(); DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 107797, 107809);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 107856, 107887);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 107939, 107963);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 108239, 108303);
                this.InstanceInitializersIndexForRecordDeclarationWithParameters = -1; DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 108330, 108379);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 108406, 108453);
                DynAbs.Tracing.TraceSender.TraceExitConstructor(10073, 107256, 110989);

                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10073, 107256, 110989);
            }


            static DeclaredMembersAndInitializersBuilder()
            {
                DynAbs.Tracing.TraceSender.TraceEnterStaticConstructor(10073, 107256, 110989);
                DynAbs.Tracing.TraceSender.TraceExitStaticConstructor(10073, 107256, 110989);

                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10073, 107256, 110989);
            }

            int ___ignore_me___ = DynAbs.Tracing.TraceSender.TraceBeforeConstructor(10073, 107256, 110989);

            Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbol>
            f_10073_107384_107418()
            {
                var return_v = ArrayBuilder<Symbol>.GetInstance();
                DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 107384, 107418);
                return return_v;
            }


            Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbols.FieldOrPropertyInitializer>>
            f_10073_107525_107593()
            {
                var return_v = ArrayBuilder<ArrayBuilder<FieldOrPropertyInitializer>>.GetInstance();
                DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 107525, 107593);
                return return_v;
            }


            Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbols.FieldOrPropertyInitializer>>
            f_10073_107702_107770()
            {
                var return_v = ArrayBuilder<ArrayBuilder<FieldOrPropertyInitializer>>.GetInstance();
                DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 107702, 107770);
                return return_v;
            }

        }
        protected sealed class DeclaredMembersAndInitializers
        {
            public readonly ImmutableArray<Symbol> NonTypeMembers;

            public readonly ImmutableArray<ImmutableArray<FieldOrPropertyInitializer>> StaticInitializers;

            public readonly ImmutableArray<ImmutableArray<FieldOrPropertyInitializer>> InstanceInitializers;

            public readonly bool HaveIndexers;

            public readonly RecordDeclarationSyntax? RecordDeclarationWithParameters;

            public readonly SynthesizedRecordConstructor? RecordPrimaryConstructor;

            public readonly int InstanceInitializersIndexForRecordDeclarationWithParameters;

            public readonly bool IsNullableEnabledForInstanceConstructorsAndFields;

            public readonly bool IsNullableEnabledForStaticConstructorsAndFields;

            public static readonly DeclaredMembersAndInitializers UninitializedSentinel;

            private DeclaredMembersAndInitializers()
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterConstructor(10073, 112230, 112300);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 111386, 111398);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 111454, 111485);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 111546, 111570);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 111855, 111914);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 111950, 111999);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 112035, 112082);
                    DynAbs.Tracing.TraceSender.TraceExitConstructor(10073, 112230, 112300);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10073, 112230, 112300);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10073, 112230, 112300);
                }
            }

            public DeclaredMembersAndInitializers(
                            ImmutableArray<Symbol> nonTypeMembers,
                            ImmutableArray<ImmutableArray<FieldOrPropertyInitializer>> staticInitializers,
                            ImmutableArray<ImmutableArray<FieldOrPropertyInitializer>> instanceInitializers,
                            bool haveIndexers,
                            RecordDeclarationSyntax? recordDeclarationWithParameters,
                            SynthesizedRecordConstructor? recordPrimaryConstructor,
                            int instanceInitializersIndexForRecordDeclarationWithParameters,
                            bool isNullableEnabledForInstanceConstructorsAndFields,
                            bool isNullableEnabledForStaticConstructorsAndFields)
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterConstructor(10073, 112316, 114209);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 111386, 111398);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 111454, 111485);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 111546, 111570);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 111855, 111914);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 111950, 111999);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 112035, 112082);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 113047, 113087);

                    f_10073_113047_113086(f_10073_113060_113085_M(!nonTypeMembers.IsDefault));
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 113105, 113149);

                    f_10073_113105_113148(f_10073_113118_113147_M(!staticInitializers.IsDefault));
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 113167, 113213);

                    f_10073_113167_113212(f_10073_113180_113211_M(!instanceInitializers.IsDefault));
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 113233, 113289);

                    f_10073_113233_113288(!nonTypeMembers.Any(s => s is TypeSymbol));
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 113307, 113401);

                    f_10073_113307_113400(recordDeclarationWithParameters is object == recordPrimaryConstructor is object);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 113421, 113458);

                    this.NonTypeMembers = nonTypeMembers;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 113476, 113521);

                    this.StaticInitializers = staticInitializers;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 113539, 113588);

                    this.InstanceInitializers = instanceInitializers;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 113606, 113639);

                    this.HaveIndexers = haveIndexers;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 113657, 113728);

                    this.RecordDeclarationWithParameters = recordDeclarationWithParameters;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 113746, 113803);

                    this.RecordPrimaryConstructor = recordPrimaryConstructor;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 113821, 113948);

                    this.InstanceInitializersIndexForRecordDeclarationWithParameters = instanceInitializersIndexForRecordDeclarationWithParameters;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 113966, 114073);

                    this.IsNullableEnabledForInstanceConstructorsAndFields = isNullableEnabledForInstanceConstructorsAndFields;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 114091, 114194);

                    this.IsNullableEnabledForStaticConstructorsAndFields = isNullableEnabledForStaticConstructorsAndFields;
                    DynAbs.Tracing.TraceSender.TraceExitConstructor(10073, 112316, 114209);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10073, 112316, 114209);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10073, 112316, 114209);
                }
            }

            static DeclaredMembersAndInitializers()
            {
                DynAbs.Tracing.TraceSender.TraceEnterStaticConstructor(10073, 111001, 114220);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 112153, 112213);
                UninitializedSentinel = f_10073_112177_112213(); DynAbs.Tracing.TraceSender.TraceExitStaticConstructor(10073, 111001, 114220);

                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10073, 111001, 114220);
            }

            int ___ignore_me___ = DynAbs.Tracing.TraceSender.TraceBeforeConstructor(10073, 111001, 114220);

            static Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol.DeclaredMembersAndInitializers
            f_10073_112177_112213()
            {
                var return_v = new Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol.DeclaredMembersAndInitializers();
                DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 112177, 112213);
                return return_v;
            }


            bool
            f_10073_113060_113085_M(bool
            i)
            {
                var return_v = i;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 113060, 113085);
                return return_v;
            }


            int
            f_10073_113047_113086(bool
            condition)
            {
                Debug.Assert(condition);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 113047, 113086);
                return 0;
            }


            bool
            f_10073_113118_113147_M(bool
            i)
            {
                var return_v = i;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 113118, 113147);
                return return_v;
            }


            int
            f_10073_113105_113148(bool
            condition)
            {
                Debug.Assert(condition);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 113105, 113148);
                return 0;
            }


            bool
            f_10073_113180_113211_M(bool
            i)
            {
                var return_v = i;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 113180, 113211);
                return return_v;
            }


            int
            f_10073_113167_113212(bool
            condition)
            {
                Debug.Assert(condition);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 113167, 113212);
                return 0;
            }


            int
            f_10073_113233_113288(bool
            condition)
            {
                Debug.Assert(condition);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 113233, 113288);
                return 0;
            }


            int
            f_10073_113307_113400(bool
            condition)
            {
                Debug.Assert(condition);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 113307, 113400);
                return 0;
            }

        }
        private sealed class MembersAndInitializersBuilder
        {
            public ArrayBuilder<Symbol>? NonTypeMembers;

            private ArrayBuilder<FieldOrPropertyInitializer>? InstanceInitializersForPositionalMembers;

            private bool IsNullableEnabledForInstanceConstructorsAndFields;

            private bool IsNullableEnabledForStaticConstructorsAndFields;

            public MembersAndInitializersBuilder(DeclaredMembersAndInitializers declaredMembersAndInitializers)
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterConstructor(10073, 114624, 115182);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 114336, 114350);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 114415, 114455);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 114483, 114532);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 114560, 114607);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 114756, 114857);

                    f_10073_114756_114856(declaredMembersAndInitializers != DeclaredMembersAndInitializers.UninitializedSentinel);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 114877, 115015);

                    this.IsNullableEnabledForInstanceConstructorsAndFields = declaredMembersAndInitializers.IsNullableEnabledForInstanceConstructorsAndFields;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 115033, 115167);

                    this.IsNullableEnabledForStaticConstructorsAndFields = declaredMembersAndInitializers.IsNullableEnabledForStaticConstructorsAndFields;
                    DynAbs.Tracing.TraceSender.TraceExitConstructor(10073, 114624, 115182);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10073, 114624, 115182);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10073, 114624, 115182);
                }
            }

            public MembersAndInitializers ToReadOnlyAndFree(DeclaredMembersAndInitializers declaredMembers)
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(10073, 115198, 117870);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 115326, 115418);

                    var
                    nonTypeMembers = f_10073_115347_115383_I(DynAbs.Tracing.TraceSender.TraceConditionalAccessExpression(NonTypeMembers, 10073, 115347, 115383)?.ToImmutableAndFree()) ?? (DynAbs.Tracing.TraceSender.Expression_Null<System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>?>(10073, 115347, 115417) ?? declaredMembers.NonTypeMembers)
                    ;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 115438, 115617);

                    var
                    instanceInitializers = (DynAbs.Tracing.TraceSender.Conditional_F1(10073, 115465, 115513) || ((InstanceInitializersForPositionalMembers is null
                    && DynAbs.Tracing.TraceSender.Conditional_F2(10073, 115537, 115573)) || DynAbs.Tracing.TraceSender.Conditional_F3(10073, 115597, 115616))) ? declaredMembers.InstanceInitializers
                    : f_10073_115597_115616()
                    ;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 115637, 116102);

                    return f_10073_115644_116101(nonTypeMembers, declaredMembers.StaticInitializers, instanceInitializers, declaredMembers.HaveIndexers, isNullableEnabledForInstanceConstructorsAndFields: IsNullableEnabledForInstanceConstructorsAndFields, isNullableEnabledForStaticConstructorsAndFields: IsNullableEnabledForStaticConstructorsAndFields);

                    ImmutableArray<ImmutableArray<FieldOrPropertyInitializer>> mergeInitializers()
                    {
                        try
                        {
                            DynAbs.Tracing.TraceSender.TraceEnterMethod(10073, 116122, 117855);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 116241, 116302);

                            var
                            groupCount = declaredMembers.InstanceInitializers.Length
                            ;
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 116324, 116425);

                            var
                            groupsBuilder = f_10073_116344_116424(groupCount)
                            ;
                            try
                            {
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 116456, 116461);
                                for (int
            i = 0
            ; (DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 116447, 117770) || true) && (i < groupCount)
            ; DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 116479, 116482)
            , i++, DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 116447, 117770))

                                {
                                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 116447, 117770);
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 116532, 116599);

                                    var
                                    declaredInitializers = declaredMembers.InstanceInitializers[i]
                                    ;

                                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 116625, 117747) || true) && (i == declaredMembers.InstanceInitializersIndexForRecordDeclarationWithParameters)
                                    )

                                    {
                                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 116625, 117747);
                                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 116767, 116835);

                                        var
                                        insertedInitializers = InstanceInitializersForPositionalMembers
                                        ;

                                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 116876, 117383) || true) && (declaredInitializers.Length > 0)
                                        )

                                        {
                                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 116876, 117383);
                                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 117059, 117189);

                                            f_10073_117059_117188(f_10073_117072_117142(insertedInitializers[f_10073_117093_117119(insertedInitializers) - 1].Syntax) == f_10073_117146_117187(declaredInitializers[0].Syntax));
                                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 117223, 117352);

                                            f_10073_117223_117351(insertedInitializers[f_10073_117257_117283(insertedInitializers) - 1].Syntax.Span.Start < declaredInitializers[0].Syntax.Span.Start);
                                            DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 116876, 117383);
                                        }
                                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 117423, 117475);

                                        f_10073_117423_117474(
                                                                    insertedInitializers, declaredInitializers);
                                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 117505, 117566);

                                        f_10073_117505_117565(groupsBuilder, f_10073_117523_117564(insertedInitializers));
                                        DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 116625, 117747);
                                    }

                                    else

                                    {
                                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 116625, 117747);
                                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 117680, 117720);

                                        f_10073_117680_117719(groupsBuilder, declaredInitializers);
                                        DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 116625, 117747);
                                    }
                                }
                            }
                            catch (System.Exception)
                            {
                                DynAbs.Tracing.TraceSender.TraceExitLoopByException(10073, 1, 1324);
                                throw;
                            }
                            finally
                            {
                                DynAbs.Tracing.TraceSender.TraceExitLoop(10073, 1, 1324);
                            }
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 117794, 117836);

                            return f_10073_117801_117835(groupsBuilder);
                            DynAbs.Tracing.TraceSender.TraceExitMethod(10073, 116122, 117855);

                            Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.FieldOrPropertyInitializer>>
                            f_10073_116344_116424(int
                            capacity)
                            {
                                var return_v = ArrayBuilder<ImmutableArray<FieldOrPropertyInitializer>>.GetInstance(capacity);
                                DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 116344, 116424);
                                return return_v;
                            }


                            int
                            f_10073_117093_117119(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbols.FieldOrPropertyInitializer>
                            this_param)
                            {
                                var return_v = this_param.Count;
                                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 117093, 117119);
                                return return_v;
                            }


                            Microsoft.CodeAnalysis.SyntaxTree
                            f_10073_117072_117142(Microsoft.CodeAnalysis.SyntaxReference
                            this_param)
                            {
                                var return_v = this_param.SyntaxTree;
                                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 117072, 117142);
                                return return_v;
                            }


                            Microsoft.CodeAnalysis.SyntaxTree
                            f_10073_117146_117187(Microsoft.CodeAnalysis.SyntaxReference
                            this_param)
                            {
                                var return_v = this_param.SyntaxTree;
                                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 117146, 117187);
                                return return_v;
                            }


                            int
                            f_10073_117059_117188(bool
                            condition)
                            {
                                Debug.Assert(condition);
                                DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 117059, 117188);
                                return 0;
                            }


                            int
                            f_10073_117257_117283(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbols.FieldOrPropertyInitializer>
                            this_param)
                            {
                                var return_v = this_param.Count;
                                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 117257, 117283);
                                return return_v;
                            }


                            int
                            f_10073_117223_117351(bool
                            condition)
                            {
                                Debug.Assert(condition);
                                DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 117223, 117351);
                                return 0;
                            }


                            int
                            f_10073_117423_117474(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbols.FieldOrPropertyInitializer>
                            this_param, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.FieldOrPropertyInitializer>
                            items)
                            {
                                this_param.AddRange(items);
                                DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 117423, 117474);
                                return 0;
                            }


                            System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.FieldOrPropertyInitializer>
                            f_10073_117523_117564(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbols.FieldOrPropertyInitializer>
                            this_param)
                            {
                                var return_v = this_param.ToImmutableAndFree();
                                DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 117523, 117564);
                                return return_v;
                            }


                            int
                            f_10073_117505_117565(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.FieldOrPropertyInitializer>>
                            this_param, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.FieldOrPropertyInitializer>
                            item)
                            {
                                this_param.Add(item);
                                DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 117505, 117565);
                                return 0;
                            }


                            int
                            f_10073_117680_117719(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.FieldOrPropertyInitializer>>
                            this_param, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.FieldOrPropertyInitializer>
                            item)
                            {
                                this_param.Add(item);
                                DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 117680, 117719);
                                return 0;
                            }


                            System.Collections.Immutable.ImmutableArray<System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.FieldOrPropertyInitializer>>
                            f_10073_117801_117835(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.FieldOrPropertyInitializer>>
                            this_param)
                            {
                                var return_v = this_param.ToImmutableAndFree();
                                DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 117801, 117835);
                                return return_v;
                            }

                        }
                        catch
                        {
                            DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10073, 116122, 117855);
                            throw;
                        }
                        finally
                        {
                            DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10073, 116122, 117855);
                        }
                        throw new System.Exception("Slicer error: unreachable code");
                    }
                    DynAbs.Tracing.TraceSender.TraceExitMethod(10073, 115198, 117870);

                    System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>?
                    f_10073_115347_115383_I(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>?
                    i)
                    {
                        var return_v = i;
                        DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 115347, 115383);
                        return return_v;
                    }


                    System.Collections.Immutable.ImmutableArray<System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.FieldOrPropertyInitializer>>
                    f_10073_115597_115616()
                    {
                        var return_v = mergeInitializers();
                        DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 115597, 115616);
                        return return_v;
                    }


                    Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol.MembersAndInitializers
                    f_10073_115644_116101(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>
                    nonTypeMembers, System.Collections.Immutable.ImmutableArray<System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.FieldOrPropertyInitializer>>
                    staticInitializers, System.Collections.Immutable.ImmutableArray<System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.FieldOrPropertyInitializer>>
                    instanceInitializers, bool
                    haveIndexers, bool
                    isNullableEnabledForInstanceConstructorsAndFields, bool
                    isNullableEnabledForStaticConstructorsAndFields)
                    {
                        var return_v = new Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol.MembersAndInitializers(nonTypeMembers, staticInitializers, instanceInitializers, haveIndexers, isNullableEnabledForInstanceConstructorsAndFields: isNullableEnabledForInstanceConstructorsAndFields, isNullableEnabledForStaticConstructorsAndFields: isNullableEnabledForStaticConstructorsAndFields);
                        DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 115644, 116101);
                        return return_v;
                    }

                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10073, 115198, 117870);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10073, 115198, 117870);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }

            public void AddInstanceInitializerForPositionalMembers(FieldOrPropertyInitializer initializer)
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(10073, 117886, 118317);

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 118013, 118224) || true) && (InstanceInitializersForPositionalMembers is null)
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 118013, 118224);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 118107, 118205);

                        InstanceInitializersForPositionalMembers = f_10073_118150_118204();
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 118013, 118224);
                    }
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 118244, 118302);

                    f_10073_118244_118301(
                                    InstanceInitializersForPositionalMembers, initializer);
                    DynAbs.Tracing.TraceSender.TraceExitMethod(10073, 117886, 118317);

                    Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbols.FieldOrPropertyInitializer>
                    f_10073_118150_118204()
                    {
                        var return_v = ArrayBuilder<FieldOrPropertyInitializer>.GetInstance();
                        DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 118150, 118204);
                        return return_v;
                    }


                    int
                    f_10073_118244_118301(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbols.FieldOrPropertyInitializer>
                    this_param, Microsoft.CodeAnalysis.CSharp.Symbols.FieldOrPropertyInitializer
                    item)
                    {
                        this_param.Add(item);
                        DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 118244, 118301);
                        return 0;
                    }

                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10073, 117886, 118317);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10073, 117886, 118317);
                }
            }

            public IReadOnlyCollection<Symbol> GetNonTypeMembers(DeclaredMembersAndInitializers declaredMembers)
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(10073, 118333, 118566);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 118466, 118551);

                    return NonTypeMembers ?? (DynAbs.Tracing.TraceSender.Expression_Null<Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbol>?>(10073, 118473, 118550) ?? (IReadOnlyCollection<Symbol>)declaredMembers.NonTypeMembers);
                    DynAbs.Tracing.TraceSender.TraceExitMethod(10073, 118333, 118566);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10073, 118333, 118566);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10073, 118333, 118566);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }

            public void AddNonTypeMember(Symbol member, DeclaredMembersAndInitializers declaredMembers)
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(10073, 118582, 119026);

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 118706, 118964) || true) && (NonTypeMembers is null)
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 118706, 118964);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 118774, 118867);

                        NonTypeMembers = f_10073_118791_118866(declaredMembers.NonTypeMembers.Length + 1);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 118889, 118945);

                        f_10073_118889_118944(NonTypeMembers, declaredMembers.NonTypeMembers);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 118706, 118964);
                    }
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 118984, 119011);

                    f_10073_118984_119010(
                                    NonTypeMembers, member);
                    DynAbs.Tracing.TraceSender.TraceExitMethod(10073, 118582, 119026);

                    Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbol>
                    f_10073_118791_118866(int
                    capacity)
                    {
                        var return_v = ArrayBuilder<Symbol>.GetInstance(capacity);
                        DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 118791, 118866);
                        return return_v;
                    }


                    int
                    f_10073_118889_118944(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbol>
                    this_param, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>
                    items)
                    {
                        this_param.AddRange(items);
                        DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 118889, 118944);
                        return 0;
                    }


                    int
                    f_10073_118984_119010(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbol>
                    this_param, Microsoft.CodeAnalysis.CSharp.Symbol
                    item)
                    {
                        this_param.Add(item);
                        DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 118984, 119010);
                        return 0;
                    }

                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10073, 118582, 119026);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10073, 118582, 119026);
                }
            }

            public void UpdateIsNullableEnabledForConstructorsAndFields(bool useStatic, CSharpCompilation compilation, CSharpSyntaxNode syntax)
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(10073, 119042, 119417);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 119206, 119295);

                    // LAFHIS
                    //ref bool isNullableEnabled = ref f_10073_119239_119294(this, useStatic);
                    ref bool isNullableEnabled = ref this.GetIsNullableEnabledForConstructorsAndFields(useStatic);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 119239, 119294);

                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 119313, 119402);

                    isNullableEnabled = isNullableEnabled || (DynAbs.Tracing.TraceSender.Expression_False(10073, 119333, 119401) || f_10073_119354_119401(compilation, syntax));
                    DynAbs.Tracing.TraceSender.TraceExitMethod(10073, 119042, 119417);

                    bool
                    f_10073_119239_119294(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol.MembersAndInitializersBuilder
                    this_param, bool
                    useStatic)
                    {
                        var return_v = this_param.GetIsNullableEnabledForConstructorsAndFields(useStatic);
                        DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 119239, 119294);
                        return return_v;
                    }


                    bool
                    f_10073_119354_119401(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                    this_param, Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode
                    syntax)
                    {
                        var return_v = this_param.IsNullableAnalysisEnabledIn((Microsoft.CodeAnalysis.SyntaxNode)syntax);
                        DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 119354, 119401);
                        return return_v;
                    }

                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10073, 119042, 119417);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10073, 119042, 119417);
                }
            }

            private ref bool GetIsNullableEnabledForConstructorsAndFields(bool useStatic)
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(10073, 119433, 119689);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 119543, 119674);

                    return ref (DynAbs.Tracing.TraceSender.Conditional_F1(10073, 119554, 119563) || ((useStatic && DynAbs.Tracing.TraceSender.Conditional_F2(10073, 119566, 119617)) || DynAbs.Tracing.TraceSender.Conditional_F3(10073, 119620, 119673))) ? ref IsNullableEnabledForStaticConstructorsAndFields : ref IsNullableEnabledForInstanceConstructorsAndFields;
                    DynAbs.Tracing.TraceSender.TraceExitMethod(10073, 119433, 119689);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10073, 119433, 119689);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10073, 119433, 119689);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }

            internal static ImmutableArray<ImmutableArray<FieldOrPropertyInitializer>> ToReadOnlyAndFree(ArrayBuilder<ArrayBuilder<FieldOrPropertyInitializer>> initializers)
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterStaticMethod(10073, 119705, 120523);

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 119899, 120101) || true) && (f_10073_119903_119921(initializers) == 0)
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 119899, 120101);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 119968, 119988);

                        f_10073_119968_119987(initializers);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 120010, 120082);

                        return ImmutableArray<ImmutableArray<FieldOrPropertyInitializer>>.Empty;
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 119899, 120101);
                    }
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 120121, 120224);

                    var
                    builder = f_10073_120135_120223(f_10073_120204_120222(initializers))
                    ;
                    try
                    {
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 120242, 120414);
                        foreach (ArrayBuilder<FieldOrPropertyInitializer> group in f_10073_120301_120313_I(initializers))
                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 120242, 120414);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 120355, 120395);

                            f_10073_120355_120394(builder, f_10073_120367_120393(group));
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 120242, 120414);
                        }
                    }
                    catch (System.Exception)
                    {
                        DynAbs.Tracing.TraceSender.TraceExitLoopByException(10073, 1, 173);
                        throw;
                    }
                    finally
                    {
                        DynAbs.Tracing.TraceSender.TraceExitLoop(10073, 1, 173);
                    }
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 120434, 120454);

                    f_10073_120434_120453(
                                    initializers);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 120472, 120508);

                    return f_10073_120479_120507(builder);
                    DynAbs.Tracing.TraceSender.TraceExitStaticMethod(10073, 119705, 120523);

                    int
                    f_10073_119903_119921(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbols.FieldOrPropertyInitializer>>
                    this_param)
                    {
                        var return_v = this_param.Count;
                        DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 119903, 119921);
                        return return_v;
                    }


                    int
                    f_10073_119968_119987(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbols.FieldOrPropertyInitializer>>
                    this_param)
                    {
                        this_param.Free();
                        DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 119968, 119987);
                        return 0;
                    }


                    int
                    f_10073_120204_120222(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbols.FieldOrPropertyInitializer>>
                    this_param)
                    {
                        var return_v = this_param.Count;
                        DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 120204, 120222);
                        return return_v;
                    }


                    Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.FieldOrPropertyInitializer>>
                    f_10073_120135_120223(int
                    capacity)
                    {
                        var return_v = ArrayBuilder<ImmutableArray<FieldOrPropertyInitializer>>.GetInstance(capacity);
                        DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 120135, 120223);
                        return return_v;
                    }


                    System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.FieldOrPropertyInitializer>
                    f_10073_120367_120393(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbols.FieldOrPropertyInitializer>
                    this_param)
                    {
                        var return_v = this_param.ToImmutableAndFree();
                        DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 120367, 120393);
                        return return_v;
                    }


                    int
                    f_10073_120355_120394(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.FieldOrPropertyInitializer>>
                    this_param, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.FieldOrPropertyInitializer>
                    item)
                    {
                        this_param.Add(item);
                        DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 120355, 120394);
                        return 0;
                    }


                    Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbols.FieldOrPropertyInitializer>>
                    f_10073_120301_120313_I(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbols.FieldOrPropertyInitializer>>
                    i)
                    {
                        var return_v = i;
                        DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 120301, 120313);
                        return return_v;
                    }


                    int
                    f_10073_120434_120453(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbols.FieldOrPropertyInitializer>>
                    this_param)
                    {
                        this_param.Free();
                        DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 120434, 120453);
                        return 0;
                    }


                    System.Collections.Immutable.ImmutableArray<System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.FieldOrPropertyInitializer>>
                    f_10073_120479_120507(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.FieldOrPropertyInitializer>>
                    this_param)
                    {
                        var return_v = this_param.ToImmutableAndFree();
                        DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 120479, 120507);
                        return return_v;
                    }

                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10073, 119705, 120523);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10073, 119705, 120523);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }

            public void Free()
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(10073, 120539, 120695);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 120590, 120613);

                    DynAbs.Tracing.TraceSender.TraceInvocationWrapper(() => DynAbs.Tracing.TraceSender.TraceConditionalAccessExpression(NonTypeMembers, 10073, 120590, 120612)?.Free(), 10073, 120605, 120612);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 120631, 120680);

                    DynAbs.Tracing.TraceSender.TraceInvocationWrapper(() => DynAbs.Tracing.TraceSender.TraceConditionalAccessExpression(InstanceInitializersForPositionalMembers, 10073, 120631, 120679)?.Free(), 10073, 120672, 120679);
                    DynAbs.Tracing.TraceSender.TraceExitMethod(10073, 120539, 120695);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10073, 120539, 120695);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10073, 120539, 120695);
                }
            }

            static MembersAndInitializersBuilder()
            {
                DynAbs.Tracing.TraceSender.TraceEnterStaticConstructor(10073, 114232, 120706);
                DynAbs.Tracing.TraceSender.TraceExitStaticConstructor(10073, 114232, 120706);

                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10073, 114232, 120706);
            }

            int ___ignore_me___ = DynAbs.Tracing.TraceSender.TraceBeforeConstructor(10073, 114232, 120706);

            int
            f_10073_114756_114856(bool
            condition)
            {
                Debug.Assert(condition);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 114756, 114856);
                return 0;
            }

        }

        protected virtual MembersAndInitializers? BuildMembersAndInitializers(DiagnosticBag diagnostics)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10073, 120718, 125125);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 120839, 120912);

                var
                declaredMembersAndInitializers = f_10073_120876_120911()
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 120926, 121099) || true) && (declaredMembersAndInitializers is null)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 120926, 121099);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 121072, 121084);

                    return null;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 120926, 121099);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 121115, 121217);

                var
                membersAndInitializersBuilder = f_10073_121151_121216(declaredMembersAndInitializers)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 121231, 121329);

                f_10073_121231_121328(this, membersAndInitializersBuilder, declaredMembersAndInitializers, diagnostics);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 121345, 121589) || true) && (f_10073_121349_121395(ref _lazyMembersAndInitializers) != null)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 121345, 121589);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 121507, 121544);

                    f_10073_121507_121543(                // Another thread completed the work before this one
                                    membersAndInitializersBuilder);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 121562, 121574);

                    return null;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 121345, 121589);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 121605, 121692);

                return f_10073_121612_121691(membersAndInitializersBuilder, declaredMembersAndInitializers);

                DeclaredMembersAndInitializers? getDeclaredMembersAndInitializers()
                {
                    try
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterMethod(10073, 121708, 123135);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 121808, 121881);

                        var
                        declaredMembersAndInitializers = _lazyDeclaredMembersAndInitializers
                        ;

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 121899, 122088) || true) && (declaredMembersAndInitializers != DeclaredMembersAndInitializers.UninitializedSentinel)
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 121899, 122088);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 122031, 122069);

                            return declaredMembersAndInitializers;
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 121899, 122088);
                        }

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 122108, 122393) || true) && (f_10073_122112_122158(ref _lazyMembersAndInitializers) is not null)
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 122108, 122393);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 122362, 122374);

                            return null;
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 122108, 122393);
                        }
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 122413, 122459);

                        var
                        diagnostics = f_10073_122431_122458()
                        ;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 122477, 122559);

                        declaredMembersAndInitializers = f_10073_122510_122558(diagnostics);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 122579, 122753);

                        var
                        alreadyKnown = f_10073_122598_122752(ref _lazyDeclaredMembersAndInitializers, declaredMembersAndInitializers, DeclaredMembersAndInitializers.UninitializedSentinel)
                        ;

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 122771, 122965) || true) && (alreadyKnown != DeclaredMembersAndInitializers.UninitializedSentinel)
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 122771, 122965);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 122885, 122904);

                            f_10073_122885_122903(diagnostics);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 122926, 122946);

                            return alreadyKnown;
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 122771, 122965);
                        }
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 122985, 123024);

                        f_10073_122985_123023(this, diagnostics);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 123042, 123061);

                        f_10073_123042_123060(diagnostics);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 123081, 123120);

                        return declaredMembersAndInitializers!;
                        DynAbs.Tracing.TraceSender.TraceExitMethod(10073, 121708, 123135);

                        Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol.MembersAndInitializers?
                        f_10073_122112_122158(ref Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol.MembersAndInitializers?
                        location)
                        {
                            var return_v = Volatile.Read(ref location);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 122112, 122158);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.DiagnosticBag
                        f_10073_122431_122458()
                        {
                            var return_v = DiagnosticBag.GetInstance();
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 122431, 122458);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol.DeclaredMembersAndInitializers?
                        f_10073_122510_122558(Microsoft.CodeAnalysis.DiagnosticBag
                        diagnostics)
                        {
                            var return_v = buildDeclaredMembersAndInitializers(diagnostics);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 122510, 122558);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol.DeclaredMembersAndInitializers?
                        f_10073_122598_122752(ref Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol.DeclaredMembersAndInitializers?
                        location1, Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol.DeclaredMembersAndInitializers?
                        value, Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol.DeclaredMembersAndInitializers
                        comparand)
                        {
                            var return_v = Interlocked.CompareExchange(ref location1, value, comparand);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 122598, 122752);
                            return return_v;
                        }


                        int
                        f_10073_122885_122903(Microsoft.CodeAnalysis.DiagnosticBag
                        this_param)
                        {
                            this_param.Free();
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 122885, 122903);
                            return 0;
                        }


                        int
                        f_10073_122985_123023(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                        this_param, Microsoft.CodeAnalysis.DiagnosticBag
                        diagnostics)
                        {
                            this_param.AddDeclarationDiagnostics(diagnostics);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 122985, 123023);
                            return 0;
                        }


                        int
                        f_10073_123042_123060(Microsoft.CodeAnalysis.DiagnosticBag
                        this_param)
                        {
                            this_param.Free();
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 123042, 123060);
                            return 0;
                        }

                    }
                    catch
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10073, 121708, 123135);
                        throw;
                    }
                    finally
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10073, 121708, 123135);
                    }
                    throw new System.Exception("Slicer error: unreachable code");
                }

                DeclaredMembersAndInitializers? buildDeclaredMembersAndInitializers(DiagnosticBag diagnostics)
                {
                    try
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterMethod(10073, 123468, 125114);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 123595, 123653);

                        var
                        builder = f_10073_123609_123652()
                        ;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 123671, 123719);

                        f_10073_123671_123718(this, builder, diagnostics);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 123739, 124565);

                        switch (f_10073_123747_123755())
                        {

                            case TypeKind.Struct:
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 123739, 124565);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 123844, 123896);

                                f_10073_123844_123895(this, builder, diagnostics);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 123922, 124021);

                                f_10073_123922_124020(builder.NonTypeMembers, isEnum: false, diagnostics: diagnostics);
                                DynAbs.Tracing.TraceSender.TraceBreak(10073, 124047, 124053);

                                break;
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 123739, 124565);

                            case TypeKind.Enum:
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 123739, 124565);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 124122, 124220);

                                f_10073_124122_124219(builder.NonTypeMembers, isEnum: true, diagnostics: diagnostics);
                                DynAbs.Tracing.TraceSender.TraceBreak(10073, 124246, 124252);

                                break;
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 123739, 124565);

                            case TypeKind.Class:
                            case TypeKind.Interface:
                            case TypeKind.Submission:
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 123739, 124565);
                                DynAbs.Tracing.TraceSender.TraceBreak(10073, 124476, 124482);

                                break;
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 123739, 124565);

                            default:
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 123739, 124565);
                                DynAbs.Tracing.TraceSender.TraceBreak(10073, 124540, 124546);

                                break;
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 123739, 124565);
                        }

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 124585, 124697) || true) && (f_10073_124589_124600())
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 124585, 124697);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 124642, 124678);

                            f_10073_124642_124677(builder, this);
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 124585, 124697);
                        }

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 124717, 125044) || true) && (f_10073_124721_124775(ref _lazyDeclaredMembersAndInitializers) != DeclaredMembersAndInitializers.UninitializedSentinel)
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 124717, 125044);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 124976, 124991);

                            f_10073_124976_124990(                    // _lazyDeclaredMembersAndInitializers is already computed. no point to continue.
                                                builder);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 125013, 125025);

                            return null;
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 124717, 125044);
                        }
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 125064, 125099);

                        return f_10073_125071_125098(builder);
                        DynAbs.Tracing.TraceSender.TraceExitMethod(10073, 123468, 125114);

                        Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol.DeclaredMembersAndInitializersBuilder
                        f_10073_123609_123652()
                        {
                            var return_v = new Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol.DeclaredMembersAndInitializersBuilder();
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 123609, 123652);
                            return return_v;
                        }


                        int
                        f_10073_123671_123718(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                        this_param, Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol.DeclaredMembersAndInitializersBuilder
                        builder, Microsoft.CodeAnalysis.DiagnosticBag
                        diagnostics)
                        {
                            this_param.AddDeclaredNontypeMembers(builder, diagnostics);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 123671, 123718);
                            return 0;
                        }


                        Microsoft.CodeAnalysis.TypeKind
                        f_10073_123747_123755()
                        {
                            var return_v = TypeKind;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 123747, 123755);
                            return return_v;
                        }


                        int
                        f_10073_123844_123895(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                        this_param, Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol.DeclaredMembersAndInitializersBuilder
                        builder, Microsoft.CodeAnalysis.DiagnosticBag
                        diagnostics)
                        {
                            this_param.CheckForStructBadInitializers(builder, diagnostics);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 123844, 123895);
                            return 0;
                        }


                        int
                        f_10073_123922_124020(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbol>
                        members, bool
                        isEnum, Microsoft.CodeAnalysis.DiagnosticBag
                        diagnostics)
                        {
                            CheckForStructDefaultConstructors(members, isEnum: isEnum, diagnostics: diagnostics);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 123922, 124020);
                            return 0;
                        }


                        int
                        f_10073_124122_124219(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbol>
                        members, bool
                        isEnum, Microsoft.CodeAnalysis.DiagnosticBag
                        diagnostics)
                        {
                            CheckForStructDefaultConstructors(members, isEnum: isEnum, diagnostics: diagnostics);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 124122, 124219);
                            return 0;
                        }


                        bool
                        f_10073_124589_124600()
                        {
                            var return_v = IsTupleType;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 124589, 124600);
                            return return_v;
                        }


                        int
                        f_10073_124642_124677(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol.DeclaredMembersAndInitializersBuilder
                        this_param, Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                        type)
                        {
                            this_param.AddOrWrapTupleMembers(type);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 124642, 124677);
                            return 0;
                        }


                        Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol.DeclaredMembersAndInitializers?
                        f_10073_124721_124775(ref Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol.DeclaredMembersAndInitializers?
                        location)
                        {
                            var return_v = Volatile.Read(ref location);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 124721, 124775);
                            return return_v;
                        }


                        int
                        f_10073_124976_124990(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol.DeclaredMembersAndInitializersBuilder
                        this_param)
                        {
                            this_param.Free();
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 124976, 124990);
                            return 0;
                        }


                        Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol.DeclaredMembersAndInitializers
                        f_10073_125071_125098(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol.DeclaredMembersAndInitializersBuilder
                        this_param)
                        {
                            var return_v = this_param.ToReadOnlyAndFree();
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 125071, 125098);
                            return return_v;
                        }

                    }
                    catch
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10073, 123468, 125114);
                        throw;
                    }
                    finally
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10073, 123468, 125114);
                    }
                    throw new System.Exception("Slicer error: unreachable code");
                }
                DynAbs.Tracing.TraceSender.TraceExitMethod(10073, 120718, 125125);

                Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol.DeclaredMembersAndInitializers?
                f_10073_120876_120911()
                {
                    var return_v = getDeclaredMembersAndInitializers();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 120876, 120911);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol.MembersAndInitializersBuilder
                f_10073_121151_121216(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol.DeclaredMembersAndInitializers
                declaredMembersAndInitializers)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol.MembersAndInitializersBuilder(declaredMembersAndInitializers);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 121151, 121216);
                    return return_v;
                }


                int
                f_10073_121231_121328(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol.MembersAndInitializersBuilder
                builder, Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol.DeclaredMembersAndInitializers
                declaredMembersAndInitializers, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    this_param.AddSynthesizedMembers(builder, declaredMembersAndInitializers, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 121231, 121328);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol.MembersAndInitializers?
                f_10073_121349_121395(ref Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol.MembersAndInitializers?
                location)
                {
                    var return_v = Volatile.Read(ref location);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 121349, 121395);
                    return return_v;
                }


                int
                f_10073_121507_121543(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol.MembersAndInitializersBuilder
                this_param)
                {
                    this_param.Free();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 121507, 121543);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol.MembersAndInitializers
                f_10073_121612_121691(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol.MembersAndInitializersBuilder
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol.DeclaredMembersAndInitializers
                declaredMembers)
                {
                    var return_v = this_param.ToReadOnlyAndFree(declaredMembers);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 121612, 121691);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10073, 120718, 125125);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10073, 120718, 125125);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private void AddSynthesizedMembers(MembersAndInitializersBuilder builder, DeclaredMembersAndInitializers declaredMembersAndInitializers, DiagnosticBag diagnostics)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10073, 125137, 125895);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 125325, 125884);

                switch (f_10073_125333_125341())
                {

                    case TypeKind.Struct:
                    case TypeKind.Enum:
                    case TypeKind.Class:
                    case TypeKind.Interface:
                    case TypeKind.Submission:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 125325, 125884);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 125578, 125671);

                        f_10073_125578_125670(this, builder, declaredMembersAndInitializers, diagnostics);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 125693, 125785);

                        f_10073_125693_125784(this, builder, declaredMembersAndInitializers, diagnostics);
                        DynAbs.Tracing.TraceSender.TraceBreak(10073, 125807, 125813);

                        break;
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 125325, 125884);

                    default:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 125325, 125884);
                        DynAbs.Tracing.TraceSender.TraceBreak(10073, 125863, 125869);

                        break;
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 125325, 125884);
                }
                DynAbs.Tracing.TraceSender.TraceExitMethod(10073, 125137, 125895);

                Microsoft.CodeAnalysis.TypeKind
                f_10073_125333_125341()
                {
                    var return_v = TypeKind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 125333, 125341);
                    return return_v;
                }


                int
                f_10073_125578_125670(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol.MembersAndInitializersBuilder
                builder, Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol.DeclaredMembersAndInitializers
                declaredMembersAndInitializers, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    this_param.AddSynthesizedRecordMembersIfNecessary(builder, declaredMembersAndInitializers, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 125578, 125670);
                    return 0;
                }


                int
                f_10073_125693_125784(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol.MembersAndInitializersBuilder
                builder, Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol.DeclaredMembersAndInitializers
                declaredMembersAndInitializers, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    this_param.AddSynthesizedConstructorsIfNecessary(builder, declaredMembersAndInitializers, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 125693, 125784);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10073, 125137, 125895);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10073, 125137, 125895);
            }
        }

        private void AddDeclaredNontypeMembers(DeclaredMembersAndInitializersBuilder builder, DiagnosticBag diagnostics)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10073, 125907, 130255);
                try
                {
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 126044, 128538);
                    foreach (var decl in f_10073_126065_126094_I(f_10073_126065_126094(this.declaration)))
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 126044, 128538);

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 126128, 126228) || true) && (f_10073_126132_126158_M(!decl.HasAnyNontypeMembers))
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 126128, 126228);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 126200, 126209);

                            continue;
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 126128, 126228);
                        }

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 126248, 126445) || true) && (_lazyMembersAndInitializers != null)
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 126248, 126445);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 126419, 126426);

                            return;
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 126248, 126445);
                        }
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 126465, 126511);

                        var
                        syntax = f_10073_126478_126510(f_10073_126478_126498(decl))
                        ;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 126531, 128523);

                        switch (f_10073_126539_126552(syntax))
                        {

                            case SyntaxKind.EnumDeclaration:
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 126531, 128523);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 126652, 126720);

                                f_10073_126652_126719(this, builder, syntax, diagnostics);
                                DynAbs.Tracing.TraceSender.TraceBreak(10073, 126746, 126752);

                                break;
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 126531, 128523);

                            case SyntaxKind.DelegateDeclaration:
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 126531, 128523);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 126838, 126962);

                                f_10073_126838_126961(this, builder.NonTypeMembers, syntax, diagnostics);
                                DynAbs.Tracing.TraceSender.TraceBreak(10073, 126988, 126994);

                                break;
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 126531, 128523);

                            case SyntaxKind.NamespaceDeclaration:
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 126531, 128523);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 127218, 127332);

                                f_10073_127218_127331(this, builder, instanceInitializers: null, f_10073_127273_127317(((NamespaceDeclarationSyntax)syntax)), diagnostics);
                                DynAbs.Tracing.TraceSender.TraceBreak(10073, 127358, 127364);

                                break;
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 126531, 128523);

                            case SyntaxKind.CompilationUnit:
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 126531, 128523);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 127446, 127555);

                                f_10073_127446_127554(this, builder, instanceInitializers: null, f_10073_127501_127540(((CompilationUnitSyntax)syntax)), diagnostics);
                                DynAbs.Tracing.TraceSender.TraceBreak(10073, 127581, 127587);

                                break;
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 126531, 128523);

                            case SyntaxKind.ClassDeclaration:
                            case SyntaxKind.InterfaceDeclaration:
                            case SyntaxKind.StructDeclaration:
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 126531, 128523);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 127785, 127830);

                                var
                                typeDecl = (TypeDeclarationSyntax)syntax
                                ;
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 127856, 127942);

                                f_10073_127856_127941(this, builder, instanceInitializers: null, f_10073_127911_127927(typeDecl), diagnostics);
                                DynAbs.Tracing.TraceSender.TraceBreak(10073, 127968, 127974);

                                break;
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 126531, 128523);

                            case SyntaxKind.RecordDeclaration:
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 126531, 128523);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 128058, 128107);

                                var
                                recordDecl = (RecordDeclarationSyntax)syntax
                                ;
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 128133, 128358);

                                f_10073_128133_128357(this, builder, instanceInitializers: f_10073_128211_128265(recordDecl, builder, diagnostics), f_10073_128296_128314(recordDecl), diagnostics);
                                DynAbs.Tracing.TraceSender.TraceBreak(10073, 128384, 128390);

                                break;
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 126531, 128523);

                            default:
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 126531, 128523);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 128448, 128504);

                                throw f_10073_128454_128503(f_10073_128489_128502(syntax));
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 126531, 128523);
                        }
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 126044, 128538);
                    }
                }
                catch (System.Exception)
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoopByException(10073, 1, 2495);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoop(10073, 1, 2495);
                }
                ArrayBuilder<FieldOrPropertyInitializer>? noteRecordParameters(RecordDeclarationSyntax syntax, DeclaredMembersAndInitializersBuilder builder, DiagnosticBag diagnostics)
                {
                    try
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterMethod(10073, 128554, 130244);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 128755, 128796);

                        var
                        parameterList = f_10073_128775_128795(syntax)
                        ;

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 128814, 128912) || true) && (parameterList is null)
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 128814, 128912);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 128881, 128893);

                            return null;
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 128814, 128912);
                        }

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 128932, 130229) || true) && (builder.RecordDeclarationWithParameters is null)
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 128932, 130229);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 129025, 129074);

                            builder.RecordDeclarationWithParameters = syntax;
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 129096, 129154);

                            var
                            ctor = f_10073_129107_129153(this, syntax)
                            ;
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 129176, 129216);

                            builder.RecordPrimaryConstructor = ctor;
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 129240, 129279);

                            var
                            compilation = f_10073_129258_129278()
                            ;
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 129301, 129407);

                            f_10073_129301_129406(builder, f_10073_129357_129370(ctor), compilation, f_10073_129385_129405(syntax));

                            if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 129429, 129673) || true) && (f_10073_129433_129480_M(DynAbs.Tracing.TraceSender.TraceConditionalAccessExpression(f_10073_129433_129466(syntax), 10073, 129433, 129480)?.ArgumentList) is { } baseParamList)
                            )

                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 129429, 129673);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 129551, 129650);

                                f_10073_129551_129649(builder, f_10073_129607_129620(ctor), compilation, baseParamList);
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 129429, 129673);
                            }
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 129821, 129926);

                            builder.InstanceInitializersIndexForRecordDeclarationWithParameters = f_10073_129891_129925(builder.InstanceInitializers);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 129948, 130010);

                            return f_10073_129955_130009();
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 128932, 130229);
                        }

                        else

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 128932, 130229);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 130092, 130176);

                            f_10073_130092_130175(diagnostics, ErrorCode.ERR_MultipleRecordParameterLists, f_10073_130152_130174(parameterList));
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 130198, 130210);

                            return null;
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 128932, 130229);
                        }
                        DynAbs.Tracing.TraceSender.TraceExitMethod(10073, 128554, 130244);

                        Microsoft.CodeAnalysis.CSharp.Syntax.ParameterListSyntax?
                        f_10073_128775_128795(Microsoft.CodeAnalysis.CSharp.Syntax.RecordDeclarationSyntax
                        this_param)
                        {
                            var return_v = this_param.ParameterList;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 128775, 128795);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedRecordConstructor
                        f_10073_129107_129153(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                        containingType, Microsoft.CodeAnalysis.CSharp.Syntax.RecordDeclarationSyntax
                        syntax)
                        {
                            var return_v = new Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedRecordConstructor(containingType, syntax);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 129107, 129153);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                        f_10073_129258_129278()
                        {
                            var return_v = DeclaringCompilation;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 129258, 129278);
                            return return_v;
                        }


                        bool
                        f_10073_129357_129370(Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedRecordConstructor
                        this_param)
                        {
                            var return_v = this_param.IsStatic;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 129357, 129370);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.CSharp.Syntax.ParameterListSyntax?
                        f_10073_129385_129405(Microsoft.CodeAnalysis.CSharp.Syntax.RecordDeclarationSyntax
                        this_param)
                        {
                            var return_v = this_param.ParameterList;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 129385, 129405);
                            return return_v;
                        }


                        int
                        f_10073_129301_129406(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol.DeclaredMembersAndInitializersBuilder
                        this_param, bool
                        useStatic, Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                        compilation, Microsoft.CodeAnalysis.CSharp.Syntax.ParameterListSyntax?
                        syntax)
                        {
                            this_param.UpdateIsNullableEnabledForConstructorsAndFields(useStatic, compilation, (Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode?)syntax);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 129301, 129406);
                            return 0;
                        }


                        Microsoft.CodeAnalysis.CSharp.Syntax.PrimaryConstructorBaseTypeSyntax?
                        f_10073_129433_129466(Microsoft.CodeAnalysis.CSharp.Syntax.RecordDeclarationSyntax
                        this_param)
                        {
                            var return_v = this_param.PrimaryConstructorBaseType;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 129433, 129466);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentListSyntax?
                        f_10073_129433_129480_M(Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentListSyntax?
                        i)
                        {
                            var return_v = i;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 129433, 129480);
                            return return_v;
                        }


                        bool
                        f_10073_129607_129620(Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedRecordConstructor
                        this_param)
                        {
                            var return_v = this_param.IsStatic;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 129607, 129620);
                            return return_v;
                        }


                        int
                        f_10073_129551_129649(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol.DeclaredMembersAndInitializersBuilder
                        this_param, bool
                        useStatic, Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                        compilation, Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentListSyntax
                        syntax)
                        {
                            this_param.UpdateIsNullableEnabledForConstructorsAndFields(useStatic, compilation, (Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode)syntax);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 129551, 129649);
                            return 0;
                        }


                        int
                        f_10073_129891_129925(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbols.FieldOrPropertyInitializer>>
                        this_param)
                        {
                            var return_v = this_param.Count;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 129891, 129925);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbols.FieldOrPropertyInitializer>
                        f_10073_129955_130009()
                        {
                            var return_v = ArrayBuilder<FieldOrPropertyInitializer>.GetInstance();
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 129955, 130009);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.Location
                        f_10073_130152_130174(Microsoft.CodeAnalysis.CSharp.Syntax.ParameterListSyntax
                        this_param)
                        {
                            var return_v = this_param.Location;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 130152, 130174);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo
                        f_10073_130092_130175(Microsoft.CodeAnalysis.DiagnosticBag
                        diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                        code, Microsoft.CodeAnalysis.Location
                        location)
                        {
                            var return_v = diagnostics.Add(code, location);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 130092, 130175);
                            return return_v;
                        }

                    }
                    catch
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10073, 128554, 130244);
                        throw;
                    }
                    finally
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10073, 128554, 130244);
                    }
                    throw new System.Exception("Slicer error: unreachable code");
                }
                DynAbs.Tracing.TraceSender.TraceExitMethod(10073, 125907, 130255);

                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.SingleTypeDeclaration>
                f_10073_126065_126094(Microsoft.CodeAnalysis.CSharp.MergedTypeDeclaration
                this_param)
                {
                    var return_v = this_param.Declarations;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 126065, 126094);
                    return return_v;
                }


                bool
                f_10073_126132_126158_M(bool
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 126132, 126158);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SyntaxReference
                f_10073_126478_126498(Microsoft.CodeAnalysis.CSharp.SingleTypeDeclaration
                this_param)
                {
                    var return_v = this_param.SyntaxReference;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 126478, 126498);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SyntaxNode
                f_10073_126478_126510(Microsoft.CodeAnalysis.SyntaxReference
                this_param)
                {
                    var return_v = this_param.GetSyntax();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 126478, 126510);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.SyntaxKind
                f_10073_126539_126552(Microsoft.CodeAnalysis.SyntaxNode
                node)
                {
                    var return_v = node.Kind();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 126539, 126552);
                    return return_v;
                }


                int
                f_10073_126652_126719(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol.DeclaredMembersAndInitializersBuilder
                result, Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    this_param.AddEnumMembers(result, (Microsoft.CodeAnalysis.CSharp.Syntax.EnumDeclarationSyntax)syntax, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 126652, 126719);
                    return 0;
                }


                int
                f_10073_126838_126961(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                delegateType, Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbol>
                symbols, Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    SourceDelegateMethodSymbol.AddDelegateMembers(delegateType, symbols, (Microsoft.CodeAnalysis.CSharp.Syntax.DelegateDeclarationSyntax)syntax, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 126838, 126961);
                    return 0;
                }


                Microsoft.CodeAnalysis.SyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.MemberDeclarationSyntax>
                f_10073_127273_127317(Microsoft.CodeAnalysis.CSharp.Syntax.NamespaceDeclarationSyntax
                this_param)
                {
                    var return_v = this_param.Members;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 127273, 127317);
                    return return_v;
                }


                int
                f_10073_127218_127331(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol.DeclaredMembersAndInitializersBuilder
                builder, Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbols.FieldOrPropertyInitializer>?
                instanceInitializers, Microsoft.CodeAnalysis.SyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.MemberDeclarationSyntax>
                members, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    this_param.AddNonTypeMembers(builder, instanceInitializers: instanceInitializers, members, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 127218, 127331);
                    return 0;
                }


                Microsoft.CodeAnalysis.SyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.MemberDeclarationSyntax>
                f_10073_127501_127540(Microsoft.CodeAnalysis.CSharp.Syntax.CompilationUnitSyntax
                this_param)
                {
                    var return_v = this_param.Members;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 127501, 127540);
                    return return_v;
                }


                int
                f_10073_127446_127554(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol.DeclaredMembersAndInitializersBuilder
                builder, Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbols.FieldOrPropertyInitializer>?
                instanceInitializers, Microsoft.CodeAnalysis.SyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.MemberDeclarationSyntax>
                members, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    this_param.AddNonTypeMembers(builder, instanceInitializers: instanceInitializers, members, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 127446, 127554);
                    return 0;
                }


                Microsoft.CodeAnalysis.SyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.MemberDeclarationSyntax>
                f_10073_127911_127927(Microsoft.CodeAnalysis.CSharp.Syntax.TypeDeclarationSyntax
                this_param)
                {
                    var return_v = this_param.Members;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 127911, 127927);
                    return return_v;
                }


                int
                f_10073_127856_127941(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol.DeclaredMembersAndInitializersBuilder
                builder, Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbols.FieldOrPropertyInitializer>?
                instanceInitializers, Microsoft.CodeAnalysis.SyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.MemberDeclarationSyntax>
                members, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    this_param.AddNonTypeMembers(builder, instanceInitializers: instanceInitializers, members, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 127856, 127941);
                    return 0;
                }


                Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbols.FieldOrPropertyInitializer>?
                f_10073_128211_128265(Microsoft.CodeAnalysis.CSharp.Syntax.RecordDeclarationSyntax
                syntax, Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol.DeclaredMembersAndInitializersBuilder
                builder, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = noteRecordParameters(syntax, builder, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 128211, 128265);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.MemberDeclarationSyntax>
                f_10073_128296_128314(Microsoft.CodeAnalysis.CSharp.Syntax.RecordDeclarationSyntax
                this_param)
                {
                    var return_v = this_param.Members;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 128296, 128314);
                    return return_v;
                }


                int
                f_10073_128133_128357(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol.DeclaredMembersAndInitializersBuilder
                builder, Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbols.FieldOrPropertyInitializer>?
                instanceInitializers, Microsoft.CodeAnalysis.SyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.MemberDeclarationSyntax>
                members, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    this_param.AddNonTypeMembers(builder, instanceInitializers: instanceInitializers, members, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 128133, 128357);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.SyntaxKind
                f_10073_128489_128502(Microsoft.CodeAnalysis.SyntaxNode
                node)
                {
                    var return_v = node.Kind();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 128489, 128502);
                    return return_v;
                }


                System.Exception
                f_10073_128454_128503(Microsoft.CodeAnalysis.CSharp.SyntaxKind
                o)
                {
                    var return_v = ExceptionUtilities.UnexpectedValue((object)o);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 128454, 128503);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.SingleTypeDeclaration>
                f_10073_126065_126094_I(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.SingleTypeDeclaration>
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 126065, 126094);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10073, 125907, 130255);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10073, 125907, 130255);
            }
        }

        internal Binder GetBinder(CSharpSyntaxNode syntaxNode)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10073, 130267, 130412);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 130346, 130401);

                return f_10073_130353_130400(f_10073_130353_130378(this), syntaxNode);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10073, 130267, 130412);

                Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                f_10073_130353_130378(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                this_param)
                {
                    var return_v = this_param.DeclaringCompilation;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 130353, 130378);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Binder
                f_10073_130353_130400(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param, Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode
                syntax)
                {
                    var return_v = this_param.GetBinder(syntax);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 130353, 130400);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10073, 130267, 130412);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10073, 130267, 130412);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private void MergePartialMembers(
                    ref Dictionary<string, ImmutableArray<Symbol>> membersByName,
                    DiagnosticBag diagnostics)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10073, 130424, 134639);
                Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberMethodSymbol prev = default(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberMethodSymbol);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 130597, 130669);

                var
                memberNames = f_10073_130615_130668(f_10073_130648_130667(membersByName))
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 130683, 130724);

                f_10073_130683_130723(memberNames, f_10073_130704_130722(membersByName));
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 130793, 130921);

                var
                methodsBySignature = f_10073_130818_130920(MemberSignatureComparer.PartialMethodsComparer)
                ;
                try
                {
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 130937, 134593);
                    foreach (var name in f_10073_130958_130969_I(memberNames))
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 130937, 134593);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 131003, 131030);

                        f_10073_131003_131029(methodsBySignature);
                        try
                        {
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 131048, 133435);
                            foreach (var symbol in f_10073_131071_131090_I(f_10073_131071_131090(membersByName, name)))
                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 131048, 133435);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 131132, 131180);

                                var
                                method = symbol as SourceMemberMethodSymbol
                                ;

                                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 131202, 131365) || true) && (method is null || (DynAbs.Tracing.TraceSender.Expression_False(10073, 131206, 131241) || f_10073_131224_131241_M(!method.IsPartial)))
                                )

                                {
                                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 131202, 131365);
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 131291, 131300);

                                    continue;
                                    DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 131202, 131365);
                                }

                                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 131389, 133416) || true) && (f_10073_131393_131445(methodsBySignature, method, out prev))
                                )

                                {
                                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 131389, 133416);
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 131495, 131543);

                                    var
                                    prevPart = (SourceOrdinaryMethodSymbol)prev
                                    ;
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 131569, 131621);

                                    var
                                    methodPart = (SourceOrdinaryMethodSymbol)method
                                    ;

                                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 131649, 133256) || true) && (f_10073_131653_131687(methodPart) && (DynAbs.Tracing.TraceSender.Expression_True(10073, 131653, 131868) && (f_10073_131721_131753(prevPart) || (DynAbs.Tracing.TraceSender.Expression_False(10073, 131721, 131867) || (f_10073_131758_131785(prevPart) is MethodSymbol otherImplementation && (DynAbs.Tracing.TraceSender.Expression_True(10073, 131758, 131866) && (object)otherImplementation != methodPart))))))
                                    )

                                    {
                                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 131649, 133256);
                                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 132023, 132106);

                                        f_10073_132023_132105(                            // A partial method may not have multiple implementing declarations
                                                                    diagnostics, ErrorCode.ERR_PartialMethodOnlyOneActual, f_10073_132081_132101(methodPart)[0]);
                                        DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 131649, 133256);
                                    }

                                    else
                                    {
                                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 131649, 133256);

                                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 132164, 133256) || true) && (f_10073_132168_132198(methodPart) && (DynAbs.Tracing.TraceSender.Expression_True(10073, 132168, 132372) && (f_10073_132237_132265(prevPart) || (DynAbs.Tracing.TraceSender.Expression_False(10073, 132237, 132371) || (f_10073_132270_132297(prevPart) is MethodSymbol otherDefinition && (DynAbs.Tracing.TraceSender.Expression_True(10073, 132270, 132370) && (object)otherDefinition != methodPart))))))
                                        )

                                        {
                                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 132164, 133256);
                                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 132523, 132606);

                                            f_10073_132523_132605(                            // A partial method may not have multiple defining declarations
                                                                        diagnostics, ErrorCode.ERR_PartialMethodOnlyOneLatent, f_10073_132581_132601(methodPart)[0]);
                                            DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 132164, 133256);
                                        }

                                        else

                                        {
                                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 132164, 133256);

                                            if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 132720, 133115) || true) && ((object)membersByName == _lazyEarlyAttributeDecodingMembersDictionary)
                                            )

                                            {
                                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 132720, 133115);
                                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 133006, 133084);

                                                membersByName = f_10073_133022_133083(membersByName);
                                                DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 132720, 133115);
                                            }
                                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 133147, 133229);

                                            membersByName[name] = f_10073_133169_133228(f_10073_133186_133205(membersByName, name), prevPart, methodPart);
                                            DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 132164, 133256);
                                        }
                                        DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 131649, 133256);
                                    }
                                    DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 131389, 133416);
                                }

                                else

                                {
                                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 131389, 133416);
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 133354, 133393);

                                    f_10073_133354_133392(methodsBySignature, method, method);
                                    DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 131389, 133416);
                                }
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 131048, 133435);
                            }
                        }
                        catch (System.Exception)
                        {
                            DynAbs.Tracing.TraceSender.TraceExitLoopByException(10073, 1, 2388);
                            throw;
                        }
                        finally
                        {
                            DynAbs.Tracing.TraceSender.TraceExitLoop(10073, 1, 2388);
                        }
                        try
                        {
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 133455, 134578);
                            foreach (SourceOrdinaryMethodSymbol method in f_10073_133501_133526_I(f_10073_133501_133526(methodsBySignature)))
                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 133455, 134578);

                                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 133645, 134559) || true) && (f_10073_133649_133679(method) && (DynAbs.Tracing.TraceSender.Expression_True(10073, 133649, 133716) && f_10073_133683_133708(method) is null))
                                )

                                {
                                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 133645, 134559);
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 133766, 133854);

                                    f_10073_133766_133853(diagnostics, ErrorCode.ERR_PartialMethodMustHaveLatent, f_10073_133825_133841(method)[0], method);
                                    DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 133645, 134559);
                                }

                                else
                                {
                                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 133645, 134559);

                                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 133904, 134559) || true) && (f_10073_133908_133933(method) is MethodSymbol otherPart && (DynAbs.Tracing.TraceSender.Expression_True(10073, 133908, 134044) && f_10073_133963_134044(method, otherPart)))
                                    )

                                    {
                                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 133904, 134559);
                                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 134094, 134217);

                                        f_10073_134094_134216(diagnostics, ErrorCode.ERR_PartialMethodInconsistentTupleNames, f_10073_134161_134177(method)[0], method, f_10073_134190_134215(method));
                                        DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 133904, 134559);
                                    }

                                    else
                                    {
                                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 133904, 134559);

                                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 134267, 134559) || true) && (method is { IsPartialDefinition: true, OtherPartOfPartial: null, HasExplicitAccessModifier: true })
                                        )

                                        {
                                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 134267, 134559);
                                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 134419, 134536);

                                            f_10073_134419_134535(diagnostics, ErrorCode.ERR_PartialMethodWithAccessibilityModsMustHaveImplementation, f_10073_134507_134523(method)[0], method);
                                            DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 134267, 134559);
                                        }
                                        DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 133904, 134559);
                                    }
                                    DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 133645, 134559);
                                }
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 133455, 134578);
                            }
                        }
                        catch (System.Exception)
                        {
                            DynAbs.Tracing.TraceSender.TraceExitLoopByException(10073, 1, 1124);
                            throw;
                        }
                        finally
                        {
                            DynAbs.Tracing.TraceSender.TraceExitLoop(10073, 1, 1124);
                        }
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 130937, 134593);
                    }
                }
                catch (System.Exception)
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoopByException(10073, 1, 3657);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoop(10073, 1, 3657);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 134609, 134628);

                f_10073_134609_134627(
                            memberNames);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10073, 130424, 134639);

                int
                f_10073_130648_130667(System.Collections.Generic.Dictionary<string, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>>
                this_param)
                {
                    var return_v = this_param.Count;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 130648, 130667);
                    return return_v;
                }


                Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<string>
                f_10073_130615_130668(int
                capacity)
                {
                    var return_v = ArrayBuilder<string>.GetInstance(capacity);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 130615, 130668);
                    return return_v;
                }


                System.Collections.Generic.Dictionary<string, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>>.KeyCollection
                f_10073_130704_130722(System.Collections.Generic.Dictionary<string, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>>
                this_param)
                {
                    var return_v = this_param.Keys;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 130704, 130722);
                    return return_v;
                }


                int
                f_10073_130683_130723(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<string>
                this_param, System.Collections.Generic.Dictionary<string, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>>.KeyCollection
                items)
                {
                    this_param.AddRange((System.Collections.Generic.IEnumerable<string>)items);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 130683, 130723);
                    return 0;
                }


                System.Collections.Generic.Dictionary<Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol, Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberMethodSymbol>
                f_10073_130818_130920(Microsoft.CodeAnalysis.CSharp.Symbols.MemberSignatureComparer
                comparer)
                {
                    var return_v = new System.Collections.Generic.Dictionary<Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol, Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberMethodSymbol>((System.Collections.Generic.IEqualityComparer<Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol>)comparer);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 130818, 130920);
                    return return_v;
                }


                int
                f_10073_131003_131029(System.Collections.Generic.Dictionary<Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol, Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberMethodSymbol>
                this_param)
                {
                    this_param.Clear();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 131003, 131029);
                    return 0;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>
                f_10073_131071_131090(System.Collections.Generic.Dictionary<string, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>>
                this_param, string
                i0)
                {
                    var return_v = this_param[i0];
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 131071, 131090);
                    return return_v;
                }


                bool
                f_10073_131224_131241_M(bool
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 131224, 131241);
                    return return_v;
                }


                bool
                f_10073_131393_131445(System.Collections.Generic.Dictionary<Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol, Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberMethodSymbol>
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberMethodSymbol
                key, out Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberMethodSymbol?
                value)
                {
                    var return_v = this_param.TryGetValue((Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol)key, out value);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 131393, 131445);
                    return return_v;
                }


                bool
                f_10073_131653_131687(Microsoft.CodeAnalysis.CSharp.Symbols.SourceOrdinaryMethodSymbol
                this_param)
                {
                    var return_v = this_param.IsPartialImplementation;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 131653, 131687);
                    return return_v;
                }


                bool
                f_10073_131721_131753(Microsoft.CodeAnalysis.CSharp.Symbols.SourceOrdinaryMethodSymbol
                this_param)
                {
                    var return_v = this_param.IsPartialImplementation;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 131721, 131753);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.SourceOrdinaryMethodSymbol
                f_10073_131758_131785(Microsoft.CodeAnalysis.CSharp.Symbols.SourceOrdinaryMethodSymbol
                this_param)
                {
                    var return_v = this_param.OtherPartOfPartial;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 131758, 131785);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Location>
                f_10073_132081_132101(Microsoft.CodeAnalysis.CSharp.Symbols.SourceOrdinaryMethodSymbol
                this_param)
                {
                    var return_v = this_param.Locations;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 132081, 132101);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo
                f_10073_132023_132105(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, Microsoft.CodeAnalysis.Location
                location)
                {
                    var return_v = diagnostics.Add(code, location);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 132023, 132105);
                    return return_v;
                }


                bool
                f_10073_132168_132198(Microsoft.CodeAnalysis.CSharp.Symbols.SourceOrdinaryMethodSymbol
                this_param)
                {
                    var return_v = this_param.IsPartialDefinition;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 132168, 132198);
                    return return_v;
                }


                bool
                f_10073_132237_132265(Microsoft.CodeAnalysis.CSharp.Symbols.SourceOrdinaryMethodSymbol
                this_param)
                {
                    var return_v = this_param.IsPartialDefinition;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 132237, 132265);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.SourceOrdinaryMethodSymbol
                f_10073_132270_132297(Microsoft.CodeAnalysis.CSharp.Symbols.SourceOrdinaryMethodSymbol
                this_param)
                {
                    var return_v = this_param.OtherPartOfPartial;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 132270, 132297);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Location>
                f_10073_132581_132601(Microsoft.CodeAnalysis.CSharp.Symbols.SourceOrdinaryMethodSymbol
                this_param)
                {
                    var return_v = this_param.Locations;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 132581, 132601);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo
                f_10073_132523_132605(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, Microsoft.CodeAnalysis.Location
                location)
                {
                    var return_v = diagnostics.Add(code, location);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 132523, 132605);
                    return return_v;
                }


                System.Collections.Generic.Dictionary<string, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>>
                f_10073_133022_133083(System.Collections.Generic.Dictionary<string, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>>
                dictionary)
                {
                    var return_v = new System.Collections.Generic.Dictionary<string, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>>((System.Collections.Generic.IDictionary<string, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>>)dictionary);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 133022, 133083);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>
                f_10073_133186_133205(System.Collections.Generic.Dictionary<string, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>>
                this_param, string
                i0)
                {
                    var return_v = this_param[i0];
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 133186, 133205);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>
                f_10073_133169_133228(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>
                symbols, Microsoft.CodeAnalysis.CSharp.Symbols.SourceOrdinaryMethodSymbol
                part1, Microsoft.CodeAnalysis.CSharp.Symbols.SourceOrdinaryMethodSymbol
                part2)
                {
                    var return_v = FixPartialMember(symbols, part1, part2);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 133169, 133228);
                    return return_v;
                }


                int
                f_10073_133354_133392(System.Collections.Generic.Dictionary<Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol, Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberMethodSymbol>
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberMethodSymbol
                key, Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberMethodSymbol
                value)
                {
                    this_param.Add((Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol)key, value);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 133354, 133392);
                    return 0;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>
                f_10073_131071_131090_I(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 131071, 131090);
                    return return_v;
                }


                System.Collections.Generic.Dictionary<Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol, Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberMethodSymbol>.ValueCollection
                f_10073_133501_133526(System.Collections.Generic.Dictionary<Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol, Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberMethodSymbol>
                this_param)
                {
                    var return_v = this_param.Values;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 133501, 133526);
                    return return_v;
                }


                bool
                f_10073_133649_133679(Microsoft.CodeAnalysis.CSharp.Symbols.SourceOrdinaryMethodSymbol
                this_param)
                {
                    var return_v = this_param.IsPartialImplementation;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 133649, 133679);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.SourceOrdinaryMethodSymbol?
                f_10073_133683_133708(Microsoft.CodeAnalysis.CSharp.Symbols.SourceOrdinaryMethodSymbol
                this_param)
                {
                    var return_v = this_param.OtherPartOfPartial;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 133683, 133708);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Location>
                f_10073_133825_133841(Microsoft.CodeAnalysis.CSharp.Symbols.SourceOrdinaryMethodSymbol
                this_param)
                {
                    var return_v = this_param.Locations;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 133825, 133841);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo
                f_10073_133766_133853(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, Microsoft.CodeAnalysis.Location
                location, params object[]
                args)
                {
                    var return_v = diagnostics.Add(code, location, args);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 133766, 133853);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.SourceOrdinaryMethodSymbol?
                f_10073_133908_133933(Microsoft.CodeAnalysis.CSharp.Symbols.SourceOrdinaryMethodSymbol
                this_param)
                {
                    var return_v = this_param.OtherPartOfPartial;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 133908, 133933);
                    return return_v;
                }


                bool
                f_10073_133963_134044(Microsoft.CodeAnalysis.CSharp.Symbols.SourceOrdinaryMethodSymbol
                member1, Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                member2)
                {
                    var return_v = MemberSignatureComparer.ConsideringTupleNamesCreatesDifference((Microsoft.CodeAnalysis.CSharp.Symbol)member1, (Microsoft.CodeAnalysis.CSharp.Symbol)member2);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 133963, 134044);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Location>
                f_10073_134161_134177(Microsoft.CodeAnalysis.CSharp.Symbols.SourceOrdinaryMethodSymbol
                this_param)
                {
                    var return_v = this_param.Locations;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 134161, 134177);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.SourceOrdinaryMethodSymbol
                f_10073_134190_134215(Microsoft.CodeAnalysis.CSharp.Symbols.SourceOrdinaryMethodSymbol
                this_param)
                {
                    var return_v = this_param.OtherPartOfPartial;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 134190, 134215);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo
                f_10073_134094_134216(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, Microsoft.CodeAnalysis.Location
                location, params object[]
                args)
                {
                    var return_v = diagnostics.Add(code, location, args);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 134094, 134216);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Location>
                f_10073_134507_134523(Microsoft.CodeAnalysis.CSharp.Symbols.SourceOrdinaryMethodSymbol
                this_param)
                {
                    var return_v = this_param.Locations;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 134507, 134523);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo
                f_10073_134419_134535(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, Microsoft.CodeAnalysis.Location
                location, params object[]
                args)
                {
                    var return_v = diagnostics.Add(code, location, args);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 134419, 134535);
                    return return_v;
                }


                System.Collections.Generic.Dictionary<Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol, Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberMethodSymbol>.ValueCollection
                f_10073_133501_133526_I(System.Collections.Generic.Dictionary<Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol, Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberMethodSymbol>.ValueCollection
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 133501, 133526);
                    return return_v;
                }


                Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<string>
                f_10073_130958_130969_I(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<string>
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 130958, 130969);
                    return return_v;
                }


                int
                f_10073_134609_134627(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<string>
                this_param)
                {
                    this_param.Free();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 134609, 134627);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10073, 130424, 134639);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10073, 130424, 134639);
            }
        }

        private static ImmutableArray<Symbol> FixPartialMember(ImmutableArray<Symbol> symbols, SourceOrdinaryMethodSymbol part1, SourceOrdinaryMethodSymbol part2)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterStaticMethod(10073, 135248, 136056);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 135427, 135465);

                SourceOrdinaryMethodSymbol
                definition
                = default(SourceOrdinaryMethodSymbol);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 135479, 135521);

                SourceOrdinaryMethodSymbol
                implementation
                = default(SourceOrdinaryMethodSymbol);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 135535, 135799) || true) && (f_10073_135539_135564(part1))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 135535, 135799);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 135598, 135617);

                    definition = part1;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 135635, 135658);

                    implementation = part2;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 135535, 135799);
                }

                else

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 135535, 135799);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 135724, 135743);

                    definition = part2;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 135761, 135784);

                    implementation = part1;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 135535, 135799);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 135815, 135899);

                f_10073_135815_135898(definition, implementation);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 136006, 136045);

                return f_10073_136013_136044(symbols, implementation);
                DynAbs.Tracing.TraceSender.TraceExitStaticMethod(10073, 135248, 136056);

                bool
                f_10073_135539_135564(Microsoft.CodeAnalysis.CSharp.Symbols.SourceOrdinaryMethodSymbol
                this_param)
                {
                    var return_v = this_param.IsPartialDefinition;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 135539, 135564);
                    return return_v;
                }


                int
                f_10073_135815_135898(Microsoft.CodeAnalysis.CSharp.Symbols.SourceOrdinaryMethodSymbol
                definition, Microsoft.CodeAnalysis.CSharp.Symbols.SourceOrdinaryMethodSymbol
                implementation)
                {
                    SourceOrdinaryMethodSymbol.InitializePartialMethodParts(definition, implementation);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 135815, 135898);
                    return 0;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>
                f_10073_136013_136044(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>
                symbols, Microsoft.CodeAnalysis.CSharp.Symbols.SourceOrdinaryMethodSymbol
                symbol)
                {
                    var return_v = Remove(symbols, (Microsoft.CodeAnalysis.CSharp.Symbol)symbol);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 136013, 136044);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10073, 135248, 136056);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10073, 135248, 136056);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private static ImmutableArray<Symbol> Remove(ImmutableArray<Symbol> symbols, Symbol symbol)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterStaticMethod(10073, 136068, 136489);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 136184, 136233);

                var
                builder = f_10073_136198_136232()
                ;
                try
                {
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 136247, 136428);
                    foreach (var s in f_10073_136265_136272_I(symbols))
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 136247, 136428);

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 136306, 136413) || true) && (!f_10073_136311_136337(s, symbol))
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 136306, 136413);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 136379, 136394);

                            f_10073_136379_136393(builder, s);
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 136306, 136413);
                        }
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 136247, 136428);
                    }
                }
                catch (System.Exception)
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoopByException(10073, 1, 182);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoop(10073, 1, 182);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 136442, 136478);

                return f_10073_136449_136477(builder);
                DynAbs.Tracing.TraceSender.TraceExitStaticMethod(10073, 136068, 136489);

                Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbol>
                f_10073_136198_136232()
                {
                    var return_v = ArrayBuilder<Symbol>.GetInstance();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 136198, 136232);
                    return return_v;
                }


                bool
                f_10073_136311_136337(Microsoft.CodeAnalysis.CSharp.Symbol
                objA, Microsoft.CodeAnalysis.CSharp.Symbol
                objB)
                {
                    var return_v = ReferenceEquals((object)objA, (object)objB);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 136311, 136337);
                    return return_v;
                }


                int
                f_10073_136379_136393(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbol>
                this_param, Microsoft.CodeAnalysis.CSharp.Symbol
                item)
                {
                    this_param.Add(item);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 136379, 136393);
                    return 0;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>
                f_10073_136265_136272_I(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 136265, 136272);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>
                f_10073_136449_136477(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbol>
                this_param)
                {
                    var return_v = this_param.ToImmutableAndFree();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 136449, 136477);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10073, 136068, 136489);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10073, 136068, 136489);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private void CheckForMemberConflictWithPropertyAccessor(
                    PropertySymbol propertySymbol,
                    bool getNotSet,
                    DiagnosticBag diagnostics)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10073, 136732, 138794);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 136926, 136990);

                f_10073_136926_136989(f_10073_136939_136988_M(!propertySymbol.IsExplicitInterfaceImplementation));
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 137027, 137115);

                MethodSymbol
                accessor = (DynAbs.Tracing.TraceSender.Conditional_F1(10073, 137051, 137060) || ((getNotSet && DynAbs.Tracing.TraceSender.Conditional_F2(10073, 137063, 137087)) || DynAbs.Tracing.TraceSender.Conditional_F3(10073, 137090, 137114))) ? f_10073_137063_137087(propertySymbol) : f_10073_137090_137114(propertySymbol)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 137129, 137149);

                string
                accessorName
                = default(string);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 137163, 137625) || true) && ((object)accessor != null)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 137163, 137625);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 137225, 137254);

                    accessorName = f_10073_137240_137253(accessor);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 137163, 137625);
                }

                else

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 137163, 137625);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 137320, 137419);

                    string
                    propertyName = (DynAbs.Tracing.TraceSender.Conditional_F1(10073, 137342, 137366) || ((f_10073_137342_137366(propertySymbol) && DynAbs.Tracing.TraceSender.Conditional_F2(10073, 137369, 137396)) || DynAbs.Tracing.TraceSender.Conditional_F3(10073, 137399, 137418))) ? f_10073_137369_137396(propertySymbol) : f_10073_137399_137418(propertySymbol)
                    ;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 137437, 137610);

                    accessorName = f_10073_137452_137609(propertyName, getNotSet, f_10073_137564_137608(propertySymbol));
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 137163, 137625);
                }
                try
                {
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 137641, 138783);
                    foreach (var symbol in f_10073_137664_137688_I(f_10073_137664_137688(this, accessorName)))
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 137641, 138783);

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 137722, 138768) || true) && (f_10073_137726_137737(symbol) != SymbolKind.Method)
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 137722, 138768);

                            if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 137879, 138074) || true) && (f_10073_137883_137892().Length == 1 || (DynAbs.Tracing.TraceSender.Expression_False(10073, 137883, 137917) || f_10073_137908_137917()))
                            )

                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 137879, 138074);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 137944, 138074);

                                f_10073_137944_138073(diagnostics, ErrorCode.ERR_DuplicateNameInClass, f_10073_137996_138052(propertySymbol, getNotSet), this, accessorName);
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 137879, 138074);
                            }
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 138096, 138103);

                            return;
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 137722, 138768);
                        }

                        else

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 137722, 138768);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 138185, 138225);

                            var
                            methodSymbol = (MethodSymbol)symbol
                            ;

                            if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 138247, 138749) || true) && ((f_10073_138252_138275(methodSymbol) == MethodKind.Ordinary) && (DynAbs.Tracing.TraceSender.Expression_True(10073, 138251, 138411) && f_10073_138328_138411(propertySymbol, getNotSet, f_10073_138387_138410(methodSymbol))))
                            )

                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 138247, 138749);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 138569, 138693);

                                f_10073_138569_138692(                        // Type '{1}' already reserves a member called '{0}' with the same parameter types
                                                        diagnostics, ErrorCode.ERR_MemberReserved, f_10073_138615_138671(propertySymbol, getNotSet), accessorName, this);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 138719, 138726);

                                return;
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 138247, 138749);
                            }
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 137722, 138768);
                        }
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 137641, 138783);
                    }
                }
                catch (System.Exception)
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoopByException(10073, 1, 1143);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoop(10073, 1, 1143);
                }
                DynAbs.Tracing.TraceSender.TraceExitMethod(10073, 136732, 138794);

                bool
                f_10073_136939_136988_M(bool
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 136939, 136988);
                    return return_v;
                }


                int
                f_10073_136926_136989(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 136926, 136989);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                f_10073_137063_137087(Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol
                this_param)
                {
                    var return_v = this_param.GetMethod;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 137063, 137087);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                f_10073_137090_137114(Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol
                this_param)
                {
                    var return_v = this_param.SetMethod;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 137090, 137114);
                    return return_v;
                }


                string
                f_10073_137240_137253(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                this_param)
                {
                    var return_v = this_param.Name;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 137240, 137253);
                    return return_v;
                }


                bool
                f_10073_137342_137366(Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol
                this_param)
                {
                    var return_v = this_param.IsIndexer;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 137342, 137366);
                    return return_v;
                }


                string
                f_10073_137369_137396(Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol
                this_param)
                {
                    var return_v = this_param.MetadataName;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 137369, 137396);
                    return return_v;
                }


                string
                f_10073_137399_137418(Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol
                this_param)
                {
                    var return_v = this_param.Name;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 137399, 137418);
                    return return_v;
                }


                bool
                f_10073_137564_137608(Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol
                symbol)
                {
                    var return_v = symbol.IsCompilationOutputWinMdObj();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 137564, 137608);
                    return return_v;
                }


                string
                f_10073_137452_137609(string
                propertyName, bool
                getNotSet, bool
                isWinMdOutput)
                {
                    var return_v = SourcePropertyAccessorSymbol.GetAccessorName(propertyName, getNotSet, isWinMdOutput);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 137452, 137609);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>
                f_10073_137664_137688(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                this_param, string
                name)
                {
                    var return_v = this_param.GetMembers(name);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 137664, 137688);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SymbolKind
                f_10073_137726_137737(Microsoft.CodeAnalysis.CSharp.Symbol
                this_param)
                {
                    var return_v = this_param.Kind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 137726, 137737);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Location>
                f_10073_137883_137892()
                {
                    var return_v = Locations;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 137883, 137892);
                    return return_v;
                }


                bool
                f_10073_137908_137917()
                {
                    var return_v = IsPartial;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 137908, 137917);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Location
                f_10073_137996_138052(Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol
                propertySymbol, bool
                getNotSet)
                {
                    var return_v = GetAccessorOrPropertyLocation(propertySymbol, getNotSet);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 137996, 138052);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo
                f_10073_137944_138073(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, Microsoft.CodeAnalysis.Location
                location, params object[]
                args)
                {
                    var return_v = diagnostics.Add(code, location, args);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 137944, 138073);
                    return return_v;
                }


                Microsoft.CodeAnalysis.MethodKind
                f_10073_138252_138275(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                this_param)
                {
                    var return_v = this_param.MethodKind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 138252, 138275);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol>
                f_10073_138387_138410(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                this_param)
                {
                    var return_v = this_param.Parameters;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 138387, 138410);
                    return return_v;
                }


                bool
                f_10073_138328_138411(Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol
                propertySymbol, bool
                getNotSet, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol>
                methodParams)
                {
                    var return_v = ParametersMatchPropertyAccessor(propertySymbol, getNotSet, methodParams);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 138328, 138411);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Location
                f_10073_138615_138671(Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol
                propertySymbol, bool
                getNotSet)
                {
                    var return_v = GetAccessorOrPropertyLocation(propertySymbol, getNotSet);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 138615, 138671);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo
                f_10073_138569_138692(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, Microsoft.CodeAnalysis.Location
                location, params object[]
                args)
                {
                    var return_v = diagnostics.Add(code, location, args);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 138569, 138692);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>
                f_10073_137664_137688_I(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 137664, 137688);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10073, 136732, 138794);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10073, 136732, 138794);
            }
        }

        private void CheckForMemberConflictWithEventAccessor(
                    EventSymbol eventSymbol,
                    bool isAdder,
                    DiagnosticBag diagnostics)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10073, 139034, 140534);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 139217, 139278);

                f_10073_139217_139277(f_10073_139230_139276_M(!eventSymbol.IsExplicitInterfaceImplementation));
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 139315, 139398);

                string
                accessorName = f_10073_139337_139397(f_10073_139371_139387(eventSymbol), isAdder)
                ;
                try
                {
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 139414, 140523);
                    foreach (var symbol in f_10073_139437_139461_I(f_10073_139437_139461(this, accessorName)))
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 139414, 140523);

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 139495, 140508) || true) && (f_10073_139499_139510(symbol) != SymbolKind.Method)
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 139495, 140508);

                            if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 139652, 139839) || true) && (f_10073_139656_139665().Length == 1 || (DynAbs.Tracing.TraceSender.Expression_False(10073, 139656, 139690) || f_10073_139681_139690()))
                            )

                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 139652, 139839);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 139717, 139839);

                                f_10073_139717_139838(diagnostics, ErrorCode.ERR_DuplicateNameInClass, f_10073_139769_139817(eventSymbol, isAdder), this, accessorName);
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 139652, 139839);
                            }
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 139861, 139868);

                            return;
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 139495, 140508);
                        }

                        else

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 139495, 140508);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 139950, 139990);

                            var
                            methodSymbol = (MethodSymbol)symbol
                            ;

                            if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 140012, 140489) || true) && ((f_10073_140017_140040(methodSymbol) == MethodKind.Ordinary) && (DynAbs.Tracing.TraceSender.Expression_True(10073, 140016, 140159) && f_10073_140093_140159(eventSymbol, f_10073_140135_140158(methodSymbol))))
                            )

                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 140012, 140489);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 140317, 140433);

                                f_10073_140317_140432(                        // Type '{1}' already reserves a member called '{0}' with the same parameter types
                                                        diagnostics, ErrorCode.ERR_MemberReserved, f_10073_140363_140411(eventSymbol, isAdder), accessorName, this);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 140459, 140466);

                                return;
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 140012, 140489);
                            }
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 139495, 140508);
                        }
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 139414, 140523);
                    }
                }
                catch (System.Exception)
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoopByException(10073, 1, 1110);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoop(10073, 1, 1110);
                }
                DynAbs.Tracing.TraceSender.TraceExitMethod(10073, 139034, 140534);

                bool
                f_10073_139230_139276_M(bool
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 139230, 139276);
                    return return_v;
                }


                int
                f_10073_139217_139277(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 139217, 139277);
                    return 0;
                }


                string
                f_10073_139371_139387(Microsoft.CodeAnalysis.CSharp.Symbols.EventSymbol
                this_param)
                {
                    var return_v = this_param.Name;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 139371, 139387);
                    return return_v;
                }


                string
                f_10073_139337_139397(string
                eventName, bool
                isAdder)
                {
                    var return_v = SourceEventSymbol.GetAccessorName(eventName, isAdder);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 139337, 139397);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>
                f_10073_139437_139461(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                this_param, string
                name)
                {
                    var return_v = this_param.GetMembers(name);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 139437, 139461);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SymbolKind
                f_10073_139499_139510(Microsoft.CodeAnalysis.CSharp.Symbol
                this_param)
                {
                    var return_v = this_param.Kind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 139499, 139510);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Location>
                f_10073_139656_139665()
                {
                    var return_v = Locations;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 139656, 139665);
                    return return_v;
                }


                bool
                f_10073_139681_139690()
                {
                    var return_v = IsPartial;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 139681, 139690);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Location
                f_10073_139769_139817(Microsoft.CodeAnalysis.CSharp.Symbols.EventSymbol
                propertySymbol, bool
                isAdder)
                {
                    var return_v = GetAccessorOrEventLocation(propertySymbol, isAdder);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 139769, 139817);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo
                f_10073_139717_139838(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, Microsoft.CodeAnalysis.Location
                location, params object[]
                args)
                {
                    var return_v = diagnostics.Add(code, location, args);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 139717, 139838);
                    return return_v;
                }


                Microsoft.CodeAnalysis.MethodKind
                f_10073_140017_140040(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                this_param)
                {
                    var return_v = this_param.MethodKind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 140017, 140040);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol>
                f_10073_140135_140158(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                this_param)
                {
                    var return_v = this_param.Parameters;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 140135, 140158);
                    return return_v;
                }


                bool
                f_10073_140093_140159(Microsoft.CodeAnalysis.CSharp.Symbols.EventSymbol
                eventSymbol, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol>
                methodParams)
                {
                    var return_v = ParametersMatchEventAccessor(eventSymbol, methodParams);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 140093, 140159);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Location
                f_10073_140363_140411(Microsoft.CodeAnalysis.CSharp.Symbols.EventSymbol
                propertySymbol, bool
                isAdder)
                {
                    var return_v = GetAccessorOrEventLocation(propertySymbol, isAdder);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 140363, 140411);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo
                f_10073_140317_140432(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, Microsoft.CodeAnalysis.Location
                location, params object[]
                args)
                {
                    var return_v = diagnostics.Add(code, location, args);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 140317, 140432);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>
                f_10073_139437_139461_I(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 139437, 139461);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10073, 139034, 140534);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10073, 139034, 140534);
            }
        }

        private static Location GetAccessorOrPropertyLocation(PropertySymbol propertySymbol, bool getNotSet)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterStaticMethod(10073, 140692, 140986);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 140817, 140928);

                var
                locationFrom = (Symbol)((DynAbs.Tracing.TraceSender.Conditional_F1(10073, 140845, 140854) || ((getNotSet && DynAbs.Tracing.TraceSender.Conditional_F2(10073, 140857, 140881)) || DynAbs.Tracing.TraceSender.Conditional_F3(10073, 140884, 140908))) ? f_10073_140857_140881(propertySymbol) : f_10073_140884_140908(propertySymbol)) ?? (DynAbs.Tracing.TraceSender.Expression_Null<Microsoft.CodeAnalysis.CSharp.Symbol>(10073, 140836, 140927) ?? propertySymbol)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 140942, 140975);

                return f_10073_140949_140971(locationFrom)[0];
                DynAbs.Tracing.TraceSender.TraceExitStaticMethod(10073, 140692, 140986);

                Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                f_10073_140857_140881(Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol
                this_param)
                {
                    var return_v = this_param.GetMethod;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 140857, 140881);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                f_10073_140884_140908(Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol
                this_param)
                {
                    var return_v = this_param.SetMethod;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 140884, 140908);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Location>
                f_10073_140949_140971(Microsoft.CodeAnalysis.CSharp.Symbol
                this_param)
                {
                    var return_v = this_param.Locations;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 140949, 140971);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10073, 140692, 140986);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10073, 140692, 140986);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private static Location GetAccessorOrEventLocation(EventSymbol propertySymbol, bool isAdder)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterStaticMethod(10073, 141141, 141429);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 141258, 141371);

                var
                locationFrom = (Symbol?)((DynAbs.Tracing.TraceSender.Conditional_F1(10073, 141287, 141294) || ((isAdder && DynAbs.Tracing.TraceSender.Conditional_F2(10073, 141297, 141321)) || DynAbs.Tracing.TraceSender.Conditional_F3(10073, 141324, 141351))) ? f_10073_141297_141321(propertySymbol) : f_10073_141324_141351(propertySymbol)) ?? (DynAbs.Tracing.TraceSender.Expression_Null<Microsoft.CodeAnalysis.CSharp.Symbol?>(10073, 141277, 141370) ?? propertySymbol)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 141385, 141418);

                return f_10073_141392_141414(locationFrom)[0];
                DynAbs.Tracing.TraceSender.TraceExitStaticMethod(10073, 141141, 141429);

                Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol?
                f_10073_141297_141321(Microsoft.CodeAnalysis.CSharp.Symbols.EventSymbol
                this_param)
                {
                    var return_v = this_param.AddMethod;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 141297, 141321);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol?
                f_10073_141324_141351(Microsoft.CodeAnalysis.CSharp.Symbols.EventSymbol
                this_param)
                {
                    var return_v = this_param.RemoveMethod;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 141324, 141351);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Location>
                f_10073_141392_141414(Microsoft.CodeAnalysis.CSharp.Symbol
                this_param)
                {
                    var return_v = this_param.Locations;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 141392, 141414);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10073, 141141, 141429);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10073, 141141, 141429);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private static bool ParametersMatchPropertyAccessor(PropertySymbol propertySymbol, bool getNotSet, ImmutableArray<ParameterSymbol> methodParams)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterStaticMethod(10073, 141644, 142687);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 141813, 141860);

                var
                propertyParams = f_10073_141834_141859(propertySymbol)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 141874, 141934);

                var
                numParams = propertyParams.Length + ((DynAbs.Tracing.TraceSender.Conditional_F1(10073, 141915, 141924) || ((getNotSet && DynAbs.Tracing.TraceSender.Conditional_F2(10073, 141927, 141928)) || DynAbs.Tracing.TraceSender.Conditional_F3(10073, 141931, 141932))) ? 0 : 1)
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 141948, 142046) || true) && (numParams != methodParams.Length)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 141948, 142046);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 142018, 142031);

                    return false;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 141948, 142046);
                }
                try
                {
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 142071, 142076);

                    for (int
        i = 0
        ; (DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 142062, 142648) || true) && (i < numParams)
        ; DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 142093, 142096)
        , i++, DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 142062, 142648))

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 142062, 142648);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 142130, 142164);

                        var
                        methodParam = methodParams[i]
                        ;

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 142182, 142295) || true) && (f_10073_142186_142205(methodParam) != RefKind.None)
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 142182, 142295);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 142263, 142276);

                            return false;
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 142182, 142295);
                        }
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 142315, 142460);

                        var
                        propertyParamType = ((DynAbs.Tracing.TraceSender.Conditional_F1(10073, 142340, 142376) || ((((i == numParams - 1) && (DynAbs.Tracing.TraceSender.Expression_True(10073, 142341, 142375) && !getNotSet)) && DynAbs.Tracing.TraceSender.Conditional_F2(10073, 142379, 142413)) || DynAbs.Tracing.TraceSender.Conditional_F3(10073, 142416, 142453))) ? f_10073_142379_142413(propertySymbol) : f_10073_142416_142453(propertyParams[i])).Type
                        ;

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 142478, 142633) || true) && (!f_10073_142483_142559(propertyParamType, f_10073_142508_142524(methodParam), TypeCompareKind.AllIgnoreOptions))
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 142478, 142633);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 142601, 142614);

                            return false;
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 142478, 142633);
                        }
                    }
                }
                catch (System.Exception)
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoopByException(10073, 1, 587);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoop(10073, 1, 587);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 142664, 142676);

                return true;
                DynAbs.Tracing.TraceSender.TraceExitStaticMethod(10073, 141644, 142687);

                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol>
                f_10073_141834_141859(Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol
                this_param)
                {
                    var return_v = this_param.Parameters;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 141834, 141859);
                    return return_v;
                }


                Microsoft.CodeAnalysis.RefKind
                f_10073_142186_142205(Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol
                this_param)
                {
                    var return_v = this_param.RefKind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 142186, 142205);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                f_10073_142379_142413(Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol
                this_param)
                {
                    var return_v = this_param.TypeWithAnnotations;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 142379, 142413);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                f_10073_142416_142453(Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol
                this_param)
                {
                    var return_v = this_param.TypeWithAnnotations;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 142416, 142453);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                f_10073_142508_142524(Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 142508, 142524);
                    return return_v;
                }


                bool
                f_10073_142483_142559(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                t2, Microsoft.CodeAnalysis.TypeCompareKind
                compareKind)
                {
                    var return_v = this_param.Equals(t2, compareKind);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 142483, 142559);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10073, 141644, 142687);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10073, 141644, 142687);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private static bool ParametersMatchEventAccessor(EventSymbol eventSymbol, ImmutableArray<ParameterSymbol> methodParams)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterStaticMethod(10073, 142884, 143248);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 143028, 143237);

                return
                                methodParams.Length == 1 && (DynAbs.Tracing.TraceSender.Expression_True(10073, 143052, 143136) && f_10073_143097_143120(methodParams[0]) == RefKind.None) && (DynAbs.Tracing.TraceSender.Expression_True(10073, 143052, 143236) && f_10073_143157_143236(f_10073_143157_143173(eventSymbol), f_10073_143181_143201(methodParams[0]), TypeCompareKind.AllIgnoreOptions));
                DynAbs.Tracing.TraceSender.TraceExitStaticMethod(10073, 142884, 143248);

                Microsoft.CodeAnalysis.RefKind
                f_10073_143097_143120(Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol
                this_param)
                {
                    var return_v = this_param.RefKind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 143097, 143120);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                f_10073_143157_143173(Microsoft.CodeAnalysis.CSharp.Symbols.EventSymbol
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 143157, 143173);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                f_10073_143181_143201(Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 143181, 143201);
                    return return_v;
                }


                bool
                f_10073_143157_143236(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                t2, Microsoft.CodeAnalysis.TypeCompareKind
                compareKind)
                {
                    var return_v = this_param.Equals(t2, compareKind);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 143157, 143236);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10073, 142884, 143248);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10073, 142884, 143248);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private void AddEnumMembers(DeclaredMembersAndInitializersBuilder result, EnumDeclarationSyntax syntax, DiagnosticBag diagnostics)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10073, 143260, 144714);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 143647, 143692);

                SourceEnumConstantSymbol?
                otherSymbol = null
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 143751, 143777);

                int
                otherSymbolOffset = 0
                ;
                try
                {
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 143793, 144703);
                    foreach (var member in f_10073_143816_143830_I(f_10073_143816_143830(syntax)))
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 143793, 144703);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 143864, 143896);

                        SourceEnumConstantSymbol
                        symbol
                        = default(SourceEnumConstantSymbol);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 143914, 143948);

                        var
                        valueOpt = f_10073_143929_143947(member)
                        ;

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 143968, 144343) || true) && (valueOpt != null)
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 143968, 144343);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 144030, 144120);

                            symbol = f_10073_144039_144119(this, member, diagnostics);
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 143968, 144343);
                        }

                        else

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 143968, 144343);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 144202, 144324);

                            symbol = f_10073_144211_144323(this, member, otherSymbol, otherSymbolOffset, diagnostics);
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 143968, 144343);
                        }
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 144363, 144397);

                        f_10073_144363_144396(
                                        result.NonTypeMembers, symbol);

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 144417, 144688) || true) && (valueOpt != null || (DynAbs.Tracing.TraceSender.Expression_False(10073, 144421, 144460) || otherSymbol is null))
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 144417, 144688);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 144502, 144523);

                            otherSymbol = symbol;
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 144545, 144567);

                            otherSymbolOffset = 1;
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 144417, 144688);
                        }

                        else

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 144417, 144688);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 144649, 144669);

                            otherSymbolOffset++;
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 144417, 144688);
                        }
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 143793, 144703);
                    }
                }
                catch (System.Exception)
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoopByException(10073, 1, 911);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoop(10073, 1, 911);
                }
                DynAbs.Tracing.TraceSender.TraceExitMethod(10073, 143260, 144714);

                Microsoft.CodeAnalysis.SeparatedSyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.EnumMemberDeclarationSyntax>
                f_10073_143816_143830(Microsoft.CodeAnalysis.CSharp.Syntax.EnumDeclarationSyntax
                this_param)
                {
                    var return_v = this_param.Members;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 143816, 143830);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Syntax.EqualsValueClauseSyntax?
                f_10073_143929_143947(Microsoft.CodeAnalysis.CSharp.Syntax.EnumMemberDeclarationSyntax
                this_param)
                {
                    var return_v = this_param.EqualsValue;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 143929, 143947);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.SourceEnumConstantSymbol
                f_10073_144039_144119(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                containingEnum, Microsoft.CodeAnalysis.CSharp.Syntax.EnumMemberDeclarationSyntax
                syntax, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = SourceEnumConstantSymbol.CreateExplicitValuedConstant(containingEnum, syntax, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 144039, 144119);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.SourceEnumConstantSymbol
                f_10073_144211_144323(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                containingEnum, Microsoft.CodeAnalysis.CSharp.Syntax.EnumMemberDeclarationSyntax
                syntax, Microsoft.CodeAnalysis.CSharp.Symbols.SourceEnumConstantSymbol?
                otherConstant, int
                otherConstantOffset, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = SourceEnumConstantSymbol.CreateImplicitValuedConstant(containingEnum, syntax, otherConstant, otherConstantOffset, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 144211, 144323);
                    return return_v;
                }


                int
                f_10073_144363_144396(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbol>
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.SourceEnumConstantSymbol
                item)
                {
                    this_param.Add((Microsoft.CodeAnalysis.CSharp.Symbol)item);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 144363, 144396);
                    return 0;
                }


                Microsoft.CodeAnalysis.SeparatedSyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.EnumMemberDeclarationSyntax>
                f_10073_143816_143830_I(Microsoft.CodeAnalysis.SeparatedSyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.EnumMemberDeclarationSyntax>
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 143816, 143830);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10073, 143260, 144714);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10073, 143260, 144714);
            }
        }

        private static void AddInitializer(ref ArrayBuilder<FieldOrPropertyInitializer>? initializers, FieldSymbol? fieldOpt, CSharpSyntaxNode node)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterStaticMethod(10073, 144726, 145445);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 144891, 145353) || true) && (initializers == null)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 144891, 145353);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 144949, 145019);

                    initializers = f_10073_144964_145018();
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 144891, 145353);
                }

                else
                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 144891, 145353);

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 145053, 145353) || true) && (f_10073_145057_145075(initializers) != 0)
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 145053, 145353);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 145180, 145251);

                        f_10073_145180_145250(f_10073_145193_145208(node) == f_10073_145212_145249(f_10073_145212_145231(initializers).Syntax));
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 145269, 145338);

                        f_10073_145269_145337(f_10073_145282_145296(node) > f_10073_145299_145318(initializers).Syntax.Span.Start);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 145053, 145353);
                    }
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 144891, 145353);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 145369, 145434);

                f_10073_145369_145433(
                            initializers, f_10073_145386_145432(fieldOpt, node));
                DynAbs.Tracing.TraceSender.TraceExitStaticMethod(10073, 144726, 145445);

                Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbols.FieldOrPropertyInitializer>
                f_10073_144964_145018()
                {
                    var return_v = ArrayBuilder<FieldOrPropertyInitializer>.GetInstance();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 144964, 145018);
                    return return_v;
                }


                int
                f_10073_145057_145075(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbols.FieldOrPropertyInitializer>
                this_param)
                {
                    var return_v = this_param.Count;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 145057, 145075);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SyntaxTree
                f_10073_145193_145208(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode
                this_param)
                {
                    var return_v = this_param.SyntaxTree;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 145193, 145208);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.FieldOrPropertyInitializer
                f_10073_145212_145231(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbols.FieldOrPropertyInitializer>
                this_param)
                {
                    var return_v = this_param.Last();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 145212, 145231);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SyntaxTree
                f_10073_145212_145249(Microsoft.CodeAnalysis.SyntaxReference
                this_param)
                {
                    var return_v = this_param.SyntaxTree;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 145212, 145249);
                    return return_v;
                }


                int
                f_10073_145180_145250(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 145180, 145250);
                    return 0;
                }


                int
                f_10073_145282_145296(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode
                this_param)
                {
                    var return_v = this_param.SpanStart;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 145282, 145296);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.FieldOrPropertyInitializer
                f_10073_145299_145318(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbols.FieldOrPropertyInitializer>
                this_param)
                {
                    var return_v = this_param.Last();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 145299, 145318);
                    return return_v;
                }


                int
                f_10073_145269_145337(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 145269, 145337);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.FieldOrPropertyInitializer
                f_10073_145386_145432(Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol?
                fieldOpt, Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode
                syntax)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.Symbols.FieldOrPropertyInitializer(fieldOpt, (Microsoft.CodeAnalysis.SyntaxNode)syntax);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 145386, 145432);
                    return return_v;
                }


                int
                f_10073_145369_145433(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbols.FieldOrPropertyInitializer>
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.FieldOrPropertyInitializer
                item)
                {
                    this_param.Add(item);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 145369, 145433);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10073, 144726, 145445);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10073, 144726, 145445);
            }
        }

        private static void AddInitializers(
                    ArrayBuilder<ArrayBuilder<FieldOrPropertyInitializer>> allInitializers,
                    ArrayBuilder<FieldOrPropertyInitializer>? siblingsOpt)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterStaticMethod(10073, 145457, 145787);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 145671, 145776) || true) && (siblingsOpt != null)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 145671, 145776);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 145728, 145761);

                    f_10073_145728_145760(allInitializers, siblingsOpt);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 145671, 145776);
                }
                DynAbs.Tracing.TraceSender.TraceExitStaticMethod(10073, 145457, 145787);

                int
                f_10073_145728_145760(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbols.FieldOrPropertyInitializer>>
                this_param, Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbols.FieldOrPropertyInitializer>
                item)
                {
                    this_param.Add(item);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 145728, 145760);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10073, 145457, 145787);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10073, 145457, 145787);
            }
        }

        private static void CheckInterfaceMembers(ImmutableArray<Symbol> nonTypeMembers, DiagnosticBag diagnostics)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterStaticMethod(10073, 145799, 146070);
                try
                {
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 145931, 146059);
                    foreach (var member in f_10073_145954_145968_I(nonTypeMembers))
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 145931, 146059);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 146002, 146044);

                        f_10073_146002_146043(member, diagnostics);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 145931, 146059);
                    }
                }
                catch (System.Exception)
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoopByException(10073, 1, 129);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoop(10073, 1, 129);
                }
                DynAbs.Tracing.TraceSender.TraceExitStaticMethod(10073, 145799, 146070);

                int
                f_10073_146002_146043(Microsoft.CodeAnalysis.CSharp.Symbol
                member, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    CheckInterfaceMember(member, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 146002, 146043);
                    return 0;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>
                f_10073_145954_145968_I(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 145954, 145968);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10073, 145799, 146070);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10073, 145799, 146070);
            }
        }

        private static void CheckInterfaceMember(Symbol member, DiagnosticBag diagnostics)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterStaticMethod(10073, 146082, 148541);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 146189, 148530);

                switch (f_10073_146197_146208(member))
                {

                    case SymbolKind.Field:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 146189, 148530);
                        DynAbs.Tracing.TraceSender.TraceBreak(10073, 146286, 146292);

                        break;
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 146189, 148530);

                    case SymbolKind.Method:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 146189, 148530);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 146357, 146389);

                        var
                        meth = (MethodSymbol)member
                        ;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 146411, 148240);

                        switch (f_10073_146419_146434(meth))
                        {

                            case MethodKind.Constructor:
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 146411, 148240);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 146542, 146628);

                                f_10073_146542_146627(diagnostics, ErrorCode.ERR_InterfacesCantContainConstructors, f_10073_146607_146623(member)[0]);
                                DynAbs.Tracing.TraceSender.TraceBreak(10073, 146658, 146664);

                                break;
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 146411, 148240);

                            case MethodKind.Conversion:
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 146411, 148240);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 146747, 146850);

                                f_10073_146747_146849(diagnostics, ErrorCode.ERR_InterfacesCantContainConversionOrEqualityOperators, f_10073_146829_146845(member)[0]);
                                DynAbs.Tracing.TraceSender.TraceBreak(10073, 146880, 146886);

                                break;
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 146411, 148240);

                            case MethodKind.UserDefinedOperator:
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 146411, 148240);

                                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 146978, 147296) || true) && (f_10073_146982_146991(meth) == WellKnownMemberNames.EqualityOperatorName || (DynAbs.Tracing.TraceSender.Expression_False(10073, 146982, 147096) || f_10073_147040_147049(meth) == WellKnownMemberNames.InequalityOperatorName))
                                )

                                {
                                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 146978, 147296);
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 147162, 147265);

                                    f_10073_147162_147264(diagnostics, ErrorCode.ERR_InterfacesCantContainConversionOrEqualityOperators, f_10073_147244_147260(member)[0]);
                                    DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 146978, 147296);
                                }
                                DynAbs.Tracing.TraceSender.TraceBreak(10073, 147326, 147332);

                                break;
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 146411, 148240);

                            case MethodKind.Destructor:
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 146411, 148240);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 147415, 147500);

                                f_10073_147415_147499(diagnostics, ErrorCode.ERR_OnlyClassesCanContainDestructors, f_10073_147479_147495(member)[0]);
                                DynAbs.Tracing.TraceSender.TraceBreak(10073, 147530, 147536);

                                break;
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 146411, 148240);

                            case MethodKind.ExplicitInterfaceImplementation:
                            //CS0541 is handled in SourcePropertySymbol
                            case MethodKind.Ordinary:
                            case MethodKind.LocalFunction:
                            case MethodKind.PropertyGet:
                            case MethodKind.PropertySet:
                            case MethodKind.EventAdd:
                            case MethodKind.EventRemove:
                            case MethodKind.StaticConstructor:
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 146411, 148240);
                                DynAbs.Tracing.TraceSender.TraceBreak(10073, 148089, 148095);

                                break;
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 146411, 148240);

                            default:
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 146411, 148240);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 148159, 148217);

                                throw f_10073_148165_148216(f_10073_148200_148215(meth));
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 146411, 148240);
                        }
                        DynAbs.Tracing.TraceSender.TraceBreak(10073, 148262, 148268);

                        break;
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 146189, 148530);

                    case SymbolKind.Property:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 146189, 148530);
                        DynAbs.Tracing.TraceSender.TraceBreak(10073, 148335, 148341);

                        break;
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 146189, 148530);

                    case SymbolKind.Event:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 146189, 148530);
                        DynAbs.Tracing.TraceSender.TraceBreak(10073, 148405, 148411);

                        break;
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 146189, 148530);

                    default:
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 146189, 148530);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 148461, 148515);

                        throw f_10073_148467_148514(f_10073_148502_148513(member));
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 146189, 148530);
                }
                DynAbs.Tracing.TraceSender.TraceExitStaticMethod(10073, 146082, 148541);

                Microsoft.CodeAnalysis.SymbolKind
                f_10073_146197_146208(Microsoft.CodeAnalysis.CSharp.Symbol
                this_param)
                {
                    var return_v = this_param.Kind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 146197, 146208);
                    return return_v;
                }


                Microsoft.CodeAnalysis.MethodKind
                f_10073_146419_146434(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                this_param)
                {
                    var return_v = this_param.MethodKind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 146419, 146434);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Location>
                f_10073_146607_146623(Microsoft.CodeAnalysis.CSharp.Symbol
                this_param)
                {
                    var return_v = this_param.Locations;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 146607, 146623);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo
                f_10073_146542_146627(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, Microsoft.CodeAnalysis.Location
                location)
                {
                    var return_v = diagnostics.Add(code, location);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 146542, 146627);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Location>
                f_10073_146829_146845(Microsoft.CodeAnalysis.CSharp.Symbol
                this_param)
                {
                    var return_v = this_param.Locations;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 146829, 146845);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo
                f_10073_146747_146849(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, Microsoft.CodeAnalysis.Location
                location)
                {
                    var return_v = diagnostics.Add(code, location);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 146747, 146849);
                    return return_v;
                }


                string
                f_10073_146982_146991(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                this_param)
                {
                    var return_v = this_param.Name;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 146982, 146991);
                    return return_v;
                }


                string
                f_10073_147040_147049(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                this_param)
                {
                    var return_v = this_param.Name;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 147040, 147049);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Location>
                f_10073_147244_147260(Microsoft.CodeAnalysis.CSharp.Symbol
                this_param)
                {
                    var return_v = this_param.Locations;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 147244, 147260);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo
                f_10073_147162_147264(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, Microsoft.CodeAnalysis.Location
                location)
                {
                    var return_v = diagnostics.Add(code, location);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 147162, 147264);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Location>
                f_10073_147479_147495(Microsoft.CodeAnalysis.CSharp.Symbol
                this_param)
                {
                    var return_v = this_param.Locations;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 147479, 147495);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo
                f_10073_147415_147499(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, Microsoft.CodeAnalysis.Location
                location)
                {
                    var return_v = diagnostics.Add(code, location);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 147415, 147499);
                    return return_v;
                }


                Microsoft.CodeAnalysis.MethodKind
                f_10073_148200_148215(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                this_param)
                {
                    var return_v = this_param.MethodKind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 148200, 148215);
                    return return_v;
                }


                System.Exception
                f_10073_148165_148216(Microsoft.CodeAnalysis.MethodKind
                o)
                {
                    var return_v = ExceptionUtilities.UnexpectedValue((object)o);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 148165, 148216);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SymbolKind
                f_10073_148502_148513(Microsoft.CodeAnalysis.CSharp.Symbol
                this_param)
                {
                    var return_v = this_param.Kind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 148502, 148513);
                    return return_v;
                }


                System.Exception
                f_10073_148467_148514(Microsoft.CodeAnalysis.SymbolKind
                o)
                {
                    var return_v = ExceptionUtilities.UnexpectedValue((object)o);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 148467, 148514);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10073, 146082, 148541);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10073, 146082, 148541);
            }
        }

        private static void CheckForStructDefaultConstructors(
                    ArrayBuilder<Symbol> members,
                    bool isEnum,
                    DiagnosticBag diagnostics)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterStaticMethod(10073, 148553, 149462);
                try
                {
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 148741, 149451);
                    foreach (var s in f_10073_148759_148766_I(members))
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 148741, 149451);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 148800, 148826);

                        var
                        m = s as MethodSymbol
                        ;

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 148844, 149436) || true) && (!(m is null))
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 148844, 149436);

                            if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 148902, 149417) || true) && (f_10073_148906_148918(m) == MethodKind.Constructor && (DynAbs.Tracing.TraceSender.Expression_True(10073, 148906, 148969) && f_10073_148948_148964(m) == 0))
                            )

                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 148902, 149417);

                                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 149019, 149394) || true) && (isEnum)
                                )

                                {
                                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 149019, 149394);
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 149087, 149169);

                                    f_10073_149087_149168(diagnostics, ErrorCode.ERR_EnumsCantContainDefaultConstructor, f_10073_149153_149164(m)[0]);
                                    DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 149019, 149394);
                                }

                                else

                                {
                                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 149019, 149394);
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 149283, 149367);

                                    f_10073_149283_149366(diagnostics, ErrorCode.ERR_StructsCantContainDefaultConstructor, f_10073_149351_149362(m)[0]);
                                    DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 149019, 149394);
                                }
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 148902, 149417);
                            }
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 148844, 149436);
                        }
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 148741, 149451);
                    }
                }
                catch (System.Exception)
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoopByException(10073, 1, 711);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoop(10073, 1, 711);
                }
                DynAbs.Tracing.TraceSender.TraceExitStaticMethod(10073, 148553, 149462);

                Microsoft.CodeAnalysis.MethodKind
                f_10073_148906_148918(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                this_param)
                {
                    var return_v = this_param.MethodKind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 148906, 148918);
                    return return_v;
                }


                int
                f_10073_148948_148964(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                this_param)
                {
                    var return_v = this_param.ParameterCount;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 148948, 148964);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Location>
                f_10073_149153_149164(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                this_param)
                {
                    var return_v = this_param.Locations;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 149153, 149164);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo
                f_10073_149087_149168(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, Microsoft.CodeAnalysis.Location
                location)
                {
                    var return_v = diagnostics.Add(code, location);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 149087, 149168);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Location>
                f_10073_149351_149362(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                this_param)
                {
                    var return_v = this_param.Locations;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 149351, 149362);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo
                f_10073_149283_149366(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, Microsoft.CodeAnalysis.Location
                location)
                {
                    var return_v = diagnostics.Add(code, location);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 149283, 149366);
                    return return_v;
                }


                Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbol>
                f_10073_148759_148766_I(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbol>
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 148759, 148766);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10073, 148553, 149462);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10073, 148553, 149462);
            }
        }

        private void CheckForStructBadInitializers(DeclaredMembersAndInitializersBuilder builder, DiagnosticBag diagnostics)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10073, 149474, 150136);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 149615, 149657);

                f_10073_149615_149656(f_10073_149628_149636() == TypeKind.Struct);
                try
                {
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 149673, 150125);
                    foreach (var initializers in f_10073_149702_149730_I(builder.InstanceInitializers))
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 149673, 150125);
                        try
                        {
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 149764, 150110);
                            foreach (FieldOrPropertyInitializer initializer in f_10073_149815_149827_I(initializers))
                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 149764, 150110);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 149951, 150091);

                                f_10073_149951_150090(                    // '{0}': cannot have instance field initializers in structs
                                                    diagnostics, ErrorCode.ERR_FieldInitializerInStruct, f_10073_150007_150080((f_10073_150008_150045(initializer.FieldOpt) ?? (DynAbs.Tracing.TraceSender.Expression_Null<Microsoft.CodeAnalysis.CSharp.Symbol?>(10073, 150008, 150069) ?? initializer.FieldOpt)))[0], this);
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 149764, 150110);
                            }
                        }
                        catch (System.Exception)
                        {
                            DynAbs.Tracing.TraceSender.TraceExitLoopByException(10073, 1, 347);
                            throw;
                        }
                        finally
                        {
                            DynAbs.Tracing.TraceSender.TraceExitLoop(10073, 1, 347);
                        }
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 149673, 150125);
                    }
                }
                catch (System.Exception)
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoopByException(10073, 1, 453);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoop(10073, 1, 453);
                }
                DynAbs.Tracing.TraceSender.TraceExitMethod(10073, 149474, 150136);

                Microsoft.CodeAnalysis.TypeKind
                f_10073_149628_149636()
                {
                    var return_v = TypeKind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 149628, 149636);
                    return return_v;
                }


                int
                f_10073_149615_149656(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 149615, 149656);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.Symbol?
                f_10073_150008_150045(Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol
                this_param)
                {
                    var return_v = this_param.AssociatedSymbol;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 150008, 150045);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Location>
                f_10073_150007_150080(Microsoft.CodeAnalysis.CSharp.Symbol
                this_param)
                {
                    var return_v = this_param.Locations;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 150007, 150080);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo
                f_10073_149951_150090(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, Microsoft.CodeAnalysis.Location
                location, params object[]
                args)
                {
                    var return_v = diagnostics.Add(code, location, args);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 149951, 150090);
                    return return_v;
                }


                Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbols.FieldOrPropertyInitializer>
                f_10073_149815_149827_I(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbols.FieldOrPropertyInitializer>
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 149815, 149827);
                    return return_v;
                }


                Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbols.FieldOrPropertyInitializer>>
                f_10073_149702_149730_I(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbols.FieldOrPropertyInitializer>>
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 149702, 149730);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10073, 149474, 150136);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10073, 149474, 150136);
            }
        }

        private void AddSynthesizedRecordMembersIfNecessary(MembersAndInitializersBuilder builder, DeclaredMembersAndInitializers declaredMembersAndInitializers, DiagnosticBag diagnostics)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10073, 150148, 176238);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 150353, 150455) || true) && (f_10073_150357_150373(declaration) != DeclarationKind.Record)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 150353, 150455);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 150433, 150440);

                    return;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 150353, 150455);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 150471, 150582);

                ParameterListSyntax?
                paramList = f_10073_150504_150581_M(DynAbs.Tracing.TraceSender.TraceConditionalAccessExpression(declaredMembersAndInitializers.RecordDeclarationWithParameters, 10073, 150504, 150581)?.ParameterList)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 150598, 150675);

                var
                memberSignatures = f_10073_150621_150674(s_duplicateRecordMemberSignatureDictionary)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 150689, 150766);

                var
                membersSoFar = f_10073_150708_150765(builder, declaredMembersAndInitializers)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 150780, 150851);

                var
                members = f_10073_150794_150850(f_10073_150827_150845(membersSoFar) + 1)
                ;
                try
                {
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 150865, 151382);
                    foreach (var member in f_10073_150888_150900_I(membersSoFar))
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 150865, 151382);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 150934, 151208);

                        switch (member)
                        {

                            case FieldSymbol:
                            case EventSymbol:
                            case MethodSymbol { MethodKind: not (MethodKind.Ordinary or MethodKind.Constructor) }:
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 150934, 151208);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 151180, 151189);

                                continue;
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 150934, 151208);
                        }

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 151228, 151367) || true) && (!f_10073_151233_151269(memberSignatures, member))
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 151228, 151367);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 151311, 151348);

                            f_10073_151311_151347(memberSignatures, member, member);
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 151228, 151367);
                        }
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 150865, 151382);
                    }
                }
                catch (System.Exception)
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoopByException(10073, 1, 518);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoop(10073, 1, 518);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 151398, 151456);

                CSharpCompilation
                compilation = f_10073_151430_151455(this)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 151506, 151547);

                bool
                primaryAndCopyCtorAmbiguity = false
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 151561, 152404) || true) && (!(paramList is null))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 151561, 152404);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 151619, 151706);

                    f_10073_151619_151705(declaredMembersAndInitializers.RecordDeclarationWithParameters is object);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 151724, 151834);

                    f_10073_151724_151833(declaredMembersAndInitializers.InstanceInitializersIndexForRecordDeclarationWithParameters >= 0);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 151854, 151921);

                    var
                    ctor = declaredMembersAndInitializers.RecordPrimaryConstructor
                    ;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 151939, 151968);

                    f_10073_151939_151967(ctor is object);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 151986, 152004);

                    f_10073_151986_152003(members, ctor);

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 152024, 152240) || true) && (f_10073_152028_152047(ctor) != 0)
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 152024, 152240);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 152094, 152154);

                        var
                        existingOrAddedMembers = f_10073_152123_152153(f_10073_152137_152152(ctor))
                        ;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 152176, 152221);

                        f_10073_152176_152220(ctor, existingOrAddedMembers);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 152024, 152240);
                    }
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 152260, 152389);

                    primaryAndCopyCtorAmbiguity = f_10073_152290_152309(ctor) == 1 && (DynAbs.Tracing.TraceSender.Expression_True(10073, 152290, 152388) && f_10073_152318_152388(f_10073_152318_152341(f_10073_152318_152333(ctor)[0]), this, TypeCompareKind.AllIgnoreOptions));
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 151561, 152404);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 152420, 152461);

                f_10073_152420_152460(primaryAndCopyCtorAmbiguity);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 152475, 152492);

                f_10073_152475_152491();
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 152508, 152564);

                PropertySymbol
                equalityContract = f_10073_152542_152563()
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 152580, 152629);

                var
                thisEquals = f_10073_152597_152628(equalityContract)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 152643, 152660);

                f_10073_152643_152659();
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 152674, 152702);

                f_10073_152674_152701(thisEquals);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 152716, 152767);

                var
                getHashCode = f_10073_152734_152766(equalityContract)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 152781, 152804);

                f_10073_152781_152803();

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 152820, 153066) || true) && (thisEquals is not SynthesizedRecordEquals && (DynAbs.Tracing.TraceSender.Expression_True(10073, 152824, 152912) && getHashCode is SynthesizedRecordGetHashCode))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 152820, 153066);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 152946, 153051);

                    f_10073_152946_153050(diagnostics, ErrorCode.WRN_RecordEqualsWithoutGetHashCode, f_10073_153008_153028(thisEquals)[0], f_10073_153033_153049(declaration));
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 152820, 153066);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 153082, 153125);

                var
                printMembers = f_10073_153101_153124()
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 153139, 153171);

                f_10073_153139_153170(printMembers);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 153187, 153211);

                f_10073_153187_153210(
                            memberSignatures);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 153410, 153441);

                f_10073_153410_153440(
                            // We put synthesized record members first so that errors about conflicts show up on user-defined members rather than all
                            // going to the record declaration
                            members, membersSoFar);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 153455, 153486);

                DynAbs.Tracing.TraceSender.TraceInvocationWrapper(() => DynAbs.Tracing.TraceSender.TraceConditionalAccessExpression(builder.NonTypeMembers, 10073, 153455, 153485).Free(), 10073, 153478, 153485);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 153500, 153533);

                builder.NonTypeMembers = members;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 153549, 153556);

                return;

                void addDeconstruct(SynthesizedRecordConstructor ctor, ImmutableArray<PropertySymbol> properties)
                {
                    try
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterMethod(10073, 153572, 156244);
                        Microsoft.CodeAnalysis.CSharp.Symbol existingDeconstructMethod = default(Microsoft.CodeAnalysis.CSharp.Symbol);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 153702, 155028);

                        var
                        targetMethod = f_10073_153721_155027(WellKnownMemberNames.DeconstructMethodName, this, MethodKind.Ordinary, Cci.CallingConvention.HasThis, ImmutableArray<TypeParameterSymbol>.Empty, ctor.Parameters.SelectAsArray<ParameterSymbol, ParameterSymbol>(param => new SignatureOnlyParameterSymbol(param.TypeWithAnnotations,
                                                                                                                                                      ImmutableArray<CustomModifier>.Empty,
                                                                                                                                                      isParams: false,
                                                                                                                                                      RefKind.Out
                                                                                                                                                      )), RefKind.None, isInitOnly: false, TypeWithAnnotations.Create(f_10073_154858_154909(compilation, SpecialType.System_Void)), ImmutableArray<CustomModifier>.Empty, ImmutableArray<MethodSymbol>.Empty)
                        ;

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 155048, 156229) || true) && (!f_10073_155053_155134(memberSignatures, targetMethod, out existingDeconstructMethod))
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 155048, 156229);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 155176, 155288);

                            f_10073_155176_155287(members, f_10073_155188_155286(this, ctor, properties, memberOffset: f_10073_155259_155272(members), diagnostics));
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 155048, 156229);
                        }

                        else

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 155048, 156229);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 155370, 155428);

                            var
                            deconstruct = (MethodSymbol)existingDeconstructMethod
                            ;

                            if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 155452, 155677) || true) && (f_10073_155456_155489(deconstruct) != Accessibility.Public)
                            )

                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 155452, 155677);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 155563, 155654);

                                f_10073_155563_155653(diagnostics, ErrorCode.ERR_NonPublicAPIInRecord, f_10073_155615_155636(deconstruct)[0], deconstruct);
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 155452, 155677);
                            }

                            if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 155701, 156001) || true) && (f_10073_155705_155739(f_10073_155705_155727(deconstruct)) != SpecialType.System_Void && (DynAbs.Tracing.TraceSender.Expression_True(10073, 155705, 155807) && !f_10073_155771_155807(f_10073_155771_155793(deconstruct))))
                            )

                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 155701, 156001);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 155857, 155978);

                                f_10073_155857_155977(diagnostics, ErrorCode.ERR_SignatureMismatchInRecord, f_10073_155914_155935(deconstruct)[0], deconstruct, f_10073_155953_155976(targetMethod));
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 155701, 156001);
                            }

                            if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 156025, 156210) || true) && (f_10073_156029_156049(deconstruct))
                            )

                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 156025, 156210);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 156099, 156187);

                                f_10073_156099_156186(diagnostics, ErrorCode.ERR_StaticAPIInRecord, f_10073_156148_156169(deconstruct)[0], deconstruct);
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 156025, 156210);
                            }
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 155048, 156229);
                        }
                        DynAbs.Tracing.TraceSender.TraceExitMethod(10073, 153572, 156244);

                        Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                        f_10073_154858_154909(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                        this_param, Microsoft.CodeAnalysis.SpecialType
                        specialType)
                        {
                            var return_v = this_param.GetSpecialType(specialType);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 154858, 154909);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.CSharp.Symbols.SignatureOnlyMethodSymbol
                        f_10073_153721_155027(string
                        name, Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                        containingType, Microsoft.CodeAnalysis.MethodKind
                        methodKind, Microsoft.Cci.CallingConvention
                        callingConvention, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.TypeParameterSymbol>
                        typeParameters, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol>
                        parameters, Microsoft.CodeAnalysis.RefKind
                        refKind, bool
                        isInitOnly, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                        returnType, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CustomModifier>
                        refCustomModifiers, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol>
                        explicitInterfaceImplementations)
                        {
                            var return_v = new Microsoft.CodeAnalysis.CSharp.Symbols.SignatureOnlyMethodSymbol(name, (Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol)containingType, methodKind, callingConvention, typeParameters, parameters, refKind, isInitOnly: isInitOnly, returnType, refCustomModifiers, explicitInterfaceImplementations);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 153721, 155027);
                            return return_v;
                        }


                        bool
                        f_10073_155053_155134(Microsoft.CodeAnalysis.PooledObjects.PooledDictionary<Microsoft.CodeAnalysis.CSharp.Symbol, Microsoft.CodeAnalysis.CSharp.Symbol>
                        this_param, Microsoft.CodeAnalysis.CSharp.Symbols.SignatureOnlyMethodSymbol
                        key, out Microsoft.CodeAnalysis.CSharp.Symbol?
                        value)
                        {
                            var return_v = this_param.TryGetValue((Microsoft.CodeAnalysis.CSharp.Symbol)key, out value);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 155053, 155134);
                            return return_v;
                        }


                        int
                        f_10073_155259_155272(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbol>
                        this_param)
                        {
                            var return_v = this_param.Count;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 155259, 155272);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedRecordDeconstruct
                        f_10073_155188_155286(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                        containingType, Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedRecordConstructor
                        ctor, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol>
                        properties, int
                        memberOffset, Microsoft.CodeAnalysis.DiagnosticBag
                        diagnostics)
                        {
                            var return_v = new Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedRecordDeconstruct(containingType, ctor, properties, memberOffset: memberOffset, diagnostics);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 155188, 155286);
                            return return_v;
                        }


                        int
                        f_10073_155176_155287(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbol>
                        this_param, Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedRecordDeconstruct
                        item)
                        {
                            this_param.Add((Microsoft.CodeAnalysis.CSharp.Symbol)item);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 155176, 155287);
                            return 0;
                        }


                        Microsoft.CodeAnalysis.Accessibility
                        f_10073_155456_155489(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                        this_param)
                        {
                            var return_v = this_param.DeclaredAccessibility;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 155456, 155489);
                            return return_v;
                        }


                        System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Location>
                        f_10073_155615_155636(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                        this_param)
                        {
                            var return_v = this_param.Locations;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 155615, 155636);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo
                        f_10073_155563_155653(Microsoft.CodeAnalysis.DiagnosticBag
                        diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                        code, Microsoft.CodeAnalysis.Location
                        location, params object[]
                        args)
                        {
                            var return_v = diagnostics.Add(code, location, args);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 155563, 155653);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                        f_10073_155705_155727(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                        this_param)
                        {
                            var return_v = this_param.ReturnType;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 155705, 155727);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.SpecialType
                        f_10073_155705_155739(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                        this_param)
                        {
                            var return_v = this_param.SpecialType;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 155705, 155739);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                        f_10073_155771_155793(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                        this_param)
                        {
                            var return_v = this_param.ReturnType;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 155771, 155793);
                            return return_v;
                        }


                        bool
                        f_10073_155771_155807(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                        type)
                        {
                            var return_v = type.IsErrorType();
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 155771, 155807);
                            return return_v;
                        }


                        System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Location>
                        f_10073_155914_155935(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                        this_param)
                        {
                            var return_v = this_param.Locations;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 155914, 155935);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                        f_10073_155953_155976(Microsoft.CodeAnalysis.CSharp.Symbols.SignatureOnlyMethodSymbol
                        this_param)
                        {
                            var return_v = this_param.ReturnType;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 155953, 155976);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo
                        f_10073_155857_155977(Microsoft.CodeAnalysis.DiagnosticBag
                        diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                        code, Microsoft.CodeAnalysis.Location
                        location, params object[]
                        args)
                        {
                            var return_v = diagnostics.Add(code, location, args);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 155857, 155977);
                            return return_v;
                        }


                        bool
                        f_10073_156029_156049(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                        this_param)
                        {
                            var return_v = this_param.IsStatic;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 156029, 156049);
                            return return_v;
                        }


                        System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Location>
                        f_10073_156148_156169(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                        this_param)
                        {
                            var return_v = this_param.Locations;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 156148, 156169);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo
                        f_10073_156099_156186(Microsoft.CodeAnalysis.DiagnosticBag
                        diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                        code, Microsoft.CodeAnalysis.Location
                        location, params object[]
                        args)
                        {
                            var return_v = diagnostics.Add(code, location, args);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 156099, 156186);
                            return return_v;
                        }

                    }
                    catch
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10073, 153572, 156244);
                        throw;
                    }
                    finally
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10073, 153572, 156244);
                    }
                }

                void addCopyCtor(bool primaryAndCopyCtorAmbiguity)
                {
                    try
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterMethod(10073, 156260, 158444);
                        Microsoft.CodeAnalysis.CSharp.Symbol existingConstructor = default(Microsoft.CodeAnalysis.CSharp.Symbol);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 156343, 157466);

                        var
                        targetMethod = f_10073_156362_157465(WellKnownMemberNames.InstanceConstructorName, this, MethodKind.Constructor, Cci.CallingConvention.HasThis, ImmutableArray<TypeParameterSymbol>.Empty, f_10073_156669_157171(f_10073_156708_157170(TypeWithAnnotations.Create(this), ImmutableArray<CustomModifier>.Empty, isParams: false, RefKind.None)), RefKind.None, isInitOnly: false, TypeWithAnnotations.Create(f_10073_157296_157347(compilation, SpecialType.System_Void)), ImmutableArray<CustomModifier>.Empty, ImmutableArray<MethodSymbol>.Empty)
                        ;

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 157486, 158429) || true) && (!f_10073_157491_157566(memberSignatures, targetMethod, out existingConstructor))
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 157486, 158429);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 157608, 157688);

                            var
                            copyCtor = f_10073_157623_157687(this, memberOffset: f_10073_157673_157686(members))
                            ;
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 157710, 157732);

                            f_10073_157710_157731(members, copyCtor);

                            if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 157756, 157930) || true) && (primaryAndCopyCtorAmbiguity)
                            )

                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 157756, 157930);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 157837, 157907);

                                f_10073_157837_157906(diagnostics, ErrorCode.ERR_RecordAmbigCtor, f_10073_157884_157902(copyCtor)[0]);
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 157756, 157930);
                            }
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 157486, 158429);
                        }

                        else

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 157486, 158429);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 158012, 158064);

                            var
                            constructor = (MethodSymbol)existingConstructor
                            ;

                            if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 158088, 158410) || true) && (f_10073_158092_158106_M(!this.IsSealed) && (DynAbs.Tracing.TraceSender.Expression_True(10073, 158092, 158233) && (f_10073_158111_158144(constructor) != Accessibility.Public && (DynAbs.Tracing.TraceSender.Expression_True(10073, 158111, 158232) && f_10073_158172_158205(constructor) != Accessibility.Protected))))
                            )

                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 158088, 158410);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 158283, 158387);

                                f_10073_158283_158386(diagnostics, ErrorCode.ERR_CopyConstructorWrongAccessibility, f_10073_158348_158369(constructor)[0], constructor);
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 158088, 158410);
                            }
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 157486, 158429);
                        }
                        DynAbs.Tracing.TraceSender.TraceExitMethod(10073, 156260, 158444);

                        Microsoft.CodeAnalysis.CSharp.Symbols.SignatureOnlyParameterSymbol
                        f_10073_156708_157170(Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                        type, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CustomModifier>
                        refCustomModifiers, bool
                        isParams, Microsoft.CodeAnalysis.RefKind
                        refKind)
                        {
                            var return_v = new Microsoft.CodeAnalysis.CSharp.Symbols.SignatureOnlyParameterSymbol(type, refCustomModifiers, isParams: isParams, refKind);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 156708, 157170);
                            return return_v;
                        }


                        System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol>
                        f_10073_156669_157171(Microsoft.CodeAnalysis.CSharp.Symbols.SignatureOnlyParameterSymbol
                        item)
                        {
                            var return_v = ImmutableArray.Create<ParameterSymbol>((Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol)item);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 156669, 157171);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                        f_10073_157296_157347(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                        this_param, Microsoft.CodeAnalysis.SpecialType
                        specialType)
                        {
                            var return_v = this_param.GetSpecialType(specialType);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 157296, 157347);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.CSharp.Symbols.SignatureOnlyMethodSymbol
                        f_10073_156362_157465(string
                        name, Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                        containingType, Microsoft.CodeAnalysis.MethodKind
                        methodKind, Microsoft.Cci.CallingConvention
                        callingConvention, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.TypeParameterSymbol>
                        typeParameters, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol>
                        parameters, Microsoft.CodeAnalysis.RefKind
                        refKind, bool
                        isInitOnly, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                        returnType, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CustomModifier>
                        refCustomModifiers, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol>
                        explicitInterfaceImplementations)
                        {
                            var return_v = new Microsoft.CodeAnalysis.CSharp.Symbols.SignatureOnlyMethodSymbol(name, (Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol)containingType, methodKind, callingConvention, typeParameters, parameters, refKind, isInitOnly: isInitOnly, returnType, refCustomModifiers, explicitInterfaceImplementations);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 156362, 157465);
                            return return_v;
                        }


                        bool
                        f_10073_157491_157566(Microsoft.CodeAnalysis.PooledObjects.PooledDictionary<Microsoft.CodeAnalysis.CSharp.Symbol, Microsoft.CodeAnalysis.CSharp.Symbol>
                        this_param, Microsoft.CodeAnalysis.CSharp.Symbols.SignatureOnlyMethodSymbol
                        key, out Microsoft.CodeAnalysis.CSharp.Symbol?
                        value)
                        {
                            var return_v = this_param.TryGetValue((Microsoft.CodeAnalysis.CSharp.Symbol)key, out value);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 157491, 157566);
                            return return_v;
                        }


                        int
                        f_10073_157673_157686(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbol>
                        this_param)
                        {
                            var return_v = this_param.Count;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 157673, 157686);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedRecordCopyCtor
                        f_10073_157623_157687(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                        containingType, int
                        memberOffset)
                        {
                            var return_v = new Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedRecordCopyCtor(containingType, memberOffset: memberOffset);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 157623, 157687);
                            return return_v;
                        }


                        int
                        f_10073_157710_157731(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbol>
                        this_param, Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedRecordCopyCtor
                        item)
                        {
                            this_param.Add((Microsoft.CodeAnalysis.CSharp.Symbol)item);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 157710, 157731);
                            return 0;
                        }


                        System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Location>
                        f_10073_157884_157902(Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedRecordCopyCtor
                        this_param)
                        {
                            var return_v = this_param.Locations;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 157884, 157902);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo
                        f_10073_157837_157906(Microsoft.CodeAnalysis.DiagnosticBag
                        diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                        code, Microsoft.CodeAnalysis.Location
                        location)
                        {
                            var return_v = diagnostics.Add(code, location);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 157837, 157906);
                            return return_v;
                        }


                        bool
                        f_10073_158092_158106_M(bool
                        i)
                        {
                            var return_v = i;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 158092, 158106);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.Accessibility
                        f_10073_158111_158144(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                        this_param)
                        {
                            var return_v = this_param.DeclaredAccessibility;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 158111, 158144);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.Accessibility
                        f_10073_158172_158205(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                        this_param)
                        {
                            var return_v = this_param.DeclaredAccessibility;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 158172, 158205);
                            return return_v;
                        }


                        System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Location>
                        f_10073_158348_158369(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                        this_param)
                        {
                            var return_v = this_param.Locations;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 158348, 158369);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo
                        f_10073_158283_158386(Microsoft.CodeAnalysis.DiagnosticBag
                        diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                        code, Microsoft.CodeAnalysis.Location
                        location, params object[]
                        args)
                        {
                            var return_v = diagnostics.Add(code, location, args);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 158283, 158386);
                            return return_v;
                        }

                    }
                    catch
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10073, 156260, 158444);
                        throw;
                    }
                    finally
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10073, 156260, 158444);
                    }
                }

                void addCloneMethod()
                {
                    try
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterMethod(10073, 158460, 158617);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 158514, 158602);

                        f_10073_158514_158601(members, f_10073_158526_158600(this, memberOffset: f_10073_158573_158586(members), diagnostics));
                        DynAbs.Tracing.TraceSender.TraceExitMethod(10073, 158460, 158617);

                        int
                        f_10073_158573_158586(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbol>
                        this_param)
                        {
                            var return_v = this_param.Count;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 158573, 158586);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedRecordClone
                        f_10073_158526_158600(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                        containingType, int
                        memberOffset, Microsoft.CodeAnalysis.DiagnosticBag
                        diagnostics)
                        {
                            var return_v = new Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedRecordClone(containingType, memberOffset: memberOffset, diagnostics);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 158526, 158600);
                            return return_v;
                        }


                        int
                        f_10073_158514_158601(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbol>
                        this_param, Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedRecordClone
                        item)
                        {
                            this_param.Add((Microsoft.CodeAnalysis.CSharp.Symbol)item);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 158514, 158601);
                            return 0;
                        }

                    }
                    catch
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10073, 158460, 158617);
                        throw;
                    }
                    finally
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10073, 158460, 158617);
                    }
                }

                MethodSymbol addPrintMembersMethod()
                {
                    try
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterMethod(10073, 158633, 161771);
                        Microsoft.CodeAnalysis.CSharp.Symbol existingPrintMembersMethod = default(Microsoft.CodeAnalysis.CSharp.Symbol);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 158702, 159729);

                        var
                        targetMethod = f_10073_158721_159728(WellKnownMemberNames.PrintMembersMethodName, this, MethodKind.Ordinary, Cci.CallingConvention.HasThis, ImmutableArray<TypeParameterSymbol>.Empty, f_10073_159024_159365(f_10073_159063_159364(TypeWithAnnotations.Create(f_10073_159149_159218(compilation, WellKnownType.System_Text_StringBuilder)), ImmutableArray<CustomModifier>.Empty, isParams: false, RefKind.None)), RefKind.None, isInitOnly: false, returnType: TypeWithAnnotations.Create(f_10073_159502_159556(compilation, SpecialType.System_Boolean)), refCustomModifiers: ImmutableArray<CustomModifier>.Empty, explicitInterfaceImplementations: ImmutableArray<MethodSymbol>.Empty)
                        ;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 159749, 159781);

                        MethodSymbol
                        printMembersMethod
                        = default(MethodSymbol);

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 159799, 161710) || true) && (!f_10073_159804_159886(memberSignatures, targetMethod, out existingPrintMembersMethod))
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 159799, 161710);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 159928, 160031);

                            printMembersMethod = f_10073_159949_160030(this, memberOffset: f_10073_160003_160016(members), diagnostics);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 160053, 160085);

                            f_10073_160053_160084(members, printMembersMethod);
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 159799, 161710);
                        }

                        else

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 159799, 161710);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 160167, 160229);

                            printMembersMethod = (MethodSymbol)existingPrintMembersMethod;

                            if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 160251, 160932) || true) && (f_10073_160255_160268(this) && (DynAbs.Tracing.TraceSender.Expression_True(10073, 160255, 160320) && f_10073_160272_160320(f_10073_160272_160305(this))))
                            )

                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 160251, 160932);

                                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 160370, 160630) || true) && (f_10073_160374_160414(printMembersMethod) != Accessibility.Private)
                                )

                                {
                                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 160370, 160630);
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 160497, 160603);

                                    f_10073_160497_160602(diagnostics, ErrorCode.ERR_NonPrivateAPIInRecord, f_10073_160550_160578(printMembersMethod)[0], printMembersMethod);
                                    DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 160370, 160630);
                                }
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 160251, 160932);
                            }

                            else
                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 160251, 160932);

                                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 160680, 160932) || true) && (f_10073_160684_160724(printMembersMethod) != Accessibility.Protected)
                                )

                                {
                                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 160680, 160932);
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 160801, 160909);

                                    f_10073_160801_160908(diagnostics, ErrorCode.ERR_NonProtectedAPIInRecord, f_10073_160856_160884(printMembersMethod)[0], printMembersMethod);
                                    DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 160680, 160932);
                                }
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 160251, 160932);
                            }

                            if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 160956, 161594) || true) && (!f_10073_160961_161056(f_10073_160961_160990(printMembersMethod), f_10073_160998_161021(targetMethod), TypeCompareKind.AllIgnoreOptions))
                            )

                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 160956, 161594);

                                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 161106, 161374) || true) && (!f_10073_161111_161154(f_10073_161111_161140(printMembersMethod)))
                                )

                                {
                                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 161106, 161374);
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 161212, 161347);

                                    f_10073_161212_161346(diagnostics, ErrorCode.ERR_SignatureMismatchInRecord, f_10073_161269_161297(printMembersMethod)[0], printMembersMethod, f_10073_161322_161345(targetMethod));
                                    DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 161106, 161374);
                                }
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 160956, 161594);
                            }

                            else

                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 160956, 161594);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 161472, 161571);

                                f_10073_161472_161570(printMembersMethod, diagnostics);
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 160956, 161594);
                            }
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 161618, 161691);

                            f_10073_161618_161690(printMembersMethod, diagnostics);
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 159799, 161710);
                        }
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 161730, 161756);

                        return printMembersMethod;
                        DynAbs.Tracing.TraceSender.TraceExitMethod(10073, 158633, 161771);

                        Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                        f_10073_159149_159218(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                        this_param, Microsoft.CodeAnalysis.WellKnownType
                        type)
                        {
                            var return_v = this_param.GetWellKnownType(type);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 159149, 159218);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.CSharp.Symbols.SignatureOnlyParameterSymbol
                        f_10073_159063_159364(Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                        type, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CustomModifier>
                        refCustomModifiers, bool
                        isParams, Microsoft.CodeAnalysis.RefKind
                        refKind)
                        {
                            var return_v = new Microsoft.CodeAnalysis.CSharp.Symbols.SignatureOnlyParameterSymbol(type, refCustomModifiers, isParams: isParams, refKind);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 159063, 159364);
                            return return_v;
                        }


                        System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol>
                        f_10073_159024_159365(Microsoft.CodeAnalysis.CSharp.Symbols.SignatureOnlyParameterSymbol
                        item)
                        {
                            var return_v = ImmutableArray.Create<ParameterSymbol>((Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol)item);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 159024, 159365);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                        f_10073_159502_159556(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                        this_param, Microsoft.CodeAnalysis.SpecialType
                        specialType)
                        {
                            var return_v = this_param.GetSpecialType(specialType);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 159502, 159556);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.CSharp.Symbols.SignatureOnlyMethodSymbol
                        f_10073_158721_159728(string
                        name, Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                        containingType, Microsoft.CodeAnalysis.MethodKind
                        methodKind, Microsoft.Cci.CallingConvention
                        callingConvention, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.TypeParameterSymbol>
                        typeParameters, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol>
                        parameters, Microsoft.CodeAnalysis.RefKind
                        refKind, bool
                        isInitOnly, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                        returnType, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CustomModifier>
                        refCustomModifiers, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol>
                        explicitInterfaceImplementations)
                        {
                            var return_v = new Microsoft.CodeAnalysis.CSharp.Symbols.SignatureOnlyMethodSymbol(name, (Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol)containingType, methodKind, callingConvention, typeParameters, parameters, refKind, isInitOnly: isInitOnly, returnType: returnType, refCustomModifiers: refCustomModifiers, explicitInterfaceImplementations: explicitInterfaceImplementations);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 158721, 159728);
                            return return_v;
                        }


                        bool
                        f_10073_159804_159886(Microsoft.CodeAnalysis.PooledObjects.PooledDictionary<Microsoft.CodeAnalysis.CSharp.Symbol, Microsoft.CodeAnalysis.CSharp.Symbol>
                        this_param, Microsoft.CodeAnalysis.CSharp.Symbols.SignatureOnlyMethodSymbol
                        key, out Microsoft.CodeAnalysis.CSharp.Symbol?
                        value)
                        {
                            var return_v = this_param.TryGetValue((Microsoft.CodeAnalysis.CSharp.Symbol)key, out value);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 159804, 159886);
                            return return_v;
                        }


                        int
                        f_10073_160003_160016(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbol>
                        this_param)
                        {
                            var return_v = this_param.Count;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 160003, 160016);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedRecordPrintMembers
                        f_10073_159949_160030(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                        containingType, int
                        memberOffset, Microsoft.CodeAnalysis.DiagnosticBag
                        diagnostics)
                        {
                            var return_v = new Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedRecordPrintMembers(containingType, memberOffset: memberOffset, diagnostics);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 159949, 160030);
                            return return_v;
                        }


                        int
                        f_10073_160053_160084(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbol>
                        this_param, Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                        item)
                        {
                            this_param.Add((Microsoft.CodeAnalysis.CSharp.Symbol)item);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 160053, 160084);
                            return 0;
                        }


                        bool
                        f_10073_160255_160268(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                        this_param)
                        {
                            var return_v = this_param.IsSealed;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 160255, 160268);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                        f_10073_160272_160305(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                        this_param)
                        {
                            var return_v = this_param.BaseTypeNoUseSiteDiagnostics;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 160272, 160305);
                            return return_v;
                        }


                        bool
                        f_10073_160272_160320(Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                        type)
                        {
                            var return_v = type.IsObjectType();
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 160272, 160320);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.Accessibility
                        f_10073_160374_160414(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                        this_param)
                        {
                            var return_v = this_param.DeclaredAccessibility;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 160374, 160414);
                            return return_v;
                        }


                        System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Location>
                        f_10073_160550_160578(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                        this_param)
                        {
                            var return_v = this_param.Locations;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 160550, 160578);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo
                        f_10073_160497_160602(Microsoft.CodeAnalysis.DiagnosticBag
                        diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                        code, Microsoft.CodeAnalysis.Location
                        location, params object[]
                        args)
                        {
                            var return_v = diagnostics.Add(code, location, args);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 160497, 160602);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.Accessibility
                        f_10073_160684_160724(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                        this_param)
                        {
                            var return_v = this_param.DeclaredAccessibility;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 160684, 160724);
                            return return_v;
                        }


                        System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Location>
                        f_10073_160856_160884(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                        this_param)
                        {
                            var return_v = this_param.Locations;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 160856, 160884);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo
                        f_10073_160801_160908(Microsoft.CodeAnalysis.DiagnosticBag
                        diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                        code, Microsoft.CodeAnalysis.Location
                        location, params object[]
                        args)
                        {
                            var return_v = diagnostics.Add(code, location, args);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 160801, 160908);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                        f_10073_160961_160990(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                        this_param)
                        {
                            var return_v = this_param.ReturnType;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 160961, 160990);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                        f_10073_160998_161021(Microsoft.CodeAnalysis.CSharp.Symbols.SignatureOnlyMethodSymbol
                        this_param)
                        {
                            var return_v = this_param.ReturnType;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 160998, 161021);
                            return return_v;
                        }


                        bool
                        f_10073_160961_161056(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                        this_param, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                        t2, Microsoft.CodeAnalysis.TypeCompareKind
                        compareKind)
                        {
                            var return_v = this_param.Equals(t2, compareKind);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 160961, 161056);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                        f_10073_161111_161140(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                        this_param)
                        {
                            var return_v = this_param.ReturnType;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 161111, 161140);
                            return return_v;
                        }


                        bool
                        f_10073_161111_161154(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                        type)
                        {
                            var return_v = type.IsErrorType();
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 161111, 161154);
                            return return_v;
                        }


                        System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Location>
                        f_10073_161269_161297(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                        this_param)
                        {
                            var return_v = this_param.Locations;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 161269, 161297);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                        f_10073_161322_161345(Microsoft.CodeAnalysis.CSharp.Symbols.SignatureOnlyMethodSymbol
                        this_param)
                        {
                            var return_v = this_param.ReturnType;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 161322, 161345);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo
                        f_10073_161212_161346(Microsoft.CodeAnalysis.DiagnosticBag
                        diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                        code, Microsoft.CodeAnalysis.Location
                        location, params object[]
                        args)
                        {
                            var return_v = diagnostics.Add(code, location, args);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 161212, 161346);
                            return return_v;
                        }


                        int
                        f_10073_161472_161570(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                        overriding, Microsoft.CodeAnalysis.DiagnosticBag
                        diagnostics)
                        {
                            SynthesizedRecordPrintMembers.VerifyOverridesPrintMembersFromBase(overriding, diagnostics);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 161472, 161570);
                            return 0;
                        }


                        int
                        f_10073_161618_161690(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                        symbol, Microsoft.CodeAnalysis.DiagnosticBag
                        diagnostics)
                        {
                            reportStaticOrNotOverridableAPIInRecord((Microsoft.CodeAnalysis.CSharp.Symbol)symbol, diagnostics);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 161618, 161690);
                            return 0;
                        }

                    }
                    catch
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10073, 158633, 161771);
                        throw;
                    }
                    finally
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10073, 158633, 161771);
                    }
                    throw new System.Exception("Slicer error: unreachable code");
                }

                void addToStringMethod(MethodSymbol printMethod)
                {
                    try
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterMethod(10073, 161787, 163414);
                        Microsoft.CodeAnalysis.CSharp.Symbol existingToStringMethod = default(Microsoft.CodeAnalysis.CSharp.Symbol);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 161868, 162582);

                        var
                        targetMethod = f_10073_161887_162581(WellKnownMemberNames.ObjectToString, this, MethodKind.Ordinary, Cci.CallingConvention.HasThis, ImmutableArray<TypeParameterSymbol>.Empty, ImmutableArray<ParameterSymbol>.Empty, RefKind.None, isInitOnly: false, returnType: TypeWithAnnotations.Create(f_10073_162356_162409(compilation, SpecialType.System_String)), refCustomModifiers: ImmutableArray<CustomModifier>.Empty, explicitInterfaceImplementations: ImmutableArray<MethodSymbol>.Empty)
                        ;

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 162602, 163399) || true) && (!f_10073_162607_162685(memberSignatures, targetMethod, out existingToStringMethod))
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 162602, 163399);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 162727, 162839);

                            var
                            toStringMethod = f_10073_162748_162838(this, printMethod, memberOffset: f_10073_162811_162824(members), diagnostics)
                            ;
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 162861, 162889);

                            f_10073_162861_162888(members, toStringMethod);
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 162602, 163399);
                        }

                        else

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 162602, 163399);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 162971, 163029);

                            var
                            toStringMethod = (MethodSymbol)existingToStringMethod
                            ;

                            if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 163051, 163380) || true) && (!f_10073_163056_163173(toStringMethod, SpecialType.System_String, diagnostics) && (DynAbs.Tracing.TraceSender.Expression_True(10073, 163055, 163200) && f_10073_163177_163200(toStringMethod)) && (DynAbs.Tracing.TraceSender.Expression_True(10073, 163055, 163213) && f_10073_163204_163213_M(!IsSealed)))
                            )

                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 163051, 163380);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 163263, 163357);

                                f_10073_163263_163356(diagnostics, ErrorCode.ERR_SealedAPIInRecord, f_10073_163312_163336(toStringMethod)[0], toStringMethod);
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 163051, 163380);
                            }
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 162602, 163399);
                        }
                        DynAbs.Tracing.TraceSender.TraceExitMethod(10073, 161787, 163414);

                        Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                        f_10073_162356_162409(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                        this_param, Microsoft.CodeAnalysis.SpecialType
                        specialType)
                        {
                            var return_v = this_param.GetSpecialType(specialType);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 162356, 162409);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.CSharp.Symbols.SignatureOnlyMethodSymbol
                        f_10073_161887_162581(string
                        name, Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                        containingType, Microsoft.CodeAnalysis.MethodKind
                        methodKind, Microsoft.Cci.CallingConvention
                        callingConvention, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.TypeParameterSymbol>
                        typeParameters, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol>
                        parameters, Microsoft.CodeAnalysis.RefKind
                        refKind, bool
                        isInitOnly, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                        returnType, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CustomModifier>
                        refCustomModifiers, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol>
                        explicitInterfaceImplementations)
                        {
                            var return_v = new Microsoft.CodeAnalysis.CSharp.Symbols.SignatureOnlyMethodSymbol(name, (Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol)containingType, methodKind, callingConvention, typeParameters, parameters, refKind, isInitOnly: isInitOnly, returnType: returnType, refCustomModifiers: refCustomModifiers, explicitInterfaceImplementations: explicitInterfaceImplementations);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 161887, 162581);
                            return return_v;
                        }


                        bool
                        f_10073_162607_162685(Microsoft.CodeAnalysis.PooledObjects.PooledDictionary<Microsoft.CodeAnalysis.CSharp.Symbol, Microsoft.CodeAnalysis.CSharp.Symbol>
                        this_param, Microsoft.CodeAnalysis.CSharp.Symbols.SignatureOnlyMethodSymbol
                        key, out Microsoft.CodeAnalysis.CSharp.Symbol?
                        value)
                        {
                            var return_v = this_param.TryGetValue((Microsoft.CodeAnalysis.CSharp.Symbol)key, out value);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 162607, 162685);
                            return return_v;
                        }


                        int
                        f_10073_162811_162824(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbol>
                        this_param)
                        {
                            var return_v = this_param.Count;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 162811, 162824);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedRecordToString
                        f_10073_162748_162838(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                        containingType, Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                        printMethod, int
                        memberOffset, Microsoft.CodeAnalysis.DiagnosticBag
                        diagnostics)
                        {
                            var return_v = new Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedRecordToString(containingType, printMethod, memberOffset: memberOffset, diagnostics);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 162748, 162838);
                            return return_v;
                        }


                        int
                        f_10073_162861_162888(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbol>
                        this_param, Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedRecordToString
                        item)
                        {
                            this_param.Add((Microsoft.CodeAnalysis.CSharp.Symbol)item);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 162861, 162888);
                            return 0;
                        }


                        bool
                        f_10073_163056_163173(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                        overriding, Microsoft.CodeAnalysis.SpecialType
                        returnSpecialType, Microsoft.CodeAnalysis.DiagnosticBag
                        diagnostics)
                        {
                            var return_v = SynthesizedRecordObjectMethod.VerifyOverridesMethodFromObject(overriding, returnSpecialType, diagnostics);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 163056, 163173);
                            return return_v;
                        }


                        bool
                        f_10073_163177_163200(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                        this_param)
                        {
                            var return_v = this_param.IsSealed;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 163177, 163200);
                            return return_v;
                        }


                        bool
                        f_10073_163204_163213_M(bool
                        i)
                        {
                            var return_v = i;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 163204, 163213);
                            return return_v;
                        }


                        System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Location>
                        f_10073_163312_163336(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                        this_param)
                        {
                            var return_v = this_param.Locations;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 163312, 163336);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo
                        f_10073_163263_163356(Microsoft.CodeAnalysis.DiagnosticBag
                        diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                        code, Microsoft.CodeAnalysis.Location
                        location, params object[]
                        args)
                        {
                            var return_v = diagnostics.Add(code, location, args);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 163263, 163356);
                            return return_v;
                        }

                    }
                    catch
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10073, 161787, 163414);
                        throw;
                    }
                    finally
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10073, 161787, 163414);
                    }
                }

                ImmutableArray<PropertySymbol> addProperties(ImmutableArray<ParameterSymbol> recordParameters)
                {
                    try
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterMethod(10073, 163430, 167509);
                        Microsoft.CodeAnalysis.CSharp.Symbol existingMember = default(Microsoft.CodeAnalysis.CSharp.Symbol);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 163557, 163652);

                        var
                        existingOrAddedMembers = f_10073_163586_163651(recordParameters.Length)
                        ;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 163670, 163689);

                        int
                        addedCount = 0
                        ;
                        try
                        {
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 163707, 167423);
                            foreach (ParameterSymbol param in f_10073_163741_163757_I(recordParameters))
                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 163707, 167423);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 163799, 163824);

                                bool
                                isInherited = false
                                ;
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 163846, 163888);

                                var
                                syntax = f_10073_163859_163887(param)
                                ;
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 163912, 164674);

                                var
                                targetProperty = f_10073_163933_164673(f_10073_163965_163975(param), this, ImmutableArray<ParameterSymbol>.Empty, RefKind.None, f_10073_164332_164357(param), ImmutableArray<CustomModifier>.Empty, isStatic: false, ImmutableArray<PropertySymbol>.Empty)
                                ;

                                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 164698, 165017) || true) && (!f_10073_164703_164771(memberSignatures, targetProperty, out existingMember))
                                )

                                {
                                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 164698, 165017);
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 164821, 164949);

                                    existingMember = f_10073_164838_164948(targetProperty, memberIsFromSomeCompilation: true);
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 164975, 164994);

                                    isInherited = true;
                                    DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 164698, 165017);
                                }

                                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 165039, 166640) || true) && (existingMember is null)
                                )

                                {
                                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 165039, 166640);
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 165115, 165217);

                                    f_10073_165115_165216(f_10073_165127_165215(this, syntax, param, isOverride: false, diagnostics));
                                    DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 165039, 166640);
                                }

                                else
                                {
                                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 165039, 166640);

                                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 165267, 166640) || true) && (existingMember is PropertySymbol { IsStatic: false, GetMethod: { } } prop
                                    && (DynAbs.Tracing.TraceSender.Expression_True(10073, 165271, 165465) && prop.TypeWithAnnotations.Equals(f_10073_165405_165430(param), TypeCompareKind.AllIgnoreOptions)))
                                    )

                                    {
                                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 165267, 166640);

                                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 165626, 166124) || true) && (isInherited && (DynAbs.Tracing.TraceSender.Expression_True(10073, 165630, 165660) && f_10073_165645_165660(prop)))
                                        )

                                        {
                                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 165626, 166124);
                                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 165718, 165819);

                                            f_10073_165718_165818(f_10073_165730_165817(this, syntax, param, isOverride: true, diagnostics));
                                            DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 165626, 166124);
                                        }

                                        else

                                        {
                                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 165626, 166124);
                                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 166064, 166097);

                                            f_10073_166064_166096(                            // Deconstruct() is specified to simply assign from this property to the corresponding out parameter.
                                                                        existingOrAddedMembers, prop);
                                            DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 165626, 166124);
                                        }
                                        DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 165267, 166640);
                                    }

                                    else

                                    {
                                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 165267, 166640);
                                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 166222, 166617);

                                        f_10073_166222_166616(diagnostics, ErrorCode.ERR_BadRecordMemberForPositionalParameter, f_10073_166320_166335(param)[0], f_10073_166369_166518(existingMember, f_10073_166405_166517(f_10073_166405_166449(), SymbolDisplayMemberOptions.IncludeContainingType)), f_10073_166549_166574(param), f_10073_166605_166615(param));
                                        DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 165267, 166640);
                                    }
                                    DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 165039, 166640);
                                }

                                int
                                f_10073_165718_165818(Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedRecordPropertySymbol
                                property)
                                {
                                    addProperty(property);
                                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 165718, 165818);
                                    return 0;
                                }
                                int
                                f_10073_165115_165216(Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedRecordPropertySymbol
                                property)
                                {
                                    addProperty(property);
                                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 165115, 165216);
                                    return 0;
                                }


                                void addProperty(SynthesizedRecordPropertySymbol property)
                                {
                                    try
                                    {
                                        DynAbs.Tracing.TraceSender.TraceEnterMethod(10073, 166664, 167404);
                                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 166771, 166808);

                                        f_10073_166771_166807(existingOrAddedMembers, property);
                                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 166834, 166856);

                                        f_10073_166834_166855(members, property);
                                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 166882, 166925);

                                        f_10073_166882_166924(f_10073_166895_166913(property) is object);
                                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 166951, 166994);

                                        f_10073_166951_166993(f_10073_166964_166982(property) is object);
                                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 167020, 167052);

                                        f_10073_167020_167051(members, f_10073_167032_167050(property));
                                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 167078, 167110);

                                        f_10073_167078_167109(members, f_10073_167090_167108(property));
                                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 167136, 167171);

                                        f_10073_167136_167170(members, f_10073_167148_167169(property));
                                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 167199, 167342);

                                        f_10073_167199_167341(
                                                                builder, f_10073_167250_167340(f_10073_167281_167302(property), f_10073_167304_167324(paramList)[f_10073_167325_167338(param)]));
                                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 167368, 167381);

                                        addedCount++;
                                        DynAbs.Tracing.TraceSender.TraceExitMethod(10073, 166664, 167404);

                                        int
                                        f_10073_166771_166807(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol>
                                        this_param, Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedRecordPropertySymbol
                                        item)
                                        {
                                            this_param.Add((Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol)item);
                                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 166771, 166807);
                                            return 0;
                                        }


                                        int
                                        f_10073_166834_166855(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbol>
                                        this_param, Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedRecordPropertySymbol
                                        item)
                                        {
                                            this_param.Add((Microsoft.CodeAnalysis.CSharp.Symbol)item);
                                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 166834, 166855);
                                            return 0;
                                        }


                                        Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol?
                                        f_10073_166895_166913(Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedRecordPropertySymbol
                                        this_param)
                                        {
                                            var return_v = this_param.GetMethod;
                                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 166895, 166913);
                                            return return_v;
                                        }


                                        int
                                        f_10073_166882_166924(bool
                                        condition)
                                        {
                                            Debug.Assert(condition);
                                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 166882, 166924);
                                            return 0;
                                        }


                                        Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol?
                                        f_10073_166964_166982(Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedRecordPropertySymbol
                                        this_param)
                                        {
                                            var return_v = this_param.SetMethod;
                                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 166964, 166982);
                                            return return_v;
                                        }


                                        int
                                        f_10073_166951_166993(bool
                                        condition)
                                        {
                                            Debug.Assert(condition);
                                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 166951, 166993);
                                            return 0;
                                        }


                                        Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                                        f_10073_167032_167050(Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedRecordPropertySymbol
                                        this_param)
                                        {
                                            var return_v = this_param.GetMethod;
                                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 167032, 167050);
                                            return return_v;
                                        }


                                        int
                                        f_10073_167020_167051(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbol>
                                        this_param, Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                                        item)
                                        {
                                            this_param.Add((Microsoft.CodeAnalysis.CSharp.Symbol)item);
                                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 167020, 167051);
                                            return 0;
                                        }


                                        Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                                        f_10073_167090_167108(Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedRecordPropertySymbol
                                        this_param)
                                        {
                                            var return_v = this_param.SetMethod;
                                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 167090, 167108);
                                            return return_v;
                                        }


                                        int
                                        f_10073_167078_167109(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbol>
                                        this_param, Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                                        item)
                                        {
                                            this_param.Add((Microsoft.CodeAnalysis.CSharp.Symbol)item);
                                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 167078, 167109);
                                            return 0;
                                        }


                                        Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedBackingFieldSymbol
                                        f_10073_167148_167169(Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedRecordPropertySymbol
                                        this_param)
                                        {
                                            var return_v = this_param.BackingField;
                                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 167148, 167169);
                                            return return_v;
                                        }


                                        int
                                        f_10073_167136_167170(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbol>
                                        this_param, Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedBackingFieldSymbol
                                        item)
                                        {
                                            this_param.Add((Microsoft.CodeAnalysis.CSharp.Symbol)item);
                                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 167136, 167170);
                                            return 0;
                                        }


                                        Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedBackingFieldSymbol
                                        f_10073_167281_167302(Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedRecordPropertySymbol
                                        this_param)
                                        {
                                            var return_v = this_param.BackingField;
                                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 167281, 167302);
                                            return return_v;
                                        }


                                        Microsoft.CodeAnalysis.SeparatedSyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.ParameterSyntax>
                                        f_10073_167304_167324(Microsoft.CodeAnalysis.CSharp.Syntax.ParameterListSyntax
                                        this_param)
                                        {
                                            var return_v = this_param.Parameters;
                                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 167304, 167324);
                                            return return_v;
                                        }


                                        int
                                        f_10073_167325_167338(Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol
                                        this_param)
                                        {
                                            var return_v = this_param.Ordinal;
                                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 167325, 167338);
                                            return return_v;
                                        }


                                        Microsoft.CodeAnalysis.CSharp.Symbols.FieldOrPropertyInitializer
                                        f_10073_167250_167340(Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedBackingFieldSymbol
                                        fieldOpt, Microsoft.CodeAnalysis.CSharp.Syntax.ParameterSyntax
                                        syntax)
                                        {
                                            var return_v = new Microsoft.CodeAnalysis.CSharp.Symbols.FieldOrPropertyInitializer((Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol)fieldOpt, (Microsoft.CodeAnalysis.SyntaxNode)syntax);
                                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 167250, 167340);
                                            return return_v;
                                        }


                                        int
                                        f_10073_167199_167341(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol.MembersAndInitializersBuilder
                                        this_param, Microsoft.CodeAnalysis.CSharp.Symbols.FieldOrPropertyInitializer
                                        initializer)
                                        {
                                            this_param.AddInstanceInitializerForPositionalMembers(initializer);
                                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 167199, 167341);
                                            return 0;
                                        }

                                    }
                                    catch
                                    {
                                        DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10073, 166664, 167404);
                                        throw;
                                    }
                                    finally
                                    {
                                        DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10073, 166664, 167404);
                                    }
                                }
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 163707, 167423);
                            }
                        }
                        catch (System.Exception)
                        {
                            DynAbs.Tracing.TraceSender.TraceExitLoopByException(10073, 1, 3717);
                            throw;
                        }
                        finally
                        {
                            DynAbs.Tracing.TraceSender.TraceExitLoop(10073, 1, 3717);
                        }
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 167443, 167494);

                        return f_10073_167450_167493(existingOrAddedMembers);
                        DynAbs.Tracing.TraceSender.TraceExitMethod(10073, 163430, 167509);

                        Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol>
                        f_10073_163586_163651(int
                        capacity)
                        {
                            var return_v = ArrayBuilder<PropertySymbol>.GetInstance(capacity);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 163586, 163651);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode
                        f_10073_163859_163887(Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol
                        symbol)
                        {
                            var return_v = symbol.GetNonNullSyntaxNode();
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 163859, 163887);
                            return return_v;
                        }


                        string
                        f_10073_163965_163975(Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol
                        this_param)
                        {
                            var return_v = this_param.Name;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 163965, 163975);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                        f_10073_164332_164357(Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol
                        this_param)
                        {
                            var return_v = this_param.TypeWithAnnotations;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 164332, 164357);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.CSharp.Symbols.SignatureOnlyPropertySymbol
                        f_10073_163933_164673(string
                        name, Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                        containingType, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol>
                        parameters, Microsoft.CodeAnalysis.RefKind
                        refKind, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                        type, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CustomModifier>
                        refCustomModifiers, bool
                        isStatic, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol>
                        explicitInterfaceImplementations)
                        {
                            var return_v = new Microsoft.CodeAnalysis.CSharp.Symbols.SignatureOnlyPropertySymbol(name, (Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol)containingType, parameters, refKind, type, refCustomModifiers, isStatic: isStatic, explicitInterfaceImplementations);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 163933, 164673);
                            return return_v;
                        }


                        bool
                        f_10073_164703_164771(Microsoft.CodeAnalysis.PooledObjects.PooledDictionary<Microsoft.CodeAnalysis.CSharp.Symbol, Microsoft.CodeAnalysis.CSharp.Symbol>
                        this_param, Microsoft.CodeAnalysis.CSharp.Symbols.SignatureOnlyPropertySymbol
                        key, out Microsoft.CodeAnalysis.CSharp.Symbol?
                        value)
                        {
                            var return_v = this_param.TryGetValue((Microsoft.CodeAnalysis.CSharp.Symbol)key, out value);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 164703, 164771);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.CSharp.Symbol
                        f_10073_164838_164948(Microsoft.CodeAnalysis.CSharp.Symbols.SignatureOnlyPropertySymbol
                        member, bool
                        memberIsFromSomeCompilation)
                        {
                            var return_v = OverriddenOrHiddenMembersHelpers.FindFirstHiddenMemberIfAny((Microsoft.CodeAnalysis.CSharp.Symbol)member, memberIsFromSomeCompilation: memberIsFromSomeCompilation);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 164838, 164948);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedRecordPropertySymbol
                        f_10073_165127_165215(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                        containingType, Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode
                        syntax, Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol
                        backingParameter, bool
                        isOverride, Microsoft.CodeAnalysis.DiagnosticBag
                        diagnostics)
                        {
                            var return_v = new Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedRecordPropertySymbol(containingType, syntax, backingParameter, isOverride: isOverride, diagnostics);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 165127, 165215);
                            return return_v;
                        }



                        Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                        f_10073_165405_165430(Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol
                        this_param)
                        {
                            var return_v = this_param.TypeWithAnnotations;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 165405, 165430);
                            return return_v;
                        }


                        bool
                        f_10073_165645_165660(Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol
                        this_param)
                        {
                            var return_v = this_param.IsAbstract;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 165645, 165660);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedRecordPropertySymbol
                        f_10073_165730_165817(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                        containingType, Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode
                        syntax, Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol
                        backingParameter, bool
                        isOverride, Microsoft.CodeAnalysis.DiagnosticBag
                        diagnostics)
                        {
                            var return_v = new Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedRecordPropertySymbol(containingType, syntax, backingParameter, isOverride: isOverride, diagnostics);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 165730, 165817);
                            return return_v;
                        }



                        int
                        f_10073_166064_166096(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol>
                        this_param, Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol
                        item)
                        {
                            this_param.Add(item);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 166064, 166096);
                            return 0;
                        }


                        System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Location>
                        f_10073_166320_166335(Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol
                        this_param)
                        {
                            var return_v = this_param.Locations;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 166320, 166335);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.SymbolDisplayFormat
                        f_10073_166405_166449()
                        {
                            var return_v = SymbolDisplayFormat.CSharpErrorMessageFormat;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 166405, 166449);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.SymbolDisplayFormat
                        f_10073_166405_166517(Microsoft.CodeAnalysis.SymbolDisplayFormat
                        this_param, Microsoft.CodeAnalysis.SymbolDisplayMemberOptions
                        options)
                        {
                            var return_v = this_param.WithMemberOptions(options);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 166405, 166517);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.FormattedSymbol
                        f_10073_166369_166518(Microsoft.CodeAnalysis.CSharp.Symbol
                        symbol, Microsoft.CodeAnalysis.SymbolDisplayFormat
                        symbolDisplayFormat)
                        {
                            var return_v = new Microsoft.CodeAnalysis.FormattedSymbol((Microsoft.CodeAnalysis.Symbols.ISymbolInternal)symbol, symbolDisplayFormat);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 166369, 166518);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                        f_10073_166549_166574(Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol
                        this_param)
                        {
                            var return_v = this_param.TypeWithAnnotations;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 166549, 166574);
                            return return_v;
                        }


                        string
                        f_10073_166605_166615(Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol
                        this_param)
                        {
                            var return_v = this_param.Name;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 166605, 166615);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo
                        f_10073_166222_166616(Microsoft.CodeAnalysis.DiagnosticBag
                        diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                        code, Microsoft.CodeAnalysis.Location
                        location, params object[]
                        args)
                        {
                            var return_v = diagnostics.Add(code, location, args);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 166222, 166616);
                            return return_v;
                        }


                        System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol>
                        f_10073_163741_163757_I(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol>
                        i)
                        {
                            var return_v = i;
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 163741, 163757);
                            return return_v;
                        }


                        System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol>
                        f_10073_167450_167493(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol>
                        this_param)
                        {
                            var return_v = this_param.ToImmutableAndFree();
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 167450, 167493);
                            return return_v;
                        }

                    }
                    catch
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10073, 163430, 167509);
                        throw;
                    }
                    finally
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10073, 163430, 167509);
                    }
                    throw new System.Exception("Slicer error: unreachable code");
                }

                void addObjectEquals(MethodSymbol thisEquals)
                {
                    try
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterMethod(10073, 167525, 167722);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 167603, 167707);

                        f_10073_167603_167706(members, f_10073_167615_167705(this, thisEquals, memberOffset: f_10073_167678_167691(members), diagnostics));
                        DynAbs.Tracing.TraceSender.TraceExitMethod(10073, 167525, 167722);

                        int
                        f_10073_167678_167691(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbol>
                        this_param)
                        {
                            var return_v = this_param.Count;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 167678, 167691);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedRecordObjEquals
                        f_10073_167615_167705(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                        containingType, Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                        typedRecordEquals, int
                        memberOffset, Microsoft.CodeAnalysis.DiagnosticBag
                        diagnostics)
                        {
                            var return_v = new Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedRecordObjEquals(containingType, typedRecordEquals, memberOffset: memberOffset, diagnostics);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 167615, 167705);
                            return return_v;
                        }


                        int
                        f_10073_167603_167706(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbol>
                        this_param, Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedRecordObjEquals
                        item)
                        {
                            this_param.Add((Microsoft.CodeAnalysis.CSharp.Symbol)item);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 167603, 167706);
                            return 0;
                        }

                    }
                    catch
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10073, 167525, 167722);
                        throw;
                    }
                    finally
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10073, 167525, 167722);
                    }
                }

                MethodSymbol addGetHashCode(PropertySymbol equalityContract)
                {
                    try
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterMethod(10073, 167738, 169373);
                        Microsoft.CodeAnalysis.CSharp.Symbol existingHashCodeMethod = default(Microsoft.CodeAnalysis.CSharp.Symbol);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 167831, 168481);

                        var
                        targetMethod = f_10073_167850_168480(WellKnownMemberNames.ObjectGetHashCode, this, MethodKind.Ordinary, Cci.CallingConvention.HasThis, ImmutableArray<TypeParameterSymbol>.Empty, ImmutableArray<ParameterSymbol>.Empty, RefKind.None, isInitOnly: false, TypeWithAnnotations.Create(f_10073_168310_168362(compilation, SpecialType.System_Int32)), ImmutableArray<CustomModifier>.Empty, ImmutableArray<MethodSymbol>.Empty)
                        ;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 168501, 168526);

                        MethodSymbol
                        getHashCode
                        = default(MethodSymbol);

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 168546, 169321) || true) && (!f_10073_168551_168629(memberSignatures, targetMethod, out existingHashCodeMethod))
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 168546, 169321);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 168671, 168784);

                            getHashCode = f_10073_168685_168783(this, equalityContract, memberOffset: f_10073_168756_168769(members), diagnostics);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 168806, 168831);

                            f_10073_168806_168830(members, getHashCode);
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 168546, 169321);
                        }

                        else

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 168546, 169321);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 168913, 168964);

                            getHashCode = (MethodSymbol)existingHashCodeMethod;

                            if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 168986, 169302) || true) && (!f_10073_168991_169104(getHashCode, SpecialType.System_Int32, diagnostics) && (DynAbs.Tracing.TraceSender.Expression_True(10073, 168990, 169128) && f_10073_169108_169128(getHashCode)) && (DynAbs.Tracing.TraceSender.Expression_True(10073, 168990, 169141) && f_10073_169132_169141_M(!IsSealed)))
                            )

                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 168986, 169302);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 169191, 169279);

                                f_10073_169191_169278(diagnostics, ErrorCode.ERR_SealedAPIInRecord, f_10073_169240_169261(getHashCode)[0], getHashCode);
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 168986, 169302);
                            }
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 168546, 169321);
                        }
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 169339, 169358);

                        return getHashCode;
                        DynAbs.Tracing.TraceSender.TraceExitMethod(10073, 167738, 169373);

                        Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                        f_10073_168310_168362(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                        this_param, Microsoft.CodeAnalysis.SpecialType
                        specialType)
                        {
                            var return_v = this_param.GetSpecialType(specialType);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 168310, 168362);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.CSharp.Symbols.SignatureOnlyMethodSymbol
                        f_10073_167850_168480(string
                        name, Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                        containingType, Microsoft.CodeAnalysis.MethodKind
                        methodKind, Microsoft.Cci.CallingConvention
                        callingConvention, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.TypeParameterSymbol>
                        typeParameters, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol>
                        parameters, Microsoft.CodeAnalysis.RefKind
                        refKind, bool
                        isInitOnly, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                        returnType, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CustomModifier>
                        refCustomModifiers, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol>
                        explicitInterfaceImplementations)
                        {
                            var return_v = new Microsoft.CodeAnalysis.CSharp.Symbols.SignatureOnlyMethodSymbol(name, (Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol)containingType, methodKind, callingConvention, typeParameters, parameters, refKind, isInitOnly: isInitOnly, returnType, refCustomModifiers, explicitInterfaceImplementations);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 167850, 168480);
                            return return_v;
                        }


                        bool
                        f_10073_168551_168629(Microsoft.CodeAnalysis.PooledObjects.PooledDictionary<Microsoft.CodeAnalysis.CSharp.Symbol, Microsoft.CodeAnalysis.CSharp.Symbol>
                        this_param, Microsoft.CodeAnalysis.CSharp.Symbols.SignatureOnlyMethodSymbol
                        key, out Microsoft.CodeAnalysis.CSharp.Symbol?
                        value)
                        {
                            var return_v = this_param.TryGetValue((Microsoft.CodeAnalysis.CSharp.Symbol)key, out value);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 168551, 168629);
                            return return_v;
                        }


                        int
                        f_10073_168756_168769(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbol>
                        this_param)
                        {
                            var return_v = this_param.Count;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 168756, 168769);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedRecordGetHashCode
                        f_10073_168685_168783(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                        containingType, Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol
                        equalityContract, int
                        memberOffset, Microsoft.CodeAnalysis.DiagnosticBag
                        diagnostics)
                        {
                            var return_v = new Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedRecordGetHashCode(containingType, equalityContract, memberOffset: memberOffset, diagnostics);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 168685, 168783);
                            return return_v;
                        }


                        int
                        f_10073_168806_168830(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbol>
                        this_param, Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                        item)
                        {
                            this_param.Add((Microsoft.CodeAnalysis.CSharp.Symbol)item);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 168806, 168830);
                            return 0;
                        }


                        bool
                        f_10073_168991_169104(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                        overriding, Microsoft.CodeAnalysis.SpecialType
                        returnSpecialType, Microsoft.CodeAnalysis.DiagnosticBag
                        diagnostics)
                        {
                            var return_v = SynthesizedRecordObjectMethod.VerifyOverridesMethodFromObject(overriding, returnSpecialType, diagnostics);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 168991, 169104);
                            return return_v;
                        }


                        bool
                        f_10073_169108_169128(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                        this_param)
                        {
                            var return_v = this_param.IsSealed;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 169108, 169128);
                            return return_v;
                        }


                        bool
                        f_10073_169132_169141_M(bool
                        i)
                        {
                            var return_v = i;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 169132, 169141);
                            return return_v;
                        }


                        System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Location>
                        f_10073_169240_169261(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                        this_param)
                        {
                            var return_v = this_param.Locations;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 169240, 169261);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo
                        f_10073_169191_169278(Microsoft.CodeAnalysis.DiagnosticBag
                        diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                        code, Microsoft.CodeAnalysis.Location
                        location, params object[]
                        args)
                        {
                            var return_v = diagnostics.Add(code, location, args);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 169191, 169278);
                            return return_v;
                        }

                    }
                    catch
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10073, 167738, 169373);
                        throw;
                    }
                    finally
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10073, 167738, 169373);
                    }
                    throw new System.Exception("Slicer error: unreachable code");
                }

                PropertySymbol addEqualityContract()
                {
                    try
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterMethod(10073, 169389, 172611);
                        Microsoft.CodeAnalysis.CSharp.Symbol existingEqualityContractProperty = default(Microsoft.CodeAnalysis.CSharp.Symbol);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 169458, 170294);

                        var
                        targetProperty = f_10073_169479_170293(SynthesizedRecordEqualityContractProperty.PropertyName, this, ImmutableArray<ParameterSymbol>.Empty, RefKind.None, TypeWithAnnotations.Create(f_10073_169933_169988(compilation, WellKnownType.System_Type)), ImmutableArray<CustomModifier>.Empty, isStatic: false, ImmutableArray<PropertySymbol>.Empty)
                        ;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 170314, 170346);

                        PropertySymbol
                        equalityContract
                        = default(PropertySymbol);

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 170366, 172552) || true) && (!f_10073_170371_170461(memberSignatures, targetProperty, out existingEqualityContractProperty))
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 170366, 172552);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 170503, 170587);

                            equalityContract = f_10073_170522_170586(this, diagnostics);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 170609, 170639);

                            f_10073_170609_170638(members, equalityContract);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 170661, 170701);

                            f_10073_170661_170700(members, f_10073_170673_170699(equalityContract));
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 170366, 172552);
                        }

                        else

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 170366, 172552);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 170783, 170851);

                            equalityContract = (PropertySymbol)existingEqualityContractProperty;

                            if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 170875, 171544) || true) && (f_10073_170879_170892(this) && (DynAbs.Tracing.TraceSender.Expression_True(10073, 170879, 170944) && f_10073_170896_170944(f_10073_170896_170929(this))))
                            )

                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 170875, 171544);

                                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 170994, 171248) || true) && (f_10073_170998_171036(equalityContract) != Accessibility.Private)
                                )

                                {
                                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 170994, 171248);
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 171119, 171221);

                                    f_10073_171119_171220(diagnostics, ErrorCode.ERR_NonPrivateAPIInRecord, f_10073_171172_171198(equalityContract)[0], equalityContract);
                                    DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 170994, 171248);
                                }
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 170875, 171544);
                            }

                            else
                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 170875, 171544);

                                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 171298, 171544) || true) && (f_10073_171302_171340(equalityContract) != Accessibility.Protected)
                                )

                                {
                                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 171298, 171544);
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 171417, 171521);

                                    f_10073_171417_171520(diagnostics, ErrorCode.ERR_NonProtectedAPIInRecord, f_10073_171472_171498(equalityContract)[0], equalityContract);
                                    DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 171298, 171544);
                                }
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 170875, 171544);
                            }

                            if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 171568, 172192) || true) && (!f_10073_171573_171656(f_10073_171573_171594(equalityContract), f_10073_171602_171621(targetProperty), TypeCompareKind.AllIgnoreOptions))
                            )

                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 171568, 172192);

                                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 171706, 171958) || true) && (!f_10073_171711_171746(f_10073_171711_171732(equalityContract)))
                                )

                                {
                                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 171706, 171958);
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 171804, 171931);

                                    f_10073_171804_171930(diagnostics, ErrorCode.ERR_SignatureMismatchInRecord, f_10073_171861_171887(equalityContract)[0], equalityContract, f_10073_171910_171929(targetProperty));
                                    DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 171706, 171958);
                                }
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 171568, 172192);
                            }

                            else

                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 171568, 172192);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 172056, 172169);

                                f_10073_172056_172168(equalityContract, diagnostics);
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 171568, 172192);
                            }

                            if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 172216, 172438) || true) && (f_10073_172220_172246(equalityContract) is null)
                            )

                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 172216, 172438);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 172304, 172415);

                                f_10073_172304_172414(diagnostics, ErrorCode.ERR_EqualityContractRequiresGetter, f_10073_172366_172392(equalityContract)[0], equalityContract);
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 172216, 172438);
                            }
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 172462, 172533);

                            f_10073_172462_172532(equalityContract, diagnostics);
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 170366, 172552);
                        }
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 172572, 172596);

                        return equalityContract;
                        DynAbs.Tracing.TraceSender.TraceExitMethod(10073, 169389, 172611);

                        Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                        f_10073_169933_169988(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                        this_param, Microsoft.CodeAnalysis.WellKnownType
                        type)
                        {
                            var return_v = this_param.GetWellKnownType(type);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 169933, 169988);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.CSharp.Symbols.SignatureOnlyPropertySymbol
                        f_10073_169479_170293(string
                        name, Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                        containingType, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol>
                        parameters, Microsoft.CodeAnalysis.RefKind
                        refKind, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                        type, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CustomModifier>
                        refCustomModifiers, bool
                        isStatic, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol>
                        explicitInterfaceImplementations)
                        {
                            var return_v = new Microsoft.CodeAnalysis.CSharp.Symbols.SignatureOnlyPropertySymbol(name, (Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol)containingType, parameters, refKind, type, refCustomModifiers, isStatic: isStatic, explicitInterfaceImplementations);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 169479, 170293);
                            return return_v;
                        }


                        bool
                        f_10073_170371_170461(Microsoft.CodeAnalysis.PooledObjects.PooledDictionary<Microsoft.CodeAnalysis.CSharp.Symbol, Microsoft.CodeAnalysis.CSharp.Symbol>
                        this_param, Microsoft.CodeAnalysis.CSharp.Symbols.SignatureOnlyPropertySymbol
                        key, out Microsoft.CodeAnalysis.CSharp.Symbol?
                        value)
                        {
                            var return_v = this_param.TryGetValue((Microsoft.CodeAnalysis.CSharp.Symbol)key, out value);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 170371, 170461);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedRecordEqualityContractProperty
                        f_10073_170522_170586(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                        containingType, Microsoft.CodeAnalysis.DiagnosticBag
                        diagnostics)
                        {
                            var return_v = new Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedRecordEqualityContractProperty(containingType, diagnostics);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 170522, 170586);
                            return return_v;
                        }


                        int
                        f_10073_170609_170638(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbol>
                        this_param, Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol
                        item)
                        {
                            this_param.Add((Microsoft.CodeAnalysis.CSharp.Symbol)item);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 170609, 170638);
                            return 0;
                        }


                        Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                        f_10073_170673_170699(Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol
                        this_param)
                        {
                            var return_v = this_param.GetMethod;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 170673, 170699);
                            return return_v;
                        }


                        int
                        f_10073_170661_170700(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbol>
                        this_param, Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                        item)
                        {
                            this_param.Add((Microsoft.CodeAnalysis.CSharp.Symbol)item);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 170661, 170700);
                            return 0;
                        }


                        bool
                        f_10073_170879_170892(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                        this_param)
                        {
                            var return_v = this_param.IsSealed;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 170879, 170892);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                        f_10073_170896_170929(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                        this_param)
                        {
                            var return_v = this_param.BaseTypeNoUseSiteDiagnostics;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 170896, 170929);
                            return return_v;
                        }


                        bool
                        f_10073_170896_170944(Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                        type)
                        {
                            var return_v = type.IsObjectType();
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 170896, 170944);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.Accessibility
                        f_10073_170998_171036(Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol
                        this_param)
                        {
                            var return_v = this_param.DeclaredAccessibility;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 170998, 171036);
                            return return_v;
                        }


                        System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Location>
                        f_10073_171172_171198(Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol
                        this_param)
                        {
                            var return_v = this_param.Locations;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 171172, 171198);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo
                        f_10073_171119_171220(Microsoft.CodeAnalysis.DiagnosticBag
                        diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                        code, Microsoft.CodeAnalysis.Location
                        location, params object[]
                        args)
                        {
                            var return_v = diagnostics.Add(code, location, args);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 171119, 171220);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.Accessibility
                        f_10073_171302_171340(Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol
                        this_param)
                        {
                            var return_v = this_param.DeclaredAccessibility;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 171302, 171340);
                            return return_v;
                        }


                        System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Location>
                        f_10073_171472_171498(Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol
                        this_param)
                        {
                            var return_v = this_param.Locations;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 171472, 171498);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo
                        f_10073_171417_171520(Microsoft.CodeAnalysis.DiagnosticBag
                        diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                        code, Microsoft.CodeAnalysis.Location
                        location, params object[]
                        args)
                        {
                            var return_v = diagnostics.Add(code, location, args);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 171417, 171520);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                        f_10073_171573_171594(Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol
                        this_param)
                        {
                            var return_v = this_param.Type;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 171573, 171594);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                        f_10073_171602_171621(Microsoft.CodeAnalysis.CSharp.Symbols.SignatureOnlyPropertySymbol
                        this_param)
                        {
                            var return_v = this_param.Type;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 171602, 171621);
                            return return_v;
                        }


                        bool
                        f_10073_171573_171656(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                        this_param, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                        t2, Microsoft.CodeAnalysis.TypeCompareKind
                        compareKind)
                        {
                            var return_v = this_param.Equals(t2, compareKind);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 171573, 171656);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                        f_10073_171711_171732(Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol
                        this_param)
                        {
                            var return_v = this_param.Type;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 171711, 171732);
                            return return_v;
                        }


                        bool
                        f_10073_171711_171746(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                        type)
                        {
                            var return_v = type.IsErrorType();
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 171711, 171746);
                            return return_v;
                        }


                        System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Location>
                        f_10073_171861_171887(Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol
                        this_param)
                        {
                            var return_v = this_param.Locations;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 171861, 171887);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                        f_10073_171910_171929(Microsoft.CodeAnalysis.CSharp.Symbols.SignatureOnlyPropertySymbol
                        this_param)
                        {
                            var return_v = this_param.Type;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 171910, 171929);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo
                        f_10073_171804_171930(Microsoft.CodeAnalysis.DiagnosticBag
                        diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                        code, Microsoft.CodeAnalysis.Location
                        location, params object[]
                        args)
                        {
                            var return_v = diagnostics.Add(code, location, args);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 171804, 171930);
                            return return_v;
                        }


                        int
                        f_10073_172056_172168(Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol
                        overriding, Microsoft.CodeAnalysis.DiagnosticBag
                        diagnostics)
                        {
                            SynthesizedRecordEqualityContractProperty.VerifyOverridesEqualityContractFromBase(overriding, diagnostics);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 172056, 172168);
                            return 0;
                        }


                        Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol?
                        f_10073_172220_172246(Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol
                        this_param)
                        {
                            var return_v = this_param.GetMethod;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 172220, 172246);
                            return return_v;
                        }


                        System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Location>
                        f_10073_172366_172392(Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol
                        this_param)
                        {
                            var return_v = this_param.Locations;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 172366, 172392);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo
                        f_10073_172304_172414(Microsoft.CodeAnalysis.DiagnosticBag
                        diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                        code, Microsoft.CodeAnalysis.Location
                        location, params object[]
                        args)
                        {
                            var return_v = diagnostics.Add(code, location, args);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 172304, 172414);
                            return return_v;
                        }


                        int
                        f_10073_172462_172532(Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol
                        symbol, Microsoft.CodeAnalysis.DiagnosticBag
                        diagnostics)
                        {
                            reportStaticOrNotOverridableAPIInRecord((Microsoft.CodeAnalysis.CSharp.Symbol)symbol, diagnostics);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 172462, 172532);
                            return 0;
                        }

                    }
                    catch
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10073, 169389, 172611);
                        throw;
                    }
                    finally
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10073, 169389, 172611);
                    }
                    throw new System.Exception("Slicer error: unreachable code");
                }

                MethodSymbol addThisEquals(PropertySymbol equalityContract)
                {
                    try
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterMethod(10073, 172627, 175031);
                        Microsoft.CodeAnalysis.CSharp.Symbol existingEqualsMethod = default(Microsoft.CodeAnalysis.CSharp.Symbol);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 172719, 173831);

                        var
                        targetMethod = f_10073_172738_173830(WellKnownMemberNames.ObjectEquals, this, MethodKind.Ordinary, Cci.CallingConvention.HasThis, ImmutableArray<TypeParameterSymbol>.Empty, f_10073_173031_173533(f_10073_173070_173532(TypeWithAnnotations.Create(this), ImmutableArray<CustomModifier>.Empty, isParams: false, RefKind.None)), RefKind.None, isInitOnly: false, TypeWithAnnotations.Create(f_10073_173658_173712(compilation, SpecialType.System_Boolean)), ImmutableArray<CustomModifier>.Empty, ImmutableArray<MethodSymbol>.Empty)
                        ;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 173851, 173875);

                        MethodSymbol
                        thisEquals
                        = default(MethodSymbol);

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 173895, 174978) || true) && (!f_10073_173900_173976(memberSignatures, targetMethod, out existingEqualsMethod))
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 173895, 174978);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 174018, 174125);

                            thisEquals = f_10073_174031_174124(this, equalityContract, memberOffset: f_10073_174097_174110(members), diagnostics);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 174147, 174171);

                            f_10073_174147_174170(members, thisEquals);
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 173895, 174978);
                        }

                        else

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 173895, 174978);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 174253, 174301);

                            thisEquals = (MethodSymbol)existingEqualsMethod;

                            if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 174325, 174547) || true) && (f_10073_174329_174361(thisEquals) != Accessibility.Public)
                            )

                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 174325, 174547);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 174435, 174524);

                                f_10073_174435_174523(diagnostics, ErrorCode.ERR_NonPublicAPIInRecord, f_10073_174487_174507(thisEquals)[0], thisEquals);
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 174325, 174547);
                            }

                            if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 174571, 174870) || true) && (f_10073_174575_174608(f_10073_174575_174596(thisEquals)) != SpecialType.System_Boolean && (DynAbs.Tracing.TraceSender.Expression_True(10073, 174575, 174678) && !f_10073_174643_174678(f_10073_174643_174664(thisEquals))))
                            )

                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 174571, 174870);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 174728, 174847);

                                f_10073_174728_174846(diagnostics, ErrorCode.ERR_SignatureMismatchInRecord, f_10073_174785_174805(thisEquals)[0], thisEquals, f_10073_174822_174845(targetMethod));
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 174571, 174870);
                            }
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 174894, 174959);

                            f_10073_174894_174958(thisEquals, diagnostics);
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 173895, 174978);
                        }
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 174998, 175016);

                        return thisEquals;
                        DynAbs.Tracing.TraceSender.TraceExitMethod(10073, 172627, 175031);

                        Microsoft.CodeAnalysis.CSharp.Symbols.SignatureOnlyParameterSymbol
                        f_10073_173070_173532(Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                        type, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CustomModifier>
                        refCustomModifiers, bool
                        isParams, Microsoft.CodeAnalysis.RefKind
                        refKind)
                        {
                            var return_v = new Microsoft.CodeAnalysis.CSharp.Symbols.SignatureOnlyParameterSymbol(type, refCustomModifiers, isParams: isParams, refKind);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 173070, 173532);
                            return return_v;
                        }


                        System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol>
                        f_10073_173031_173533(Microsoft.CodeAnalysis.CSharp.Symbols.SignatureOnlyParameterSymbol
                        item)
                        {
                            var return_v = ImmutableArray.Create<ParameterSymbol>((Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol)item);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 173031, 173533);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                        f_10073_173658_173712(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                        this_param, Microsoft.CodeAnalysis.SpecialType
                        specialType)
                        {
                            var return_v = this_param.GetSpecialType(specialType);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 173658, 173712);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.CSharp.Symbols.SignatureOnlyMethodSymbol
                        f_10073_172738_173830(string
                        name, Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                        containingType, Microsoft.CodeAnalysis.MethodKind
                        methodKind, Microsoft.Cci.CallingConvention
                        callingConvention, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.TypeParameterSymbol>
                        typeParameters, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol>
                        parameters, Microsoft.CodeAnalysis.RefKind
                        refKind, bool
                        isInitOnly, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                        returnType, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CustomModifier>
                        refCustomModifiers, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol>
                        explicitInterfaceImplementations)
                        {
                            var return_v = new Microsoft.CodeAnalysis.CSharp.Symbols.SignatureOnlyMethodSymbol(name, (Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol)containingType, methodKind, callingConvention, typeParameters, parameters, refKind, isInitOnly: isInitOnly, returnType, refCustomModifiers, explicitInterfaceImplementations);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 172738, 173830);
                            return return_v;
                        }


                        bool
                        f_10073_173900_173976(Microsoft.CodeAnalysis.PooledObjects.PooledDictionary<Microsoft.CodeAnalysis.CSharp.Symbol, Microsoft.CodeAnalysis.CSharp.Symbol>
                        this_param, Microsoft.CodeAnalysis.CSharp.Symbols.SignatureOnlyMethodSymbol
                        key, out Microsoft.CodeAnalysis.CSharp.Symbol?
                        value)
                        {
                            var return_v = this_param.TryGetValue((Microsoft.CodeAnalysis.CSharp.Symbol)key, out value);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 173900, 173976);
                            return return_v;
                        }


                        int
                        f_10073_174097_174110(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbol>
                        this_param)
                        {
                            var return_v = this_param.Count;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 174097, 174110);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedRecordEquals
                        f_10073_174031_174124(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                        containingType, Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol
                        equalityContract, int
                        memberOffset, Microsoft.CodeAnalysis.DiagnosticBag
                        diagnostics)
                        {
                            var return_v = new Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedRecordEquals(containingType, equalityContract, memberOffset: memberOffset, diagnostics);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 174031, 174124);
                            return return_v;
                        }


                        int
                        f_10073_174147_174170(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbol>
                        this_param, Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                        item)
                        {
                            this_param.Add((Microsoft.CodeAnalysis.CSharp.Symbol)item);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 174147, 174170);
                            return 0;
                        }


                        Microsoft.CodeAnalysis.Accessibility
                        f_10073_174329_174361(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                        this_param)
                        {
                            var return_v = this_param.DeclaredAccessibility;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 174329, 174361);
                            return return_v;
                        }


                        System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Location>
                        f_10073_174487_174507(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                        this_param)
                        {
                            var return_v = this_param.Locations;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 174487, 174507);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo
                        f_10073_174435_174523(Microsoft.CodeAnalysis.DiagnosticBag
                        diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                        code, Microsoft.CodeAnalysis.Location
                        location, params object[]
                        args)
                        {
                            var return_v = diagnostics.Add(code, location, args);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 174435, 174523);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                        f_10073_174575_174596(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                        this_param)
                        {
                            var return_v = this_param.ReturnType;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 174575, 174596);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.SpecialType
                        f_10073_174575_174608(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                        this_param)
                        {
                            var return_v = this_param.SpecialType;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 174575, 174608);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                        f_10073_174643_174664(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                        this_param)
                        {
                            var return_v = this_param.ReturnType;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 174643, 174664);
                            return return_v;
                        }


                        bool
                        f_10073_174643_174678(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                        type)
                        {
                            var return_v = type.IsErrorType();
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 174643, 174678);
                            return return_v;
                        }


                        System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Location>
                        f_10073_174785_174805(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                        this_param)
                        {
                            var return_v = this_param.Locations;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 174785, 174805);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                        f_10073_174822_174845(Microsoft.CodeAnalysis.CSharp.Symbols.SignatureOnlyMethodSymbol
                        this_param)
                        {
                            var return_v = this_param.ReturnType;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 174822, 174845);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo
                        f_10073_174728_174846(Microsoft.CodeAnalysis.DiagnosticBag
                        diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                        code, Microsoft.CodeAnalysis.Location
                        location, params object[]
                        args)
                        {
                            var return_v = diagnostics.Add(code, location, args);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 174728, 174846);
                            return return_v;
                        }


                        int
                        f_10073_174894_174958(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                        symbol, Microsoft.CodeAnalysis.DiagnosticBag
                        diagnostics)
                        {
                            reportStaticOrNotOverridableAPIInRecord((Microsoft.CodeAnalysis.CSharp.Symbol)symbol, diagnostics);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 174894, 174958);
                            return 0;
                        }

                    }
                    catch
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10073, 172627, 175031);
                        throw;
                    }
                    finally
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10073, 172627, 175031);
                    }
                    throw new System.Exception("Slicer error: unreachable code");
                }

                void reportStaticOrNotOverridableAPIInRecord(Symbol symbol, DiagnosticBag diagnostics)
                {
                    try
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterMethod(10073, 175047, 175631);

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 175166, 175616) || true) && (f_10073_175170_175179_M(!IsSealed) && (DynAbs.Tracing.TraceSender.Expression_True(10073, 175170, 175288) && ((f_10073_175206_175224_M(!symbol.IsAbstract) && (DynAbs.Tracing.TraceSender.Expression_True(10073, 175206, 175245) && f_10073_175228_175245_M(!symbol.IsVirtual)) && (DynAbs.Tracing.TraceSender.Expression_True(10073, 175206, 175267) && f_10073_175249_175267_M(!symbol.IsOverride))) || (DynAbs.Tracing.TraceSender.Expression_False(10073, 175205, 175287) || f_10073_175272_175287(symbol)))))
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 175166, 175616);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 175330, 175416);

                            f_10073_175330_175415(diagnostics, ErrorCode.ERR_NotOverridableAPIInRecord, f_10073_175387_175403(symbol)[0], symbol);
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 175166, 175616);
                        }

                        else
                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 175166, 175616);

                            if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 175458, 175616) || true) && (f_10073_175462_175477(symbol))
                            )

                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 175458, 175616);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 175519, 175597);

                                f_10073_175519_175596(diagnostics, ErrorCode.ERR_StaticAPIInRecord, f_10073_175568_175584(symbol)[0], symbol);
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 175458, 175616);
                            }
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 175166, 175616);
                        }
                        DynAbs.Tracing.TraceSender.TraceExitMethod(10073, 175047, 175631);

                        bool
                        f_10073_175170_175179_M(bool
                        i)
                        {
                            var return_v = i;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 175170, 175179);
                            return return_v;
                        }


                        bool
                        f_10073_175206_175224_M(bool
                        i)
                        {
                            var return_v = i;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 175206, 175224);
                            return return_v;
                        }


                        bool
                        f_10073_175228_175245_M(bool
                        i)
                        {
                            var return_v = i;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 175228, 175245);
                            return return_v;
                        }


                        bool
                        f_10073_175249_175267_M(bool
                        i)
                        {
                            var return_v = i;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 175249, 175267);
                            return return_v;
                        }


                        bool
                        f_10073_175272_175287(Microsoft.CodeAnalysis.CSharp.Symbol
                        this_param)
                        {
                            var return_v = this_param.IsSealed;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 175272, 175287);
                            return return_v;
                        }


                        System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Location>
                        f_10073_175387_175403(Microsoft.CodeAnalysis.CSharp.Symbol
                        this_param)
                        {
                            var return_v = this_param.Locations;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 175387, 175403);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo
                        f_10073_175330_175415(Microsoft.CodeAnalysis.DiagnosticBag
                        diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                        code, Microsoft.CodeAnalysis.Location
                        location, params object[]
                        args)
                        {
                            var return_v = diagnostics.Add(code, location, args);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 175330, 175415);
                            return return_v;
                        }


                        bool
                        f_10073_175462_175477(Microsoft.CodeAnalysis.CSharp.Symbol
                        this_param)
                        {
                            var return_v = this_param.IsStatic;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 175462, 175477);
                            return return_v;
                        }


                        System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Location>
                        f_10073_175568_175584(Microsoft.CodeAnalysis.CSharp.Symbol
                        this_param)
                        {
                            var return_v = this_param.Locations;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 175568, 175584);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo
                        f_10073_175519_175596(Microsoft.CodeAnalysis.DiagnosticBag
                        diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                        code, Microsoft.CodeAnalysis.Location
                        location, params object[]
                        args)
                        {
                            var return_v = diagnostics.Add(code, location, args);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 175519, 175596);
                            return return_v;
                        }

                    }
                    catch
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10073, 175047, 175631);
                        throw;
                    }
                    finally
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10073, 175047, 175631);
                    }
                }

                void addOtherEquals()
                {
                    try
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterMethod(10073, 175647, 175918);

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 175701, 175903) || true) && (!f_10073_175706_175749(f_10073_175706_175734()))
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 175701, 175903);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 175791, 175884);

                            f_10073_175791_175883(members, f_10073_175803_175882(this, memberOffset: f_10073_175855_175868(members), diagnostics));
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 175701, 175903);
                        }
                        DynAbs.Tracing.TraceSender.TraceExitMethod(10073, 175647, 175918);

                        Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                        f_10073_175706_175734()
                        {
                            var return_v = BaseTypeNoUseSiteDiagnostics;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 175706, 175734);
                            return return_v;
                        }


                        bool
                        f_10073_175706_175749(Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                        type)
                        {
                            var return_v = type.IsObjectType();
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 175706, 175749);
                            return return_v;
                        }


                        int
                        f_10073_175855_175868(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbol>
                        this_param)
                        {
                            var return_v = this_param.Count;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 175855, 175868);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedRecordBaseEquals
                        f_10073_175803_175882(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                        containingType, int
                        memberOffset, Microsoft.CodeAnalysis.DiagnosticBag
                        diagnostics)
                        {
                            var return_v = new Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedRecordBaseEquals(containingType, memberOffset: memberOffset, diagnostics);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 175803, 175882);
                            return return_v;
                        }


                        int
                        f_10073_175791_175883(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbol>
                        this_param, Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedRecordBaseEquals
                        item)
                        {
                            this_param.Add((Microsoft.CodeAnalysis.CSharp.Symbol)item);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 175791, 175883);
                            return 0;
                        }

                    }
                    catch
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10073, 175647, 175918);
                        throw;
                    }
                    finally
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10073, 175647, 175918);
                    }
                }

                void addEqualityOperators()
                {
                    try
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterMethod(10073, 175934, 176227);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 175994, 176093);

                        f_10073_175994_176092(members, f_10073_176006_176091(this, memberOffset: f_10073_176064_176077(members), diagnostics));
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 176111, 176212);

                        f_10073_176111_176211(members, f_10073_176123_176210(this, memberOffset: f_10073_176183_176196(members), diagnostics));
                        DynAbs.Tracing.TraceSender.TraceExitMethod(10073, 175934, 176227);

                        int
                        f_10073_176064_176077(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbol>
                        this_param)
                        {
                            var return_v = this_param.Count;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 176064, 176077);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedRecordEqualityOperator
                        f_10073_176006_176091(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                        containingType, int
                        memberOffset, Microsoft.CodeAnalysis.DiagnosticBag
                        diagnostics)
                        {
                            var return_v = new Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedRecordEqualityOperator(containingType, memberOffset: memberOffset, diagnostics);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 176006, 176091);
                            return return_v;
                        }


                        int
                        f_10073_175994_176092(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbol>
                        this_param, Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedRecordEqualityOperator
                        item)
                        {
                            this_param.Add((Microsoft.CodeAnalysis.CSharp.Symbol)item);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 175994, 176092);
                            return 0;
                        }


                        int
                        f_10073_176183_176196(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbol>
                        this_param)
                        {
                            var return_v = this_param.Count;
                            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 176183, 176196);
                            return return_v;
                        }


                        Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedRecordInequalityOperator
                        f_10073_176123_176210(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                        containingType, int
                        memberOffset, Microsoft.CodeAnalysis.DiagnosticBag
                        diagnostics)
                        {
                            var return_v = new Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedRecordInequalityOperator(containingType, memberOffset: memberOffset, diagnostics);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 176123, 176210);
                            return return_v;
                        }


                        int
                        f_10073_176111_176211(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbol>
                        this_param, Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedRecordInequalityOperator
                        item)
                        {
                            this_param.Add((Microsoft.CodeAnalysis.CSharp.Symbol)item);
                            DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 176111, 176211);
                            return 0;
                        }

                    }
                    catch
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10073, 175934, 176227);
                        throw;
                    }
                    finally
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10073, 175934, 176227);
                    }
                }
                DynAbs.Tracing.TraceSender.TraceExitMethod(10073, 150148, 176238);

                Microsoft.CodeAnalysis.CSharp.DeclarationKind
                f_10073_150357_150373(Microsoft.CodeAnalysis.CSharp.MergedTypeDeclaration
                this_param)
                {
                    var return_v = this_param.Kind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 150357, 150373);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Syntax.ParameterListSyntax?
                f_10073_150504_150581_M(Microsoft.CodeAnalysis.CSharp.Syntax.ParameterListSyntax?
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 150504, 150581);
                    return return_v;
                }


                Microsoft.CodeAnalysis.PooledObjects.PooledDictionary<Microsoft.CodeAnalysis.CSharp.Symbol, Microsoft.CodeAnalysis.CSharp.Symbol>
                f_10073_150621_150674(Microsoft.CodeAnalysis.PooledObjects.ObjectPool<Microsoft.CodeAnalysis.PooledObjects.PooledDictionary<Microsoft.CodeAnalysis.CSharp.Symbol, Microsoft.CodeAnalysis.CSharp.Symbol>>
                this_param)
                {
                    var return_v = this_param.Allocate();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 150621, 150674);
                    return return_v;
                }


                System.Collections.Generic.IReadOnlyCollection<Microsoft.CodeAnalysis.CSharp.Symbol>
                f_10073_150708_150765(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol.MembersAndInitializersBuilder
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol.DeclaredMembersAndInitializers
                declaredMembers)
                {
                    var return_v = this_param.GetNonTypeMembers(declaredMembers);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 150708, 150765);
                    return return_v;
                }


                int
                f_10073_150827_150845(System.Collections.Generic.IReadOnlyCollection<Microsoft.CodeAnalysis.CSharp.Symbol>
                this_param)
                {
                    var return_v = this_param.Count;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 150827, 150845);
                    return return_v;
                }


                Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbol>
                f_10073_150794_150850(int
                capacity)
                {
                    var return_v = ArrayBuilder<Symbol>.GetInstance(capacity);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 150794, 150850);
                    return return_v;
                }


                bool
                f_10073_151233_151269(Microsoft.CodeAnalysis.PooledObjects.PooledDictionary<Microsoft.CodeAnalysis.CSharp.Symbol, Microsoft.CodeAnalysis.CSharp.Symbol>
                this_param, Microsoft.CodeAnalysis.CSharp.Symbol
                key)
                {
                    var return_v = this_param.ContainsKey(key);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 151233, 151269);
                    return return_v;
                }


                int
                f_10073_151311_151347(Microsoft.CodeAnalysis.PooledObjects.PooledDictionary<Microsoft.CodeAnalysis.CSharp.Symbol, Microsoft.CodeAnalysis.CSharp.Symbol>
                this_param, Microsoft.CodeAnalysis.CSharp.Symbol
                key, Microsoft.CodeAnalysis.CSharp.Symbol
                value)
                {
                    this_param.Add(key, value);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 151311, 151347);
                    return 0;
                }


                System.Collections.Generic.IReadOnlyCollection<Microsoft.CodeAnalysis.CSharp.Symbol>
                f_10073_150888_150900_I(System.Collections.Generic.IReadOnlyCollection<Microsoft.CodeAnalysis.CSharp.Symbol>
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 150888, 150900);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                f_10073_151430_151455(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                this_param)
                {
                    var return_v = this_param.DeclaringCompilation;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 151430, 151455);
                    return return_v;
                }


                int
                f_10073_151619_151705(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 151619, 151705);
                    return 0;
                }


                int
                f_10073_151724_151833(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 151724, 151833);
                    return 0;
                }


                int
                f_10073_151939_151967(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 151939, 151967);
                    return 0;
                }


                int
                f_10073_151986_152003(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbol>
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedRecordConstructor
                item)
                {
                    this_param.Add((Microsoft.CodeAnalysis.CSharp.Symbol)item);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 151986, 152003);
                    return 0;
                }


                int
                f_10073_152028_152047(Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedRecordConstructor
                this_param)
                {
                    var return_v = this_param.ParameterCount;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 152028, 152047);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol>
                f_10073_152137_152152(Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedRecordConstructor
                this_param)
                {
                    var return_v = this_param.Parameters;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 152137, 152152);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol>
                f_10073_152123_152153(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol>
                recordParameters)
                {
                    var return_v = addProperties(recordParameters);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 152123, 152153);
                    return return_v;
                }


                int
                f_10073_152176_152220(Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedRecordConstructor
                ctor, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol>
                properties)
                {
                    addDeconstruct(ctor, properties);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 152176, 152220);
                    return 0;
                }


                int
                f_10073_152290_152309(Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedRecordConstructor
                this_param)
                {
                    var return_v = this_param.ParameterCount;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 152290, 152309);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol>
                f_10073_152318_152333(Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedRecordConstructor
                this_param)
                {
                    var return_v = this_param.Parameters;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 152318, 152333);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                f_10073_152318_152341(Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 152318, 152341);
                    return return_v;
                }


                bool
                f_10073_152318_152388(Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                t2, Microsoft.CodeAnalysis.TypeCompareKind
                compareKind)
                {
                    var return_v = this_param.Equals((Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol)t2, compareKind);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 152318, 152388);
                    return return_v;
                }


                int
                f_10073_152420_152460(bool
                primaryAndCopyCtorAmbiguity)
                {
                    addCopyCtor(primaryAndCopyCtorAmbiguity);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 152420, 152460);
                    return 0;
                }


                int
                f_10073_152475_152491()
                {
                    addCloneMethod();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 152475, 152491);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol
                f_10073_152542_152563()
                {
                    var return_v = addEqualityContract();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 152542, 152563);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                f_10073_152597_152628(Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol
                equalityContract)
                {
                    var return_v = addThisEquals(equalityContract);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 152597, 152628);
                    return return_v;
                }


                int
                f_10073_152643_152659()
                {
                    addOtherEquals();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 152643, 152659);
                    return 0;
                }


                int
                f_10073_152674_152701(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                thisEquals)
                {
                    addObjectEquals(thisEquals);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 152674, 152701);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                f_10073_152734_152766(Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol
                equalityContract)
                {
                    var return_v = addGetHashCode(equalityContract);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 152734, 152766);
                    return return_v;
                }


                int
                f_10073_152781_152803()
                {
                    addEqualityOperators();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 152781, 152803);
                    return 0;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Location>
                f_10073_153008_153028(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                this_param)
                {
                    var return_v = this_param.Locations;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 153008, 153028);
                    return return_v;
                }


                string
                f_10073_153033_153049(Microsoft.CodeAnalysis.CSharp.MergedTypeDeclaration
                this_param)
                {
                    var return_v = this_param.Name;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 153033, 153049);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo
                f_10073_152946_153050(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, Microsoft.CodeAnalysis.Location
                location, params object[]
                args)
                {
                    var return_v = diagnostics.Add(code, location, args);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 152946, 153050);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                f_10073_153101_153124()
                {
                    var return_v = addPrintMembersMethod();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 153101, 153124);
                    return return_v;
                }


                int
                f_10073_153139_153170(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                printMethod)
                {
                    addToStringMethod(printMethod);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 153139, 153170);
                    return 0;
                }


                int
                f_10073_153187_153210(Microsoft.CodeAnalysis.PooledObjects.PooledDictionary<Microsoft.CodeAnalysis.CSharp.Symbol, Microsoft.CodeAnalysis.CSharp.Symbol>
                this_param)
                {
                    this_param.Free();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 153187, 153210);
                    return 0;
                }


                int
                f_10073_153410_153440(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbol>
                this_param, System.Collections.Generic.IReadOnlyCollection<Microsoft.CodeAnalysis.CSharp.Symbol>
                items)
                {
                    this_param.AddRange((System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.CSharp.Symbol>)items);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 153410, 153440);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10073, 150148, 176238);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10073, 150148, 176238);
            }
        }

        private void AddSynthesizedConstructorsIfNecessary(MembersAndInitializersBuilder builder, DeclaredMembersAndInitializers declaredMembersAndInitializers, DiagnosticBag diagnostics)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10073, 176250, 180690);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 176636, 176671);

                var
                hasInstanceConstructor = false
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 176685, 176733);

                var
                hasParameterlessInstanceConstructor = false
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 176747, 176780);

                var
                hasStaticConstructor = false
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 176987, 177064);

                var
                membersSoFar = f_10073_177006_177063(builder, declaredMembersAndInitializers)
                ;
                try
                {
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 177078, 178369);
                    foreach (var member in f_10073_177101_177113_I(membersSoFar))
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 177078, 178369);

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 177147, 178140) || true) && (f_10073_177151_177162(member) == SymbolKind.Method)
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 177147, 178140);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 177225, 177259);

                            var
                            method = (MethodSymbol)member
                            ;
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 177281, 178121);

                            switch (f_10073_177289_177306(method))
                            {

                                case MethodKind.Constructor:
                                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 177281, 178121);

                                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 177481, 177906) || true) && (f_10073_177485_177494_M(!IsRecord) || (DynAbs.Tracing.TraceSender.Expression_False(10073, 177485, 177641) || !(f_10073_177533_177594(method) && (DynAbs.Tracing.TraceSender.Expression_True(10073, 177533, 177640) && method is not SynthesizedRecordConstructor))))
                                    )

                                    {
                                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 177481, 177906);
                                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 177707, 177737);

                                        hasInstanceConstructor = true;
                                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 177771, 177875);

                                        hasParameterlessInstanceConstructor = hasParameterlessInstanceConstructor || (DynAbs.Tracing.TraceSender.Expression_False(10073, 177809, 177874) || f_10073_177848_177869(method) == 0);
                                        DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 177481, 177906);
                                    }
                                    DynAbs.Tracing.TraceSender.TraceBreak(10073, 177936, 177942);

                                    break;
                                    DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 177281, 178121);

                                case MethodKind.StaticConstructor:
                                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 177281, 178121);
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 178034, 178062);

                                    hasStaticConstructor = true;
                                    DynAbs.Tracing.TraceSender.TraceBreak(10073, 178092, 178098);

                                    break;
                                    DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 177281, 178121);
                            }
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 177147, 178140);
                        }

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 178237, 178354) || true) && (hasInstanceConstructor && (DynAbs.Tracing.TraceSender.Expression_True(10073, 178241, 178287) && hasStaticConstructor))
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 178237, 178354);
                            DynAbs.Tracing.TraceSender.TraceBreak(10073, 178329, 178335);

                            break;
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 178237, 178354);
                        }
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 177078, 178369);
                    }
                }
                catch (System.Exception)
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoopByException(10073, 1, 1292);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoop(10073, 1, 1292);
                }
                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 178699, 179159) || true) && ((!hasParameterlessInstanceConstructor && (DynAbs.Tracing.TraceSender.Expression_True(10073, 178704, 178763) && f_10073_178744_178763(this))) || (DynAbs.Tracing.TraceSender.Expression_False(10073, 178703, 178849) || (!hasInstanceConstructor && (DynAbs.Tracing.TraceSender.Expression_True(10073, 178786, 178827) && f_10073_178813_178827_M(!this.IsStatic)) && (DynAbs.Tracing.TraceSender.Expression_True(10073, 178786, 178848) && f_10073_178831_178848_M(!this.IsInterface)))))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 178699, 179159);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 178883, 179144);

                    f_10073_178883_179143(builder, (DynAbs.Tracing.TraceSender.Conditional_F1(10073, 178908, 178946) || (((f_10073_178909_178922(this) == TypeKind.Submission) && DynAbs.Tracing.TraceSender.Conditional_F2(10073, 178970, 179025)) || DynAbs.Tracing.TraceSender.Conditional_F3(10073, 179049, 179089))) ? f_10073_178970_179025(this, diagnostics) : f_10073_179049_179089(this), declaredMembersAndInitializers);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 178699, 179159);
                }

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 179537, 179940) || true) && (!hasStaticConstructor && (DynAbs.Tracing.TraceSender.Expression_True(10073, 179541, 179642) && f_10073_179566_179642(declaredMembersAndInitializers.StaticInitializers)))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 179537, 179940);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 179828, 179925);

                    f_10073_179828_179924(                // Note: we don't have to put anything in the method - the binder will
                                                          // do that when processing field initializers.
                                    builder, f_10073_179853_179891(this), declaredMembersAndInitializers);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 179537, 179940);
                }

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 179956, 180409) || true) && (f_10073_179960_179978(this))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 179956, 180409);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 180012, 180099);

                    var
                    scriptInitializer = f_10073_180036_180098(this, diagnostics)
                    ;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 180117, 180193);

                    f_10073_180117_180192(builder, scriptInitializer, declaredMembersAndInitializers);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 180211, 180301);

                    var
                    scriptEntryPoint = f_10073_180234_180300(scriptInitializer, diagnostics)
                    ;
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 180319, 180394);

                    f_10073_180319_180393(builder, scriptEntryPoint, declaredMembersAndInitializers);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 179956, 180409);
                }

                static bool hasNonConstantInitializer(ImmutableArray<ImmutableArray<FieldOrPropertyInitializer>> initializers)
                {
                    try
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterStaticMethod(10073, 180425, 180679);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 180568, 180664);

                        return initializers.Any(siblings => siblings.Any(initializer => !initializer.FieldOpt.IsConst));
                        DynAbs.Tracing.TraceSender.TraceExitStaticMethod(10073, 180425, 180679);
                    }
                    catch
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10073, 180425, 180679);
                        throw;
                    }
                    finally
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10073, 180425, 180679);
                    }
                    throw new System.Exception("Slicer error: unreachable code");
                }
                DynAbs.Tracing.TraceSender.TraceExitMethod(10073, 176250, 180690);

                System.Collections.Generic.IReadOnlyCollection<Microsoft.CodeAnalysis.CSharp.Symbol>
                f_10073_177006_177063(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol.MembersAndInitializersBuilder
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol.DeclaredMembersAndInitializers
                declaredMembers)
                {
                    var return_v = this_param.GetNonTypeMembers(declaredMembers);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 177006, 177063);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SymbolKind
                f_10073_177151_177162(Microsoft.CodeAnalysis.CSharp.Symbol
                this_param)
                {
                    var return_v = this_param.Kind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 177151, 177162);
                    return return_v;
                }


                Microsoft.CodeAnalysis.MethodKind
                f_10073_177289_177306(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                this_param)
                {
                    var return_v = this_param.MethodKind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 177289, 177306);
                    return return_v;
                }


                bool
                f_10073_177485_177494_M(bool
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 177485, 177494);
                    return return_v;
                }


                bool
                f_10073_177533_177594(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                member)
                {
                    var return_v = SynthesizedRecordCopyCtor.HasCopyConstructorSignature(member);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 177533, 177594);
                    return return_v;
                }


                int
                f_10073_177848_177869(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                this_param)
                {
                    var return_v = this_param.ParameterCount;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 177848, 177869);
                    return return_v;
                }


                System.Collections.Generic.IReadOnlyCollection<Microsoft.CodeAnalysis.CSharp.Symbol>
                f_10073_177101_177113_I(System.Collections.Generic.IReadOnlyCollection<Microsoft.CodeAnalysis.CSharp.Symbol>
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 177101, 177113);
                    return return_v;
                }


                bool
                f_10073_178744_178763(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                type)
                {
                    var return_v = type.IsStructType();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 178744, 178763);
                    return return_v;
                }


                bool
                f_10073_178813_178827_M(bool
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 178813, 178827);
                    return return_v;
                }


                bool
                f_10073_178831_178848_M(bool
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 178831, 178848);
                    return return_v;
                }


                Microsoft.CodeAnalysis.TypeKind
                f_10073_178909_178922(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                this_param)
                {
                    var return_v = this_param.TypeKind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 178909, 178922);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedSubmissionConstructor
                f_10073_178970_179025(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                containingType, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedSubmissionConstructor((Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol)containingType, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 178970, 179025);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedInstanceConstructor
                f_10073_179049_179089(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                containingType)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedInstanceConstructor((Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol)containingType);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 179049, 179089);
                    return return_v;
                }


                int
                f_10073_178883_179143(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol.MembersAndInitializersBuilder
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedInstanceConstructor
                member, Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol.DeclaredMembersAndInitializers
                declaredMembers)
                {
                    this_param.AddNonTypeMember((Microsoft.CodeAnalysis.CSharp.Symbol)member, declaredMembers);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 178883, 179143);
                    return 0;
                }


                bool
                f_10073_179566_179642(System.Collections.Immutable.ImmutableArray<System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.FieldOrPropertyInitializer>>
                initializers)
                {
                    var return_v = hasNonConstantInitializer(initializers);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 179566, 179642);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedStaticConstructor
                f_10073_179853_179891(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                containingType)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedStaticConstructor((Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol)containingType);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 179853, 179891);
                    return return_v;
                }


                int
                f_10073_179828_179924(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol.MembersAndInitializersBuilder
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedStaticConstructor
                member, Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol.DeclaredMembersAndInitializers
                declaredMembers)
                {
                    this_param.AddNonTypeMember((Microsoft.CodeAnalysis.CSharp.Symbol)member, declaredMembers);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 179828, 179924);
                    return 0;
                }


                bool
                f_10073_179960_179978(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                this_param)
                {
                    var return_v = this_param.IsScriptClass;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 179960, 179978);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedInteractiveInitializerMethod
                f_10073_180036_180098(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                containingType, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedInteractiveInitializerMethod(containingType, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 180036, 180098);
                    return return_v;
                }


                int
                f_10073_180117_180192(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol.MembersAndInitializersBuilder
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedInteractiveInitializerMethod
                member, Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol.DeclaredMembersAndInitializers
                declaredMembers)
                {
                    this_param.AddNonTypeMember((Microsoft.CodeAnalysis.CSharp.Symbol)member, declaredMembers);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 180117, 180192);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedEntryPointSymbol
                f_10073_180234_180300(Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedInteractiveInitializerMethod
                initializerMethod, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = SynthesizedEntryPointSymbol.Create(initializerMethod, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 180234, 180300);
                    return return_v;
                }


                int
                f_10073_180319_180393(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol.MembersAndInitializersBuilder
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedEntryPointSymbol
                member, Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol.DeclaredMembersAndInitializers
                declaredMembers)
                {
                    this_param.AddNonTypeMember((Microsoft.CodeAnalysis.CSharp.Symbol)member, declaredMembers);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 180319, 180393);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10073, 176250, 180690);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10073, 176250, 180690);
            }
        }

        private void AddNonTypeMembers(
                    DeclaredMembersAndInitializersBuilder builder,
                    ArrayBuilder<FieldOrPropertyInitializer>? instanceInitializers,
                    SyntaxList<MemberDeclarationSyntax> members,
                    DiagnosticBag diagnostics)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10073, 180702, 202246);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 180993, 181157) || true) && (members.Count == 0)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 180993, 181157);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 181049, 181117);

                    f_10073_181049_181116(builder.InstanceInitializers, instanceInitializers);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 181135, 181142);

                    return;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 180993, 181157);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 181173, 181202);

                var
                firstMember = members[0]
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 181216, 181261);

                var
                bodyBinder = f_10073_181233_181260(this, firstMember)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 181277, 181345);

                ArrayBuilder<FieldOrPropertyInitializer>?
                staticInitializers = null
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 181359, 181398);

                var
                compilation = f_10073_181377_181397()
                ;
                try
                {
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 181414, 202073);
                    foreach (var m in f_10073_181432_181439_I(members))
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 181414, 202073);

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 181473, 181670) || true) && (_lazyMembersAndInitializers != null)
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 181473, 181670);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 181644, 181651);

                            return;
                            DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 181473, 181670);
                        }
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 181690, 181736);

                        bool
                        reportMisplacedGlobalCode = f_10073_181723_181735_M(!m.HasErrors)
                        ;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 181756, 202058);

                        switch (f_10073_181764_181772(m))
                        {

                            case SyntaxKind.FieldDeclaration:
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 181756, 202058);
                                {
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 181904, 181948);

                                    var
                                    fieldSyntax = (FieldDeclarationSyntax)m
                                    ;

                                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 181978, 182285) || true) && (f_10073_181982_181997() && (DynAbs.Tracing.TraceSender.Expression_True(10073, 181982, 182026) && reportMisplacedGlobalCode))
                                    )

                                    {
                                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 181978, 182285);
                                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 182092, 182254);

                                        f_10073_182092_182253(diagnostics, ErrorCode.ERR_NamespaceUnexpected, f_10073_182180_182252(f_10073_182199_182251(f_10073_182199_182222(fieldSyntax).Variables.First())));
                                        DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 181978, 182285);
                                    }
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 182317, 182337);

                                    bool
                                    modifierErrors
                                    = default(bool);
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 182367, 182532);

                                    var
                                    modifiers = f_10073_182383_182531(this, f_10073_182427_182474(f_10073_182427_182460(f_10073_182427_182450(fieldSyntax))[0]), f_10073_182476_182497(fieldSyntax), diagnostics, out modifierErrors)
                                    ;
                                    try
                                    {
                                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 182562, 184766);
                                        foreach (var variable in f_10073_182587_182620_I(f_10073_182587_182620(f_10073_182587_182610(fieldSyntax))))
                                        {
                                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 182562, 184766);
                                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 182686, 183009);

                                            var
                                            fieldSymbol = (DynAbs.Tracing.TraceSender.Conditional_F1(10073, 182704, 182749) || (((modifiers & DeclarationModifiers.Fixed) == 0
                                            && DynAbs.Tracing.TraceSender.Conditional_F2(10073, 182789, 182886)) || DynAbs.Tracing.TraceSender.Conditional_F3(10073, 182926, 183008))) ? f_10073_182789_182886(this, variable, modifiers, modifierErrors, diagnostics) : f_10073_182926_183008(this, variable, modifiers, modifierErrors, diagnostics)
                                            ;
                                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 183043, 183083);

                                            f_10073_183043_183082(builder.NonTypeMembers, fieldSymbol);
                                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 183395, 183507);

                                            f_10073_183395_183506(                                // All fields are included in the nullable context for constructors and initializers, even fields without
                                                                                                  // initializers, to ensure warnings are reported for uninitialized non-nullable fields in NullableWalker.
                                                                            builder, useStatic: f_10073_183462_183482(fieldSymbol), compilation, variable);

                                            if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 183543, 184101) || true) && (f_10073_183547_183560())
                                            )

                                            {
                                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 183543, 184101);
                                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 183771, 184066);

                                                f_10073_183771_184065(builder.NonTypeMembers, variable, this, DeclarationModifiers.Private | (modifiers & DeclarationModifiers.Static), fieldSymbol);
                                                DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 183543, 184101);
                                            }

                                            if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 184137, 184735) || true) && (f_10073_184141_184161(variable) != null)
                                            )

                                            {
                                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 184137, 184735);

                                                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 184243, 184700) || true) && (f_10073_184247_184267(fieldSymbol))
                                                )

                                                {
                                                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 184243, 184700);
                                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 184349, 184423);

                                                    f_10073_184349_184422(ref staticInitializers, fieldSymbol, f_10073_184401_184421(variable));
                                                    DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 184243, 184700);
                                                }

                                                else

                                                {
                                                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 184243, 184700);
                                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 184585, 184661);

                                                    f_10073_184585_184660(ref instanceInitializers, fieldSymbol, f_10073_184639_184659(variable));
                                                    DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 184243, 184700);
                                                }
                                                DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 184137, 184735);
                                            }
                                            DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 182562, 184766);
                                        }
                                    }
                                    catch (System.Exception)
                                    {
                                        DynAbs.Tracing.TraceSender.TraceExitLoopByException(10073, 1, 2205);
                                        throw;
                                    }
                                    finally
                                    {
                                        DynAbs.Tracing.TraceSender.TraceExitLoop(10073, 1, 2205);
                                    }
                                }
                                DynAbs.Tracing.TraceSender.TraceBreak(10073, 184819, 184825);

                                break;
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 181756, 202058);

                            case SyntaxKind.MethodDeclaration:
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 181756, 202058);
                                {
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 184940, 184986);

                                    var
                                    methodSyntax = (MethodDeclarationSyntax)m
                                    ;

                                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 185016, 185294) || true) && (f_10073_185020_185035() && (DynAbs.Tracing.TraceSender.Expression_True(10073, 185020, 185064) && reportMisplacedGlobalCode))
                                    )

                                    {
                                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 185016, 185294);
                                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 185130, 185263);

                                        f_10073_185130_185262(diagnostics, ErrorCode.ERR_NamespaceUnexpected, f_10073_185218_185261(f_10073_185237_185260(methodSyntax)));
                                        DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 185016, 185294);
                                    }
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 185326, 185485);

                                    var
                                    method = f_10073_185339_185484(this, bodyBinder, methodSyntax, f_10073_185417_185470(compilation, methodSyntax), diagnostics)
                                    ;
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 185515, 185550);

                                    f_10073_185515_185549(builder.NonTypeMembers, method);
                                }
                                DynAbs.Tracing.TraceSender.TraceBreak(10073, 185603, 185609);

                                break;
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 181756, 202058);

                            case SyntaxKind.ConstructorDeclaration:
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 181756, 202058);
                                {
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 185729, 185785);

                                    var
                                    constructorSyntax = (ConstructorDeclarationSyntax)m
                                    ;

                                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 185815, 186098) || true) && (f_10073_185819_185834() && (DynAbs.Tracing.TraceSender.Expression_True(10073, 185819, 185863) && reportMisplacedGlobalCode))
                                    )

                                    {
                                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 185815, 186098);
                                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 185929, 186067);

                                        f_10073_185929_186066(diagnostics, ErrorCode.ERR_NamespaceUnexpected, f_10073_186017_186065(f_10073_186036_186064(constructorSyntax)));
                                        DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 185815, 186098);
                                    }
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 186130, 186214);

                                    bool
                                    isNullableEnabled = f_10073_186155_186213(compilation, constructorSyntax)
                                    ;
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 186244, 186367);

                                    var
                                    constructor = f_10073_186262_186366(this, constructorSyntax, isNullableEnabled, diagnostics)
                                    ;
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 186397, 186437);

                                    f_10073_186397_186436(builder.NonTypeMembers, constructor);

                                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 186467, 186754) || true) && (f_10073_186471_186508_I(DynAbs.Tracing.TraceSender.TraceConditionalAccessExpression(f_10073_186471_186500(constructorSyntax), 10073, 186471, 186508)?.Kind()) != SyntaxKind.ThisConstructorInitializer)
                                    )

                                    {
                                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 186467, 186754);
                                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 186615, 186723);

                                        f_10073_186615_186722(builder, useStatic: f_10073_186682_186702(constructor), isNullableEnabled);
                                        DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 186467, 186754);
                                    }
                                }
                                DynAbs.Tracing.TraceSender.TraceBreak(10073, 186807, 186813);

                                break;
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 181756, 202058);

                            case SyntaxKind.DestructorDeclaration:
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 181756, 202058);
                                {
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 186932, 186986);

                                    var
                                    destructorSyntax = (DestructorDeclarationSyntax)m
                                    ;

                                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 187016, 187298) || true) && (f_10073_187020_187035() && (DynAbs.Tracing.TraceSender.Expression_True(10073, 187020, 187064) && reportMisplacedGlobalCode))
                                    )

                                    {
                                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 187016, 187298);
                                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 187130, 187267);

                                        f_10073_187130_187266(diagnostics, ErrorCode.ERR_NamespaceUnexpected, f_10073_187218_187265(f_10073_187237_187264(destructorSyntax)));
                                        DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 187016, 187298);
                                    }
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 187722, 187862);

                                    var
                                    destructor = f_10073_187739_187861(this, destructorSyntax, f_10073_187790_187847(compilation, destructorSyntax), diagnostics)
                                    ;
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 187892, 187931);

                                    f_10073_187892_187930(builder.NonTypeMembers, destructor);
                                }
                                DynAbs.Tracing.TraceSender.TraceBreak(10073, 187984, 187990);

                                break;
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 181756, 202058);

                            case SyntaxKind.PropertyDeclaration:
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 181756, 202058);
                                {
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 188107, 188157);

                                    var
                                    propertySyntax = (PropertyDeclarationSyntax)m
                                    ;

                                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 188187, 188467) || true) && (f_10073_188191_188206() && (DynAbs.Tracing.TraceSender.Expression_True(10073, 188191, 188235) && reportMisplacedGlobalCode))
                                    )

                                    {
                                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 188187, 188467);
                                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 188301, 188436);

                                        f_10073_188301_188435(diagnostics, ErrorCode.ERR_NamespaceUnexpected, f_10073_188389_188434(f_10073_188408_188433(propertySyntax)));
                                        DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 188187, 188467);
                                    }
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 188499, 188589);

                                    var
                                    property = f_10073_188514_188588(this, bodyBinder, propertySyntax, diagnostics)
                                    ;
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 188619, 188656);

                                    f_10073_188619_188655(builder.NonTypeMembers, property);
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 188688, 188755);

                                    f_10073_188688_188754(this, builder.NonTypeMembers, f_10073_188735_188753(property));
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 188785, 188852);

                                    f_10073_188785_188851(this, builder.NonTypeMembers, f_10073_188832_188850(property));
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 188882, 188931);

                                    FieldSymbol
                                    backingField = f_10073_188909_188930(property)
                                    ;

                                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 189292, 191122) || true) && ((object)backingField != null)
                                    )

                                    {
                                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 189292, 191122);
                                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 189390, 189431);

                                        f_10073_189390_189430(builder.NonTypeMembers, backingField);
                                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 189465, 189584);

                                        f_10073_189465_189583(builder, useStatic: f_10073_189532_189553(backingField), compilation, propertySyntax);
                                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 189620, 189665);

                                        var
                                        initializer = f_10073_189638_189664(propertySyntax)
                                        ;

                                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 189699, 191091) || true) && (initializer != null)
                                        )

                                        {
                                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 189699, 191091);

                                            if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 189796, 190578) || true) && (f_10073_189800_189813())
                                            )

                                            {
                                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 189796, 190578);
                                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 190002, 190539);

                                                f_10073_190002_190538(builder.NonTypeMembers, initializer, this, DeclarationModifiers.Private | ((DynAbs.Tracing.TraceSender.Conditional_F1(10073, 190384, 190401) || ((f_10073_190384_190401(property) && DynAbs.Tracing.TraceSender.Conditional_F2(10073, 190404, 190431)) || DynAbs.Tracing.TraceSender.Conditional_F3(10073, 190434, 190435))) ? DeclarationModifiers.Static : 0), backingField);
                                                DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 189796, 190578);
                                            }

                                            if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 190618, 191056) || true) && (f_10073_190622_190639(property))
                                            )

                                            {
                                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 190618, 191056);
                                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 190721, 190787);

                                                f_10073_190721_190786(ref staticInitializers, backingField, initializer);
                                                DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 190618, 191056);
                                            }

                                            else

                                            {
                                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 190618, 191056);
                                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 190949, 191017);

                                                f_10073_190949_191016(ref instanceInitializers, backingField, initializer);
                                                DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 190618, 191056);
                                            }
                                            DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 189699, 191091);
                                        }
                                        DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 189292, 191122);
                                    }
                                }
                                DynAbs.Tracing.TraceSender.TraceBreak(10073, 191175, 191181);

                                break;
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 181756, 202058);

                            case SyntaxKind.EventFieldDeclaration:
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 181756, 202058);
                                {
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 191300, 191354);

                                    var
                                    eventFieldSyntax = (EventFieldDeclarationSyntax)m
                                    ;

                                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 191384, 191734) || true) && (f_10073_191388_191403() && (DynAbs.Tracing.TraceSender.Expression_True(10073, 191388, 191432) && reportMisplacedGlobalCode))
                                    )

                                    {
                                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 191384, 191734);
                                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 191498, 191703);

                                        f_10073_191498_191702(diagnostics, ErrorCode.ERR_NamespaceUnexpected, f_10073_191624_191701(f_10073_191643_191700(f_10073_191643_191671(eventFieldSyntax).Variables.First())));
                                        DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 191384, 191734);
                                    }
                                    try
                                    {
                                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 191766, 194414);
                                        foreach (VariableDeclaratorSyntax declarator in f_10073_191814_191852_I(f_10073_191814_191852(f_10073_191814_191842(eventFieldSyntax))))
                                        {
                                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 191766, 194414);
                                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 191918, 192056);

                                            SourceFieldLikeEventSymbol
                                            @event = f_10073_191954_192055(this, bodyBinder, f_10073_192003_192029(eventFieldSyntax), declarator, diagnostics)
                                            ;
                                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 192090, 192125);

                                            f_10073_192090_192124(builder.NonTypeMembers, @event);
                                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 192161, 192215);

                                            FieldSymbol?
                                            associatedField = f_10073_192192_192214(@event)
                                            ;

                                            if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 192251, 192825) || true) && (f_10073_192255_192268())
                                            )

                                            {
                                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 192251, 192825);
                                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 192479, 192790);

                                                f_10073_192479_192789(builder.NonTypeMembers, declarator, this, DeclarationModifiers.Private | ((DynAbs.Tracing.TraceSender.Conditional_F1(10073, 192660, 192675) || ((f_10073_192660_192675(@event) && DynAbs.Tracing.TraceSender.Conditional_F2(10073, 192678, 192705)) || DynAbs.Tracing.TraceSender.Conditional_F3(10073, 192708, 192709))) ? DeclarationModifiers.Static : 0), associatedField);
                                                DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 192251, 192825);
                                            }

                                            if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 192861, 194013) || true) && ((object?)associatedField != null)
                                            )

                                            {
                                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 192861, 194013);
                                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 193164, 193282);

                                                f_10073_193164_193281(                                    // NOTE: specifically don't add the associated field to the members list
                                                                                                          // (regard it as an implementation detail).

                                                                                    builder, useStatic: f_10073_193231_193255(associatedField), compilation, declarator);

                                                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 193322, 193978) || true) && (f_10073_193326_193348(declarator) != null)
                                                )

                                                {
                                                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 193322, 193978);

                                                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 193438, 193939) || true) && (f_10073_193442_193466(associatedField))
                                                    )

                                                    {
                                                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 193438, 193939);
                                                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 193556, 193636);

                                                        f_10073_193556_193635(ref staticInitializers, associatedField, f_10073_193612_193634(declarator));
                                                        DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 193438, 193939);
                                                    }

                                                    else

                                                    {
                                                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 193438, 193939);
                                                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 193814, 193896);

                                                        f_10073_193814_193895(ref instanceInitializers, associatedField, f_10073_193872_193894(declarator));
                                                        DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 193438, 193939);
                                                    }
                                                    DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 193322, 193978);
                                                }
                                                DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 192861, 194013);
                                            }
                                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 194049, 194096);

                                            f_10073_194049_194095((object)f_10073_194070_194086(@event) != null);
                                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 194130, 194180);

                                            f_10073_194130_194179((object)f_10073_194151_194170(@event) != null);
                                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 194216, 194281);

                                            f_10073_194216_194280(this, builder.NonTypeMembers, f_10073_194263_194279(@event));
                                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 194315, 194383);

                                            f_10073_194315_194382(this, builder.NonTypeMembers, f_10073_194362_194381(@event));
                                            DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 191766, 194414);
                                        }
                                    }
                                    catch (System.Exception)
                                    {
                                        DynAbs.Tracing.TraceSender.TraceExitLoopByException(10073, 1, 2649);
                                        throw;
                                    }
                                    finally
                                    {
                                        DynAbs.Tracing.TraceSender.TraceExitLoop(10073, 1, 2649);
                                    }
                                }
                                DynAbs.Tracing.TraceSender.TraceBreak(10073, 194467, 194473);

                                break;
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 181756, 202058);

                            case SyntaxKind.EventDeclaration:
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 181756, 202058);
                                {
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 194587, 194631);

                                    var
                                    eventSyntax = (EventDeclarationSyntax)m
                                    ;

                                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 194661, 194938) || true) && (f_10073_194665_194680() && (DynAbs.Tracing.TraceSender.Expression_True(10073, 194665, 194709) && reportMisplacedGlobalCode))
                                    )

                                    {
                                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 194661, 194938);
                                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 194775, 194907);

                                        f_10073_194775_194906(diagnostics, ErrorCode.ERR_NamespaceUnexpected, f_10073_194863_194905(f_10073_194882_194904(eventSyntax)));
                                        DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 194661, 194938);
                                    }
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 194970, 195055);

                                    var
                                    @event = f_10073_194983_195054(this, bodyBinder, eventSyntax, diagnostics)
                                    ;
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 195087, 195122);

                                    f_10073_195087_195121(
                                                                builder.NonTypeMembers, @event);
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 195154, 195219);

                                    f_10073_195154_195218(this, builder.NonTypeMembers, f_10073_195201_195217(@event));
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 195249, 195317);

                                    f_10073_195249_195316(this, builder.NonTypeMembers, f_10073_195296_195315(@event));
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 195349, 195394);

                                    f_10073_195349_195393(f_10073_195362_195384(@event) is null);
                                }
                                DynAbs.Tracing.TraceSender.TraceBreak(10073, 195447, 195453);

                                break;
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 181756, 202058);

                            case SyntaxKind.IndexerDeclaration:
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 181756, 202058);
                                {
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 195569, 195617);

                                    var
                                    indexerSyntax = (IndexerDeclarationSyntax)m
                                    ;

                                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 195647, 195927) || true) && (f_10073_195651_195666() && (DynAbs.Tracing.TraceSender.Expression_True(10073, 195651, 195695) && reportMisplacedGlobalCode))
                                    )

                                    {
                                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 195647, 195927);
                                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 195761, 195896);

                                        f_10073_195761_195895(diagnostics, ErrorCode.ERR_NamespaceUnexpected, f_10073_195849_195894(f_10073_195868_195893(indexerSyntax)));
                                        DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 195647, 195927);
                                    }
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 195959, 196047);

                                    var
                                    indexer = f_10073_195973_196046(this, bodyBinder, indexerSyntax, diagnostics)
                                    ;
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 196077, 196105);

                                    builder.HaveIndexers = true;
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 196135, 196171);

                                    f_10073_196135_196170(builder.NonTypeMembers, indexer);
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 196201, 196267);

                                    f_10073_196201_196266(this, builder.NonTypeMembers, f_10073_196248_196265(indexer));
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 196297, 196363);

                                    f_10073_196297_196362(this, builder.NonTypeMembers, f_10073_196344_196361(indexer));
                                }
                                DynAbs.Tracing.TraceSender.TraceBreak(10073, 196416, 196422);

                                break;
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 181756, 202058);

                            case SyntaxKind.ConversionOperatorDeclaration:
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 181756, 202058);
                                {
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 196549, 196619);

                                    var
                                    conversionOperatorSyntax = (ConversionOperatorDeclarationSyntax)m
                                    ;

                                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 196649, 196944) || true) && (f_10073_196653_196668() && (DynAbs.Tracing.TraceSender.Expression_True(10073, 196653, 196697) && reportMisplacedGlobalCode))
                                    )

                                    {
                                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 196649, 196944);
                                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 196763, 196913);

                                        f_10073_196763_196912(diagnostics, ErrorCode.ERR_NamespaceUnexpected, f_10073_196851_196911(f_10073_196870_196910(conversionOperatorSyntax)));
                                        DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 196649, 196944);
                                    }
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 196976, 197203);

                                    var
                                    method = f_10073_196989_197202(this, conversionOperatorSyntax, f_10073_197123_197188(compilation, conversionOperatorSyntax), diagnostics)
                                    ;
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 197233, 197268);

                                    f_10073_197233_197267(builder.NonTypeMembers, method);
                                }
                                DynAbs.Tracing.TraceSender.TraceBreak(10073, 197321, 197327);

                                break;
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 181756, 202058);

                            case SyntaxKind.OperatorDeclaration:
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 181756, 202058);
                                {
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 197444, 197494);

                                    var
                                    operatorSyntax = (OperatorDeclarationSyntax)m
                                    ;

                                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 197524, 197809) || true) && (f_10073_197528_197543() && (DynAbs.Tracing.TraceSender.Expression_True(10073, 197528, 197572) && reportMisplacedGlobalCode))
                                    )

                                    {
                                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 197524, 197809);
                                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 197638, 197778);

                                        f_10073_197638_197777(diagnostics, ErrorCode.ERR_NamespaceUnexpected, f_10073_197726_197776(f_10073_197745_197775(operatorSyntax)));
                                        DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 197524, 197809);
                                    }
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 197841, 198044);

                                    var
                                    method = f_10073_197854_198043(this, operatorSyntax, f_10073_197974_198029(compilation, operatorSyntax), diagnostics)
                                    ;
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 198074, 198109);

                                    f_10073_198074_198108(builder.NonTypeMembers, method);
                                }
                                DynAbs.Tracing.TraceSender.TraceBreak(10073, 198162, 198168);

                                break;
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 181756, 202058);

                            case SyntaxKind.GlobalStatement:
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 181756, 202058);
                                {
                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 198281, 198340);

                                    var
                                    globalStatement = f_10073_198303_198339(((GlobalStatementSyntax)m))
                                    ;

                                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 198372, 201658) || true) && (f_10073_198376_198389())
                                    )

                                    {
                                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 198372, 201658);
                                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 198455, 198492);

                                        var
                                        innerStatement = globalStatement
                                        ;
                                        try
                                        {
                                            while ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 198597, 198833) || true) && (f_10073_198604_198625(innerStatement) == SyntaxKind.LabeledStatement)
                                            )

                                            {
                                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 198597, 198833);
                                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 198730, 198798);

                                                innerStatement = f_10073_198747_198797(((LabeledStatementSyntax)innerStatement));
                                                DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 198597, 198833);
                                            }
                                        }
                                        catch (System.Exception)
                                        {
                                            DynAbs.Tracing.TraceSender.TraceExitLoopByException(10073, 198597, 198833);
                                            throw;
                                        }
                                        finally
                                        {
                                            DynAbs.Tracing.TraceSender.TraceExitLoop(10073, 198597, 198833);
                                        }
                                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 198869, 201207);

                                        switch (f_10073_198877_198898(innerStatement))
                                        {

                                            case SyntaxKind.LocalDeclarationStatement:
                                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 198869, 201207);
                                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 199326, 199385);

                                                var
                                                decl = (LocalDeclarationStatementSyntax)innerStatement
                                                ;
                                                try
                                                {
                                                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 199427, 199983);
                                                    foreach (var vdecl in f_10073_199449_199475_I(f_10073_199449_199475(f_10073_199449_199465(decl))))
                                                    {
                                                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 199427, 199983);
                                                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 199710, 199940);

                                                        f_10073_199710_199939(builder.NonTypeMembers, vdecl, this, DeclarationModifiers.Private, containingFieldOpt: null);
                                                        DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 199427, 199983);
                                                    }
                                                }
                                                catch (System.Exception)
                                                {
                                                    DynAbs.Tracing.TraceSender.TraceExitLoopByException(10073, 1, 557);
                                                    throw;
                                                }
                                                finally
                                                {
                                                    DynAbs.Tracing.TraceSender.TraceExitLoop(10073, 1, 557);
                                                }
                                                DynAbs.Tracing.TraceSender.TraceBreak(10073, 200025, 200031);

                                                break;
                                                DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 198869, 201207);

                                            case SyntaxKind.ExpressionStatement:
                                            case SyntaxKind.IfStatement:
                                            case SyntaxKind.YieldReturnStatement:
                                            case SyntaxKind.ReturnStatement:
                                            case SyntaxKind.ThrowStatement:
                                            case SyntaxKind.SwitchStatement:
                                            case SyntaxKind.LockStatement:
                                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 198869, 201207);
                                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 200567, 200919);

                                                f_10073_200567_200918(builder.NonTypeMembers, innerStatement, this, DeclarationModifiers.Private, containingFieldOpt: null);
                                                DynAbs.Tracing.TraceSender.TraceBreak(10073, 200961, 200967);

                                                break;
                                                DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 198869, 201207);

                                            default:
                                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 198869, 201207);
                                                DynAbs.Tracing.TraceSender.TraceBreak(10073, 201166, 201172);

                                                break;
                                                DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 198869, 201207);
                                        }
                                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 201243, 201307);

                                        f_10073_201243_201306(ref instanceInitializers, null, globalStatement);
                                        DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 198372, 201658);
                                    }

                                    else
                                    {
                                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 198372, 201658);

                                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 201373, 201658) || true) && (reportMisplacedGlobalCode && (DynAbs.Tracing.TraceSender.Expression_True(10073, 201377, 201477) && !f_10073_201407_201477(m)))
                                        )

                                        {
                                            DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 201373, 201658);
                                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 201543, 201627);

                                            f_10073_201543_201626(diagnostics, ErrorCode.ERR_GlobalStatement, f_10073_201590_201625(globalStatement));
                                            DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 201373, 201658);
                                        }
                                        DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 198372, 201658);
                                    }
                                }
                                DynAbs.Tracing.TraceSender.TraceBreak(10073, 201711, 201717);

                                break;
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 181756, 202058);

                            default:
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 181756, 202058);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 201775, 202007);

                                f_10073_201775_202006(f_10073_201818_201857(f_10073_201848_201856(m)) || (DynAbs.Tracing.TraceSender.Expression_False(10073, 201818, 201933) || f_10073_201890_201898(m) == SyntaxKind.NamespaceDeclaration) || (DynAbs.Tracing.TraceSender.Expression_False(10073, 201818, 202005) || f_10073_201966_201974(m) == SyntaxKind.IncompleteMember));
                                DynAbs.Tracing.TraceSender.TraceBreak(10073, 202033, 202039);

                                break;
                                DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 181756, 202058);
                        }
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 181414, 202073);
                    }
                }
                catch (System.Exception)
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoopByException(10073, 1, 20660);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoop(10073, 1, 20660);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 202089, 202157);

                f_10073_202089_202156(builder.InstanceInitializers, instanceInitializers);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 202171, 202235);

                f_10073_202171_202234(builder.StaticInitializers, staticInitializers);
                DynAbs.Tracing.TraceSender.TraceExitMethod(10073, 180702, 202246);

                int
                f_10073_181049_181116(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbols.FieldOrPropertyInitializer>>
                allInitializers, Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbols.FieldOrPropertyInitializer>?
                siblingsOpt)
                {
                    AddInitializers(allInitializers, siblingsOpt);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 181049, 181116);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.Binder
                f_10073_181233_181260(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.MemberDeclarationSyntax
                syntaxNode)
                {
                    var return_v = this_param.GetBinder((Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode)syntaxNode);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 181233, 181260);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                f_10073_181377_181397()
                {
                    var return_v = DeclaringCompilation;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 181377, 181397);
                    return return_v;
                }


                bool
                f_10073_181723_181735_M(bool
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 181723, 181735);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.SyntaxKind
                f_10073_181764_181772(Microsoft.CodeAnalysis.CSharp.Syntax.MemberDeclarationSyntax
                this_param)
                {
                    var return_v = this_param.Kind();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 181764, 181772);
                    return return_v;
                }


                bool
                f_10073_181982_181997()
                {
                    var return_v = IsImplicitClass;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 181982, 181997);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclarationSyntax
                f_10073_182199_182222(Microsoft.CodeAnalysis.CSharp.Syntax.FieldDeclarationSyntax
                this_param)
                {
                    var return_v = this_param.Declaration;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 182199, 182222);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SyntaxToken
                f_10073_182199_182251(Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclaratorSyntax
                this_param)
                {
                    var return_v = this_param.Identifier;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 182199, 182251);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SourceLocation
                f_10073_182180_182252(Microsoft.CodeAnalysis.SyntaxToken
                token)
                {
                    var return_v = new Microsoft.CodeAnalysis.SourceLocation(token);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 182180, 182252);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo
                f_10073_182092_182253(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, Microsoft.CodeAnalysis.SourceLocation
                location)
                {
                    var return_v = diagnostics.Add(code, (Microsoft.CodeAnalysis.Location)location);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 182092, 182253);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclarationSyntax
                f_10073_182427_182450(Microsoft.CodeAnalysis.CSharp.Syntax.FieldDeclarationSyntax
                this_param)
                {
                    var return_v = this_param.Declaration;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 182427, 182450);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SeparatedSyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclaratorSyntax>
                f_10073_182427_182460(Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclarationSyntax
                this_param)
                {
                    var return_v = this_param.Variables;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 182427, 182460);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SyntaxToken
                f_10073_182427_182474(Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclaratorSyntax
                this_param)
                {
                    var return_v = this_param.Identifier;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 182427, 182474);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SyntaxTokenList
                f_10073_182476_182497(Microsoft.CodeAnalysis.CSharp.Syntax.FieldDeclarationSyntax
                this_param)
                {
                    var return_v = this_param.Modifiers;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 182476, 182497);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.DeclarationModifiers
                f_10073_182383_182531(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                containingType, Microsoft.CodeAnalysis.SyntaxToken
                firstIdentifier, Microsoft.CodeAnalysis.SyntaxTokenList
                modifiers, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, out bool
                modifierErrors)
                {
                    var return_v = SourceMemberFieldSymbol.MakeModifiers((Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol)containingType, firstIdentifier, modifiers, diagnostics, out modifierErrors);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 182383, 182531);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclarationSyntax
                f_10073_182587_182610(Microsoft.CodeAnalysis.CSharp.Syntax.FieldDeclarationSyntax
                this_param)
                {
                    var return_v = this_param.Declaration;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 182587, 182610);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SeparatedSyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclaratorSyntax>
                f_10073_182587_182620(Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclarationSyntax
                this_param)
                {
                    var return_v = this_param.Variables;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 182587, 182620);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberFieldSymbolFromDeclarator
                f_10073_182789_182886(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                containingType, Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclaratorSyntax
                declarator, Microsoft.CodeAnalysis.CSharp.DeclarationModifiers
                modifiers, bool
                modifierErrors, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberFieldSymbolFromDeclarator(containingType, declarator, modifiers, modifierErrors, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 182789, 182886);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.SourceFixedFieldSymbol
                f_10073_182926_183008(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                containingType, Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclaratorSyntax
                declarator, Microsoft.CodeAnalysis.CSharp.DeclarationModifiers
                modifiers, bool
                modifierErrors, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.Symbols.SourceFixedFieldSymbol(containingType, declarator, modifiers, modifierErrors, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 182926, 183008);
                    return return_v;
                }


                int
                f_10073_183043_183082(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbol>
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberFieldSymbolFromDeclarator
                item)
                {
                    this_param.Add((Microsoft.CodeAnalysis.CSharp.Symbol)item);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 183043, 183082);
                    return 0;
                }


                bool
                f_10073_183462_183482(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberFieldSymbolFromDeclarator
                this_param)
                {
                    var return_v = this_param.IsStatic;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 183462, 183482);
                    return return_v;
                }


                int
                f_10073_183395_183506(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol.DeclaredMembersAndInitializersBuilder
                this_param, bool
                useStatic, Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                compilation, Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclaratorSyntax
                syntax)
                {
                    this_param.UpdateIsNullableEnabledForConstructorsAndFields(useStatic: useStatic, compilation, (Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode)syntax);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 183395, 183506);
                    return 0;
                }


                bool
                f_10073_183547_183560()
                {
                    var return_v = IsScriptClass;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 183547, 183560);
                    return return_v;
                }


                int
                f_10073_183771_184065(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbol>
                builder, Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclaratorSyntax
                node, Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                containingType, Microsoft.CodeAnalysis.CSharp.DeclarationModifiers
                modifiers, Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberFieldSymbolFromDeclarator
                containingFieldOpt)
                {
                    ExpressionFieldFinder.FindExpressionVariables(builder, (Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode)node, containingType, modifiers, (Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol)containingFieldOpt);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 183771, 184065);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.Syntax.EqualsValueClauseSyntax?
                f_10073_184141_184161(Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclaratorSyntax
                this_param)
                {
                    var return_v = this_param.Initializer;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 184141, 184161);
                    return return_v;
                }


                bool
                f_10073_184247_184267(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberFieldSymbolFromDeclarator
                this_param)
                {
                    var return_v = this_param.IsStatic;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 184247, 184267);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Syntax.EqualsValueClauseSyntax
                f_10073_184401_184421(Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclaratorSyntax
                this_param)
                {
                    var return_v = this_param.Initializer;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 184401, 184421);
                    return return_v;
                }


                int
                f_10073_184349_184422(ref Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbols.FieldOrPropertyInitializer>?
                initializers, Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberFieldSymbolFromDeclarator
                fieldOpt, Microsoft.CodeAnalysis.CSharp.Syntax.EqualsValueClauseSyntax
                node)
                {
                    AddInitializer(ref initializers, (Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol)fieldOpt, (Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode)node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 184349, 184422);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.Syntax.EqualsValueClauseSyntax
                f_10073_184639_184659(Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclaratorSyntax
                this_param)
                {
                    var return_v = this_param.Initializer;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 184639, 184659);
                    return return_v;
                }


                int
                f_10073_184585_184660(ref Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbols.FieldOrPropertyInitializer>?
                initializers, Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberFieldSymbolFromDeclarator
                fieldOpt, Microsoft.CodeAnalysis.CSharp.Syntax.EqualsValueClauseSyntax
                node)
                {
                    AddInitializer(ref initializers, (Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol)fieldOpt, (Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode)node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 184585, 184660);
                    return 0;
                }


                Microsoft.CodeAnalysis.SeparatedSyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclaratorSyntax>
                f_10073_182587_182620_I(Microsoft.CodeAnalysis.SeparatedSyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclaratorSyntax>
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 182587, 182620);
                    return return_v;
                }


                bool
                f_10073_185020_185035()
                {
                    var return_v = IsImplicitClass;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 185020, 185035);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SyntaxToken
                f_10073_185237_185260(Microsoft.CodeAnalysis.CSharp.Syntax.MethodDeclarationSyntax
                this_param)
                {
                    var return_v = this_param.Identifier;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 185237, 185260);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SourceLocation
                f_10073_185218_185261(Microsoft.CodeAnalysis.SyntaxToken
                token)
                {
                    var return_v = new Microsoft.CodeAnalysis.SourceLocation(token);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 185218, 185261);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo
                f_10073_185130_185262(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, Microsoft.CodeAnalysis.SourceLocation
                location)
                {
                    var return_v = diagnostics.Add(code, (Microsoft.CodeAnalysis.Location)location);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 185130, 185262);
                    return return_v;
                }


                bool
                f_10073_185417_185470(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.MethodDeclarationSyntax
                syntax)
                {
                    var return_v = this_param.IsNullableAnalysisEnabledIn((Microsoft.CodeAnalysis.SyntaxNode)syntax);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 185417, 185470);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.SourceOrdinaryMethodSymbol
                f_10073_185339_185484(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                containingType, Microsoft.CodeAnalysis.CSharp.Binder
                bodyBinder, Microsoft.CodeAnalysis.CSharp.Syntax.MethodDeclarationSyntax
                syntax, bool
                isNullableAnalysisEnabled, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = SourceOrdinaryMethodSymbol.CreateMethodSymbol((Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol)containingType, bodyBinder, syntax, isNullableAnalysisEnabled, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 185339, 185484);
                    return return_v;
                }


                int
                f_10073_185515_185549(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbol>
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.SourceOrdinaryMethodSymbol
                item)
                {
                    this_param.Add((Microsoft.CodeAnalysis.CSharp.Symbol)item);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 185515, 185549);
                    return 0;
                }


                bool
                f_10073_185819_185834()
                {
                    var return_v = IsImplicitClass;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 185819, 185834);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SyntaxToken
                f_10073_186036_186064(Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorDeclarationSyntax
                this_param)
                {
                    var return_v = this_param.Identifier;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 186036, 186064);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SourceLocation
                f_10073_186017_186065(Microsoft.CodeAnalysis.SyntaxToken
                token)
                {
                    var return_v = new Microsoft.CodeAnalysis.SourceLocation(token);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 186017, 186065);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo
                f_10073_185929_186066(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, Microsoft.CodeAnalysis.SourceLocation
                location)
                {
                    var return_v = diagnostics.Add(code, (Microsoft.CodeAnalysis.Location)location);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 185929, 186066);
                    return return_v;
                }


                bool
                f_10073_186155_186213(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorDeclarationSyntax
                syntax)
                {
                    var return_v = this_param.IsNullableAnalysisEnabledIn((Microsoft.CodeAnalysis.SyntaxNode)syntax);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 186155, 186213);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.SourceConstructorSymbol
                f_10073_186262_186366(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                containingType, Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorDeclarationSyntax
                syntax, bool
                isNullableAnalysisEnabled, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = SourceConstructorSymbol.CreateConstructorSymbol(containingType, syntax, isNullableAnalysisEnabled, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 186262, 186366);
                    return return_v;
                }


                int
                f_10073_186397_186436(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbol>
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.SourceConstructorSymbol
                item)
                {
                    this_param.Add((Microsoft.CodeAnalysis.CSharp.Symbol)item);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 186397, 186436);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorInitializerSyntax?
                f_10073_186471_186500(Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorDeclarationSyntax
                this_param)
                {
                    var return_v = this_param.Initializer;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 186471, 186500);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.SyntaxKind?
                f_10073_186471_186508_I(Microsoft.CodeAnalysis.CSharp.SyntaxKind?
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 186471, 186508);
                    return return_v;
                }


                bool
                f_10073_186682_186702(Microsoft.CodeAnalysis.CSharp.Symbols.SourceConstructorSymbol
                this_param)
                {
                    var return_v = this_param.IsStatic;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 186682, 186702);
                    return return_v;
                }


                int
                f_10073_186615_186722(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol.DeclaredMembersAndInitializersBuilder
                this_param, bool
                useStatic, bool
                value)
                {
                    this_param.UpdateIsNullableEnabledForConstructorsAndFields(useStatic: useStatic, value);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 186615, 186722);
                    return 0;
                }


                bool
                f_10073_187020_187035()
                {
                    var return_v = IsImplicitClass;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 187020, 187035);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SyntaxToken
                f_10073_187237_187264(Microsoft.CodeAnalysis.CSharp.Syntax.DestructorDeclarationSyntax
                this_param)
                {
                    var return_v = this_param.Identifier;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 187237, 187264);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SourceLocation
                f_10073_187218_187265(Microsoft.CodeAnalysis.SyntaxToken
                token)
                {
                    var return_v = new Microsoft.CodeAnalysis.SourceLocation(token);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 187218, 187265);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo
                f_10073_187130_187266(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, Microsoft.CodeAnalysis.SourceLocation
                location)
                {
                    var return_v = diagnostics.Add(code, (Microsoft.CodeAnalysis.Location)location);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 187130, 187266);
                    return return_v;
                }


                bool
                f_10073_187790_187847(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.DestructorDeclarationSyntax
                syntax)
                {
                    var return_v = this_param.IsNullableAnalysisEnabledIn((Microsoft.CodeAnalysis.SyntaxNode)syntax);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 187790, 187847);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.SourceDestructorSymbol
                f_10073_187739_187861(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                containingType, Microsoft.CodeAnalysis.CSharp.Syntax.DestructorDeclarationSyntax
                syntax, bool
                isNullableAnalysisEnabled, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.Symbols.SourceDestructorSymbol(containingType, syntax, isNullableAnalysisEnabled, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 187739, 187861);
                    return return_v;
                }


                int
                f_10073_187892_187930(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbol>
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.SourceDestructorSymbol
                item)
                {
                    this_param.Add((Microsoft.CodeAnalysis.CSharp.Symbol)item);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 187892, 187930);
                    return 0;
                }


                bool
                f_10073_188191_188206()
                {
                    var return_v = IsImplicitClass;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 188191, 188206);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SyntaxToken
                f_10073_188408_188433(Microsoft.CodeAnalysis.CSharp.Syntax.PropertyDeclarationSyntax
                this_param)
                {
                    var return_v = this_param.Identifier;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 188408, 188433);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SourceLocation
                f_10073_188389_188434(Microsoft.CodeAnalysis.SyntaxToken
                token)
                {
                    var return_v = new Microsoft.CodeAnalysis.SourceLocation(token);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 188389, 188434);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo
                f_10073_188301_188435(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, Microsoft.CodeAnalysis.SourceLocation
                location)
                {
                    var return_v = diagnostics.Add(code, (Microsoft.CodeAnalysis.Location)location);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 188301, 188435);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.SourcePropertySymbol
                f_10073_188514_188588(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                containingType, Microsoft.CodeAnalysis.CSharp.Binder
                bodyBinder, Microsoft.CodeAnalysis.CSharp.Syntax.PropertyDeclarationSyntax
                syntax, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = SourcePropertySymbol.Create(containingType, bodyBinder, syntax, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 188514, 188588);
                    return return_v;
                }


                int
                f_10073_188619_188655(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbol>
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.SourcePropertySymbol
                item)
                {
                    this_param.Add((Microsoft.CodeAnalysis.CSharp.Symbol)item);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 188619, 188655);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol?
                f_10073_188735_188753(Microsoft.CodeAnalysis.CSharp.Symbols.SourcePropertySymbol
                this_param)
                {
                    var return_v = this_param.GetMethod;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 188735, 188753);
                    return return_v;
                }


                int
                f_10073_188688_188754(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                this_param, Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbol>
                symbols, Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol?
                accessorOpt)
                {
                    this_param.AddAccessorIfAvailable(symbols, accessorOpt);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 188688, 188754);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol?
                f_10073_188832_188850(Microsoft.CodeAnalysis.CSharp.Symbols.SourcePropertySymbol
                this_param)
                {
                    var return_v = this_param.SetMethod;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 188832, 188850);
                    return return_v;
                }


                int
                f_10073_188785_188851(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                this_param, Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbol>
                symbols, Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol?
                accessorOpt)
                {
                    this_param.AddAccessorIfAvailable(symbols, accessorOpt);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 188785, 188851);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedBackingFieldSymbol
                f_10073_188909_188930(Microsoft.CodeAnalysis.CSharp.Symbols.SourcePropertySymbol
                this_param)
                {
                    var return_v = this_param.BackingField;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 188909, 188930);
                    return return_v;
                }


                int
                f_10073_189390_189430(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbol>
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol
                item)
                {
                    this_param.Add((Microsoft.CodeAnalysis.CSharp.Symbol)item);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 189390, 189430);
                    return 0;
                }


                bool
                f_10073_189532_189553(Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol
                this_param)
                {
                    var return_v = this_param.IsStatic;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 189532, 189553);
                    return return_v;
                }


                int
                f_10073_189465_189583(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol.DeclaredMembersAndInitializersBuilder
                this_param, bool
                useStatic, Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                compilation, Microsoft.CodeAnalysis.CSharp.Syntax.PropertyDeclarationSyntax
                syntax)
                {
                    this_param.UpdateIsNullableEnabledForConstructorsAndFields(useStatic: useStatic, compilation, (Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode)syntax);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 189465, 189583);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.Syntax.EqualsValueClauseSyntax?
                f_10073_189638_189664(Microsoft.CodeAnalysis.CSharp.Syntax.PropertyDeclarationSyntax
                this_param)
                {
                    var return_v = this_param.Initializer;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 189638, 189664);
                    return return_v;
                }


                bool
                f_10073_189800_189813()
                {
                    var return_v = IsScriptClass;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 189800, 189813);
                    return return_v;
                }


                bool
                f_10073_190384_190401(Microsoft.CodeAnalysis.CSharp.Symbols.SourcePropertySymbol
                this_param)
                {
                    var return_v = this_param.IsStatic;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 190384, 190401);
                    return return_v;
                }


                int
                f_10073_190002_190538(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbol>
                builder, Microsoft.CodeAnalysis.CSharp.Syntax.EqualsValueClauseSyntax
                node, Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                containingType, Microsoft.CodeAnalysis.CSharp.DeclarationModifiers
                modifiers, Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol
                containingFieldOpt)
                {
                    ExpressionFieldFinder.FindExpressionVariables(builder, (Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode)node, containingType, modifiers, containingFieldOpt);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 190002, 190538);
                    return 0;
                }


                bool
                f_10073_190622_190639(Microsoft.CodeAnalysis.CSharp.Symbols.SourcePropertySymbol
                this_param)
                {
                    var return_v = this_param.IsStatic;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 190622, 190639);
                    return return_v;
                }


                int
                f_10073_190721_190786(ref Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbols.FieldOrPropertyInitializer>?
                initializers, Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol
                fieldOpt, Microsoft.CodeAnalysis.CSharp.Syntax.EqualsValueClauseSyntax
                node)
                {
                    AddInitializer(ref initializers, fieldOpt, (Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode)node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 190721, 190786);
                    return 0;
                }


                int
                f_10073_190949_191016(ref Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbols.FieldOrPropertyInitializer>?
                initializers, Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol
                fieldOpt, Microsoft.CodeAnalysis.CSharp.Syntax.EqualsValueClauseSyntax
                node)
                {
                    AddInitializer(ref initializers, fieldOpt, (Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode)node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 190949, 191016);
                    return 0;
                }


                bool
                f_10073_191388_191403()
                {
                    var return_v = IsImplicitClass;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 191388, 191403);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclarationSyntax
                f_10073_191643_191671(Microsoft.CodeAnalysis.CSharp.Syntax.EventFieldDeclarationSyntax
                this_param)
                {
                    var return_v = this_param.Declaration;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 191643, 191671);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SyntaxToken
                f_10073_191643_191700(Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclaratorSyntax
                this_param)
                {
                    var return_v = this_param.Identifier;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 191643, 191700);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SourceLocation
                f_10073_191624_191701(Microsoft.CodeAnalysis.SyntaxToken
                token)
                {
                    var return_v = new Microsoft.CodeAnalysis.SourceLocation(token);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 191624, 191701);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo
                f_10073_191498_191702(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, Microsoft.CodeAnalysis.SourceLocation
                location)
                {
                    var return_v = diagnostics.Add(code, (Microsoft.CodeAnalysis.Location)location);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 191498, 191702);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclarationSyntax
                f_10073_191814_191842(Microsoft.CodeAnalysis.CSharp.Syntax.EventFieldDeclarationSyntax
                this_param)
                {
                    var return_v = this_param.Declaration;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 191814, 191842);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SeparatedSyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclaratorSyntax>
                f_10073_191814_191852(Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclarationSyntax
                this_param)
                {
                    var return_v = this_param.Variables;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 191814, 191852);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SyntaxTokenList
                f_10073_192003_192029(Microsoft.CodeAnalysis.CSharp.Syntax.EventFieldDeclarationSyntax
                this_param)
                {
                    var return_v = this_param.Modifiers;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 192003, 192029);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.SourceFieldLikeEventSymbol
                f_10073_191954_192055(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                containingType, Microsoft.CodeAnalysis.CSharp.Binder
                binder, Microsoft.CodeAnalysis.SyntaxTokenList
                modifiers, Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclaratorSyntax
                declaratorSyntax, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.Symbols.SourceFieldLikeEventSymbol(containingType, binder, modifiers, declaratorSyntax, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 191954, 192055);
                    return return_v;
                }


                int
                f_10073_192090_192124(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbol>
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.SourceFieldLikeEventSymbol
                item)
                {
                    this_param.Add((Microsoft.CodeAnalysis.CSharp.Symbol)item);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 192090, 192124);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol?
                f_10073_192192_192214(Microsoft.CodeAnalysis.CSharp.Symbols.SourceFieldLikeEventSymbol
                this_param)
                {
                    var return_v = this_param.AssociatedField;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 192192, 192214);
                    return return_v;
                }


                bool
                f_10073_192255_192268()
                {
                    var return_v = IsScriptClass;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 192255, 192268);
                    return return_v;
                }


                bool
                f_10073_192660_192675(Microsoft.CodeAnalysis.CSharp.Symbols.SourceFieldLikeEventSymbol
                this_param)
                {
                    var return_v = this_param.IsStatic;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 192660, 192675);
                    return return_v;
                }


                int
                f_10073_192479_192789(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbol>
                builder, Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclaratorSyntax
                node, Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                containingType, Microsoft.CodeAnalysis.CSharp.DeclarationModifiers
                modifiers, Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol?
                containingFieldOpt)
                {
                    ExpressionFieldFinder.FindExpressionVariables(builder, (Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode)node, containingType, modifiers, containingFieldOpt);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 192479, 192789);
                    return 0;
                }


                bool
                f_10073_193231_193255(Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol
                this_param)
                {
                    var return_v = this_param.IsStatic;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 193231, 193255);
                    return return_v;
                }


                int
                f_10073_193164_193281(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol.DeclaredMembersAndInitializersBuilder
                this_param, bool
                useStatic, Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                compilation, Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclaratorSyntax
                syntax)
                {
                    this_param.UpdateIsNullableEnabledForConstructorsAndFields(useStatic: useStatic, compilation, (Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode)syntax);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 193164, 193281);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.Syntax.EqualsValueClauseSyntax?
                f_10073_193326_193348(Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclaratorSyntax
                this_param)
                {
                    var return_v = this_param.Initializer;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 193326, 193348);
                    return return_v;
                }


                bool
                f_10073_193442_193466(Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol
                this_param)
                {
                    var return_v = this_param.IsStatic;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 193442, 193466);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Syntax.EqualsValueClauseSyntax
                f_10073_193612_193634(Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclaratorSyntax
                this_param)
                {
                    var return_v = this_param.Initializer;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 193612, 193634);
                    return return_v;
                }


                int
                f_10073_193556_193635(ref Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbols.FieldOrPropertyInitializer>?
                initializers, Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol
                fieldOpt, Microsoft.CodeAnalysis.CSharp.Syntax.EqualsValueClauseSyntax
                node)
                {
                    AddInitializer(ref initializers, fieldOpt, (Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode)node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 193556, 193635);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.Syntax.EqualsValueClauseSyntax
                f_10073_193872_193894(Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclaratorSyntax
                this_param)
                {
                    var return_v = this_param.Initializer;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 193872, 193894);
                    return return_v;
                }


                int
                f_10073_193814_193895(ref Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbols.FieldOrPropertyInitializer>?
                initializers, Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol
                fieldOpt, Microsoft.CodeAnalysis.CSharp.Syntax.EqualsValueClauseSyntax
                node)
                {
                    AddInitializer(ref initializers, fieldOpt, (Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode)node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 193814, 193895);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                f_10073_194070_194086(Microsoft.CodeAnalysis.CSharp.Symbols.SourceFieldLikeEventSymbol
                this_param)
                {
                    var return_v = this_param.AddMethod;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 194070, 194086);
                    return return_v;
                }


                int
                f_10073_194049_194095(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 194049, 194095);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                f_10073_194151_194170(Microsoft.CodeAnalysis.CSharp.Symbols.SourceFieldLikeEventSymbol
                this_param)
                {
                    var return_v = this_param.RemoveMethod;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 194151, 194170);
                    return return_v;
                }


                int
                f_10073_194130_194179(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 194130, 194179);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                f_10073_194263_194279(Microsoft.CodeAnalysis.CSharp.Symbols.SourceFieldLikeEventSymbol
                this_param)
                {
                    var return_v = this_param.AddMethod;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 194263, 194279);
                    return return_v;
                }


                int
                f_10073_194216_194280(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                this_param, Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbol>
                symbols, Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                accessorOpt)
                {
                    this_param.AddAccessorIfAvailable(symbols, accessorOpt);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 194216, 194280);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                f_10073_194362_194381(Microsoft.CodeAnalysis.CSharp.Symbols.SourceFieldLikeEventSymbol
                this_param)
                {
                    var return_v = this_param.RemoveMethod;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 194362, 194381);
                    return return_v;
                }


                int
                f_10073_194315_194382(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                this_param, Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbol>
                symbols, Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                accessorOpt)
                {
                    this_param.AddAccessorIfAvailable(symbols, accessorOpt);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 194315, 194382);
                    return 0;
                }


                Microsoft.CodeAnalysis.SeparatedSyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclaratorSyntax>
                f_10073_191814_191852_I(Microsoft.CodeAnalysis.SeparatedSyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclaratorSyntax>
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 191814, 191852);
                    return return_v;
                }


                bool
                f_10073_194665_194680()
                {
                    var return_v = IsImplicitClass;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 194665, 194680);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SyntaxToken
                f_10073_194882_194904(Microsoft.CodeAnalysis.CSharp.Syntax.EventDeclarationSyntax
                this_param)
                {
                    var return_v = this_param.Identifier;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 194882, 194904);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SourceLocation
                f_10073_194863_194905(Microsoft.CodeAnalysis.SyntaxToken
                token)
                {
                    var return_v = new Microsoft.CodeAnalysis.SourceLocation(token);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 194863, 194905);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo
                f_10073_194775_194906(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, Microsoft.CodeAnalysis.SourceLocation
                location)
                {
                    var return_v = diagnostics.Add(code, (Microsoft.CodeAnalysis.Location)location);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 194775, 194906);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.SourceCustomEventSymbol
                f_10073_194983_195054(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                containingType, Microsoft.CodeAnalysis.CSharp.Binder
                binder, Microsoft.CodeAnalysis.CSharp.Syntax.EventDeclarationSyntax
                syntax, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.Symbols.SourceCustomEventSymbol(containingType, binder, syntax, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 194983, 195054);
                    return return_v;
                }


                int
                f_10073_195087_195121(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbol>
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.SourceCustomEventSymbol
                item)
                {
                    this_param.Add((Microsoft.CodeAnalysis.CSharp.Symbol)item);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 195087, 195121);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol?
                f_10073_195201_195217(Microsoft.CodeAnalysis.CSharp.Symbols.SourceCustomEventSymbol
                this_param)
                {
                    var return_v = this_param.AddMethod;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 195201, 195217);
                    return return_v;
                }


                int
                f_10073_195154_195218(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                this_param, Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbol>
                symbols, Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol?
                accessorOpt)
                {
                    this_param.AddAccessorIfAvailable(symbols, accessorOpt);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 195154, 195218);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol?
                f_10073_195296_195315(Microsoft.CodeAnalysis.CSharp.Symbols.SourceCustomEventSymbol
                this_param)
                {
                    var return_v = this_param.RemoveMethod;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 195296, 195315);
                    return return_v;
                }


                int
                f_10073_195249_195316(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                this_param, Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbol>
                symbols, Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol?
                accessorOpt)
                {
                    this_param.AddAccessorIfAvailable(symbols, accessorOpt);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 195249, 195316);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol?
                f_10073_195362_195384(Microsoft.CodeAnalysis.CSharp.Symbols.SourceCustomEventSymbol
                this_param)
                {
                    var return_v = this_param.AssociatedField;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 195362, 195384);
                    return return_v;
                }


                int
                f_10073_195349_195393(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 195349, 195393);
                    return 0;
                }


                bool
                f_10073_195651_195666()
                {
                    var return_v = IsImplicitClass;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 195651, 195666);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SyntaxToken
                f_10073_195868_195893(Microsoft.CodeAnalysis.CSharp.Syntax.IndexerDeclarationSyntax
                this_param)
                {
                    var return_v = this_param.ThisKeyword;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 195868, 195893);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SourceLocation
                f_10073_195849_195894(Microsoft.CodeAnalysis.SyntaxToken
                token)
                {
                    var return_v = new Microsoft.CodeAnalysis.SourceLocation(token);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 195849, 195894);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo
                f_10073_195761_195895(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, Microsoft.CodeAnalysis.SourceLocation
                location)
                {
                    var return_v = diagnostics.Add(code, (Microsoft.CodeAnalysis.Location)location);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 195761, 195895);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.SourcePropertySymbol
                f_10073_195973_196046(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                containingType, Microsoft.CodeAnalysis.CSharp.Binder
                bodyBinder, Microsoft.CodeAnalysis.CSharp.Syntax.IndexerDeclarationSyntax
                syntax, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = SourcePropertySymbol.Create(containingType, bodyBinder, syntax, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 195973, 196046);
                    return return_v;
                }


                int
                f_10073_196135_196170(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbol>
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.SourcePropertySymbol
                item)
                {
                    this_param.Add((Microsoft.CodeAnalysis.CSharp.Symbol)item);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 196135, 196170);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol?
                f_10073_196248_196265(Microsoft.CodeAnalysis.CSharp.Symbols.SourcePropertySymbol
                this_param)
                {
                    var return_v = this_param.GetMethod;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 196248, 196265);
                    return return_v;
                }


                int
                f_10073_196201_196266(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                this_param, Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbol>
                symbols, Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol?
                accessorOpt)
                {
                    this_param.AddAccessorIfAvailable(symbols, accessorOpt);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 196201, 196266);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol?
                f_10073_196344_196361(Microsoft.CodeAnalysis.CSharp.Symbols.SourcePropertySymbol
                this_param)
                {
                    var return_v = this_param.SetMethod;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 196344, 196361);
                    return return_v;
                }


                int
                f_10073_196297_196362(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                this_param, Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbol>
                symbols, Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol?
                accessorOpt)
                {
                    this_param.AddAccessorIfAvailable(symbols, accessorOpt);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 196297, 196362);
                    return 0;
                }


                bool
                f_10073_196653_196668()
                {
                    var return_v = IsImplicitClass;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 196653, 196668);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SyntaxToken
                f_10073_196870_196910(Microsoft.CodeAnalysis.CSharp.Syntax.ConversionOperatorDeclarationSyntax
                this_param)
                {
                    var return_v = this_param.OperatorKeyword;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 196870, 196910);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SourceLocation
                f_10073_196851_196911(Microsoft.CodeAnalysis.SyntaxToken
                token)
                {
                    var return_v = new Microsoft.CodeAnalysis.SourceLocation(token);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 196851, 196911);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo
                f_10073_196763_196912(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, Microsoft.CodeAnalysis.SourceLocation
                location)
                {
                    var return_v = diagnostics.Add(code, (Microsoft.CodeAnalysis.Location)location);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 196763, 196912);
                    return return_v;
                }


                bool
                f_10073_197123_197188(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.ConversionOperatorDeclarationSyntax
                syntax)
                {
                    var return_v = this_param.IsNullableAnalysisEnabledIn((Microsoft.CodeAnalysis.SyntaxNode)syntax);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 197123, 197188);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.SourceUserDefinedConversionSymbol
                f_10073_196989_197202(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                containingType, Microsoft.CodeAnalysis.CSharp.Syntax.ConversionOperatorDeclarationSyntax
                syntax, bool
                isNullableAnalysisEnabled, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = SourceUserDefinedConversionSymbol.CreateUserDefinedConversionSymbol(containingType, syntax, isNullableAnalysisEnabled, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 196989, 197202);
                    return return_v;
                }


                int
                f_10073_197233_197267(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbol>
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.SourceUserDefinedConversionSymbol
                item)
                {
                    this_param.Add((Microsoft.CodeAnalysis.CSharp.Symbol)item);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 197233, 197267);
                    return 0;
                }


                bool
                f_10073_197528_197543()
                {
                    var return_v = IsImplicitClass;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 197528, 197543);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SyntaxToken
                f_10073_197745_197775(Microsoft.CodeAnalysis.CSharp.Syntax.OperatorDeclarationSyntax
                this_param)
                {
                    var return_v = this_param.OperatorKeyword;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 197745, 197775);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SourceLocation
                f_10073_197726_197776(Microsoft.CodeAnalysis.SyntaxToken
                token)
                {
                    var return_v = new Microsoft.CodeAnalysis.SourceLocation(token);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 197726, 197776);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo
                f_10073_197638_197777(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, Microsoft.CodeAnalysis.SourceLocation
                location)
                {
                    var return_v = diagnostics.Add(code, (Microsoft.CodeAnalysis.Location)location);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 197638, 197777);
                    return return_v;
                }


                bool
                f_10073_197974_198029(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param, Microsoft.CodeAnalysis.CSharp.Syntax.OperatorDeclarationSyntax
                syntax)
                {
                    var return_v = this_param.IsNullableAnalysisEnabledIn((Microsoft.CodeAnalysis.SyntaxNode)syntax);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 197974, 198029);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.SourceUserDefinedOperatorSymbol
                f_10073_197854_198043(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                containingType, Microsoft.CodeAnalysis.CSharp.Syntax.OperatorDeclarationSyntax
                syntax, bool
                isNullableAnalysisEnabled, Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics)
                {
                    var return_v = SourceUserDefinedOperatorSymbol.CreateUserDefinedOperatorSymbol(containingType, syntax, isNullableAnalysisEnabled, diagnostics);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 197854, 198043);
                    return return_v;
                }


                int
                f_10073_198074_198108(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbol>
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.SourceUserDefinedOperatorSymbol
                item)
                {
                    this_param.Add((Microsoft.CodeAnalysis.CSharp.Symbol)item);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 198074, 198108);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax
                f_10073_198303_198339(Microsoft.CodeAnalysis.CSharp.Syntax.GlobalStatementSyntax
                this_param)
                {
                    var return_v = this_param.Statement;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 198303, 198339);
                    return return_v;
                }


                bool
                f_10073_198376_198389()
                {
                    var return_v = IsScriptClass;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 198376, 198389);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.SyntaxKind
                f_10073_198604_198625(Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax
                this_param)
                {
                    var return_v = this_param.Kind();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 198604, 198625);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax
                f_10073_198747_198797(Microsoft.CodeAnalysis.CSharp.Syntax.LabeledStatementSyntax
                this_param)
                {
                    var return_v = this_param.Statement;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 198747, 198797);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.SyntaxKind
                f_10073_198877_198898(Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax
                this_param)
                {
                    var return_v = this_param.Kind();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 198877, 198898);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclarationSyntax
                f_10073_199449_199465(Microsoft.CodeAnalysis.CSharp.Syntax.LocalDeclarationStatementSyntax
                this_param)
                {
                    var return_v = this_param.Declaration;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 199449, 199465);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SeparatedSyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclaratorSyntax>
                f_10073_199449_199475(Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclarationSyntax
                this_param)
                {
                    var return_v = this_param.Variables;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 199449, 199475);
                    return return_v;
                }


                int
                f_10073_199710_199939(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbol>
                builder, Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclaratorSyntax
                node, Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                containingType, Microsoft.CodeAnalysis.CSharp.DeclarationModifiers
                modifiers, Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol
                containingFieldOpt)
                {
                    ExpressionFieldFinder.FindExpressionVariables(builder, (Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode)node, containingType, modifiers, containingFieldOpt: containingFieldOpt);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 199710, 199939);
                    return 0;
                }


                Microsoft.CodeAnalysis.SeparatedSyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclaratorSyntax>
                f_10073_199449_199475_I(Microsoft.CodeAnalysis.SeparatedSyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclaratorSyntax>
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 199449, 199475);
                    return return_v;
                }


                int
                f_10073_200567_200918(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbol>
                builder, Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax
                node, Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                containingType, Microsoft.CodeAnalysis.CSharp.DeclarationModifiers
                modifiers, Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol
                containingFieldOpt)
                {
                    ExpressionFieldFinder.FindExpressionVariables(builder, (Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode)node, containingType, modifiers, containingFieldOpt: containingFieldOpt);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 200567, 200918);
                    return 0;
                }


                int
                f_10073_201243_201306(ref Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbols.FieldOrPropertyInitializer>?
                initializers, Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol?
                fieldOpt, Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax
                node)
                {
                    AddInitializer(ref initializers, fieldOpt, (Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode)node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 201243, 201306);
                    return 0;
                }


                bool
                f_10073_201407_201477(Microsoft.CodeAnalysis.CSharp.Syntax.MemberDeclarationSyntax
                syntax)
                {
                    var return_v = SyntaxFacts.IsSimpleProgramTopLevelStatement((Microsoft.CodeAnalysis.CSharp.Syntax.GlobalStatementSyntax)syntax);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 201407, 201477);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SourceLocation
                f_10073_201590_201625(Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax
                node)
                {
                    var return_v = new Microsoft.CodeAnalysis.SourceLocation((Microsoft.CodeAnalysis.SyntaxNode)node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 201590, 201625);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo
                f_10073_201543_201626(Microsoft.CodeAnalysis.DiagnosticBag
                diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
                code, Microsoft.CodeAnalysis.SourceLocation
                location)
                {
                    var return_v = diagnostics.Add(code, (Microsoft.CodeAnalysis.Location)location);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 201543, 201626);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.SyntaxKind
                f_10073_201848_201856(Microsoft.CodeAnalysis.CSharp.Syntax.MemberDeclarationSyntax
                this_param)
                {
                    var return_v = this_param.Kind();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 201848, 201856);
                    return return_v;
                }


                bool
                f_10073_201818_201857(Microsoft.CodeAnalysis.CSharp.SyntaxKind
                kind)
                {
                    var return_v = SyntaxFacts.IsTypeDeclaration(kind);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 201818, 201857);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.SyntaxKind
                f_10073_201890_201898(Microsoft.CodeAnalysis.CSharp.Syntax.MemberDeclarationSyntax
                this_param)
                {
                    var return_v = this_param.Kind();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 201890, 201898);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.SyntaxKind
                f_10073_201966_201974(Microsoft.CodeAnalysis.CSharp.Syntax.MemberDeclarationSyntax
                this_param)
                {
                    var return_v = this_param.Kind();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 201966, 201974);
                    return return_v;
                }


                int
                f_10073_201775_202006(bool
                condition)
                {
                    Debug.Assert(condition);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 201775, 202006);
                    return 0;
                }


                Microsoft.CodeAnalysis.SyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.MemberDeclarationSyntax>
                f_10073_181432_181439_I(Microsoft.CodeAnalysis.SyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.MemberDeclarationSyntax>
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 181432, 181439);
                    return return_v;
                }


                int
                f_10073_202089_202156(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbols.FieldOrPropertyInitializer>>
                allInitializers, Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbols.FieldOrPropertyInitializer>?
                siblingsOpt)
                {
                    AddInitializers(allInitializers, siblingsOpt);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 202089, 202156);
                    return 0;
                }


                int
                f_10073_202171_202234(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbols.FieldOrPropertyInitializer>>
                allInitializers, Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbols.FieldOrPropertyInitializer>?
                siblingsOpt)
                {
                    AddInitializers(allInitializers, siblingsOpt);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 202171, 202234);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10073, 180702, 202246);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10073, 180702, 202246);
            }
        }

        private void AddAccessorIfAvailable(ArrayBuilder<Symbol> symbols, MethodSymbol? accessorOpt)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10073, 202258, 202486);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 202375, 202475) || true) && (!(accessorOpt is null))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 202375, 202475);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 202435, 202460);

                    f_10073_202435_202459(symbols, accessorOpt);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 202375, 202475);
                }
                DynAbs.Tracing.TraceSender.TraceExitMethod(10073, 202258, 202486);

                int
                f_10073_202435_202459(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbol>
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol
                item)
                {
                    this_param.Add((Microsoft.CodeAnalysis.CSharp.Symbol)item);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 202435, 202459);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10073, 202258, 202486);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10073, 202258, 202486);
            }
        }

        internal override byte? GetLocalNullableContextValue()
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10073, 202498, 202823);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 202577, 202589);

                byte?
                value
                = default(byte?);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 202603, 202785) || true) && (!_flags.TryGetNullableContext(out value))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 202603, 202785);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 202681, 202719);

                    value = f_10073_202689_202718(this);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 202737, 202770);

                    _flags.SetNullableContext(value);
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 202603, 202785);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 202799, 202812);

                return value;
                DynAbs.Tracing.TraceSender.TraceExitMethod(10073, 202498, 202823);

                byte?
                f_10073_202689_202718(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                this_param)
                {
                    var return_v = this_param.ComputeNullableContextValue();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 202689, 202718);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10073, 202498, 202823);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10073, 202498, 202823);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private byte? ComputeNullableContextValue()
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10073, 202835, 203950);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 202903, 202942);

                var
                compilation = f_10073_202921_202941()
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 202956, 203068) || true) && (!f_10073_202961_203007(compilation, this))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 202956, 203068);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 203041, 203053);

                    return null;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 202956, 203068);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 203084, 203135);

                var
                builder = f_10073_203098_203134()
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 203149, 203193);

                var
                baseType = f_10073_203164_203192()
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 203207, 203333) || true) && (baseType is object)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 203207, 203333);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 203263, 203318);

                    builder.AddValue(TypeWithAnnotations.Create(baseType));
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 203207, 203333);
                }
                try
                {
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 203347, 203501);
                    foreach (var @interface in f_10073_203374_203395_I(f_10073_203374_203395(this)))
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 203347, 203501);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 203429, 203486);

                        builder.AddValue(TypeWithAnnotations.Create(@interface));
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 203347, 203501);
                    }
                }
                catch (System.Exception)
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoopByException(10073, 1, 155);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoop(10073, 1, 155);
                }
                try
                {
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 203515, 203672);
                    foreach (var typeParameter in f_10073_203545_203559_I(f_10073_203545_203559()))
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 203515, 203672);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 203593, 203657);

                        f_10073_203593_203656(typeParameter, compilation, ref builder);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 203515, 203672);
                    }
                }
                catch (System.Exception)
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoopByException(10073, 1, 158);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoop(10073, 1, 158);
                }
                try
                {
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 203686, 203836);
                    foreach (var member in f_10073_203709_203730_I(f_10073_203709_203730(this)))
                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 203686, 203836);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 203764, 203821);

                        f_10073_203764_203820(member, compilation, ref builder);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 203686, 203836);
                    }
                }
                catch (System.Exception)
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoopByException(10073, 1, 151);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceExitLoop(10073, 1, 151);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 203908, 203939);

                return builder.MostCommonValue;
                DynAbs.Tracing.TraceSender.TraceExitMethod(10073, 202835, 203950);

                Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                f_10073_202921_202941()
                {
                    var return_v = DeclaringCompilation;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 202921, 202941);
                    return return_v;
                }


                bool
                f_10073_202961_203007(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                symbol)
                {
                    var return_v = this_param.ShouldEmitNullableAttributes((Microsoft.CodeAnalysis.CSharp.Symbol)symbol);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 202961, 203007);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.MostCommonNullableValueBuilder
                f_10073_203098_203134()
                {
                    var return_v = new Microsoft.CodeAnalysis.CSharp.MostCommonNullableValueBuilder();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 203098, 203134);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                f_10073_203164_203192()
                {
                    var return_v = BaseTypeNoUseSiteDiagnostics;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 203164, 203192);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol>
                f_10073_203374_203395(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                this_param)
                {
                    var return_v = this_param.GetInterfacesToEmit();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 203374, 203395);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol>
                f_10073_203374_203395_I(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol>
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 203374, 203395);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.TypeParameterSymbol>
                f_10073_203545_203559()
                {
                    var return_v = TypeParameters;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 203545, 203559);
                    return return_v;
                }


                int
                f_10073_203593_203656(Microsoft.CodeAnalysis.CSharp.Symbols.TypeParameterSymbol
                this_param, Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                compilation, ref Microsoft.CodeAnalysis.CSharp.MostCommonNullableValueBuilder
                builder)
                {
                    this_param.GetCommonNullableValues(compilation, ref builder);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 203593, 203656);
                    return 0;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.TypeParameterSymbol>
                f_10073_203545_203559_I(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.TypeParameterSymbol>
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 203545, 203559);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>
                f_10073_203709_203730(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                this_param)
                {
                    var return_v = this_param.GetMembersUnordered();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 203709, 203730);
                    return return_v;
                }


                int
                f_10073_203764_203820(Microsoft.CodeAnalysis.CSharp.Symbol
                this_param, Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                compilation, ref Microsoft.CodeAnalysis.CSharp.MostCommonNullableValueBuilder
                builder)
                {
                    this_param.GetCommonNullableValues(compilation, ref builder);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 203764, 203820);
                    return 0;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>
                f_10073_203709_203730_I(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbol>
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 203709, 203730);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10073, 202835, 203950);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10073, 202835, 203950);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        internal bool IsNullableEnabledForConstructorsAndInitializers(bool useStatic)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10073, 204243, 204626);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 204345, 204402);

                var
                membersAndInitializers = f_10073_204374_204401(this)
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 204416, 204615);

                return (DynAbs.Tracing.TraceSender.Conditional_F1(10073, 204423, 204432) || ((useStatic && DynAbs.Tracing.TraceSender.Conditional_F2(10073, 204452, 204522)) || DynAbs.Tracing.TraceSender.Conditional_F3(10073, 204542, 204614))) ? membersAndInitializers.IsNullableEnabledForStaticConstructorsAndFields : membersAndInitializers.IsNullableEnabledForInstanceConstructorsAndFields;
                DynAbs.Tracing.TraceSender.TraceExitMethod(10073, 204243, 204626);

                Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol.MembersAndInitializers
                f_10073_204374_204401(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                this_param)
                {
                    var return_v = this_param.GetMembersAndInitializers();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 204374, 204401);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10073, 204243, 204626);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10073, 204243, 204626);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        internal override void AddSynthesizedAttributes(PEModuleBuilder moduleBuilder, ref ArrayBuilder<SynthesizedAttributeData> attributes)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(10073, 204638, 206341);
                byte nullableContextValue = default(byte);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 204796, 204857);

                // LAFHIS
                //DynAbs.Tracing.TraceSender.TraceInvocationWrapper(() => base.AddSynthesizedAttributes(moduleBuilder, ref attributes), 10073, 204796, 204856);
                base.AddSynthesizedAttributes(moduleBuilder, ref attributes);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 204796, 204856);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 204873, 204912);

                var
                compilation = f_10073_204891_204911()
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 204926, 204987);

                NamedTypeSymbol
                baseType = f_10073_204953_204986(this)
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 205003, 205708) || true) && (baseType is object)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 205003, 205708);

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 205059, 205265) || true) && (f_10073_205063_205089(baseType))
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 205059, 205265);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 205131, 205246);

                        f_10073_205131_205245(ref attributes, f_10073_205171_205244(compilation, baseType, customModifiersCount: 0));
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 205059, 205265);
                    }

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 205285, 205486) || true) && (f_10073_205289_205321(baseType))
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 205285, 205486);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 205363, 205467);

                        f_10073_205363_205466(ref attributes, f_10073_205403_205465(moduleBuilder, this, baseType));
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 205285, 205486);
                    }

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 205506, 205693) || true) && (f_10073_205510_205539(baseType))
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 205506, 205693);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 205581, 205674);

                        f_10073_205581_205673(ref attributes, f_10073_205621_205672(compilation, baseType));
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 205506, 205693);
                    }
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 205003, 205708);
                }

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 205724, 206330) || true) && (f_10073_205728_205774(compilation, this))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 205724, 206330);

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 205808, 206052) || true) && (f_10073_205812_205873(this, out nullableContextValue))
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 205808, 206052);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 205915, 206033);

                        f_10073_205915_206032(ref attributes, f_10073_205955_206031(moduleBuilder, this, nullableContextValue));
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 205808, 206052);
                    }

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 206072, 206315) || true) && (baseType is object)
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 206072, 206315);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 206136, 206296);

                        f_10073_206136_206295(ref attributes, f_10073_206176_206294(moduleBuilder, this, nullableContextValue, TypeWithAnnotations.Create(baseType)));
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 206072, 206315);
                    }
                    DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 205724, 206330);
                }
                DynAbs.Tracing.TraceSender.TraceExitMethod(10073, 204638, 206341);

                Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                f_10073_204891_204911()
                {
                    var return_v = DeclaringCompilation;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 204891, 204911);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                f_10073_204953_204986(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                this_param)
                {
                    var return_v = this_param.BaseTypeNoUseSiteDiagnostics;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 204953, 204986);
                    return return_v;
                }


                bool
                f_10073_205063_205089(Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                type)
                {
                    var return_v = type.ContainsDynamic();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 205063, 205089);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedAttributeData?
                f_10073_205171_205244(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                type, int
                customModifiersCount)
                {
                    var return_v = this_param.SynthesizeDynamicAttribute((Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol)type, customModifiersCount: customModifiersCount);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 205171, 205244);
                    return return_v;
                }


                int
                f_10073_205131_205245(ref Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedAttributeData>
                attributes, Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedAttributeData?
                attribute)
                {
                    AddSynthesizedAttribute(ref attributes, attribute);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 205131, 205245);
                    return 0;
                }


                bool
                f_10073_205289_205321(Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                type)
                {
                    var return_v = type.ContainsNativeInteger();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 205289, 205321);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedAttributeData
                f_10073_205403_205465(Microsoft.CodeAnalysis.CSharp.Emit.PEModuleBuilder
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                symbol, Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                type)
                {
                    var return_v = this_param.SynthesizeNativeIntegerAttribute((Microsoft.CodeAnalysis.CSharp.Symbol)symbol, (Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol)type);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 205403, 205465);
                    return return_v;
                }


                int
                f_10073_205363_205466(ref Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedAttributeData>
                attributes, Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedAttributeData
                attribute)
                {
                    AddSynthesizedAttribute(ref attributes, attribute);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 205363, 205466);
                    return 0;
                }


                bool
                f_10073_205510_205539(Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                type)
                {
                    var return_v = type.ContainsTupleNames();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 205510, 205539);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedAttributeData?
                f_10073_205621_205672(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol
                type)
                {
                    var return_v = this_param.SynthesizeTupleNamesAttribute((Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol)type);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 205621, 205672);
                    return return_v;
                }


                int
                f_10073_205581_205673(ref Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedAttributeData>
                attributes, Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedAttributeData?
                attribute)
                {
                    AddSynthesizedAttribute(ref attributes, attribute);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 205581, 205673);
                    return 0;
                }


                bool
                f_10073_205728_205774(Microsoft.CodeAnalysis.CSharp.CSharpCompilation
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                symbol)
                {
                    var return_v = this_param.ShouldEmitNullableAttributes((Microsoft.CodeAnalysis.CSharp.Symbol)symbol);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 205728, 205774);
                    return return_v;
                }


                bool
                f_10073_205812_205873(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                this_param, out byte
                value)
                {
                    var return_v = this_param.ShouldEmitNullableContextValue(out value);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 205812, 205873);
                    return return_v;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedAttributeData
                f_10073_205955_206031(Microsoft.CodeAnalysis.CSharp.Emit.PEModuleBuilder
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                symbol, byte
                value)
                {
                    var return_v = this_param.SynthesizeNullableContextAttribute((Microsoft.CodeAnalysis.CSharp.Symbol)symbol, value);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 205955, 206031);
                    return return_v;
                }


                int
                f_10073_205915_206032(ref Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedAttributeData>
                attributes, Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedAttributeData
                attribute)
                {
                    AddSynthesizedAttribute(ref attributes, attribute);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 205915, 206032);
                    return 0;
                }


                Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedAttributeData
                f_10073_206176_206294(Microsoft.CodeAnalysis.CSharp.Emit.PEModuleBuilder
                this_param, Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                symbol, byte
                nullableContextValue, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations
                type)
                {
                    var return_v = this_param.SynthesizeNullableAttributeIfNecessary((Microsoft.CodeAnalysis.CSharp.Symbol)symbol, (byte?)nullableContextValue, type);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 206176, 206294);
                    return return_v;
                }


                int
                f_10073_206136_206295(ref Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedAttributeData>
                attributes, Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedAttributeData
                attribute)
                {
                    AddSynthesizedAttribute(ref attributes, attribute);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 206136, 206295);
                    return 0;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10073, 204638, 206341);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10073, 204638, 206341);
            }
        }

        internal bool ContainsExtensionMethods
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(10073, 206475, 206931);

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 206511, 206851) || true) && (!f_10073_206516_206556(_lazyContainsExtensionMethods))
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 206511, 206851);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 206598, 206738);

                        bool
                        containsExtensionMethods = ((f_10073_206632_206645(this) && (DynAbs.Tracing.TraceSender.Expression_True(10073, 206632, 206668) && f_10073_206649_206668_M(!this.IsGenericType))) || (DynAbs.Tracing.TraceSender.Expression_False(10073, 206631, 206691) || f_10073_206673_206691(this))) && (DynAbs.Tracing.TraceSender.Expression_True(10073, 206630, 206737) && f_10073_206696_206737(this.declaration))
                        ;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 206760, 206832);

                        _lazyContainsExtensionMethods = f_10073_206792_206831(containsExtensionMethods);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 206511, 206851);
                    }
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 206871, 206916);

                    return f_10073_206878_206915(_lazyContainsExtensionMethods);
                    DynAbs.Tracing.TraceSender.TraceExitMethod(10073, 206475, 206931);

                    bool
                    f_10073_206516_206556(Microsoft.CodeAnalysis.ThreeState
                    value)
                    {
                        var return_v = value.HasValue();
                        DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 206516, 206556);
                        return return_v;
                    }


                    bool
                    f_10073_206632_206645(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                    this_param)
                    {
                        var return_v = this_param.IsStatic;
                        DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 206632, 206645);
                        return return_v;
                    }


                    bool
                    f_10073_206649_206668_M(bool
                    i)
                    {
                        var return_v = i;
                        DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 206649, 206668);
                        return return_v;
                    }


                    bool
                    f_10073_206673_206691(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                    this_param)
                    {
                        var return_v = this_param.IsScriptClass;
                        DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 206673, 206691);
                        return return_v;
                    }


                    bool
                    f_10073_206696_206737(Microsoft.CodeAnalysis.CSharp.MergedTypeDeclaration
                    this_param)
                    {
                        var return_v = this_param.ContainsExtensionMethods;
                        DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 206696, 206737);
                        return return_v;
                    }


                    Microsoft.CodeAnalysis.ThreeState
                    f_10073_206792_206831(bool
                    value)
                    {
                        var return_v = value.ToThreeState();
                        DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 206792, 206831);
                        return return_v;
                    }


                    bool
                    f_10073_206878_206915(Microsoft.CodeAnalysis.ThreeState
                    value)
                    {
                        var return_v = value.Value();
                        DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 206878, 206915);
                        return return_v;
                    }

                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10073, 206412, 206942);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10073, 206412, 206942);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        internal bool AnyMemberHasAttributes
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(10073, 207015, 207393);

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 207051, 207315) || true) && (!f_10073_207056_207094(_lazyAnyMemberHasAttributes))
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(10073, 207051, 207315);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 207136, 207206);

                        bool
                        anyMemberHasAttributes = f_10073_207166_207205(this.declaration)
                        ;
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 207228, 207296);

                        _lazyAnyMemberHasAttributes = f_10073_207258_207295(anyMemberHasAttributes);
                        DynAbs.Tracing.TraceSender.TraceExitCondition(10073, 207051, 207315);
                    }
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 207335, 207378);

                    return f_10073_207342_207377(_lazyAnyMemberHasAttributes);
                    DynAbs.Tracing.TraceSender.TraceExitMethod(10073, 207015, 207393);

                    bool
                    f_10073_207056_207094(Microsoft.CodeAnalysis.ThreeState
                    value)
                    {
                        var return_v = value.HasValue();
                        DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 207056, 207094);
                        return return_v;
                    }


                    bool
                    f_10073_207166_207205(Microsoft.CodeAnalysis.CSharp.MergedTypeDeclaration
                    this_param)
                    {
                        var return_v = this_param.AnyMemberHasAttributes;
                        DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 207166, 207205);
                        return return_v;
                    }


                    Microsoft.CodeAnalysis.ThreeState
                    f_10073_207258_207295(bool
                    value)
                    {
                        var return_v = value.ToThreeState();
                        DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 207258, 207295);
                        return return_v;
                    }


                    bool
                    f_10073_207342_207377(Microsoft.CodeAnalysis.ThreeState
                    value)
                    {
                        var return_v = value.Value();
                        DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 207342, 207377);
                        return return_v;
                    }

                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10073, 206954, 207404);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10073, 206954, 207404);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override bool MightContainExtensionMethods
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(10073, 207490, 207578);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 207526, 207563);

                    return f_10073_207533_207562(this);
                    DynAbs.Tracing.TraceSender.TraceExitMethod(10073, 207490, 207578);

                    bool
                    f_10073_207533_207562(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
                    this_param)
                    {
                        var return_v = this_param.ContainsExtensionMethods;
                        DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 207533, 207562);
                        return return_v;
                    }

                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10073, 207416, 207589);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10073, 207416, 207589);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public sealed override NamedTypeSymbol ConstructedFrom
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(10073, 207702, 207722);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 207708, 207720);

                    return this;
                    DynAbs.Tracing.TraceSender.TraceExitMethod(10073, 207702, 207722);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(10073, 207623, 207733);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10073, 207623, 207733);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        static SourceMemberContainerTypeSymbol()
        {
            DynAbs.Tracing.TraceSender.TraceEnterStaticConstructor(10073, 846, 207740);
            DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 5922, 6075);
            s_duplicateRecordMemberSignatureDictionary = f_10073_5980_6075(MemberSignatureComparer.RecordAPISignatureComparer); DynAbs.Tracing.TraceSender.TraceSimpleStatement(10073, 7236, 7336);
            s_emptyTypeMembers = f_10073_7257_7336(EmptyComparer.Instance); DynAbs.Tracing.TraceSender.TraceSimpleStatement(10217, 67401, 67782);
            ReportBadReturn = (DiagnosticBag diagnostics, MethodSymbol overriddenMethod, MethodSymbol overridingMethod, bool topLevel, Location location)
                        => diagnostics.Add(topLevel ?
                            ErrorCode.WRN_TopLevelNullabilityMismatchInReturnTypeOnOverride :
                            ErrorCode.WRN_NullabilityMismatchInReturnTypeOnOverride,
                            location); DynAbs.Tracing.TraceSender.TraceSimpleStatement(10217, 67851, 68354);
            ReportBadParameter = (DiagnosticBag diagnostics, MethodSymbol overriddenMethod, MethodSymbol overridingMethod, ParameterSymbol overridingParameter, bool topLevel, Location location)
                        => diagnostics.Add(
                            topLevel ? ErrorCode.WRN_TopLevelNullabilityMismatchInParameterTypeOnOverride : ErrorCode.WRN_NullabilityMismatchInParameterTypeOnOverride,
                            location,
                            new FormattedSymbol(overridingParameter, SymbolDisplayFormat.ShortFormat)); DynAbs.Tracing.TraceSender.TraceExitStaticConstructor(10073, 846, 207740);

            DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(10073, 846, 207740);
        }

        int ___ignore_me___ = DynAbs.Tracing.TraceSender.TraceBeforeConstructor(10073, 846, 207740);

        static Microsoft.CodeAnalysis.PooledObjects.ObjectPool<Microsoft.CodeAnalysis.PooledObjects.PooledDictionary<Microsoft.CodeAnalysis.CSharp.Symbol, Microsoft.CodeAnalysis.CSharp.Symbol>>
        f_10073_5980_6075(Microsoft.CodeAnalysis.CSharp.Symbols.MemberSignatureComparer
        keyComparer)
        {
            var return_v = PooledDictionary<Symbol, Symbol>.CreatePool((System.Collections.Generic.IEqualityComparer<Microsoft.CodeAnalysis.CSharp.Symbol>)keyComparer);
            DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 5980, 6075);
            return return_v;
        }


        static System.Collections.Generic.Dictionary<string, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol>>
        f_10073_7257_7336(Roslyn.Utilities.EmptyComparer
        comparer)
        {
            var return_v = new System.Collections.Generic.Dictionary<string, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol>>((System.Collections.Generic.IEqualityComparer<string>)comparer);
            DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 7257, 7336);
            return return_v;
        }


        Microsoft.CodeAnalysis.CSharp.DeclarationKind
        f_10073_8309_8325(Microsoft.CodeAnalysis.CSharp.MergedTypeDeclaration
        this_param)
        {
            var return_v = this_param.Kind;
            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 8309, 8325);
            return return_v;
        }


        Microsoft.CodeAnalysis.TypeKind
        f_10073_8309_8338(Microsoft.CodeAnalysis.CSharp.DeclarationKind
        kind)
        {
            var return_v = kind.ToTypeKind();
            DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 8309, 8338);
            return return_v;
        }


        Microsoft.CodeAnalysis.CSharp.DeclarationModifiers
        f_10073_8369_8405(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
        this_param, Microsoft.CodeAnalysis.TypeKind
        typeKind, Microsoft.CodeAnalysis.DiagnosticBag
        diagnostics)
        {
            var return_v = this_param.MakeModifiers(typeKind, diagnostics);
            DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 8369, 8405);
            return return_v;
        }


        System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.SingleTypeDeclaration>
        f_10073_8456_8480(Microsoft.CodeAnalysis.CSharp.MergedTypeDeclaration
        this_param)
        {
            var return_v = this_param.Declarations;
            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 8456, 8480);
            return return_v;
        }


        int
        f_10073_8514_8565(Microsoft.CodeAnalysis.DiagnosticBag
        this_param, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Diagnostic>
        diagnostics)
        {
            this_param.AddRange<Microsoft.CodeAnalysis.Diagnostic>(diagnostics);
            DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 8514, 8565);
            return 0;
        }


        System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.SingleTypeDeclaration>
        f_10073_8456_8480_I(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.SingleTypeDeclaration>
        i)
        {
            var return_v = i;
            DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 8456, 8480);
            return return_v;
        }


        System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Location>
        f_10073_8912_8921()
        {
            var return_v = Locations;
            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 8912, 8921);
            return return_v;
        }


        Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo
        f_10073_8857_8931(Microsoft.CodeAnalysis.DiagnosticBag
        diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
        code, Microsoft.CodeAnalysis.Location
        location, params object[]
        args)
        {
            var return_v = diagnostics.Add(code, location, args);
            DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 8857, 8931);
            return return_v;
        }


        Microsoft.CodeAnalysis.SpecialType
        f_10073_9340_9357(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
        this_param)
        {
            var return_v = this_param.MakeSpecialType();
            DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 9340, 9357);
            return return_v;
        }


        Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol.Flags
        f_10073_9419_9451(Microsoft.CodeAnalysis.SpecialType
        specialType, Microsoft.CodeAnalysis.TypeKind
        typeKind)
        {
            var return_v = new Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol.Flags(specialType, typeKind);
            DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 9419, 9451);
            return return_v;
        }


        Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol?
        f_10073_9489_9508(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
        this_param)
        {
            var return_v = this_param.ContainingType;
            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 9489, 9508);
            return return_v;
        }


        bool?
        f_10073_9527_9551_M(bool?
        i)
        {
            var return_v = i;
            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 9527, 9551);
            return return_v;
        }


        Microsoft.CodeAnalysis.Accessibility
        f_10073_9563_9589(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
        this_param)
        {
            var return_v = this_param.DeclaredAccessibility;
            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 9563, 9589);
            return return_v;
        }


        bool
        f_10073_9563_9604(Microsoft.CodeAnalysis.Accessibility
        accessibility)
        {
            var return_v = accessibility.HasProtected();
            DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 9563, 9604);
            return return_v;
        }


        Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol?
        f_10073_9702_9716()
        {
            var return_v = ContainingType;
            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 9702, 9716);
            return return_v;
        }


        Microsoft.CodeAnalysis.CSharp.ErrorCode
        f_10073_9654_9717(Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol?
        containingType)
        {
            var return_v = AccessCheck.GetProtectedMemberInSealedTypeError(containingType);
            DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 9654, 9717);
            return return_v;
        }


        System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Location>
        f_10073_9719_9728()
        {
            var return_v = Locations;
            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(10073, 9719, 9728);
            return return_v;
        }


        Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo
        f_10073_9638_9738(Microsoft.CodeAnalysis.DiagnosticBag
        diagnostics, Microsoft.CodeAnalysis.CSharp.ErrorCode
        code, Microsoft.CodeAnalysis.Location
        location, params object[]
        args)
        {
            var return_v = diagnostics.Add(code, location, args);
            DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 9638, 9738);
            return return_v;
        }


        static Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol.TupleExtraData?
        f_10073_8156_8165_C(Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol.TupleExtraData?
        i)
        {
            var return_v = i;
            DynAbs.Tracing.TraceSender.TraceBaseCall(10073, 7906, 9884);
            return return_v;
        }


        bool
        f_10073_31624_31660(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
        this_param, Microsoft.CodeAnalysis.CSharp.DeclarationModifiers
        flag)
        {
            var return_v = this_param.HasFlag(flag);
            DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 31624, 31660);
            return return_v;
        }


        bool
        f_10073_31718_31751(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
        this_param, Microsoft.CodeAnalysis.CSharp.DeclarationModifiers
        flag)
        {
            var return_v = this_param.HasFlag(flag);
            DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 31718, 31751);
            return return_v;
        }


        bool
        f_10073_31799_31837(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
        this_param, Microsoft.CodeAnalysis.CSharp.DeclarationModifiers
        flag)
        {
            var return_v = this_param.HasFlag(flag);
            DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 31799, 31837);
            return return_v;
        }


        bool
        f_10073_31883_31919(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
        this_param, Microsoft.CodeAnalysis.CSharp.DeclarationModifiers
        flag)
        {
            var return_v = this_param.HasFlag(flag);
            DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 31883, 31919);
            return return_v;
        }


        bool
        f_10073_31967_32005(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
        this_param, Microsoft.CodeAnalysis.CSharp.DeclarationModifiers
        flag)
        {
            var return_v = this_param.HasFlag(flag);
            DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 31967, 32005);
            return return_v;
        }


        bool
        f_10073_32045_32082(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
        this_param, Microsoft.CodeAnalysis.CSharp.DeclarationModifiers
        flag)
        {
            var return_v = this_param.HasFlag(flag);
            DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 32045, 32082);
            return return_v;
        }


        bool
        f_10073_32118_32151(Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol
        this_param, Microsoft.CodeAnalysis.CSharp.DeclarationModifiers
        flag)
        {
            var return_v = this_param.HasFlag(flag);
            DynAbs.Tracing.TraceSender.TraceEndInvocation(10073, 32118, 32151);
            return return_v;
        }

    }
}
