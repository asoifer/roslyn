// Licensed to the .NET Foundation under one or more agreements.
// The .NET Foundation licenses this file to you under the MIT license.
// See the LICENSE file in the project root for more information.

using System;
using System.Collections.Immutable;
using System.Diagnostics.CodeAnalysis;
using System.Threading;
using Microsoft.CodeAnalysis;
using Microsoft.CodeAnalysis.Diagnostics;

namespace Roslyn.Utilities
{
    internal static class GeneratedCodeUtilities
    {
        private static readonly string[] s_autoGeneratedStrings;

        internal static bool IsGeneratedSymbolWithGeneratedCodeAttribute(
                    ISymbol symbol, INamedTypeSymbol generatedCodeAttribute)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterStaticMethod(331, 613, 1971);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(331, 773, 808);

                f_331_773_807(symbol != null);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(331, 822, 873);

                f_331_822_872(generatedCodeAttribute != null);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(331, 1125, 1809) || true) && (f_331_1129_1140(symbol) != SymbolKind.Namespace)
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(331, 1125, 1809);

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(331, 1400, 1521) || true) && (symbol.DeclaringSyntaxReferences.Length > 1)
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(331, 1400, 1521);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(331, 1489, 1502);

                        return false;
                        DynAbs.Tracing.TraceSender.TraceExitCondition(331, 1400, 1521);
                    }
                    try
                    {
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(331, 1541, 1794);
                        foreach (var attribute in f_331_1567_1589_I(f_331_1567_1589(symbol)))
                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(331, 1541, 1794);

                            if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(331, 1631, 1775) || true) && (f_331_1635_1690(generatedCodeAttribute, f_331_1665_1689(attribute)))
                            )

                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(331, 1631, 1775);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(331, 1740, 1752);

                                return true;
                                DynAbs.Tracing.TraceSender.TraceExitCondition(331, 1631, 1775);
                            }
                            DynAbs.Tracing.TraceSender.TraceExitCondition(331, 1541, 1794);
                        }
                    }
                    catch (System.Exception)
                    {
                        DynAbs.Tracing.TraceSender.TraceExitLoopByException(331, 1, 254);
                        throw;
                    }
                    finally
                    {
                        DynAbs.Tracing.TraceSender.TraceExitLoop(331, 1, 254);
                    }
                    DynAbs.Tracing.TraceSender.TraceExitCondition(331, 1125, 1809);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(331, 1825, 1960);

                return f_331_1832_1855(symbol) != null && (DynAbs.Tracing.TraceSender.Expression_True(331, 1832, 1959) && f_331_1867_1959(f_331_1911_1934(symbol), generatedCodeAttribute));
                DynAbs.Tracing.TraceSender.TraceExitStaticMethod(331, 613, 1971);

                int
                f_331_773_807(bool
                b)
                {
                    RoslynDebug.Assert(b);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(331, 773, 807);
                    return 0;
                }


                int
                f_331_822_872(bool
                b)
                {
                    RoslynDebug.Assert(b);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(331, 822, 872);
                    return 0;
                }


                Microsoft.CodeAnalysis.SymbolKind
                f_331_1129_1140(Microsoft.CodeAnalysis.ISymbol
                this_param)
                {
                    var return_v = this_param.Kind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(331, 1129, 1140);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.AttributeData>
                f_331_1567_1589(Microsoft.CodeAnalysis.ISymbol
                this_param)
                {
                    var return_v = this_param.GetAttributes();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(331, 1567, 1589);
                    return return_v;
                }


                Microsoft.CodeAnalysis.INamedTypeSymbol?
                f_331_1665_1689(Microsoft.CodeAnalysis.AttributeData
                this_param)
                {
                    var return_v = this_param.AttributeClass;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(331, 1665, 1689);
                    return return_v;
                }


                bool
                f_331_1635_1690(Microsoft.CodeAnalysis.INamedTypeSymbol
                this_param, Microsoft.CodeAnalysis.INamedTypeSymbol?
                other)
                {
                    var return_v = this_param.Equals((Microsoft.CodeAnalysis.ISymbol?)other);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(331, 1635, 1690);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.AttributeData>
                f_331_1567_1589_I(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.AttributeData>
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(331, 1567, 1589);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ISymbol
                f_331_1832_1855(Microsoft.CodeAnalysis.ISymbol
                this_param)
                {
                    var return_v = this_param.ContainingSymbol;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(331, 1832, 1855);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ISymbol
                f_331_1911_1934(Microsoft.CodeAnalysis.ISymbol
                this_param)
                {
                    var return_v = this_param.ContainingSymbol;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(331, 1911, 1934);
                    return return_v;
                }


                bool
                f_331_1867_1959(Microsoft.CodeAnalysis.ISymbol
                symbol, Microsoft.CodeAnalysis.INamedTypeSymbol
                generatedCodeAttribute)
                {
                    var return_v = IsGeneratedSymbolWithGeneratedCodeAttribute(symbol, generatedCodeAttribute);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(331, 1867, 1959);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(331, 613, 1971);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(331, 613, 1971);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        internal static bool IsGeneratedCode(
                    SyntaxTree tree, Func<SyntaxTrivia, bool> isComment, CancellationToken cancellationToken)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterStaticMethod(331, 1983, 2291);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(331, 2148, 2280);

                return f_331_2155_2189(f_331_2175_2188(tree)) || (DynAbs.Tracing.TraceSender.Expression_False(331, 2155, 2279) || f_331_2213_2279(tree, isComment, cancellationToken));
                DynAbs.Tracing.TraceSender.TraceExitStaticMethod(331, 1983, 2291);

                string
                f_331_2175_2188(Microsoft.CodeAnalysis.SyntaxTree
                this_param)
                {
                    var return_v = this_param.FilePath;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(331, 2175, 2188);
                    return return_v;
                }


                bool
                f_331_2155_2189(string
                filePath)
                {
                    var return_v = IsGeneratedCodeFile(filePath);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(331, 2155, 2189);
                    return return_v;
                }


                bool
                f_331_2213_2279(Microsoft.CodeAnalysis.SyntaxTree
                tree, System.Func<Microsoft.CodeAnalysis.SyntaxTrivia, bool>
                isComment, System.Threading.CancellationToken
                cancellationToken)
                {
                    var return_v = BeginsWithAutoGeneratedComment(tree, isComment, cancellationToken);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(331, 2213, 2279);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(331, 1983, 2291);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(331, 1983, 2291);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        internal static bool IsGeneratedCode(string? filePath, SyntaxNode root, Func<SyntaxTrivia, bool> isComment)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterStaticMethod(331, 2303, 2554);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(331, 2435, 2543);

                return f_331_2442_2471(filePath) || (DynAbs.Tracing.TraceSender.Expression_False(331, 2442, 2542) || f_331_2495_2542(root, isComment));
                DynAbs.Tracing.TraceSender.TraceExitStaticMethod(331, 2303, 2554);

                bool
                f_331_2442_2471(string?
                filePath)
                {
                    var return_v = IsGeneratedCodeFile(filePath);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(331, 2442, 2471);
                    return return_v;
                }


                bool
                f_331_2495_2542(Microsoft.CodeAnalysis.SyntaxNode
                root, System.Func<Microsoft.CodeAnalysis.SyntaxTrivia, bool>
                isComment)
                {
                    var return_v = BeginsWithAutoGeneratedComment(root, isComment);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(331, 2495, 2542);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(331, 2303, 2554);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(331, 2303, 2554);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private static bool IsGeneratedCodeFile([NotNullWhen(returnValue: true)] string? filePath)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterStaticMethod(331, 2566, 3834);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(331, 2681, 3794) || true) && (!f_331_2686_2722(filePath))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(331, 2681, 3794);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(331, 2756, 2807);

                    var
                    fileName = f_331_2771_2806(filePath)
                    ;

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(331, 2825, 2984) || true) && (f_331_2829_2911(fileName, "TemporaryGeneratedFile_", StringComparison.OrdinalIgnoreCase))
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(331, 2825, 2984);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(331, 2953, 2965);

                        return true;
                        DynAbs.Tracing.TraceSender.TraceExitCondition(331, 2825, 2984);
                    }
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(331, 3004, 3057);

                    var
                    extension = f_331_3020_3056(fileName)
                    ;

                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(331, 3075, 3779) || true) && (!f_331_3080_3111(extension))
                    )

                    {
                        DynAbs.Tracing.TraceSender.TraceEnterCondition(331, 3075, 3779);
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(331, 3153, 3245);

                        var
                        fileNameWithoutExtension = f_331_3184_3244(filePath, includeExtension: false)
                        ;

                        if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(331, 3267, 3760) || true) && (f_331_3271_3353(fileNameWithoutExtension, ".designer", StringComparison.OrdinalIgnoreCase) || (DynAbs.Tracing.TraceSender.Expression_False(331, 3271, 3465) || f_331_3382_3465(fileNameWithoutExtension, ".generated", StringComparison.OrdinalIgnoreCase)) || (DynAbs.Tracing.TraceSender.Expression_False(331, 3271, 3569) || f_331_3494_3569(fileNameWithoutExtension, ".g", StringComparison.OrdinalIgnoreCase)) || (DynAbs.Tracing.TraceSender.Expression_False(331, 3271, 3675) || f_331_3598_3675(fileNameWithoutExtension, ".g.i", StringComparison.OrdinalIgnoreCase)))
                        )

                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(331, 3267, 3760);
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(331, 3725, 3737);

                            return true;
                            DynAbs.Tracing.TraceSender.TraceExitCondition(331, 3267, 3760);
                        }
                        DynAbs.Tracing.TraceSender.TraceExitCondition(331, 3075, 3779);
                    }
                    DynAbs.Tracing.TraceSender.TraceExitCondition(331, 2681, 3794);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(331, 3810, 3823);

                return false;
                DynAbs.Tracing.TraceSender.TraceExitStaticMethod(331, 2566, 3834);

                bool
                f_331_2686_2722(string?
                value)
                {
                    var return_v = RoslynString.IsNullOrEmpty(value);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(331, 2686, 2722);
                    return return_v;
                }


                string?
                f_331_2771_2806(string
                path)
                {
                    var return_v = PathUtilities.GetFileName(path);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(331, 2771, 2806);
                    return return_v;
                }


                bool
                f_331_2829_2911(string
                this_param, string
                value, System.StringComparison
                comparisonType)
                {
                    var return_v = this_param.StartsWith(value, comparisonType);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(331, 2829, 2911);
                    return return_v;
                }


                string
                f_331_3020_3056(string
                path)
                {
                    var return_v = PathUtilities.GetExtension(path);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(331, 3020, 3056);
                    return return_v;
                }


                bool
                f_331_3080_3111(string
                value)
                {
                    var return_v = string.IsNullOrEmpty(value);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(331, 3080, 3111);
                    return return_v;
                }


                string?
                f_331_3184_3244(string
                path, bool
                includeExtension)
                {
                    var return_v = PathUtilities.GetFileName(path, includeExtension: includeExtension);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(331, 3184, 3244);
                    return return_v;
                }


                bool
                f_331_3271_3353(string
                this_param, string
                value, System.StringComparison
                comparisonType)
                {
                    var return_v = this_param.EndsWith(value, comparisonType);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(331, 3271, 3353);
                    return return_v;
                }


                bool
                f_331_3382_3465(string
                this_param, string
                value, System.StringComparison
                comparisonType)
                {
                    var return_v = this_param.EndsWith(value, comparisonType);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(331, 3382, 3465);
                    return return_v;
                }


                bool
                f_331_3494_3569(string
                this_param, string
                value, System.StringComparison
                comparisonType)
                {
                    var return_v = this_param.EndsWith(value, comparisonType);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(331, 3494, 3569);
                    return return_v;
                }


                bool
                f_331_3598_3675(string
                this_param, string
                value, System.StringComparison
                comparisonType)
                {
                    var return_v = this_param.EndsWith(value, comparisonType);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(331, 3598, 3675);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(331, 2566, 3834);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(331, 2566, 3834);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private static bool BeginsWithAutoGeneratedComment(SyntaxNode root, Func<SyntaxTrivia, bool> isComment)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterStaticMethod(331, 3846, 4784);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(331, 3974, 4744) || true) && (f_331_3978_3999(root))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(331, 3974, 4744);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(331, 4033, 4077);

                    var
                    leadingTrivia = f_331_4053_4076(root)
                    ;
                    try
                    {
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(331, 4097, 4729);
                        foreach (var trivia in f_331_4120_4133_I(leadingTrivia))
                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(331, 4097, 4729);

                            if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(331, 4175, 4279) || true) && (!f_331_4180_4197(isComment, trivia))
                            )

                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(331, 4175, 4279);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(331, 4247, 4256);

                                continue;
                                DynAbs.Tracing.TraceSender.TraceExitCondition(331, 4175, 4279);
                            }
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(331, 4303, 4332);

                            var
                            text = trivia.ToString()
                            ;
                            try
                            {
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(331, 4456, 4710);
                                foreach (var autoGenerated in f_331_4486_4508_I(s_autoGeneratedStrings))
                                {
                                    DynAbs.Tracing.TraceSender.TraceEnterCondition(331, 4456, 4710);

                                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(331, 4558, 4687) || true) && (f_331_4562_4590(text, autoGenerated))
                                    )

                                    {
                                        DynAbs.Tracing.TraceSender.TraceEnterCondition(331, 4558, 4687);
                                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(331, 4648, 4660);

                                        return true;
                                        DynAbs.Tracing.TraceSender.TraceExitCondition(331, 4558, 4687);
                                    }
                                    DynAbs.Tracing.TraceSender.TraceExitCondition(331, 4456, 4710);
                                }
                            }
                            catch (System.Exception)
                            {
                                DynAbs.Tracing.TraceSender.TraceExitLoopByException(331, 1, 255);
                                throw;
                            }
                            finally
                            {
                                DynAbs.Tracing.TraceSender.TraceExitLoop(331, 1, 255);
                            }
                            DynAbs.Tracing.TraceSender.TraceExitCondition(331, 4097, 4729);
                        }
                    }
                    catch (System.Exception)
                    {
                        DynAbs.Tracing.TraceSender.TraceExitLoopByException(331, 1, 633);
                        throw;
                    }
                    finally
                    {
                        DynAbs.Tracing.TraceSender.TraceExitLoop(331, 1, 633);
                    }
                    DynAbs.Tracing.TraceSender.TraceExitCondition(331, 3974, 4744);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(331, 4760, 4773);

                return false;
                DynAbs.Tracing.TraceSender.TraceExitStaticMethod(331, 3846, 4784);

                bool
                f_331_3978_3999(Microsoft.CodeAnalysis.SyntaxNode
                this_param)
                {
                    var return_v = this_param.HasLeadingTrivia;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(331, 3978, 3999);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SyntaxTriviaList
                f_331_4053_4076(Microsoft.CodeAnalysis.SyntaxNode
                this_param)
                {
                    var return_v = this_param.GetLeadingTrivia();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(331, 4053, 4076);
                    return return_v;
                }


                bool
                f_331_4180_4197(System.Func<Microsoft.CodeAnalysis.SyntaxTrivia, bool>
                this_param, Microsoft.CodeAnalysis.SyntaxTrivia
                arg)
                {
                    var return_v = this_param.Invoke(arg);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(331, 4180, 4197);
                    return return_v;
                }


                bool
                f_331_4562_4590(string
                this_param, string
                value)
                {
                    var return_v = this_param.Contains(value);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(331, 4562, 4590);
                    return return_v;
                }


                string[]
                f_331_4486_4508_I(string[]
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(331, 4486, 4508);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SyntaxTriviaList
                f_331_4120_4133_I(Microsoft.CodeAnalysis.SyntaxTriviaList
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(331, 4120, 4133);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(331, 3846, 4784);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(331, 3846, 4784);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private static bool BeginsWithAutoGeneratedComment(
                    SyntaxTree tree, Func<SyntaxTrivia, bool> isComment, CancellationToken cancellationToken)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterStaticMethod(331, 4796, 5842);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(331, 4975, 5018);

                var
                root = f_331_4986_5017(tree, cancellationToken)
                ;

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(331, 5032, 5802) || true) && (f_331_5036_5057(root))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(331, 5032, 5802);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(331, 5091, 5135);

                    var
                    leadingTrivia = f_331_5111_5134(root)
                    ;
                    try
                    {
                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(331, 5155, 5787);
                        foreach (var trivia in f_331_5178_5191_I(leadingTrivia))
                        {
                            DynAbs.Tracing.TraceSender.TraceEnterCondition(331, 5155, 5787);

                            if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(331, 5233, 5337) || true) && (!f_331_5238_5255(isComment, trivia))
                            )

                            {
                                DynAbs.Tracing.TraceSender.TraceEnterCondition(331, 5233, 5337);
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(331, 5305, 5314);

                                continue;
                                DynAbs.Tracing.TraceSender.TraceExitCondition(331, 5233, 5337);
                            }
                            DynAbs.Tracing.TraceSender.TraceSimpleStatement(331, 5361, 5390);

                            var
                            text = trivia.ToString()
                            ;
                            try
                            {
                                DynAbs.Tracing.TraceSender.TraceSimpleStatement(331, 5514, 5768);
                                foreach (var autoGenerated in f_331_5544_5566_I(s_autoGeneratedStrings))
                                {
                                    DynAbs.Tracing.TraceSender.TraceEnterCondition(331, 5514, 5768);

                                    if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(331, 5616, 5745) || true) && (f_331_5620_5648(text, autoGenerated))
                                    )

                                    {
                                        DynAbs.Tracing.TraceSender.TraceEnterCondition(331, 5616, 5745);
                                        DynAbs.Tracing.TraceSender.TraceSimpleStatement(331, 5706, 5718);

                                        return true;
                                        DynAbs.Tracing.TraceSender.TraceExitCondition(331, 5616, 5745);
                                    }
                                    DynAbs.Tracing.TraceSender.TraceExitCondition(331, 5514, 5768);
                                }
                            }
                            catch (System.Exception)
                            {
                                DynAbs.Tracing.TraceSender.TraceExitLoopByException(331, 1, 255);
                                throw;
                            }
                            finally
                            {
                                DynAbs.Tracing.TraceSender.TraceExitLoop(331, 1, 255);
                            }
                            DynAbs.Tracing.TraceSender.TraceExitCondition(331, 5155, 5787);
                        }
                    }
                    catch (System.Exception)
                    {
                        DynAbs.Tracing.TraceSender.TraceExitLoopByException(331, 1, 633);
                        throw;
                    }
                    finally
                    {
                        DynAbs.Tracing.TraceSender.TraceExitLoop(331, 1, 633);
                    }
                    DynAbs.Tracing.TraceSender.TraceExitCondition(331, 5032, 5802);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(331, 5818, 5831);

                return false;
                DynAbs.Tracing.TraceSender.TraceExitStaticMethod(331, 4796, 5842);

                Microsoft.CodeAnalysis.SyntaxNode
                f_331_4986_5017(Microsoft.CodeAnalysis.SyntaxTree
                this_param, System.Threading.CancellationToken
                cancellationToken)
                {
                    var return_v = this_param.GetRoot(cancellationToken);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(331, 4986, 5017);
                    return return_v;
                }


                bool
                f_331_5036_5057(Microsoft.CodeAnalysis.SyntaxNode
                this_param)
                {
                    var return_v = this_param.HasLeadingTrivia;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(331, 5036, 5057);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SyntaxTriviaList
                f_331_5111_5134(Microsoft.CodeAnalysis.SyntaxNode
                this_param)
                {
                    var return_v = this_param.GetLeadingTrivia();
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(331, 5111, 5134);
                    return return_v;
                }


                bool
                f_331_5238_5255(System.Func<Microsoft.CodeAnalysis.SyntaxTrivia, bool>
                this_param, Microsoft.CodeAnalysis.SyntaxTrivia
                arg)
                {
                    var return_v = this_param.Invoke(arg);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(331, 5238, 5255);
                    return return_v;
                }


                bool
                f_331_5620_5648(string
                this_param, string
                value)
                {
                    var return_v = this_param.Contains(value);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(331, 5620, 5648);
                    return return_v;
                }


                string[]
                f_331_5544_5566_I(string[]
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(331, 5544, 5566);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SyntaxTriviaList
                f_331_5178_5191_I(Microsoft.CodeAnalysis.SyntaxTriviaList
                i)
                {
                    var return_v = i;
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(331, 5178, 5191);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(331, 4796, 5842);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(331, 4796, 5842);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        internal static GeneratedKind GetIsGeneratedCodeFromOptions(ImmutableDictionary<string, string> options)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterStaticMethod(331, 5854, 6516);
                string optionValue = default(string);
                bool boolValue = default(bool);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(331, 6107, 6366) || true) && (f_331_6111_6173(options, "generated_code", out optionValue) && (DynAbs.Tracing.TraceSender.Expression_True(331, 6111, 6239) && f_331_6194_6239(optionValue, out boolValue)))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(331, 6107, 6366);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(331, 6273, 6351);

                    return (DynAbs.Tracing.TraceSender.Conditional_F1(331, 6280, 6289) || ((boolValue && DynAbs.Tracing.TraceSender.Conditional_F2(331, 6292, 6321)) || DynAbs.Tracing.TraceSender.Conditional_F3(331, 6324, 6350))) ? GeneratedKind.MarkedGenerated : GeneratedKind.NotGenerated;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(331, 6107, 6366);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(331, 6476, 6505);

                return GeneratedKind.Unknown;
                DynAbs.Tracing.TraceSender.TraceExitStaticMethod(331, 5854, 6516);

                bool
                f_331_6111_6173(System.Collections.Immutable.ImmutableDictionary<string, string>
                this_param, string
                key, out string?
                value)
                {
                    var return_v = this_param.TryGetValue(key, out value);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(331, 6111, 6173);
                    return return_v;
                }


                bool
                f_331_6194_6239(string
                value, out bool
                result)
                {
                    var return_v = bool.TryParse(value, out result);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(331, 6194, 6239);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(331, 5854, 6516);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(331, 5854, 6516);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        internal static bool? GetIsGeneratedCodeFromOptions(AnalyzerConfigOptions options)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterStaticMethod(331, 6528, 7090);
                string? optionValue = default(string?);
                bool boolValue = default(bool);

                if ((DynAbs.Tracing.TraceSender.TraceSimpleStatement(331, 6759, 6957) || true) && (f_331_6763_6825(options, "generated_code", out optionValue) && (DynAbs.Tracing.TraceSender.Expression_True(331, 6763, 6891) && f_331_6846_6891(optionValue, out boolValue)))
                )

                {
                    DynAbs.Tracing.TraceSender.TraceEnterCondition(331, 6759, 6957);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(331, 6925, 6942);

                    return boolValue;
                    DynAbs.Tracing.TraceSender.TraceExitCondition(331, 6759, 6957);
                }
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(331, 7067, 7079);

                return null;
                DynAbs.Tracing.TraceSender.TraceExitStaticMethod(331, 6528, 7090);

                bool
                f_331_6763_6825(Microsoft.CodeAnalysis.Diagnostics.AnalyzerConfigOptions
                this_param, string
                key, out string?
                value)
                {
                    var return_v = this_param.TryGetValue(key, out value);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(331, 6763, 6825);
                    return return_v;
                }


                bool
                f_331_6846_6891(string
                value, out bool
                result)
                {
                    var return_v = bool.TryParse(value, out result);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(331, 6846, 6891);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(331, 6528, 7090);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(331, 6528, 7090);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        static GeneratedCodeUtilities()
        {
            DynAbs.Tracing.TraceSender.TraceEnterStaticConstructor(331, 436, 7097);
            DynAbs.Tracing.TraceSender.TraceSimpleStatement(331, 530, 600);
            s_autoGeneratedStrings = new[] { "<autogenerated", "<auto-generated" }; DynAbs.Tracing.TraceSender.TraceExitStaticConstructor(331, 436, 7097);

            DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(331, 436, 7097);
        }

    }
}
